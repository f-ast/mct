3c3
< module uart_receiver (clk, wb_rst_i, lcr, rf_pop, srx_pad_i, enable, counter_t, rf_count, rf_data_out, rf_error_bit, rf_overrun, rx_reset, lsr_mask, rstate, rf_push);
---
> module uart_receiver (clk, wb_rst_i, lcr, rf_pop, srx_pad_i, enable, counter_t, rf_count, rf_data_out, rf_error_bit, rf_overrun, rx_reset, lsr_mask, rstate, rf_push_pulse);
18c18
< output rf_push;
---
> output rf_push_pulse;
30a31
> wire rf_push_pulse;
37c38
< uart_fifo # (`UART_FIFO_REC_WIDTH) fifo_rx (.clk (clk),.wb_rst_i (wb_rst_i),.data_in (rf_data_in),.data_out (rf_data_out),.push (rf_push),.pop (rf_pop),.overrun (rf_overrun),.count (rf_count),.error_bit (rf_error_bit),.fifo_reset (rx_reset),.reset_status (lsr_mask));
---
> uart_fifo # (`UART_FIFO_REC_WIDTH) fifo_rx (.clk (clk),.wb_rst_i (wb_rst_i),.data_in (rf_data_in),.data_out (rf_data_out),.push (rf_push_pulse),.pop (rf_pop),.overrun (rf_overrun),.count (rf_count),.error_bit (rf_error_bit),.fifo_reset (rx_reset),.reset_status (lsr_mask));
224a226,234
> always @ (posedge clk or posedge wb_rst_i) begin
>     if (wb_rst_i)
>         rf_push_q <= 0;
>     else
>         rf_push_q <= # 1 rf_push;
> 
> end
> 
> assign rf_push_pulse = rf_push & ~ rf_push_q;
256c266
<         if (rf_push || rf_pop || rf_count == 0)
---
>         if (rf_push_pulse || rf_pop || rf_count == 0)
