2,2d1
< `include "uart_defines.v"
8a8,9
> , baud_o `endif
> );
8,8c7,7
< rts_pad_o, dtr_pad_o, int_o);
---
> rts_pad_o, dtr_pad_o, int_o `ifdef UART_HAS_BAUDRATE_OUTPUT
21a23,25
> `ifdef UART_HAS_BAUDRATE_OUTPUT
> output baud_o;
> `endif
37a42,44
> `ifdef UART_HAS_BAUDRATE_OUTPUT assign
> baud_o = enable;
> `endif
93a101,101
> wire serial_out;
95a104,105
> wire serial_in = loopback ? serial_out : srx_pad_i;
> assign stx_pad_o = loopback ? 1?b1 : serial_out;
95,95c103,103
< transmitter (clk, wb_rst_i, lcr, tf_push, wb_dat_i, enable, stx_pad_o, tstate, tf_count, tx_reset, lsr_mask);
---
> transmitter (clk, wb_rst_i, lcr, tf_push, wb_dat_i, enable, serial_out, tstate, tf_count, tx_reset, lsr_mask);
97,97c107,107
< receiver (clk, wb_rst_i, lcr, rf_pop, srx_pad_i, enable, counter_t, rf_count, rf_data_out, rf_error_bit, rf_overrun, rx_reset, lsr_mask, rstate, rf_push_pulse);
---
> receiver (clk, wb_rst_i, lcr, rf_pop, serial_in, enable, counter_t, rf_count, rf_data_out, rf_error_bit, rf_overrun, rx_reset, lsr_mask, rstate, rf_push_pulse);
