head	1.3;
access;
symbols
	v20081020-0700:1.3
	v20080722-1827:1.3
	R2_1_maintenance:1.3.0.6
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080425-1959:1.3
	v20080402-1725:1.3
	v20080328-1605:1.3
	v20080222-1200:1.3
	v20080215-1500:1.3
	v20080201-2010:1.3
	v20080118-1415:1.3
	v20080118-1129:1.3
	v20071108-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.4
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	v20070420-1000:1.3
	v20070330-1300:1.3
	v20070221-1500:1.3
	v20070209-1900:1.3
	v20060209-1900:1.3
	v20070208-1800:1.3
	v20070119-1200:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061020-1000:1.3
	v20061013-1330:1.3
	v20060925-1700:1.3
	v20060919-0800:1.3
	v20060907-1100:1.3
	M1_20:1.3
	v20060824-1600:1.3
	v20060810-1700:1.3
	v20060803-1200:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060526-1200:1.3
	I20060505-1400:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.3
date	2006.02.13.19.11.59;	author ldamus;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.25.25;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.16;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.core.command;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Status;
import org.eclipse.gmf.runtime.common.core.internal.CommonCorePlugin;
import org.eclipse.gmf.runtime.common.core.internal.CommonCoreStatusCodes;
import org.eclipse.gmf.runtime.common.core.internal.l10n.CommonCoreMessages;
import org.eclipse.gmf.runtime.common.core.util.StringStatics;

/**
 * The result of a command execution. Command results have an IStatus and optionally
 * a return value (if applicable). GMF commands are assigned a command result
 * when they are executed, undone, or redone.
 * 
 * @@author khussey
 * @@author ldamus
 * 
 * @@see org.eclipse.core.runtime.IStatus
 * @@canBeSeenBy %partners
 */
public final class CommandResult {

	/**
	 * Creates a new {@@link IStatus#OK} command result.
	 * 
	 * @@return a new OK command result with no return value
	 * 
	 */
	public static final CommandResult newOKCommandResult() {
		return new CommandResult(new Status(IStatus.OK, CommonCorePlugin
				.getPluginId(), CommonCoreStatusCodes.OK, StringStatics.BLANK,
				null), null);
	}

	/**
	 * Creates a new {@@link IStatus#OK} command result with the specified return
	 * <code>value</code>.
	 * 
	 * @@param value
	 *            the command return result
	 * @@return a new OK command result with the return <code>value</code>
	 * 
	 */
	public static final CommandResult newOKCommandResult(Object result) {
		return new CommandResult(new Status(IStatus.OK, CommonCorePlugin
				.getPluginId(), CommonCoreStatusCodes.OK, StringStatics.BLANK,
				null), result);
	}

	/**
	 * Creates a new {@@link IStatus#CANCEL} command result with no return value.
	 * 
	 * @@return a new CANCEL command result with no return value
	 */
	public static final CommandResult newCancelledCommandResult() {
		return new CommandResult(
				new Status(
						IStatus.CANCEL,
						CommonCorePlugin.getPluginId(),
						CommonCoreStatusCodes.CANCELLED,
						CommonCoreMessages.AbstractCommand__INFO__cancelOperation,
						null), null);
	}

	/**
	 * Creates a new {@@link IStatus#ERROR} command result with no return value.
	 * 
	 * @@param errorMessage
	 *            the error message
	 * @@return a new ERROR command result with no return value
	 */
	public static final CommandResult newErrorCommandResult(String errorMessage) {
		return new CommandResult(new Status(IStatus.ERROR, CommonCorePlugin
				.getPluginId(), CommonCoreStatusCodes.COMMAND_FAILURE,
				errorMessage, null), null);
	}

	/**
	 * Creates a new {@@link IStatus#ERROR} command result with no return value.
	 * 
	 * @@param errorMessage
	 *            the error message
	 * @@return a new ERROR command result with no return value
	 */
	public static final CommandResult newErrorCommandResult(Throwable throwable) {
		return new CommandResult(new Status(IStatus.ERROR, CommonCorePlugin
				.getPluginId(), CommonCoreStatusCodes.COMMAND_FAILURE,
				throwable.getLocalizedMessage(), throwable), null);
	}

	/**
	 * Creates a new {@@link IStatus#WARNING} command result with a return
	 * <code>value</code>.
	 * 
	 * @@param warningMessage
	 *            the warning message
	 * @@param value
	 *            the command return result
	 * @@return a new WARNING command result with the return <code>value</code>
	 */
	public static final CommandResult newWarningCommandResult(
			String warningMessage, Object result) {
		return new CommandResult(
				new Status(IStatus.WARNING, CommonCorePlugin.getPluginId(),
						CommonCoreStatusCodes.OK, warningMessage, null), result);
	}

	/**
	 * The return value for this command, if applicable.
	 */
	private final Object returnValue;

	/**
	 * The status of executing, undoing, or redoing this command.
	 */
	private final IStatus status;

	/**
	 * Constructs a new command result with the specified status and a default
	 * return value.
	 * 
	 * @@param status
	 *            The status for the new command result.
	 */
	public CommandResult(IStatus status) {
		this(status, null);
	}

	/**
	 * Constructs a new command result with the specified status and return
	 * value.
	 * 
	 * @@param status
	 *            The status for the new command result.
	 * @@param returnValue
	 *            The return value for the new command result.
	 */
	public CommandResult(IStatus status, Object returnValue) {
		super();

		assert null != status : "null status"; //$NON-NLS-1$

		this.status = status;
		this.returnValue = returnValue;
	}

	/**
	 * Retrieves the status of the command that is executed, undone or redone.
	 * 
	 * @@return The status.
	 */
	public IStatus getStatus() {
		return status;
	}

	/**
	 * The value returned by the execute, undo or redo of a GMF operation.
	 * 
	 * @@return the return value; may be <code>null</code>
	 */
	public Object getReturnValue() {
		return returnValue;
	}

}
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
d15 5
d22 3
a24 3
 * The result of a command execution. Command results have an associated status
 * and return value (if applicable). A command result is returned each time a
 * command is executed, undone, or redone by a command manager.
d27 1
d34 141
a174 53
    /**
     * The return value for this command, if applicable.
     */
    private final Object returnValue;

    /**
     * The status of executing, undoing, or redoing this command.
     */
    private final IStatus status;

    /**
     * Constructs a new command result with the specified status and a default
     * return value.
     *
     * @@param status The status for the new command result.
     */
    public CommandResult(IStatus status) {
        this(status, null);
    }

    /**
     * Constructs a new command result with the specified status and return
     * value.
     *
     * @@param status The status for the new command result.
     * @@param returnValue The return value for the new command result.
     */
    public CommandResult(IStatus status, Object returnValue) {
        super();

        assert null != status : "null status"; //$NON-NLS-1$

        this.status = status;
        this.returnValue = returnValue;
    }

    /**
     * Retrieves the return value of the command that is executed, undone or redone.
     * 
     * @@return The return value.
     */
    public Object getReturnValue() {
        return returnValue;
    }

    /**
     * Retrieves the status of the command that is executed, undone or redone.
     * 
     * @@return The status.
     */
    public IStatus getStatus() {
        return status;
    }
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

