head	1.6;
access;
symbols
	v20081020-0700:1.6
	v20080722-1827:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080425-1959:1.6
	v20080402-1725:1.6
	v20080328-1605:1.6
	v20080222-1200:1.6
	v20080215-1500:1.6
	v20080201-2010:1.6
	v20080118-1415:1.6
	v20080118-1129:1.6
	v20071108-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070601-1400:1.6
	v20070518-1300:1.6
	v20070420-1000:1.6
	v20070330-1300:1.6
	v20070221-1500:1.6
	v20070209-1900:1.5.2.1
	v20060209-1900:1.5.2.1
	v20070208-1800:1.6
	v20070119-1200:1.5.2.1
	M4_20:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061020-1000:1.5.2.1
	v20061013-1330:1.6
	v20060925-1700:1.5.2.1
	v20060919-0800:1.5.2.1
	v20060907-1100:1.5
	M1_20:1.5
	v20060824-1600:1.5
	v20060810-1700:1.5
	v20060803-1200:1.5
	v20060728-0500:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060526-1200:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.6
date	2006.10.03.14.47.22;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.13.19.11.59;	author ldamus;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2005.12.12.21.23.00;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.28.19.58.18;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.25.25;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.26;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.09.13.16.41.26;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.core.internal;

import org.eclipse.core.commands.operations.IOperationApprover;
import org.eclipse.core.commands.operations.OperationHistoryFactory;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IConfigurationElement;
import org.eclipse.core.runtime.IExtensionRegistry;
import org.eclipse.core.runtime.ILogListener;
import org.eclipse.core.runtime.Platform;
import org.eclipse.core.runtime.Plugin;
import org.eclipse.gmf.runtime.common.core.internal.command.FileModificationApprover;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.osgi.framework.BundleContext;

/**
 * The common core plug-in.
 * 
 * @@author khussey
 */
public class CommonCorePlugin
	extends Plugin {

	/**
	 * Extension point name for the log listeners extension point.
	 */
	protected static final String LOG_LISTENER_EXT_P_NAME = "logListeners"; //$NON-NLS-1$

	/**
	 * This plug-in's shared instance.
	 */
	private static CommonCorePlugin plugin;

	/**
	 * Creates a new plug-in runtime object.
	 */
	public CommonCorePlugin() {
		super();

		plugin = this;
	}

	/**
	 * Retrieves this plug-in's shared instance.
	 * 
	 * @@return This plug-in's shared instance.
	 */
	public static CommonCorePlugin getDefault() {
		return plugin;
	}

	/**
	 * Retrieves the unique identifier of this plug-in.
	 * 
	 * @@return A non-empty string which is unique within the plug-in registry.
	 */
	public static String getPluginId() {
		return getDefault().getBundle().getSymbolicName();
	}

	/**
	 * Starts up this plug-in.
	 */
	public void start(BundleContext context)
		throws Exception {
		super.start(context);
		configureLogListeners();
		
		// Register the file modification approver with the operation history.
		IOperationApprover approver = new FileModificationApprover();
		OperationHistoryFactory.getOperationHistory().addOperationApprover(
				approver);
	}
    
    

	/**
	 * Configure log listeners for log listeners extension.
	 */
	private void configureLogListeners() {
		IExtensionRegistry reg = Platform.getExtensionRegistry();
		IConfigurationElement[] elements = reg.getConfigurationElementsFor(
			getPluginId(), LOG_LISTENER_EXT_P_NAME);
		ILogListener listener = null;

		try {
			for (int i = 0; i < elements.length; i++) {
				listener = (ILogListener) elements[i]
					.createExecutableExtension("class"); //$NON-NLS-1$
				Platform.getLog(getDefault().getBundle()).addLogListener(
					listener);
			}
		} catch (CoreException e) {
			Trace.catching(CommonCorePlugin.getDefault(),
				CommonCoreDebugOptions.EXCEPTIONS_CATCHING, getClass(),
				"configureLogListeners", e); //$NON-NLS-1$
			Log.error(CommonCorePlugin.getDefault(),
				CommonCoreStatusCodes.SERVICE_FAILURE, e.getMessage());
		}
	}

}@


1.5
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
@


1.5.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.4
log
@[120387] gmf_head ahunter 051212 XtoolsPlugin and XtoolsUIPlugin are obsolete
@
text
@d14 2
d22 1
d79 5
d85 2
@


1.3
log
@Bugzilla Bug 109445 gmf_head etworkow 051028 New Eclipse Resources Bundles Should Be Used
@
text
@d19 4
a22 2

import org.eclipse.gmf.runtime.common.core.plugin.XToolsPlugin;
d30 1
a30 1
	extends XToolsPlugin {
d36 1
a36 1
	
a41 12
//	/**
//	 * The navigator category registry for loading and retrieving the navigator
//	 * category extensions in the workspace.
//	 */
//	private NavigatorCategoryRegistry navigatorCategoryRegistry;
//
//	/**
//	 * The navigator content type registry for loading and retrieving the
//	 * navigator content type extensions in the workspace.
//	 */
//	private NavigatorContentTypeRegistry navigatorContentTypeRegistry;

d72 3
a74 1
	protected void doStartup() {
a75 4
		//configureIconProviders();
		//configureViewerContentProviders();
		//configureViewerSorterProviders();
		//configureViewerFilterProviders();
d77 1
a77 1
	
d83 2
a84 1
		IConfigurationElement[] elements = reg.getConfigurationElementsFor(getPluginId(), LOG_LISTENER_EXT_P_NAME);
d86 1
a86 1
	
d89 4
a92 2
				listener = (ILogListener) elements[i].createExecutableExtension("class"); //$NON-NLS-1$
				Platform.getLog(getDefault().getBundle()).addLogListener(listener);
d95 5
a99 1
			e.printStackTrace();
d102 1
a102 72
	
//	/**
//	 * Configures icon providers based on icon provider extension
//	 */
//	private void configureIconProviders() {
//		IconService.getInstance().configureProviders(
//			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
//				ICON_PROVIDERS_EXT_P_NAME).getConfigurationElements());
//	}


//	/**
//	 * Configures content providers based on content provider extension
//	 * configurations.
//	 *  
//	 */
//	private void configureViewerContentProviders() {
//		ViewerContentService.getInstance().configureProviders(
//			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
//				ViewerContentService.getInstance().getExtensionPointId())
//				.getConfigurationElements());
//	}
//
//	/**
//	 * Configures content providers based on sorter provider extension
//	 * configurations.
//	 *  
//	 */
//	private void configureViewerSorterProviders() {
//		ViewerSorterService.getInstance().configureProviders(
//			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
//				ViewerSorterService.getInstance().getExtensionPointId())
//				.getConfigurationElements());
//	}
//
//	/**
//	 * Configures content providers based on sorter provider extension
//	 * configurations.
//	 *  
//	 */
//	private void configureViewerFilterProviders() {
//		ViewerFilterService.getInstance().configureProviders(
//			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
//				ViewerFilterService.getInstance().getExtensionPointId())
//				.getConfigurationElements());
//	}
//
//	/**
//	 * Returns the navigator category registry.
//	 * 
//	 * @@return the navigator category registry.
//	 */
//	public NavigatorCategoryRegistry getNavigatorCategoryRegistry() {
//		if (navigatorCategoryRegistry == null) {
//			navigatorCategoryRegistry = new NavigatorCategoryRegistry();
//			navigatorCategoryRegistry.load();
//		}
//		return navigatorCategoryRegistry;
//	}
//
//	/**
//	 * Returns the navigator content type registry.
//	 * 
//	 * @@return the navigator content type registry.
//	 */
//	public NavigatorContentTypeRegistry getNavigatorContentTypeRegistry() {
//		if (navigatorContentTypeRegistry == null) {
//			navigatorContentTypeRegistry = new NavigatorContentTypeRegistry();
//			navigatorContentTypeRegistry.load();
//		}
//		return navigatorContentTypeRegistry;
//	}
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a19 2
import org.eclipse.gmf.runtime.common.core.internal.l10n.ResourceManager;
import org.eclipse.gmf.runtime.common.core.l10n.AbstractResourceManager;
a79 11
	 * Retrieves the resource manager for this plug-in.
	 * 
	 * @@return The resource manager for this plug-in.
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.plugin.XToolsPlugin#getResourceManager()
	 */
	public AbstractResourceManager getResourceManager() {
		return ResourceManager.getInstance();
	}

	/**
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

