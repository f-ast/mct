head	1.6;
access;
symbols
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.4
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.6
date	2006.01.26.19.31.23;	author ahunter;	state dead;
branches;
next	1.5;

1.5
date	2005.12.22.21.45.11;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.12.21.23.00;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.28.19.58.18;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.25.25;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.25;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[120387] gmf_head ahunter 060126 XtoolsPlugin and XtoolsUIPlugin are obsolete
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.core.plugin;

import java.text.MessageFormat;

import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Plugin;
import org.eclipse.core.runtime.Status;
import org.osgi.framework.BundleContext;
import org.osgi.framework.Constants;

import org.eclipse.gmf.runtime.common.core.internal.CommonCoreDebugOptions;
import org.eclipse.gmf.runtime.common.core.internal.CommonCorePlugin;
import org.eclipse.gmf.runtime.common.core.internal.CommonCoreStatusCodes;
import org.eclipse.gmf.runtime.common.core.internal.l10n.CommonCoreMessages;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;

/**
 * The abstract parent of all XTools plug-ins.
 * 
 * @@author khussey
 * @@canBeSeenBy %partners
 * @@deprecated extend {@@link org.eclipse.core.runtime.Plugin} directly. 
 * This class was deprecated December 12, 2005 for https://bugs.eclipse.org/bugs/show_bug.cgi?id=120387
 * This class will be removed January 17, 2005 before declaration of the M5 milestone.
 */
public class XToolsPlugin
	extends Plugin {

	/**
	 * Creates a new plug-in runtime object.
	 */
	protected XToolsPlugin() {
		super();
	}

	/**
	 * Creates a new plug-in runtime object for the given plug-in descriptor.
	 * 
	 * @@param descriptor
	 *            The plug-in descriptor.
	 * @@deprecated replace with constructor with no parameters since
	 *             IPluginDescriptor is deprecated.
	 */
	protected XToolsPlugin(org.eclipse.core.runtime.IPluginDescriptor descriptor) {
		super(descriptor);
	}

	/**
	 * Starts up this plug-in.
	 * @@deprecated replace with start(BundleContext context)
	 */
	protected void doStartup() {
		/* empty method body */
	}

	/**
	 * Shuts down this plug-in and discards all plug-in state.
	 * @@deprecated replace with stop(BundleContext context)
	 */
	protected void doShutdown() {
		/* empty method body */
	}

	/**
	 * Retrieves an error message that indicates an error during this plug-in's
	 * startup sequence.
	 * 
	 * @@return An error message string.
	 * @@param pluginName
	 *            The name of this plug-in.
	 */
	protected String getStartupErrorMessage(String pluginName) {
		return MessageFormat.format(CommonCoreMessages.XToolsPlugin__ERROR__startupErrorMessage,
			new Object[] {pluginName});
	}

	/**
	 * Retrieves an error message that indicates an error during this plug-in's
	 * shutdown sequence.
	 * 
	 * @@return An error message string.
	 * @@param pluginName
	 *            The name of this plug-in.
	 */
	protected String getShutdownErrorMessage(String pluginName) {
		return MessageFormat.format(CommonCoreMessages.XToolsPlugin__ERROR__shutdownErrorMessage,
			new Object[] {pluginName});
	}

	/**
	 * Retrieves the symbolic name of the plug-in (reverse domain name naming convention).
	 * @@return the symbolic name of the plug-in.
	 * @@deprecated replace with getBundle().getSymbolicName()
	 */
	public final String getSymbolicName() {
		String name = null;

		try {
			name = getBundle().getSymbolicName();
		} catch (Exception e) {
			// ignore the exception
		}

		return String.valueOf(name);
	}

	/**
	 * Retrieves the name of the plug-in.
	 * @@return the name of the plug-in.
	 * @@deprecated replace with getBundle().getSymbolicName()
	 */
	public final String getPluginName() {
		Object name;

		try {
			name = getBundle().getHeaders().get(Constants.BUNDLE_NAME);
		} catch (Exception e) {
			name = getSymbolicName();
		}

		return String.valueOf(name);
	}

	/**
	 * Starts up this plug-in.
	 * 
	 * @@exception Exception
	 *                If this plug-in did not start up properly.
	 * 
	 * @@see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)
	 */
	public final void start(BundleContext context)
		throws Exception {
		super.start(context);

		try {
			Log.info(this, CommonCoreStatusCodes.OK, getPluginName()
				+ " plug-in starting up..."); //$NON-NLS-1$

			long startTime = System.currentTimeMillis();
			doStartup();
			long duration = System.currentTimeMillis() - startTime;

			Trace
				.trace(
					this,
					"Plug-in '" + getSymbolicName() + "' started up: " + duration + " msec"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		} catch (Exception e) {
			Trace.catching(this, CommonCoreDebugOptions.EXCEPTIONS_CATCHING,
				getClass(), "startup", e); //$NON-NLS-1$
			Log.error(CommonCorePlugin.getDefault(),
				CommonCoreStatusCodes.PLUGIN_STARTUP_FAILURE, "startup", e); //$NON-NLS-1$
			CoreException ce = new CoreException(new Status(IStatus.ERROR,
				getSymbolicName(),
				CommonCoreStatusCodes.PLUGIN_STARTUP_FAILURE,
				getStartupErrorMessage(getPluginName()), e));
			Trace.throwing(this, CommonCoreDebugOptions.EXCEPTIONS_THROWING,
				getClass(), "startup", ce); //$NON-NLS-1$
			throw ce;
		}
	}

	/**
	 * Shuts down this plug-in and discards all plug-in state.
	 * 
	 * @@exception CoreException
	 *                If this method fails to shut down this plug-in.
	 * 
	 * @@see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
	 */
	public final void stop(BundleContext context)
		throws Exception {
		try {
			Log.info(this, CommonCoreStatusCodes.OK, getPluginName()
				+ " plug-in shutting down..."); //$NON-NLS-1$

			doShutdown();

			Trace.trace(this, "Plug-in '" + getSymbolicName() + "' shut down."); //$NON-NLS-1$ //$NON-NLS-2$
		} catch (Exception e) {
			Trace.catching(this, CommonCoreDebugOptions.EXCEPTIONS_CATCHING,
				getClass(), "shutdown", e); //$NON-NLS-1$
			Log.error(CommonCorePlugin.getDefault(),
				CommonCoreStatusCodes.PLUGIN_SHUTDOWN_FAILURE, "shutdown", e); //$NON-NLS-1$
			CoreException ce = new CoreException(new Status(IStatus.ERROR,
				getSymbolicName(),
				CommonCoreStatusCodes.PLUGIN_SHUTDOWN_FAILURE,
				getShutdownErrorMessage(getPluginName()), e));
			Trace.throwing(this, CommonCoreDebugOptions.EXCEPTIONS_THROWING,
				getClass(), "shutdown", ce); //$NON-NLS-1$
			throw ce;
		} finally {
			super.stop(context);
		}
	}
}@


1.5
log
@[109445] gmf_head ahunter 051222 New Eclipse Resources Bundles Should Be Used
@
text
@@


1.4
log
@[120387] gmf_head ahunter 051212 XtoolsPlugin and XtoolsUIPlugin are obsolete
@
text
@a26 1
import org.eclipse.gmf.runtime.common.core.l10n.AbstractResourceManager;
a61 13
	 * Retrieves a resource manager instance for this plug-in.
	 * 
	 * @@return A resource manager instance for this plug-in.
	 * @@deprecated ResourceManager is to be replaced with a class that extends NLS.
	 * @@see org.eclipse.osgi.util.NLS
	 * This method was deprecated October 28, 2005 for https://bugs.eclipse.org/bugs/show_bug.cgi?id=109445
	 * This method will be removed December 19, 2005 before declaration of the M4 milestone.
	 */
	public AbstractResourceManager getResourceManager() {
		return null;
	}

	/**
@


1.3
log
@Bugzilla Bug 109445 gmf_head etworkow 051028 New Eclipse Resources Bundles Should Be Used
@
text
@d36 3
d68 2
d77 1
d85 1
d120 1
d137 1
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d26 1
a26 1
import org.eclipse.gmf.runtime.common.core.internal.l10n.ResourceManager;
d37 1
a37 1
public abstract class XToolsPlugin
a40 12
	 * Error message used when startup of a plug-in fails.
	 */
	protected static final String STARTUP_ERROR_MESSAGE = ResourceManager
		.getI18NString("XToolsPlugin._ERROR_.startupErrorMessage"); //$NON-NLS-1$

	/**
	 * Error message used when shutdown of a plug-in fails.
	 */
	protected static final String SHUTDOWN_ERROR_MESSAGE = ResourceManager
		.getI18NString("XToolsPlugin._ERROR_.shutdownErrorMessage"); //$NON-NLS-1$

	/**
d63 2
d66 3
a68 1
	public abstract AbstractResourceManager getResourceManager();
d93 1
a93 1
		return MessageFormat.format(STARTUP_ERROR_MESSAGE,
d106 1
a106 1
		return MessageFormat.format(SHUTDOWN_ERROR_MESSAGE,
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

