head	1.3;
access;
symbols
	v20080722-1827:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080425-1959:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070413-1300:1.3
	v20070330-1300:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060713-1700:1.1.2.1
	R1_0_maintenance:1.1.0.2;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2007.04.06.17.25.09;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	a27461682734567;

1.2
date	2006.09.01.19.43.56;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.10.18.06.02;	author ashatalin;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.07.11.12.35.54;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[181417] - Update org.eclipse.gmf.bridge.trace/model/trace.ecore to EMF M6 + regenerate the code.
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.internal.bridge.trace.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.impl.EFactoryImpl;
import org.eclipse.emf.ecore.plugin.EcorePlugin;
import org.eclipse.gmf.internal.bridge.trace.*;


/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @@generated
 */
public class TraceFactoryImpl extends EFactoryImpl implements TraceFactory {
	/**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static TraceFactory init() {
		try {
			TraceFactory theTraceFactory = (TraceFactory)EPackage.Registry.INSTANCE.getEFactory("http://www.eclipse.org/gmf/2006/Trace"); 
			if (theTraceFactory != null) {
				return theTraceFactory;
			}
		}
		catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new TraceFactoryImpl();
	}

	/**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public TraceFactoryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public EObject create(EClass eClass) {
		switch (eClass.getClassifierID()) {
			case TracePackage.TRACE_MODEL: return createTraceModel();
			case TracePackage.GEN_NODE_TRACE: return createGenNodeTrace();
			case TracePackage.GEN_CHILD_NODE_TRACE: return createGenChildNodeTrace();
			case TracePackage.GEN_NODE_LABEL_TRACE: return createGenNodeLabelTrace();
			case TracePackage.GEN_LINK_TRACE: return createGenLinkTrace();
			case TracePackage.GEN_COMPARTMENT_TRACE: return createGenCompartmentTrace();
			case TracePackage.GEN_LINK_LABEL_TRACE: return createGenLinkLabelTrace();
			case TracePackage.TOOL_GROUP_TRACE: return createToolGroupTrace();
			default:
				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public TraceModel createTraceModel() {
		TraceModelImpl traceModel = new TraceModelImpl();
		return traceModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenNodeTrace createGenNodeTrace() {
		GenNodeTraceImpl genNodeTrace = new GenNodeTraceImpl();
		return genNodeTrace;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenChildNodeTrace createGenChildNodeTrace() {
		GenChildNodeTraceImpl genChildNodeTrace = new GenChildNodeTraceImpl();
		return genChildNodeTrace;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenNodeLabelTrace createGenNodeLabelTrace() {
		GenNodeLabelTraceImpl genNodeLabelTrace = new GenNodeLabelTraceImpl();
		return genNodeLabelTrace;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenLinkTrace createGenLinkTrace() {
		GenLinkTraceImpl genLinkTrace = new GenLinkTraceImpl();
		return genLinkTrace;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenCompartmentTrace createGenCompartmentTrace() {
		GenCompartmentTraceImpl genCompartmentTrace = new GenCompartmentTraceImpl();
		return genCompartmentTrace;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenLinkLabelTrace createGenLinkLabelTrace() {
		GenLinkLabelTraceImpl genLinkLabelTrace = new GenLinkLabelTraceImpl();
		return genLinkLabelTrace;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ToolGroupTrace createToolGroupTrace() {
		ToolGroupTraceImpl toolGroupTrace = new ToolGroupTraceImpl();
		return toolGroupTrace;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public TracePackage getTracePackage() {
		return (TracePackage)getEPackage();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@deprecated
	 * @@generated
	 */
	@@Deprecated
	public static TracePackage getPackage() {
		return TracePackage.eINSTANCE;
	}

} //TraceFactoryImpl
@


1.2
log
@organized imports
@
text
@d14 2
a15 10
import org.eclipse.gmf.internal.bridge.trace.GenChildNodeTrace;
import org.eclipse.gmf.internal.bridge.trace.GenCompartmentTrace;
import org.eclipse.gmf.internal.bridge.trace.GenLinkLabelTrace;
import org.eclipse.gmf.internal.bridge.trace.GenLinkTrace;
import org.eclipse.gmf.internal.bridge.trace.GenNodeLabelTrace;
import org.eclipse.gmf.internal.bridge.trace.GenNodeTrace;
import org.eclipse.gmf.internal.bridge.trace.ToolGroupTrace;
import org.eclipse.gmf.internal.bridge.trace.TraceFactory;
import org.eclipse.gmf.internal.bridge.trace.TraceModel;
import org.eclipse.gmf.internal.bridge.trace.TracePackage;
d58 1
d169 1
@


1.1
log
@#148651 Plugin bridge.trace uses wrong namespace
@
text
@a13 3

import org.eclipse.gmf.internal.bridge.trace.*;

@


1.1.2.1
log
@#148651 Plugin bridge.trace uses wrong namespace
@
text
@@

