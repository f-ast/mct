head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081020-0700:1.4
	ocl_qvt:1.4.0.4
	Root_ocl_qvt:1.4
	v20080722-1827:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080528-1052:1.4
	v20080516-1143:1.4
	v20080417-1610:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070921-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	v20070420-1000:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20070208-1800:1.3
	v20070103-0300:1.3
	M4_20:1.3
	M3_20:1.3;
locks; strict;
comment	@# @;


1.4
date	2008.05.16.11.07.49;	author bblajer;	state Exp;
branches
	1.4.4.1;
next	1.3;
commitid	43fe482d6b054567;

1.3
date	2006.10.30.13.36.45;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.23.18.58.22;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.20.33.51;	author atikhomirov;	state Exp;
branches;
next	;

1.4.4.1
date	2008.08.05.12.49.25;	author atikhomirov;	state Exp;
branches;
next	1.4.4.2;
commitid	546c48984c4a4567;

1.4.4.2
date	2008.08.06.14.05.35;	author atikhomirov;	state Exp;
branches;
next	;
commitid	35b4899afa74567;


desc
@@


1.4
log
@XpandErrorStatement: provide file and line where the error occurred.
@
text
@/*
 * <copyright>
 *
 * Copyright (c) 2005-2008 Sven Efftinge and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Sven Efftinge - Initial API and implementation
 *
 * </copyright>
 */
package org.eclipse.gmf.internal.xpand.ast;

import java.text.MessageFormat;
import java.util.Set;

import org.eclipse.gmf.internal.xpand.expression.AnalysationIssue;
import org.eclipse.gmf.internal.xpand.expression.ast.Expression;
import org.eclipse.gmf.internal.xpand.model.XpandExecutionContext;

/**
 * @@author Sven Efftinge
 */
public class ErrorStatement extends Statement {

    private final Expression message;

    public ErrorStatement(final int start, final int end, final int line, final Expression msg) {
        super(start, end, line);
        message = msg;
    }

    public Expression getMessage() {
        return message;
    }

    public void analyze(final XpandExecutionContext ctx, final Set<AnalysationIssue> issues) {
        message.analyze(ctx, issues);
    }

    @@Override
    public void evaluateInternal(final XpandExecutionContext ctx) {
    	String result = String.valueOf(message.evaluate(ctx));
        System.err.println("ERROR:" + result); // FIXME syserr is not an error reporting!!!
        throw new RuntimeException(MessageFormat.format("Error in {0}:{1}: ", getFileName(), getLine(), result));
    }

}
@


1.4.4.1
log
@[243154] Use OCL instead of home-grown expression language
@
text
@d2 3
a4 1
 * Copyright (c) 2005, 2008 Sven Efftinge and others.
d12 2
a13 1
 *     Artem Tikhomirov (Borland) - Migration to OCL expressions
d21 1
a22 2
import org.eclipse.gmf.internal.xpand.ocl.ExpressionHelper;
import org.eclipse.ocl.cst.OCLExpressionCS;
d29 1
a29 1
	private final ExpressionHelper message;
d31 1
a31 1
    public ErrorStatement(final int start, final int end, final int line, final OCLExpressionCS msg) {
d33 5
a37 1
        message = new ExpressionHelper(msg);
d41 1
a41 1
    	message.analyze(ctx, issues);
d46 2
a47 1
		String result = String.valueOf(message.evaluate(ctx));
@


1.4.4.2
log
@[243154] Use OCL instead of home-grown expression language. Refactored to eliminate context specific to expressions (moving towards using OCL environment for that), split modifiable (context-specific) and static execution data.
@
text
@d17 2
a18 2
import org.eclipse.gmf.internal.xpand.model.AnalysationIssue;
import org.eclipse.gmf.internal.xpand.model.ExecutionContext;
d34 1
a34 1
    public void analyze(final ExecutionContext ctx, final Set<AnalysationIssue> issues) {
d39 1
a39 1
    public void evaluateInternal(final ExecutionContext ctx) {
@


1.3
log
@strict error handling
@
text
@d4 1
a4 1
 * Copyright (c) 2005-2006 Sven Efftinge and others.
d17 1
d48 1
a48 1
        throw new RuntimeException(result);
@


1.2
log
@finals
@
text
@d45 3
a47 1
        System.err.println(message.evaluate(ctx));
@


1.1
log
@Initial contribution of the reworked XPand template engine from eclipse.org/gmt/oaw to be used until M2T deliveries are available.
The contribution (including LPG 1.1 runtime) was approved by Eclipse Legal at the very end of September, 2006.
@
text
@d24 1
a24 3
 * *
 * 
 * @@author Sven Efftinge *
d28 1
a28 1
    private Expression message;
@

