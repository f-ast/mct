head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081020-0700:1.4
	ocl_qvt:1.4.0.6
	Root_ocl_qvt:1.4
	v20080722-1827:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080528-1052:1.4
	v20080516-1143:1.4
	v20080417-1610:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070921-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	RC3_20:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070518-1300:1.4
	v20070420-1000:1.4
	v20070405-1100:1.4
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20070208-1800:1.4
	v20070103-0300:1.4
	M4_20:1.4
	M3_20:1.4;
locks; strict;
comment	@# @;


1.4
date	2006.11.09.18.00.11;	author atikhomirov;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2006.10.23.18.58.22;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.23.16.13.10;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.20.33.50;	author atikhomirov;	state Exp;
branches;
next	;

1.4.6.1
date	2008.07.29.15.57.04;	author ashatalin;	state dead;
branches;
next	;
commitid	337c488f3dcd4567;


desc
@@


1.4
log
@issue's type converted to enum, added decreased (warning) severity option toease development with xpand
@
text
@/*
 * <copyright>
 *
 * Copyright (c) 2005-2006 Sven Efftinge and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Sven Efftinge - Initial API and implementation
 *
 * </copyright>
 */
package org.eclipse.gmf.internal.xpand.xtend.ast;

import java.util.List;
import java.util.Set;

import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.gmf.internal.xpand.expression.AnalysationIssue;
import org.eclipse.gmf.internal.xpand.expression.ExecutionContext;
import org.eclipse.gmf.internal.xpand.expression.Variable;
import org.eclipse.gmf.internal.xpand.expression.ast.DeclaredParameter;
import org.eclipse.gmf.internal.xpand.expression.ast.Identifier;

public class WorkflowSlotExtensionStatement extends Extension {

	private final Identifier slotName;

    public WorkflowSlotExtensionStatement(final int start, final int end, final int line, final Identifier name,
            final List<DeclaredParameter> formalParameters, final Identifier returnType, final Identifier slotName,
            final boolean cached, final boolean isPrivate) {
        super(start, end, line, name, returnType, formalParameters, cached, isPrivate);
        this.slotName = slotName;
    }

    @@Override
    public Object evaluateInternal(final Object[] parameters, final ExecutionContext ctx) {
    	final Variable result = ctx.getGlobalVariable(slotName.getValue());
    	if (result == null) {
    		return null;
    	}
        return result.getValue();
    }


    @@Override
    public void analyzeInternal(final ExecutionContext ctx, final Set<AnalysationIssue> issues) {
        if (returnType == null) {
            issues.add(new AnalysationIssue(AnalysationIssue.Type.SYNTAX_ERROR,
                    "A return type must be specified for workflow slot extensions!", this));
        }
    }

    @@Override
    protected EClassifier internalGetReturnType(final EClassifier[] parameters, final ExecutionContext ctx, final Set<AnalysationIssue> issues) {
        if (returnType == null) {
            issues.add(new AnalysationIssue(AnalysationIssue.Type.SYNTAX_ERROR,
                    "A return type must be specified for workflow slot extensions!", this));
            return null;
        } else {
            return ctx.getTypeForName(returnType.getValue());
        }
    }

}
@


1.4.6.1
log
@Xtend-based implementation of XPand extensions was separated into .migration plugin.
@
text
@@


1.3
log
@finals
@
text
@d51 1
a51 1
            issues.add(new AnalysationIssue(AnalysationIssue.SYNTAX_ERROR,
d59 1
a59 1
            issues.add(new AnalysationIssue(AnalysationIssue.SYNTAX_ERROR,
@


1.2
log
@refactored use of variables (no need to expose Map)
@
text
@d29 1
a29 1
	private Identifier slotName = null;
@


1.1
log
@Initial contribution of the reworked XPand template engine from eclipse.org/gmt/oaw to be used until M2T deliveries are available.
The contribution (including LPG 1.1 runtime) was approved by Eclipse Legal at the very end of September, 2006.
@
text
@d40 1
a40 1
    	final Variable result = ctx.getGlobalVariables().get(slotName.getValue());
@

