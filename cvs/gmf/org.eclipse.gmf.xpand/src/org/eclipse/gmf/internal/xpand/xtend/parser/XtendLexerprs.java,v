head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081020-0700:1.3
	ocl_qvt:1.3.0.6
	Root_ocl_qvt:1.3
	v20080722-1827:1.3
	v20080718-1731:1.3
	v20080716-1600:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080528-1052:1.3
	v20080516-1143:1.3
	v20080417-1610:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070921-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	v20070420-1000:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20070208-1800:1.3
	v20070103-0300:1.3
	M4_20:1.3
	M3_20:1.3;
locks; strict;
comment	@# @;


1.3
date	2006.11.06.16.36.18;	author atikhomirov;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2006.10.24.18.33.35;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.20.33.49;	author atikhomirov;	state Exp;
branches;
next	;

1.3.6.1
date	2008.07.29.15.57.04;	author ashatalin;	state dead;
branches;
next	;
commitid	337c488f3dcd4567;


desc
@@


1.3
log
@handle dollar sign ($) correctly inside strings/comments
do not use external includes and copy external templates locally to be able to tweak them
minor changes to the includes
@
text
@/*******************************************************************************
* Copyright (c) 2006 Eclipse.org
* 
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*******************************************************************************/
package org.eclipse.gmf.internal.xpand.xtend.parser;

public class XtendLexerprs implements lpg.lpgjavaruntime.ParseTable, XtendLexersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static byte baseCheck[] = {0,
            1,3,3,1,3,1,1,1,1,1,
            2,2,1,1,1,1,1,2,2,2,
            2,1,1,1,1,2,1,1,1,2,
            1,1,1,1,5,1,1,2,3,1,
            2,2,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,2,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,2,2,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,2,
            2,0,1,2,1,2,0,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,6,2,2,2,2,2,2,2,2,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1
        };
    };
    public final static byte baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static byte rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,17,17,17,14,14,18,
            12,12,12,2,2,2,3,3,3,3,
            3,3,3,3,3,3,3,3,3,3,
            3,3,3,3,3,3,3,3,3,3,
            3,3,4,4,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,1,1,
            1,1,1,1,1,1,1,1,5,5,
            5,5,5,19,19,8,8,8,8,8,
            8,8,8,8,8,8,8,8,8,8,
            8,8,8,8,8,8,8,8,8,8,
            8,8,8,8,22,22,23,23,23,23,
            23,23,23,23,23,15,15,15,15,20,
            20,20,20,21,21,16,16,13,13,10,
            10,10,10,10,10,10,10,10,10,10,
            10,10,10,10,10,10,10,10,10,10,
            10,10,10,10,10,10,10,9,9,9,
            9,9,9,11,11,11,11,11,11,11,
            11,7,7,7,7,7,7,7,7,7,
            7,7,7,6,6,17,498,37,40,43,
            44,113,474,201,147,146,43,44,321,812,
            254,151,810,232,6,242,843,114,233,302,
            198,197,43,44,820,38,145,844,165,199,
            201,299,289,831,38,292,302,198,197,43,
            44,845,846,813,847,165,199,201,848,297,
            811,283,292,1,156,155,43,44,158,849,
            842,157,400,198,197,43,44,850,161,356,
            356,166,199,201,305,101,156,155,43,44,
            158,356,356,157,663,37,40,43,44,356,
            159,598,42,41,43,44,329,356,263,728,
            42,41,43,44,793,223,793,223,793,223,
            336,224,338,224,346,224,793,223,356,356,
            356,356,202,224,356,356
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,98,99,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,98,99,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,0,0,
            100,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,71,72,0,0,75,76,77,78,
            79,80,81,82,83,84,85,86,87,88,
            0,0,91,92,93,94,95,96,97,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            61,62,63,64,65,66,67,68,69,70,
            71,72,0,0,75,76,77,78,79,80,
            81,82,83,84,85,86,87,88,0,0,
            91,92,93,94,95,96,97,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            73,74,75,76,101,78,79,80,81,82,
            83,84,85,86,87,88,89,90,0,0,
            0,0,0,0,0,98,99,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,0,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,0,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,0,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,0,
            0,0,0,21,22,23,24,25,26,0,
            1,2,3,4,5,6,7,8,9,10,
            0,1,2,3,4,5,6,7,8,9,
            10,0,0,0,0,0,0,0,0,0,
            0,0,11,12,0,0,0,0,17,18,
            19,20,0,0,0,0,0,0,0,27,
            27,27,27,0,65,0,0,0,66,68,
            0,71,72,0,0,0,0,0,69,0,
            0,0,0,0,0,0,0,0,89,90,
            0,0,0,0,0,0,0,98,99,0,
            0,0,0,67,73,74,0,70,77,0,
            0,73,0,74,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            356,454,455,456,457,458,459,460,461,462,
            463,403,407,402,404,405,406,415,419,421,
            422,428,429,430,431,432,433,497,408,409,
            410,411,412,413,414,416,417,418,420,423,
            424,425,426,427,401,434,435,436,437,438,
            439,440,441,442,443,444,445,446,447,448,
            449,450,451,452,453,464,487,481,483,494,
            496,516,519,475,485,476,484,486,488,489,
            490,491,492,493,495,471,472,473,474,467,
            468,480,477,478,479,498,499,482,465,466,
            356,454,455,456,457,458,459,460,461,462,
            463,403,407,402,404,405,406,415,419,421,
            422,428,429,430,431,432,433,497,408,409,
            410,411,412,413,414,416,417,418,420,423,
            424,425,426,427,401,434,435,436,437,438,
            439,440,441,442,443,444,445,446,447,448,
            449,450,451,452,453,464,487,481,483,494,
            496,391,520,475,485,476,484,486,488,489,
            490,491,492,493,495,471,472,473,474,467,
            468,480,477,478,479,498,499,482,465,466,
            36,454,455,456,457,458,459,460,461,462,
            463,403,407,402,404,405,406,415,419,421,
            422,428,429,430,431,432,433,497,408,409,
            410,411,412,413,414,416,417,418,420,423,
            424,425,426,427,401,434,435,436,437,438,
            439,440,441,442,443,444,445,446,447,448,
            449,450,451,452,453,504,487,481,483,494,
            496,506,505,475,485,476,484,486,488,489,
            490,491,492,493,495,471,472,473,474,508,
            509,480,477,478,479,498,499,482,162,356,
            510,167,454,455,456,457,458,459,460,461,
            462,463,403,407,402,404,405,406,415,419,
            421,422,428,429,430,431,432,433,550,408,
            409,410,411,412,413,414,416,417,418,420,
            423,424,425,426,427,401,434,435,436,437,
            438,439,440,441,442,443,444,445,446,447,
            448,449,450,451,452,453,556,540,536,538,
            547,549,527,530,356,356,531,539,290,541,
            542,543,544,545,546,548,525,526,528,529,
            356,356,535,532,533,534,551,552,537,168,
            454,455,456,457,458,459,460,461,462,463,
            403,407,402,404,405,406,415,419,421,422,
            428,429,430,431,432,433,550,408,409,410,
            411,412,413,414,416,417,418,420,423,424,
            425,426,427,401,434,435,436,437,438,439,
            440,441,442,443,444,445,446,447,448,449,
            450,451,452,453,556,540,536,538,547,549,
            527,530,356,356,531,539,290,541,542,543,
            544,545,546,548,525,526,528,529,356,356,
            535,532,533,534,551,552,537,356,454,455,
            456,457,458,459,460,461,462,463,403,407,
            402,404,405,406,415,419,421,422,428,429,
            430,431,432,433,246,408,409,410,411,412,
            413,414,416,417,418,420,423,424,425,426,
            427,401,434,435,436,437,438,439,440,441,
            442,443,444,445,446,447,448,449,450,451,
            452,453,464,273,274,239,387,271,280,365,
            249,266,272,581,355,380,381,378,379,389,
            384,257,363,278,370,371,467,468,356,356,
            356,356,356,356,356,465,466,1,454,455,
            456,457,458,459,460,461,462,463,403,407,
            402,404,405,406,415,419,421,422,428,429,
            430,431,432,433,356,408,409,410,411,412,
            413,414,416,417,418,420,423,424,425,426,
            427,401,434,435,436,437,438,439,440,441,
            442,443,444,445,446,447,448,449,450,451,
            452,453,356,454,455,456,457,458,459,460,
            461,462,463,403,407,402,404,405,406,415,
            419,421,422,428,429,430,431,432,433,356,
            408,409,410,411,412,413,414,416,417,418,
            420,423,424,425,426,427,401,434,435,436,
            437,438,439,440,441,442,443,444,445,446,
            447,448,449,450,451,452,453,5,454,455,
            456,457,458,459,460,461,462,463,403,407,
            402,404,405,406,415,419,421,422,428,429,
            430,431,432,433,356,408,409,410,411,412,
            413,414,416,417,418,420,423,424,425,426,
            427,401,434,435,436,437,438,439,440,441,
            442,443,444,445,446,447,448,449,450,451,
            452,453,356,454,455,456,457,458,459,460,
            461,462,463,568,572,567,569,570,571,34,
            10,29,27,573,574,575,576,577,578,4,
            454,455,456,457,458,459,460,461,462,463,
            39,454,455,456,457,458,459,460,461,462,
            463,356,32,17,16,13,356,8,356,356,
            356,356,559,562,356,356,356,356,561,563,
            560,334,356,356,356,356,356,356,356,374,
            376,375,377,356,464,356,356,356,368,386,
            356,500,261,356,356,356,356,356,314,356,
            356,356,356,356,356,356,356,356,467,468,
            356,356,356,356,356,356,356,465,466,356,
            356,356,356,367,564,565,356,382,566,356,
            356,359,356,358
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }
    public final int asb(int index) { return 0; }
    public final int asr(int index) { return 0; }
    public final int nasb(int index) { return 0; }
    public final int nasr(int index) { return 0; }
    public final int terminalIndex(int index) { return 0; }
    public final int nonterminalIndex(int index) { return 0; }
    public final int scopePrefix(int index) { return 0;}
    public final int scopeSuffix(int index) { return 0;}
    public final int scopeLhs(int index) { return 0;}
    public final int scopeLa(int index) { return 0;}
    public final int scopeStateSet(int index) { return 0;}
    public final int scopeRhs(int index) { return 0;}
    public final int scopeState(int index) { return 0;}
    public final int inSymb(int index) { return 0;}
    public final String name(int index) { return null; }
    public final int getErrorSymbol() { return 0; }
    public final int getScopeUbound() { return 0; }
    public final int getScopeSize() { return 0; }
    public final int getMaxNameLength() { return 0; }

    public final static int
           NUM_STATES        = 31,
           NT_OFFSET         = 103,
           LA_STATE_OFFSET   = 581,
           MAX_LA            = 1,
           NUM_RULES         = 225,
           NUM_NONTERMINALS  = 24,
           NUM_SYMBOLS       = 127,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 226,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 101,
           EOLT_SYMBOL       = 104,
           ACCEPT_ACTION     = 355,
           ERROR_ACTION      = 356;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) { return 0; }
    public final int asi(int state) { return 0; }
    public final int nasi(int state) { return 0; }
    public final int inSymbol(int state) { return 0; }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
@


1.3.6.1
log
@Xtend-based implementation of XPand extensions was separated into .migration plugin.
@
text
@@


1.2
log
@support for instance method access in JAVA extensions added
@
text
@d47 3
a49 3
            1,1,2,2,1,1,1,1,1,1,
            1,1,1,1,1,1,1,3,2,2,
            0,1,2,1,2,0,1,1,1,1,
a51 2
            1,1,1,1,1,1,1,1,1,6,
            2,2,2,2,2,2,2,2,1,1,
d53 3
a55 1
            1,1,1
d79 3
a81 3
            8,8,8,22,22,23,23,23,23,23,
            23,23,23,23,15,15,15,15,20,20,
            20,20,21,21,16,16,13,13,10,10,
d84 17
a100 17
            10,10,10,10,10,9,9,9,9,9,
            9,11,11,11,11,11,11,11,11,7,
            7,7,7,7,7,7,7,7,7,7,
            7,6,6,17,493,37,40,43,44,113,
            470,199,146,145,43,44,319,806,252,150,
            804,230,6,240,837,114,231,299,196,195,
            43,44,814,38,144,838,164,197,199,296,
            287,825,38,290,299,196,195,43,44,839,
            840,807,841,164,197,199,842,295,805,281,
            290,1,155,154,43,44,157,843,836,156,
            396,196,195,43,44,844,160,354,354,165,
            197,199,303,100,155,154,43,44,157,354,
            354,156,657,37,40,43,44,354,158,592,
            42,41,43,44,327,354,261,722,42,41,
            43,44,787,221,787,221,787,221,334,222,
            336,222,344,222,787,221,354,354,354,354,
            200,222,354,354
d119 31
a149 1
            90,91,92,93,94,95,96,97,98,0,
d157 20
a176 33
            71,72,73,74,75,76,77,78,79,80,
            81,82,83,84,85,86,87,88,89,90,
            91,92,93,94,95,96,97,98,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,73,74,75,76,77,78,79,80,81,
            82,83,84,85,86,87,88,89,90,91,
            92,93,94,95,96,0,0,99,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,0,0,75,76,77,78,79,80,81,
            82,83,84,85,86,87,88,0,0,91,
            92,93,94,95,96,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,0,0,
            75,76,77,78,79,80,81,82,83,84,
            85,86,87,88,0,0,91,92,93,94,
            95,96,0,1,2,3,4,5,6,7,
d178 1
a178 1
            18,19,20,21,22,23,24,25,26,27,
d182 21
a202 37
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,74,75,76,100,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,0,0,0,0,0,0,97,
            98,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,0,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,0,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,0,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,0,0,0,0,21,22,23,
            24,25,26,0,1,2,3,4,5,6,
            7,8,9,10,0,1,2,3,4,5,
            6,7,8,9,10,0,0,0,0,0,
            0,0,0,0,0,0,11,12,0,0,
            0,0,17,18,19,20,0,0,0,0,
            0,0,0,27,27,27,27,0,65,0,
            0,0,66,68,0,71,72,0,0,0,
            0,0,69,0,0,0,0,0,0,0,
            0,0,89,90,0,0,0,0,0,0,
            97,98,0,0,0,0,0,67,73,74,
            0,70,77,0,0,73,0,74,0,0,
d205 1
a205 1
            0,0,0,0,0,0,0
d213 15
a227 25
            354,452,453,454,455,456,457,458,459,460,
            461,401,405,400,402,403,404,413,417,419,
            420,426,427,428,429,430,431,495,406,407,
            408,409,410,411,412,414,415,416,418,421,
            422,423,424,425,399,432,433,434,435,436,
            437,438,439,440,441,442,443,444,445,446,
            447,448,449,450,451,462,485,479,481,492,
            494,513,516,473,483,474,482,484,486,487,
            488,489,490,491,493,469,470,471,472,465,
            466,478,475,476,477,496,480,463,464,354,
            452,453,454,455,456,457,458,459,460,461,
            401,405,400,402,403,404,413,417,419,420,
            426,427,428,429,430,431,495,406,407,408,
            409,410,411,412,414,415,416,418,421,422,
            423,424,425,399,432,433,434,435,436,437,
            438,439,440,441,442,443,444,445,446,447,
            448,449,450,451,462,485,479,481,492,494,
            389,517,473,483,474,482,484,486,487,488,
            489,490,491,493,469,470,471,472,465,466,
            478,475,476,477,496,480,463,464,36,452,
            453,454,455,456,457,458,459,460,461,401,
            405,400,402,403,404,413,417,419,420,426,
            427,428,429,430,431,495,406,407,408,409,
            410,411,412,414,415,416,418,421,422,423,
            424,425,399,432,433,434,435,436,437,438,
d229 9
a237 9
            449,450,451,501,485,479,481,492,494,503,
            502,473,483,474,482,484,486,487,488,489,
            490,491,493,469,470,471,472,505,506,478,
            475,476,477,496,480,161,354,507,166,452,
            453,454,455,456,457,458,459,460,461,401,
            405,400,402,403,404,413,417,419,420,426,
            427,428,429,430,431,547,406,407,408,409,
            410,411,412,414,415,416,418,421,422,423,
            424,425,399,432,433,434,435,436,437,438,
d239 52
a290 9
            449,450,451,552,537,533,535,544,546,524,
            527,354,354,528,536,288,538,539,540,541,
            542,543,545,522,523,525,526,354,354,532,
            529,530,531,548,534,167,452,453,454,455,
            456,457,458,459,460,461,401,405,400,402,
            403,404,413,417,419,420,426,427,428,429,
            430,431,547,406,407,408,409,410,411,412,
            414,415,416,418,421,422,423,424,425,399,
            432,433,434,435,436,437,438,439,440,441,
d292 14
a305 46
            552,537,533,535,544,546,524,527,354,354,
            528,536,288,538,539,540,541,542,543,545,
            522,523,525,526,354,354,532,529,530,531,
            548,534,354,452,453,454,455,456,457,458,
            459,460,461,401,405,400,402,403,404,413,
            417,419,420,426,427,428,429,430,431,244,
            406,407,408,409,410,411,412,414,415,416,
            418,421,422,423,424,425,399,432,433,434,
            435,436,437,438,439,440,441,442,443,444,
            445,446,447,448,449,450,451,462,271,272,
            237,385,269,278,363,247,264,270,577,353,
            378,379,376,377,387,382,255,361,276,368,
            369,465,466,354,354,354,354,354,354,463,
            464,1,452,453,454,455,456,457,458,459,
            460,461,401,405,400,402,403,404,413,417,
            419,420,426,427,428,429,430,431,354,406,
            407,408,409,410,411,412,414,415,416,418,
            421,422,423,424,425,399,432,433,434,435,
            436,437,438,439,440,441,442,443,444,445,
            446,447,448,449,450,451,354,452,453,454,
            455,456,457,458,459,460,461,401,405,400,
            402,403,404,413,417,419,420,426,427,428,
            429,430,431,354,406,407,408,409,410,411,
            412,414,415,416,418,421,422,423,424,425,
            399,432,433,434,435,436,437,438,439,440,
            441,442,443,444,445,446,447,448,449,450,
            451,5,452,453,454,455,456,457,458,459,
            460,461,401,405,400,402,403,404,413,417,
            419,420,426,427,428,429,430,431,354,406,
            407,408,409,410,411,412,414,415,416,418,
            421,422,423,424,425,399,432,433,434,435,
            436,437,438,439,440,441,442,443,444,445,
            446,447,448,449,450,451,354,452,453,454,
            455,456,457,458,459,460,461,564,568,563,
            565,566,567,34,10,29,27,569,570,571,
            572,573,574,4,452,453,454,455,456,457,
            458,459,460,461,39,452,453,454,455,456,
            457,458,459,460,461,354,32,17,16,13,
            354,8,354,354,354,354,555,558,354,354,
            354,354,557,559,556,332,354,354,354,354,
            354,354,354,372,374,373,375,354,462,354,
            354,354,366,384,354,497,259,354,354,354,
            354,354,312,354,354,354,354,354,354,354,
            354,354,465,466,354,354,354,354,354,354,
            463,464,354,354,354,354,354,365,560,561,
            354,380,562,354,354,357,354,356
d333 1
a333 1
           LA_STATE_OFFSET   = 577,
d335 1
a335 1
           NUM_RULES         = 223,
d339 1
a339 1
           START_STATE       = 224,
d341 1
a341 1
           EOFT_SYMBOL       = 100,
d343 2
a344 2
           ACCEPT_ACTION     = 353,
           ERROR_ACTION      = 354;
@


1.1
log
@Initial contribution of the reworked XPand template engine from eclipse.org/gmt/oaw to be used until M2T deliveries are available.
The contribution (including LPG 1.1 runtime) was approved by Eclipse Legal at the very end of September, 2006.
@
text
@d2 7
a8 7
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
@

