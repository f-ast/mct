head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081020-0700:1.6
	ocl_qvt:1.6.0.6
	Root_ocl_qvt:1.6
	v20080722-1827:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080528-1052:1.6
	v20080516-1143:1.6
	v20080417-1610:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070921-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070518-1300:1.6
	v20070420-1000:1.6
	v20070405-1100:1.6
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20070208-1800:1.6
	v20070103-0300:1.6
	M4_20:1.6
	M3_20:1.6;
locks; strict;
comment	@# @;


1.6
date	2006.11.09.11.10.39;	author atikhomirov;	state Exp;
branches
	1.6.6.1;
next	1.5;

1.5
date	2006.11.08.13.15.43;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.08.11.31.19;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.06.16.36.18;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.23.17.57.12;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.20.33.48;	author atikhomirov;	state Exp;
branches;
next	;

1.6.6.1
date	2008.08.05.13.14.13;	author atikhomirov;	state Exp;
branches;
next	;
commitid	6b7e489852224567;


desc
@@


1.6
log
@do not pass comment up to syntax analyzer
@
text
@--
-- Copyright (c) 2006 Borland Software Corp.
-- 
-- All rights reserved. This program and the accompanying materials
-- are made available under the terms of the Eclipse Public License v1.0
-- which accompanies this distribution, and is available at
-- http://www.eclipse.org/legal/epl-v10.html
--
-- Contributors:
--    Artem Tikhomirov (Borland)
--

%options fp=XpandLexer,prefix=Char_
%options package=org.eclipse.gmf.internal.xpand.parser
%options template=../expression/parser/LexerTemplateD.g
%options export_terminals=("XpandParsersym.java", "TK_")
%options filter=XpandKWLexer.g
-- stupid endrem needs 6
%options lalr=6

$Import
	../expression/parser/ExpressionLexer.g
$End

$Define
	$kw_lexer_class /.XpandKWLexer./
	$getKindMethodImpl /.public final int getKind(int i) { // Classify character at ith location
            char c = (i >= getStreamLength() ? '\uffff' : getCharValue(i));
            return (c < 128 // ASCII Character
                      ? tokenKind[c]
                      : c == '\uffff'
                           ? Char_EOF
                           : getNonAsciiKind(c));
        }./
$End

$Headers
	/.
		private final static int getNonAsciiKind(char c) {
			if (c == '\u00AB') {
				return Char_LG;
			}
			if (c == '\u00BB') {
				return Char_RG;
			}
			return Char_AfterASCII;
		}
./
$End

$Export
	TEXT
	LG
--	RG
$End

$Terminals
	LG ::= '\u00AB'
	RG ::= '\u00BB'
$End

$Rules
	Token ::= LG
		/.$BeginAction
			makeToken($_LG);
		$EndAction./

	Token ::= RG textAny lgOpt
		/.$BeginAction
			makeToken($_TEXT);
		$EndAction./

	textAny -> $empty
	textAny -> textAny textAnyChars
	textAnyChars -> AfterASCII | NotSlashOrStar | '*' | '/' | CtlCharNotWS

	-- lgOpt -> EOF | LG
	lgOpt -> $empty
	lgOpt -> LG

	Token ::= R E M RG commentAny lgPlus E N D R E M 
		/.$BeginAction
			skipToken();
		$EndAction./

	commentAny -> $empty
	commentAny -> commentAny commentChar 
	commentAny -> commentAny LG commentCharNotE
	commentAny -> commentAny LG E commentCharNotN
	commentAny -> commentAny LG E N commentCharNotD
	commentAny -> commentAny LG E N D commentCharNotR
	commentAny -> commentAny LG E N D R commentCharNotE
	commentAny -> commentAny LG E N D R E commentCharNotM

	commentChar -> commentCharNoUpper | UpperCaseLetter

	commentCharNoUpper -> AfterASCII | Digit | SpecialNotSlash | WSChar | RG | '*' | '/' | CtlCharNotWS | LowerCaseLetter | '_' 

	commentCharNotE ::= commentCharNoUpper | UpperCaseLetterNotE
	commentCharNotN ::= commentCharNoUpper | UpperCaseLetterNotN
	commentCharNotD ::= commentCharNoUpper | UpperCaseLetterNotD
	commentCharNotR ::= commentCharNoUpper | UpperCaseLetterNotR
	commentCharNotM ::= commentCharNoUpper | UpperCaseLetterNotM

	UpperCaseLetterNotE -> A | B | C | D | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
	UpperCaseLetterNotN -> A | B | C | D | E | F | G | H | I | J | K | L | M | O | P | Q | R | S | T | U | V | W | X | Y | Z
	UpperCaseLetterNotD -> A | B | C | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
	UpperCaseLetterNotR -> A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | S | T | U | V | W | X | Y | Z
	UpperCaseLetterNotM -> A | B | C | D | E | F | G | H | I | J | K | L | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
	
	lgPlus ::= LG | lgPlus LG
$End@


1.6.6.1
log
@[243154] Use OCL instead of home-grown expression language
@
text
@d2 1
a2 1
-- Copyright (c) 2006, 2008 Borland Software Corp.
a19 1
%options include_directory="../expression/parser/;../../../../../../../../org.eclipse.ocl/src/org/eclipse/ocl/lpg"
d22 1
a22 2
--	../expression/parser/ExpressionLexer.g
	../../../../../../../../org.eclipse.ocl/src/org/eclipse/ocl/parser/OCLLexer.g
d27 22
a48 12
	$getNonASCIICharKindMethodImpl 
	    /.if (c == '\u00AB') {
              return Char_LG;
          }
          if (c == '\u00BB') {
              return Char_RG;
          }
          if (c == '\u00b4') {
              return Char_Acute; // For OCLLexer
          }
          return Char_AfterASCII;
        ./
@


1.5
log
@comment removed
@
text
@a52 1
	COMMENT
d83 1
a83 1
			makeToken($_COMMENT);
@


1.4
log
@polishing templates - parser:added initialization code macro, lexer:getKind implementation made overridable, useless methods removed, braces styles updated
@
text
@a83 1
			//makeToken(getRhsFirstTokenIndex(1), getRhsLastTokenIndex(12), $_COMMENT);
@


1.3
log
@handle dollar sign ($) correctly inside strings/comments
do not use external includes and copy external templates locally to be able to tweak them
minor changes to the includes
@
text
@d25 12
d39 8
a46 6
	private final static int getNonAsciiKind(char c) {
		if (c == '\u00AB') {
			return Char_LG;
		}
		if (c == '\u00BB') {
			return Char_RG;
d48 1
a48 7
		return Char_AfterASCII;
	}
	./
$End

$Define
	$kw_lexer_class /.$XpandKWLexer./
@


1.2
log
@imports were not processed correctly - fix, test added
updated copyrights
@
text
@d15 1
a15 1
%options template=LexerTemplateD.g
@


1.1
log
@Initial contribution of the reworked XPand template engine from eclipse.org/gmt/oaw to be used until M2T deliveries are available.
The contribution (including LPG 1.1 runtime) was approved by Eclipse Legal at the very end of September, 2006.
@
text
@d2 1
a2 1
-- Copyright (c) 2006 Eclipse.org
a20 11
$Notice
/*******************************************************************************
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
$End

@

