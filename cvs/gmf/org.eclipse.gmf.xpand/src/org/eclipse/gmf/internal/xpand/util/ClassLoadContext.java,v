head	1.1;
access;
symbols
	v20081022-1925:1.1
	v20081020-0700:1.1
	ocl_qvt:1.1.0.6
	Root_ocl_qvt:1.1
	v20080722-1827:1.1
	v20080718-1731:1.1
	v20080716-1600:1.1
	v20080716-1642:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080528-1052:1.1
	v20080516-1143:1.1
	v20080417-1610:1.1
	v20080322-0000:1.1
	v20080222-1200:1.1
	v20071130-1111:1.1
	v20071124-0000:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070921-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	RC3_20:1.1
	v20070608-1300:1.1
	v20070605-1400:1.1
	v20070601-1400:1.1
	v20070518-1300:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.05.14.17.55.50;	author atikhomirov;	state Exp;
branches;
next	;
commitid	75ac4648a2a64567;


desc
@@


1.1
log
@abstract class loading concept
@
text
@package org.eclipse.gmf.internal.xpand.util;

public abstract class ClassLoadContext {

	public abstract Class<?> load(String qualifiedName);

	public static class Naive extends ClassLoadContext {
		private final ClassLoader[] myClassLoaders;

		public Naive(ClassLoader... classLoaders) {
			this.myClassLoaders = classLoaders;
		}

		@@Override
		public Class<?> load(String qualifiedName) {
			for (ClassLoader cl : myClassLoaders) {
				try {
					return cl.loadClass(qualifiedName);
				} catch (Exception ex) {
					// IGNORE
				}
			}
			return null;
		}
	}
}
@
