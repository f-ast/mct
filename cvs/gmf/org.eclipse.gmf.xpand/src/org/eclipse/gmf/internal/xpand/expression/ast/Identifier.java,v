head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081020-0700:1.3
	ocl_qvt:1.3.0.6
	Root_ocl_qvt:1.3
	v20080722-1827:1.3
	v20080718-1731:1.3
	v20080716-1600:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080528-1052:1.3
	v20080516-1143:1.3
	v20080417-1610:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070921-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	v20070420-1000:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20070208-1800:1.3
	v20070103-0300:1.3
	M4_20:1.3
	M3_20:1.3;
locks; strict;
comment	@# @;


1.3
date	2006.10.23.18.58.22;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.23.18.39.37;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.20.33.49;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@finals
@
text
@/*
 * <copyright>
 *
 * Copyright (c) 2005-2006 Sven Efftinge and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Sven Efftinge - Initial API and implementation
 *
 * </copyright>
 */
package org.eclipse.gmf.internal.xpand.expression.ast;

/**
 * @@author Sven Efftinge
 * @@author Arno Haase
 */
public class Identifier extends SyntaxElement {
    private final String value;

    public Identifier(final int start, final int end, final int line, final String value) {
        super(start, end, line);
        this.value = value;
    }

    public Identifier append(final Identifier t) {
    	return new Identifier(this.start, t.end, this.line, value + t.value);
    }

    public String getValue() {
        return value;
    }

    @@Override
    public String toString() {
        return value;
    }
}
@


1.2
log
@unmodifiable model, and refactored Identifiers as the only place that required ast to be modified
@
text
@d22 1
a22 1
    private String value;
@


1.1
log
@Initial contribution of the reworked XPand template engine from eclipse.org/gmt/oaw to be used until M2T deliveries are available.
The contribution (including LPG 1.1 runtime) was approved by Eclipse Legal at the very end of September, 2006.
@
text
@a16 2
import lpg.lpgjavaruntime.IToken;

d29 2
a30 10
    // FIXME not good to depend from IToken here, especially when migrating to different parser ;)
    public Identifier append(final IToken t) {
        value = value + t.toString();
        end = t.getEndColumn();
        return this;
    }

    public void append(final Identifier t) {
        value = value + t.value;
        end = t.end;
@

