head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081020-0700:1.2
	ocl_qvt:1.2.0.6
	Root_ocl_qvt:1.2
	v20080722-1827:1.2
	v20080718-1731:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080528-1052:1.2
	v20080516-1143:1.2
	v20080417-1610:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070921-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	v20070420-1000:1.2
	v20070405-1100:1.2
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	v20070103-0300:1.2
	M4_20:1.2
	M3_20:1.2;
locks; strict;
comment	@# @;


1.2
date	2006.10.23.18.58.22;	author atikhomirov;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2006.10.18.20.33.51;	author atikhomirov;	state Exp;
branches;
next	;

1.2.6.1
date	2008.08.05.12.49.25;	author atikhomirov;	state Exp;
branches;
next	1.2.6.2;
commitid	546c48984c4a4567;

1.2.6.2
date	2008.08.07.23.23.37;	author atikhomirov;	state Exp;
branches;
next	;
commitid	55a7489b83f64567;


desc
@@


1.2
log
@finals
@
text
@/*******************************************************************************
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
package org.eclipse.gmf.internal.xpand.ast;

import org.eclipse.gmf.internal.xpand.expression.ast.StringLiteral;
import org.eclipse.gmf.internal.xpand.expression.ast.SyntaxElement;

public class NamespaceImport extends SyntaxElement {
	private final String importString;

	public NamespaceImport(int start, int end, int line, StringLiteral importString) {
		super(start, end, line);
		this.importString = importString.getValue();
	}

	public String getImportString() {
		return importString;
	}

}
@


1.2.6.1
log
@[243154] Use OCL instead of home-grown expression language
@
text
@d1 2
a2 2
/*
 * Copyright (c) 2006, 2008 committers of openArchitectureWare and others.
d8 1
a8 1
 */
d11 1
a12 1
import org.eclipse.ocl.cst.StringLiteralExpCS;
a13 1
// XXX XpandAnalyzable to check if metamodel is accessible
d17 1
a17 1
	public NamespaceImport(int start, int end, int line, StringLiteralExpCS importString) {
d19 1
a19 1
		this.importString = importString.getStringSymbol();
@


1.2.6.2
log
@[243154] Use OCL instead of home-grown expression language - fixing and running tests.
@
text
@d18 1
a18 1
	public NamespaceImport(int start, int end, int line, StringLiteralExpCS importCS) {
d20 1
a20 7
		// FIXME for complete care, look at AbstractOCLAnalyzer#processStringEscapes
		String quotedImport = importCS.getStringSymbol();
		if (quotedImport.length() <= 2) {
			importString = "";
		} else {
			importString = quotedImport.substring(1, quotedImport.length() -1);
		}
@


1.1
log
@Initial contribution of the reworked XPand template engine from eclipse.org/gmt/oaw to be used until M2T deliveries are available.
The contribution (including LPG 1.1 runtime) was approved by Eclipse Legal at the very end of September, 2006.
@
text
@d17 4
a20 4
    public NamespaceImport(int start, int end, int line, StringLiteral importString) {
        super(start, end, line);
        this.importString = importString.getValue();
    }
d22 3
a24 3
    public String getImportString() {
        return importString;
    }
@

