<<<<<<
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    public void historyNotification (OperationHistoryEvent event) {
        IUndoableOperation operation = event.getOperation ();
        if (operation != null) {
            IUndoContext partContext = getUndoContext ();
            if (partContext != null && operation.hasContext (partContext)) {
                PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
                    <<<<<<

                }

                );
            }
        }
    } <<<<<<
    <<<<<<
    <<<<<<

}

>>>>>>
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    public void historyNotification (OperationHistoryEvent event) {
        int type = event.getEventType ();
        if (type == OperationHistoryEvent.UNDONE || type == OperationHistoryEvent.REDONE || type == OperationHistoryEvent.OPERATION_ADDED || type == OperationHistoryEvent.OPERATION_CHANGED || type == OperationHistoryEvent.OPERATION_NOT_OK || type == OperationHistoryEvent.OPERATION_REMOVED) {
            IUndoableOperation operation = event.getOperation ();
            if (operation != null) {
                IUndoContext partContext = getUndoContext ();
                if (partContext != null && operation.hasContext (partContext)) {
                    PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
                        >>>>>>

                    }

                    );
                }
            }
        }
    } >>>>>>
    >>>>>>
    >>>>>>

}

