<<<<<<
public class MigrationDelegateImpl implements MigrationDelegate {

    protected XMLResource getResource ();
    protected static EAttribute createNewAttribute (String name, EClassifier eType, boolean isMany);
    protected static EAttribute createNewAttribute (String name, EClassifier eType, boolean isMany, boolean isObligatory); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    public EStructuralFeature getRenamedParentFeatureFor (EClass clazz, String name); <<<<<<

    public String getID (EObject obj); <<<<<<
    <<<<<<
    <<<<<<

    public void postProcess (); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    public void registerRenamedParentAttribute (EClass eClass, String oldName, EStructuralFeature newStructuralFeature);
    public void registerRenamedParentAttributes (EClass eClass, Map < String, EStructuralFeature > renamedAttributes); <<<<<<

    public void setResource (XMLResource resource);
}

>>>>>>
public class MigrationDelegateImpl implements MigrationDelegate {

    protected Resource getResource ();
    protected static EAttribute createNewAttribute (String name, EDataType eType, boolean isMany);
    protected static EAttribute createNewAttribute (String name, EDataType eType, boolean isMany, boolean isObligatory); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    public EStructuralFeature getTracedParentFeatureFor (EClass clazz, String name); >>>>>>
    >>>>>>
    >>>>>>

    public boolean setManyReference (EObject object, EStructuralFeature feature, Object [] values); >>>>>>

    public void postLoad ();
    public void preResolve (); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    public void registerTracedFeatureForHierarchy (EClass eClass, Map < String, EStructuralFeature > tracedFeature);
    public void registerTracedFeatureForHierarchy (EClass eClass, String xmlName, EStructuralFeature tracerFeature);
    public void setResource (Resource resource);
}

