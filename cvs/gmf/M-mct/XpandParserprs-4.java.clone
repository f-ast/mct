[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
<<<<<<
public class XpandParserprs implements XpandParsersym, lpg.lpgjavaruntime.ParseTable {
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    final public static int ERROR_SYMBOL = 83, MAX_NAME_LENGTH = 24, SCOPE_SIZE = 18, SCOPE_UBOUND = 17;
    final public static int ACCEPT_ACTION = 1568, EOFT_SYMBOL = 40, EOLT_SYMBOL = 40, ERROR_ACTION = 1569, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1726, MAX_LA = 2, NT_OFFSET = 83, NUM_NONTERMINALS = 74, NUM_RULES = 157, NUM_STATES = 184, NUM_SYMBOLS = 157, SEGMENT_SIZE = 8192, START_STATE = 1324;
    <<<<<<
    <<<<<<
    public interface Asb {
        final public static char asb [] = {0, 69, 144, 71, 1, 183, 73, 1, 77, 70, 74, 73, 119, 183, 183, 183, 66, 119, 183, 149, 71, 141, 141, 128, 125, 125, 128, 72, 119, 119, 142, 142, 63, 116, 125, 116, 116, 150, 230, 229, 119, 185, 182, 230, 182, 135, 224, 135, 229, 119, 187, 80, 183, 135, 189, 116, 230, 116, 116, 191, 182, 170, 167, 165, 158, 100, 100, 96, 258, 258, 193, 119, 6, 155, 156, 159, 166, 258, 171, 119, 119, 96, 96, 96, 96, 96, 226, 79, 116, 182, 135, 182, 80, 97, 98, 98, 98, 96, 230, 208, 96, 116, 32, 30, 228, 109, 98, 98, 98, 96, 97, 232, 131, 137, 234, 182, 234, 96, 182, 182, 187, 116, 187, 236, 100, 230, 238, 230, 230, 96, 155, 230, 97, 132, 96, 182, 119, 121, 119, 260, 183, 189, 182, 97, 96, 56, 236, 96, 96, 230, 262, 58, 122, 96, 182, 96, 79, 187, 230, 146, 97, 59, 59, 119, 123, 182, 182, 264, 266, 147, 98, 96, 182, 121, 96, 236, 236, 268, 181, 98, 98, 182, 30, 146, 270};

    };

    public interface Asr {
        final public static byte asr [] = {0, 62, 35, 36, 61, 0, 2, 7, 17, 8, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 20, 16, 23, 19, 18, 21, 22, 24, 27, 32, 0, 2, 7, 17, 8, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 20, 23, 19, 18, 21, 22, 24, 27, 6, 16, 0, 66, 17, 26, 65, 0, 3, 4, 5, 29, 1, 0, 82, 40, 61, 41, 62, 36, 35, 0, 8, 0, 41, 31, 37, 67, 69, 71, 72, 73, 75, 81, 76, 74, 70, 39, 68, 63, 64, 27, 24, 7, 17, 8, 2, 20, 16, 23, 19, 18, 21, 22, 9, 10, 11, 12, 13, 14, 15, 3, 4, 5, 1, 0, 71, 72, 73, 0, 29, 1, 28, 25, 2, 0, 2, 17, 26, 39, 25, 0, 17, 26, 1, 0, 41, 36, 35, 40, 0, 44, 43, 0, 7, 2, 47, 25, 39, 28, 34, 29, 59, 58, 52, 53, 54, 55, 56, 57, 42, 49, 43, 44, 50, 45, 1, 30, 6, 32, 33, 65, 38, 78, 79, 48, 80, 17, 26, 0, 46, 0, 31, 0, 37, 0, 47, 0, 1, 43, 44, 30, 32, 33, 65, 38, 78, 79, 80, 26, 2, 7, 28, 42, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 17, 59, 34, 6, 29, 0, 77, 0, 32, 33, 6, 0, 51, 0, 38, 0, 30, 0, 42, 45, 6, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 17, 29, 59, 34, 60, 7, 28, 2, 0, 78, 0, 69, 0,
          75, 0, 79, 0, 67, 0, 81, 0};

    };

    public interface BaseAction {
        final public static char baseAction [] = {62, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 41, 41, 23, 23, 21, 21, 22, 22, 20, 20, 63, 63, 63, 63, 63, 63, 19, 19, 64, 64, 17, 17, 65, 65, 18, 18, 18, 42, 42, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 74, 74, 36, 36, 34, 34, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 62, 62, 37, 37, 45, 45, 66, 66, 33, 33, 43, 43, 46, 44, 44, 47, 39, 39, 39, 39, 35, 35, 40, 40, 40, 38, 38, 32, 48, 48, 49, 49, 49, 49, 49, 49, 31, 56, 56, 30, 30, 50, 50, 50, 57, 58, 58, 58, 68, 68, 67, 59, 51, 69, 69, 52, 70, 70, 60, 60, 53, 61, 61, 71, 71, 54, 55, 72, 72, 1, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 140, 1, 260, 86, 80, 54, 79, 1498, 50, 55, 1514, 38, 1387, 44, 45, 46, 47, 48, 49, 33, 116, 1445, 119, 120, 121, 122, 123, 124, 344, 130, 131, 132, 1, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327,
          1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 140, 1, 260, 86, 80, 54, 79, 1498, 50, 55, 1514, 37, 1387, 44, 45, 46, 47, 48, 49, 286, 118, 1445, 119, 120, 121, 122, 123, 124, 309, 130, 131, 132, 34, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 1333, 1490, 463, 1395, 1529, 78, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 59, 86, 1488, 464, 1542, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 59, 86, 1509, 1558, 78, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 59, 86, 58, 1470, 1553, 106, 86, 80, 1527, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1526, 1, 106, 86
          , 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 133, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1449, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1534, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1382, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1535, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1526, 1, 134, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1539, 1, 106, 86, 80, 54, 79, 1498,
          50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1543, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1548, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1556, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1468, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 135, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1427, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1560, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36,
          1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 148, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1473, 1, 187, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 1552, 187, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 2, 162, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 7, 1521, 162, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1538, 162, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 9, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 15, 212, 86, 80, 54, 79,
          1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 1563, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 1565, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 1478, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 17, 1517, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 19, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 29, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 21, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 33, 1327, 260, 86, 80, 54, 79, 1498, 50, 55, 1514, 4, 1387, 44, 45, 46, 47, 48, 49, 284, 86, 80, 54, 79, 1498, 1453, 55, 1514, 300, 86, 80, 1497, 79, 1498, 26, 86, 80, 1497, 79, 1498, 26, 86, 80, 1497, 79, 1498, 26, 86,
          80, 1369, 79, 1498, 26, 86, 80, 1372, 79, 1498, 26, 86, 80, 1376, 79, 1498, 1494, 292, 267, 340, 292, 317, 1499, 290, 88, 290, 85, 341, 76, 26, 86, 80, 1379, 79, 1498, 26, 86, 80, 1385, 79, 1498, 26, 86, 80, 1541, 79, 1498, 26, 86, 80, 1391, 79, 1498, 32, 94, 1378, 1370, 94, 1378, 1370, 62, 345, 92, 361, 348, 91, 361, 59, 86, 139, 361, 1359, 351, 361, 1384, 266, 361, 402, 341, 361, 205, 388, 361, 1201, 1446, 361, 1241, 428, 361, 286, 90, 1378, 1370, 1505, 158, 1504, 1505, 158, 1507, 361, 1505, 158, 1536, 1505, 158, 1537, 1505, 158, 1393, 1505, 158, 1550, 1505, 158, 1554, 1505, 158, 1555, 1505, 158, 1559, 361, 103, 42, 361, 1384, 103, 361, 103, 1505, 158, 153, 100, 125, 1443, 1395, 103, 419, 1221, 361, 302, 302, 302, 423, 302, 302, 302, 437, 310, 469, 361, 1505, 158, 1471, 1505, 158, 1564, 1505, 158, 1566, 402, 112, 472, 112, 472, 428, 110, 485, 109, 1505, 218, 112, 469, 265, 98, 101, 113, 1323, 1326, 104, 1549, 159, 354, 325, 333, 337, 112, 350, 330, 40, 1561, 359, 355, 369, 168, 364, 365, 372, 368
          , 382, 379, 373, 383, 384, 385, 1544, 386, 387, 72, 392, 324, 391, 1388, 13, 395, 396, 127, 406, 400, 409, 411, 412, 136, 413, 1430, 414, 151, 415, 416, 420, 425, 426, 432, 427, 306, 435, 442, 446, 342, 1433, 438, 449, 451, 453, 455, 459, 460, 461, 7, 465, 468, 480, 470, 473, 476, 478, 482, 484, 483, 486, 487, 1569, 1569};

    };

    public interface BaseCheck {
        final public static short baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 0, 5, 4, 4, 0, 1, 0, 1, 0, 3, 0, 2, 4, 0, 2, 4, 6, 9, 11, 9, 2, 2, 0, 1, 2, 6, 9, 2, 0, 3, 1, 1, 1, 1, 1, 1, 3, 0, 4, 0, 1, 1, 1, 1, 2, 3, 5, 6, 0, 3, 1, 1, 5, 0, 1, 8, 0, 2, 0, 2, 6, 0, 4, 0, 2, 6, 10, 0, 1, - 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, 0, 0, 0, 0, 0, 0, 0, - 5, 0, 0, 0, - 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, 0, 0, 0, 0, 0, 0, 0, - 16, 0, 0, 0, - 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 152, 0, 0, -
          102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 12, 0, 0, - 151, 0, - 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 49, 0, 0, 0, 0, - 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 71, 0, 0, 0, 0, - 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 100, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 160, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 105, 0,
          0, 0, 0, 0, 0, 0, 0, - 32, 0, 0, 0, 0, 0, - 35, 0, 0, 0, 0, 0, - 58, 0, 0, 0, 0, 0, - 33, 0, 0, 0, 0, 0, - 36, 0, 0, 0, 0, 0, - 55, 0, 0, 0, 0, 0, 0, - 30, - 1, - 64, - 31, - 74, 0, - 28, 0, - 29, 0, - 6, 0, - 57, 0, 0, 0, 0, 0, - 88, 0, 0, 0, 0, 0, - 101, 0, 0, 0, 0, 0, - 121, 0, 0, 0, 0, 0, - 10, 0, 0, 0, 0, 0, 0, - 8, - 13, 0, - 42, - 14, 0, - 44, - 80, 0, 0, - 89, 0, - 15, - 91, 0, - 75, - 115, - 87, - 11, - 119, 0, - 73, - 135, 0, 0, - 142, 0, - 137, - 154, - 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 166, 0, 0, - 172, 0, - 24, - 181, - 25, 0, 0, 0, 0, 0, 0, 0, - 34, - 112, 0, - 60, - 3, - 9, - 20, - 113, - 21, - 22, - 27, - 130, 0, - 159, - 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 156, 0, - 161, 0, - 162, - 173, 0, - 178, 0, 0, 0, 0, - 183, 0, 0, 0, 0, 0, 0, 0, 0, - 17, - 18, - 19, - 23, - 26, - 37, - 38, - 39, 0, 0, - 40, - 41, - 43, - 45, - 46, - 47, - 48, - 50, - 52, - 53, - 54, - 56, - 59, - 61, 0, - 62, - 63, - 68, - 69, - 70, - 76, 0, 0
          , - 77, - 78, 0, - 79, - 86, - 90, - 98, - 99, 0, - 103, 0, - 104, 0, - 111, - 114, - 116, - 120, - 122, - 123, - 125, - 126, - 127, - 128, - 131, - 133, 0, - 136, - 138, - 139, - 140, - 141, - 145, - 146, - 149, - 150, - 157, - 158, - 163, - 164, - 167, - 168, - 169, - 175, - 176, - 177, - 182, - 184, 0};

    };

    public interface InSymb {
        final public static char inSymb [] = {0, 0, 145, 149, 116, 41, 126, 129, 61, 26, 127, 130, 62, 8, 122, 121, 35, 36, 85, 1, 26, 26, 26, 118, 1, 29, 1, 26, 28, 7, 116, 116, 2, 25, 28, 2, 25, 1, 29, 119, 86, 88, 86, 119, 86, 6, 33, 6, 1, 46, 115, 114, 113, 6, 115, 25, 29, 25, 33, 85, 132, 107, 104, 103, 100, 17, 7, 2, 91, 9, 1, 20, 16, 93, 101, 102, 105, 24, 109, 27, 64, 63, 68, 39, 70, 74, 76, 26, 25, 86, 6, 86, 114, 45, 50, 42, 147, 2, 111, 86, 2, 2, 2, 117, 111, 34, 148, 146, 49, 2, 48, 1, 150, 111, 111, 111, 111, 77, 41, 86, 115, 25, 115, 107, 6, 111, 1, 86, 117, 33, 89, 111, 51, 151, 2, 152, 38, 115, 38, 111, 113, 115, 86, 30, 60, 6, 110, 39, 25, 117, 115, 1, 144, 71, 1, 78, 26, 115, 111, 16, 30, 111, 153, 66, 154, 72, 111, 115, 111, 124, 44, 65, 143, 115, 79, 43, 106, 115, 111, 30, 30, 155, 106, 106, 115};

    };

    public interface IsKeyword {
        final public static byte isKeyword [] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    };

    public interface Name {
        final public static String name [] = {"", "?", "::", ":", "(", ")", "{", "}", "[", "]", "->", "!", "&&", "||", "=", "==", "!=", ">=", "<=", ">", "<", "+", "-", "*", "/", ".", ",", "|", "\\u00AB", "$empty", "IDENT", "STRING", "INT_CONST", "REAL_CONST", "let", "switch", "implies", "new", "false", "true", "null", "default", "case", "Collection", "List", "Set", "typeSelect", "collect", "select", "reject", "exists", "notExists", "forAll", "IMPORT", "EXTENSION", "AROUND", "ENDAROUND", "DEFINE", "ENDDEFINE", "ERROR", "EXPAND", "FOR", "SEPARATOR", "AS", "ITERATOR", "FOREACH", "ENDFOREACH", "FILE", "ENDFILE", "IF", "ELSEIF", "ELSE", "ENDIF", "LET", "ENDLET", "PROTECT", "CSTART", "CEND", "ID", "DISABLE", "ENDPROTECT", "EOF_TOKEN", "TEXT", "COMMENT", "ERROR_TOKEN", "expression", "castedExpression", "type", "infixExpression", "chainExpression", "ifExpression", "switchExpression", "orExpression", "andExpression", "impliesExpression", "relationalExpression", "additiveExpression", "relationalOperator",
          "multiplicativeExpression", "additiveOperator", "unaryExpression", "multiplicativeOperator", "infixExpressionSuffix", "featureCall", "primaryExpression", "parameterList", "simpleType", "collectionExpressionName", "declaredParameterList", "collectionTypeName", "qualifiedType", "defineOrAroundSeq", "define", "around", "anImport", "anExtensionImport", "pointcut", "sequence", "text", "statement", "definitionName"};

    };

    public interface Nasb {
        final public static byte nasb [] = {0, 32, 5, 64, 6, 5, 41, 6, 5, 64, 43, 41, 12, 5, 5, 5, 8, 5, 5, 5, 64, 64, 64, 5, 60, 60, 5, 64, 39, 39, 28, 28, 24, 17, 60, 24, 17, 5, 5, 5, 5, 5, 47, 5, 47, 5, 5, 5, 5, 12, 5, 1, 5, 5, 5, 17, 5, 17, 24, 5, 47, 5, 5, 5, 35, 2, 2, 16, 5, 5, 5, 12, 2, 56, 37, 52, 5, 5, 5, 5, 50, 2, 2, 2, 2, 2, 5, 54, 17, 47, 5, 47, 1, 2, 2, 2, 2, 2, 5, 5, 2, 17, 2, 5, 5, 20, 2, 2, 2, 2, 2, 5, 62, 66, 5, 47, 5, 2, 48, 47, 5, 17, 5, 5, 2, 5, 5, 5, 5, 2, 56, 5, 2, 5, 2, 47, 5, 58, 5, 5, 5, 5, 47, 2, 2, 5, 5, 2, 2, 5, 5, 14, 10, 2, 47, 2, 54, 5, 5, 68, 2, 70, 70, 5, 5, 47, 47, 5, 5, 5, 2, 2, 47, 58, 2, 5, 5, 5, 72, 2, 2, 47, 5, 68, 5};

    };

    public interface Nasr {
        final public static char nasr [] = {0, 48, 5, 8, 10, 0, 46, 0, 35, 0, 71, 0, 2, 0, 70, 0, 8, 5, 3, 0, 5, 8, 6, 0, 5, 3, 36, 0, 38, 39, 45, 0, 66, 62, 0, 64, 0, 65, 0, 1, 0, 47, 0, 38, 39, 37, 0, 31, 30, 0, 67, 0, 63, 0, 56, 0, 42, 0, 61, 0, 40, 0, 68, 0, 33, 0, 69, 0, 41, 0, 60, 0, 72, 0};

    };

    public interface NonterminalIndex {
        final public static byte nonterminalIndex [] = {0, 110, 106, 87, 0, 109, 103, 0, 107, 88, 104, 0, 0, 0, 0, 0, 0, 98, 100, 96, 95, 93, 94, 92, 91, 89, 90, 86, 85, 0, 0, 118, 117, 0, 105, 116, 108, 111, 112, 113, 0, 0, 102, 0, 0, 0, 114, 115, 0, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 99, 101, 0, 120, 0, 0, 0, 0, 0, 0, 0};

    };

    public interface ScopeLa {
        final public static byte scopeLa [] = {81, 32, 67, 43, 75, 73, 6, 69, 30, 6, 6, 30, 6, 32, 6, 34, 30, 17};

    };

    <<<<<<
    <<<<<<
    public interface ScopeRhs {
        final public static char scopeRhs [] = {0, 115, 155, 111, 79, 111, 78, 111, 77, 76, 0, 80, 0, 115, 1, 38, 111, 74, 0, 74, 0, 154, 144, 115, 111, 70, 0, 72, 0, 115, 143, 153, 1, 38, 111, 39, 0, 66, 0, 115, 152, 111, 68, 0, 68, 0, 132, 0, 118, 0, 0, 111, 2, 91, 0, 5, 0, 111, 60, 1, 2, 91, 0, 117, 16, 0, 7, 0, 117, 2, 1, 0, 111, 2, 0, 89, 34, 0, 102, 0, 106, 44, 0, 3, 92, 0, 0, 106, 30, 43, 124, 16, 6, 111, 2, 24, 0, 124, 16, 6, 111, 2, 24, 0, 41, 3, 92, 7, 0, 111, 2, 24, 0, 5, 6, 0, 41, 3, 92, 7, 0, 107, 45, 107, 0, 3, 91, 0, 110, 51, 1, 27, 0, 3, 86, 0};

    };

    public interface ScopeState {
        final public static char scopeState [] = {0, 1478, 1455, 0, 1453, 1387, 0, 1277, 1133, 1109, 1085, 1260, 1157, 1221, 1241, 1201, 1180, 1061, 248, 188, 1036, 1011, 956, 928, 984, 898, 868, 838, 808, 778, 748, 718, 383, 348, 688, 658, 313, 628, 598, 568, 538, 508, 478, 448, 278, 418, 218, 158, 0};

    };

    <<<<<<
    <<<<<<
    public interface TermAction {
        final public static char termAction [] = {0, 117, 1516, 418, 1651, 1652, 1653, 1569, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1489, 1523, 1651, 1652, 1653, 1569, 1569, 1569, 1516, 418, 1651, 1652, 1653, 508, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1489, 1523, 1569, 1569, 448, 1373, 1626, 274, 1487, 478, 1367, 538, 1569, 1568, 628, 568, 1710, 1524, 1569, 1516, 418, 1651, 1652, 1653, 1622, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 111, 1432, 1523, 1569, 1516, 418, 1651, 1652, 1653, 87, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1442, 1434, 1523, 1569, 1540, 418, 1651, 1652, 1653, 1329, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1491, 1523, 1569, 1516, 598, 1651, 1652, 1653, 1569,
          248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1516, 418, 1651, 1652, 1653, 1316, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1516, 598, 1651, 1652, 1653, 1569, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 28, 1600, 1600, 1600, 1600, 1600, 1569, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1569, 1516, 598, 1651, 1652, 1653, 20, 95, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 1569, 1631, 1632, 413, 1628, 1629, 1630, 1569, 1516, 99, 1651, 1652, 1653, 1569, 1492, 93, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 1569, 1489, 97, 1651, 1652, 1653, 87, 89, 313, 1569, 1432, 75, 1298, 1331, 1298, 1298, 1298, 32, 1591, 1592, 1593, 1594, 1595, 1596, 87, 87, 313, 274, 1487, 1493, 1569, 1331, 1331, 1569, 1329, 1286, 1502, 1569, 1434, 1292, 28, 102, 134, 214, 1569, 1569,
          1603, 1366, 1569, 1665, 1569, 1569, 1329, 1329, 1569, 1569, 1500, 1962, 1304, 1569, 1503, 128, 1310, 1501, 1569, 1569, 718, 778, 1569, 1569, 1447, 1448, 75, 1569, 1450, 1506, 1604, 1451, 1698, 1569, 1452, 748, 1569, 1569, 1569, 8, 14, 18, 41, 1525, 1335, 16, 1569, 1508, 1347, 1569, 6, 658, 1599, 1674, 1569, 378, 126, 343, 1341, 2037, 1569, 1533, 1383, 1569, 1683, 1569, 54, 1569, 77, 1569, 1569, 1620, 1260, 137, 1569, 383, 1277, 142, 1712, 1569, 1569, 1569, 150, 1180, 1011, 1650, 1569, 1635, 1353, 1569, 1061, 39, 1569, 346, 1157, 1633, 1569, 1456, 984, 1625, 1569, 348, 1621, 1569, 1394, 1569, 1551, 1569, 1546, 1569, 1677, 1675, 1547, 1569, 1569, 1569, 1036, 152, 145, 1569, 928, 1707, 1569, 12, 1569, 1277, 147, 1569, 1634, 1455, 1569, 688, 1569, 1466, 1569, 1715, 1569, 1569, 1569, 156, 1569, 1569, 1569, 1569, 956, 1569, 1684, 1569, 1569, 1569, 1676, 1569, 1569, 808, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1109, 1085, 1133, 1569, 1569, 1569, 1579, 1569, 1569, 1562, 1569
          , 1569, 1569, 1569, 1569, 1569, 1569, 838, 1557, 1569, 1569, 1569, 1569, 1405, 1569, 868, 1569, 1569, 1569, 1569, 1569, 1718, 1569, 1569, 1569, 1569, 1723, 1569, 1713, 1569, 1569, 1569, 1569, 898, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1726, 1569, 1569, 1724};

    };

    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 3, 4, 5, 0, 0, 0, 1, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 0, 63, 64, 32, 35, 36, 68, 8, 70, 0, 40, 2, 74, 69, 76, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 27, 0, 1, 2, 3, 4, 5, 28, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 0, 0, 8, 9, 10, 11, 12
          , 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23, 0, 1, 0, 3, 4, 5, 0, 1, 0, 9, 10, 11, 12, 13, 14, 15, 0, 1, 0, 3, 4, 5, 0, 40, 2, 0, 1, 0, 1, 7, 3, 4, 5, 0, 52, 53, 54, 55, 56, 57, 0, 0, 2, 35, 36, 29, 0, 7, 7, 0, 28, 2, 6, 0, 29, 2, 0, 0, 0, 41, 0, 0, 29, 61, 0, 82, 0, 0, 28, 28, 0, 0, 6, 17, 25, 0, 1, 0, 25, 33, 0, 0, 60, 25, 0, 0, 26, 26, 0, 0, 26, 6, 59, 26, 17, 0, 26, 39, 0, 0, 0, 0, 0, 0, 0, 6, 25, 0, 0, 29, 2, 0, 0, 2, 58, 31, 0, 46, 0, 62, 25, 33, 0, 1, 26, 0, 37, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 2, 34, 0, 1, 0, 0, 0, 0, 42, 45, 47, 0, 6, 25, 0, 50, 0, 0, 1, 49, 6, 0, 41, 48, 32, 0, 33, 6, 0, 1, 0, 6, 0, 38, 0, 31, 31, 38, 0, 0, 0, 30, 0, 0, 0, 51, 6, 0, 0, 0, 34, 0, 0, 6, 16, 0, 77, 0, 26, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 37, 0, 0, 0, 31, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 44, 30, 0, 0, 0, 32, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 78, 66, 0, 0, 0, 0, 72, 0, 65, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 75, 0, 67, 0, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 81, 0, 0};

    };

    public interface TerminalIndex {
        final public static byte terminalIndex [] = {0, 30, 4, 43, 44, 45, 5, 11, 31, 46, 47, 48, 49, 50, 51, 52, 6, 22, 32, 33, 37, 38, 39, 40, 35, 61, 82, 34, 2, 23, 3, 56, 7, 26, 25, 55, 57, 58, 63, 65, 81, 83, 36, 41, 42, 1, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 53, 54, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 28, 84};

    };

}

[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
>>>>>>
public class XpandParserprs implements XpandParsersym, lpg.lpgjavaruntime.ParseTable {
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    final public static int ERROR_SYMBOL = 82, MAX_NAME_LENGTH = 24, SCOPE_SIZE = 18, SCOPE_UBOUND = 17;
    final public static int ACCEPT_ACTION = 1567, EOFT_SYMBOL = 40, EOLT_SYMBOL = 40, ERROR_ACTION = 1568, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1725, MAX_LA = 2, NT_OFFSET = 82, NUM_NONTERMINALS = 74, NUM_RULES = 157, NUM_STATES = 182, NUM_SYMBOLS = 156, SEGMENT_SIZE = 8192, START_STATE = 1324;
    >>>>>>
    >>>>>>
    public interface Asb {
        final public static char asb [] = {0, 71, 176, 73, 3, 72, 75, 3, 1, 76, 75, 167, 113, 113, 113, 68, 167, 113, 79, 73, 173, 173, 118, 115, 115, 118, 74, 167, 167, 174, 174, 65, 164, 115, 164, 164, 80, 230, 229, 167, 185, 112, 230, 112, 125, 224, 125, 229, 167, 187, 128, 113, 125, 189, 164, 230, 164, 164, 191, 112, 100, 97, 95, 88, 148, 148, 144, 258, 258, 193, 167, 8, 85, 86, 89, 96, 258, 101, 167, 167, 144, 144, 144, 144, 144, 226, 127, 164, 112, 125, 112, 128, 145, 146, 146, 146, 144, 230, 208, 144, 164, 34, 32, 228, 157, 146, 146, 146, 144, 145, 232, 121, 169, 234, 112, 234, 144, 113, 112, 187, 164, 187, 236, 148, 230, 238, 230, 230, 144, 85, 230, 145, 122, 144, 112, 167, 178, 167, 260, 127, 189, 112, 145, 144, 58, 236, 144, 144, 230, 262, 60, 179, 144, 112, 144, 187, 230, 182, 145, 61, 61, 167, 180, 112, 112, 264, 266, 183, 146, 144, 112, 178, 144, 236, 236, 268, 111, 146, 146, 112, 32, 182, 270};

    };

    public interface Asr {
        final public static byte asr [] = {0, 9, 0, 61, 35, 36, 60, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 20, 17, 23, 19, 18, 21, 22, 25, 27, 32, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 20, 23, 19, 18, 21, 22, 25, 27, 6, 17, 0, 65, 7, 24, 64, 0, 3, 4, 5, 29, 1, 0, 81, 40, 60, 24, 61, 36, 35, 0, 8, 2, 46, 26, 39, 28, 34, 29, 58, 57, 51, 52, 53, 54, 55, 56, 41, 48, 42, 43, 49, 44, 1, 30, 6, 32, 33, 64, 38, 77, 78, 47, 79, 7, 24, 0, 29, 1, 28, 26, 2, 0, 2, 7, 24, 39, 26, 0, 24, 31, 37, 66, 68, 70, 71, 72, 74, 80, 75, 73, 69, 39, 67, 62, 63, 27, 25, 8, 7, 9, 2, 20, 17, 23, 19, 18, 21, 22, 10, 11, 12, 13, 14, 15, 16, 3, 4, 5, 1, 0, 7, 24, 1, 0, 24, 36, 35, 40, 0, 70, 71, 72, 0, 43, 42, 0, 45, 0, 31, 0, 37, 0, 46, 0, 1, 42, 43, 30, 32, 33, 64, 38, 77, 78, 79, 24, 2, 8, 28, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 58, 34, 6, 29, 0, 76, 0, 32, 33, 6, 0, 50, 0, 38, 0, 30, 0, 41, 44, 6, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 29, 58, 34, 59, 8, 28, 2, 0, 77, 0, 68, 0, 74, 0
          , 78, 0, 66, 0, 80, 0};

    };

    public interface BaseAction {
        final public static char baseAction [] = {62, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 41, 41, 23, 23, 21, 21, 22, 22, 20, 20, 63, 63, 63, 63, 63, 63, 19, 19, 64, 64, 17, 17, 65, 65, 18, 18, 18, 42, 42, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 74, 74, 36, 36, 34, 34, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 62, 62, 37, 37, 45, 45, 66, 66, 33, 33, 43, 43, 46, 44, 44, 47, 39, 39, 39, 39, 35, 35, 40, 40, 40, 38, 38, 32, 48, 48, 49, 49, 49, 49, 49, 49, 31, 56, 56, 30, 30, 50, 50, 50, 57, 58, 58, 58, 68, 68, 67, 59, 51, 69, 69, 52, 70, 70, 60, 60, 53, 61, 61, 71, 71, 54, 55, 72, 72, 1, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 140, 1, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 38, 1387, 44, 45, 46, 47, 48, 49, 25, 116, 1445, 119, 120, 121, 122, 123, 124, 62, 130, 131, 132, 1, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381
          , 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 140, 1, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 37, 1387, 44, 45, 46, 47, 48, 49, 69, 118, 1445, 119, 120, 121, 122, 123, 124, 29, 130, 131, 132, 34, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 1333, 1487, 469, 1395, 1529, 77, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 1383, 467, 1542, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 1509, 1557, 78, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 58, 1468, 1552, 105, 86, 80, 1527, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1525, 1, 105, 86, 80,
          54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 133, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1449, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1533, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1382, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1534, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1525, 1, 133, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1539, 1, 105, 86, 80, 54, 79, 1493, 50, 55
          , 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1544, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1548, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1555, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1466, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 135, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1427, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1559, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44
          , 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 148, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1471, 1, 187, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 1551, 187, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 2, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 7, 1520, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1538, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 9, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 15, 213, 86, 80, 54, 79, 1493, 50,
          55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1562, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1564, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1481, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 17, 1517, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 19, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 29, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 21, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 33, 1327, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 4, 1387, 44, 45, 46, 47, 48, 49, 285, 86, 80, 54, 79, 1493, 1454, 55, 1513, 302, 86, 80, 1492, 79, 1493, 308, 86, 80, 1492, 79, 1493, 308, 86, 80, 1492, 79, 1493, 308, 86, 80, 1369
          , 79, 1493, 308, 86, 80, 1372, 79, 1493, 308, 86, 80, 1376, 79, 1493, 1491, 325, 304, 340, 325, 341, 1494, 362, 88, 362, 85, 287, 76, 308, 86, 80, 1379, 79, 1493, 308, 86, 80, 1385, 79, 1493, 308, 86, 80, 1541, 79, 1493, 308, 86, 80, 1391, 79, 1493, 310, 94, 1370, 1367, 94, 1370, 1367, 219, 268, 92, 369, 351, 91, 369, 72, 86, 139, 369, 1359, 358, 369, 1384, 267, 369, 353, 287, 369, 205, 402, 369, 1201, 1446, 369, 1241, 103, 369, 69, 90, 1370, 1367, 1503, 158, 1502, 1503, 158, 1506, 369, 1503, 158, 1536, 1503, 158, 1537, 1503, 158, 1455, 1503, 158, 1549, 1503, 158, 1553, 1503, 158, 1554, 1503, 158, 1558, 369, 103, 42, 369, 1384, 314, 369, 314, 1503, 158, 153, 100, 423, 1439, 1395, 314, 349, 1221, 369, 7, 7, 350, 426, 7, 7, 7, 7, 442, 446, 474, 1503, 158, 1470, 1503, 158, 1563, 1503, 158, 1565, 475, 112, 475, 112, 446, 487, 110, 1535, 109, 1503, 218, 112, 1535, 265, 98, 474, 113, 101, 1323, 1326, 104, 291, 328, 139, 366, 27, 367, 364, 380, 75, 40, 1560, 371, 125, 159, 379, 382, 381, 127, 384, 387,
          1545, 388, 389, 390, 391, 392, 393, 396, 327, 310, 401, 1388, 404, 269, 407, 13, 403, 411, 414, 136, 415, 1430, 416, 417, 151, 418, 419, 422, 428, 430, 431, 429, 432, 324, 439, 441, 1433, 458, 339, 443, 453, 451, 455, 456, 463, 465, 466, 470, 472, 480, 477, 482, 483, 484, 485, 488, 486, 489, 490, 1568, 1568};

    };

    public interface BaseCheck {
        final public static short baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 0, 5, 4, 4, 0, 1, 0, 1, 0, 2, 0, 2, 4, 0, 2, 4, 6, 9, 11, 9, 2, 2, 0, 1, 2, 6, 9, 2, 0, 3, 1, 1, 1, 1, 1, 1, 3, 0, 3, 0, 1, 1, 1, 1, 2, 3, 5, 6, 0, 3, 1, 1, 5, 0, 1, 8, 0, 2, 0, 2, 6, 0, 4, 0, 2, 6, 10, 0, 1, - 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, 0, 0, 0, 0, 0, 0, 0, - 8, 0, 0, 0, - 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, 0, 0, 0, 0, 0, 0, 0, - 15, 0, 0, 0, - 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 151, 0, 0, -
          101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 11, 0, 0, - 150, 0, - 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 48, 0, 0, 0, 0, - 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 70, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 99, 0, 0, 0, 0, 0, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 158, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 104, 0,
          0, 0, 0, 0, 0, 0, 0, - 31, 0, 0, 0, 0, 0, - 34, 0, 0, 0, 0, 0, - 57, 0, 0, 0, 0, 0, - 32, 0, 0, 0, 0, 0, - 35, 0, 0, 0, 0, 0, - 54, 0, 0, 0, 0, 0, 0, - 29, - 1, - 63, - 30, - 73, 0, - 27, 0, - 28, 0, - 6, 0, - 56, 0, 0, 0, 0, 0, - 87, 0, 0, 0, 0, 0, - 100, 0, 0, 0, 0, 0, - 120, 0, 0, 0, 0, 0, - 9, 0, 0, 0, 0, 0, 0, - 12, - 13, 0, - 41, - 14, 0, - 43, - 79, 0, 0, - 88, 0, - 16, - 90, 0, - 74, - 114, - 17, - 10, - 118, 0, - 72, - 134, 0, 0, - 141, 0, - 18, - 153, - 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 164, 0, 0, - 170, 0, - 23, - 179, - 24, 0, 0, 0, 0, - 111, 0, 0, - 33, - 86, 0, - 59, - 3, - 5, - 139, - 112, - 19, - 20, - 21, - 26, - 129, - 136, - 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 159, 0, - 160, 0, - 171, - 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 181, 0, 0, 0, 0, 0, - 22, - 25, - 36, - 37, - 38, - 39, - 40, - 42, - 44, 0, 0, - 45, 0, - 46, - 47, - 49, - 51, 0, - 52, - 53, 0, - 55, - 58, - 60, - 61, - 62, - 67, - 68, - 69, 0, - 75, 0, - 76, -
          77, - 78, 0, - 85, - 89, - 97, 0, - 98, 0, - 102, - 103, 0, - 110, - 113, - 115, - 117, - 119, - 121, - 122, - 124, - 125, - 126, - 127, 0, - 130, - 132, - 135, - 137, - 138, - 140, - 144, - 145, - 148, - 149, - 155, - 156, - 161, - 162, - 165, - 166, - 167, - 173, - 174, - 175, - 180, - 182, 0};

    };

    public interface InSymb {
        final public static char inSymb [] = {0, 0, 144, 148, 115, 24, 125, 128, 60, 126, 129, 61, 9, 121, 120, 35, 36, 84, 1, 24, 24, 24, 117, 1, 29, 1, 24, 28, 8, 115, 115, 2, 26, 28, 2, 26, 1, 29, 118, 85, 87, 85, 118, 85, 6, 33, 6, 1, 45, 114, 113, 112, 6, 114, 26, 29, 26, 33, 84, 131, 106, 103, 102, 99, 7, 8, 2, 90, 10, 1, 20, 17, 92, 100, 101, 104, 25, 108, 27, 63, 62, 67, 39, 69, 73, 75, 24, 26, 85, 6, 85, 113, 44, 49, 41, 146, 2, 110, 85, 2, 2, 2, 116, 110, 34, 147, 145, 48, 2, 47, 1, 149, 110, 110, 110, 110, 76, 112, 85, 114, 26, 114, 106, 6, 110, 1, 85, 116, 33, 88, 110, 50, 150, 2, 151, 38, 114, 38, 110, 24, 114, 85, 30, 59, 6, 109, 39, 26, 116, 114, 1, 143, 70, 1, 77, 114, 110, 17, 30, 110, 152, 65, 153, 71, 110, 114, 110, 123, 43, 64, 142, 114, 78, 42, 105, 114, 110, 30, 30, 154, 105, 105, 114};

    };

    public interface IsKeyword {
        final public static byte isKeyword [] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    };

    public interface Name {
        final public static String name [] = {"", "?", "::", ":", "(", ")", "{", "}", "[", "]", "->", "!", "&&", "||", "=", "==", "!=", ">=", "<=", ">", "<", "+", "-", "*", "/", ".", ",", "|", "\\u00AB", "$empty", "IDENT", "STRING", "INT_CONST", "REAL_CONST", "let", "switch", "implies", "new", "false", "true", "null", "default", "case", "Collection", "List", "Set", "typeSelect", "collect", "select", "reject", "exists", "notExists", "forAll", "IMPORT", "EXTENSION", "AROUND", "ENDAROUND", "DEFINE", "ENDDEFINE", "ERROR", "EXPAND", "FOR", "SEPARATOR", "AS", "ITERATOR", "FOREACH", "ENDFOREACH", "FILE", "ENDFILE", "IF", "ELSEIF", "ELSE", "ENDIF", "LET", "ENDLET", "PROTECT", "CSTART", "CEND", "ID", "DISABLE", "ENDPROTECT", "EOF_TOKEN", "TEXT", "ERROR_TOKEN", "expression", "castedExpression", "type", "infixExpression", "chainExpression", "ifExpression", "switchExpression", "orExpression", "andExpression", "impliesExpression", "relationalExpression", "additiveExpression", "relationalOperator",
          "multiplicativeExpression", "additiveOperator", "unaryExpression", "multiplicativeOperator", "infixExpressionSuffix", "featureCall", "primaryExpression", "parameterList", "simpleType", "collectionExpressionName", "declaredParameterList", "collectionTypeName", "qualifiedType", "defineOrAroundSeq", "define", "around", "anImport", "anExtensionImport", "pointcut", "sequence", "text", "statement", "definitionName"};

    };

    public interface Nasb {
        final public static byte nasb [] = {0, 32, 5, 63, 6, 63, 41, 6, 5, 43, 41, 12, 5, 5, 5, 8, 5, 5, 5, 63, 63, 63, 5, 56, 56, 5, 63, 39, 39, 28, 28, 24, 17, 56, 24, 17, 5, 5, 5, 5, 5, 47, 5, 47, 5, 5, 5, 5, 12, 5, 1, 5, 5, 5, 17, 5, 17, 24, 5, 47, 5, 5, 5, 35, 2, 2, 16, 5, 5, 5, 12, 2, 54, 37, 52, 5, 5, 5, 5, 50, 2, 2, 2, 2, 2, 5, 60, 17, 47, 5, 47, 1, 2, 2, 2, 2, 2, 5, 5, 2, 17, 2, 5, 5, 20, 2, 2, 2, 2, 2, 5, 58, 65, 5, 47, 5, 2, 5, 47, 5, 17, 5, 5, 2, 5, 5, 5, 5, 2, 54, 5, 2, 5, 2, 47, 5, 67, 5, 5, 60, 5, 47, 2, 2, 5, 5, 2, 2, 5, 5, 14, 10, 2, 47, 2, 5, 5, 69, 2, 71, 71, 5, 5, 47, 47, 5, 5, 5, 2, 2, 47, 67, 2, 5, 5, 5, 73, 2, 2, 47, 5, 69, 5};

    };

    public interface Nasr {
        final public static char nasr [] = {0, 48, 5, 8, 10, 0, 46, 0, 35, 0, 71, 0, 2, 0, 70, 0, 8, 5, 3, 0, 5, 8, 6, 0, 5, 3, 36, 0, 38, 39, 45, 0, 66, 62, 0, 64, 0, 65, 0, 1, 0, 47, 0, 38, 39, 37, 0, 30, 31, 0, 67, 0, 63, 0, 42, 0, 40, 0, 68, 0, 30, 56, 0, 33, 0, 69, 0, 61, 0, 41, 0, 60, 0, 72, 0};

    };

    public interface NonterminalIndex {
        final public static byte nonterminalIndex [] = {0, 109, 105, 86, 0, 108, 102, 0, 106, 87, 103, 0, 0, 0, 0, 0, 0, 97, 99, 95, 94, 92, 93, 91, 90, 88, 89, 85, 84, 0, 0, 117, 116, 0, 104, 115, 107, 110, 111, 112, 0, 0, 101, 0, 0, 0, 113, 114, 0, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 98, 100, 0, 119, 0, 0, 0, 0, 0, 0, 0};

    };

    public interface ScopeLa {
        final public static byte scopeLa [] = {80, 32, 66, 42, 74, 72, 6, 68, 30, 6, 6, 30, 6, 32, 6, 34, 30, 7};

    };

    >>>>>>
    >>>>>>
    public interface ScopeRhs {
        final public static char scopeRhs [] = {0, 114, 154, 110, 78, 110, 77, 110, 76, 75, 0, 80, 0, 114, 1, 38, 110, 73, 0, 74, 0, 153, 143, 114, 110, 69, 0, 72, 0, 114, 142, 152, 1, 38, 110, 39, 0, 66, 0, 114, 151, 110, 67, 0, 68, 0, 131, 0, 117, 0, 0, 110, 2, 90, 0, 5, 0, 110, 59, 1, 2, 90, 0, 116, 17, 0, 7, 0, 116, 2, 1, 0, 110, 2, 0, 88, 34, 0, 101, 0, 105, 43, 0, 3, 91, 0, 0, 105, 30, 42, 123, 17, 6, 110, 2, 25, 0, 123, 17, 6, 110, 2, 25, 0, 41, 3, 91, 7, 0, 110, 2, 25, 0, 5, 6, 0, 41, 3, 91, 7, 0, 106, 44, 106, 0, 3, 90, 0, 109, 50, 1, 27, 0, 3, 85, 0};

    };

    public interface ScopeState {
        final public static char scopeState [] = {0, 1481, 1456, 0, 1454, 1387, 0, 1277, 1133, 1109, 1085, 1260, 1157, 1221, 1241, 1201, 1180, 1061, 248, 188, 1036, 1011, 956, 928, 984, 898, 868, 838, 808, 778, 748, 718, 383, 348, 688, 658, 313, 628, 598, 568, 538, 508, 478, 448, 278, 418, 218, 158, 0};

    };

    >>>>>>
    >>>>>>
    public interface TermAction {
        final public static char termAction [] = {0, 117, 1515, 418, 1650, 1651, 1652, 97, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1521, 1568, 1432, 1447, 1568, 1500, 1568, 1515, 418, 1650, 1651, 1652, 508, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1434, 1519, 1498, 1521, 1568, 448, 1373, 1567, 1625, 1568, 478, 99, 538, 1366, 1568, 1393, 568, 1568, 1523, 1568, 1515, 418, 1650, 1651, 1652, 1621, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1316, 1519, 87, 1521, 1568, 1515, 418, 1650, 1651, 1652, 1331, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 214, 1519, 1329, 1521, 1568, 1540, 418, 1650, 1651, 1652, 87, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1521, 1568, 1515, 598, 1650, 1651, 1652, 1329, 188, 248,
          1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1335, 1519, 1568, 1515, 418, 1650, 1651, 1652, 1568, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1515, 598, 1650, 1651, 1652, 1568, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 28, 1599, 1599, 1599, 1599, 1599, 1450, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1568, 1515, 598, 1650, 1651, 1652, 20, 1568, 6, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1515, 102, 1650, 1651, 1652, 1568, 1451, 1286, 1568, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 1568, 1393, 95, 1650, 1651, 1652, 1568, 1393, 1568, 1650, 1651, 1652, 111, 1432, 984, 1304, 1590, 1591, 1592, 1593, 1594, 1595, 87, 93, 313, 87, 1568, 313, 1292, 1490, 1331, 75, 1298, 1331, 1298, 1298, 1298, 134, 28, 32, 1442, 1434, 89, 274,
          1378, 1962, 343, 126, 126, 1568, 1329, 1568, 1310, 1329, 2220, 2220, 1568, 1488, 274, 1378, 1568, 1489, 1568, 778, 1568, 1568, 1501, 128, 1602, 1568, 1495, 128, 128, 1452, 1697, 1453, 748, 75, 1568, 1568, 1568, 718, 1568, 1664, 1505, 1568, 1568, 1568, 8, 14, 18, 1568, 1524, 628, 1568, 1598, 1347, 1603, 1508, 16, 41, 1568, 1568, 1443, 658, 1568, 1532, 378, 1341, 1568, 2058, 1673, 1568, 54, 1568, 77, 1568, 1568, 1619, 1260, 1568, 137, 1682, 383, 142, 1711, 1568, 1568, 1568, 1568, 1568, 1180, 1011, 1649, 1277, 1353, 1634, 1568, 1061, 1568, 39, 1568, 346, 1632, 150, 1620, 1624, 1157, 348, 1568, 1448, 1568, 1394, 1568, 1568, 1546, 1568, 1036, 1547, 1676, 1674, 1568, 1550, 1568, 1568, 145, 928, 152, 1568, 1706, 1568, 1456, 12, 147, 1277, 1568, 1633, 688, 1568, 1714, 1568, 1568, 1568, 1568, 1568, 156, 1568, 1568, 1568, 1568, 1683, 956, 1568, 126, 1568, 1568, 1568, 1568, 1568, 1675, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1109, 808, 1085, 1133, 1697, 1568, 1578, 1568,
          1568, 1568, 1568, 1561, 1568, 838, 1568, 1568, 1568, 1556, 1568, 1709, 1568, 1568, 1568, 1568, 868, 1405, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1717, 1568, 1568, 1712, 1568, 1568, 1568, 1722, 1568, 1568, 1568, 1568, 898, 1568, 1568, 1568, 1568, 1725, 1568, 1568, 1568, 1723};

    };

    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 27, 0, 1, 24, 0, 6, 0, 1, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 25, 33, 27, 0, 62, 63, 40, 32, 0, 67, 0, 69, 9, 0, 1, 73, 0, 75, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 0, 27, 0, 1, 2, 3, 4, 5, 8, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 60, 25, 28, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 27, 0, 1, 2, 3, 4, 5, 28, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 0, 0, 0, 9, 10, 11
          , 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 0, 3, 4, 5, 0, 24, 2, 0, 10, 11, 12, 13, 14, 15, 16, 0, 1, 0, 3, 4, 5, 0, 1, 0, 3, 4, 5, 0, 1, 47, 26, 51, 52, 53, 54, 55, 56, 0, 0, 2, 0, 0, 2, 2, 29, 8, 0, 1, 8, 3, 4, 5, 0, 0, 0, 28, 29, 40, 35, 36, 7, 61, 0, 0, 0, 28, 0, 26, 28, 7, 7, 0, 1, 35, 36, 0, 1, 0, 26, 0, 0, 1, 0, 29, 0, 6, 24, 24, 24, 7, 24, 39, 0, 0, 0, 0, 59, 0, 81, 6, 0, 0, 0, 0, 0, 0, 0, 6, 2, 0, 57, 2, 58, 29, 0, 0, 0, 0, 24, 2, 0, 1, 45, 26, 0, 33, 31, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 37, 2, 0, 1, 0, 0, 0, 0, 0, 41, 44, 46, 34, 26, 6, 0, 49, 0, 0, 0, 1, 6, 0, 6, 32, 48, 33, 0, 24, 0, 1, 0, 0, 38, 0, 30, 38, 31, 31, 0, 6, 0, 0, 0, 50, 0, 0, 6, 0, 17, 0, 0, 34, 0, 6, 76, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 30, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 70, 43, 30, 24, 0, 32, 0, 0, 0, 0, 42, 0, 77, 0, 0, 0, 65, 0, 68, 0, 0, 0, 0, 64, 71, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 66, 0, 0, 0, 74, 0, 0, 0, 0, 78, 0, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0
          };

    };

    public interface TerminalIndex {
        final public static byte terminalIndex [] = {0, 30, 4, 43, 44, 45, 5, 22, 11, 31, 46, 47, 48, 49, 50, 51, 52, 6, 32, 33, 37, 38, 39, 40, 82, 35, 61, 34, 2, 23, 3, 56, 7, 26, 25, 55, 57, 58, 63, 65, 81, 36, 41, 42, 1, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 53, 54, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 28, 83};

    };

}

[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 100 garbage recoveries were required (larger size recommended for improved performance)
