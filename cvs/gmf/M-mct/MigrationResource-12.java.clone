<<<<<<
public class MigrationResource extends ToolResource {
    private static class BCKWDCompatibleHandler extends SAXXMIHandler {

        @Override
        protected EPackage getPackageForURI (String uriString);
        @Override
        protected void handleUnknownFeature (String prefix, String name, boolean isElement, EObject peekObject, String value); protected boolean fixmePotentiallyCompatibilityIssues;

    };

    protected XMLLoad createXMLLoad (); protected boolean migrationApplied;
    protected boolean oldVersionDetected;

    final protected void doUnload ();
    protected void handleMigrationPatchApplied ();
    protected void handleOldVersionDetected ();
    protected void handlePostLoad (Exception exception);
    final public void doLoad (InputStream inputStream, Map < ?, ? > options) throws IOException; public static class MigrationHandler extends BCKWDCompatibleHandler {

        @Override
        protected void createObject (EObject peekObject, EStructuralFeature feature);
        @Override
        protected void handleFeature (String prefix, String name);
        @Override
        protected void setAttribValue (EObject object, String name, String value);
        public EObject createObjectFromTypeNameHook (EObject peekObject, String typeQName, EStructuralFeature feature);
        public EObject peekEObject ();
        public String getXSIType ();
        public void handleFeatureHook (String prefix, String name);
    }

    static Resource createCheckAndMigrateOnLoadResource (URI uri);
    static Resource createCheckedResource (URI uri);
}

>>>>>>
abstract public class MigrationResource extends ToolResource {

    @Override
    protected XMLHelper createXMLHelper ();
    @Override
    protected XMLLoad createXMLLoad ();
    @Override
    final public void doLoad (InputStream inputStream, Map < ?, ? > options) throws IOException;
    protected MigrationResource (URI uri) {
    }

    abstract protected Collection < String > getBackwardSupportedURIs ();
    abstract protected MigrationHelperDelegate createDelegate ();
    abstract protected String getMetamodelNsURI ();
    protected void handlePostLoadException (Exception e);
    protected void handlePostLoadSuccess (); public static class Diagnostic implements Resource.Diagnostic {

        public String getLocation ();
        public String getMessage ();
        public int getColumn ();
        public int getLine ();
    }

}

