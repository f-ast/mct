<<<<<<
final public class Routing extends AbstractEnumerator {

    public static Routing get (String name); <<<<<<
    <<<<<<
    final public static Routing MANUAL_LITERAL = new Routing (MANUAL, "Manual");
    final public static Routing RECTILINEAR_LITERAL = new Routing (RECTILINEAR, "Rectilinear");
    final public static Routing TREE_LITERAL = new Routing (TREE, "Tree");
    <<<<<<
    <<<<<<
    <<<<<<

}

>>>>>>
final public class Routing extends AbstractEnumerator {

    public static Routing get (String literal); >>>>>>

    public static Routing getByName (String name); >>>>>>
    final public static Routing MANUAL_LITERAL = new Routing (MANUAL, "Manual", "Manual");
    final public static Routing RECTILINEAR_LITERAL = new Routing (RECTILINEAR, "Rectilinear", "Rectilinear");
    final public static Routing TREE_LITERAL = new Routing (TREE, "Tree", "Tree");
    >>>>>>
    >>>>>>
    >>>>>>

}

