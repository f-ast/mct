<<<<<<
public class Reconciler {
    private class MatchingSession {

        public MatchingSession (PairsPool pool) {
        }

        public void match (Collection currents, Collection olds, Collection < Pair > output);
        public void releasePair (Pair pair);
    }

    private static class Pair {
        <<<<<<
        <<<<<<

        public void reset ();
    }

    private static class PairsPool extends AbstractPool {

        protected Object createNew ();
        public Pair acquire ();
        public PairsPool (int capacity) {
        }

        public void release (Pair pair);
    }

    <<<<<<
    <<<<<<
    <<<<<<

    public void reconcileResource (Resource current, Resource old);
    public void reconcileTree (EObject currentRoot, EObject oldRoot);
}

>>>>>>
public class Reconciler {

    @SuppressWarnings("unchecked")
    public void reconcileResource (Resource current, Resource old);
    @SuppressWarnings("unchecked")
    public void reconcileTree (EObject currentRoot, EObject oldRoot); private class MatchingSession {

        public MatchingSession () {
        }

        public void match (Collection < EObject > currents, Collection < EObject > olds, Collection < Pair > output);
    }

    private static class Pair {
        >>>>>>
        >>>>>>

    }

    >>>>>>
    >>>>>>
    >>>>>>

}

