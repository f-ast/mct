<<<<<<
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    protected Collection supportedTypes = new ArrayList ();
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    public Adapter adapt (Notifier notifier, Object type);
    public Adapter createAuditContainerAdapter ();
    public Adapter createAuditRuleAdapter ();
    public Adapter createAuditedMetricTargetAdapter ();
    public Adapter createCanvasMappingAdapter ();
    public Adapter createChildReferenceAdapter ();
    public Adapter createCompartmentMappingAdapter ();
    public Adapter createConstraintAdapter ();
    public Adapter createDesignLabelMappingAdapter ();
    public Adapter createDiagramElementTargetAdapter ();
    public Adapter createDomainAttributeTargetAdapter ();
    public Adapter createDomainElementTargetAdapter ();
    public Adapter createFeatureLabelMappingAdapter ();
    public Adapter createFeatureSeqInitializerAdapter ();
    public Adapter createFeatureValueSpecAdapter ();
    public Adapter createLabelMappingAdapter ();
    public Adapter createLinkConstraintsAdapter ();
    public Adapter createLinkMappingAdapter ();
    public Adapter createMappingAdapter ();
    public Adapter createMetricContainerAdapter ();
    public Adapter createMetricRuleAdapter ();
    public Adapter createNodeMappingAdapter ();
    public Adapter createNotationElementTargetAdapter ();
    public Adapter createReferenceNewElementSpecAdapter ();
    public Adapter createTopNodeReferenceAdapter ();
    public Adapter createValueExpressionAdapter (); <<<<<<
    <<<<<<

    public Object adapt (Object object, Object type);
    public boolean isFactoryForType (Object type); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

}

>>>>>>
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {

    @Override
    public Adapter adapt (Notifier notifier, Object type);
    @Override
    public Adapter createAuditContainerAdapter ();
    @Override
    public Adapter createAuditRuleAdapter ();
    @Override
    public Adapter createAuditedMetricTargetAdapter ();
    @Override
    public Adapter createCanvasMappingAdapter ();
    @Override
    public Adapter createChildReferenceAdapter ();
    @Override
    public Adapter createCompartmentMappingAdapter ();
    @Override
    public Adapter createConstraintAdapter ();
    @Override
    public Adapter createDesignLabelMappingAdapter ();
    @Override
    public Adapter createDiagramElementTargetAdapter ();
    @Override
    public Adapter createDomainAttributeTargetAdapter ();
    @Override
    public Adapter createDomainElementTargetAdapter ();
    @Override
    public Adapter createFeatureLabelMappingAdapter ();
    @Override
    public Adapter createFeatureSeqInitializerAdapter ();
    @Override
    public Adapter createFeatureValueSpecAdapter ();
    @Override
    public Adapter createLabelMappingAdapter ();
    @Override
    public Adapter createLinkConstraintsAdapter ();
    @Override
    public Adapter createLinkMappingAdapter ();
    @Override
    public Adapter createMappingAdapter ();
    @Override
    public Adapter createMetricContainerAdapter ();
    @Override
    public Adapter createMetricRuleAdapter ();
    @Override
    public Adapter createNodeMappingAdapter ();
    @Override
    public Adapter createNotationElementTargetAdapter ();
    @Override
    public Adapter createReferenceNewElementSpecAdapter ();
    @Override
    public Adapter createTopNodeReferenceAdapter ();
    @Override
    public Adapter createValueExpressionAdapter ();
    @Override
    public Object adapt (Object object, Object type);
    @Override
    public boolean isFactoryForType (Object type); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    protected Collection < Object > supportedTypes = new ArrayList < Object > ();
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

}

