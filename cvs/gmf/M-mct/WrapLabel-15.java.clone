<<<<<<
public class WrapLabel extends Figure implements PositionConstants {
    abstract private static class IconInfo {

        abstract public Dimension getIconSize (IMapMode mapMode, int i);
        abstract public Dimension getTotalIconSize (IMapMode mapMode);
        abstract public Image getIcon (int i);
        abstract public int getMaxIcons ();
        abstract public int getNumberofIcons ();
        abstract public void invalidate ();
        abstract public void setIcon (Image icon, int i);
    }

    private static class MapModeConstants {

        public Dimension getEllipseTextSize (Font f);
        public MapModeConstants (IMapMode mapMode) {
        }

        public SingleIconInfo getSingleIconInfo (Image image); final public Dimension dimension_nDPtoLP_0;
        final public SingleIconInfo [] singleIconInfos = new SingleIconInfo [MAX_IMAGE_INFO];
        final public WeakHashMap fontToEllipseTextSize = new WeakHashMap ();
        final public WeakReference mapModeRef;
        final public int nDPtoLP_0;
        final public int nDPtoLP_2;
        final public int nDPtoLP_3;

    }

    private static class MultiIconInfo extends IconInfo {

        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public MultiIconInfo () {
        }

        public int getMaxIcons ();
        public int getNumberofIcons (); <<<<<<

        public void setIcon (Image icon, int i);
    }

    private static class SingleIconInfo extends IconInfo {

        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public SingleIconInfo (Image icon) {
        }

        final public int getMaxIcons ();
        public int getNumberofIcons (); final public static SingleIconInfo NULL_INFO = new SingleIconInfo () {

            public int getNumberofIcons ();
        }

        ;
        <<<<<<

        public void setIcon (Image img, int i);
    }

    protected Dimension calculateLabelSize (Dimension txtSize); <<<<<<
    <<<<<<

    protected Dimension getIconSize (int index); <<<<<<
    <<<<<<

    protected Dimension getTotalIconSize ();
    protected Point getIconLocation (); <<<<<<
    <<<<<<

    protected boolean hasIcons ();
    protected int getNumberofIcons ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize (int w, int h);
    public Dimension getPreferredSize (int wHint, int hHint);
    public Image getIcon ();
    public Image getIcon (int index); <<<<<<

    public Rectangle getTextBounds (); <<<<<<

    public String getText (); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    public boolean hasFocus ();
    public boolean isSelected ();
    public boolean isTextStrikedThrough (); <<<<<<

    public boolean isTextUnderlined (); <<<<<<

    public int getIconAlignment ();
    public int getIconTextGap ();
    public int getTextAlignment ();
    public int getTextPlacement (); <<<<<<
    <<<<<<

    public void paintFigure (Graphics graphics);
    public void setFocus (boolean b);
    public void setIcon (Image image);
    public void setIcon (Image image, int index);
    public void setIconAlignment (int align);
    public void setLabelAlignment (int align);
    public void setSelected (boolean b);
    public void setText (String s);
    public void setTextAlignment (int align);
    public void setTextPlacement (int where);
    public void setTextStrikeThrough (boolean b);
    public void setTextUnderline (boolean b);
    public void setTextWrap (boolean b); <<<<<<
    <<<<<<

}

>>>>>>
public class WrapLabel extends WrappingLabel {
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    protected String getTruncationString (); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    public void setLabelAlignment (int alignment); >>>>>>
    >>>>>>

}

