<<<<<<
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {

        public Object caseAppearanceSteward (AppearanceSteward object);
        public Object caseAuditContainer (AuditContainer object);
        public Object caseAuditRule (AuditRule object);
        public Object caseAuditable (Auditable object);
        public Object caseAuditedMetricTarget (AuditedMetricTarget object);
        public Object caseCanvasMapping (CanvasMapping object);
        public Object caseChildReference (ChildReference object);
        public Object caseCompartmentMapping (CompartmentMapping object);
        public Object caseConstraint (Constraint object);
        public Object caseDesignLabelMapping (DesignLabelMapping object);
        public Object caseDiagramElementTarget (DiagramElementTarget object);
        public Object caseDomainAttributeTarget (DomainAttributeTarget object);
        public Object caseDomainElementTarget (DomainElementTarget object);
        public Object caseElementInitializer (ElementInitializer object);
        public Object caseFeatureInitializer (FeatureInitializer object);
        public Object caseFeatureLabelMapping (FeatureLabelMapping object);
        public Object caseFeatureSeqInitializer (FeatureSeqInitializer object);
        public Object caseFeatureValueSpec (FeatureValueSpec object);
        public Object caseLabelMapping (LabelMapping object);
        public Object caseLinkConstraints (LinkConstraints object);
        public Object caseLinkMapping (LinkMapping object);
        public Object caseMapping (Mapping object);
        public Object caseMappingEntry (MappingEntry object);
        public Object caseMeasurable (Measurable object);
        public Object caseMenuOwner (MenuOwner object);
        public Object caseMetricContainer (MetricContainer object);
        public Object caseMetricRule (MetricRule object);
        public Object caseNeedsContainment (NeedsContainment object);
        public Object caseNodeMapping (NodeMapping object);
        public Object caseNodeReference (NodeReference object);
        public Object caseNotationElementTarget (NotationElementTarget object);
        public Object caseReferenceNewElementSpec (ReferenceNewElementSpec object);
        public Object caseRuleBase (RuleBase object);
        public Object caseToolOwner (ToolOwner object);
        public Object caseTopNodeReference (TopNodeReference object);
        public Object caseValueExpression (ValueExpression object);
        public Object defaultCase (EObject object);
    }

    ;
    <<<<<<

    public Adapter createAdapter (Notifier target); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    public boolean isFactoryForType (Object object);
}

>>>>>>
public class GMFMapAdapterFactory extends AdapterFactoryImpl {

    @Override
    public Adapter createAdapter (Notifier target);
    @Override
    public boolean isFactoryForType (Object object); protected GMFMapSwitch < Adapter > modelSwitch = new GMFMapSwitch < Adapter > () {

        @Override
        public Adapter caseAppearanceSteward (AppearanceSteward object);
        @Override
        public Adapter caseAuditContainer (AuditContainer object);
        @Override
        public Adapter caseAuditRule (AuditRule object);
        @Override
        public Adapter caseAuditable (Auditable object);
        @Override
        public Adapter caseAuditedMetricTarget (AuditedMetricTarget object);
        @Override
        public Adapter caseCanvasMapping (CanvasMapping object);
        @Override
        public Adapter caseChildReference (ChildReference object);
        @Override
        public Adapter caseCompartmentMapping (CompartmentMapping object);
        @Override
        public Adapter caseConstraint (Constraint object);
        @Override
        public Adapter caseDesignLabelMapping (DesignLabelMapping object);
        @Override
        public Adapter caseDiagramElementTarget (DiagramElementTarget object);
        @Override
        public Adapter caseDomainAttributeTarget (DomainAttributeTarget object);
        @Override
        public Adapter caseDomainElementTarget (DomainElementTarget object);
        @Override
        public Adapter caseElementInitializer (ElementInitializer object);
        @Override
        public Adapter caseFeatureInitializer (FeatureInitializer object);
        @Override
        public Adapter caseFeatureLabelMapping (FeatureLabelMapping object);
        @Override
        public Adapter caseFeatureSeqInitializer (FeatureSeqInitializer object);
        @Override
        public Adapter caseFeatureValueSpec (FeatureValueSpec object);
        @Override
        public Adapter caseLabelMapping (LabelMapping object);
        @Override
        public Adapter caseLinkConstraints (LinkConstraints object);
        @Override
        public Adapter caseLinkMapping (LinkMapping object);
        @Override
        public Adapter caseMapping (Mapping object);
        @Override
        public Adapter caseMappingEntry (MappingEntry object);
        @Override
        public Adapter caseMeasurable (Measurable object);
        @Override
        public Adapter caseMenuOwner (MenuOwner object);
        @Override
        public Adapter caseMetricContainer (MetricContainer object);
        @Override
        public Adapter caseMetricRule (MetricRule object);
        @Override
        public Adapter caseNeedsContainment (NeedsContainment object);
        @Override
        public Adapter caseNodeMapping (NodeMapping object);
        @Override
        public Adapter caseNodeReference (NodeReference object);
        @Override
        public Adapter caseNotationElementTarget (NotationElementTarget object);
        @Override
        public Adapter caseReferenceNewElementSpec (ReferenceNewElementSpec object);
        @Override
        public Adapter caseRuleBase (RuleBase object);
        @Override
        public Adapter caseToolOwner (ToolOwner object);
        @Override
        public Adapter caseTopNodeReference (TopNodeReference object);
        @Override
        public Adapter caseValueExpression (ValueExpression object);
        @Override
        public Adapter defaultCase (EObject object);
    }

    ;
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

}

