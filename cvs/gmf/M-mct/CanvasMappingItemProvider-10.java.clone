<<<<<<
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    <<<<<<
    <<<<<<

    protected void addDomainModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {

            protected Collection getComboBoxObjects (Object object);
        }

        );
    } <<<<<<

    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {

            protected Collection getComboBoxObjects (Object object);
        }

        );
    } <<<<<<

    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object); <<<<<<

    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
}

>>>>>>
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {

    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
    public void notifyChanged (Notification notification); >>>>>>
    >>>>>>

    protected void addDomainModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {

            protected Collection < ? > getComboBoxObjects (Object object);
        }

        );
    } >>>>>>

    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {

            protected Collection < ? > getComboBoxObjects (Object object);
        }

        );
    } >>>>>>
    >>>>>>

}

