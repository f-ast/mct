<<<<<<
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, ICommandManagerChangeListener, ISelectionChangedListener {
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    final public void commandManagerChanged (CommandManagerChangeEvent event) {
        PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
            <<<<<<

        }

        );
    } <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

}

>>>>>>
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    protected IOperationHistory getOperationHistory (); >>>>>>
    >>>>>>

    protected IUndoContext getUndoContext (); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    protected boolean isOperationHistoryListener (); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    public void historyNotification (OperationHistoryEvent event) {
        IUndoableOperation operation = event.getOperation ();
        if (operation != null) {
            IUndoContext partContext = getUndoContext ();
            if (partContext != null && operation.hasContext (partContext)) {
                PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
                    >>>>>>

                }

                );
            }
        }
    } >>>>>>
    >>>>>>
    >>>>>>

}

