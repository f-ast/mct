<<<<<<
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection createChildActions;
    protected Collection createSiblingActions;

    protected Collection generateCreateChildActions (Collection descriptors, ISelection selection);
    protected Collection generateCreateSiblingActions (Collection descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {

        public boolean isEnabled ();
        public void run ();
    }

    ;
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {

        public void run ();
    }

    ;
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    protected boolean removeAllReferencesOnDelete ();
    protected void addGlobalActions (IMenuManager menuManager);
    protected void depopulateManager (IContributionManager manager, Collection actions);
    protected void populateManager (IContributionManager manager, Collection actions, String contributionID); <<<<<<

    public void contributeToMenu (IMenuManager menuManager);
    public void contributeToToolBar (IToolBarManager toolBarManager);
    public void menuAboutToShow (IMenuManager menuManager); <<<<<<

    public void setActiveEditor (IEditorPart part);
}

>>>>>>
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {

    @Override
    protected boolean removeAllReferencesOnDelete ();
    @Override
    protected void addGlobalActions (IMenuManager menuManager);
    @Override
    public void contributeToMenu (IMenuManager menuManager);
    @Override
    public void contributeToToolBar (IToolBarManager toolBarManager);
    @Override
    public void menuAboutToShow (IMenuManager menuManager);
    @Override
    public void setActiveEditor (IEditorPart part); protected Collection < IAction > createChildActions;
    protected Collection < IAction > createSiblingActions;

    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected Collection < IAction > generateCreateSiblingActions (Collection < ? extends CommandParameter > descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {

        @Override
        public boolean isEnabled ();
        @Override
        public void run ();
    }

    ;
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {

        @Override
        public void run ();
    }

    ;
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    protected void depopulateManager (IContributionManager manager, Collection < ? extends IAction > actions);
    protected void populateManager (IContributionManager manager, Collection < ? extends IAction > actions, String contributionID); >>>>>>
    >>>>>>

}

