<<<<<<
public class DiagramEventBroker extends MUniversalListener {
    <<<<<<

    protected Set getInterestedNotificationListeners (Notification event);
    protected Set getNotificationListeners (Object notifier);
    protected Set getNotificationListeners (Object notifier, Object key);
    protected void fireNotification (Notification event);
    protected void handleElementEvent (Notification event); final public static MFilter ELEMENT_CREATED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.CREATE));
    final public static MFilter ELEMENT_DELETED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.DESTROY));
    final public static MFilter ELEMENT_INSERTED_INTO_SLOT = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.Or (new MFilter.EventType (EventTypes.ADD), new MFilter.EventType (EventTypes.ADD_MANY)));
    final public static MFilter ELEMENT_REMOVED_FROM_SLOT = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.Or (new MFilter.EventType (EventTypes.REMOVE), new MFilter.EventType (EventTypes.REMOVE_MANY)));
    final public static MFilter ELEMENT_UNCREATED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.UNCREATE));
    final public static MFilter ELEMENT_UNDELETED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.UNDESTROY));
    final public static MFilter SLOT_MODIFIED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.And (new MFilter.EventType (EventTypes.SET), new MFilter.EventType (EventTypes.UNSET)));
    <<<<<<
    <<<<<<
    <<<<<<

    final public void onEvent (List events); <<<<<<
    <<<<<<

    public static DiagramEventBroker getInstance ();
    public void startListening ();
    public void stopListening ();
}

>>>>>>
public class DiagramEventBroker extends ResourceSetListenerImpl {
    >>>>>>

    public Command transactionAboutToCommit (ResourceSetChangeEvent event); >>>>>>

    final public void addNotificationListener (EObject target, EStructuralFeature key, NotificationPreCommitListener listener); >>>>>>

    final public void addNotificationListener (EObject target, NotificationPreCommitListener listener); >>>>>>
    >>>>>>

    final public void removeNotificationListener (EObject target, NotificationPreCommitListener listener); >>>>>>

    final public void removeNotificationListener (EObject target, Object key, NotificationPreCommitListener listener);
    public static DiagramEventBroker getInstance (TransactionalEditingDomain editingDomain);
    public static void startListening (TransactionalEditingDomain editingDomain);
    public static void stopListening (TransactionalEditingDomain editingDomain);
    public void resourceSetChanged (ResourceSetChangeEvent event);
}

