<<<<<<
abstract public class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {
    <<<<<<
    <<<<<<
    protected DemuxingMListener eventListener = new DemuxingMListener (this);

    protected DemuxingMListener getEventListener (); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    protected Object executeAsReadAction (MRunnable code); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    protected void handleException (MSLActionAbandonedException exception); <<<<<<
    <<<<<<
    <<<<<<

    public MFilter getFilter (); <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement);
    public void handleElementDeletedEvent (Notification notification, EObject owner, EObject oldElement); <<<<<<

    public void handleResourceDirtiedEvent (Notification notification, Resource resource);
    public void handleResourceExportedEvent (Notification notification, Resource resource);
    public void handleResourceImportedEvent (Notification notification, Resource resource);
    public void handleResourceLoadedEvent (Notification notification, Resource resource);
    public void handleResourceSavedEvent (Notification notification, Resource resource);
    public void handleResourceUnloadedEvent (Notification notification, Resource resource, EObject modelRoot);
    public void handleUndoIntervalClosedEvent (Notification notification, MUndoInterval undoInterval);
    public void handleUndoIntervalsFlushedEvent (Notification notification, MUndoInterval undoInterval); <<<<<<
    <<<<<<
    <<<<<<

}

>>>>>>
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
    >>>>>>
    >>>>>>
    protected DemultiplexingListener eventListener = new DemultiplexingListener (getFilter ()) {

        protected void handleNotification (TransactionalEditingDomain domain, Notification notification);
    }

    ;

    protected DemultiplexingListener getEventListener (); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    public NotificationFilter getFilter (); >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

}

