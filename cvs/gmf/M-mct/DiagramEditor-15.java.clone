package org.eclipse.gmf.runtime.lite.parts;

abstract public class DiagramEditor extends EditorPart implements IDiagramManager {

    @Override
    public Object getAdapter (Class type);
    @Override
    public boolean isDirty ();
    @Override
    public boolean isSaveAsAllowed ();
    @Override
    public void createPartControl (Composite parent);
    @Override
    public void dispose ();
    @Override
    public void doSaveAs ();
    @Override
    public void init (IEditorSite site, IEditorInput input) throws PartInitException;
    @Override
    public void setFocus (); private CommandStackEventListener mySaveListener = new CommandStackEventListener () {

        public void stackChanged (CommandStackEvent event);
    }

    ;
    private CommandStackListener commandStackListener = new CommandStackListener () {

        public void commandStackChanged (EventObject event);
    }

    ;
    private static class ForceTrackingModificationAdapter extends AdapterImpl {

        @Override
        public boolean isAdapterForType (Object type);
        @Override
        public void notifyChanged (Notification msg);
        @Override
        public void setTarget (Notifier newTarget);
        public boolean isReleased ();
        public void acquire ();
        public void release ();
    }

    protected EditDomain createEditDomain ();
    protected IContentOutlinePage getOutlinePage ();
    protected IDiagramLayouter getDiagramLayouter ();
    protected IPropertySheetPage getPropertySheetPage ();
    protected Map < ?, ? > getSaveOptions ();
    protected TransactionalEditingDomain createEditingDomain ();
    protected TransactionalEditingDomain getEditingDomain (IEditorInput input);
    protected TransactionalEditingDomain reuseEditingDomain (IEditorInput input);
    abstract protected void createActions ();
    protected double [] getZoomLevels ();
    final protected ActionRegistry getActionRegistry ();
    final protected CommandStack getCommandStack ();
    final protected EditDomain getEditDomain ();
    final protected GraphicalViewer getGraphicalViewer ();
    final protected ZoomManager getZoomManager (); <<<<<<

    protected void addAction (IAction action);
    protected void addEditPartAction (SelectionAction action);
    protected void addEditorAction (WorkbenchPartAction action);
    protected void addStackAction (StackAction action);
    protected void save (IProgressMonitor monitor) throws CoreException;
    abstract public AdapterFactory getDomainAdapterFactory ();
    abstract public boolean isFlyoutPalette ();
    abstract public void configurePalette (PaletteRoot paletteRoot);
    abstract public void initializeGraphicalViewer ();
    final public TransactionalEditingDomain getEditingDomain ();
    public void configureGraphicalViewer ();
}

package org.eclipse.gmf.runtime.diagram.ui.parts;

abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
    class DiagramOutlinePage extends ContentOutlinePage implements IAdaptable {

        protected Control getEditor ();
        protected void configureOutlineViewer ();
        protected void hookOutlineViewer ();
        protected void initializeOutlineViewer ();
        protected void initializeOverview ();
        protected void showPage (int id);
        protected void unhookOutlineViewer ();
        public Control getControl ();
        public DiagramOutlinePage (EditPartViewer viewer) {
        }

        public Object getAdapter (Class type);
        public void createControl (Composite parent);
        public void dispose ();
        public void init (IPageSite pageSite);
    }

    protected ActionManager getActionManager ();
    protected CommandManager getCommandManager ();
    protected Control getGraphicalControl ();
    protected KeyHandler getKeyHandler ();
    protected List getElements (final ISelection selection); protected PreferenceStore workspaceViewerPreferenceStore = null;

    protected PreferencesHint getPreferencesHint ();
    protected RulerComposite getRulerComposite ();
    protected ScrollingGraphicalViewer createScrollingGraphicalViewer ();
    protected ZoomManager getZoomManager (); >>>>>>
    final protected static int ID_OUTLINE = 0;
    final protected static int ID_OVERVIEW = 1;

    protected void addDefaultPreferences ();
    protected void clearGraphicalViewerContents ();
    protected void closeEditor (final boolean save);
    protected void configureDiagramEditDomain ();
    protected void configureGraphicalViewer ();
    protected void createActions ();
    protected void createDiagramEditDomain ();
    protected void createGraphicalViewer (Composite parent);
    protected void initializeGraphicalViewer ();
    protected void initializeGraphicalViewerContents ();
    protected void setInput (IEditorInput input);
    protected void setRulerComposite (RulerComposite rulerComp);
    protected void setSite (IWorkbenchPartSite site);
    protected void startListening ();
    protected void stopListening ();
    public Diagram getDiagram ();
    public DiagramEditPart getDiagramEditPart ();
    public DiagramEditor () {
    }

    public IDiagramEditDomain getDiagramEditDomain ();
    public IDiagramGraphicalViewer getDiagramGraphicalViewer ();
    public IWorkbenchPartSite getSite ();
    public Object getAdapter (Class type);
    public PreferenceStore getWorkspaceViewerPreferenceStore ();
    public ShowInContext getShowInContext ();
    public String getContributorId ();
    final public void gotoMarker (IMarker marker);
    public static void addDefaultPreferences (PreferenceStore store, PreferencesHint preferencesHint);
    public void dispose ();
    public void init (IEditorSite site, IEditorInput input) throws PartInitException;
    public void persistViewerSettings ();
}

