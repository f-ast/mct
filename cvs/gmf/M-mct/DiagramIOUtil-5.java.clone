<<<<<<
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        <<<<<<

        public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    }

    private static class StorageLoader implements ILoader {

        public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException; <<<<<<

    }

    private static interface ILoader {

        public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    }

    <<<<<<

    public static void unload (MEditingDomain domain, Diagram diagram);
    public static Diagram load (final MEditingDomain domain, final IFile file, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static Diagram load (final MEditingDomain domain, final IStorage storage, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static void save (MEditingDomain domain, IFile file, Diagram diagram, IProgressMonitor progressMonitor, int nOptions) throws CoreException;
    public static void save (MEditingDomain domain, IFile file, Diagram diagram, boolean bOverwrite, boolean bKeepUnrecognizedData, IProgressMonitor progressMonitor) throws CoreException;
}

>>>>>>
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        >>>>>>

        public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    }

    private static class StorageLoader implements ILoader {

        public Resource load (TransactionalEditingDomain editingDomain, int loadOptions, IProgressMonitor monitor) throws CoreException; >>>>>>

    }

    private static interface ILoader {

        public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    }

    >>>>>>

    public static void unload (TransactionalEditingDomain domain, Diagram diagram);
    public static Diagram load (final TransactionalEditingDomain domain, final IFile file, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static Diagram load (final TransactionalEditingDomain domain, final IStorage storage, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static void save (TransactionalEditingDomain domain, IFile file, Diagram diagram, IProgressMonitor progressMonitor, Map options) throws CoreException;
    public static void save (TransactionalEditingDomain domain, IFile file, Diagram diagram, boolean bKeepUnrecognizedData, IProgressMonitor progressMonitor) throws CoreException;
}

