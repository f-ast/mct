[GMFGraphEditor-14.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
<<<<<<
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! (getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    <<<<<<
                    <<<<<<

                }

                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    <<<<<<
                    <<<<<<

                }

                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    <<<<<<
                    <<<<<<

                }

                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    <<<<<<
                    <<<<<<

                }

                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    <<<<<<
                    <<<<<<

                }

                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setColumnProperties (new String [] {"a", "b"});
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    <<<<<<
                    <<<<<<

                }

                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setColumnProperties (new String [] {"a", "b"});
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            } getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
                <<<<<<

            }

            );
        }
        getContainer ().addControlListener (new ControlAdapter () {
            <<<<<<

        }

        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
            <<<<<<

        }

        );
    } <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<
    <<<<<<

}

>>>>>>
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    >>>>>>
                    >>>>>>

                }

                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    >>>>>>
                    >>>>>>

                }

                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    >>>>>>
                    >>>>>>

                }

                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    >>>>>>
                    >>>>>>

                }

                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    >>>>>>
                    >>>>>>

                }

                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setColumnProperties (new String [] {"a", "b"});
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
            } {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    >>>>>>
                    >>>>>>

                }

                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setColumnProperties (new String [] {"a", "b"});
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            } getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
                >>>>>>

            }

            );
        }
        getContainer ().addControlListener (new ControlAdapter () {
            >>>>>>

        }

        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
            >>>>>>

        }

        );
    } >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>
    >>>>>>

}

