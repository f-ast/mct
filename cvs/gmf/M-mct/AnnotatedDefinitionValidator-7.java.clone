<<<<<<
public class AnnotatedDefinitionValidator extends AbstractValidator implements EValidator {
    <<<<<<
    private static class ContextData {

        public ContextData (ContextProvider contextProvider, Map environment) {
            this.contextClass = contextProvider;
            this.environment = environment;
        }

    }

    <<<<<<

    protected boolean validateMetaModel (EModelElement modelElement, DiagnosticChain diagnostics, Map context);
    protected boolean validateModel (EObject eObject, DiagnosticChain diagnostics, Map context); <<<<<<

    public ContextData getContextBinding (EObject eObject, EObject [] contextHolder, Map context);
    public ValueSpecDef getDefinition (EClass metaClass, EObject modelElement, DiagnosticChain diagnostics, DefData data, Map context);
    public ValueSpecDef getDefinition (EObject eObject, DiagnosticChain diagnostics, Map context);
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map context);
    public static ContextProvider getContextClass (EStructuralFeature bindFeature, final Map validationContext);
}

>>>>>>
public class AnnotatedDefinitionValidator extends AbstractValidator implements EValidator {
    >>>>>>
    private static class ContextData {

        public ContextData (ContextProvider contextProvider, Map < String, TypeProvider > environment) {
            this.contextClass = contextProvider;
            this.environment = environment;
        }

    }

    >>>>>>

    protected boolean validateMetaModel (EModelElement modelElement, DiagnosticChain diagnostics, Map < Object, Object > context);
    protected boolean validateModel (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context); >>>>>>

    public ContextData getContextBinding (EObject eObject, EObject [] contextHolder, Map < Object, Object > context);
    public ValueSpecDef getDefinition (EClass metaClass, EObject modelElement, DiagnosticChain diagnostics, DefData data, Map < Object, Object > context);
    public ValueSpecDef getDefinition (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public static ContextProvider getContextClass (EStructuralFeature bindFeature, final Map < Object, Object > validationContext);
}

