head	1.4;
access;
symbols
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080425-1959:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	RC3_20:1.4
	v20070601-1400:1.4
	v20070413-1300:1.4
	v20070405-2000:1.3
	v20070330-1300:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061214-0000:1.1;
locks; strict;
comment	@# @;


1.4
date	2007.04.13.12.10.32;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	1822461f73374567;

1.3
date	2007.04.05.20.57.01;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	46f64615629d4567;

1.2
date	2006.12.22.15.12.07;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	17da458bf5c74567;

1.1
date	2006.12.12.12.04.43;	author bblajer;	state Exp;
branches;
next	;
commitid	4c2f457e9adb4567;


desc
@@


1.4
log
@[168935] Allow to generate gmfgen models for RCP application on dashboard
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 *    Artem Tikhomirov (Borland) reorganized Map->Gen action
 */
package org.eclipse.gmf.internal.codegen.lite.dashboard;

import org.eclipse.gmf.internal.bridge.transform.TransformOptions;
import org.eclipse.gmf.internal.bridge.ui.dashboard.actions.TransformMap2GenModelAction;

public class GenerateLiteGMAction extends TransformMap2GenModelAction {

	protected void configureOptions(TransformOptions options) {
		super.configureOptions(options);
		options.setUseRuntimeFigures(false);
		options.setUseMapMode(false);
	}
}
@


1.3
log
@deprecated map->genmodel transformation action removed, dashboard updated to use new one
@
text
@d21 1
a23 1
		options.setGenerateRCP(false);
@


1.2
log
@[164965] Dashboard doesn't use .genmodel file specified
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Eclipse.org
d11 1
d15 2
a16 5
import org.eclipse.emf.common.util.URI;
import org.eclipse.gmf.bridge.ui.dashboard.DashboardAction;
import org.eclipse.gmf.bridge.ui.dashboard.DashboardFacade;
import org.eclipse.gmf.bridge.ui.dashboard.DashboardState;
import org.eclipse.gmf.internal.codegen.popup.actions.TransformToGenModelOperation;
d18 1
a18 20
/**
 * @@author dstadnik
 */
public class GenerateLiteGMAction implements DashboardAction {

	private DashboardFacade context;

	public void init(DashboardFacade context) {
		this.context = context;
	}

	public boolean isEnabled() {
		DashboardState state = context.getState();
		if (context.isStrict()) {
			if (state.getDM() == null || state.getDGM() == null || state.getTDM() == null) {
				return false;
			}
		}
		return state.getMM() != null;
	}
d20 4
a23 20
	public void run() {
		DashboardState state = context.getState();
		URI mm = state.getMM();
		URI gm = state.getGM();
		if (gm == null) {
			gm = mm.trimFileExtension().appendFileExtension("gmfgen"); //$NON-NLS-1$
			state.setGM(gm);
		}
		try {
			TransformToGenModelOperation op = new TransformToGenModelOperation();
			op.setUseRuntimeFigures(false);
			op.setUseMapMode(false);
			op.setRCP(false);
			op.setMapModelURI(mm);
			op.setGenModelURI(gm);
			op.setDomainGenModelURI(state.getDGM());
			op.run();
		} finally {
			context.updateStatus();
		}
@


1.1
log
@Transform for lite added to dashboard
@
text
@d56 1
@

