head	1.4;
access;
symbols
	v20081023-2107:1.4
	v20081022-1925:1.4
	v20081021-1810:1.4
	v20081020-0700:1.4
	v20080911-1728:1.4
	v20080911-1506:1.4
	v20080910-1520:1.4
	v20080910-1510:1.4
	v20080903-1520:1.4
	v20080903-1510:1.4
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080512-1200:1.4
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080407-2250:1.4
	v20080407-0930:1.4
	v20080404-1111:1.4
	v20080222-1200:1.3
	v20080215-1500:1.3
	v20080215-1200:1.2
	v20080201-2010:1.2
	v20080114-1111:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070928-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.2
	v20070830-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	v20070330-1300:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070202-0200:1.1.2.1
	M4_20:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20060925-1700:1.1.2.1
	v20060919-0800:1.1.2.1
	v20060824-1600:1.1.2.1
	v20060817-1500:1.1.2.1
	v20060810-1700:1.1.2.1
	v20060803-1200:1.1.2.1
	R1_0_maintenance:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2008.04.03.16.30.10;	author aboyko;	state Exp;
branches;
next	1.3;
commitid	3e0347f506114567;

1.3
date	2008.02.04.21.03.03;	author aboyko;	state Exp;
branches;
next	1.2;
commitid	50f847a77d874567;

1.2
date	2006.10.03.15.04.52;	author ahunter;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.01.18.18.16;	author mmostafa;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.08.01.18.18.16;	author mmostafa;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[225437] gmf_head aboyko 080403 Layout improvements
@
text
@/******************************************************************************
 * Copyright (c) 2006, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
package org.eclipse.gmf.runtime.draw2d.ui.internal.graph;

import org.eclipse.draw2d.PositionConstants;
import org.eclipse.draw2d.graph.Subgraph;

/**
 * @@author mmostafa
 * Advanced node introduce the AutoSize feature to the Draw2d SubGraph 
 *
 */
public class AdvancedSubGraph
    extends Subgraph {
    
    private boolean autoSize = false;
    private boolean hadBufferZone = false;
    private int direction = PositionConstants.SOUTH;
    
    public AdvancedSubGraph(Object data) {
        super(data, null);
    }

    public AdvancedSubGraph(Object data, Subgraph parent) {
        super(data, parent);
    }
    
    /**
     * set the auto size field
     * @@param newValue
     */
    public void setAutoSize(boolean newValue){
        autoSize = newValue;
    }
    
    /**
     * access the auto size field
     * @@return true is auto size is ON other wise false
     */
    public boolean isAutoSize(){
        return autoSize;
    }
    
    /**
     * set the AHs Buffered Zone field
     * @@param newValue
     */
    public void setHasBufferedZone(boolean newValue){
        hadBufferZone = newValue;
    }
    
    /**
     * access the had buffered zone field
     * @@return true is auto size is ON other wise false
     */
    public boolean isHasBufferedZone(){
        return hadBufferZone;
    }

	/**
	 * Gets the subgraph layout direction
	 * 
	 * @@return layout direction
	 */
	public int getDirection() {
		return direction;
	}

	/**
	 * Sets the direction for the subgraph's layout
	 * 
	 * @@param direction
	 */
	public void setDirection(int direction) {
		this.direction = direction;
	}

}
@


1.3
log
@[217749] gmf_head aboyko 080204 [Layout] Layout providers using Draw2D graph layout don't deliver the exact results to the diagram
@
text
@d26 1
a26 1
    private int direction = PositionConstants.NONE;
@


1.2
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2006 IBM Corporation and others.
d13 1
d26 1
d68 18
@


1.1
log
@file AdvancedSubGraph.java was initially added on branch R1_0_maintenance.
@
text
@d1 66
@


1.1.2.1
log
@[130329] gmf_R1_0_maintenance mmostafa  060801 CompositeLayoutProvider: auto-sized containers new size doesn't get considered
@
text
@a0 66
/******************************************************************************
 * Copyright (c) 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
package org.eclipse.gmf.runtime.draw2d.ui.internal.graph;

import org.eclipse.draw2d.graph.Subgraph;

/**
 * @@author mmostafa
 * Advanced node introduce the AutoSize feature to the Draw2d SubGraph 
 *
 */
public class AdvancedSubGraph
    extends Subgraph {
    
    private boolean autoSize = false;
    private boolean hadBufferZone = false;
    
    public AdvancedSubGraph(Object data) {
        super(data, null);
    }

    public AdvancedSubGraph(Object data, Subgraph parent) {
        super(data, parent);
    }
    
    /**
     * set the auto size field
     * @@param newValue
     */
    public void setAutoSize(boolean newValue){
        autoSize = newValue;
    }
    
    /**
     * access the auto size field
     * @@return true is auto size is ON other wise false
     */
    public boolean isAutoSize(){
        return autoSize;
    }
    
    /**
     * set the AHs Buffered Zone field
     * @@param newValue
     */
    public void setHasBufferedZone(boolean newValue){
        hadBufferZone = newValue;
    }
    
    /**
     * access the had buffered zone field
     * @@return true is auto size is ON other wise false
     */
    public boolean isHasBufferedZone(){
        return hadBufferZone;
    }

}
@

