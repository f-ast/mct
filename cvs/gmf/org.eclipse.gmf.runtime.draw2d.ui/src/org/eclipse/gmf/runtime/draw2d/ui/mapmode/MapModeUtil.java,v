head	1.4;
access;
symbols
	v20081023-2107:1.4
	v20081022-1925:1.4
	v20081021-1810:1.4
	v20081020-0700:1.4
	v20080911-1728:1.4
	v20080911-1506:1.4
	v20080910-1520:1.4
	v20080910-1510:1.4
	v20080903-1520:1.4
	v20080903-1510:1.4
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080512-1200:1.4
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080407-2250:1.4
	v20080407-0930:1.4
	v20080404-1111:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080215-1200:1.4
	v20080201-2010:1.4
	v20080114-1111:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070928-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070830-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070518-1300:1.4
	v20070330-1300:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070202-0200:1.3.2.1
	M4_20:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060925-1700:1.3.2.1
	v20060919-0800:1.3.2.1
	M1_20:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060810-1700:1.3
	v20060803-1200:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	RC2_10:1.3
	I20060505-1400:1.3
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;


1.4
date	2006.10.03.15.04.52;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.01.20.58.47;	author sshaw;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2006.03.30.21.14.55;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.28.14.29.46;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.09.13.16.46.18;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.draw2d.ui.mapmode;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.draw2d.IFigure;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.draw2d.ui.internal.Draw2dPlugin;

/**
 * @@author sshaw
 * Utility class to retrieve the <code>IMapMode</code> class from a <code>IFigure</code> context 
 */
public class MapModeUtil {

	/**
	 * Parses up the figure containment hierarchy to find a <code>IFigure</code> that implements
	 * the <code>IMapMode</code> interface.  This is then returned as the coordinate system
	 * mapping.
	 * 
	 * @@param fig <code>IFigure</code> to retrieve the <code>IMapMode</code> object from.
	 * @@return appropriate <code>IMapMode</code> for the given <code>IFigure</code> object.
	 */
	static public IMapMode getMapMode( IFigure fig ) {
        if (fig == null) {
            Log.warning(Draw2dPlugin.getInstance(), IStatus.WARNING, "MapModeUtil#getMapMode(IFigure fig) fig parameter must not be null - using default MapMode");//$NON-NLS-1$
            return MapModeTypes.DEFAULT_MM;
        }
        
        if (fig instanceof IMapMode)
            return (IMapMode)fig;
        
        if (fig.getParent() == null) {
            Log.warning(Draw2dPlugin.getInstance(), IStatus.WARNING, "MapModeUtil#getMapMode(IFigure fig) fig parameter must be attached to a parent - using default MapMode");//$NON-NLS-1$
            return MapModeTypes.DEFAULT_MM;
        }
		
		return getMapMode(fig.getParent());
	}
	
	/**
	 * @@return <code>IMapMode</code> that is the default coordinate system mapping supported
	 * by the diagram infrastructure.  Editors that support a different coordinate system,
	 * should use the @@link{ MapModeUtil#getMapMode( IFigure fig) } to retrieve the 
	 * appropriate <code>IMapMode</code> for their specific Editor.
	 */
	static public IMapMode getMapMode() {
		return MapModeTypes.DEFAULT_MM;
	}
}
@


1.3
log
@bugzilla 139607 gmf-head sshaw 060501 MapModeUtil#getMapMode(IFigure) adjustment to avoid log ..
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.3.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.2
log
@bugzilla 132219 gmf-head sshaw 030630 Use diagram editor mapmode in ShapeCompartmentFigure and ResizableCompartmentFigure
@
text
@d39 3
a45 3
        
		if (fig instanceof IMapMode)
			return (IMapMode)fig;
@


1.1
log
@bugzilla 112788 gmf-head sshaw 051029 API: Encapsulate MapMode / HiMetric coordinate system from clients

First phase delivery...
@
text
@d14 1
d16 2
d34 10
a43 3
		if (fig == null)
			return getMapMode();
		
@

