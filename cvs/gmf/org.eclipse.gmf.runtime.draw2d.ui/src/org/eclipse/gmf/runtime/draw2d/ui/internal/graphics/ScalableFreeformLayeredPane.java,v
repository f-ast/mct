head	1.9;
access;
symbols
	v20081023-2107:1.9
	v20081022-1925:1.9
	v20081021-1810:1.9
	v20081020-0700:1.9
	v20080911-1728:1.9
	v20080911-1506:1.9
	v20080910-1520:1.9
	v20080910-1510:1.9
	v20080903-1520:1.9
	v20080903-1510:1.9
	v20080722-1827:1.9
	R2_1_maintenance:1.9.0.4
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080512-1200:1.9
	v20080503-1740:1.9
	v20080501-1739:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080407-2250:1.9
	v20080407-0930:1.9
	v20080404-1111:1.9
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080215-1200:1.9
	v20080201-2010:1.9
	v20080114-1111:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070928-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070830-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070518-1300:1.9
	v20070330-1300:1.9
	v20070221-1500:1.9
	v20070208-1800:1.8
	v20070202-0200:1.7.2.3
	M4_20:1.8
	v20061218-1200:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061013-1330:1.8
	v20060925-1700:1.7.2.3
	v20060919-0800:1.7.2.3
	M1_20:1.7
	v20060824-1600:1.7.2.1
	v20060817-1500:1.7.2.1
	v20060810-1700:1.7.2.1
	v20060803-1200:1.7.2.1
	v20060728-0500:1.7.2.1
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060519-0800:1.7
	RC2_10:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.6
	I20051124-2000:1.6
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.5;
locks; strict;
comment	@# @;


1.9
date	2007.02.09.20.53.14;	author crevells;	state Exp;
branches;
next	1.8;
commitid	6cc445ccdf3a4567;

1.8
date	2006.10.03.15.04.52;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.05.20.45.45;	author mmostafa;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2005.11.21.19.51.25;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.28.14.29.46;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.26.20.48.26;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.12.22.25.23;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.27.43;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.51;	author sshaw;	state Exp;
branches;
next	;

1.7.2.1
date	2006.07.26.16.04.06;	author mmostafa;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2006.09.13.16.09.56;	author sshaw;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2006.09.13.16.46.18;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.9
log
@[173686] gmf_head crevells 070209 Clients of ScaledGraphics have issues when using setAlpha() and the advanced graphics library isn't present
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.draw2d.ui.internal.graphics;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.draw2d.Graphics;
import org.eclipse.draw2d.SWTGraphics;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.draw2d.geometry.Translatable;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.draw2d.ui.graphics.GCUtilities;
import org.eclipse.gmf.runtime.draw2d.ui.internal.Draw2dPlugin;
import org.eclipse.gmf.runtime.draw2d.ui.internal.mapmode.IMapModeHolder;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
import org.eclipse.swt.SWT;
import org.eclipse.swt.SWTException;


/**
 * @@author jcorchis / sshaw / jschofie
 * @@canBeSeenBy org.eclipse.gmf.runtime.draw2d.ui.*
 *
 * Override for supporting anti-aliasing lines
 */
public class ScalableFreeformLayeredPane
	extends org.eclipse.draw2d.ScalableFreeformLayeredPane implements IMapModeHolder {

	boolean antiAlias = true;
	private IMapMode mm;
	
	/**
	 * @@return <code>IMapMode</code> that is used to map coordinate coordinates
	 * from device to logical.
	 */
	public IMapMode getMapMode() {
		return mm;
	}

	public ScalableFreeformLayeredPane(IMapMode mm) {
		super();
		this.mm = mm;
	}

	public void setAntiAlias(boolean antiAliasValue) {
		antiAlias = antiAliasValue;
		super.repaint();
	}
	
    /**
    * 
    * @@see org.eclipse.draw2d.Figure#paintClientArea(Graphics)
    */
    protected void paintClientArea(Graphics graphics) {
        // Use Anti-Aliasing
    	if ((graphics instanceof SWTGraphics) && antiAlias && 
    		GCUtilities.supportsAdvancedGraphics()) {
            graphics.setAntialias(SWT.ON);			
		} else if (graphics.getAntialias()==SWT.ON){
			graphics.setAntialias(SWT.OFF);		
        }
        
        
    	// Create MapMode Graphics Object
        MapModeGraphics gMM = createMapModeGraphics(graphics);
    	gMM.pushState();
  	
    	if (getChildren().isEmpty()) {
    		gMM.popState();
    		return;
    	}
    	try {
			if (getScale() == 1.0) {
				super.paintClientArea(gMM);
			} else {
				ScaledGraphics g = createScaledGraphics(gMM);
				boolean optimizeClip = getBorder() == null || getBorder().isOpaque();
				if (!optimizeClip)
					g.clipRect(getBounds().getCropped(getInsets()));
				g.scale(getScale());
				g.pushState();
				paintChildren(g);
				g.dispose();
				gMM.restoreState();
			}
		} catch (SWTException e) {
			Log.error(Draw2dPlugin.getInstance(), IStatus.ERROR,e.getMessage(), e);
		}
    	
    	gMM.popState();
    }

	/**
	 * @@param graphics <code>MapModeGraphics</code> object to wrap with a <code>ScaledGraphics</code>
	 * @@return <code>ScaledGraphics</code>
	 */
	protected ScaledGraphics createScaledGraphics(MapModeGraphics gMM) {
		ScaledGraphics g = new ScaledGraphics(gMM);
		return g;
	}

	/**
	 * @@param graphics <code>Graphics</code> object to wrap with a <code>MapModeGraphics</code>
	 * @@return <code>MapModeGraphics</code>
	 */
	protected MapModeGraphics createMapModeGraphics(Graphics graphics) {
		MapModeGraphics gMM = new MapModeGraphics(graphics, getMapMode());
		return gMM;
	}

    /**
     * @@see org.eclipse.draw2d.Figure#getClientArea()
     */
    public Rectangle getClientArea(Rectangle rect) {
    	
    	super.getClientArea(rect);
    	getMapMode().DPtoLP(rect);
    	return rect;
    }
    
    /**
     * @@see org.eclipse.draw2d.Figure#translateToParent(Translatable)
     */
    public void translateToParent(Translatable t) {
    	super.translateToParent(t);
    	getMapMode().LPtoDP(t);
    }

    /**
     * @@see org.eclipse.draw2d.Figure#translateFromParent(Translatable)
     */
    public void translateFromParent(Translatable t) {
    	super.translateFromParent( t );
    	getMapMode().DPtoLP(t);
    }

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#DPtoLP(int)
	 */
	public int DPtoLP(int deviceUnit) {
		return getMapMode().DPtoLP(deviceUnit);
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#DPtoLP(org.eclipse.draw2d.geometry.Translatable)
	 */
	public Translatable DPtoLP(Translatable t) {
		return getMapMode().DPtoLP(t);
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#LPtoDP(int)
	 */
	public int LPtoDP(int logicalUnit) {
		return getMapMode().LPtoDP(logicalUnit);
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#LPtoDP(org.eclipse.draw2d.geometry.Translatable)
	 */
	public Translatable LPtoDP(Translatable t) {
		return getMapMode().LPtoDP(t);
	}

}
@


1.8
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d20 1
@


1.7
log
@bugzilla 131522 gmf-head mmostafa 060405 Bidi3.2: [HCG]Unable to use GMF editor in RTL layout
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
d21 1
a22 1
import org.eclipse.jface.window.Window;
d34 1
a34 1
	extends org.eclipse.draw2d.ScalableFreeformLayeredPane implements IMapMode {
d43 1
a43 1
	protected IMapMode getMapMode() {
d62 3
a64 3
        boolean RTL = (Window.getDefaultOrientation()==SWT.RIGHT_TO_LEFT);
    	// Use Anti-Aliasing
    	if ((graphics instanceof SWTGraphics) && antiAlias && !RTL) {
@


1.7.2.1
log
@[150403] gmf_R1_0_maintenace ylulu 060726  Scrollbar figures are created pre-maturely
@
text
@a20 1
import org.eclipse.gmf.runtime.draw2d.ui.internal.mapmode.IMapModeHolder;
d34 1
a34 1
	extends org.eclipse.draw2d.ScalableFreeformLayeredPane implements IMapModeHolder {
d43 1
a43 1
	public IMapMode getMapMode() {
@


1.7.2.2
log
@Bugzilla#154982 gmf_R1_0_maintenance sshaw 060913 Cairo is not available on Sun Solaris
@
text
@d23 1
d63 3
a65 3
        // Use Anti-Aliasing
    	if ((graphics instanceof SWTGraphics) && antiAlias && 
    		GCUtilities.supportsAdvancedGraphics()) {
@


1.7.2.3
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.6
log
@Bugzilla 113254  gmf_head 051121 tmacdoug - Need gdiplus library to open a diagram
@
text
@d22 1
d62 1
d64 7
a70 6
    	if ((graphics instanceof SWTGraphics) && antiAlias) {
			graphics.setAntialias(SWT.ON);			
		} else {
			graphics.setAntialias(SWT.OFF);			
		}

@


1.5
log
@bugzilla 112788 gmf-head sshaw 051029 API: Encapsulate MapMode / HiMetric coordinate system from clients

First phase delivery...
@
text
@d14 1
d19 2
d23 1
d76 17
a92 13
    	if (getScale() == 1.0) {
    		super.paintClientArea(gMM);
    	} else {
    		ScaledGraphics g = createScaledGraphics(gMM);
    		boolean optimizeClip = getBorder() == null || getBorder().isOpaque();
    		if (!optimizeClip)
    			g.clipRect(getBounds().getCropped(getInsets()));
    		g.scale(getScale());
    		g.pushState();
    		paintChildren(g);
    		g.dispose();
    		gMM.restoreState();
    	}
@


1.4
log
@Bugzilla 112990 gmf_head tmacdoug 051026 - The Logic Diagram does not respect the Anti-Aliasing Preference or the Ruler Units
@
text
@d18 1
a20 2
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;

d29 1
a29 1
	extends org.eclipse.draw2d.ScalableFreeformLayeredPane {
d32 1
d34 13
d103 1
a103 1
		MapModeGraphics gMM = new MapModeGraphics(graphics);
d113 1
a113 1
    	MapMode.translateToLP(rect);
d122 1
a122 1
    	MapMode.translateToDP(t);
d130 1
a130 1
    	MapMode.translateToLP(t);
d133 32
@


1.3
log
@bugzilla 111210 gmf-head sshaw 051012 Running out of SWT handles / Excessive GDI handles
@
text
@d45 1
a45 1
    	if (graphics instanceof SWTGraphics) {
d47 2
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d50 1
a50 1
        MapModeGraphics gMM = new MapModeGraphics(graphics);
d60 1
a60 1
    		ScaledGraphics g = new ScaledGraphics(gMM);
d74 18
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

