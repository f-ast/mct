head	1.5;
access;
symbols
	v20081023-2107:1.5
	v20081022-1925:1.5
	v20081021-1810:1.5
	v20081020-0700:1.5
	v20080911-1728:1.5
	v20080911-1506:1.5
	v20080910-1520:1.5
	v20080910-1510:1.5
	v20080903-1520:1.5
	v20080903-1510:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080512-1200:1.5
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080407-2250:1.5
	v20080407-0930:1.5
	v20080404-1111:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080215-1200:1.5
	v20080201-2010:1.5
	v20080114-1111:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070928-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070830-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070518-1300:1.5
	v20070330-1300:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.3.2.1
	M4_20:1.5
	v20061218-1200:1.5
	v20061214-0000:1.5
	M3_20:1.4
	v20061013-1330:1.4
	v20060925-1700:1.3.2.1
	v20060919-0800:1.3.2.1
	M1_20:1.3
	v20060824-1600:1.3.2.1
	v20060817-1500:1.3.2.1
	v20060810-1700:1.3.2.1
	v20060803-1200:1.3.2.1
	v20060728-0500:1.3.2.1
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	RC2_10:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2006.12.06.14.37.46;	author crevells;	state Exp;
branches;
next	1.4;
commitid	2b014576d5b94567;

1.4
date	2006.10.03.15.04.52;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.08.19.39.45;	author mmostafa;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.27.43;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.42;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.07.26.16.04.07;	author mmostafa;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[110971] gmf_head crevells 061206 Compartment Scrolling Issues
Contributed by: Alex Boyko
@
text
@/******************************************************************************
 * Copyright (c) 2000, 2003  IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.draw2d.ui.internal.figures;

import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.ScrollBar;
import org.eclipse.draw2d.ScrollPane;
import org.eclipse.draw2d.ScrollPaneLayout;
import org.eclipse.draw2d.Viewport;
import org.eclipse.draw2d.geometry.Dimension;
import org.eclipse.draw2d.geometry.Insets;
import org.eclipse.draw2d.geometry.Rectangle;

/*
 * @@canBeSeenBy %partners
 * 
 * <p>
 * Code taken from Eclipse reference bugzilla #98820
 * 
 */
public class OverlayScrollPaneLayout extends ScrollPaneLayout {

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.draw2d.AbstractLayout#calculatePreferredSize(org.eclipse.draw2d.IFigure, int, int)
	 */
	protected Dimension calculatePreferredSize(
		IFigure container,
		int wHint,
		int hHint) {
		ScrollPane scrollpane = (ScrollPane) container;
		Insets insets = scrollpane.getInsets();

		int excludedWidth = insets.getWidth();
		int excludedHeight = insets.getHeight();

		return scrollpane
			.getViewport()
			.getPreferredSize(wHint - excludedWidth, hHint - excludedHeight)
			.getExpanded(excludedWidth, excludedHeight);
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.draw2d.LayoutManager#layout(org.eclipse.draw2d.IFigure)
	 */
	public void layout(IFigure parent) {
        int hVis;
        int vVis;
        ScrollPane scrollpane;
        ScrollBar vBar;
        ScrollBar hBar;      
        if (parent instanceof AnimatableScrollPane) {
            AnimatableScrollPane p = (AnimatableScrollPane) parent;
            hBar = p.basicGetHorizontalScrollBar();
            vBar = p.basicGetVerticalScrollBar();
            hVis = p.getHorizontalScrollBarVisibility();
            vVis = p.getVerticalScrollBarVisibility();
            scrollpane = p;
        } else {
            scrollpane = (ScrollPane) parent;
            hVis = scrollpane.getHorizontalScrollBarVisibility();
            vVis = scrollpane.getVerticalScrollBarVisibility();           
                hBar = (hVis != NEVER)?scrollpane.getHorizontalScrollBar():null;            
                vBar = (vVis != NEVER)?scrollpane.getVerticalScrollBar():null;
        }
		Rectangle clientArea = parent.getClientArea();
		int bottom = 0;
		int right  = 0 ;		
		Viewport viewport = scrollpane.getViewport();
		Dimension available = clientArea.getSize();
		Dimension preferred = viewport.getPreferredSize(available.width, available.height).getCopy();
		boolean showV = preferred.height > available.height && available.height > 0;
		boolean showH = preferred.width > available.width && available.width > 0;
		//Adjust for visibility override flags
		showV = !(vVis == NEVER) && (showV || vVis == ALWAYS);
		showH = !(hVis == NEVER) && (showH || hVis == ALWAYS);
		Rectangle bounds, viewportArea = clientArea;
		int hPad = 0;
		int vPad = 0;       
	
		if (showH){
            hBar = scrollpane.getHorizontalScrollBar();
			bottom = hBar.getPreferredSize(clientArea.width, clientArea.height).height;
			hPad = hBar.getSize().height;
		}
		
		if (showV){
            vBar = scrollpane.getVerticalScrollBar();
			right =	vBar.getPreferredSize(clientArea.width, clientArea.height).width;
			vPad = vBar.getSize().width;
		}
		
		if (showV) {
			bounds =
				new Rectangle(
					viewportArea.right() - right,
					viewportArea.y,
					right,
					viewportArea.height - hPad);
			vBar.setBounds(bounds);
		}
        
		if (showH) {
			bounds =
				new Rectangle(
					viewportArea.x,
					viewportArea.bottom() - bottom,
					viewportArea.width - vPad,
					bottom);
			hBar.setBounds(bounds);
		}
        
		if (vBar!=null){
			vBar.setVisible(showV);            
        }
		if (hBar!=null){
			hBar.setVisible(showH);            
        }
        
		viewport.setBounds(viewportArea);
	}
		
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.internal.figures.ScrollPaneLayout#calculateMinimumSize(org.eclipse.draw2d.IFigure)
	 */
	public Dimension calculateMinimumSize(IFigure container) {
		ScrollPane scrollpane = (ScrollPane) container;
		return scrollpane.getViewport().getMinimumSize();
	}

}
@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d82 2
a83 8
		boolean none = available.contains(preferred);
		boolean both =
			!none
				&& vVis != NEVER
				&& hVis != NEVER
				&& preferred.contains(available);
		boolean showV = both || (preferred.height > available.height && (available.height > 0));
		boolean showH = both || (preferred.width > available.width && (available.width > 0));
@


1.3
log
@bugzilla 115518 gmf-head mmostafa 051108 : ScrollBar figure get created although the Pane set the scroll bar visibilty to NEVER
@
text
@d57 19
a75 1
		ScrollPane scrollpane = (ScrollPane) parent;
d78 1
a78 6
		int right  = 0 ;

		int hVis = scrollpane.getHorizontalScrollBarVisibility(),
		vVis = scrollpane.getVerticalScrollBarVisibility();
		
		
d88 2
a89 2
		boolean showV = both || preferred.height > available.height;
		boolean showH = both || preferred.width > available.width;
d95 2
a96 9
		int vPad = 0;
		ScrollBar vBar = null;
		ScrollBar hBar = null;
		
		if (hVis!=NEVER)
			hBar = scrollpane.getHorizontalScrollBar();
		if (vVis!=NEVER)
			vBar = scrollpane.getVerticalScrollBar();
				
d98 1
d104 1
d118 1
d128 8
a135 4
		if (vBar!=null)
			vBar.setVisible(showV);
		if (hBar!=null)
			hBar.setVisible(showH);
@


1.3.2.1
log
@[150403] gmf_R1_0_maintenace ylulu 060726  Scrollbar figures are created pre-maturely
@
text
@d57 1
a57 19
        int hVis;
        int vVis;
        ScrollPane scrollpane;
        ScrollBar vBar;
        ScrollBar hBar;      
        if (parent instanceof AnimatableScrollPane) {
            AnimatableScrollPane p = (AnimatableScrollPane) parent;
            hBar = p.basicGetHorizontalScrollBar();
            vBar = p.basicGetVerticalScrollBar();
            hVis = p.getHorizontalScrollBarVisibility();
            vVis = p.getVerticalScrollBarVisibility();
            scrollpane = p;
        } else {
            scrollpane = (ScrollPane) parent;
            hVis = scrollpane.getHorizontalScrollBarVisibility();
            vVis = scrollpane.getVerticalScrollBarVisibility();           
                hBar = (hVis != NEVER)?scrollpane.getHorizontalScrollBar():null;            
                vBar = (vVis != NEVER)?scrollpane.getVerticalScrollBar():null;
        }
d60 6
a65 1
		int right  = 0 ;		
d75 2
a76 2
		boolean showV = both || (preferred.height > available.height && (available.height > 0));
		boolean showH = both || (preferred.width > available.width && (available.width > 0));
d82 9
a90 2
		int vPad = 0;       
	
a91 1
            hBar = scrollpane.getHorizontalScrollBar();
a96 1
            vBar = scrollpane.getVerticalScrollBar();
a109 1
        
d119 4
a122 8
        
		if (vBar!=null){
			vBar.setVisible(showV);            
        }
		if (hBar!=null){
			hBar.setVisible(showH);            
        }
        
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d59 2
d62 4
a65 2
		ScrollBar hBar = scrollpane.getHorizontalScrollBar(),
			vBar = scrollpane.getVerticalScrollBar();
d67 10
a76 25

		Insets insets = new Insets();
		insets.bottom =
			hBar.getPreferredSize(clientArea.width, clientArea.height).height;
		insets.right =
			vBar.getPreferredSize(clientArea.width, clientArea.height).width;

		int hVis = scrollpane.getHorizontalScrollBarVisibility(),
			vVis = scrollpane.getVerticalScrollBarVisibility();

		Dimension available = clientArea.getSize(),
			preferred =
				viewport
					.getPreferredSize(available.width, available.height)
					.getCopy();

		boolean none = available.contains(preferred),
			both =
				!none
					&& vVis != NEVER
					&& hVis != NEVER
					&& preferred.contains(available),
			showV = both || preferred.height > available.height,
			showH = both || preferred.width > available.width;

a79 5

		if (!showV)
			insets.right = 0;
		if (!showH)
			insets.bottom = 0;
d81 20
a100 3

		int vPad = showV ? vBar.getSize().width : 0;
		int hPad = showH ?  hBar.getSize().height : 0;
d104 1
a104 1
					viewportArea.right() - insets.right,
d106 1
a106 1
					insets.right,
a108 1
			//vBar.setMaximum(preferred.height);
d114 1
a114 1
					viewportArea.bottom() - insets.bottom,
d116 1
a116 1
					insets.bottom);
a117 1
			//hBar.setMaximum(preferred.width);
d119 4
a122 2
		vBar.setVisible(showV);
		hBar.setVisible(showH);
d125 1
a125 1

@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 4
a4 4
/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
d6 2
a7 2
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
d9 3
a11 2
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
@

