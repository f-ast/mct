package org.eclipse.gmf.runtime.draw2d.ui.internal.graphics;

public class ScaledGraphics extends Graphics {

    Font createFont (FontData data);
    Font getCachedFont (FontKey key);
    Font zoomFont (Font f);
    FontData getCachedFontData (Font f);
    Point zoomTextPoint (int x, int y); double zoom = 1.0;

    int zoomFontHeight (int height);
    int zoomLineWidth (int w);
    private Font getLocalFont (); private Font localFont;
    private FontHeightCache localCache = new FontHeightCache ();
    private FontHeightCache targetCache = new FontHeightCache ();
    private FontKey fontKey = new FontKey ();
    private Graphics graphics;
    private List stack = new ArrayList ();
    private Map fontDataCache = new HashMap ();

    private Rectangle zoomClipRect (Rectangle r);
    private Rectangle zoomFillRect (int x, int y, int w, int h);
    private TextLayout zoomTextLayout (TextLayout layout); private boolean allowText = true;
    private double fractionalX;
    private double fractionalY;
    final private Rectangle tempRECT = new Rectangle ();

    private int [] zoomPointList (int [] points);
    private int getLocalLineWidth (); private int localLineWidth;
    private int stackPointer = 0;
    private static class FontHeightCache {

    }

    private static int [] [] intArrayCache = new int [8] [];

    private void restoreLocalState (State state);
    private void setLocalFont (Font f);
    private void setLocalLineWidth (int width);
    protected Graphics getGraphics ();
    protected Rectangle zoomRect (int x, int y, int w, int h); protected static class State {

        protected State () {
        }

        protected State (double zoom, double x, double y, Font font, int lineWidth) {
            this.zoom = zoom;
            this.appliedX = x;
            this.appliedY = y;
            this.font = font;
            this.lineWidth = lineWidth;
        }

        protected void setValues (double zoom, double x, double y, Font font, int lineWidth);
    }

    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Font getFont ();
    public FontMetrics getFontMetrics ();
    public Rectangle getClip (Rectangle rect);
    public ScaledGraphics (Graphics g) {
        graphics = g;
        localFont = g.getFont ();
        localLineWidth = g.getLineWidth ();
    }

    public boolean getXORMode ();
    public double getAbsoluteScale ();
    public int getAlpha ();
    public int getAntialias ();
    public int getFillRule ();
    public int getInterpolation ();
    public int getLineCap ();
    public int getLineJoin ();
    public int getLineStyle ();
    public int getLineWidth ();
    public int getTextAntialias ();
    public void clipRect (Rectangle r);
    public void dispose ();
    public void drawArc (int x, int y, int w, int h, int offset, int sweep);
    public void drawFocus (int x, int y, int w, int h);
    public void drawImage (Image srcImage, int sx, int sy, int sw, int sh, int tx, int ty, int tw, int th);
    public void drawImage (Image srcImage, int x, int y);
    public void drawLine (int x1, int y1, int x2, int y2);
    public void drawOval (int x, int y, int w, int h);
    public void drawPoint (int x, int y);
    public void drawPolygon (PointList points);
    public void drawPolygon (int [] points);
    public void drawPolyline (PointList points);
    public void drawPolyline (int [] points);
    public void drawRectangle (int x, int y, int w, int h);
    public void drawRoundRectangle (Rectangle r, int arcWidth, int arcHeight);
    public void drawString (String s, int x, int y);
    public void drawText (String s, int x, int y);
    public void drawText (String s, int x, int y, int style);
    public void drawTextLayout (TextLayout layout, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground);
    public void fillArc (int x, int y, int w, int h, int offset, int sweep);
    public void fillGradient (int x, int y, int w, int h, boolean vertical);
    public void fillOval (int x, int y, int w, int h);
    public void fillPolygon (PointList points);
    public void fillPolygon (int [] points);
    public void fillRectangle (int x, int y, int w, int h);
    public void fillRoundRectangle (Rectangle r, int arcWidth, int arcHeight);
    public void fillString (String s, int x, int y);
    public void fillText (String s, int x, int y);
    public void popState ();
    public void pushState ();
    public void restoreState ();
    public void scale (double amount);
    public void setAlpha (int alpha);
    public void setAntialias (int value);
    public void setBackgroundColor (Color rgb);
    public void setClip (Rectangle r);
    public void setFillRule (int rule);
    public void setFont (Font f);
    public void setForegroundColor (Color rgb);
    public void setInterpolation (int interpolation);
    public void setLineCap (int cap);
    public void setLineDash (int [] dash);
    public void setLineJoin (int join);
    public void setLineStyle (int style);
    public void setLineWidth (int width);
    public void setTextAntialias (int value);
    public void setXORMode (boolean b);
    public void translate (int dx, int dy); static class FontKey {

        protected FontKey () {
        }

        protected FontKey (Font font, int height) {
        }

        protected void setValues (Font font, int height);
        public boolean equals (Object obj);
        public int hashCode ();
    }

    public static void resetFontCache ();
    static {
        for (int i = 0;
        i < intArrayCache.length; i ++) intArrayCache [i] = new int [i + 1];

    }

    void setScale (double value);
}

