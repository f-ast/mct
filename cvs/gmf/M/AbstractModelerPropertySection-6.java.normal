package org.eclipse.gmf.runtime.diagram.ui.properties.sections;

abstract public class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {

    private ICommand createCommandInternal (String name, Object res, final Runnable runnable); private List eObjectList = new ArrayList ();
    private TabbedPropertySheetPage tabbedPropertySheetPage;
    private boolean bIsCommandInProgress = false;

    protected CommandResult executeAsCompositeCommand (String actionName, List commands); protected DemuxingMListener eventListener = new DemuxingMListener (this);

    protected DemuxingMListener getEventListener ();
    protected EObject adapt (Object object); protected EObject eObject;

    protected EObject getEObject ();
    protected EObject unwrap (Object object);
    protected ICommand createCommand (String name, EObject res, final Runnable runnable);
    protected ICommand createCommand (String name, Resource res, final Runnable runnable);
    protected List getEObjectList (); protected List input;

    protected Object executeAsReadAction (MRunnable code);
    protected Object getPrimarySelection ();
    protected SectionUpdateRequestCollapser getUpdateRequestCollapser ();
    protected boolean addToEObjectList (Object object); protected boolean disposed = false;

    protected boolean isCurrentSelection (Notification notification, EObject element);
    protected boolean isDisposed ();
    protected boolean isNotifierDeleted (Notification notification);
    protected boolean isReadOnly ();
    protected int getStandardLabelWidth (Composite parent, String [] labels); final protected static PropertiesServiceAdapterFactory propertiesProvider = new PropertiesServiceAdapterFactory ();

    protected void executeAsReadAction (final Runnable code);
    protected void handleException (MSLActionAbandonedException exception);
    protected void postUpdateRequest (Runnable updateRequest);
    protected void setEObject (EObject object);
    public List getInput ();
    public MFilter getFilter ();
    public void aboutToBeHidden ();
    public void aboutToBeShown ();
    public void createControls (Composite parent, TabbedPropertySheetPage aTabbedPropertySheetPage);
    public void dispose ();
    public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement);
    public void handleElementDeletedEvent (Notification notification, EObject owner, EObject oldElement);
    public void handleElementModifiedEvent (final Notification notification, final EObject element);
    public void handleResourceDirtiedEvent (Notification notification, Resource resource);
    public void handleResourceExportedEvent (Notification notification, Resource resource);
    public void handleResourceImportedEvent (Notification notification, Resource resource);
    public void handleResourceLoadedEvent (Notification notification, Resource resource);
    public void handleResourceSavedEvent (Notification notification, Resource resource);
    public void handleResourceUnloadedEvent (Notification notification, Resource resource, EObject modelRoot);
    public void handleUndoIntervalClosedEvent (Notification notification, MUndoInterval undoInterval);
    public void handleUndoIntervalsFlushedEvent (Notification notification, MUndoInterval undoInterval);
    public void setInput (IWorkbenchPart part, ISelection selection);
    public void update (final Notification notification, final EObject element); protected static String VALUE_CHANGED_STRING = EMFUIMessages.AbstractPropertySection_UndoIntervalPropertyString;

}

