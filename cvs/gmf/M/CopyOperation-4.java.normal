package org.eclipse.gmf.runtime.emf.clipboard.core;

public class CopyOperation extends ClipboardOperation {
    private Collection eObjects;

    private CopyObjects getAuxiliaryObjects (); private CopyParentsCopier copyParentsCopierCopier;

    private CopyParentsCopier getCopyParentsCopier ();
    private EObject getTopMostCopyParentObject (EObject eChild); private Map hintMap;

    private Map removeEmbeddedChildren (Collection parents, Collection childs); private OverrideCopyOperation overrideCopyOperation;

    private String saveEObjects (CopyObjects copyObjects, URI uri, String encoding, Map saveOptions, Map hints) throws Exception; private class CopyParentsCopier extends EcoreUtil.Copier {

        protected void copyAttribute (EAttribute eAttribute, EObject eObject, EObject copiedEObject);
        protected void copyContainment (EReference eReference, EObject eObject, EObject copiedEObject);
        protected void copyReference (EReference eReference, EObject eObject, EObject copiedEObject);
        public EObject copy (EObject eObject);
    }

    final private static URI COPY_URI = URI.createFileURI ("");
    final private static int BUFFER_SIZE = 128 * KILOBYTE;
    final private static int KILOBYTE = 1024;

    private void buildEmbeddedCopyParentChain (Set objectsWithCopyParent, Set embeddedCopyParents, Set copyParentSet);
    private void extractCopyAlwaysObjects (Collection mainObjects, Set combinedCopyAlwaysSet, Map copyAlwaysMap);
    private void extractCopyAlwaysObjects (CopyObjects copyObjects);
    private void extractCopyParentsObjects (CopyObjects copyObjects);
    private void getCopyAlwaysObjects (EObject eObject, Set copyAlwaysObjects, Set combinedCopyAlwaysSet);
    private void removeNonCopyableObject (Collection collection);
    private void throwCancelException ();
    private void throwUncopyableException ();
    protected Collection getEObjects ();
    protected Map getEObjectsHintMap ();
    public CopyOperation (IProgressMonitor monitor, IClipboardSupport clipboardSupport, Collection eObjects, Map hintMap) {
    }

    public Set getCombinedCopyAlwaysSet ();
    public String copy () throws Exception; final public static String COPY = "copy";

}

