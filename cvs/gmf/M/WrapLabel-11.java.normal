package org.eclipse.gmf.runtime.draw2d.ui.figures;

public class WrapLabel extends Figure implements PositionConstants {
    private Dimension ellipseTextSize;

    private Dimension getEllipseTextSize ();
    private Dimension getTextExtents (String s, Font f, int fontHeight); private Dimension textSize;

    private IMapMode getMapMode (); private IconInfo iconInfo;

    private MapModeConstants getMapModeConstants (); private MapModeConstants mapModeConstants;
    private Point iconLocation;
    private Point textLocation;

    private Rectangle getSelectionRectangle ();
    private String getWrappedText (int wHint, int hHint); private String subStringText;
    private String text;

    final private Dimension getTextSize (); private int cachedPrefSizeHint_height;
    private int cachedPrefSizeHint_width;
    private int cachedTextSizeHint_height;
    private int cachedTextSizeHint_width;

    private int getAlignment (int flagOffset);
    private int getLabelAlignment ();
    private int getLargestSubstringConfinedTo (String s, Font f, int w, int fontHeight, int charAverageWidth);
    private int getLineWrapPosition (String s, Font f, int w, int fontHeight);
    private int getPlacement (int flagOffset); abstract private static class IconInfo {

        abstract public Dimension getIconSize (IMapMode mapMode, int i);
        abstract public Dimension getTotalIconSize (IMapMode mapMode);
        abstract public Image getIcon (int i);
        abstract public int getMaxIcons ();
        abstract public int getNumberofIcons ();
        abstract public void invalidate ();
        abstract public void setIcon (Image icon, int i);
    }

    private static class MapModeConstants {

        public Dimension getEllipseTextSize (Font f);
        public MapModeConstants (IMapMode mapMode) {
        }

        public SingleIconInfo getSingleIconInfo (Image image); final public Dimension dimension_nDPtoLP_0;
        final public SingleIconInfo [] singleIconInfos = new SingleIconInfo [MAX_IMAGE_INFO];
        final public WeakHashMap fontToEllipseTextSize = new WeakHashMap ();
        final public WeakReference mapModeRef;
        final public int nDPtoLP_0;
        final public int nDPtoLP_2;
        final public int nDPtoLP_3;

    }

    private static class MultiIconInfo extends IconInfo {

        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public MultiIconInfo () {
        }

        public int getMaxIcons ();
        public int getNumberofIcons ();
        public void invalidate ();
        public void setIcon (Image icon, int i);
    }

    private static class SingleIconInfo extends IconInfo {
        final Image icon;
        private Dimension totalIconSize;

        private SingleIconInfo () {
        }

        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public SingleIconInfo (Image icon) {
        }

        final public int getMaxIcons ();
        public int getNumberofIcons (); final public static SingleIconInfo NULL_INFO = new SingleIconInfo () {

            public int getNumberofIcons ();
        }

        ;

        public void invalidate ();
        public void setIcon (Image img, int i); static int count;

    }

    final private static Dimension EMPTY_DIMENSION = new Dimension (0, 0);
    final private static Map mapModeConstantsMap = new WeakHashMap ();
    final private static String _ellipse = "...";
    private static int FLAG_HASFOCUS = MAX_FLAG << 2;
    private static int FLAG_ICON_ALIGN = MAX_FLAG << 12;
    private static int FLAG_LABEL_ALIGN = MAX_FLAG << 15;
    private static int FLAG_SELECTED = MAX_FLAG << 1;
    private static int FLAG_STRIKEDTHROUGH = MAX_FLAG << 4;
    private static int FLAG_TEXT_ALIGN = MAX_FLAG << 6;
    private static int FLAG_TEXT_PLACEMENT = MAX_FLAG << 18;
    private static int FLAG_UNDERLINED = MAX_FLAG << 3;
    private static int FLAG_WRAP = MAX_FLAG << 5;
    private static int FLAG_WRAP_ALIGN = MAX_FLAG << 9;

    private void alignOnHeight (Point loc, Dimension size, int alignment);
    private void alignOnWidth (Point loc, Dimension size, int alignment);
    private void calculateAlignment (Dimension iconSize, int textPlacement);
    private void calculateLocations ();
    private void calculatePlacement (Dimension iconSize, int textPlacement);
    private void clearLocations ();
    private void paintIcons (Graphics graphics);
    private void paintText (Graphics graphics, String subString);
    private void setAlignmentFlags (int align, int flagOffset);
    private void setPlacementFlags (int align, int flagOffset);
    protected Dimension calculateLabelSize (Dimension txtSize);
    protected Dimension calculateSubStringTextSize ();
    protected Dimension calculateTextSize (int wHint, int hHint);
    protected Dimension getIconSize (int index);
    protected Dimension getSubStringTextSize ();
    protected Dimension getTextSize (int wHint, int hHint);
    protected Dimension getTotalIconSize ();
    protected Point getIconLocation ();
    protected Point getTextLocation ();
    protected String getEllipse ();
    protected boolean hasIcons ();
    protected int getNumberofIcons ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize (int w, int h);
    public Dimension getPreferredSize (int wHint, int hHint);
    public Image getIcon ();
    public Image getIcon (int index);
    public Rectangle getIconBounds ();
    public Rectangle getTextBounds ();
    public String getSubStringText ();
    public String getText ();
    public WrapLabel () {
    }

    public WrapLabel (Image i) {
    }

    public WrapLabel (String s) {
    }

    public WrapLabel (String s, Image i) {
    }

    public boolean hasFocus ();
    public boolean isSelected ();
    public boolean isTextStrikedThrough ();
    public boolean isTextTruncated ();
    public boolean isTextUnderlined ();
    public boolean isTextWrapped ();
    public int getIconAlignment ();
    public int getIconTextGap ();
    public int getTextAlignment ();
    public int getTextPlacement ();
    public int getTextWrapAlignment ();
    public void invalidate ();
    public void paintFigure (Graphics graphics);
    public void setFocus (boolean b);
    public void setIcon (Image image);
    public void setIcon (Image image, int index);
    public void setIconAlignment (int align);
    public void setLabelAlignment (int align);
    public void setSelected (boolean b);
    public void setText (String s);
    public void setTextAlignment (int align);
    public void setTextPlacement (int where);
    public void setTextStrikeThrough (boolean b);
    public void setTextUnderline (boolean b);
    public void setTextWrap (boolean b);
    public void setTextWrapAlignment (int i);
    public void setTextWrapWidth (int i);
}

