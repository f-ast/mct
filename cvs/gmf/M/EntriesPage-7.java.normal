package org.eclipse.gmf.internal.bridge.wizards.pages;

public class EntriesPage extends WizardPage {
    private class ChangePropertiesDialog extends Dialog {

        protected ChangePropertiesDialog (Shell parentShell, Object [] selection) {
        }

        protected Control createDialogArea (Composite parent);
        protected void createButtonsForButtonBar (Composite parent);
    }

    private class PageControl extends Composite {
        private Button asLinkButton = null;
        private Button asNodeButton = null;
        private Button changeDetailsButton = null;
        private Button removeButton = null;
        private Button restoreButton = null;
        private Composite composite = null;
        private Composite composite2 = null;
        private Composite detailsPart = null;

        private GridData newDetailGroupConstraint ();
        private GridData newDetailLabelConstraint ();
        private GridLayout newDetailGroupLayout (); private Group group = null;
        private Group group1 = null;
        private Group groupConstaints = null;
        private Group groupEdit = null;
        private Group groupStructure = null;
        private Group groupVisual = null;
        private Label containmentLabel;
        private Label diagramElementLabel = null;
        private Label initLabel = null;
        private Label linkMetaFeatureLabel;
        private Label metaElementLabel;
        private Label specLabel = null;
        private LinkMapping selectedLink;
        private List linksList = null;
        private List nodesList = null;
        private NodeReference selectedNode;
        private SelectionListener myListListener = new SelectionListener () {

            public void widgetDefaultSelected (SelectionEvent e);
            public void widgetSelected (SelectionEvent e);
        }

        ;
        private boolean isNodeInSelection;
        final private ILabelProvider myLabelProvider = new LabelProvider () {

            public String getText (Object element);
        }

        ;

        private void affix (Label l, ENamedElement el);
        private void createButtonsPane ();
        private void createComposite ();
        private void createConstraintsGroup ();
        private void createDetailsPart ();
        private void createEditGroup ();
        private void createLinksList ();
        private void createNodesList ();
        private void createStructureGroup ();
        private void createVisualGroup ();
        private void initialize ();
        private void populateLinksList ();
        private void populateNodesList ();
        private void refreshCommonDetails (MappingEntry selectedEntry);
        private void refreshDomainInitializer (MappingEntry selectedEntry);
        private void refreshDomainSpecialization (MappingEntry selectedEntry);
        private void refreshLinkDetails ();
        private void refreshNodeDetails ();
        public PageControl (Composite parent) {
        }

        public void populate ();
        void handleLinksListSelectionChange ();
        void handleNodesListSelectionChange ();
    }

    final private WizardInput myHolder;

    protected Mapping getMapInstance ();
    protected WizardInput getHolder ();
    public EntriesPage (WizardInput input) {
    }

    public void createControl (Composite parent);
    public void setVisible (boolean visible);
}

