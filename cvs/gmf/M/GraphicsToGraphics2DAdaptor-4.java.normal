package org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.graphics;

public class GraphicsToGraphics2DAdaptor extends Graphics implements DrawableRenderedImage {
    private BasicStroke stroke;
    private Graphics2D graphics2D;

    private Polygon createPolygon (PointList pointList); private Rectangle relativeClipRegion;

    private SWTGraphics getSWTGraphics (); private SWTGraphics swtGraphics;
    private Stack states = new Stack ();

    private boolean isFontStrikeout (Font f);
    private boolean isFontUnderlined (Font f); final private State appliedState = new State ();
    final private State currentState = new State ();
    private int transX = 0;
    private int transY = 0;
    private org.eclipse.swt.graphics.Rectangle viewBox;
    private static class State {
        public Color bgColor;
        public Color fgColor;
        public Font font;
        public boolean XorMode = false;
        public float [] lineDash = {3, 3};
        public int alpha;
        public int clipH = 0;
        public int clipW = 0;
        public int clipX = 0;
        public int clipY = 0;
        public int lineStyle = LINE_SOLID;
        public int lineWidth = 1;
        public int translateX = 0;
        public int translateY = 0;

        public void copyFrom (State state);
    }

    private void createSWTGraphics ();
    private void init ();
    private void initSVGGraphics (Graphics2D graphics);
    private void restoreState (State state);
    private void setClipAbsolute (int x, int y, int width, int height);
    private void setTranslation (int x, int y);
    protected Graphics2D getGraphics2D ();
    protected Point getTranslationOffset ();
    protected java.awt.Color getColor (Color toConvert);
    protected void checkState ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumRenderSize ();
    public Font getFont ();
    public FontMetrics getFontMetrics ();
    public GraphicsToGraphics2DAdaptor (Graphics2D graphics, Rectangle viewPort) {
    }

    public GraphicsToGraphics2DAdaptor (Graphics2D graphics, org.eclipse.swt.graphics.Rectangle viewPort) {
    }

    public Rectangle getClip (Rectangle rect);
    public RenderedImage drawRenderedImage (RenderedImage srcImage, Rectangle rect, RenderingListener listener);
    public boolean getXORMode ();
    public boolean shouldAllowDelayRender ();
    public int getAlpha ();
    public int getAntialias ();
    public int getLineStyle ();
    public int getLineWidth ();
    public void clipRect (Rectangle rect);
    public void dispose ();
    public void drawArc (int x, int y, int width, int height, int startAngle, int endAngle);
    public void drawFocus (int x, int y, int w, int h);
    public void drawImage (Image srcImage, int x1, int y1, int w1, int h1, int x2, int y2, int w2, int h2);
    public void drawImage (Image srcImage, int xpos, int ypos);
    public void drawLine (int x1, int y1, int x2, int y2);
    public void drawOval (int x, int y, int w, int h);
    public void drawPolygon (PointList pointList);
    public void drawPolyline (PointList pointList);
    public void drawRectangle (int x, int y, int w, int h);
    public void drawRoundRectangle (Rectangle rect, int arcWidth, int arcHeight);
    public void drawString (String s, int x, int y);
    public void drawText (String s, int x, int y);
    public void fillArc (int x, int y, int w, int h, int offset, int length);
    public void fillGradient (int x, int y, int w, int h, boolean vertical);
    public void fillOval (int x, int y, int w, int h);
    public void fillPolygon (PointList pointList);
    public void fillRectangle (int x, int y, int width, int height);
    public void fillRoundRectangle (Rectangle rect, int arcWidth, int arcHeight);
    public void fillString (String s, int x, int y);
    public void fillText (String s, int x, int y);
    public void popState ();
    public void pushState ();
    public void restoreState ();
    public void scale (double amount);
    public void setAlpha (int alpha);
    public void setAntialias (int value);
    public void setBackgroundColor (Color rgb);
    public void setClip (Rectangle rect);
    public void setFont (Font f);
    public void setForegroundColor (Color rgb);
    public void setLineDash (int dash []);
    public void setLineStyle (int style);
    public void setLineWidth (int width);
    public void setXORMode (boolean xorMode);
    public void translate (int dx, int dy);
}

