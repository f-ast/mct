package org.eclipse.gmf.runtime.emf.core.util;

public class CrossReferenceAdapter extends ECrossReferenceAdapter {
    private Map exports = new HashMap ();

    private Map getExportsMap (Resource resource);
    private Map getImportsMap (Resource resource); private Map imports = new HashMap ();

    private Set getReferencers (Collection references, EReference reference, EClass type); private boolean isProcessingNotification = false;
    private boolean resolve = true;
    final private static class Counter {

    }

    private void deregisterReference (final Resource referencer, final Resource referenced);
    private void deregisterReferences (final Resource referencer);
    private void registerReference (final Resource referencer, final Resource referenced);
    protected boolean resolve ();
    protected void exportAdded (Resource referenced, Resource referencer);
    protected void exportRemoved (Resource referenced, Resource referencer);
    protected void handleContainment (Notification notification);
    protected void importAdded (Resource referencer, Resource referenced);
    protected void importRemoved (Resource referencer, Resource referenced);
    protected void remove (Resource resource, EObject eObject);
    public Collection getInverseReferences (EObject eObject);
    public CrossReferenceAdapter () {
    }

    public CrossReferenceAdapter (boolean resolve) {
    }

    public Set getExports (Resource referenced);
    public Set getImports (Resource referencer);
    public Set getInverseReferencers (EObject referenced, EReference reference, EClass type);
    public Set getNonNavigableInverseReferencers (EObject referenced, EReference reference, EClass type);
    final public void notifyChanged (Notification notification);
    public static CrossReferenceAdapter getCrossReferenceAdapter (ResourceSet resourceSet);
    public static CrossReferenceAdapter getExistingCrossReferenceAdapter (Notifier notifier);
    public void selfAdapt (Notification notification);
    public void setTarget (Notifier target);
    public void unsetTarget (Notifier notifier);
}

