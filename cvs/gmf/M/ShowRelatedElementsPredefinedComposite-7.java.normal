package org.eclipse.gmf.runtime.common.ui.dialogs;

public class ShowRelatedElementsPredefinedComposite extends Composite {
    private static int PRESET_NAME_LENGTH = 256;

    private void setDetailsText (); protected Button delete;
    protected Button details;
    protected Button saveAs;
    protected IShowRelatedElementsWithDetails showDetails;
    protected InputDialog saveAsDialog = new InputDialog (Display.getDefault ().getActiveShell (), CommonUIMessages.ShowRelatedElementsPredefinedComposite_SaveAs_Title, CommonUIMessages.ShowRelatedElementsPredefinedComposite_ChooseName, StringStatics.BLANK, new IInputValidator () {

        public String isValid (String newText);
    }

    ) {

        protected Control createDialogArea (Composite parent);
    }

    ;
    protected List predefinedBox;
    protected SelectableElement rootElement;

    protected String [] convertPresetsToString (java.util.List presets);
    protected boolean containsSpecialCharacter (String text); protected boolean isDetails = false;
    final protected IDialogSettings dialogSettings = CommonUIPlugin.getDefault ().getDialogSettings ();
    protected int viewerWidth = 175;
    protected java.util.List predefined = new ArrayList ();
    protected java.util.List queries;

    protected java.util.List readPresets (String nameToIgnore); final protected static String DEFAULT_STRING = SPECIAL_OPENING + CommonUIMessages.ShowRelatedElementsPredefinedComposite_DefaultQuery + SPECIAL_CLOSING;
    final protected static String DIALOG_SETTINGS_KEY = "ShowRelatedElementsPresets";
    final protected static String SPECIAL_CLOSING = "]";
    final protected static String SPECIAL_OPENING = "[";

    protected void contributeComposite (Composite parent);
    protected void contributeToList ();
    protected void createContents ();
    protected void delete ();
    protected void detailsChanged ();
    protected void handlePredefinedBoxSelection ();
    protected void makePredefinedSettingsButtons (Composite buttons) {
        saveAs = new Button (buttons, SWT.PUSH);
        saveAs.setText (CommonUIMessages.ShowRelatedElementsPredefinedComposite_SaveAs);
        saveAs.addSelectionListener (new SelectionListener () {

            public void widgetDefaultSelected (SelectionEvent e);
            public void widgetSelected (SelectionEvent e);
        }

        );
        saveAs.setLayoutData (WindowUtil.makeButtonData (saveAs));
        delete = new Button (buttons, SWT.PUSH);
        delete.setText (CommonUIMessages.ShowRelatedElementsPredefinedComposite_Delete);
        delete.addSelectionListener (new SelectionListener () {

            public void widgetDefaultSelected (SelectionEvent e);
            public void widgetSelected (SelectionEvent e);
        }

        );
        delete.setLayoutData (WindowUtil.makeButtonData (delete));
    }
    protected void saveAs ();
    public ShowRelatedElementsPredefinedComposite (Composite parent, IShowRelatedElementsWithDetails sreWithDetails, SelectableElement root, java.util.List queriesList, int width, boolean detailsShown) {
    }

    public static int VIEWER_HEIGHT = 225;

    static {
        try {
            VIEWER_HEIGHT = Integer.parseInt (CommonUIMessages.ShowRelatedElementsDialog_VIEWER_HEIGHT);
        } catch (NumberFormatException e) {
            Trace.catching (CommonUIPlugin.getDefault (), CommonUIDebugOptions.EXCEPTIONS_CATCHING, CommonUIPlugin.getDefault ().getClass (), "NumberFormatException", e);
            Log.error (CommonUIPlugin.getDefault (), CommonUIStatusCodes.RESOURCE_FAILURE, "Failed to parse Show Related Elements Composite's localized size", e);
        }
    }

}

