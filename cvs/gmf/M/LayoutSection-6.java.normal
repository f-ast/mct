package org.eclipse.gmf.graphdef.editor.sheet;

public class LayoutSection extends AbstractPropertySection implements ChangeTracker, Listener {
    private Button myFlowLayoutForceSingle;
    private Button myFlowLayoutIsVertical;
    private Button myFlowLayoutMatchMinor;
    private Button myGridLayoutSameWidth;
    private Button myR1;
    private Button myR2;
    private Button myR3;
    private Button myR4;
    private Button myR5;
    private Button myR6;
    private Button myR7;
    private Combo myFlowLayoutMajAlign;
    private Combo myFlowLayoutMinAlign;
    private Composite myCustomLayoutDetails;
    private Group myBorderLayoutDetails;
    private Group myFlowLayoutAlign;
    private Group myFlowLayoutDetails;
    private Group myGridLayoutDetails;
    private Group myGridLayoutMargins;
    private Group myGridLayoutSpacing;
    private Group myLayoutKindRadios;

    private Layoutable getInput (); private Object myInput;

    private Object unwrap (Object element); private Spinner myBorderLayoutSpacingX;
    private Spinner myBorderLayoutSpacingY;
    private Spinner myFlowLayoutMajSpacing;
    private Spinner myFlowLayoutMinSpacing;
    private Spinner myGridLayoutColumns;
    private Spinner myGridLayoutMarginX;
    private Spinner myGridLayoutMarginY;
    private Spinner myGridLayoutSpacingX;
    private Spinner myGridLayoutSpacingY;
    private Text myCustomLayoutClass;
    private boolean myIsCommit;
    private boolean myIsRefresh;
    private org.eclipse.emf.common.notify.Adapter [] myModelListeners;

    private org.eclipse.swt.widgets.Group createGroup (org.eclipse.swt.widgets.Composite parent, String label);
    private org.eclipse.swt.widgets.Label createLabel (org.eclipse.swt.widgets.Composite parent, String label);
    private void attach () {
        myModelListeners = new org.eclipse.emf.common.notify.Adapter [] {new AttachAdapter (GMFGraphPackage.eINSTANCE.getLayoutable_Layout (), new ChangeTracker () {

            public void modelChanged (org.eclipse.emf.common.notify.Notification n);
        }

        , new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getFlowLayout_Vertical (), GMFGraphPackage.eINSTANCE.getFlowLayout_MatchMinorSize (), GMFGraphPackage.eINSTANCE.getFlowLayout_ForceSingleLine (), GMFGraphPackage.eINSTANCE.getFlowLayout_MajorSpacing (), GMFGraphPackage.eINSTANCE.getFlowLayout_MinorSpacing (), GMFGraphPackage.eINSTANCE.getGridLayout_NumColumns (), GMFGraphPackage.eINSTANCE.getGridLayout_EqualWidth (), GMFGraphPackage.eINSTANCE.getCustomClass_QualifiedClassName (), GMFGraphPackage.eINSTANCE.getFlowLayout_MinorAlignment (), GMFGraphPackage.eINSTANCE.getFlowLayout_MajorAlignment ()), new AttachAdapter (GMFGraphPackage.eINSTANCE.getBorderLayout_Spacing (), new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getDimension_Dx (), GMFGraphPackage.eINSTANCE.getDimension_Dy ())), new AttachAdapter (GMFGraphPackage.eINSTANCE.getGridLayout_Margins (), new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getDimension_Dx (), GMFGraphPackage.eINSTANCE.getDimension_Dy ())), new AttachAdapter (
          GMFGraphPackage.eINSTANCE.getGridLayout_Spacing (), new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getDimension_Dx (), GMFGraphPackage.eINSTANCE.getDimension_Dy ())))};
        getInput ().eAdapters ().addAll (java.util.Arrays.asList (myModelListeners));
    }
    private void detach ();
    private void markDirty ();
    protected void applyChanges ();
    protected void commit ();
    protected void discardChanges ();
    public void aboutToBeHidden ();
    public void createControls (Composite parent, TabbedPropertySheetPage page);
    public void handleEvent (Event event);
    public void modelChanged (Notification msg);
    public void refresh ();
    public void setInput (IWorkbenchPart part, ISelection selection);
}

