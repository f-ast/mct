package org.eclipse.gmf.runtime.diagram.core;

public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static DiagramEditingDomainFactory instance = new DiagramEditingDomainFactory ();
    private static class DiagramEventBrokerCommand extends AbstractCommand implements ConditionalRedoCommand {

        protected boolean prepare ();
        public boolean canRedo ();
        public boolean canUndo ();
        final public void execute ();
        final public void redo ();
        final public void undo ();
    }

    protected static class DiagramEditingDomain extends TransactionalEditingDomainImpl {
        private DiagramEventBroker deb = null;
        private InternalTransaction originatingTransaction = null;
        private ResourceSetListener debWrapper = null;

        protected void postcommit (InternalTransaction tx);
        public DiagramEditingDomain (AdapterFactory adapterFactory) {
        }

        public DiagramEditingDomain (AdapterFactory adapterFactory, ResourceSet resourceSet) {
        }

        public DiagramEditingDomain (AdapterFactory adapterFactory, TransactionalCommandStack stack) {
        }

        public DiagramEditingDomain (AdapterFactory adapterFactory, TransactionalCommandStack stack, ResourceSet resourceSet) {
        }

        public void addResourceSetListener (ResourceSetListener l);
        public void broadcastUnbatched (Notification notification);
        public void precommit (InternalTransaction tx) throws RollbackException;
        public void removeResourceSetListener (ResourceSetListener l);
    }

    protected void configure (TransactionalEditingDomain domain);
    public TransactionalEditingDomain createEditingDomain ();
    public TransactionalEditingDomain createEditingDomain (IOperationHistory history);
    public TransactionalEditingDomain createEditingDomain (ResourceSet rset);
    public TransactionalEditingDomain createEditingDomain (ResourceSet rset, IOperationHistory history);
    public static WorkspaceEditingDomainFactory getInstance (); final static TriggerCommand NOOP_TRIGGER = new TriggerCommand (Collections.singletonList (new AbstractCommand () {

        protected boolean prepare ();
        public boolean canUndo ();
        public void execute ();
        public void redo ();
        public void undo ();
    }

    ));

}

