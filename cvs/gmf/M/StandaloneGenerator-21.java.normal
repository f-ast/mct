package org.eclipse.gmf.graphdef.codegen;

public class StandaloneGenerator extends GeneratorBase {

    private String getPackageName ();
    private String visitFigure (Figure figure) throws InterruptedException; private boolean mySkipPluginStructire;
    final private Map < String, Figure > myCallbackFigures = new LinkedHashMap < String, Figure > ();
    final private StandaloneEmitters myAuxiliaryGenerators;
    final private TextEmitter myFigureGenerator;

    private static String composeFQN (String packageName, String className);
    private static String composePluginActivatorClassFQN (Config config);
    private void generateTopLevelFigures () throws InterruptedException; protected Processor myProcessor;

    protected TextMerger createMergeService (); final protected Config myArgs;

    protected void customRun () throws InterruptedException, UnexpectedBehaviourException;
    protected void generatePluginActivator () throws InterruptedException, UnexpectedBehaviourException;
    protected void generatePluginStructure () throws InterruptedException, UnexpectedBehaviourException;
    protected void setupProgressMonitor ();
    public StandaloneGenerator (Processor p, Config config) {
    }

    public StandaloneGenerator (Processor p, Config config, URL [] dynamicTemplates) {
    }

    public interface Config {

        public MapModeCodeGenStrategy getMapMode ();
        public String getMainPackageName ();
        public String getPluginActivatorClassName ();
        public String getPluginActivatorPackageName ();
        public String getPluginFriendlyName ();
        public String getPluginID ();
        public String getPluginProviderName ();
        public String getRuntimeToken ();
    }

    public interface ProcessorCallback {

        public String visitFigure (Figure f) throws InterruptedException;
    }

    abstract public static class Processor {

        public String [] getRequiredBundles (FigureQualifiedNameSwitch fqnSwitch);
        abstract public void go (ProcessorCallback callback, Config config) throws InterruptedException;
    }

    public static class ConfigImpl implements Config {

        public ConfigImpl (String pluginId, String mainPackageName) {
        }

        public ConfigImpl (String pluginId, String mainPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken) {
        }

        public ConfigImpl (String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken) {
        }

        public MapModeCodeGenStrategy getMapMode ();
        public String getMainPackageName ();
        public String getPluginActivatorClassName ();
        public String getPluginActivatorPackageName ();
        public String getPluginFriendlyName ();
        public String getPluginID ();
        public String getPluginProviderName ();
        public String getRuntimeToken ();
    }

    public void setSkipPluginStructure (boolean skipManifest);
}

