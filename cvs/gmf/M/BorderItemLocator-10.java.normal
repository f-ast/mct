package org.eclipse.gmf.runtime.diagram.ui.figures;

public class BorderItemLocator implements IBorderItemLocator {

    protected IFigure getConflictingBorderItemFigure (Point recommendedLocation, IFigure targetBorderItem);
    protected Point getAbsoluteToBorder (Point ptRelativeOffset);
    protected Point getPreferredLocation (IFigure borderItem);
    protected Point getPreferredLocation (int side, IFigure borderItem);
    protected Point locateOnBorder (Point suggestedLocation, int suggestedSide, int circuitCount, IFigure borderItem);
    protected Point locateOnParent (Point suggestedLocation, int suggestedSide, IFigure borderItem);
    protected Rectangle getConstraint ();
    protected Rectangle getParentBorder ();
    final protected Dimension getSize (IFigure borderItem);
    protected int calculateNextNonConflictingPosition (int currentPosition, int interval, int currentSide, IFigure borderItem);
    public BorderItemLocator (IFigure borderItem, IFigure parentFigure, Rectangle constraint) {
    }

    public BorderItemLocator (IFigure parentFigure) {
    }

    public BorderItemLocator (IFigure parentFigure, int preferredSide) {
    }

    public Dimension getBorderItemOffset ();
    public IFigure getParentFigure ();
    public Rectangle getValidLocation (Rectangle proposedLocation, IFigure borderItem);
    public int getCurrentSideOfParent ();
    public int getPreferredSideOfParent ();
    public static int findClosestSideOfParent (Rectangle proposedLocation, Rectangle parentBorder);
    public void relocate (IFigure borderItem);
    public void setBorderItemOffset (Dimension borderItemOffset);
    public void setConstraint (Rectangle theConstraint);
    public void setCurrentSideOfParent (int side);
    public void setPreferredSideOfParent (int preferredSide);
}

