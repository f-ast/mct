package org.eclipse.gmf.internal.validate;

public class AnnotatedDefinitionValidator extends AbstractValidator implements EValidator {

    private ContextProvider createContextProvider (String ctxExpression, EClass contextClass, Map < Object, Object > context);
    private ValueSpecDef createDefinition (DefData data);
    private static ContextData getCachedCtxBinding (EModelElement modelElement, Map < Object, Object > context);
    private static IStatus getTypeConformancyStatus (EObject typeProviderContext, TypeProvider leftType, IModelExpression expression);
    private static Map < String, TypeProvider > getEnvProvider (EStructuralFeature contextBindFeature, Map < Object, Object > context);
    private static StringValProvider createMissingBodyProvider (final String elementLabel);
    private static TypeProvider getTypeInfo (EModelElement typeAnnotationSource, EClass resolutionContext, DiagnosticChain diagnostics, Map < Object, Object > validationContext);
    private static ValueSpecDef findDefinition (EClass eClass, Map < Object, Object > context);
    private static boolean checkAndReportProblems (IDefElementProvider defElementProvider, EObject destination, DiagnosticChain diagnostics); private static class ContextData {

        public ContextData (ContextProvider contextProvider, Map < String, TypeProvider > environment) {
            this.contextClass = contextProvider;
            this.environment = environment;
        }

    }

    private static class DefData {

        public DefData () {
        }

    }

    private static void inheritDefinition (DefData data, EClass valueSpecEClass, ValueSpecDef superDef);
    private static void registerCtxBinding (EStructuralFeature contextDefOwner, ContextData contextData, Map < Object, Object > context);
    private static void registerDefinition (EClass eClass, ValueSpecDef definition, Map < Object, Object > context);
    protected boolean validateMetaModel (EModelElement modelElement, DiagnosticChain diagnostics, Map < Object, Object > context);
    protected boolean validateModel (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public AnnotatedDefinitionValidator () {
    }

    public ContextData getContextBinding (EObject eObject, EObject [] contextHolder, Map < Object, Object > context);
    public ValueSpecDef getDefinition (EClass metaClass, EObject modelElement, DiagnosticChain diagnostics, DefData data, Map < Object, Object > context);
    public ValueSpecDef getDefinition (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public static ContextProvider getContextClass (EStructuralFeature bindFeature, final Map < Object, Object > validationContext);
}

