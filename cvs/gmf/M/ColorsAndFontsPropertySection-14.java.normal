package org.eclipse.gmf.runtime.diagram.ui.properties.sections.appearance;

public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    private CCombo fontSizeCombo;
    private CoolBar coolBar;
    private ToolItem fontBoldButton;
    private ToolItem fontItalicButton;
    protected CCombo fontFamilyCombo;
    protected Group colorsAndFontsGroup;

    protected Group createFontsAndColorsGroups (Composite parent);
    protected Iterator getInputIterator ();
    protected RGB changeColor (SelectionEvent event, ToolItem button, String preferenceId, final String propertyId, String commandName, ImageDescriptor imageDescriptor); protected RGB fillColor = null;
    protected RGB fontColor;
    protected RGB lineColor;

    protected ToolBar createFontsGroup (Composite parent); protected ToolItem fillColorButton;
    protected ToolItem fontColorButton;
    protected ToolItem lineColorButton;
    protected static class ColorOverlayImageDescriptor extends CompositeImageDescriptor {

        protected Point getSize ();
        protected void drawCompositeImage (int width, int height);
        public ColorOverlayImageDescriptor (ImageData basicImgData, RGB rgb) {
        }

    }

    final protected static RGB DEFAULT_PREF_COLOR = new RGB (0, 0, 0);
    final protected static String FONTS_AND_COLORS_LABEL = DiagramUIPropertiesMessages.FontAndColor_nameLabel;
    final protected static String FONT_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.FontColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String FONT_COMMAND_NAME = DiagramUIPropertiesMessages.Font_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String LINE_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.LineColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;

    protected void changeFontColor (SelectionEvent event);
    protected void changeLineColor (SelectionEvent event);
    protected void initializeControls (Composite parent);
    protected void updateColorCache ();
    protected void updateFontBold ();
    protected void updateFontFamily ();
    protected void updateFontItalic ();
    protected void updateFontSize ();
    public void refresh ();
    public void setInput (IWorkbenchPart part, ISelection selection);
    public void update (final Notification notification, final EObject element); final protected static String FILL_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.FillColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;

}

