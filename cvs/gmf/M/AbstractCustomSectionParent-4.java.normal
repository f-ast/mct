package org.eclipse.gmf.graphdef.editor.sheet;

abstract public class AbstractCustomSectionParent extends AbstractModelerPropertySection {

    private CCombo createCombo (Composite parent, String label, Control leftControl, Control topControl, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost); private Collection mySavedSelection = new ArrayList ();

    private DateTime createDate (Composite parent, String label, Control leftControl, Control topControl, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost);
    private DateTime createTime (Composite parent, String label, Control leftControl, Control topControl, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost); private IExpansionListener myExpansionListener;
    private ModelUpdater myListener;
    private TabbedPropertySheetPage myTabbedPropertySheetPage;
    private boolean areControlsCreated;

    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl);
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, int leftAlignment);
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl, boolean lowermost);
    protected Button createRadio (Composite parent, Control topControl, boolean lowermost, Image image);
    protected Button createRadio (Composite parent, Image image, String label, Control leftControl, int leftAlignment, Control topControl, int topAlignment, Control rightControl, int rightAlignment, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    protected Button createRadio (Composite parent, Image image, String label, int leftAlignment, int rightAlignment, Control topControl, int topAlignment, boolean lowermost);
    protected Button createRadio (Composite parent, Image image, String label, int leftAlignment, int rightAlignment, int topAlignment, boolean lowermost);
    protected Button createRadio (Composite parent, String label, Control topControl, boolean lowermost);
    protected Button createRadio (Composite parent, String label, Control topControl, int rightAlignment);
    protected CLabel createLabelWidget (Composite parent, String labelText, Control leftWidget);
    protected CLabel createLabelWidget (Composite parent, String labelText, Control leftWidget, Control topWidget);
    protected Composite createFlatFormComposite (Composite parent, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost, int leftPosition, boolean noData);
    protected Composite createFlatFormComposite (Composite parent, int leftPosition);
    protected Composite createFlatFormComposite (Composite parent, int leftPosition, boolean noData);
    protected EObject getEObject ();
    protected ExpandableComposite createExpandableComposite (Composite parent, String label, Control leftControl, Control topControl, boolean lowermost, boolean rightmost);
    protected ExpandableComposite createLayoutParamsExpandableComposite (Composite parent, String label, Control topControl, boolean rightmost);
    protected Group createGroup (Composite parent, String label);
    protected Group createGroup (Composite parent, String label, Control leftComposite, Control topComposite);
    protected Group createGroup (Composite parent, String label, Control leftComposite, Control topComposite, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost, boolean noData);
    protected Group createGroup (Composite parent, String label, Control leftComposite, Control topComposite, boolean noData);
    protected Group createGroup (Composite parent, String label, boolean noData);
    protected IExpansionListener getExpansionListener (final Composite parent);
    protected Layout createStandardFormLayout ();
    protected ModelUpdater getListener ();
    protected Object transformSelection (Object selected);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftControl, Control topControl, boolean lowermost, boolean rightmost, boolean horizontalNotVertical, int min, int max, int inc, int pageInc);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftWidget);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftWidget, Control topWidget, boolean rightlast, boolean horizontalNotVertical);
    protected Text createExtendedText (Composite parent, String label, Control leftControl, Control topControl, String initialText, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost);
    protected Text createText (Composite parent, String label, Control leftControl, Control topControl, String initialText, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost);
    protected Text createText (Composite parent, String label, Control leftWidget, Control topWidget, String initialText);
    abstract protected ModelUpdater createModelUpdater ();
    final protected Collection getSavedSelection ();
    protected static FormData createFillFormData (Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost, boolean fillHorizonral, boolean fillVertical);
    protected static FormData createFormData (Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    protected static FormData createFormData (Control leftControl, Control topControl, Control rightControl, boolean lowermost);
    protected static FormData createFormData (Control leftControl, Control topControl, boolean lowermost); final protected static String EMPTY_STRING = "";

    protected void relayoutExpandBar (Composite expandBar);
    public Button createCheckboxButton (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public Button createRadioButton (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public CCombo createComboBox (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public CLabel createLabelWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public Composite createCompositeWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public Composite createMainWidget (Composite parent);
    public DateTime createDateWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public DateTime createTimeWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public ExpandableComposite createExpandableComposite (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public Group createGroupWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public Spinner createSpinnerWidget (Composite parent, String label, int min, int max, int inc, int pageInc, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public Text createExtendedTextWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public Text createTextWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    abstract public void doCreateControls (Composite parent, TabbedPropertySheetPage tabbedPropertySheetPage);
    abstract public void doDispose ();
    public boolean shouldUseExtraSpace (); abstract public static class ModelUpdater implements ModifyListener, SelectionListener {

        abstract public void applyChangesFrom (Widget widget);
        public boolean isNonUserChange ();
        public void finishNonUserChange ();
        public void modifyText (ModifyEvent e);
        public void startListeningTo (Button button);
        public void startListeningTo (CCombo combo);
        public void startListeningTo (DateTime dateTime);
        public void startListeningTo (Spinner spinner);
        public void startListeningTo (Text text);
        public void startNonUserChange ();
        public void stopListeningTo (Button button);
        public void stopListeningTo (CCombo combo);
        public void stopListeningTo (DateTime dateTime);
        public void stopListeningTo (Spinner spinner);
        public void stopListeningTo (Text text);
        public void widgetDefaultSelected (SelectionEvent e);
        public void widgetSelected (SelectionEvent e);
    }

    public void createControls (Composite parent, TabbedPropertySheetPage tabbedPropertySheetPage);
    public void dispose ();
    public void setInput (IWorkbenchPart part, ISelection selection);
}

