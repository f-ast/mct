package org.eclipse.gmf.runtime.diagram.ui.dialogs.sortfilter;

public class SortFilterPage extends PropertyPage {

    boolean isFiltering (); class ButtonSelectionAdapter extends SelectionAdapter {

        public void widgetSelected (SelectionEvent event);
    }

    class HeaderSelectionListener implements SelectionListener {

        public HeaderSelectionListener (SortFilterViewerSorter sorter, TableViewer tableViewer) {
        }

        public SortFilterViewerSorter getSorter ();
        public void widgetDefaultSelected (SelectionEvent e);
        public void widgetSelected (SelectionEvent e);
    }

    private Button addAllTo = null;
    private Button addTo = null;
    private Button removeAllFrom = null;
    private Button removeFrom = null;
    private ButtonSelectionAdapter buttonSelectionAdapter = new ButtonSelectionAdapter ();
    private Filtering _filtering = Filtering.NONE_LITERAL;
    private GraphicalEditPart editPart = null;
    private LabelProvider labelProvider = null;
    private List _filteredObjects = Collections.EMPTY_LIST;
    private List _filteringKeys = Collections.EMPTY_LIST;
    private List _shownAsAlternateViewItems = Collections.EMPTY_LIST;
    private List _sortedObjects = Collections.EMPTY_LIST;
    private List baseElements = null;
    private List collectionColumns = null;
    private List elementCollection = null;
    private Map _sortingKeys = Collections.EMPTY_MAP;
    private Map filterMap = null;
    private Sorting _sorting = Sorting.NONE_LITERAL;
    private SortingDirection _sortingDirection = SortingDirection.ASCENDING_LITERAL;
    private String [] filterStrings = null;

    private String [] getColumnProperties ();
    private String [] getFilterList (); private String _sortColumn;
    private String filterAppliesTo = null;
    private String pageType;
    private TableViewer tableViewer = null;
    private ToolItem moveDownToolItem = null;
    private ToolItem moveUpToolItem = null;

    private boolean compareFilters (String [] other); private boolean filterChanged = false;
    private boolean sortChanged = false;
    final private String ADD_ALL_LABEL = "<<";
    final private String ADD_TO_LABEL = "<";
    final private String REMOVE_ALL_LABEL = ">>";
    final private String REMOVE_FROM_LABEL = ">";
    final private int ADD_ALL_TO_ID = 2;
    final private int ADD_TO_ID = 0;
    final private int REMOVE_ALL_FROM_ID = 3;
    final private int REMOVE_FROM_ID = 1;
    private int LIST_HEIGHT = 8;

    private int findColumnIndexFromProperty (String property); private org.eclipse.swt.widgets.List filterList = null;
    private org.eclipse.swt.widgets.List filters = null;

    private void buttonPressed (int buttonId);
    private void createFilterLists (Composite ancestor);
    private void createTable (Composite parent);
    private void createToolBar (Composite ancestor);
    private void handleSelection ();
    private void initFilterLists ();
    private void moveDownElements ();
    private void moveUpElements ();
    private void tokenizeFilterProperty ();
    private void tokenizeSortProperty ();
    protected Control createContents (Composite ancestor);
    protected GridData makeArrowButtonGridData (Control control);
    protected void performApply ();
    protected void performDefaults ();
    public Command getApplyCommand ();
    public Command getCommand ();
    public SortFilterPage (String pageType, GraphicalEditPart editPart, List collectionColumns, SortFilterLabelProvider labelProvider) {
    }

    public class SortFilterCellModifier implements ICellModifier {

        public Object getValue (Object element, String property);
        public boolean canModify (Object element, String property);
        public void modify (Object element, String property, Object value);
    }

    final public static String CHILD_PAGE = "child_page";
    final public static String ROOT_PAGE = "root_page";

    public void setContents (List sortFilterElements, List hiddenContents);
    public void setFilter (Map filterMap, String property);
    public void setInput (List sortFilterElements); final private static String MOVE_DOWN_TOOL_TIP = DiagramUIMessages.SortFilter_moveItemDown;
    final private static String MOVE_UP_TOOL_TIP = DiagramUIMessages.SortFilter_moveItemUp;
    final private static String ADD_ALL = DiagramUIMessages.SortFilter_addAll;
    final private static String ADD_TO = DiagramUIMessages.SortFilter_addTo;
    final private static String FILTER_ITEMS_CONTAINING = DiagramUIMessages.SortFilter_filterItemsListLabel;
    final private static String FILTER_ITEMS_LIST = DiagramUIMessages.SortFilter_fitlerListLabel;
    final private static String REMOVE_ALL = DiagramUIMessages.SortFilter_removeAll;
    final private static String REMOVE_FROM = DiagramUIMessages.SortFilter_removeFrom;

    void filterItemsFromList ();
    void setCriteria (String [] criteriaList);
    void setFilterCriteria (String [] filterCriteriaList);
}

