package org.eclipse.gmf.runtime.diagram.ui.tools;

public class TextDirectEditManager extends DirectEditManager {
    private CellEditorActionHandler actionHandler;
    private CellEditorLocator locator;
    private Color proposalPopupBackgroundColor = null;
    private Color proposalPopupForegroundColor = null;

    private Dimension getTextExtents (String s, Font font, IMapMode mm);
    private Font getZoomLevelFont (Font actualFont, Display display); private Font zoomLevelFont = null;
    private IAction copy, cut, delete, find, paste, redo, selectAll, undo;
    private IActionBars actionBars;
    private List cachedFontDescriptors = new ArrayList ();
    private StringBuffer initialString = new StringBuffer ();
    private boolean committed = false;
    private boolean listenersAttached = true;

    private int getLineCount (String s); private static class LabelCellEditorLocator implements CellEditorLocator {

        public Label getLabel ();
        public LabelCellEditorLocator (Label label) {
        }

        public void relocate (CellEditor celleditor);
    }

    private void restoreSavedActions (IActionBars _actionBars);
    private void saveCurrentActions (IActionBars _actionBars);
    private void sendClickToCellEditor (final Point location);
    private void sendMouseClick (final Point location);
    protected Font getScaledFont (IFigure label);
    protected ResourceManager getResourceManager ();
    protected void bringDown ();
    protected void commit ();
    protected void initCellEditor ();
    protected void setCellEditor (CellEditor editor);
    protected void unhookListeners ();
    public TextDirectEditManager (GraphicalEditPart source, Class editorType, CellEditorLocator locator) {
    }

    public TextDirectEditManager (ITextAwareEditPart source) {
    }

    public static CellEditorLocator getTextCellEditorLocator (ITextAwareEditPart source);
    public static Class getTextCellEditorClass (GraphicalEditPart source);
    public void setEditText (String toEdit);
    public void setLocator (CellEditorLocator locator);
    public void show ();
    public void show (Point location);
    public void show (char initialChar);
    public void showFeedback (); private static class TextCellEditorLocator implements CellEditorLocator {

        public TextCellEditorLocator (WrapLabel wrapLabel) {
        }

        public WrapLabel getWrapLabel ();
        public void relocate (CellEditor celleditor);
    }

}

