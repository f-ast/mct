package org.eclipse.gmf.graphdef.codegen;

public class StandaloneGenerator extends GeneratorBase {
    private DelegateImportManager myMapModeImportHack;
    private Processor myProcessor;

    private String getPackageName ();
    private String visitFigure (Figure figure) throws InterruptedException; private boolean mySkipPluginStructire;
    final private Config myArgs;
    final private FigureGenerator myFigureGenerator;
    final private FigureQualifiedNameSwitch myFigureNameSwitch;
    final private StandaloneEmitters myAuxiliaryGenerators;

    private static String composeFQN (String packageName, String className);
    private static String composePluginActivatorClassFQN (Config config);
    private void generatePluginActivator () throws InterruptedException, UnexpectedBehaviourException;
    private void generatePluginStructure () throws InterruptedException, UnexpectedBehaviourException;
    private void generateTopLevelFigures () throws InterruptedException;
    protected URL getJMergeControlFile ();
    protected void customRun () throws InterruptedException, UnexpectedBehaviourException;
    protected void setupProgressMonitor ();
    public StandaloneGenerator (Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch) {
    }

    public interface Config {

        public String getMainPackageName ();
        public String getPluginActivatorClassName ();
        public String getPluginActivatorPackageName ();
        public String getPluginFriendlyName ();
        public String getPluginID ();
        public String getPluginProviderName ();
        public boolean needsMapMode ();
    }

    public interface ProcessorCallback {

        public String visitFigure (Figure f) throws InterruptedException;
    }

    abstract public static class Processor {

        public String [] getRequiredBundles (FigureQualifiedNameSwitch fqnSwitch);
        abstract public void go (ProcessorCallback callback, Config config) throws InterruptedException;
    }

    public static class ConfigImpl implements Config {

        public ConfigImpl (String pluginId, String mainPackageName) {
        }

        public ConfigImpl (String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, boolean needsMapMode) {
        }

        public ConfigImpl (String pluginId, String mainPackageName, boolean useMapMode) {
        }

        public String getMainPackageName ();
        public String getPluginActivatorClassName ();
        public String getPluginActivatorPackageName ();
        public String getPluginFriendlyName ();
        public String getPluginID ();
        public String getPluginProviderName ();
        public boolean needsMapMode ();
    }

    public void setSkipPluginStructure (boolean skipManifest);
}

