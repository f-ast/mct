package org.eclipse.gmf.internal.xpand.build;

public class OawBuilder extends IncrementalProjectBuilder implements RootManager.IRootChangeListener {
    private RootManager myRootManager;
    private WorkspaceModelRegistry modelRegistry;

    private WorkspaceResourceManager getResourceManager (IFile file);
    private boolean haveRootsChangedSinceLastBuild ();
    private boolean isFileOfInterest (IFile file); private boolean myRootsChanged = true;
    private class XpandResourceVisitor implements IResourceDeltaVisitor, IResourceVisitor {

        public XpandResourceVisitor (final IProgressMonitor monitor) {
        }

        public boolean visit (final IResource resource);
        public boolean visit (final IResourceDelta delta) throws CoreException;
    }

    final private Map < XpandResource, IFile > xpandResourcesToAnalyze = new HashMap < XpandResource, IFile > ();
    final private Map < XtendResource, IFile > xtendResourcesToAnalyze = new HashMap < XtendResource, IFile > ();

    private static boolean isXpand (final IFile resource);
    private static boolean isXtend (final IFile resource);
    private static void updateMarkers (IFile resource, ErrorLocationInfo [] parsingErrors);
    private static void updateMarkers (IFile resource, Set < AnalysationIssue > issues);
    private void checkCanceled (final IProgressMonitor monitor);
    private void doBuild (int kind, Map < ?, ? > args, IProgressMonitor monitor) throws CoreException;
    protected IProject [] build (final int kind, final Map args, final IProgressMonitor monitor) throws CoreException;
    protected void fullBuild (final IProgressMonitor monitor) throws CoreException;
    protected void incrementalBuild (final IResourceDelta projectDelta, final Collection < IResourceDelta > referencedProjectDeltas, final IProgressMonitor monitor) throws CoreException;
    protected void startupOnInitialize ();
    final public static String getBUILDER_ID ();
    public void handleRemovement (final IFile resource);
    public void rootsChanged (RootManager rootManager);
    void reloadResource (final IFile resource);
}

