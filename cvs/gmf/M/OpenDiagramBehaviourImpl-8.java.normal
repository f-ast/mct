package org.eclipse.gmf.codegen.gmfgen.impl;

public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {

    protected EClass eStaticClass ();
    protected OpenDiagramBehaviourImpl () {
    }

    protected String diagramKind = DIAGRAM_KIND_EDEFAULT;
    protected String editPolicyClassName = EDIT_POLICY_CLASS_NAME_EDEFAULT;
    protected String editorID = EDITOR_ID_EDEFAULT;
    protected boolean openAsEclipseEditor = OPEN_AS_ECLIPSE_EDITOR_EDEFAULT;
    final protected static String DIAGRAM_KIND_EDEFAULT = null;
    final protected static String EDITOR_ID_EDEFAULT = null;
    final protected static String EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    final protected static boolean OPEN_AS_ECLIPSE_EDITOR_EDEFAULT = true;

    public GenCommonBase getSubject ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String getDiagramKind ();
    public String getEditPolicyClassName ();
    public String getEditPolicyClassNameGen ();
    public String getEditPolicyQualifiedClassName ();
    public String getEditorID ();
    public String toString ();
    public boolean eIsSet (int featureID);
    public boolean isOpenAsEclipseEditor ();
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setDiagramKind (String newDiagramKind);
    public void setEditPolicyClassName (String newEditPolicyClassName);
    public void setEditorID (String newEditorID);
    public void setOpenAsEclipseEditor (boolean newOpenAsEclipseEditor);
}

