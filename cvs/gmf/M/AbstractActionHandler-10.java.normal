package org.eclipse.gmf.runtime.common.ui.action;

abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
    ;
    private IPartListener partListener;
    private IPartSelector partSelector;
    private IWorkbenchPage workbenchPage;
    private IWorkbenchPart workbenchPart;
    private boolean disposed;
    private boolean setup;

    protected AbstractActionHandler (IWorkbenchPart workbenchPart) {
    }

    protected AbstractActionHandler (final IWorkbenchPage workbenchPage) {
    }

    protected ActionManager getActionManager ();
    protected IOperationHistory getOperationHistory ();
    protected IPartListener getPartListener ();
    protected ISelection getSelection ();
    protected IStructuredSelection getStructuredSelection ();
    protected IUndoContext getUndoContext ();
    protected IWorkbenchPage getWorkbenchPage ();
    abstract protected void doRun (IProgressMonitor progressMonitor);
    protected boolean contributedToPart (IWorkbenchPart part);
    protected boolean isOperationHistoryListener ();
    protected boolean isPropertyListener ();
    protected boolean isSelectionListener ();
    protected boolean needsSetup ();
    final protected IWorkbenchPart getWorkbenchPart ();
    protected void handle (Exception exception);
    protected void openErrorDialog (final IStatus status);
    protected void setDisposed (boolean b);
    protected void setSetup (boolean setup);
    protected void setWorkbenchPart (IWorkbenchPart workbenchPart);
    public String getLabel ();
    public WorkIndicatorType getWorkIndicatorType ();
    public boolean isDisposed ();
    public boolean isRunnable ();
    public boolean isSetup ();
    public boolean setup ();
    final public void selectionChanged (SelectionChangedEvent event);
    final public void setPartSelector (IPartSelector partSelector);
    public void dispose ();
    public void historyNotification (OperationHistoryEvent event);
    public void init ();
    public void propertyChanged (Object source, int propId);
    public void run ();
    public void run (IProgressMonitor progressMonitor);
    public void runWithEvent (Event event);
}

