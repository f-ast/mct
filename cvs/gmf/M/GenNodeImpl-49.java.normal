package org.eclipse.gmf.codegen.gmfgen.impl;

abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {

    protected EClass eStaticClass (); protected EList < GenCompartment > compartments = null;
    protected EList < GenNodeLabel > labels = null;

    protected GenNodeImpl () {
    }

    protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
    protected String graphicalNodeEditPolicyClassName = GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    protected String primaryDragEditPolicyQualifiedClassName = PRIMARY_DRAG_EDIT_POLICY_QUALIFIED_CLASS_NAME_EDEFAULT;
    protected TypeModelFacet modelFacet = null;
    final protected static String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
    final protected static String GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    final protected static String PRIMARY_DRAG_EDIT_POLICY_QUALIFIED_CLASS_NAME_EDEFAULT = null;

    public EList < GenCompartment > getCompartments ();
    public EList < GenLink > getReorientedIncomingLinks ();
    public EList < GenNodeLabel > getLabels ();
    public GenClass getDomainMetaClass ();
    public NotificationChain basicSetModelFacet (TypeModelFacet newModelFacet, NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String getClassNamePrefix ();
    public String getCreateCommandClassName ();
    public String getCreateCommandClassNameGen ();
    public String getCreateCommandQualifiedClassName ();
    public String getGraphicalNodeEditPolicyClassName ();
    public String getGraphicalNodeEditPolicyClassNameGen ();
    public String getGraphicalNodeEditPolicyQualifiedClassName ();
    public String getPrimaryDragEditPolicyQualifiedClassName ();
    public String toString ();
    public TypeModelFacet getModelFacet ();
    public boolean eIsSet (int featureID);
    public boolean isSansDomain ();
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setCreateCommandClassName (String newCreateCommandClassName);
    public void setGraphicalNodeEditPolicyClassName (String newGraphicalNodeEditPolicyClassName);
    public void setModelFacet (TypeModelFacet newModelFacet);
    public void setPrimaryDragEditPolicyQualifiedClassName (String newPrimaryDragEditPolicyQualifiedClassName);
}

