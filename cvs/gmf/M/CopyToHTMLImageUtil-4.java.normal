package org.eclipse.gmf.runtime.diagram.ui.render.util;

public class CopyToHTMLImageUtil extends CopyToImageUtil {

    private ExportInfo copyToImageAndReturnInfo (DiagramEditPart diagramEP, List selection, IPath destination, ImageFileFormat format, IProgressMonitor monitor) throws CoreException; private HashMap < ImageFileFormat, Dimension > imageFormatToTileSizeMap = null;

    private HashMap < Point, LineSeg > getMapOfLineSegments (Point startPoint, Point endPoint, Dimension tileSize, HashSet < Point > cells);
    private IStatus createHTMLFileForTiledImage (IPath htmlFileLocation, String fileName, String fileExtension, int numRows, int numColumns);
    private List < List < List < PartPositionInfo > > > createTilesPartsInfoList (ExportInfo exportInfo, List partsInfo, ImageFileFormat format);
    private List < List < List < PartPositionInfo > > > initializeTilesPartsInfoList (int rows, int columns);
    private List < Point > connectLineSegmentsEndsViaCellEdges (Dimension cellSize, LineSeg lineSeg1, LineSeg lineSeg2);
    private List < Point > createCellPolyline (Dimension cellSize, List < LineSeg > segments);
    private List < Point > createClockwiseListOfCellVertices (Dimension cellSize);
    private Point exportImage (DiagramGenerator gen, List editParts, IPath destinationFolder, String fileName, ImageFileFormat imageFormat, int logTileWidth, int logTileHeight, IProgressMonitor monitor) throws CoreException, Error; private String tileImageFileNameIndexDelimiter = StringStatics.UNDER_SCORE;
    private class ExportInfo {

    }

    private class LineSegmentPointsComparator implements Comparator < Point > {

        public LineSegmentPointsComparator (Point segmentOrigin) {
        }

        public int compare (Point p1, Point p2);
    }

    private int indexOfCellEdgePointClockwise (Dimension cellSize, Point pt);
    public DiagramGenerator copyToImage (DiagramEditPart diagramEP, IPath destination, ImageFileFormat format, IProgressMonitor monitor) throws CoreException;
    public HashMap < ImageFileFormat, Dimension > getImageFormatToTileSizeMap ();
    public List copyToImage (Diagram diagram, IPath destination, ImageFileFormat format, IProgressMonitor monitor, PreferencesHint preferencesHint) throws CoreException;
    public String getTileImageFileNameIndexDelimiter ();
    public void copyToImage (DiagramEditPart diagramEP, List selection, IPath destination, ImageFileFormat format, IProgressMonitor monitor) throws CoreException;
    public void setTileImageFileNameIndexDelimiter (String tileImageFileNameIndexDelimiter);
    {
        imageFormatToTileSizeMap = new HashMap < ImageFileFormat, Dimension > (ImageFileFormat.VALUES.length);
        imageFormatToTileSizeMap.put (ImageFileFormat.GIF, new Dimension (3000, 3000));
        imageFormatToTileSizeMap.put (ImageFileFormat.BMP, new Dimension (3000, 3000));
        imageFormatToTileSizeMap.put (ImageFileFormat.JPG, new Dimension (3000, 3000));
        imageFormatToTileSizeMap.put (ImageFileFormat.JPEG, new Dimension (3000, 3000));
        imageFormatToTileSizeMap.put (ImageFileFormat.PNG, new Dimension (3000, 3000));
        imageFormatToTileSizeMap.put (ImageFileFormat.SVG, new Dimension (0, 0));
    }

}

