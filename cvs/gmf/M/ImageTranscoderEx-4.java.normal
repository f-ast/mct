package org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg;

public class ImageTranscoderEx extends ImageTranscoder {
    private BufferedImage bufferedImage = null;

    private GraphicsNode renderImage (TranscoderOutput output, GraphicsNode gvtRoot, AffineTransform Px, int w, int h) throws TranscoderException;
    private boolean shouldCopyDocument (Document document);
    protected AffineTransform calculateSizeTransform (SVGSVGElement svgRoot, GraphicsNode gvtRoot, String uri, float docWidth, float docHeight, float newWidth, float newHeight) throws TranscoderException;
    protected Graphics2D createGraphics (int w, int h);
    protected GraphicsNode buildGVTTree (SVGOMDocument svgDoc, BridgeContext context) throws TranscoderException;
    protected void initSVGDocument (SVGOMDocument svgDoc);
    protected void postRenderImage (Graphics2D g2d);
    protected void transcode (Document document, String uri, TranscoderOutput output) throws TranscoderException;
    public BufferedImage createImage (int w, int h);
    public BufferedImage getBufferedImage ();
    public ImageTranscoderEx () {
    }

    public class DimensionFloat extends Dimension2D {

        public DimensionFloat (float width, float height) {
        }

        public double getHeight ();
        public double getWidth ();
        public void setSize (double width, double height);
    }

    final public static TranscodingHints.Key KEY_ANTI_ALIASING = new BooleanKey ();
    final public static TranscodingHints.Key KEY_FILL_COLOR = new ColorKey ();
    final public static TranscodingHints.Key KEY_MAINTAIN_ASPECT_RATIO = new BooleanKey ();
    final public static TranscodingHints.Key KEY_OUTLINE_COLOR = new ColorKey ();

    public void writeImage (BufferedImage img, TranscoderOutput arg1) throws TranscoderException;
}

