package org.eclipse.gmf.codegen.gmfgen.impl;

public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {

    protected EClass eStaticClass (); protected GenClass metaClass = null;
    protected GenElementInitializer modelElementInitializer = null;
    protected GenFeature childMetaFeature = null;
    protected GenFeature containmentMetaFeature = null;
    protected ModelElementSelector modelElementSelector = null;

    protected TypeModelFacetImpl () {
    }

    public GenClass basicGetMetaClass ();
    public GenClass getMetaClass ();
    public GenElementInitializer getModelElementInitializer ();
    public GenFeature basicGetChildMetaFeature ();
    public GenFeature basicGetContainmentMetaFeature ();
    public GenFeature getChildMetaFeature ();
    public GenFeature getChildMetaFeatureGen ();
    public GenFeature getContainmentMetaFeature ();
    public ModelElementSelector getModelElementSelector ();
    public NotificationChain basicSetModelElementInitializer (GenElementInitializer newModelElementInitializer, NotificationChain msgs);
    public NotificationChain basicSetModelElementSelector (ModelElementSelector newModelElementSelector, NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
    public void setChildMetaFeature (GenFeature newChildMetaFeature);
    public void setContainmentMetaFeature (GenFeature newContainmentMetaFeature);
    public void setMetaClass (GenClass newMetaClass);
    public void setModelElementInitializer (GenElementInitializer newModelElementInitializer);
    public void setModelElementSelector (ModelElementSelector newModelElementSelector);
}

