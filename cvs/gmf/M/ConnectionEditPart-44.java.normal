package org.eclipse.gmf.runtime.diagram.ui.editparts;

abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
    ;

    abstract protected Connection createConnectionFigure ();
    final protected EditPart createChild (Object model);
    final protected IFigure createFigure ();
    final protected org.eclipse.gef.ConnectionEditPart createConnection (Object connectionView);
    final protected void createEditPolicies ();
    final void refreshChild (GraphicalEditPart child); private Boolean semanticConnection;

    private DiagramEventBroker getDiagramEventBroker (); private FontData cachedFontData;
    private Map listenerFilters;
    private String elementGuid;
    private TransactionalEditingDomain editingDomain;
    private boolean isEditable = true;
    private static Set _disableCanonicalEditPolicyList = new HashSet ();
    private static volatile int GETCOMMAND_RECURSIVE_COUNT = 0;

    private void addEditPartAndParent (Set hosts, EditPart editPart);
    private void installBendpointEditPolicy (); protected AccessibleEditPart accessibleEP;

    protected AccessibleEditPart getAccessibleEditPart ();
    protected Collection disableCanonicalFor (final Request request);
    protected Command getPropertyChangeCommand (Object property, Object oldValue, Object newValue);
    protected Diagram getDiagramView ();
    protected Edge getEdge ();
    protected EditDomain getEditDomain ();
    protected IMapMode getMapMode ();
    protected List getModelChildren ();
    protected Object getModelSource ();
    protected Object getModelTarget ();
    protected ResourceManager getResourceManager ();
    protected String [] getAppearancePropertyIDs ();
    final protected void handleMajorSemanticChange (); final protected static String [] appearanceProperties = new String [] {Properties.ID_FONTNAME, Properties.ID_FONTSIZE, Properties.ID_FONTBOLD, Properties.ID_FONTITALIC, Properties.ID_FONTCOLOR, Properties.ID_LINECOLOR};

    protected void addChild (EditPart child, int index);
    protected void addListenerFilter (String filterId, NotificationListener listener, EObject element);
    protected void addListenerFilter (String filterId, NotificationListener listener, EObject element, EStructuralFeature feature);
    protected void addNotationalListeners ();
    protected void addSemanticListeners ();
    protected void createDefaultEditPolicies ();
    protected void executeCommand (Command command);
    protected void handleNotificationEvent (Notification event);
    protected void handlePropertyChangeEvent (PropertyChangeEvent event);
    protected void installRouter ();
    protected void performDirectEditRequest (Request request);
    protected void refreshBendpoints ();
    protected void refreshFont ();
    protected void refreshForegroundColor ();
    protected void refreshJumplinks ();
    protected void refreshRouterChange ();
    protected void refreshRoutingStyles ();
    protected void refreshSmoothness ();
    protected void refreshVisibility ();
    protected void refreshVisuals ();
    protected void registerModel ();
    protected void removeListenerFilter (String filterId);
    protected void removeNotationalListeners ();
    protected void removeSemanticListeners ();
    protected void setFont (FontData fontData);
    protected void setForegroundColor (Color color);
    protected void setVisibility (boolean vis);
    protected void unregisterModel ();
    public Command getCommand (Request _request);
    public ConnectionEditPart (View view) {
    }

    public DragTracker getDragTracker (Request req);
    public EObject resolveSemanticElement ();
    public EditPart findEditPart (EditPart epBegin, EObject theElement);
    public EditPart getPrimaryChildEditPart ();
    public IDiagramEditDomain getDiagramEditDomain ();
    public IGraphicalEditPart getChildBySemanticHint (String semanticHint);
    public Object getAdapter (Class key);
    public Object getPreferredValue (EStructuralFeature feature);
    public Object getStructuralFeatureValue (EStructuralFeature feature);
    public PreferencesHint getDiagramPreferencesHint ();
    public TopGraphicEditPart getTopGraphicEditPart ();
    public TransactionalEditingDomain getEditingDomain ();
    public View getNotationView ();
    public View getPrimaryView ();
    public boolean isEditModeEnabled ();
    public boolean isSelectable ();
    public boolean isSemanticConnection ();
    public boolean understandsRequest (Request req);
    final public boolean isCanonical ();
    final public void propertyChange (PropertyChangeEvent event);
    public void activate ();
    public void addNotify ();
    public void deactivate ();
    public void disableEditMode ();
    public void enableEditMode ();
    public void eraseSourceFeedback (Request request);
    public void eraseTargetFeedback (Request request);
    public void notifyChanged (Notification notification);
    public void performRequest (Request request);
    public void reactivateSemanticModel ();
    public void refresh ();
    public void removeNotify ();
    public void setModel (Object model);
    public void setStructuralFeatureValue (EStructuralFeature feature, Object value);
    public void showSourceFeedback (Request request);
    public void showTargetFeedback (Request request);
    private static void registerAdapters ();
    static {
        registerAdapters ();
    }

}

