package org.eclipse.gmf.runtime.emf.clipboard.core;

public class PasteChildOperation extends BasePasteOperation {

    protected EObject doPasteInto (EObject pasteIntoEObject);
    protected EObject doPasteInto (EObject pasteIntoEObject, EReference reference);
    protected EObject getCopyParentEObject ();
    protected EObject getEObject (String objId);
    protected EObject getLoadedDirectContainerEObject ();
    protected EObject getLoadedEObject (String objId);
    protected EObject getPastedDirectCopyParent ();
    protected EObject getPastedEObject (EObject eObject);
    protected EObject getSuitableParentUsingAncestry (String preferredTypeName);
    protected EReference getContainmentFeature ();
    protected List getAlwaysCopyObjectPasteOperations ();
    protected List mergeLists (EReference reference, List targetObjectList, List objectList, ObjectInfo objectInfo);
    protected ObjectInfo getChildObjectInfo ();
    protected ObjectInfo getCopyParentObjectInfo ();
    protected PasteChildOperation (PasteChildOperation mainChildPasteProcess) {
    }

    protected PasteChildOperation getAuxiliaryChildPasteProcess (ObjectInfo auxiliaryChildEObjectInfo);
    protected PasteChildOperation getMainChildPasteProcess ();
    protected PasteChildOperation makeAuxiliaryChildPasteProcess (ObjectInfo auxiliaryChildEObjectInfo);
    protected String getEObjectID (EObject eObject);
    protected String getLoadedEObjectID (EObject eObject);
    protected boolean canBeReplaced (EObject eObject);
    protected boolean handleCollision (EReference reference, EObject object, EObject eObject, ObjectInfo eObjectInfo);
    protected boolean handleCollision (EReference reference, List list, EObject eObject, ObjectInfo eObjectInfo);
    protected boolean hasCopyParent ();
    protected boolean isCopyAlways ();
    protected boolean isCopyParentDirectParent ();
    protected boolean shouldPasteAlwaysCopyObject (ObjectInfo alwaysCopyObjectInfo); final protected static PasteChildOperation [] EMPTY_ARRAY = new PasteChildOperation [0];
    final protected static String COPY = ClipboardPlugin.getPlugin ().getString ("pasteChildOperation.copyPrefix");

    protected void mergeEObjects (boolean weakMerge, EObject targetEObject, EObject eObject, ObjectInfo objectInfo);
    protected void setPastedElement (EObject pastedElement);
    public EObject getEObject ();
    public EObject getParentEObject ();
    public EObject getPastedElement ();
    public EReference getPasteContainmentFeature (EObject parentEObject);
    public PasteChildOperation (PasteIntoParentOperation parentPasteProcess, ObjectInfo childEObjectInfo) {
    }

    public PasteChildOperation getPostPasteOperation ();
    public PasteIntoParentOperation getParentPasteProcess ();
    public XMLResource getParentResource ();
    public boolean isAuxiliaryOperation ();
    public void paste () throws Exception;
}

