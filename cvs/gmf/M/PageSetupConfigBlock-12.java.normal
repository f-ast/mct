package org.eclipse.gmf.runtime.diagram.ui.internal.dialogs;

public class PageSetupConfigBlock implements ILabels {
    private ArrayList fControls = new ArrayList ();
    private Button fButtonInches, fButtonLandscape, fButtonMillimetres, fButtonPortrait;
    private Combo fComboSize;

    private Composite createPageSetupTabContent (Composite folder); private Convertor fConvertor;
    private IPreferenceStore fStore;
    private Initializer fInitialier;
    private Label fLabelHeight, fLabelMarginBottom, fLabelMarginLeft, fLabelMarginRight, fLabelMarginTop, fLabelSize, fLabelUnitMarginLeft, fLabelUnitMarginTop, fLabelUnitWidth, fLabelWidth;
    private NumberFormat fNumberFormat;
    private PageSetupDialog fParentDialog;
    private Persistor fPersistor;
    private PrintingPreferencePage fPreferencePage;
    private String fCurrentUnit;
    private Text fTextHeight, fTextMarginBottom, fTextMarginLeft, fTextMarginRight, fTextMarginTop, fTextWidth;

    private boolean isConversionNeeded ();
    private boolean isUnitsInInch (); private class Convertor {

        public Convertor (PageSetupConfigBlock configBlock) {
        }

        public double convertInchesToMilim (double inches);
        public double convertMilimToInches (double milim);
        public double convertToInches (PageSetupControlType type);
        public double convertToMillimetres (PageSetupControlType type);
    }

    private class InchesSelectionListener extends UnitSelectionListener {

        public InchesSelectionListener (String label) {
        }

        public void widgetSelected (SelectionEvent e);
    }

    private class Initializer {

        public Initializer (PageSetupConfigBlock configBlock) {
        }

        public void initPrintControls ();
    }

    private class MillimetresSelectionListener extends UnitSelectionListener {

        public MillimetresSelectionListener (String label) {
        }

        public void widgetSelected (SelectionEvent e);
    }

    private class Persistor {

        public Persistor (PageSetupConfigBlock configBlock) {
        }

        public void saveConfigBlockControlValues ();
    }

    private class UnitSelectionListener implements SelectionListener {

        public UnitSelectionListener (String label) {
        }

        public void widgetDefaultSelected (SelectionEvent e);
        public void widgetSelected (SelectionEvent e);
    }

    private double getDblFromString (String strNum);
    private void createGroupMargin (Composite composite) {
        Group group = PageSetupWidgetFactory.createGroupMargin (composite, LABEL_TITLE_GROUP_MARGIN);
        fLabelMarginTop = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_TOP_INCHES);
        fTextMarginTop = PageSetupWidgetFactory.createTextMargin (group);
        fLabelUnitMarginTop = PageSetupWidgetFactory.createLabelFiller (group);
        fLabelMarginBottom = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_BOTTOM_INCHES);
        fTextMarginBottom = PageSetupWidgetFactory.createTextMargin (group);
        fLabelMarginLeft = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_LEFT_INCHES);
        fTextMarginLeft = PageSetupWidgetFactory.createTextMargin (group);
        fLabelUnitMarginLeft = PageSetupWidgetFactory.createLabelFiller (group);
        fLabelMarginRight = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_RIGHT_INCHES);
        fTextMarginRight = PageSetupWidgetFactory.createTextMargin (group);
        fTextMarginTop.addFocusListener (new FocusListener () {

            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        }

        );
        fTextMarginTop.addModifyListener (new ModifyListener () {

            public void modifyText (ModifyEvent e);
        }

        );
        fTextMarginBottom.addFocusListener (new FocusListener () {

            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        }

        );
        fTextMarginBottom.addModifyListener (new ModifyListener () {

            public void modifyText (ModifyEvent e);
        }

        );
        fTextMarginLeft.addFocusListener (new FocusListener () {

            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        }

        );
        fTextMarginLeft.addModifyListener (new ModifyListener () {

            public void modifyText (ModifyEvent e);
        }

        );
        fTextMarginRight.addFocusListener (new FocusListener () {

            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        }

        );
        fTextMarginRight.addModifyListener (new ModifyListener () {

            public void modifyText (ModifyEvent e);
        }

        );
        fControls.add (fLabelMarginTop);
        fControls.add (fTextMarginTop);
        fControls.add (fLabelUnitMarginTop);
        fControls.add (fLabelMarginBottom);
        fControls.add (fTextMarginBottom);
        fControls.add (fLabelMarginLeft);
        fControls.add (fTextMarginLeft);
        fControls.add (fLabelUnitMarginLeft);
        fControls.add (fLabelMarginRight);
        fControls.add (fTextMarginRight);
    }
    private void createGroupPageOrientation (Composite composite);
    private void createGroupPaperSize (Composite composite);
    private void createGroupUnits (Composite composite);
    public Control createContents (Composite parent);
    public Control getControl (PageSetupControlType controlType);
    public PageSetupConfigBlock (IPreferenceStore store) {
    }

    public PageSetupConfigBlock (IPreferenceStore store, PageSetupDialog parentDialog) {
    }

    public PageSetupConfigBlock (IPreferenceStore store, PrintingPreferencePage preferencePage) {
    }

    public void disableAllControls ();
    public void enableAllControls ();
    public void performDefaults ();
    public void save ();
    public void setOkButtonEnableStatus ();
}

