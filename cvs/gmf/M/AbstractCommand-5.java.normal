package org.eclipse.gmf.runtime.common.core.command;

abstract public class AbstractCommand extends AbstractOperation implements ICommand {

    abstract protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    abstract protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    abstract protected CommandResult doUndoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    final protected void setResult (CommandResult result);
    protected void handle (Exception exception);
    public AbstractCommand (String label) {
    }

    public AbstractCommand (String label, List affectedFiles) {
    }

    public CMValidator getValidator ();
    public Collection getAffectedObjects ();
    public CommandResult getCommandResult ();
    public ICommand compose (IUndoableOperation operation);
    public ICommand reduce ();
    public IStatus execute (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public IStatus redo (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public IStatus undo (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public List getAffectedFiles ();
    public boolean involvesReadOnlyNonWorkSpaceFiles ();
    public boolean isExecutable ();
    public boolean isRedoable ();
    public boolean isUndoable ();
    public void dispose ();
    public void execute (IProgressMonitor progressMonitor);
    public void redo ();
    public void undo ();
}

