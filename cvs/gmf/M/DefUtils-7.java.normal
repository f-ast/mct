package org.eclipse.gmf.internal.validate;

public class DefUtils {

    private DefUtils () {
    }

    abstract private static class AbstractProvider implements IDefElementProvider {

        protected void setStatus (IStatus status);
        public IStatus getStatus ();
    }

    private static class ExpressionBasedProvider extends AbstractProvider implements IDefElementProvider {

        protected EClassifier getRequiredType ();
        protected ExpressionBasedProvider (IModelExpression expression, EClassifier requiredType) {
        }

        protected IModelExpression getExpression ();
        public Object evaluate (EObject resolutionContext);
        public String toString ();
    }

    public static ContextProvider getContextClass (EClass resolutionContext, IModelExpressionProvider oclExprProvider, EStructuralFeature bindFeature, EPackage.Registry registry);
    public static Diagnostic statusToDiagnostic (IStatus status, String diagSource, Object destObj);
    public static Diagnostic statusToDiagnostic (IStatus status, String diagSource, Object destObj, String prefixMessage);
    public static DiagnosticChain mergeAndFlatten (Diagnostic diagnostic, DiagnosticChain diagnosticChain);
    public static DiagnosticChain mergeAndFlatten (IStatus status, String diagSource, Object destObj, DiagnosticChain diagnosticChain);
    public static EAnnotation getAnnotationWithKey (EModelElement eModelElement, String sourceURI, String key);
    public static EClassifier getCanonicalEClassifier (EClassifier classifier);
    public static EClassifier getCanonicalEcorePackageClassifier (EClassifier classifier);
    public static IStatus getIncompatibleTypesStatus (EClassifier leftClassifier, EClassifier rightClassifier);
    public static List < EAnnotation > getAnnotationsWithKeyAndValue (EModelElement eModelElement, String sourceURI, String key, String value);
    public static List getAnnotationValues (EModelElement eModelElement, String sourceURI, String key);
    public static Map.Entry < String, String > findAnnotationDetailEntry (EModelElement eModelElement, String sourceURI, String key, String val);
    public static Map.Entry < String, String > getKeyPrefixAnnotation (EAnnotation annotation, String keyPrefix);
    public static boolean checkTypeAssignmentCompatibility (EClassifier leftClassifier, EClassifier rightClassifier);
    public static boolean isEcorePackageClassifier (EClassifier classifier); public static class ContextTypeAdapter extends AbstractProvider implements TypeProvider {

        public ContextTypeAdapter (ContextProvider contextProvider) {
            if (contextProvider == null) {
                throw new IllegalArgumentException ("null contextProvider");
            }
            this.ctxProvider = contextProvider;
        }

        public EClassifier getType (EObject resolutionContext);
        public ETypedElement getTypedElement (EObject context);
        public boolean hasTypedElement ();
    }

    public static class ExpressionContextProvider extends ExpressionBasedProvider implements ContextProvider {

        public EClassifier getContextClassifier (EObject resolutionContext);
        public ExpressionContextProvider (IModelExpression expression) {
        }

    }

    public static class ExpresssionTypeProvider extends ExpressionBasedProvider implements TypeProvider {

        public EClassifier getType (EObject context);
        public ETypedElement getTypedElement (EObject context);
        public ExpresssionTypeProvider (IModelExpression expression) {
        }

        public boolean hasTypedElement ();
    }

    public static class FeatureValProvider extends AbstractProvider implements StringValProvider {

        public FeatureValProvider (EStructuralFeature feature) {
        }

        public String getValue (EObject contextInstance);
        public String toString ();
    }

    public static class GenClassifierContextAdapter extends ExpressionBasedProvider implements ContextProvider {

        public EClassifier getContextClassifier (EObject resolutionContext);
        public GenClassifierContextAdapter (IModelExpression expression) {
        }

        public static boolean isGenClassifier (EClassifier eClassifier);
    }

    public static class LookupByNameContextProvider extends ExpressionBasedProvider implements ContextProvider {

        public EClassifier getContextClassifier (EObject resolutionContext);
        public LookupByNameContextProvider (IModelExpression expression, EPackage.Registry registry) {
        }

    }

    public static class ReferencedContextProvider extends AbstractProvider implements ContextProvider {

        public EClassifier getContextClassifier (EObject resolutionContext);
        public ReferencedContextProvider (EClass context, String referenceName, IModelExpressionProvider oclExprProvider, EPackage.Registry registry) {
        }

    }

    public static class TypedElementProvider extends AbstractProvider implements TypeProvider {

        public EClassifier getType (EObject context);
        public ETypedElement getTypedElement (EObject context);
        public TypedElementProvider (EStructuralFeature feature) {
        }

        public boolean hasTypedElement ();
    }

    static EPackage getRootEPackage (EPackage ePackage);
    static List < EClass > getSubTypes (EPackage ePackage, EClass superType, List < EClass > foundSubTypes);
}

