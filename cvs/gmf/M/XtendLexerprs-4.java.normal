package org.eclipse.gmf.internal.xpand.xtend.parser;

public class XtendLexerprs implements XtendLexersym, lpg.lpgjavaruntime.ParseTable {

    final public String name (int index);
    final public boolean getBacktrack ();
    final public boolean isKeyword (int index);
    final public boolean isValidForParser ();
    final public int asb (int index);
    final public int asi (int state);
    final public int asr (int index);
    final public int baseAction (int index);
    final public int baseCheck (int index);
    final public int getAcceptAction ();
    final public int getEoftSymbol ();
    final public int getEoltSymbol ();
    final public int getErrorAction ();
    final public int getErrorSymbol ();
    final public int getIdentifierSymbol ();
    final public int getLaStateOffset ();
    final public int getMaxLa ();
    final public int getMaxNameLength ();
    final public int getNtOffset ();
    final public int getNumNonterminals ();
    final public int getNumRules ();
    final public int getNumStates ();
    final public int getNumSymbols ();
    final public int getScopeSize ();
    final public int getScopeUbound ();
    final public int getSegmentSize ();
    final public int getStartState ();
    final public int getStartSymbol ();
    final public int inSymb (int index);
    final public int inSymbol (int state);
    final public int lhs (int index);
    final public int lookAhead (int la_state, int sym);
    final public int nasb (int index);
    final public int nasi (int state);
    final public int nasr (int index);
    final public int nonterminalIndex (int index);
    final public int ntAction (int state, int sym);
    final public int originalState (int state);
    final public int rhs (int index);
    final public int scopeLa (int index);
    final public int scopeLhs (int index);
    final public int scopePrefix (int index);
    final public int scopeRhs (int index);
    final public int scopeState (int index);
    final public int scopeStateSet (int index);
    final public int scopeSuffix (int index);
    final public int tAction (int state, int sym);
    final public int termAction (int index);
    final public int termCheck (int index);
    final public int terminalIndex (int index); final public static boolean BACKTRACK = false;
    final public static byte baseCheck [] = BaseCheck.baseCheck;
    final public static byte isKeyword [] = IsKeyword.isKeyword;
    final public static byte rhs [] = baseCheck;
    final public static byte termCheck [] = TermCheck.termCheck;
    final public static char baseAction [] = BaseAction.baseAction;
    final public static char lhs [] = baseAction;
    final public static char termAction [] = TermAction.termAction;
    final public static int ACCEPT_ACTION = 355, EOFT_SYMBOL = 101, EOLT_SYMBOL = 104, ERROR_ACTION = 356, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 581, MAX_LA = 1, NT_OFFSET = 103, NUM_NONTERMINALS = 24, NUM_RULES = 225, NUM_STATES = 31, NUM_SYMBOLS = 127, SEGMENT_SIZE = 8192, START_STATE = 226;
    public interface BaseAction {
        final public static char baseAction [] = {17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 14, 14, 18, 12, 12, 12, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 19, 19, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 15, 15, 15, 15, 20, 20, 20, 20, 21, 21, 16, 16, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11, 11, 11, 11, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 17, 498, 37, 40, 43, 44, 113, 474, 201, 147, 146, 43, 44, 321, 812, 254, 151, 810, 232, 6, 242, 843, 114, 233, 302, 198, 197, 43, 44, 820, 38, 145, 844, 165, 199, 201, 299, 289, 831, 38, 292,
          302, 198, 197, 43, 44, 845, 846, 813, 847, 165, 199, 201, 848, 297, 811, 283, 292, 1, 156, 155, 43, 44, 158, 849, 842, 157, 400, 198, 197, 43, 44, 850, 161, 356, 356, 166, 199, 201, 305, 101, 156, 155, 43, 44, 158, 356, 356, 157, 663, 37, 40, 43, 44, 356, 159, 598, 42, 41, 43, 44, 329, 356, 263, 728, 42, 41, 43, 44, 793, 223, 793, 223, 793, 223, 336, 224, 338, 224, 346, 224, 793, 223, 356, 356, 356, 356, 202, 224, 356, 356};

    };

    public interface BaseCheck {
        final public static byte baseCheck [] = {0, 1, 3, 3, 1, 3, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 5, 1, 1, 2, 3, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 0, 1, 2, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};

    };

    public interface IsKeyword {
        final public static byte isKeyword [] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    };

    public interface TermAction {
        final public static char termAction [] = {0, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 497, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 464, 487, 481, 483, 494, 496, 516, 519, 475, 485, 476, 484, 486, 488, 489, 490, 491, 492, 493, 495, 471, 472, 473, 474, 467, 468, 480, 477, 478, 479, 498, 499, 482, 465, 466, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 497, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 464, 487, 481, 483, 494, 496, 391, 520, 475, 485, 476, 484, 486, 488, 489, 490, 491, 492, 493, 495, 471, 472, 473, 474, 467, 468, 480, 477, 478,
          479, 498, 499, 482, 465, 466, 36, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 497, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 504, 487, 481, 483, 494, 496, 506, 505, 475, 485, 476, 484, 486, 488, 489, 490, 491, 492, 493, 495, 471, 472, 473, 474, 508, 509, 480, 477, 478, 479, 498, 499, 482, 162, 356, 510, 167, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 550, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 556, 540, 536, 538, 547, 549, 527, 530, 356, 356, 531, 539, 290, 541, 542, 543, 544, 545, 546, 548, 525, 526, 528, 529, 356, 356, 535, 532, 533, 534, 551,
          552, 537, 168, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 550, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 556, 540, 536, 538, 547, 549, 527, 530, 356, 356, 531, 539, 290, 541, 542, 543, 544, 545, 546, 548, 525, 526, 528, 529, 356, 356, 535, 532, 533, 534, 551, 552, 537, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 246, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 464, 273, 274, 239, 387, 271, 280, 365, 249, 266, 272, 581, 355, 380, 381, 378, 379, 389, 384, 257, 363, 278, 370, 371, 467, 468, 356, 356, 356, 356, 356, 356, 356, 465, 466, 1, 454, 455,
          456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 356, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 356, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 5, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 356, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
          568, 572, 567, 569, 570, 571, 34, 10, 29, 27, 573, 574, 575, 576, 577, 578, 4, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 39, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 356, 32, 17, 16, 13, 356, 8, 356, 356, 356, 356, 559, 562, 356, 356, 356, 356, 561, 563, 560, 334, 356, 356, 356, 356, 356, 356, 356, 374, 376, 375, 377, 356, 464, 356, 356, 356, 368, 386, 356, 500, 261, 356, 356, 356, 356, 356, 314, 356, 356, 356, 356, 356, 356, 356, 356, 356, 467, 468, 356, 356, 356, 356, 356, 356, 356, 465, 466, 356, 356, 356, 356, 367, 564, 565, 356, 382, 566, 356, 356, 359, 356, 358};

    };

    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50
          , 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 0, 100, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 0, 0, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 0, 0, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
          , 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 101, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 0, 0, 0, 0, 0, 0, 0, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
          , 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 0, 0, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 0, 0, 0, 0, 17, 18, 19, 20, 0, 0, 0, 0, 0, 0, 0, 27, 27, 27, 27, 0, 65, 0, 0, 0, 66, 68, 0, 71, 72, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 98, 99, 0, 0, 0, 0, 67, 73, 74, 0, 70, 77, 0, 0, 73, 0, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    };

}

