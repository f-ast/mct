package org.eclipse.gmf.internal.bridge.ui.dashboard;

public class DashboardFigure extends RectangleFigure {
    private FlowActionFigure dm2dgmFigure;
    private FlowActionFigure dm2gdmFigure;
    private FlowActionFigure dm2mmFigure;
    private FlowActionFigure dm2tdmFigure;
    private FlowActionFigure mm2gmFigure;
    private FlowFigure dm2dgmFlow;
    private FlowFigure dm2gdmFlow;
    private FlowFigure dm2mmFlow;
    private FlowFigure dm2tdmFlow;
    private FlowFigure gdm2mmFlow;
    private FlowFigure mm2gmFlow;
    private FlowFigure tdm2mmFlow;
    private IFigure statusFigure;
    private ImageFigure logoFigure;
    private ModelFigure dgmFigure;
    private ModelFigure dmFigure;
    private ModelFigure gdmFigure;
    private ModelFigure gmFigure;
    private ModelFigure mmFigure;
    private ModelFigure tdmFigure;
    private class DashboardLayout extends AbstractLayout {
        private class LayoutData {

            public Dimension getSize (); public PointList dm2dgmPoints;
            public PointList dm2gdmPoints;
            public PointList dm2mmPoints;
            public PointList dm2tdmPoints;
            public PointList gdm2mmPoints;
            public PointList mm2gmPoints;
            public PointList tdm2mmPoints;
            public Rectangle dgmBox;
            public Rectangle dm2dgmBox;
            public Rectangle dm2gdmBox;
            public Rectangle dm2mmBox;
            public Rectangle dm2tdmBox;
            public Rectangle dmBox;
            public Rectangle gdmBox;
            public Rectangle gmBox;
            public Rectangle logoBox;
            public Rectangle mm2gmBox;
            public Rectangle mmBox;
            public Rectangle statusBox;
            public Rectangle tdmBox;

            public void apply (Point offset);
        }

        final private static int BOX_SPACING = 20;
        final private static int MAX_BOX_WIDTH = 400;

        protected Dimension calculatePreferredSize (IFigure container, int wHint, int hHint);
        protected LayoutData getLayoutData ();
        public void layout (IFigure container);
    }

    final private static Color DASHBOARD_BG = new Color (null, 113, 104, 209);
    final private static Color DASHBOARD_FG = new Color (null, 169, 164, 227);
    final private static Color MODEL_BG = ColorConstants.white;
    final private static int ARROW_LENGTH = 15;
    final private static int LINE_WIDTH = 6;
    final private static int TEXT_GAP = LINE_WIDTH + 3;

    protected FlowActionFigure createFlowActionFigure ();
    protected FlowFigure createFlowFigure (boolean directed);
    protected ModelFigure createModelFigure (String description, String iconKey);
    protected void outlineShape (Graphics graphics);
    public DashboardFigure () {
    }

    public FlowActionFigure getDM2DGMFigure ();
    public FlowActionFigure getDM2GDMFigure ();
    public FlowActionFigure getDM2MMFigure ();
    public FlowActionFigure getDM2TDMFigure ();
    public FlowActionFigure getMM2GMFigure ();
    public Label getStatusLine (int i);
    public ModelFigure getDGMFigure ();
    public ModelFigure getDMFigure ();
    public ModelFigure getGDMFigure ();
    public ModelFigure getGMFigure ();
    public ModelFigure getMMFigure ();
    public ModelFigure getTDMFigure ();
}

