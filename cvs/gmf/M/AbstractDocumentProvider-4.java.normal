package org.eclipse.gmf.runtime.diagram.ui.resources.editor.document;

abstract public class AbstractDocumentProvider implements IDocumentProvider {

    final public void updateStateCache (Object element) throws CoreException; private IProgressMonitor fProgressMonitor;
    private List fElementStateListeners = new ArrayList ();
    private Map fElementInfoMap = new HashMap ();

    protected AbstractDocumentProvider () {
    }

    protected ElementInfo createElementInfo (Object element) throws CoreException;
    protected ElementInfo getElementInfo (Object element);
    protected ISchedulingRule getResetRule (Object element);
    protected ISchedulingRule getSaveRule (Object element);
    protected ISchedulingRule getSynchronizeRule (Object element);
    protected ISchedulingRule getValidateStateRule (Object element);
    protected Iterator getConnectedElements ();
    abstract protected IDocument createDocument (Object element) throws CoreException;
    abstract protected IDocument createEmptyDocument ();
    abstract protected IRunnableContext getOperationRunner (IProgressMonitor monitor);
    abstract protected void doSaveDocument (IProgressMonitor monitor, Object element, IDocument document, boolean overwrite) throws CoreException;
    protected boolean invalidatesState (Object element, boolean wasReadOnly); protected class ElementInfo implements IDocumentListener {

        public ElementInfo (IDocument document) {
        }

        public IDocument fDocument;
        public IStatus fStatus;
        public Object fElement;

        public boolean equals (Object o); public boolean fCanBeSaved;
        public boolean fIsStateValidated;
        public int fCount;

        public int hashCode ();
        public void documentAboutToBeChanged (DocumentEvent event);
        public void documentChanged (DocumentEvent event);
    }

    abstract protected static class DocumentProviderOperation implements IRunnableWithProgress {

        abstract protected void execute (IProgressMonitor monitor) throws CoreException;
        public void run (IProgressMonitor monitor) throws InterruptedException, InvocationTargetException;
    }

    protected void addUnchangedElementListeners (Object element, ElementInfo info);
    protected void connected ();
    protected void disconnected ();
    protected void disposeElementInfo (Object element, ElementInfo info);
    protected void doResetDocument (Object element, IProgressMonitor monitor) throws CoreException;
    protected void doSynchronize (Object element, IProgressMonitor monitor) throws CoreException;
    protected void doUpdateStateCache (Object element) throws CoreException;
    protected void doValidateState (Object element, Object computationContext) throws CoreException;
    protected void executeOperation (DocumentProviderOperation operation, IProgressMonitor monitor) throws CoreException;
    protected void fireElementContentAboutToBeReplaced (Object element);
    protected void fireElementContentReplaced (Object element);
    protected void fireElementDeleted (Object element);
    protected void fireElementDirtyStateChanged (Object element, boolean isDirty);
    protected void fireElementMoved (Object originalElement, Object movedElement);
    protected void fireElementStateChangeFailed (Object element);
    protected void fireElementStateChanging (Object element);
    protected void fireElementStateValidationChanged (Object element, boolean isStateValidated);
    protected void removeUnchangedElementListeners (Object element, ElementInfo info);
    public DocumentProviderOperation getResetOperation (final Object element);
    public DocumentProviderOperation getSaveOperation (final Object element, final IDocument document, final boolean overwrite);
    public IDocument getDocument (Object element);
    public IProgressMonitor getProgressMonitor ();
    public IStatus getStatus (Object element);
    public boolean canSaveDocument (Object element);
    public boolean isDeleted (Object element);
    public boolean isModifiable (Object element);
    public boolean isReadOnly (Object element);
    public boolean isStateValidated (Object element);
    public boolean isSynchronized (Object element);
    public boolean mustSaveDocument (Object element);
    final public void connect (Object element) throws CoreException;
    final public void disconnect (Object element);
    final public void resetDocument (final Object element) throws CoreException;
    final public void saveDocument (IProgressMonitor monitor, final Object element, final IDocument document, final boolean overwrite) throws CoreException;
    final public void synchronize (final Object element) throws CoreException;
    public long getModificationStamp (Object element);
    public long getSynchronizationStamp (Object element);
    public void aboutToChange (Object element);
    public void addElementStateListener (IElementStateListener listener);
    public void changed (Object element);
    public void removeElementStateListener (IElementStateListener listener);
    public void setCanSaveDocument (Object element);
    public void setProgressMonitor (IProgressMonitor progressMonitor);
    public void validateState (final Object element, final Object computationContext) throws CoreException; final protected static boolean PR10806_UC5_ENABLED = true;
    final protected static boolean PR14469_ENABLED = false;
    final public static IStatus STATUS_ERROR = new Status (IStatus.ERROR, EditorPlugin.getPluginId (), IStatus.INFO, EditorMessages.AbstractDocumentProvider_error, null);
    final public static IStatus STATUS_OK = new Status (IStatus.OK, EditorPlugin.getPluginId (), IStatus.OK, EditorMessages.AbstractDocumentProvider_ok, null);

}

