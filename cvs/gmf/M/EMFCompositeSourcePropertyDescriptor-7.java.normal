package org.eclipse.gmf.runtime.emf.ui.properties.descriptors;

public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {

    protected CellEditor createBooleanCellEditor (Composite composite);
    protected CellEditor createComboBoxCellEditor (Composite composite);
    protected CellEditor createDataTypeCellEditor (Composite composite);
    protected CellEditor doCreateEditor (Composite composite);
    protected CellEditor getPropertyEditor (); protected CellEditor propertyEditor = null;
    protected ICellEditorValidator validator;

    protected IItemPropertySource getPropertySource (Object value);
    protected Object getEditableValue ();
    protected Object getObject (); protected String [] filterFlags;
    protected String category = null;
    protected boolean readOnly = false;

    public CellEditor createPropertyEditor (Composite composite);
    public EMFCompositeSourcePropertyDescriptor (Object object, IItemPropertyDescriptor itemPropertyDescriptor) {
    }

    public EMFCompositeSourcePropertyDescriptor (Object object, IItemPropertyDescriptor itemPropertyDescriptor, String category) {
    }

    public ICellEditorValidator getValidator ();
    public IItemPropertyDescriptor getItemDescriptor ();
    public List getChoiceOfValues ();
    public Object getFeature ();
    public Object getId ();
    public Object getPropertyValue ();
    public String [] getFilterFlags ();
    public String getCategory ();
    public boolean isCompatibleWith (IPropertyDescriptor anotherProperty);
    public boolean isReadOnly ();
    public static ILabelProvider createLabelProvider (IItemPropertyDescriptor itemPropertyDescriptor);
    public void addFilterFlag (String flag);
    public void resetPropertyValue ();
    public void resetPropertyValue (Object value);
    public void setCategory (String category);
    public void setPropertyEditor (CellEditor propertyEditor);
    public void setPropertyValue (final Object value);
    public void setReadOnly (boolean value);
    public void setValidator (ICellEditorValidator validator);
}

