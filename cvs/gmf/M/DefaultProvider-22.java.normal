package org.eclipse.gmf.runtime.diagram.ui.providers.internal;

abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {

    abstract protected Rectangle translateFromGraph (Rectangle rect);
    abstract protected Rectangle translateToGraph (Rectangle r);
    final protected void setNodeMetrics (Node n, Rectangle r);
    protected Command createEdgesChangeBoundsCommands (DirectedGraph g, Point diff);
    protected Command createNodeChangeBoundCommands (DirectedGraph g, Point diff);
    protected Command routeThrough (Edge edge, ConnectionEditPart connectEP, Node source, Node target, PointList points, Point diff);
    protected Command update_diagram (GraphicalEditPart diagramEP, DirectedGraph g, boolean isLayoutForSelected);
    protected DirectedGraph createGraph ();
    protected DirectedGraphLayout createGraphLayout ();
    protected EdgeList build_edges (List selectedObjects, Map editPartToNodeDict);
    protected IMapMode getMapMode (); protected IMapMode mm;

    protected LineSeg addAnchorsCommands (CompoundCommand cc, Point sourceAnchorLocation, Point targetAnchorLocation, Node source, Node target, ConnectionEditPart cep, Point diff);
    protected List getRelevantConnections (Hashtable editPartToNodeDict);
    protected NodeList build_nodes (List selectedObjects, Map editPartToNodeDict, Subgraph root);
    protected Rectangle getNodeMetrics (Node n);
    protected boolean canCreateBorderNode (IBorderItemEditPart ep);
    protected boolean layoutTopDown (ConnectionEditPart poly);
    protected boolean shouldHandleConnectableListItems ();
    protected boolean supportsBorderNodes (); protected int layoutDefaultMargin = 0;
    protected int minX = - 1;
    protected int minY = - 1;
    final protected static int MAX_EDGE_PADDING = NODE_PADDING * 3;
    final protected static int MIN_EDGE_END_POINTS_PADDING = 5;
    final protected static int MIN_EDGE_PADDING = 15;
    final protected static int NODE_PADDING = 30;

    protected void build_borderNodes (GraphicalEditPart parentEP, ConstantSizeNode parentNode, Map editPartToNodeDict);
    protected void build_graph (DirectedGraph g, List selectedObjects);
    protected void createSubCommands (Point diff, ListIterator vi, CompoundCommand cc);
    protected void initializeEdge (ConnectionEditPart connectionEP, Edge edge);
    protected void postProcessGraph (DirectedGraph g, Hashtable editPartToNodeDict);
    public Command layoutEditParts (GraphicalEditPart containerEditPart, IAdaptable layoutHint);
    public Command layoutEditParts (List selectedObjects, IAdaptable layoutHint);
    public boolean provides (IOperation operation);
}

