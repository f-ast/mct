package org.eclipse.gmf.internal.common.codegen;

abstract public class GeneratorBase implements Runnable {

    abstract protected URL getJMergeControlFile ();
    abstract protected void customRun () throws InterruptedException, UnexpectedBehaviourException;
    abstract protected void setupProgressMonitor ();
    protected boolean contains (IFile f, InputStream is);
    final protected IPath guessNewProjectLocation (Path examplaryProjectPath, String newProjectName);
    final protected IProgressMonitor getNextStepMonitor () throws InterruptedException;
    final protected IProgressMonitor getProgress ();
    final protected IProject getDestProject ();
    final protected String formatCode (String text);
    final protected String mergeJavaCode (String generatedText, ICompilationUnit oldCU, IProgressMonitor pm) throws JavaModelException;
    final protected void doGenerateBinaryFile (BinaryEmitter emitter, Path outputPath, Object [] params) throws InterruptedException, UnexpectedBehaviourException;
    final protected void doGenerateFile (TextEmitter emitter, IPath filePath, Object [] param) throws InterruptedException;
    final protected void doGenerateJavaClass (TextEmitter emitter, String packageName, String className, Object [] input) throws InterruptedException;
    final protected void doGenerateJavaClass (TextEmitter emitter, String qualifiedClassName, Object [] input) throws InterruptedException;
    final protected void handleException (CoreException ex);
    final protected void handleException (IStatus status);
    final protected void handleException (Throwable ex);
    final protected void initializeEditorProject (String pluginId, IPath projectLocation) throws InterruptedException, UnexpectedBehaviourException;
    final protected void initializeEditorProject (String pluginId, IPath projectLocation, List referencedProjects) throws InterruptedException, UnexpectedBehaviourException;
    final protected void setupProgressMonitor (String task, int total);
    protected static IStatus newStatus (Throwable ex);
    protected static IStatus newStatus (int severity, Throwable ex);
    protected void handleUnexpected (UnexpectedBehaviourException ex);
    protected void setProgressTaskName (String text);
    public GeneratorBase () {
    }

    public IStatus getRunStatus ();
    public void run ();
    public void run (IProgressMonitor progress) throws InterruptedException;
    public void setProgressMonitor (IProgressMonitor progress);
}

