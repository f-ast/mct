package org.eclipse.gmf.runtime.draw2d.ui.figures;

public class WrappingLabel extends Figure implements PositionConstants {

    Dimension getTruncationStringSize ();
    IMapMode getFigureMapMode ();
    MapModeConstants getMapModeConstants ();
    TextFlow getTextFlow (); private Dimension truncationStringSize;
    private FlowPage flowPage;

    private FlowPage getFlowPage (); private IconInfo iconInfo;
    private MapModeConstants mapModeConstants;
    private Point iconLocation;

    private Rectangle getVisibleTextBounds (); private int cachedPrefSizeHint_height;
    private int cachedPrefSizeHint_width;

    private int getAlignment (int flagOffset);
    private int getPlacement (int flagOffset); abstract private static class IconInfo {

        abstract public Dimension getIconSize (IMapMode mapMode, int i);
        abstract public Dimension getTotalIconSize (IMapMode mapMode);
        abstract public Image getIcon (int i);
        abstract public int getMaxIcons ();
        abstract public int getNumberofIcons ();
        abstract public void invalidate ();
        abstract public void setIcon (Image icon, int i);
    }

    private static class MultiIconInfo extends IconInfo {

        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public MultiIconInfo () {
        }

        public int getMaxIcons ();
        public int getNumberofIcons ();
        public void invalidate ();
        public void setIcon (Image icon, int i);
    }

    private static class SingleIconInfo extends IconInfo {
        final Image icon;
        private Dimension totalIconSize;

        private SingleIconInfo () {
        }

        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public SingleIconInfo (Image icon) {
        }

        final public int getMaxIcons ();
        public int getNumberofIcons (); final public static SingleIconInfo NULL_INFO = new SingleIconInfo () {

            public int getNumberofIcons ();
        }

        ;

        public void invalidate ();
        public void setIcon (Image img, int i); static int count;

    }

    final private static Dimension EMPTY_DIMENSION = new Dimension (0, 0);
    final private static Map < IMapMode, MapModeConstants > mapModeConstantsMap = new WeakHashMap < IMapMode, MapModeConstants > ();
    private static int FLAG_HASFOCUS = Figure.MAX_FLAG << 2;
    private static int FLAG_ICON_ALIGN = Figure.MAX_FLAG << 7;
    private static int FLAG_LABEL_ALIGN = Figure.MAX_FLAG << 11;
    private static int FLAG_SELECTED = Figure.MAX_FLAG << 1;
    private static int FLAG_TEXT_ALIGN = Figure.MAX_FLAG << 3;
    private static int FLAG_TEXT_PLACEMENT = Figure.MAX_FLAG << 15;

    private void alignOnHeight (Rectangle area, Rectangle childBounds, int alignment);
    private void alignOnWidth (Rectangle area, Rectangle childBounds, int alignment);
    private void calculateAlignment (Rectangle textBounds, Rectangle iconBounds);
    private void calculateLabelAlignment (Rectangle textBounds, Rectangle iconBounds);
    private void calculatePlacement (Rectangle textBounds, Rectangle iconBounds);
    private void calculateSizes (Rectangle textBounds, Rectangle iconBounds);
    private void createTextFigures ();
    private void paintFocusRectangle (Graphics g);
    private void paintIcons (Graphics graphics);
    private void paintSelectionRectangle (Graphics g);
    private void setAlignmentFlags (int alignment, int flagOffset);
    private void setLayoutManager (TextFlow textFlow, boolean wrappingOn);
    private void setPlacementFlags (int align, int flagOffset);
    protected Dimension calculateLabelSize (Dimension txtSize);
    protected Dimension getIconSize (int index);
    protected Dimension getTotalIconSize (); protected Dimension preferredTextSize;

    protected Point getIconLocation ();
    protected String getTruncationString ();
    protected boolean hasIcons ();
    protected int getNumberofIcons (); final protected static int MAX_FLAG = FLAG_TEXT_PLACEMENT;

    protected void paintClientArea (Graphics graphics);
    protected void setIconLocation (Point location);
    public Dimension getMinimumSize (int w, int h);
    public Dimension getPreferredSize (int wHint, int hHint);
    public IFigure getTextFigure ();
    public Image getIcon ();
    public Image getIcon (int index);
    public Rectangle getTextBounds ();
    public String getText ();
    public String toString ();
    public WrappingLabel () {
    }

    public WrappingLabel (Image image) {
    }

    public WrappingLabel (String text) {
    }

    public WrappingLabel (String text, Image image) {
    }

    public boolean hasFocus ();
    public boolean isSelected ();
    public boolean isTextStrikedThrough ();
    public boolean isTextTruncated ();
    public boolean isTextUnderlined ();
    public boolean isTextWrapOn ();
    public int getAlignment ();
    public int getIconAlignment ();
    public int getIconTextGap ();
    public int getTextAlignment ();
    public int getTextJustification ();
    public int getTextPlacement ();
    public void invalidate ();
    public void layout ();
    public void paintFigure (Graphics graphics);
    public void setAlignment (int alignment);
    public void setFocus (boolean focus);
    public void setFont (Font f);
    public void setIcon (Image image);
    public void setIcon (Image image, int index);
    public void setIconAlignment (int alignment);
    public void setSelected (boolean selected);
    public void setText (String text);
    public void setTextAlignment (int alignment);
    public void setTextJustification (int justification);
    public void setTextPlacement (int where);
    public void setTextStrikeThrough (boolean strikeThrough);
    public void setTextUnderline (boolean underline);
    public void setTextWrap (boolean textWrapOn); static class MapModeConstants {

        public Dimension getEllipseTextSize (Font f);
        public MapModeConstants (IMapMode mapMode) {
        }

        public SingleIconInfo getSingleIconInfo (Image image); final public Dimension dimension_nDPtoLP_0;
        final public SingleIconInfo [] singleIconInfos = new SingleIconInfo [MAX_IMAGE_INFO];
        final public WeakHashMap < Font, Dimension > fontToEllipseTextSize = new WeakHashMap < Font, Dimension > ();
        final public WeakReference < IMapMode > mapModeRef;
        final public int nDPtoLP_0;
        final public int nDPtoLP_2;
        final public int nDPtoLP_3;

    }

    final static String ELLIPSIS = "...";

}

