package org.eclipse.gmf.mappings.impl;

public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {

    protected EClass eStaticClass (); protected EList < EAttribute > editableFeatures;
    protected EList < EAttribute > features;

    protected FeatureLabelMappingImpl () {
    }

    protected LabelTextAccessMethod editMethod = EDIT_METHOD_EDEFAULT;
    protected LabelTextAccessMethod viewMethod = VIEW_METHOD_EDEFAULT;
    protected String editPattern = EDIT_PATTERN_EDEFAULT;
    protected String editorPattern = EDITOR_PATTERN_EDEFAULT;
    protected String viewPattern = VIEW_PATTERN_EDEFAULT;
    final protected static LabelTextAccessMethod EDIT_METHOD_EDEFAULT = LabelTextAccessMethod.MESSAGE_FORMAT;
    final protected static LabelTextAccessMethod VIEW_METHOD_EDEFAULT = LabelTextAccessMethod.MESSAGE_FORMAT;
    final protected static String EDITOR_PATTERN_EDEFAULT = null;
    final protected static String EDIT_PATTERN_EDEFAULT = null;
    final protected static String VIEW_PATTERN_EDEFAULT = null;

    public EList < EAttribute > getEditableFeatures ();
    public EList < EAttribute > getFeatures ();
    public LabelTextAccessMethod getEditMethod ();
    public LabelTextAccessMethod getViewMethod ();
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String getEditPattern ();
    public String getEditorPattern ();
    public String getViewPattern ();
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setEditMethod (LabelTextAccessMethod newEditMethod);
    public void setEditPattern (String newEditPattern);
    public void setEditorPattern (String newEditorPattern);
    public void setViewMethod (LabelTextAccessMethod newViewMethod);
    public void setViewPattern (String newViewPattern);
}

