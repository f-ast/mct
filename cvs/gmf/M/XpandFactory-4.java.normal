package org.eclipse.gmf.internal.xpand.parser;

public class XpandFactory extends ExpressionFactory {

    public Advice createAround (final IToken start, final IToken end, final Identifier n, final List < SyntaxElement > p, final boolean wildparams, final Identifier t, final List < SyntaxElement > s);
    public Definition createDefinition (final IToken startToken, final IToken endToken, final IToken n, final List < SyntaxElement > p, final Identifier type, final List < SyntaxElement > s);
    public ErrorStatement createErrorStatement (final IToken start, final Expression expr);
    public ExpandStatement createExpandStatement (final IToken start, final Identifier definition, final List < Expression > parameters, final Expression target, final boolean foreach, final Expression sep);
    public ExpressionStatement createExpressionStatement (final Expression e);
    public FileStatement createFileStatement (final IToken start, final IToken end, final Expression fileName, final Identifier option, final List < SyntaxElement > statements);
    public ForEachStatement createForEachStatement (final IToken start, final IToken end, final Expression e, final IToken v, final Expression sep, final IToken iter, final List < SyntaxElement > s);
    public IfStatement createIfStatement (final IToken start, final Expression condition, final List < SyntaxElement > statements, final IfStatement elseIf);
    public ImportDeclaration createImportDeclaration (final IToken start, final Identifier namespace);
    public LetStatement createLetStatement (final IToken start, final IToken end, final Expression e, final IToken name, final List < SyntaxElement > statements);
    public NamespaceImport createNamespaceImport (IToken start, StringLiteral namespace);
    public ProtectStatement createProtectStatement (final IToken start, final IToken end, final Expression startC, final Expression endC, final Expression id, final IToken disabled, final List < SyntaxElement > statements);
    public Template createTemplate (final List < NamespaceImport > imports, final List < ImportDeclaration > extensions, final List < Definition > defines, final List < Advice > advices, final IToken eof);
    public TextStatement createTextStatement (final IToken t, final IToken m);
    public XpandFactory (final String fileName) {
    }

}

