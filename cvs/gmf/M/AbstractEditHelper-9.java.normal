package org.eclipse.gmf.runtime.emf.type.core.edithelper;

abstract public class AbstractEditHelper implements IEditHelper {
    private Map defaultContainmentFeatures = new HashMap ();

    protected EReference getDefaultContainmentFeature (EClass eClass);
    protected ICommand getBasicDestroyElementCommand (DestroyElementRequest req);
    protected ICommand getConfigureCommand (ConfigureRequest req);
    protected ICommand getCreateCommand (CreateElementRequest req);
    protected ICommand getCreateRelationshipCommand (CreateRelationshipRequest req);
    protected ICommand getDestroyDependentsCommand (DestroyDependentsRequest req);
    protected ICommand getDestroyElementCommand (DestroyElementRequest req);
    protected ICommand getDestroyElementWithDependentsCommand (DestroyElementRequest req);
    protected ICommand getDestroyReferenceCommand (DestroyReferenceRequest req);
    protected ICommand getDuplicateCommand (DuplicateElementsRequest req);
    protected ICommand getEditContextCommand (GetEditContextRequest req);
    protected ICommand getInsteadCommand (IEditCommandRequest req);
    protected ICommand getMoveCommand (MoveRequest req);
    protected ICommand getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
    protected ICommand getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected ICommand getSetCommand (SetRequest req);
    protected ICompositeCommand createCommand (IEditCommandRequest req);
    protected IEditHelperAdvice [] getEditHelperAdvice (IEditCommandRequest req);
    protected Map getDefaultContainmentFeatures ();
    public ICommand getEditCommand (IEditCommandRequest req);
    public List getContainedValues (EObject eContainer, EReference feature);
    public boolean canEdit (IEditCommandRequest req);
    public void initializeDefaultFeature (CreateElementRequest req);
}

