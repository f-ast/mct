package org.eclipse.gmf.internal.validate;

public class AbstractValidator implements EValidator {

    private static MultiProviderCache getExpressionCache (Map < Object, Object > context); private static class MultiProviderCache {

        public ExpressionCache getCache (String language);
        public MultiProviderCache () {
        }

    }

    private static class NoProviderExpression extends AbstractExpression {

        protected Object doEvaluate (Object context);
        protected Object doEvaluate (Object context, IEvaluationEnvironment extEnvironment);
        public NoProviderExpression (final String language, String body, EClassifier context) {
            super (body, context, null);
            this.lang = language;
            String message = NLS.bind (Messages.noExpressionProviderAvailable, language);
            IStatus status = new Status (IStatus.ERROR, GMFValidationPlugin.getPluginId (), StatusCodes.EXPRESSION_PROVIDER_NOT_AVAILABLE, message, null);
            setStatus (status);
        }

        public String getLanguage ();
        public boolean isAssignableTo (EClassifier ecoreType);
        public boolean isAssignableToElement (ETypedElement typedElement);
    }

    private static class ProviderCache extends ExpressionCache {

        protected IModelExpression createExpressionEntry (String body, EClassifier context, IParseEnvironment extEnv);
        public ProviderCache (IModelExpressionProvider expressionProvider) {
        }

    }

    final private static Object ROOT_TARGET_OBJECT_KEY = new Object ();

    private static void ensureRootTargetInitialized (EObject target, Map < Object, Object > context);
    private static void setRootTargetObject (EObject targetObject, Map < Object, Object > context);
    protected AbstractValidator () {
    }

    protected static EObject getRootTargetObject (Map < Object, Object > context);
    protected static ExpressionCache getExpressionCache (String language, Map < Object, Object > context);
    protected static IModelExpression getExpression (String language, String body, EClassifier contextClassifier, IParseEnvironment env, Map < Object, Object > context);
    protected static IModelExpression getExpression (String language, String body, EClassifier contextClassifier, Map < Object, Object > context);
    protected static SubstitutionLabelProvider getLabelProvider (Map < Object, Object > context); final protected static String DIAGNOSTIC_SOURCE = "org.eclipse.gmf.validation";

    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    static ValidationOptions getOptions (Map < Object, Object > context);
    static void setOptions (ValidationOptions options, Map < Object, Object > context);
}

