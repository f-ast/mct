package org.eclipse.gmf.runtime.diagram.core.listener;

public class DiagramEventBroker extends MUniversalListener {
    final private NotifierToKeyToListenersSetMap listeners = new NotifierToKeyToListenersSetMap ();
    final private class NotifierToKeyToListenersSetMap {

        public Set getAllListeners (Object notifier);
        public Set getListeners (Object notifier, Object key);
        public void addListener (EObject notifier, Object key, Object listener);
        public void addListener (EObject notifier, Object listener);
        public void removeListener (EObject notifier, Object key, Object listener);
    }

    private static DiagramEventBroker instance;
    private static String LISTEN_TO_ALL_FEATURES = "*";

    private void addListenersOfNotifier (Set listenerSet, EObject notifier, Notification event);
    protected Set getInterestedNotificationListeners (Notification event);
    protected Set getNotificationListeners (Object notifier);
    protected Set getNotificationListeners (Object notifier, Object key);
    protected void fireNotification (Notification event);
    protected void handleElementEvent (Notification event); final public static MFilter ELEMENT_CREATED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.CREATE));
    final public static MFilter ELEMENT_DELETED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.DESTROY));
    final public static MFilter ELEMENT_INSERTED_INTO_SLOT = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.Or (new MFilter.EventType (EventTypes.ADD), new MFilter.EventType (EventTypes.ADD_MANY)));
    final public static MFilter ELEMENT_REMOVED_FROM_SLOT = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.Or (new MFilter.EventType (EventTypes.REMOVE), new MFilter.EventType (EventTypes.REMOVE_MANY)));
    final public static MFilter ELEMENT_UNCREATED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.UNCREATE));
    final public static MFilter ELEMENT_UNDELETED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.UNDESTROY));
    final public static MFilter SLOT_MODIFIED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.And (new MFilter.EventType (EventTypes.SET), new MFilter.EventType (EventTypes.UNSET)));

    final public void addNotificationListener (EObject target, EStructuralFeature key, NotificationListener listener);
    final public void addNotificationListener (EObject target, NotificationListener listener);
    final public void finalize ();
    final public void onEvent (List events);
    final public void removeNotificationListener (EObject target, NotificationListener listener);
    final public void removeNotificationListener (EObject target, Object key, NotificationListener listener);
    public static DiagramEventBroker getInstance ();
    public void startListening ();
    public void stopListening ();
}

