package org.eclipse.gmf.runtime.common.ui.services.action.contributionitem;

abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {

    IPluginContribution getPluginContribution (); private ActionGroupCache actionGroupCache = new ActionGroupCache ();

    private IMenuManager findMenuUsingPath (IContributionManager parent, String path); private IPluginContribution pluginContribution;
    private Map actionCache = new HashMap ();
    private ProviderContributionDescriptor contributionDescriptor;
    private Set partDescriptors = new HashSet ();

    private boolean areActivitiesEnabled (); private class ActionContributionItemAdapter implements IAdaptable {

        public ActionContributionItemAdapter (String actionId, IWorkbenchPartDescriptor partDescriptor, IPartSelector partSelector) {
        }

        public Object getAdapter (Class adapter);
    }

    private class ActionGroupContributionItemAdapter implements IAdaptable {

        public ActionGroupContributionItemAdapter (String menuId, IWorkbenchPartDescriptor partDescriptor) {
        }

        public Object getAdapter (Class adapter);
    }

    private class CustomContributionItemAdapter implements IAdaptable {

        public CustomContributionItemAdapter (String customId, IWorkbenchPartDescriptor partDescriptor) {
        }

        public Object getAdapter (Class adapter);
    }

    private class MenuContributionItemAdapter implements IAdaptable {

        public MenuContributionItemAdapter (String menuId, IWorkbenchPartDescriptor partDescriptor) {
        }

        public Object getAdapter (Class adapter);
    }

    private class MenuGroupContributionItemAdapter implements IAdaptable {

        public MenuGroupContributionItemAdapter (String groupId, boolean isSeparator) {
        }

        public Object getAdapter (Class adapter);
    }

    private class PluginActionContributionItem extends ActionContributionItem {

        public PluginActionContributionItem (IAction action) {
        }

        public boolean isVisible ();
    }

    private class PluginGroupMarker extends GroupMarker {

        public PluginGroupMarker (String groupName) {
        }

        public boolean isVisible ();
    }

    private class PluginMenuManager implements IMenuManager {

        public IContributionItem [] getItems ();
        public IContributionItem find (String id);
        public IContributionItem findUsingPath (String path);
        public IContributionItem remove (IContributionItem item);
        public IContributionItem remove (String id);
        public IContributionManagerOverrides getOverrides ();
        public IMenuManager findMenuUsingPath (String path);
        public PluginMenuManager (IMenuManager menuManager) {
        }

        public String getId ();
        public boolean getRemoveAllWhenShown ();
        public boolean isDirty ();
        public boolean isDynamic ();
        public boolean isEmpty ();
        public boolean isEnabled ();
        public boolean isGroupMarker ();
        public boolean isSeparator ();
        public boolean isVisible ();
        public void add (IAction action);
        public void add (IContributionItem item);
        public void addMenuListener (IMenuListener listener);
        public void appendToGroup (String groupName, IAction action);
        public void appendToGroup (String groupName, IContributionItem item);
        public void dispose ();
        public void fill (Composite parent);
        public void fill (CoolBar parent, int index);
        public void fill (Menu parent, int index);
        public void fill (ToolBar parent, int index);
        public void insertAfter (String id, IAction action);
        public void insertAfter (String id, IContributionItem item);
        public void insertBefore (String id, IAction action);
        public void insertBefore (String id, IContributionItem item);
        public void markDirty ();
        public void prependToGroup (String groupName, IAction action);
        public void prependToGroup (String groupName, IContributionItem item);
        public void removeAll ();
        public void removeMenuListener (IMenuListener listener);
        public void saveWidgetState ();
        public void setParent (IContributionManager parent);
        public void setRemoveAllWhenShown (boolean removeAll);
        public void setVisible (boolean visible);
        public void update ();
        public void update (String id);
        public void update (boolean force);
        public void updateAll (boolean force);
    }

    private class PluginSeparator extends Separator {

        public PluginSeparator () {
        }

        public PluginSeparator (String groupName) {
        }

        public boolean isVisible ();
    }

    private void contributeItem (IAdaptable contributionItemAdapter, IActionBars actionBars);
    private void contributeItem (IAdaptable contributionItemAdapter, IContributionManager contributionManager, String path, String group);
    private void contributeToActionBars (IActionBars actionBars, IWorkbenchPartDescriptor partDescriptor, boolean updateOnly);
    private void removeExistingItem (String id, String path, IContributionManager contributionManager);
    protected ActionGroup createActionGroup (String actionGroupId, IWorkbenchPartDescriptor partDescriptor);
    protected IAction createAction (String actionId, IWorkbenchPartDescriptor partDescriptor);
    protected IAction getActionFromRegistry (String actionId, IWorkbenchPartDescriptor partDescriptor, ActionRegistry registry);
    protected IContributionItem createCustomContributionItem (String customId, IWorkbenchPartDescriptor partDescriptor);
    protected IMenuManager createMenuManager (String menuId, IWorkbenchPartDescriptor partDescriptor);
    protected IStructuredSelection getStructuredSelection (IWorkbenchPartDescriptor partDescriptor);
    protected Object getSelectedObject (IWorkbenchPartDescriptor partDescriptor);
    final protected ActionGroup getActionGroup (String actionGroupId, IWorkbenchPartDescriptor partDescriptor);
    final protected IAction getAction (String actionId, IWorkbenchPartDescriptor partDescriptor);
    final protected IAction getAction (String actionId, IWorkbenchPartDescriptor partDescriptor, IPartSelector partSelector);
    final public boolean provides (IOperation operation);
    final public void contributeToActionBars (IActionBars actionBars, IWorkbenchPartDescriptor partDescriptor);
    final public void contributeToPopupMenu (IMenuManager popupMenu, IWorkbenchPart workbenchPart);
    final public void disposeContributions (IWorkbenchPartDescriptor partDescriptor);
    final public void setContributionDescriptor (ProviderContributionDescriptor descriptor);
    final public void updateActionBars (IActionBars actionBars, IWorkbenchPartDescriptor partDescriptor);
    void setPluginContribution (IPluginContribution pluginContribution);
}

