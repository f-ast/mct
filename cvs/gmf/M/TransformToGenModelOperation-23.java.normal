package org.eclipse.gmf.internal.bridge.transform;

public class TransformToGenModelOperation {

    Mapping getMapping (); private Diagnostic myGMFGenValidationResult = Diagnostic.CANCEL_INSTANCE;
    private Diagnostic myMapmodelValidationResult = Diagnostic.CANCEL_INSTANCE;

    private DiagramRunTimeModelHelper detectRunTimeModel (); private GenModel myGenModel;
    private GenModelDetector myGMDetector;

    private GenModelProducer createGenModelProducer (GenModel domainGenModel, final DiagramRunTimeModelHelper drtModelHelper, final ViewmapProducer viewmapProducer, final VisualIdentifierDispenser idDespenser); private IStatus myStaleGenmodelStatus = Status.CANCEL_STATUS;

    private Map < String, Object > getSaveOptions (); private Mapping myMapping;
    private TransformOptions myOptions;
    private URI myGMFGenModelURI;

    private ViewmapProducer detectTransformationOptions ();
    private VisualIdentifierDispenserProvider getVisualIdDispenser (); final private ResourceSet myResourceSet;

    private static void subTask (IProgressMonitor monitor, int ticks, String name, String cancelMessage) throws CoreException;
    private static void updateExistingResource (Resource gmfgenRes, GenEditorGenerator genBurden);
    private static void updateExternalReferences (GenEditorGenerator newEditorGenerator, final GenEditorGenerator oldEditorGenerator, List < EObject > allContentButOldGenerator);
    private void checkMapping ();
    private void reconcile (GenEditorGenerator genBurdern);
    private void save (GenEditorGenerator genBurdern) throws IOException;
    private void setGMFGenValidationResult (Diagnostic validationResult);
    private void setMapping (Mapping m, Diagnostic validationResult);
    public Diagnostic getGMFGenValidationResult ();
    public Diagnostic getMapmodelValidationResult ();
    public GenModel findGenmodel () throws CoreException;
    public GenModel getGenModel ();
    public GenModel loadGenModel (URI uri, IProgressMonitor pm) throws CoreException;
    public GenModelDetector getGenModelDetector ();
    public IStatus executeTransformation (IProgressMonitor pm);
    public IStatus getStaleGenmodelStatus ();
    public Mapping loadMappingModel (URI uri, IProgressMonitor pm) throws CoreException;
    public TransformOptions getOptions ();
    public TransformToGenModelOperation (ResourceSet rs) {
    }

    public URI getGenURI ();
    final public ResourceSet getResourceSet ();
    public void setGenURI (URI gmfGen);
    static IStatus getFirst (Diagnostic d);
}

