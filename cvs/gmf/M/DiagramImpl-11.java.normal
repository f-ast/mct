package org.eclipse.gmf.runtime.notation.impl;

public class DiagramImpl extends ViewImpl implements Diagram {

    protected DiagramImpl () {
    }

    protected EClass eStaticClass (); protected EList persistedEdges;
    protected EList transientEdges;
    protected MeasurementUnit measurementUnit = MEASUREMENT_UNIT_EDEFAULT;
    protected String name = NAME_EDEFAULT;
    final protected static EStructuralFeature [] edgesFeatures = new EStructuralFeature [] {NotationPackage.Literals.DIAGRAM__PERSISTED_EDGES, NotationPackage.Literals.DIAGRAM__TRANSIENT_EDGES};
    final protected static MeasurementUnit MEASUREMENT_UNIT_EDEFAULT = MeasurementUnit.HIMETRIC_LITERAL;
    final protected static String NAME_EDEFAULT = "";
    final protected static int MEASUREMENT_UNIT_ESETFLAG = 1 << 11;

    public EList getEdges ();
    public EList getPersistedEdges ();
    public EList getTransientEdges ();
    public Edge createEdge (EClass eClass);
    public MeasurementUnit getMeasurementUnit ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String getName ();
    public String toString ();
    public boolean eIsSet (int featureID);
    public boolean isSetMeasurementUnit ();
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void insertEdge (Edge edge);
    public void insertEdge (Edge edge, boolean persisted);
    public void insertEdgeAt (Edge edge, int index);
    public void persistEdges ();
    public void removeEdge (Edge edge);
    public void setMeasurementUnit (MeasurementUnit newMeasurementUnit);
    public void setName (String newName);
    public void unsetMeasurementUnit ();
}

