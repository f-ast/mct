package org.eclipse.gmf.runtime.diagram.ui.providers;

public class DefaultPaletteProvider extends AbstractProvider implements IPaletteProvider {
    private List contributions = new ArrayList ();
    private String pluginID;

    private static PaletteEntry findChildPaletteEntry (PaletteContainer container, String childId);
    private static PaletteEntry findPaletteEntry (PaletteEntry root, String aPath);
    private static PaletteEntry findPredefinedEntry (Map predefinedEntries, String path); private static class ContributionDescriptor {

        public ContributionDescriptor (IConfigurationElement configElement) {
        }

        public void contribute (Object content, PaletteRoot root, Map predefinedEntries, String pluginID);
    }

    private static class DrawerExpandHelper {

        public DrawerExpandHelper (Boolean force) {
        }

        public DrawerExpandHelper (IConfigurationElement configElement) {
        }

        public boolean expand (Object targetContent);
    }

    private static class EntryDescriptor implements IEntryDescriptor {

        public EntryDescriptor (IConfigurationElement configElement) {
        }

        public String getID ();
        public void contribute (Object content, PaletteRoot root, PaletteFactoryProxy paletteFactory, Map predefinedEntries);
    }

    private static class PaletteFactoryProxy extends PaletteFactory.Adapter {

        public Object getTemplate (String templateId);
        public PaletteFactoryProxy (IConfigurationElement configElement) {
        }

        public Tool createTool (String toolId);
    }

    private static class PredefinedEntryDescriptor implements IEntryDescriptor {

        public PredefinedEntryDescriptor (IConfigurationElement configElement) {
        }

        public String getID ();
        public void contribute (Object content, PaletteRoot root, PaletteFactoryProxy paletteFactory, Map predefinedEntries);
    }

    final private static String CONTENT = "content";
    final private static String CONTRIBUTION = "contribution";
    final private static String DEFINE_ONLY = "defineOnly";
    final private static String DESCRIPTION = "description";
    final private static String DRAWER = "drawer";
    final private static String ENTRY = "entry";
    final private static String EXPAND = "expand";
    final private static String FACTORY_CLASS = "factoryClass";
    final private static String FORCE = "force";
    final private static String FULL = "full";
    final private static String HIDEONLY = "HideOnly";
    final private static String ID = "id";
    final private static String KIND = "kind";
    final private static String LABEL = "label";
    final private static String LARGE_ICON = "large_icon";
    final private static String LIMITED = "limited";
    final private static String NONE = "None";
    final private static String PATH = "path";
    final private static String PREDEFINED_ENTRY = "predefinedEntry";
    final private static String REMOVE = "remove";
    final private static String SEPARATOR = "separator";
    final private static String SMALL_ICON = "small_icon";
    final private static String STACK = "stack";
    final private static String TEMPLATE = "template";
    final private static String TOOL = "tool";
    final private static int ENUM_DRAWER = 0;
    final private static int ENUM_SEPARATOR = 2;
    final private static int ENUM_STACK = 1;
    final private static int ENUM_TEMPLATE = 3;
    final private static int ENUM_TOOL = 4;
    private static interface IEntryDescriptor {

        public String getID ();
        public void contribute (Object content, PaletteRoot root, PaletteFactoryProxy paletteFactory, Map predefinedEntries);
    }

    private static void appendPaletteEntry (PaletteRoot root, Map predefinedEntries, String path, PaletteEntry paletteEntry);
    private static void appendTo (PaletteSeparator separator, PaletteEntry entry);
    public boolean provides (IOperation operation);
    public void contributeToPalette (IEditorPart editor, Object content, PaletteRoot root, Map predefinedEntries);
    public void setContributions (IConfigurationElement configElement);
}

