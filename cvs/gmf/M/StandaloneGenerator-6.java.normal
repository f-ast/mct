package org.eclipse.gmf.graphdef.codegen;

public class StandaloneGenerator extends GeneratorBase {

    private String [] getRequiredBundles ();
    private String getPackageName (); private boolean mySkipPluginStructire;
    final private Config myArgs;
    final private Emitter myFigureGenerator;
    final private FigureGallery [] myInput;
    final private FigureQualifiedNameSwitch myFigureNameSwitch;
    final private GenerationInfoImpl myGenerationInfo;
    final private StandaloneEmitters myAuxiliaryGenerators;

    private static String composeFQN (String packageName, String className);
    private static String composePluginActivatorClassFQN (Config config); private static class FigureGeneratorAdapter implements GeneratorBase.Emitter {

        public FigureGeneratorAdapter (FigureGenerator delegate) {
        }

        public String generate (IProgressMonitor monitor, Object param) throws JETException;
    }

    private static class GenerationInfoImpl implements GenerationInfo {

        public Config getConfig ();
        public Enumeration getProcessedFigures ();
        public GenerationInfoImpl (Config config) {
        }

        public String getGeneratedClassFQN (Figure figure);
        public void registerFQN (Figure figure, String fqn);
    }

    private void generatePluginActivator () throws InterruptedException, UnexpectedBehaviourException;
    private void generatePluginStructure () throws InterruptedException, UnexpectedBehaviourException;
    private void generateTopLevelFigures () throws InterruptedException;
    private void visitFigure (Figure figure) throws InterruptedException;
    protected List createReferencedProjectsList ();
    protected URL getJMergeControlFile ();
    protected void customRun () throws InterruptedException, UnexpectedBehaviourException;
    protected void setupProgressMonitor ();
    public GenerationInfo getGenerationInfo ();
    public StandaloneGenerator (FigureGallery [] input, Config config, FigureQualifiedNameSwitch fqnSwitch) {
    }

    public StandaloneGenerator (FigureGallery input, Config config, FigureQualifiedNameSwitch fqnSwitch) {
    }

    public interface Config {

        public String getMainPackageName ();
        public String getPluginActivatorClassName ();
        public String getPluginActivatorPackageName ();
        public String getPluginFriendlyName ();
        public String getPluginID ();
        public String getPluginProviderName ();
        public boolean needsMapMode ();
    }

    public interface GenerationInfo {

        public Config getConfig ();
        public Enumeration getProcessedFigures ();
        public String getGeneratedClassFQN (Figure figure);
    }

    public static class ConfigImpl implements Config {

        public ConfigImpl (String pluginId, String mainPackageName) {
        }

        public ConfigImpl (String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, boolean needsMapMode) {
        }

        public ConfigImpl (String pluginId, String mainPackageName, boolean useMapMode) {
        }

        public String getMainPackageName ();
        public String getPluginActivatorClassName ();
        public String getPluginActivatorPackageName ();
        public String getPluginFriendlyName ();
        public String getPluginID ();
        public String getPluginProviderName ();
        public boolean needsMapMode ();
    }

    public void setSkipPluginStructure (boolean skipManifest);
}

