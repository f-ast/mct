package org.eclipse.gmf.graphdef.editor.sheet;

public class FigureSection extends AbstractPropertySection implements ChangeTracker, Listener {
    private Button myBackgroundNoRadio;
    private Button myBackgroundPredeinedRadio;
    private Button myBackgroundRgbRadio;
    private Button myFill;
    private Button myFillXor;
    private Button myForegroundNoValueRadio;
    private Button myForegroundPredeinedRadio;
    private Button myForegroundRgbRadio;
    private Button myOutline;
    private Button myOutlineXor;
    private Button myR1;
    private Button myR2;
    private Button myR3;
    private Button myR4;
    private Button myR5;
    private Button myR6;
    private Combo myBackgroundPredefinedColor;
    private Combo myForegroundPredefinedColor;
    private Group myBackgroundColor;
    private Group myBackgroundPredefinedValue;
    private Group myBackgroundRGBValues;
    private Group myCommonStyle;
    private Group myForegroundColor;
    private Group myForegroundPredefinedValue;
    private Group myForegroundRGBValues;
    private Group myRoundedRectStyle;
    private Group myStyleRadios;
    private Object myInput;
    private Spinner myBackgroundBlue;
    private Spinner myBackgroundGreen;
    private Spinner myBackgroundRed;
    private Spinner myCornerHeight;
    private Spinner myCornerWidth;
    private Spinner myForegroundBlue;
    private Spinner myForegroundGreen;
    private Spinner myForegroundRed;
    private Spinner myLineWidth;
    private boolean myIsCommit;
    private boolean myIsRefresh;
    private org.eclipse.emf.common.notify.Adapter [] myModelListeners;

    private org.eclipse.swt.widgets.Group createGroup (org.eclipse.swt.widgets.Composite parent, String label);
    private org.eclipse.swt.widgets.Label createLabel (org.eclipse.swt.widgets.Composite parent, String label);
    private void attach () {
        myModelListeners = new org.eclipse.emf.common.notify.Adapter [] {new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getShape_LineKind (), GMFGraphPackage.eINSTANCE.getShape_LineWidth (), GMFGraphPackage.eINSTANCE.getShape_Fill (), GMFGraphPackage.eINSTANCE.getShape_Outline (), GMFGraphPackage.eINSTANCE.getShape_XorFill (), GMFGraphPackage.eINSTANCE.getShape_XorOutline (), GMFGraphPackage.eINSTANCE.getRoundedRectangle_CornerWidth (), GMFGraphPackage.eINSTANCE.getRoundedRectangle_CornerHeight ()), new AttachAdapter (GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor (), new ChangeTracker () {

            public void modelChanged (org.eclipse.emf.common.notify.Notification n);
        }

        , new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getRGBColor_Red (), GMFGraphPackage.eINSTANCE.getRGBColor_Green (), GMFGraphPackage.eINSTANCE.getRGBColor_Blue (), GMFGraphPackage.eINSTANCE.getConstantColor_Value ())), new AttachAdapter (GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor (), new ChangeTracker () {

            public void modelChanged (org.eclipse.emf.common.notify.Notification n);
        }

        , new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getRGBColor_Red (), GMFGraphPackage.eINSTANCE.getRGBColor_Green (), GMFGraphPackage.eINSTANCE.getRGBColor_Blue (), GMFGraphPackage.eINSTANCE.getConstantColor_Value ()))};
        getInput ().eAdapters ().addAll (java.util.Arrays.asList (myModelListeners));
    }
    private void detach ();
    private void markDirty ();
    protected Figure getInput ();
    protected Object unwrap (Object element);
    protected void applyChanges ();
    protected void commit ();
    protected void discardChanges ();
    public void aboutToBeHidden ();
    public void createControls (Composite parent, TabbedPropertySheetPage page);
    public void handleEvent (Event event);
    public void modelChanged (Notification msg);
    public void refresh ();
    public void setInput (IWorkbenchPart part, ISelection selection);
}

