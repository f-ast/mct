package org.eclipse.gmf.codegen.gmfgen.impl;

public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
    protected Double highLimit = HIGH_LIMIT_EDEFAULT;
    protected Double lowLimit = LOW_LIMIT_EDEFAULT;

    protected EClass eStaticClass (); protected GenMeasurable target;

    protected GenMetricRuleImpl () {
    }

    protected String key = KEY_EDEFAULT;
    protected ValueExpression rule;
    final protected static Double HIGH_LIMIT_EDEFAULT = null;
    final protected static Double LOW_LIMIT_EDEFAULT = null;
    final protected static String KEY_EDEFAULT = null;

    public Double getHighLimit ();
    public Double getLowLimit ();
    public GenMeasurable getTarget ();
    public GenMetricContainer getContainer ();
    public NotificationChain basicSetContainer (GenMetricContainer newContainer, NotificationChain msgs);
    public NotificationChain basicSetTarget (GenMeasurable newTarget, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String getKey ();
    public String toString ();
    public ValueExpression basicGetRule ();
    public ValueExpression getRule ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setContainer (GenMetricContainer newContainer);
    public void setHighLimit (Double newHighLimit);
    public void setKey (String newKey);
    public void setLowLimit (Double newLowLimit);
    public void setRule (ValueExpression newRule);
    public void setTarget (GenMeasurable newTarget);
}

