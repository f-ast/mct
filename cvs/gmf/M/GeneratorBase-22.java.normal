package org.eclipse.gmf.internal.common.codegen;

abstract public class GeneratorBase implements Runnable {

    private CodeFormatter getCodeFormatter (); private CodeFormatter myCodeFormatter;
    private IPackageFragmentRoot myDestRoot;
    private IProgressMonitor myProgress = new NullProgressMonitor ();
    private IProject myDestProject;
    private IStatus myRunStatus = Status.CANCEL_STATUS;

    private OrganizeImportsPostprocessor getImportsPostrocessor (); private OrganizeImportsPostprocessor myImportsPostprocessor;

    private TextMerger getMergeService (); private TextMerger myMerger;
    private boolean isToRestoreExistingImports = true;

    final private IStatus getExceptionsStatus (); final private List < IStatus > myExceptions;

    final private void clearExceptionsList ();
    private void doRun () throws InterruptedException;
    protected String mergeJavaCode (String oldContents, String generatedText, IProgressMonitor pm) throws JavaModelException;
    protected String mergePlainText (String oldText, String genText, IFile oldRes, IProgressMonitor pm);
    protected TextMerger createMergeService ();
    abstract protected void customRun () throws InterruptedException, UnexpectedBehaviourException;
    abstract protected void setupProgressMonitor ();
    final protected IPath guessNewProjectLocation (Path examplaryProjectPath, String newProjectName);
    final protected IProgressMonitor getNextStepMonitor () throws InterruptedException;
    final protected IProgressMonitor getProgress ();
    final protected IProject getDestProject ();
    final protected ImportAssistant createImportAssistant (String packageName, String className);
    final protected String formatCode (String text);
    final protected void doGenerateBinaryFile (BinaryEmitter emitter, Path outputPath, Object [] params) throws InterruptedException, UnexpectedBehaviourException;
    final protected void doGenerateFile (TextEmitter emitter, IPath filePath, Object [] param) throws InterruptedException;
    final protected void doGenerateJavaClass (TextEmitter emitter, String packageName, String className, Object...input) throws InterruptedException;
    final protected void doGenerateJavaClass (TextEmitter emitter, String qualifiedClassName, Object...input) throws InterruptedException;
    final protected void handleException (CoreException ex);
    final protected void handleException (IStatus status);
    final protected void handleException (Throwable ex);
    final protected void initializeEditorProject (String pluginId, IPath projectLocation) throws InterruptedException, UnexpectedBehaviourException;
    final protected void initializeEditorProject (String pluginId, IPath projectLocation, List referencedProjects) throws InterruptedException, UnexpectedBehaviourException;
    final protected void setupProgressMonitor (String task, int total);
    protected static IStatus newStatus (Throwable ex);
    protected static IStatus newStatus (int severity, Throwable ex); final protected static class Counter {

        protected int process (EObject next);
        public Counter () {
        }

        public int getTotal (EObject from);
        public void registerFactor (EClass eClass, int count);
    }

    protected void handleUnexpected (UnexpectedBehaviourException ex);
    protected void setProgressTaskName (String text);
    public GeneratorBase () {
    }

    public IStatus getRunStatus ();
    public void run ();
    public void run (IProgressMonitor progress) throws InterruptedException;
    public void setProgressMonitor (IProgressMonitor progress);
}

