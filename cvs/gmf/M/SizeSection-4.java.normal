package org.eclipse.gmf.graphdef.editor.sheet;

public class SizeSection extends AbstractPropertySection implements ChangeTracker, Listener {
    private Button mySetLocation;
    private Button mySetMaximumSize;
    private Button mySetMinimumSize;
    private Button mySetPreferredSize;

    private Figure getInput (); private Group myLocationGroup;
    private Group myMaximumSizeGroup;
    private Group myMinimumSizeGroup;
    private Group myPreferredSizeGroup;
    private Object myInput;

    private Object unwrap (Object element); private Spinner myLocationX;
    private Spinner myLocationY;
    private Spinner myMaximumSizeX;
    private Spinner myMaximumSizeY;
    private Spinner myMinimumSizeX;
    private Spinner myMinimumSizeY;
    private Spinner myPreferredSizeX;
    private Spinner myPreferredSizeY;
    private boolean myIsCommit;
    private boolean myIsRefresh;
    private org.eclipse.emf.common.notify.Adapter [] myModelListeners;

    private org.eclipse.swt.widgets.Group createGroup (org.eclipse.swt.widgets.Composite parent, String label);
    private org.eclipse.swt.widgets.Label createLabel (org.eclipse.swt.widgets.Composite parent, String label);
    private void attach () {
        myModelListeners = new org.eclipse.emf.common.notify.Adapter [] {new AttachAdapter (GMFGraphPackage.eINSTANCE.getFigure_Location (), new ChangeTracker () {

            public void modelChanged (org.eclipse.emf.common.notify.Notification n);
        }

        , new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getPoint_X (), GMFGraphPackage.eINSTANCE.getPoint_Y ())), new AttachAdapter (GMFGraphPackage.eINSTANCE.getFigure_PreferredSize (), new ChangeTracker () {

            public void modelChanged (org.eclipse.emf.common.notify.Notification n);
        }

        , new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getDimension_Dx (), GMFGraphPackage.eINSTANCE.getDimension_Dy ())), new AttachAdapter (GMFGraphPackage.eINSTANCE.getFigure_MaximumSize (), new ChangeTracker () {

            public void modelChanged (org.eclipse.emf.common.notify.Notification n);
        }

        , new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getDimension_Dx (), GMFGraphPackage.eINSTANCE.getDimension_Dy ())), new AttachAdapter (GMFGraphPackage.eINSTANCE.getFigure_MinimumSize (), new ChangeTracker () {

            public void modelChanged (org.eclipse.emf.common.notify.Notification n);
        }

        , new FeatureTracker (this, GMFGraphPackage.eINSTANCE.getDimension_Dx (), GMFGraphPackage.eINSTANCE.getDimension_Dy ()))};
        getInput ().eAdapters ().addAll (java.util.Arrays.asList (myModelListeners));
    }
    private void detach ();
    private void markDirty ();
    protected void applyChanges ();
    protected void commit ();
    protected void discardChanges ();
    public void aboutToBeHidden ();
    public void createControls (Composite parent, TabbedPropertySheetPage page);
    public void handleEvent (Event event);
    public void modelChanged (Notification msg);
    public void refresh ();
    public void setInput (IWorkbenchPart part, ISelection selection);
}

