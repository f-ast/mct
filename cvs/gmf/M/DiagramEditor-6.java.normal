package org.eclipse.gmf.runtime.lite.parts;

abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
    private CommandStackListener commandStackListener = new CommandStackListener () {

        public void commandStackChanged (EventObject event);
    }

    ;

    private ISelectionListener getSelectionListener (); private ISelectionListener selectionListener = new ISelectionListener () {

        public void selectionChanged (IWorkbenchPart part, ISelection selection);
    }

    ;
    private PaletteRoot paletteRoot;
    private PropertySheetPage undoablePropertySheetPage;
    private TransactionalEditingDomain editingDomain;
    private UpdatableActionGroup editPartActions = new UpdatableActionGroup ();
    private UpdatableActionGroup editorActions = new UpdatableActionGroup ();
    private UpdatableActionGroup stackActions = new UpdatableActionGroup ();

    private ZoomManager getZoomManager (GraphicalViewer viewer); private boolean isDirty = false;
    private static class ForceTrackingModificationAdapter extends AdapterImpl {

        public void notifyChanged (Notification msg);
        public void setTarget (Notifier newTarget);
    }

    private static class UpdatableActionGroup {

        public void addAction (UpdateAction action);
        public void removeAction (UpdateAction action);
        public void update ();
    }

    private void setDirty (boolean dirty);
    protected CommandStackListener getStackActionsListener ();
    protected IContentOutlinePage getOutlinePage ();
    protected IDiagramLayouter getDiagramLayouter ();
    protected PaletteRoot getPaletteRoot ();
    protected PropertySheetPage getPropertySheetPage ();
    protected TransactionalEditingDomain getEditingDomain ();
    protected ZoomManager getZoomManager ();
    abstract protected AdapterFactory getDomainAdapterFactory ();
    abstract protected void configurePalette (PaletteRoot paletteRoot); protected class DiagramContentOutlinePage extends Page implements IContentOutlinePage {
        private Canvas myOverview;
        private ContentOutlinePage myOutlinePage;
        private DisposeListener myDisposeListener;
        private IAction myShowOutlineAction;
        private IAction myShowOverviewAction;
        private PageBook myPageBook;
        private Thumbnail myThumbnail;
        private TreeViewer myTreeViewer;

        protected void configureOutlinePage ();
        protected void configureTreeViewer (TreeViewer treeViewer);
        protected void hookOutlineViewer (TreeViewer viewer);
        protected void initializeOverview ();
        protected void showPage (int pageId);
        protected void unhookOutlineViewer (TreeViewer viewer);
        public Control getControl ();
        public ISelection getSelection ();
        public void addSelectionChangedListener (ISelectionChangedListener listener);
        public void createControl (Composite parent);
        public void dispose ();
        public void init (IPageSite pageSite);
        public void removeSelectionChangedListener (ISelectionChangedListener listener);
        public void setFocus ();
        public void setSelection (ISelection selection);
    }

    protected int getDefaultOutlineViewMode (); final protected static int ID_OUTLINE = 1;
    final protected static int ID_OVERVIEW = 0;

    protected void addAction (IAction action);
    protected void addEditPartAction (SelectionAction action);
    protected void addEditorAction (WorkbenchPartAction action);
    protected void addStackAction (StackAction action);
    protected void firePropertyChange (int propertyId);
    protected void save (IProgressMonitor progressMonitor) throws CoreException;
    public Object getAdapter (Class type);
    public boolean isDirty ();
    public boolean isSaveAsAllowed ();
    final public void createPartControl (Composite parent);
    public void dispose ();
    public void doSaveAs ();
    public void init (IEditorSite site, IEditorInput input) throws PartInitException;
    public void setFocus ();
}

