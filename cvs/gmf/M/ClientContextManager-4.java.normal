package org.eclipse.gmf.runtime.emf.type.core;

final public class ClientContextManager {

    private ClientContextManager () {
    }

    private ExtensionTracker extensionTracker;

    private IClientContext getClientContext (Collection contexts); private IExtensionChangeHandler extensionListener;
    final private Map clientContextMap = new java.util.HashMap ();
    final private Set clientContexts = new java.util.HashSet ();
    final private static ClientContextManager INSTANCE = new ClientContextManager ();
    final private static String A_CONTEXT = "context";
    final private static String A_PATTERN = "pattern";
    final private static String A_REF = "ref";
    final private static String E_ADVICE = "advice";
    final private static String E_BINDING = "binding";
    final private static String E_CLIENT_CONTEXT = "clientContext";
    final private static String E_ELEMENT_TYPE = "elementType";

    private synchronized void configureElementTypeBindings (IConfigurationElement [] elements);
    private void configureBindings (ClientContext context, IConfigurationElement config);
    private void configureBindings (ClientContext context, IConfigurationElement config, String elementName);
    private void configureBindings (IConfigurationElement [] elements);
    private void configureClientContexts (IConfigurationElement [] elements);
    private void startExtensionTracking ();
    public IClientContext getBinding (IEditHelperAdviceDescriptor advice);
    public IClientContext getBinding (IElementType elementType);
    public IClientContext getBinding (IElementTypeDescriptor elementTypeDescriptor);
    public IClientContext getClientContext (String contextId);
    public IClientContext getClientContextFor (EObject eObject);
    public Set getClientContexts ();
    final public static ClientContextManager getInstance ();
    final public static IClientContext getDefaultClientContext (); final public static String ELEMENT_TYPE_BINDINGS_EXT_P_NAME = "elementTypeBindings";

    public void registerClientContext (IClientContext clientContext);
}

