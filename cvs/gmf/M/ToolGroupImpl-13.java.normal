package org.eclipse.gmf.codegen.gmfgen.impl;

public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {

    protected EClass eStaticClass (); protected EList < ToolGroupItem > entries;

    protected ToolGroupImpl () {
    }

    protected boolean collapse = COLLAPSE_EDEFAULT;
    protected boolean stack = STACK_EDEFAULT;
    final protected static boolean COLLAPSE_EDEFAULT = false;
    final protected static boolean STACK_EDEFAULT = false;
    final protected static boolean TOOLS_ONLY_EDEFAULT = false;

    public EList < ToolGroupItem > getEntries ();
    public NotificationChain basicSetGroup (ToolGroup newGroup, NotificationChain msgs);
    public NotificationChain basicSetPalette (Palette newPalette, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public Palette getPalette ();
    public Palette getPaletteGen ();
    public String getCreateMethodName ();
    public String toString ();
    public ToolGroup getGroup ();
    public boolean eIsSet (int featureID);
    public boolean isCollapse ();
    public boolean isStack ();
    public boolean isToolsOnly ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setCollapse (boolean newCollapse);
    public void setGroup (ToolGroup newGroup);
    public void setPalette (Palette newPalette);
    public void setStack (boolean newStack);
}

