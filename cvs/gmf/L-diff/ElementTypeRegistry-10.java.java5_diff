26a27,30
> import org.eclipse.core.runtime.IExtension;
> 
> import org.eclipse.core.runtime.IExtensionPoint;
> 
28a33,38
> import org.eclipse.core.runtime.dynamichelpers.ExtensionTracker;
> 
> import org.eclipse.core.runtime.dynamichelpers.IExtensionChangeHandler;
> 
> import org.eclipse.core.runtime.dynamichelpers.IExtensionTracker;
> 
73a84,85
>     private ExtensionTracker extensionTracker;
>     private IExtensionChangeHandler extensionListener;
82a95
>         startExtensionTracking ();
85a99,128
>     private void startExtensionTracking () {
>         extensionListener = new IExtensionChangeHandler () {
> 
>             public void addExtension (IExtensionTracker tracker, IExtension extension) {
>                 load (extension.getConfigurationElements ());
>             }
> 
>             public void removeExtension (IExtension extension, Object [] objects) {
>             }
> 
>         }
> 
>         ;
>         final IExtensionPoint pt = Platform.getExtensionRegistry ().getExtensionPoint (EMFTypePlugin.getPluginId (), ELEMENT_TYPES_EXT_P_NAME);
>         extensionTracker = new ExtensionTracker ();
>         extensionTracker.registerHandler (extensionListener, ExtensionTracker.createExtensionPointFilter (pt));
>     }
> 
>     private void stopExtensionTracking () {
>         if (extensionTracker != null) {
>             extensionTracker.unregisterHandler (extensionListener);
>             extensionTracker = null;
>             extensionListener = null;
>         }
>     }
> 
>     public void shutdown () {
>         stopExtensionTracking ();
>     }
> 
422c465
<     private void load (IConfigurationElement [] configs) {
---
>     private synchronized void load (IConfigurationElement [] configs) {
