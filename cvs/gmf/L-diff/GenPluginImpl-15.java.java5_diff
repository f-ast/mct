184c184
<         Collection requiredPlugins = new LinkedHashSet ();
---
>         Collection < String > requiredPlugins = new LinkedHashSet < String > ();
203,204c203,204
<     private Set getExpressionsRequiredPluginIDs () {
<         Set requiredIDs = new HashSet ();
---
>     private Set < String > getExpressionsRequiredPluginIDs () {
>         Set < String > requiredIDs = new HashSet < String > ();
215,216c215,216
<     private Collection getViewmapRequiredPluginIDs () {
<         Collection result = null;
---
>     private Collection < String > getViewmapRequiredPluginIDs () {
>         Collection < String > result = null;
222c222
<                     result = new HashSet ();
---
>                     result = new HashSet < String > ();
228c228,231
<         return result == null ? Collections.EMPTY_LIST : result;
---
>         if (result == null) {
>             return Collections.emptyList ();
>         }
>         return result;
231c234
<     private Set getValidationRequiredPluginIDs () {
---
>     private Set < String > getValidationRequiredPluginIDs () {
233c236
<             HashSet pluginIDs = new HashSet ();
---
>             HashSet < String > pluginIDs = new HashSet < String > ();
236c239
<                 collectGenPackagesRequiredPluginIDs (getEditorGen ().getAudits ().getAllTargetedModelPackages (), pluginIDs);
---
>                 collectGenPackagesRequiredPluginIDs (getEditorGen ().getAudits ().getTargetedModelPackages (), pluginIDs);
240c243
<         return Collections.EMPTY_SET;
---
>         return Collections.emptySet ();
243c246
<     private Set getMetricsRequiredPluginIDs () {
---
>     private Set < String > getMetricsRequiredPluginIDs () {
245c248
<             HashSet pluginIDs = new HashSet ();
---
>             HashSet < String > pluginIDs = new HashSet < String > ();
249c252
<         return Collections.EMPTY_SET;
---
>         return Collections.emptySet ();
252,255c255,256
<     private void collectGenPackagesRequiredPluginIDs (Collection genPackages, Set pluginIDs) {
<         for (Iterator it = genPackages.iterator ();
<         it.hasNext ();) {
<             GenPackage nextPackage = (GenPackage) it.next ();
---
>     private void collectGenPackagesRequiredPluginIDs (Collection < GenPackage > genPackages, Set < String > pluginIDs) {
>         for (GenPackage nextPackage : genPackages) {
