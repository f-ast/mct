7,10d6
< import org.eclipse.core.runtime.IAdaptable;
< 
< import org.eclipse.core.runtime.IProgressMonitor;
< 
17,18d12
< import org.eclipse.emf.ecore.EAnnotation;
< 
21c15
< import org.eclipse.emf.ecore.EcoreFactory;
---
> import org.eclipse.gmf.graphdef.editor.edit.commands.GMFGraphCreateShortcutDecorationsCommand;
25c19
< import org.eclipse.gmf.runtime.common.core.command.CommandResult;
---
> import org.eclipse.gmf.runtime.common.core.command.ICommand;
78,94c72,73
<         CreateCommand command = new CreateCommand (mySelectedElement.getEditingDomain (), viewDescriptor, view) {
< 
<             protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
<                 CommandResult result = super.doExecuteWithResult (monitor, info);
<                 View view = (View) ((IAdaptable) result.getReturnValue ()).getAdapter (View.class);
<                 if (view != null && view.getEAnnotation ("Shortcut") == null) {
<                     EAnnotation shortcutAnnotation = EcoreFactory.eINSTANCE.createEAnnotation ();
<                     shortcutAnnotation.setSource ("Shortcut");
<                     shortcutAnnotation.getDetails ().put ("modelID", CanvasEditPart.MODEL_ID);
<                     view.getEAnnotations ().add (shortcutAnnotation);
<                 }
<                 return result;
<             }
< 
<         }
< 
<         ;
---
>         ICommand command = new CreateCommand (mySelectedElement.getEditingDomain (), viewDescriptor, view);
>         command = command.compose (new GMFGraphCreateShortcutDecorationsCommand (mySelectedElement.getEditingDomain (), view, viewDescriptor));
