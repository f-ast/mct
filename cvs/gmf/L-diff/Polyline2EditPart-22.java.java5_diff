75c75,83
<         DefaultSizeNodeFigure result = new DefaultSizeNodeFigure (getMapMode ().DPtoLP (0), getMapMode ().DPtoLP (0));
---
>         DefaultSizeNodeFigure result = new DefaultSizeNodeFigure (getMapMode ().DPtoLP (0), getMapMode ().DPtoLP (0)) {
> 
>             protected boolean useLocalCoordinates () {
>                 return true;
>             }
> 
>         }
> 
>         ;
102,104c110
<         if (NotationPackage.eINSTANCE.getSize_Width ().equals (feature) || NotationPackage.eINSTANCE.getSize_Height ().equals (feature) || NotationPackage.eINSTANCE.getLocation_X ().equals (feature) || NotationPackage.eINSTANCE.getLocation_Y ().equals (feature)) {
<             return;
<         } else if (NotationPackage.eINSTANCE.getFillStyle_FillColor ().equals (feature)) {
---
>         if (NotationPackage.eINSTANCE.getFillStyle_FillColor ().equals (feature)) {
136a143,148
>             getPrimaryShape ().setOutline (modelElement.isOutline ());
>             getPrimaryShape ().setFill (modelElement.isFill ());
>             getPrimaryShape ().setLineWidth (modelElement.getLineWidth ());
>             getPrimaryShape ().setLineStyle (getLineStyle (modelElement.getLineKind ()));
>             getPrimaryShape ().setFillXOR (modelElement.isXorFill ());
>             getPrimaryShape ().setOutlineXOR (modelElement.isXorOutline ());
141a154
>             getPrimaryShape ().setPoints (getPointList (modelElement.getTemplate ()));
153a167,226
>         ChangeTracker outlineTracker = new ChangeTracker () {
> 
>             public void modelChanged (Notification msg) {
>                 getPrimaryShape ().setOutline (modelElement.isOutline ());
>             }
> 
>         }
> 
>         ;
>         myDomainElementAdapters.add (new FeatureTracker (outlineTracker, GMFGraphPackage.eINSTANCE.getShape_Outline ()));
>         ChangeTracker fillTracker = new ChangeTracker () {
> 
>             public void modelChanged (Notification msg) {
>                 getPrimaryShape ().setFill (modelElement.isFill ());
>             }
> 
>         }
> 
>         ;
>         myDomainElementAdapters.add (new FeatureTracker (fillTracker, GMFGraphPackage.eINSTANCE.getShape_Fill ()));
>         ChangeTracker lineWidthTracker = new ChangeTracker () {
> 
>             public void modelChanged (Notification msg) {
>                 getPrimaryShape ().setLineWidth (modelElement.getLineWidth ());
>             }
> 
>         }
> 
>         ;
>         myDomainElementAdapters.add (new FeatureTracker (lineWidthTracker, GMFGraphPackage.eINSTANCE.getShape_LineWidth ()));
>         ChangeTracker lineStyleTracker = new ChangeTracker () {
> 
>             public void modelChanged (Notification msg) {
>                 getPrimaryShape ().setLineStyle (getLineStyle (modelElement.getLineKind ()));
>             }
> 
>         }
> 
>         ;
>         myDomainElementAdapters.add (new FeatureTracker (lineStyleTracker, GMFGraphPackage.eINSTANCE.getShape_LineKind ()));
>         ChangeTracker fillXORTracker = new ChangeTracker () {
> 
>             public void modelChanged (Notification msg) {
>                 getPrimaryShape ().setFillXOR (modelElement.isXorFill ());
>             }
> 
>         }
> 
>         ;
>         myDomainElementAdapters.add (new FeatureTracker (fillXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorFill ()));
>         ChangeTracker outlineXORTracker = new ChangeTracker () {
> 
>             public void modelChanged (Notification msg) {
>                 getPrimaryShape ().setOutlineXOR (modelElement.isXorOutline ());
>             }
> 
>         }
> 
>         ;
>         myDomainElementAdapters.add (new FeatureTracker (outlineXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorOutline ()));
196,198c269
<         modelElement.eAdapters ().addAll (myDomainElementAdapters);
<         super.activate ();
<     }
---
>         ChangeTracker pointsTracker = new ChangeTracker () {
200,206c271,272
<     protected void refreshBounds () {
<         org.eclipse.gmf.gmfgraph.Polyline modelElement = (org.eclipse.gmf.gmfgraph.Polyline) getModelFigureElement ();
<         if (modelElement == null) {
<             return;
<         }
<         if (modelElement.getPreferredSize () != null) {
<             getFigure ().setPreferredSize (getDraw2dDimension (modelElement.getPreferredSize ()));
---
>             public void modelChanged (Notification msg) {
>                 getPrimaryShape ().setPoints (getPointList (modelElement.getTemplate ()));
208,209c274
<         if (modelElement.getLocation () != null) {
<             getFigure ().setLocation (getDraw2DPoint (modelElement.getLocation ()));
---
> 
210a276,280
> 
>         ;
>         myDomainElementAdapters.add (new AttachAdapter (GMFGraphPackage.eINSTANCE.getPolyline_Template (), pointsTracker, new FeatureTracker (pointsTracker, GMFGraphPackage.eINSTANCE.getPoint_X ()), new FeatureTracker (pointsTracker, GMFGraphPackage.eINSTANCE.getPoint_Y ())));
>         modelElement.eAdapters ().addAll (myDomainElementAdapters);
>         super.activate ();
