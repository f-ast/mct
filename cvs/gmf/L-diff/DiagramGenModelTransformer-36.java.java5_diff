9,10d8
< import java.util.HashSet;
< 
19,20d16
< import java.util.Set;
< 
150c146
<     private final Set < org.eclipse.gmf.mappings.ValueExpression > myProcessedExpressions = new HashSet < org.eclipse.gmf.mappings.ValueExpression > ();
---
>     private final Map < org.eclipse.gmf.mappings.ValueExpression, ValueExpression > myProcessedExpressions;
173a170
>         myProcessedExpressions = new HashMap < org.eclipse.gmf.mappings.ValueExpression, ValueExpression > ();
775,776d771
<             genFeatureValSpec.setBody (featureValSpec.getValue ().getBody ());
<             genFeatureValSpec.setLanguage (createGenLanguage (featureValSpec.getValue ().getLanguage ()));
778c773,775
<             bindToProvider (featureValSpec.getValue (), genFeatureValSpec);
---
>             ValueExpression value = GMFGenFactory.eINSTANCE.createValueExpression ();
>             value.setBody (featureValSpec.getValue ().getBody ());
>             genFeatureValSpec.setValue (bindToProvider (featureValSpec.getValue (), value));
795c792
<     private static GenLanguage createGenLanguage (Language mapLang) {
---
>     private static GenLanguage detectGenLanguage (Language mapLang) {
815,819c812,814
<         GenConstraint modelElementSelector = GMFGenFactory.eINSTANCE.createGenConstraint ();
<         modelElementSelector.setBody (constraint.getBody ());
<         modelElementSelector.setLanguage (createGenLanguage (constraint.getLanguage ()));
<         bindToProvider (constraint, modelElementSelector);
<         return modelElementSelector;
---
>         GenConstraint genConstraint = GMFGenFactory.eINSTANCE.createGenConstraint ();
>         genConstraint.setBody (constraint.getBody ());
>         return bindToProvider (constraint, genConstraint);
988,990c983
<             valueExpression.setLanguage (createGenLanguage (metric.getRule ().getLanguage ()));
<             bindToProvider (metric.getRule (), valueExpression);
<             genMetric.setRule (valueExpression);
---
>             genMetric.setRule (bindToProvider (metric.getRule (), valueExpression));
1003,1005c996,1000
<     private void bindToProvider (org.eclipse.gmf.mappings.ValueExpression expression, ValueExpression genExpression) {
<         if (! myProcessedExpressions.add (expression)) {
<             return;
---
>     private < T extends ValueExpression > T bindToProvider (org.eclipse.gmf.mappings.ValueExpression expression, T genExpression) {
>         if (myProcessedExpressions.containsKey (expression)) {
>             @SuppressWarnings("unchecked")
>             T reuse = (T) myProcessedExpressions.get (expression);
>             return reuse;
1007c1002
<         GenLanguage language = genExpression.getLanguage ();
---
>         GenLanguage language = detectGenLanguage (expression.getLanguage ());
1009c1004
<             return;
---
>             return genExpression;
1025,1027d1019
<             if (provider == null) {
<                 return;
<             }
1030a1023,1024
>         myProcessedExpressions.put (expression, genExpression);
>         return genExpression;
1044a1039,1040
>         } else {
>             newProvider = GMFGenFactory.eINSTANCE.createGenExpressionInterpreter ();
1046a1043
>         assert newProvider != null;
