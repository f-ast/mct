10a11,12
> import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
> 
22a25,32
> import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
> 
> import org.eclipse.emf.edit.provider.ViewerNotification;
> 
> import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider;
> 
32a43,44
>             addThrowExceptionPropertyDescriptor (object);
>             addInjectExpressionBodyPropertyDescriptor (object);
36a49,56
>     protected void addThrowExceptionPropertyDescriptor (Object object) {
>         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenJavaExpressionProvider_throwException_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenJavaExpressionProvider_throwException_feature", "_UI_GenJavaExpressionProvider_type"), GMFGenPackage.eINSTANCE.getGenJavaExpressionProvider_ThrowException (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
>     }
> 
>     protected void addInjectExpressionBodyPropertyDescriptor (Object object) {
>         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenJavaExpressionProvider_injectExpressionBody_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenJavaExpressionProvider_injectExpressionBody_feature", "_UI_GenJavaExpressionProvider_type"), GMFGenPackage.eINSTANCE.getGenJavaExpressionProvider_InjectExpressionBody (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
>     }
> 
44c64,65
<         return getString ("_UI_GenJavaExpressionProvider_type");
---
>         GenJavaExpressionProvider genJavaExpressionProvider = (GenJavaExpressionProvider) object;
>         return getString ("_UI_GenJavaExpressionProvider_type") + " " + genJavaExpressionProvider.isThrowException ();
49a71,76
>         switch (notification.getFeatureID (GenJavaExpressionProvider.class)) {
>             case GMFGenPackage.GEN_JAVA_EXPRESSION_PROVIDER__THROW_EXCEPTION :
>             case GMFGenPackage.GEN_JAVA_EXPRESSION_PROVIDER__INJECT_EXPRESSION_BODY :
>                 fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
>                 return;
>         }
