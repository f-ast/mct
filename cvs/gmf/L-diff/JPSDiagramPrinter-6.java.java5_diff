4a5,6
> import java.awt.Graphics2D;
> 
64a67,68
> import org.eclipse.draw2d.SWTGraphics;
> 
138a143,146
> import org.eclipse.swt.graphics.GC;
> 
> import org.eclipse.swt.graphics.Image;
> 
283,294c291,292
<             swtGraphics = new GraphicsToGraphics2DAdaptor ((java.awt.Graphics2D) printGraphics, new Rectangle (0, 0, (int) pageFormat.getWidth (), (int) pageFormat.getHeight ())) {
< 
<                 public void setLineWidth (int width) {
<                     super.setLineWidth (width);
<                     BasicStroke scaledStroke = getStroke ();
<                     scaledStroke = new BasicStroke ((float) (width * AWT_DPI_CONST / 100), scaledStroke.getEndCap (), scaledStroke.getLineJoin (), scaledStroke.getMiterLimit (), scaledStroke.getDashArray (), 0);
<                     getGraphics2D ().setStroke (scaledStroke);
<                 }
< 
<             }
< 
<             ;
---
>             printGraphics.setClip (0, 0, (int) pageFormat.getWidth (), (int) pageFormat.getHeight ());
>             swtGraphics = new PrinterGraphicsToGraphics2DAdapter ((java.awt.Graphics2D) printGraphics, new Rectangle (0, 0, (int) pageFormat.getWidth (), (int) pageFormat.getHeight ()));
358,378d355
<         if (advancedOptions.isQualityLow ()) {
<             printRequestAttributeSet.add (PrintQuality.DRAFT);
<         } else if (advancedOptions.isQualityMed ()) {
<             printRequestAttributeSet.add (PrintQuality.NORMAL);
<         } else if (advancedOptions.isQualityHigh ()) {
<             printRequestAttributeSet.add (PrintQuality.HIGH);
<         }
< 
<         if (advancedOptions.isSideDuplex ()) {
<             printRequestAttributeSet.add (Sides.DUPLEX);
<         } else if (advancedOptions.isSideOneSided ()) {
<             printRequestAttributeSet.add (Sides.ONE_SIDED);
<         } else if (advancedOptions.isSideTumble ()) {
<             printRequestAttributeSet.add (Sides.TUMBLE);
<         }
< 
<         if (advancedOptions.isChromaticityColor ()) {
<             printRequestAttributeSet.add (Chromaticity.COLOR);
<         } else {
<             printRequestAttributeSet.add (Chromaticity.MONOCHROME);
<         }
381c358
<         printRequestAttributeSet.add (new MediaPrintableArea ((float) 0.0, (float) 0.0, (mediaSize.getX (MediaSize.INCH)), (mediaSize.getY (MediaSize.INCH)), MediaPrintableArea.INCH));
---
>         printRequestAttributeSet.add (new MediaPrintableArea (0f, 0f, (mediaSize.getX (MediaSize.INCH)), (mediaSize.getY (MediaSize.INCH)), MediaPrintableArea.INCH));
452a430,457
>     private class PrinterGraphicsToGraphics2DAdapter extends GraphicsToGraphics2DAdaptor {
> 
>         public PrinterGraphicsToGraphics2DAdapter (Graphics2D graphics, Rectangle viewPort) {
>             super (graphics, viewPort);
>         }
> 
>         public void setLineWidth (int width) {
>             super.setLineWidth (width);
>             BasicStroke scaledStroke = getStroke ();
>             scaledStroke = new BasicStroke ((float) (width * AWT_DPI_CONST / 100), scaledStroke.getEndCap (), scaledStroke.getLineJoin (), scaledStroke.getMiterLimit (), scaledStroke.getDashArray (), 0);
>             getGraphics2D ().setStroke (scaledStroke);
>         }
> 
>         public void fillGradient (int x, int y, int w, int h, boolean vertical) {
>             Image tempImage = new Image (Display.getDefault (), new org.eclipse.swt.graphics.Rectangle (x, y, w, h));
>             GC gc = new GC (tempImage);
>             SWTGraphics tempGraphics = new SWTGraphics (gc);
>             tempGraphics.setForegroundColor (swtGraphics.getForegroundColor ());
>             tempGraphics.setBackgroundColor (swtGraphics.getBackgroundColor ());
>             tempGraphics.fillGradient (new org.eclipse.draw2d.geometry.Rectangle (0, 0, w, h), vertical);
>             drawImage (tempImage, 0, 0, w, h, x, y, w, h);
>             tempGraphics.dispose ();
>             gc.dispose ();
>             tempImage.dispose ();
>         }
> 
>     }
> 
