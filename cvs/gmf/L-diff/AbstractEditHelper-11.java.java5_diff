91c91,97
<         ICommand command = getEditCommand (req);
---
>         IEditHelperAdvice [] advice = getEditHelperAdvice (req);
>         configureRequest (req, advice);
>         boolean approved = approveRequest (req, advice);
>         if (! approved) {
>             return false;
>         }
>         ICommand command = getEditCommand (req, advice);
96d101
<         ICompositeCommand command = createCommand (req);
97a103,112
>         configureRequest (req, advice);
>         boolean approved = approveRequest (req, advice);
>         if (! approved) {
>             return null;
>         }
>         return getEditCommand (req, advice);
>     }
> 
>     private ICommand getEditCommand (IEditCommandRequest req, IEditHelperAdvice [] advice) {
>         ICompositeCommand command = createCommand (req);
136a152,183
>     private void configureRequest (IEditCommandRequest req, IEditHelperAdvice [] advice) {
>         if (advice != null) {
>             for (int i = 0;
>             i < advice.length; i ++) {
>                 IEditHelperAdvice nextAdvice = advice [i];
>                 nextAdvice.configureRequest (req);
>             }
>         }
>         configureRequest (req);
>     }
> 
>     private boolean approveRequest (IEditCommandRequest req, IEditHelperAdvice [] advice) {
>         if (advice != null) {
>             for (int i = 0;
>             i < advice.length; i ++) {
>                 IEditHelperAdvice nextAdvice = advice [i];
>                 boolean approved = nextAdvice.approveRequest (req);
>                 if (! approved) {
>                     return false;
>                 }
>             }
>         }
>         return approveRequest (req);
>     }
> 
>     protected void configureRequest (IEditCommandRequest request) {
>     }
> 
>     protected boolean approveRequest (IEditCommandRequest request) {
>         return true;
>     }
> 
