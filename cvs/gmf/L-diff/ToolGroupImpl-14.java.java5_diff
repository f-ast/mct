56,76d55
<     public NotificationChain basicSetGroup (ToolGroup newGroup, NotificationChain msgs) {
<         msgs = eBasicSetContainer ((InternalEObject) newGroup, GMFGenPackage.TOOL_GROUP__GROUP, msgs);
<         return msgs;
<     }
< 
<     public void setGroup (ToolGroup newGroup) {
<         if (newGroup != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.TOOL_GROUP__GROUP && newGroup != null)) {
<             if (EcoreUtil.isAncestor (this, newGroup)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
< 
<             NotificationChain msgs = null;
<             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
< 
<             if (newGroup != null) msgs = ((InternalEObject) newGroup).eInverseAdd (this, GMFGenPackage.TOOL_GROUP__ENTRIES, ToolGroup.class, msgs);
< 
<             msgs = basicSetGroup (newGroup, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TOOL_GROUP__GROUP, newGroup, newGroup));
< 
<     }
< 
135c114
<                 return basicSetGroup ((ToolGroup) otherEnd, msgs);
---
>                 return eBasicSetContainer (otherEnd, GMFGenPackage.TOOL_GROUP__GROUP, msgs);
172c151
<                 return basicSetGroup (null, msgs);
---
>                 return eBasicSetContainer (null, GMFGenPackage.TOOL_GROUP__GROUP, msgs);
215,217d193
<             case GMFGenPackage.TOOL_GROUP__GROUP :
<                 setGroup ((ToolGroup) newValue);
<                 return;
238,240d213
<             case GMFGenPackage.TOOL_GROUP__GROUP :
<                 setGroup ((ToolGroup) null);
<                 return;
