32d31
<     private final GMFGenPackage GMFGEN = GMFGenPackage.eINSTANCE;
34a34
>         final GMFGenPackage GMFGEN = GMFGenPackage.eINSTANCE;
91c91
<         preserveIfSet (GMFGEN.getGenCompartment (), GMFGEN.getGenCompartment_ListLayout ());
---
>         restore (GMFGEN.getGenCompartment (), GMFGEN.getGenCompartment_ListLayout ());
104,115c104
<         addDecision (GMFGEN.getGenLink (), new Decision (GMFGEN.getGenLink_TreeBranch ()) {
< 
<             @Override
<             public void apply (EObject current, EObject old) {
<                 if (! ((GenLink) old).isTreeBranch ()) {
<                     ((GenLink) current).setTreeBranch (false);
<                 }
<             }
< 
<         }
< 
<         );
---
>         preserveIfSet (GMFGEN.getGenLink (), GMFGEN.getGenLink_TreeBranch ());
167c156
<         preserveIfSet (GMFGEN.getGenCustomPropertyTab (), GMFGEN.getGenPropertyTab_Label ());
---
>         addDecision (GMFGEN.getGenCustomPropertyTab (), new KeepOldIfNewIsByPatternOrNotSet (GMFGEN.getGenPropertyTab_Label (), "^Core$"));
208,213c197,198
<                 if (false == current instanceof GenStandardPreferencePage) {
<                     return false;
<                 }
<                 if (false == old instanceof GenStandardPreferencePage) {
<                     return false;
<                 }
---
>                 assert current instanceof GenStandardPreferencePage;
>                 assert old instanceof GenStandardPreferencePage;
227a213,216
>         setMatcher (GMFGEN.getDynamicModelAccess (), ALWAYS_MATCH);
>         preserveIfSet (GMFGEN.getDynamicModelAccess (), GMFGEN.getDynamicModelAccess_ClassName ());
>         preserveIfSet (GMFGEN.getDynamicModelAccess (), GMFGEN.getDynamicModelAccess_PackageName ());
>         setCopier (GMFGEN.getDynamicModelAccess (), Copier.COMPLETE_COPY);
