6a7,8
> import org.eclipse.gmf.runtime.notation.Diagram;
> 
8a11,12
> import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
> 
74a79,80
> import org.eclipse.jface.viewers.ISelection;
> 
76a83,84
> import org.eclipse.jface.viewers.StructuredSelection;
> 
100a109,110
> import org.eclipse.ui.navigator.resources.ProjectExplorer;
> 
102a113,116
> import org.eclipse.ui.part.IShowInTargetList;
> 
> import org.eclipse.ui.part.ShowInContext;
> 
128a143,157
>     public Object getAdapter (Class type) {
>         if (type == IShowInTargetList.class) {
>             return new IShowInTargetList () {
> 
>                 public String [] getShowInTargetIds () {
>                     return new String [] {ProjectExplorer.VIEW_ID};
>                 }
> 
>             }
> 
>             ;
>         }
>         return super.getAdapter (type);
>     }
> 
178c207
<             String message = NLS.bind ("The original file ''{0}'' has been deleted.", original.getName ());
---
>             String message = NLS.bind (Messages.GMFGraphDiagramEditor_SavingDeletedFile, original.getName ());
203c232
<                 MessageDialog.openWarning (shell, "Problem During Save As...", "Save could not be completed. Target file is already open in another editor.");
---
>                 MessageDialog.openWarning (shell, Messages.GMFGraphDiagramEditor_SaveAsErrorTitle, Messages.GMFGraphDiagramEditor_SaveAsErrorMessage);
215c244
<                 ErrorDialog.openError (shell, "Save Problems", "Could not save file.", x.getStatus ());
---
>                 ErrorDialog.openError (shell, Messages.GMFGraphDiagramEditor_SaveErrorTitle, Messages.GMFGraphDiagramEditor_SaveErrorMessage, x.getStatus ());
227a257,274
>     public ShowInContext getShowInContext () {
>         return new ShowInContext (getEditorInput (), getNavigatorSelection ());
>     }
> 
>     private ISelection getNavigatorSelection () {
>         IDiagramDocument document = getDiagramDocument ();
>         if (document == null) {
>             return StructuredSelection.EMPTY;
>         }
>         Diagram diagram = document.getDiagram ();
>         IFile file = WorkspaceSynchronizer.getFile (diagram.eResource ());
>         if (file != null) {
>             GMFGraphNavigatorItem item = new GMFGraphNavigatorItem (diagram, file, false);
>             return new StructuredSelection (item);
>         }
>         return StructuredSelection.EMPTY;
>     }
> 
