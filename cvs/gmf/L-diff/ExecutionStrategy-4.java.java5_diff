9,10d8
< import java.util.Iterator;
< 
13,14d10
< import java.util.ListIterator;
< 
25d20
<             List results = Collections.EMPTY_LIST;
27,31c22,25
<             i < PRIORITIES.length; i ++) {
<                 List targets = getProviders (service, this, PRIORITIES [i], operation);
<                 if (! targets.isEmpty ()) {
<                     results = Collections.singletonList (operation.execute ((IProvider) targets.get (0)));
<                     break;
---
>             i < PRIORITIES.length; ++ i) {
>                 List providers = service.getProviders (this, PRIORITIES [i], operation);
>                 if (providers.size () != 0) {
>                     return Collections.singletonList (operation.execute ((IProvider) providers.get (0)));
34c28
<             return results;
---
>             return Collections.EMPTY_LIST;
38,41c32,36
<             List providers = getProviders (service, priority);
<             for (ListIterator i = providers.listIterator ();
<             i.hasNext ();) {
<                 ProviderDescriptor descriptor = (ProviderDescriptor) i.next ();
---
>             List descriptors = service.getProviders (priority);
>             int size = descriptors.size ();
>             for (int i = 0;
>             i < size; ++ i) {
>                 ProviderDescriptor descriptor = (ProviderDescriptor) descriptors.get (i);
55,59c50,53
<             List results = Collections.EMPTY_LIST;
<             for (int i = PRIORITIES.length - 1;
<             i >= 0; i --) {
<                 List targets = getProviders (service, this, PRIORITIES [i], operation);
<                 int size = targets.size ();
---
>             for (int i = PRIORITIES.length;
>             -- i >= 0;) {
>                 List providers = service.getProviders (this, PRIORITIES [i], operation);
>                 int size = providers.size ();
61,62c55
<                     results = Collections.singletonList (operation.execute ((IProvider) targets.get (size - 1)));
<                     break;
---
>                     return Collections.singletonList (operation.execute ((IProvider) providers.get (size - 1)));
65c58
<             return results;
---
>             return Collections.EMPTY_LIST;
69,72c62,65
<             List providers = getProviders (service, priority);
<             for (ListIterator i = providers.listIterator (providers.size ());
<             i.hasPrevious ();) {
<                 ProviderDescriptor descriptor = (ProviderDescriptor) i.previous ();
---
>             List descriptors = service.getProviders (priority);
>             for (int i = descriptors.size ();
>             -- i >= 0;) {
>                 ProviderDescriptor descriptor = (ProviderDescriptor) descriptors.get (i);
88,89c81,83
<             i < PRIORITIES.length; i ++) {
<                 List targets = getProviders (service, this, PRIORITIES [i], operation);
---
>             i < PRIORITIES.length; ++ i) {
>                 List providers = service.getProviders (this, PRIORITIES [i], operation);
>                 int size = providers.size ();
91,92c85,86
<                 j < targets.size (); j ++) {
<                     results.add (operation.execute ((IProvider) targets.get (j)));
---
>                 j < size; ++ j) {
>                     results.add (operation.execute ((IProvider) providers.get (j)));
105,110c99,104
<             for (int i = PRIORITIES.length - 1;
<             i >= 0; i --) {
<                 List targets = getProviders (service, this, PRIORITIES [i], operation);
<                 for (int j = targets.size () - 1;
<                 j >= 0; j --) {
<                     results.add (operation.execute ((IProvider) targets.get (j)));
---
>             for (int i = PRIORITIES.length;
>             -- i >= 0;) {
>                 List providers = service.getProviders (this, PRIORITIES [i], operation);
>                 for (int j = providers.size ();
>                 -- j >= 0;) {
>                     results.add (operation.execute ((IProvider) providers.get (j)));
136,139c130,135
<         List targets = new ArrayList ();
<         for (Iterator i = getProviders (service, priority).iterator ();
<         i.hasNext ();) {
<             ProviderDescriptor descriptor = (ProviderDescriptor) i.next ();
---
>         List descriptors = service.getProviders (priority);
>         int size = descriptors.size ();
>         List providers = new ArrayList (size);
>         for (int i = 0;
>         i < size; ++ i) {
>             ProviderDescriptor descriptor = (ProviderDescriptor) descriptors.get (i);
141c137
<                 targets.add (descriptor.getProvider ());
---
>                 providers.add (descriptor.getProvider ());
144c140
<         return targets;
---
>         return providers;
