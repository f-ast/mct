2a3,4
> import java.io.BufferedReader;
> 
6a9,10
> import java.io.InputStreamReader;
> 
8a13,14
> import java.util.ArrayList;
> 
42a49,50
>     private long configStamp = IResource.NULL_STAMP;
>     private IPath [] configuredRoots;
89,92c97,103
<         IPath p = new Path (fqn.replaceAll (SyntaxConstants.NS_DELIM, "/")).addFileExtension (ext);
<         IResource r = contextProject.findMember (p);
<         if (r == null) {
<             r = contextProject.findMember (new Path ("templates/").append (p));
---
>         IPath fp = new Path (fqn.replaceAll (SyntaxConstants.NS_DELIM, "/")).addFileExtension (ext);
>         IResource r = null;
>         for (IPath p : getResolutions (fp)) {
>             r = contextProject.findMember (p);
>             if (r != null) {
>                 break;
>             }
95c106
<             throw new FileNotFoundException (p.toString ());
---
>             throw new FileNotFoundException (fp.toString ());
105a117,161
>     private IPath [] getResolutions (IPath p) {
>         IPath [] configured = getConfiguredRoots ();
>         IPath [] rv = new IPath [configured.length + 1];
>         rv [0] = p;
>         for (int i = 0;
>         i < configured.length; i ++) {
>             rv [i + 1] = configured [i].append (p);
>         }
>         return rv;
>     }
> 
>     private IPath [] getConfiguredRoots () {
>         IFile config = contextProject.getFile (".xpand-root");
>         if (! config.exists ()) {
>             return new IPath [] {new Path ("templates/")};
>         }
>         if (config.getModificationStamp () != configStamp) {
>             configuredRoots = new IPath [0];
>             final ArrayList < IPath > read = new ArrayList < IPath > ();
>             BufferedReader in = null;
>             try {
>                 in = new BufferedReader (new InputStreamReader (config.getContents (), config.getCharset ()));
>                 String line;
>                 while ((line = in.readLine ()) != null) {
>                     line = line.trim ();
>                     if (line.length () > 0 && line.charAt (0) != '#') {
>                         read.add (new Path (line));
>                     }
>                 }
>             } catch (CoreException ex) {
>             } catch (IOException ex) {
>             } finally {
>                 if (in != null) {
>                     try {
>                         in.close ();
>                     } catch (IOException ex) {
>                     }
>                 }
>             }
>             configuredRoots = read.toArray (new IPath [read.size ()]);
>             configStamp = config.getModificationStamp ();
>         }
>         return configuredRoots;
>     }
> 
