7,10d6
< import org.eclipse.draw2d.geometry.PrecisionPoint;
< 
< import org.eclipse.draw2d.geometry.PrecisionRectangle;
< 
54,55c50,51
<         origin = ptStart.getCopy ();
<         terminus = ptEnd.getCopy ();
---
>         origin = new Point (ptStart);
>         terminus = new Point (ptEnd);
98c94
<         return origin.getCopy ();
---
>         return new Point (origin);
102c98
<         return terminus.getCopy ();
---
>         return new Point (terminus);
106c102
<         this.origin = origin.getCopy ();
---
>         this.origin = new Point (origin);
110c106
<         this.terminus = terminus.getCopy ();
---
>         this.terminus = new Point (terminus);
165,168c161,163
<         double lengthOfSegment = Math.sqrt ((origin.x - terminus.x) * (origin.x - terminus.x) + (origin.y - terminus.y) * (origin.y - terminus.y));
<         double lengthFromOriginToPoint = Math.sqrt ((origin.x - aPoint.x) * (origin.x - aPoint.x) + (origin.y - aPoint.y) * (origin.y - aPoint.y));
<         double lengthFromTerminusToPoint = Math.sqrt ((terminus.x - aPoint.x) * (terminus.x - aPoint.x) + (terminus.y - aPoint.y) * (terminus.y - aPoint.y));
<         return lengthFromTerminusToPoint + lengthFromOriginToPoint - lengthOfSegment < tolerance;
---
>         Point theOrigin = getOrigin ();
>         Point theTerminus = getTerminus ();
>         return (theOrigin.getDistance (aPoint) + aPoint.getDistance (theTerminus) <= length () + tolerance);
350,352c345
<         PrecisionPoint preciseOrigin = new PrecisionPoint (origin);
<         PrecisionPoint preciseTerminus = new PrecisionPoint (terminus);
<         return getLineEquation (preciseOrigin.preciseX, preciseOrigin.preciseY, preciseTerminus.preciseX, preciseTerminus.preciseY);
---
>         return getLineEquation (origin.x, origin.y, terminus.x, terminus.y);
356c349
<         PrecisionPointList intersections = new PrecisionPointList ();
---
>         PointList intersections = new PointList ();
368,369c361,362
<                 intersections.addPoint (line.getOrigin ().getCopy ());
<                 intersections.addPoint (line.getTerminus ().getCopy ());
---
>                 intersections.addPoint (new Point (line.getOrigin ().getCopy ()));
>                 intersections.addPoint (new Point (line.getTerminus ().getCopy ()));
372c365
<             intersections.addPoint (new PrecisionPoint ((c1 * b2 - b1 * c2) / det, (a1 * c2 - c1 * a2) / det));
---
>             intersections.addPoint (new Point (Math.round ((c1 * b2 - b1 * c2) / det), Math.round ((a1 * c2 - c1 * a2) / det)));
378,389c371,378
<         PointList intersections = new PrecisionPointList ();
<         PrecisionPoint preciseOrigin = new PrecisionPoint (origin);
<         PrecisionPoint preciseTerminus = new PrecisionPoint (terminus);
<         PrecisionRectangle preciseEllipseBounds = new PrecisionRectangle (ellipseBounds);
<         if (preciseEllipseBounds.preciseWidth == 0 || preciseEllipseBounds.preciseHeight == 0) return intersections;
< 
<         PrecisionPoint ellipsePreciseCenter = new PrecisionPoint (preciseEllipseBounds.getCenter ());
<         double xl1 = preciseOrigin.preciseX - ellipsePreciseCenter.preciseX;
<         double xl2 = preciseTerminus.preciseX - ellipsePreciseCenter.preciseX;
<         double yl1 = preciseOrigin.preciseY - ellipsePreciseCenter.preciseY;
<         double yl2 = preciseTerminus.preciseY - ellipsePreciseCenter.preciseY;
<         double [] equation = LineSeg.getLineEquation (xl1, yl1, xl2, yl2);
---
>         PointList intersections = new PointList ();
>         if (ellipseBounds.width == 0 || ellipseBounds.height == 0) return intersections;
> 
>         double xl1 = getOrigin ().x - ellipseBounds.getCenter ().x;
>         double xl2 = getTerminus ().x - ellipseBounds.getCenter ().x;
>         double yl1 = getOrigin ().y - ellipseBounds.getCenter ().y;
>         double yl2 = getTerminus ().y - ellipseBounds.getCenter ().y;
>         double [] equation = getLineEquation (xl1, yl1, xl2, yl2);
395,396c384,385
<         double w = preciseEllipseBounds.preciseWidth;
<         double h = preciseEllipseBounds.preciseHeight;
---
>         double w = ellipseBounds.width;
>         double h = ellipseBounds.height;
402,403c391,392
<             intersections.addPoint (new PrecisionPoint (x + ellipsePreciseCenter.preciseX, Math.sqrt (y) + ellipsePreciseCenter.preciseY));
<             intersections.addPoint (new PrecisionPoint (x + ellipsePreciseCenter.preciseX, - Math.sqrt (y) + ellipsePreciseCenter.preciseY));
---
>             intersections.addPoint (new Point (Math.round (x + ellipseBounds.getCenter ().x), Math.round (Math.sqrt (y) + ellipseBounds.getCenter ().y)));
>             intersections.addPoint (new Point (Math.round (x + ellipseBounds.getCenter ().x), Math.round (- Math.sqrt (y) + ellipseBounds.getCenter ().y)));
413,414c402,403
<             intersections.addPoint (new PrecisionPoint (x1 + ellipsePreciseCenter.preciseX, (c - a * x1) / b + ellipsePreciseCenter.preciseY));
<             intersections.addPoint (new PrecisionPoint (x2 + ellipsePreciseCenter.preciseX, (c - a * x2) / b + ellipsePreciseCenter.preciseY));
---
>             intersections.addPoint (new Point (Math.round (x1 + ellipseBounds.getCenter ().x), Math.round ((c - a * x1) / b + ellipseBounds.getCenter ().y)));
>             intersections.addPoint (new Point (Math.round (x2 + ellipseBounds.getCenter ().x), Math.round ((c - a * x2) / b + ellipseBounds.getCenter ().y)));
420c409,413
<         PointList intersections = new PrecisionPointList ();
---
>         double temp [] = getEquation ();
>         double a = temp [0];
>         double b = temp [1];
>         double c = temp [2];
>         PointList intersections = new PointList ();
422,423c415,418
<             if (containsPoint (points.getFirstPoint (), DEFAULT_INTERSECTION_TOLERANCE)) {
<                 intersections.addPoint (points.getFirstPoint ());
---
>             if (a * points.getPoint (0).x + b * points.getPoint (0).y == c) {
>                 intersections.addPoint (points.getPoint (0).getCopy ());
>             }
>             return intersections;
425d419
<         } else {
428,429c422,423
<                 LineSeg seg = new LineSeg (points.getPoint (i), points.getPoint (i + 1));
<                 PointList currentIntersections = getLinesIntersections (seg);
---
>             LineSeg line = new LineSeg (points.getPoint (i).getCopy (), points.getPoint (i + 1).getCopy ());
>             PointList currentIntersections = getLinesIntersections (line);
433,436c427,428
<                     if (seg.containsPoint (intersection, DEFAULT_INTERSECTION_TOLERANCE)) {
<                         intersections.addPoint (currentIntersections.getPoint (j));
<                     }
<                 }
---
>                 if (line.containsPoint (intersection, DEFAULT_INTERSECTION_TOLERANCE)) intersections.addPoint (currentIntersections.getPoint (j));
> 
