19,20d18
< import org.eclipse.emf.ecore.resource.Resource;
< 
34a33,34
> import org.eclipse.gmf.internal.common.migrate.ModelLoadHelper;
> 
72c72,75
<             loadGenModel ();
---
>             IStatus loadStatus = loadGenModel ();
>             if (! canProcessGMFGenModel (loadStatus, action)) {
>                 return;
>             }
103a107,122
>     private boolean canProcessGMFGenModel (IStatus loadStatus, IAction action) {
>         if (! loadStatus.isOK ()) {
>             String [] buttons = new String [] {IDialogConstants.PROCEED_LABEL, IDialogConstants.CANCEL_LABEL};
>             int [] buttonIDs = new int [] {IDialogConstants.PROCEED_ID, IDialogConstants.CANCEL_ID};
>             if (myGenModel == null) {
>                 buttons = new String [] {buttons [1]};
>                 buttonIDs = new int [] {buttonIDs [1]};
>             }
>             ErrorDialogEx dlg = new ErrorDialogEx (getShell (), action.getText (), CodeGenUIPlugin.getBundleString ("generatecode.badsrc"), loadStatus, buttons, buttonIDs, 0);
>             if (dlg.open () == IDialogConstants.CANCEL_ID) {
>                 return false;
>             }
>         }
>         return true;
>     }
> 
142c161
<     private void loadGenModel () {
---
>     private IStatus loadGenModel () {
145,146c164,165
<         Resource srcRes = srcResSet.getResource (selected, true);
<         Object root = srcRes.getContents ().get (0);
---
>         ModelLoadHelper loadHelper = new ModelLoadHelper (srcResSet, selected);
>         Object root = loadHelper.getContentsRoot ();
155a175
>         return loadHelper.getStatus ();
