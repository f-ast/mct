1c1
< package org.eclipse.gmf.runtime.emf.type.core;
---
> package org.eclipse.gmf.codegen.gmfgen;
3c3
< import java.net.URL;
---
> import org.eclipse.emf.ecore.EObject;
5c5
< import org.eclipse.emf.ecore.EClass;
---
> public interface ElementType extends EObject {
7c7
< import org.eclipse.gmf.runtime.common.core.command.ICommand;
---
>     GenCommonBase getDiagramElement ();
9c9
< import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;
---
>     void setDiagramElement (GenCommonBase value);
11,16c11
< public abstract class ElementType implements IElementType {
<     private final String id;
<     private final URL iconURL;
<     private final String displayName;
<     private final EClass eClass;
<     private IElementType [] supertypes;
---
>     String getUniqueIdentifier ();
18,40c13
<     protected ElementType (String id, URL iconURL, String displayName) {
<         this (id, iconURL, displayName, null);
<     }
< 
<     protected ElementType (String id, URL iconURL, String displayName, EClass eClass) {
<         super ();
<         this.id = id;
<         this.iconURL = iconURL;
<         this.displayName = displayName;
<         this.eClass = eClass;
<     }
< 
<     public String getId () {
<         return id;
<     }
< 
<     public URL getIconURL () {
<         return iconURL;
<     }
< 
<     public String getDisplayName () {
<         return displayName;
<     }
---
>     void setUniqueIdentifier (String value);
42,44c15
<     public EClass getEClass () {
<         return eClass;
<     }
---
>     String getDisplayName ();
46,48c17
<     public ICommand getEditCommand (IEditCommandRequest request) {
<         return getEditHelper ().getEditCommand (request);
<     }
---
>     void setDisplayName (String value);
50,52c19
<     public boolean canEdit (IEditCommandRequest req) {
<         return getEditHelper ().canEdit (req);
<     }
---
>     boolean isDefinedExternally ();
54,67c21
<     public Object getAdapter (Class adapter) {
<         if (adapter.isAssignableFrom (this.getClass ())) {
<             return this;
<         }
<         return null;
<     }
< 
<     public IElementType [] getAllSuperTypes () {
<         return supertypes;
<     }
< 
<     protected void setAllSupertypes (IElementType [] supertypes) {
<         this.supertypes = supertypes;
<     }
---
>     void setDefinedExternally (boolean value);
