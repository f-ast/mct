6a7,8
> import org.eclipse.emf.common.util.BasicEList;
> 
14a17,18
> import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
> 
22,23c26,27
<     protected EList genNodes = null;
<     protected EList genLinks = null;
---
>     protected EList < GenNode > genNodes = null;
>     protected EList < GenLink > genLinks = null;
28a33
>     @Override
33c38
<     public EList getGenNodes () {
---
>     public EList < GenNode > getGenNodes () {
35c40
<             genNodes = new EObjectResolvingEList (GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
---
>             genNodes = new EObjectResolvingEList < GenNode > (GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
40c45
<     public EList getGenLinks () {
---
>     public EList < GenLink > getGenLinks () {
42c47
<             genLinks = new EObjectResolvingEList (GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
---
>             genLinks = new EObjectResolvingEList < GenLink > (GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
47c52,53
<     public EList getElements () {
---
>     public EList < GenCommonBase > getElements () {
>         EList < ? extends GenCommonBase > picked;
49c55,57
<             return getGenLinks ();
---
>             picked = getGenLinks ();
>         } else {
>             picked = getGenNodes ();
51c59
<         return getGenNodes ();
---
>         return new BasicEList.UnmodifiableEList < GenCommonBase > (picked.size (), picked.toArray ());
53a62
>     @Override
65a75,76
>     @SuppressWarnings("unchecked")
>     @Override
70c81
<                 getGenNodes ().addAll ((Collection) newValue);
---
>                 getGenNodes ().addAll ((Collection < ? extends GenNode >) newValue);
74c85
<                 getGenLinks ().addAll ((Collection) newValue);
---
>                 getGenLinks ().addAll ((Collection < ? extends GenLink >) newValue);
79a91
>     @Override
91a104
>     @Override
