4a5,6
> import java.io.InputStream;
> 
18a21,24
> import java.util.Map;
> 
> import java.util.LinkedHashMap;
> 
50a57,60
> import org.eclipse.emf.common.util.BasicDiagnostic;
> 
> import org.eclipse.emf.common.util.Diagnostic;
> 
52a63,64
> import org.eclipse.emf.common.notify.Notification;
> 
54a67,68
> import org.eclipse.emf.common.ui.editor.ProblemEditorPart;
> 
66a81,84
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
> import org.eclipse.emf.ecore.util.EContentAdapter;
> 
96a115,118
> import org.eclipse.emf.common.ui.MarkerHelper;
> 
> import org.eclipse.emf.edit.ui.util.EditUIMarkerHelper;
> 
184a207,208
> import org.eclipse.ui.PartInitException;
> 
224a249
>     protected MarkerHelper markerHelper = new EditUIMarkerHelper ();
259,261c284,314
<     Collection removedResources = new ArrayList ();
<     Collection changedResources = new ArrayList ();
<     Collection savedResources = new ArrayList ();
---
>     protected Collection removedResources = new ArrayList ();
>     protected Collection changedResources = new ArrayList ();
>     protected Collection savedResources = new ArrayList ();
>     protected Map resourceToDiagnosticMap = new LinkedHashMap ();
>     protected boolean updateProblemIndication = true;
>     protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
> 
>         public void notifyChanged (Notification notification) {
>             if (notification.getNotifier () instanceof Resource) {
>                 switch (notification.getFeatureID (Resource.class)) {
>                     case Resource.RESOURCE__IS_LOADED :
>                     case Resource.RESOURCE__ERRORS :
>                     case Resource.RESOURCE__WARNINGS :
>                         {
>                             Resource resource = (Resource) notification.getNotifier ();
>                             Diagnostic diagnostic = analyzeResourceProblems ((Resource) notification.getNotifier (), null);
>                             if (diagnostic.getSeverity () != Diagnostic.OK) {
>                                 resourceToDiagnosticMap.put (resource, diagnostic);
>                             } else {
>                                 resourceToDiagnosticMap.remove (resource);
>                             }
>                             updateProblemIndication ();
>                         }}
>             } else {
>                 super.notifyChanged (notification);
>             }
>         }
> 
>     }
> 
>     ;
280c333
<                                         } else {
---
>                                         } else if (! savedResources.remove (resource)) {
282a336
> 
317a372,382
>                         if (getSite ().getPage ().getActiveEditor () == GMFGraphEditor.this) {
>                             getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
> 
>                                 public void run () {
>                                     handleActivate ();
>                                 }
> 
>                             }
> 
>                             );
>                         }
353a419
>             updateProblemIndication = false;
361a428,474
>                         if (! resourceToDiagnosticMap.containsKey (resource)) {
>                             resourceToDiagnosticMap.put (resource, analyzeResourceProblems (resource, exception));
>                         }
>                     }
>                 }
>             }
>             updateProblemIndication = true;
>             updateProblemIndication ();
>         }
>     }
> 
>     protected void updateProblemIndication () {
>         if (updateProblemIndication) {
>             BasicDiagnostic diagnostic = new BasicDiagnostic (Diagnostic.OK, "org.eclipse.gmf.graphdef.edit", 0, null, new Object [] {editingDomain.getResourceSet ()});
>             for (Iterator i = resourceToDiagnosticMap.values ().iterator ();
>             i.hasNext ();) {
>                 Diagnostic childDiagnostic = (Diagnostic) i.next ();
>                 if (childDiagnostic.getSeverity () != Diagnostic.OK) {
>                     diagnostic.add (childDiagnostic);
>                 }
>             }
>             int lastEditorPage = getPageCount () - 1;
>             if (lastEditorPage >= 0 && getEditor (lastEditorPage) instanceof ProblemEditorPart) {
>                 ((ProblemEditorPart) getEditor (lastEditorPage)).setDiagnostic (diagnostic);
>                 if (diagnostic.getSeverity () != Diagnostic.OK) {
>                     setActivePage (lastEditorPage);
>                 }
>             } else if (diagnostic.getSeverity () != Diagnostic.OK) {
>                 ProblemEditorPart problemEditorPart = new ProblemEditorPart ();
>                 problemEditorPart.setDiagnostic (diagnostic);
>                 problemEditorPart.setMarkerHelper (markerHelper);
>                 try {
>                     addPage (getPageCount (), problemEditorPart, getEditorInput ());
>                     lastEditorPage ++;
>                     setPageText (lastEditorPage, problemEditorPart.getPartName ());
>                     setActivePage (lastEditorPage);
>                 } catch (PartInitException exception) {
>                     GMFGraphEditPlugin.INSTANCE.log (exception);
>                 }
>             }
> 
>             if (markerHelper.hasMarkers (editingDomain.getResourceSet ())) {
>                 markerHelper.deleteMarkers (editingDomain.getResourceSet ());
>                 if (diagnostic.getSeverity () != Diagnostic.OK) {
>                     try {
>                         markerHelper.createMarkers (diagnostic);
>                     } catch (CoreException exception) {
514a628,631
>         URI resourceURI = URI.createPlatformResourceURI (modelFile.getFile ().getFullPath ().toString ());
>         ;
>         Exception exception = null;
>         Resource resource = null;
516,518c633,653
<             editingDomain.loadResource (URI.createPlatformResourceURI (modelFile.getFile ().getFullPath ().toString ()).toString ());
<         } catch (Exception exception) {
<             GMFGraphEditPlugin.INSTANCE.log (exception);
---
>             resource = editingDomain.getResourceSet ().getResource (resourceURI, true);
>         } catch (Exception e) {
>             exception = e;
>             resource = editingDomain.getResourceSet ().getResource (resourceURI, false);
>         }
>         Diagnostic diagnostic = analyzeResourceProblems (resource, exception);
>         if (diagnostic.getSeverity () != Diagnostic.OK) {
>             resourceToDiagnosticMap.put (resource, analyzeResourceProblems (resource, exception));
>         }
>         editingDomain.getResourceSet ().eAdapters ().add (problemIndicationAdapter);
>     }
> 
>     public Diagnostic analyzeResourceProblems (Resource resource, Exception exception) {
>         if (! resource.getErrors ().isEmpty () || ! resource.getWarnings ().isEmpty ()) {
>             BasicDiagnostic basicDiagnostic = new BasicDiagnostic (Diagnostic.ERROR, "org.eclipse.gmf.graphdef.edit", 0, getString ("_UI_CreateModelError_message", resource.getURI ()), new Object [] {exception == null ? (Object) resource : exception});
>             basicDiagnostic.merge (EcoreUtil.computeDiagnostic (resource, true));
>             return basicDiagnostic;
>         } else if (exception != null) {
>             return new BasicDiagnostic (Diagnostic.ERROR, "org.eclipse.gmf.graphdef.edit", 0, getString ("_UI_CreateModelError_message", resource.getURI ()), new Object [] {exception});
>         } else {
>             return Diagnostic.OK_INSTANCE;
519a655
> 
523a660
>         if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! ((Resource) getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
692a830
>         }
706a845
>         updateProblemIndication ();
837d975
<                 try {
842c980,981
<                         if ((first || ! resource.getContents ().isEmpty ()) && ! editingDomain.isReadOnly (resource)) {
---
>                     if ((first || ! resource.getContents ().isEmpty () || isPersisted (resource)) && ! editingDomain.isReadOnly (resource)) {
>                         try {
844a984,985
>                         } catch (Exception exception) {
>                             resourceToDiagnosticMap.put (resource, analyzeResourceProblems (resource, exception));
848,849d988
<                 } catch (Exception exception) {
<                     GMFGraphEditPlugin.INSTANCE.log (exception);
855a995
>         updateProblemIndication = false;
862a1003,1017
>         updateProblemIndication = true;
>         updateProblemIndication ();
>     }
> 
>     protected boolean isPersisted (Resource resource) {
>         boolean result = false;
>         try {
>             InputStream stream = editingDomain.getResourceSet ().getURIConverter ().createInputStream (resource.getURI ());
>             if (stream != null) {
>                 result = true;
>                 stream.close ();
>             }
>         } catch (IOException e) {
>         }
>         return result;
