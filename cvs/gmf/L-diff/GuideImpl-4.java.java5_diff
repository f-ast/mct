3,4d2
< import java.util.Collection;
< 
39c37
<         return NotationPackage.eINSTANCE.getGuide ();
---
>         return NotationPackage.Literals.GUIDE;
55c53
<             nodeMap = new EcoreEMap (NotationPackage.eINSTANCE.getNodeEntry (), NodeEntryImpl.class, this, NotationPackage.GUIDE__NODE_MAP);
---
>             nodeMap = new EcoreEMap (NotationPackage.Literals.NODE_ENTRY, NodeEntryImpl.class, this, NotationPackage.GUIDE__NODE_MAP);
60,62c58,59
<     public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
<         if (featureID >= 0) {
<             switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
---
>     public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
65,67d61
<                 default :
<                     return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
<             }
69c63
<         return eBasicSetContainer (null, featureID, msgs);
---
>         return super.eInverseRemove (otherEnd, featureID, msgs);
72,73c66,67
<     public Object eGet (EStructuralFeature eFeature, boolean resolve) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
---
>     public Object eGet (int featureID, boolean resolve, boolean coreType) {
>         switch (featureID) {
77c71,73
<                 return getNodeMap ();
---
>                 if (coreType) return getNodeMap ();
>                 else return getNodeMap ().map ();
> 
79c75
<         return eDynamicGet (eFeature, resolve);
---
>         return super.eGet (featureID, resolve, coreType);
82,83c78,79
<     public void eSet (EStructuralFeature eFeature, Object newValue) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
---
>     public void eSet (int featureID, Object newValue) {
>         switch (featureID) {
88,89c84
<                 getNodeMap ().clear ();
<                 getNodeMap ().addAll ((Collection) newValue);
---
>                 ((EStructuralFeature.Setting) getNodeMap ()).set (newValue);
92c87
<         eDynamicSet (eFeature, newValue);
---
>         super.eSet (featureID, newValue);
95,96c90,91
<     public void eUnset (EStructuralFeature eFeature) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
---
>     public void eUnset (int featureID) {
>         switch (featureID) {
104c99
<         eDynamicUnset (eFeature);
---
>         super.eUnset (featureID);
107,108c102,103
<     public boolean eIsSet (EStructuralFeature eFeature) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
---
>     public boolean eIsSet (int featureID) {
>         switch (featureID) {
114c109
<         return eDynamicIsSet (eFeature);
---
>         return super.eIsSet (featureID);
