21a22,23
>     protected static final boolean LABEL_READ_ONLY_EDEFAULT = false;
>     protected boolean labelReadOnly = LABEL_READ_ONLY_EDEFAULT;
33a36,46
>     public boolean isLabelReadOnly () {
>         return labelReadOnly;
>     }
> 
>     public void setLabelReadOnly (boolean newLabelReadOnly) {
>         boolean oldLabelReadOnly = labelReadOnly;
>         labelReadOnly = newLabelReadOnly;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY, oldLabelReadOnly, labelReadOnly));
> 
>     }
> 
88a102,103
>             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
>                 return isLabelReadOnly () ? Boolean.TRUE : Boolean.FALSE;
98a114,116
>             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
>                 setLabelReadOnly (((Boolean) newValue).booleanValue ());
>                 return;
110a129,131
>             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
>                 setLabelReadOnly (LABEL_READ_ONLY_EDEFAULT);
>                 return;
122a144,145
>             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
>                 return labelReadOnly != LABEL_READ_ONLY_EDEFAULT;
135c158,160
<         result.append (" (labelElementIcon: ");
---
>         result.append (" (labelReadOnly: ");
>         result.append (labelReadOnly);
>         result.append (", labelElementIcon: ");
