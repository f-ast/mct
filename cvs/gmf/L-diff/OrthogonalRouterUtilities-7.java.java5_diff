9,10d8
< import org.eclipse.draw2d.PositionConstants;
< 
15,16d12
< import org.eclipse.draw2d.geometry.PrecisionPoint;
< 
19,20d14
< import org.eclipse.gmf.runtime.draw2d.ui.figures.OrthogonalConnectionAnchor;
< 
73,79d66
<         if (anchor instanceof OrthogonalConnectionAnchor) {
<             PrecisionPoint refAbs = new PrecisionPoint (ref);
<             conn.translateToAbsolute (refAbs);
<             PrecisionPoint anchorPoint = new PrecisionPoint (((OrthogonalConnectionAnchor) anchor).getOrthogonalLocation (refAbs));
<             conn.translateToRelative (anchorPoint);
<             return new LineSeg (anchorPoint, ref);
<         }
99,179d85
<     public static boolean isRectilinear (PointList points) {
<         for (int i = 1;
<         i < points.size (); i ++) {
<             Point currentPt = points.getPoint (i);
<             Point previousPt = points.getPoint (i - 1);
<             if (currentPt.x != previousPt.x && currentPt.y != previousPt.y) {
<                 return false;
<             }
<         }
<         return true;
<     }
< 
<     public static void transformToOrthogonalPointList (PointList points, int offStartDirection, int offEndDirection) {
<         if (points.size () > 1) {
<             PointList startPoints = new PointList (points.size ());
<             PointList endPoints = new PointList (points.size ());
<             boolean isOffSourceDirectionSet = offStartDirection == PositionConstants.HORIZONTAL || offStartDirection == PositionConstants.VERTICAL;
<             boolean isOffTargetDirectionSet = offEndDirection == PositionConstants.VERTICAL || offEndDirection == PositionConstants.HORIZONTAL;
<             if (! isOffSourceDirectionSet && ! isOffTargetDirectionSet) {
<                 Point first = points.getPoint (0);
<                 Point second = points.getPoint (1);
<                 offStartDirection = Math.abs (first.x - second.x) < Math.abs (first.y - second.y) ? PositionConstants.HORIZONTAL : PositionConstants.VERTICAL;
<                 isOffSourceDirectionSet = true;
<             }
<             startPoints.addPoint (points.removePoint (0));
<             endPoints.addPoint (points.removePoint (points.size () - 1));
<             while (points.size () != 0) {
<                 if (isOffSourceDirectionSet) {
<                     Point nextPt = points.removePoint (0);
<                     Point lastStartPt = startPoints.getLastPoint ();
<                     if (nextPt.x != lastStartPt.x && nextPt.y != lastStartPt.y) {
<                         if (offStartDirection == PositionConstants.VERTICAL) {
<                             startPoints.addPoint (new Point (lastStartPt.x, nextPt.y));
<                             offStartDirection = PositionConstants.HORIZONTAL;
<                         } else {
<                             startPoints.addPoint (new Point (nextPt.x, lastStartPt.y));
<                             offStartDirection = PositionConstants.VERTICAL;
<                         }
<                     } else {
<                         offStartDirection = nextPt.x == lastStartPt.x ? PositionConstants.VERTICAL : PositionConstants.HORIZONTAL;
<                     }
<                     startPoints.addPoint (nextPt);
<                 }
<                 if (isOffTargetDirectionSet && points.size () != 0) {
<                     Point nextPt = points.removePoint (points.size () - 1);
<                     Point firstEndPt = endPoints.getFirstPoint ();
<                     if (nextPt.x != firstEndPt.x && nextPt.y != firstEndPt.y) {
<                         if (offEndDirection == PositionConstants.VERTICAL) {
<                             endPoints.insertPoint (new Point (firstEndPt.x, nextPt.y), 0);
<                             offEndDirection = PositionConstants.HORIZONTAL;
<                         } else {
<                             endPoints.insertPoint (new Point (nextPt.x, firstEndPt.y), 0);
<                             offEndDirection = PositionConstants.VERTICAL;
<                         }
<                     } else {
<                         offEndDirection = nextPt.x == firstEndPt.x ? PositionConstants.VERTICAL : PositionConstants.HORIZONTAL;
<                     }
<                     endPoints.insertPoint (nextPt, 0);
<                 }
<             }
<             Point lastStartPt = startPoints.getLastPoint ();
<             Point firstEndPt = endPoints.getFirstPoint ();
<             if (lastStartPt.x != firstEndPt.x && lastStartPt.y != firstEndPt.y) {
<                 if ((! isOffSourceDirectionSet && isOffTargetDirectionSet) || (isOffTargetDirectionSet && endPoints.size () < startPoints.size ())) {
<                     if (offEndDirection == PositionConstants.VERTICAL) {
<                         startPoints.addPoint (new Point (firstEndPt.x, lastStartPt.y));
<                     } else {
<                         startPoints.addPoint (new Point (lastStartPt.x, firstEndPt.y));
<                     }
<                 } else if (offStartDirection == PositionConstants.VERTICAL) {
<                     startPoints.addPoint (new Point (lastStartPt.x, firstEndPt.y));
<                 } else {
<                     startPoints.addPoint (new Point (firstEndPt.x, lastStartPt.y));
<                 }
< 
<             }
<             points.addAll (startPoints);
<             points.addAll (endPoints);
<         }
<     }
< 
