2a3,4
> import java.util.HashSet;
> 
12a15,16
> import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
> 
36a41,42
> import org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour;
> 
43,44d48
< import org.eclipse.gmf.internal.common.codegen.ImportUtil;
< 
90a95,96
>         HashSet < OpenDiagramBehaviour > openDiagramBehaviors = new HashSet < OpenDiagramBehaviour > ();
>         generateBehaviors (myDiagram, openDiagramBehaviors);
108a115
>             generateBehaviors (next, openDiagramBehaviors);
123a131
>             generateBehaviors (next, openDiagramBehaviors);
184a193,205
>     private void generateBehaviors (GenCommonBase element, HashSet < OpenDiagramBehaviour > generatedBehaviors) throws UnexpectedBehaviourException, InterruptedException {
>         for (OpenDiagramBehaviour behaviour : element.getBehaviour (OpenDiagramBehaviour.class)) {
>             if (! generatedBehaviors.contains (behaviour)) {
>                 generatedBehaviors.add (behaviour);
>                 generateOpenDiagramEditPolicy (behaviour);
>             }
>         }
>     }
> 
>     private void generateOpenDiagramEditPolicy (OpenDiagramBehaviour behaviour) throws UnexpectedBehaviourException, InterruptedException {
>         internalGenerateJavaClass (myEmitters.getOpenDiagramEditPolicyEmitter (), behaviour.getEditPolicyQualifiedClassName (), behaviour);
>     }
> 
