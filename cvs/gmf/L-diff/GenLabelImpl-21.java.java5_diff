32,33d31
<     protected static final boolean READ_ONLY_EDEFAULT = false;
<     protected boolean readOnly = READ_ONLY_EDEFAULT;
46,56d43
<     public boolean isReadOnly () {
<         return readOnly;
<     }
< 
<     public void setReadOnly (boolean newReadOnly) {
<         boolean oldReadOnly = readOnly;
<         readOnly = newReadOnly;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_LABEL__READ_ONLY, oldReadOnly, readOnly));
< 
<     }
< 
126,127d112
<             case GMFGenPackage.GEN_LABEL__READ_ONLY :
<                 return isReadOnly () ? Boolean.TRUE : Boolean.FALSE;
138,140d122
<             case GMFGenPackage.GEN_LABEL__READ_ONLY :
<                 setReadOnly (((Boolean) newValue).booleanValue ());
<                 return;
153,155d134
<             case GMFGenPackage.GEN_LABEL__READ_ONLY :
<                 setReadOnly (READ_ONLY_EDEFAULT);
<                 return;
168,169d146
<             case GMFGenPackage.GEN_LABEL__READ_ONLY :
<                 return readOnly != READ_ONLY_EDEFAULT;
182,184c159
<         result.append (" (readOnly: ");
<         result.append (readOnly);
<         result.append (", elementIcon: ");
---
>         result.append (" (elementIcon: ");
