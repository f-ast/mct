10a11,16
> import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
> 
> import org.eclipse.gmf.codegen.util.CodegenEmitters;
> 
> import org.eclipse.gmf.codegen.util.EmitterSource;
> 
16a23
>     private EmitterSource < GenEditorGenerator, CodegenEmitters > emitterSource;
22a30,33
>         if (emitterSource != null) {
>             emitterSource.dispose ();
>             emitterSource = null;
>         }
66a78,93
>     public CodegenEmitters getEmitters (GenEditorGenerator genModel) {
>         if (emitterSource == null) {
>             emitterSource = new EmitterSource < GenEditorGenerator, CodegenEmitters > () {
> 
>                 @Override
>                 protected CodegenEmitters newEmitters (GenEditorGenerator genModel) {
>                     return new CodegenEmitters (! genModel.isDynamicTemplates (), genModel.getTemplateDirectory ());
>                 }
> 
>             }
> 
>             ;
>         }
>         return emitterSource.getEmitters (genModel, genModel.isDynamicTemplates ());
>     }
> 
