38a39,40
> import org.eclipse.gmf.mappings.DesignLabelMapping;
> 
48a51,52
> import org.eclipse.gmf.mappings.FeatureLabelMapping;
> 
113a118,119
>     private EClass featureLabelMappingEClass = null;
>     private EClass designLabelMappingEClass = null;
326,327c332,333
<     public EReference getLabelMapping_Features () {
<         return (EReference) labelMappingEClass.getEStructuralFeatures ().get (1);
---
>     public EAttribute getLabelMapping_ReadOnly () {
>         return (EAttribute) labelMappingEClass.getEStructuralFeatures ().get (1);
330,331c336,337
<     public EAttribute getLabelMapping_ReadOnly () {
<         return (EAttribute) labelMappingEClass.getEStructuralFeatures ().get (2);
---
>     public EReference getLabelMapping_MapEntry () {
>         return (EReference) labelMappingEClass.getEStructuralFeatures ().get (2);
334,335c340,341
<     public EAttribute getLabelMapping_ViewPattern () {
<         return (EAttribute) labelMappingEClass.getEStructuralFeatures ().get (3);
---
>     public EClass getFeatureLabelMapping () {
>         return featureLabelMappingEClass;
338,339c344,345
<     public EAttribute getLabelMapping_EditPattern () {
<         return (EAttribute) labelMappingEClass.getEStructuralFeatures ().get (4);
---
>     public EReference getFeatureLabelMapping_Features () {
>         return (EReference) featureLabelMappingEClass.getEStructuralFeatures ().get (0);
342,343c348,357
<     public EReference getLabelMapping_MapEntry () {
<         return (EReference) labelMappingEClass.getEStructuralFeatures ().get (5);
---
>     public EAttribute getFeatureLabelMapping_ViewPattern () {
>         return (EAttribute) featureLabelMappingEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EAttribute getFeatureLabelMapping_EditPattern () {
>         return (EAttribute) featureLabelMappingEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EClass getDesignLabelMapping () {
>         return designLabelMappingEClass;
707d720
<         createEReference (labelMappingEClass, LABEL_MAPPING__FEATURES);
709,710d721
<         createEAttribute (labelMappingEClass, LABEL_MAPPING__VIEW_PATTERN);
<         createEAttribute (labelMappingEClass, LABEL_MAPPING__EDIT_PATTERN);
711a723,727
>         featureLabelMappingEClass = createEClass (FEATURE_LABEL_MAPPING);
>         createEReference (featureLabelMappingEClass, FEATURE_LABEL_MAPPING__FEATURES);
>         createEAttribute (featureLabelMappingEClass, FEATURE_LABEL_MAPPING__VIEW_PATTERN);
>         createEAttribute (featureLabelMappingEClass, FEATURE_LABEL_MAPPING__EDIT_PATTERN);
>         designLabelMappingEClass = createEClass (DESIGN_LABEL_MAPPING);
805a822,823
>         featureLabelMappingEClass.getESuperTypes ().add (this.getLabelMapping ());
>         designLabelMappingEClass.getESuperTypes ().add (this.getLabelMapping ());
869d886
<         initEReference (getLabelMapping_Features (), ecorePackage.getEAttribute (), null, "features", null, 0, - 1, LabelMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
871,872d887
<         initEAttribute (getLabelMapping_ViewPattern (), ecorePackage.getEString (), "viewPattern", null, 0, 1, LabelMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
<         initEAttribute (getLabelMapping_EditPattern (), ecorePackage.getEString (), "editPattern", null, 0, 1, LabelMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
873a889,893
>         initEClass (featureLabelMappingEClass, FeatureLabelMapping.class, "FeatureLabelMapping", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getFeatureLabelMapping_Features (), ecorePackage.getEAttribute (), null, "features", null, 1, - 1, FeatureLabelMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getFeatureLabelMapping_ViewPattern (), ecorePackage.getEString (), "viewPattern", null, 0, 1, FeatureLabelMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getFeatureLabelMapping_EditPattern (), ecorePackage.getEString (), "editPattern", null, 0, 1, FeatureLabelMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (designLabelMappingEClass, DesignLabelMapping.class, "DesignLabelMapping", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
1005c1025
<         addAnnotation (getLabelMapping_Features (), source, new String [] {"ocl", "features->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))", "description", "Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry"});
---
>         addAnnotation (getFeatureLabelMapping_Features (), source, new String [] {"ocl", "features->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))", "description", "Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry"});
