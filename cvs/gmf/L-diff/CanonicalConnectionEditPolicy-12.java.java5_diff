16a17,18
> import java.util.Set;
> 
76a79,80
> import org.eclipse.gmf.runtime.notation.Node;
> 
89,93d92
<     private List getDiagramConnections () {
<         Diagram dView = ((View) host ().getModel ()).getDiagram ();
<         return dView == null ? Collections.EMPTY_LIST : new ArrayList (dView.getEdges ());
<     }
< 
315,321c314,321
<         Collection retval = new HashSet ();
<         List children = getViewChildren ();
<         Iterator connections = getDiagramConnections ().iterator ();
<         while (connections.hasNext ()) {
<             Edge connection = (Edge) connections.next ();
<             if (connection.getSource () != null && connection.getTarget () != null && shouldIncludeConnection (connection, children)) {
<                 retval.add (connection);
---
>         Collection children = getViewChildren ();
>         Set connections = new HashSet ();
>         if (getHost () instanceof IGraphicalEditPart) {
>             IGraphicalEditPart gep = (IGraphicalEditPart) getHost ();
>             Node node = (Node) gep.getNotationView ();
>             getConnectionViews (connections, node, children);
>         }
>         return connections;
322a323,335
> 
>     private void getConnectionViews (Set connections, Node node, Collection viewChildren) {
>         IGraphicalEditPart gep = (IGraphicalEditPart) getHost ();
>         View hostView = gep.getNotationView ();
>         if (hostView != node) {
>             if (! shouldCheckForConnections (node, viewChildren)) return;
> 
>         }
>         Iterator sourceIter = node.getSourceEdges ().listIterator ();
>         while (sourceIter.hasNext ()) {
>             Edge sourceEdge = (Edge) sourceIter.next ();
>             if (shouldIncludeConnection (sourceEdge, (List) viewChildren)) connections.add (sourceEdge);
> 
324c337,358
<         return retval;
---
>         Iterator targetIter = node.getTargetEdges ().listIterator ();
>         while (targetIter.hasNext ()) {
>             Edge targetEdge = (Edge) targetIter.next ();
>             if (shouldIncludeConnection (targetEdge, (List) viewChildren)) connections.add (targetEdge);
> 
>         }
>         List children = node.getChildren ();
>         Iterator iter = children.listIterator ();
>         while (iter.hasNext ()) {
>             View viewChild = (View) iter.next ();
>             if (viewChild instanceof Node) {
>                 getConnectionViews (connections, (Node) viewChild, viewChildren);
>             }
>         }
>     }
> 
>     protected boolean shouldCheckForConnections (View view, Collection viewChildren) {
>         return (view != null && (viewChildren.contains (view) || viewChildren.contains (view.eContainer ())));
>     }
> 
>     protected boolean shouldIncludeConnection (Edge connection, Collection children) {
>         return shouldCheckForConnections (connection.getSource (), children) || shouldCheckForConnections (connection.getTarget (), children);
328,330c362
<         View src = connection.getSource ();
<         View target = connection.getTarget ();
<         return ((src != null && target != null) && (children.contains (src) || children.contains (src.eContainer ()) || children.contains (target) || children.contains (target.eContainer ())));
---
>         return shouldIncludeConnection (connection, (Collection) children);
