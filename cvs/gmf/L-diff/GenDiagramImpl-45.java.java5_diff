5,8d4
< import java.util.Collections;
< 
< import java.util.HashSet;
< 
11,14d6
< import java.util.LinkedHashSet;
< 
< import java.util.Set;
< 
63c55
< import org.eclipse.gmf.codegen.gmfgen.GenNode;
---
> import org.eclipse.gmf.codegen.gmfgen.GenPlugin;
71,72d62
< import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;
< 
79,82d68
< import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;
< 
< import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;
< 
146,147d131
<     protected static final String PLUGIN_CLASS_NAME_EDEFAULT = null;
<     protected String pluginClassName = PLUGIN_CLASS_NAME_EDEFAULT;
172,177c156
<     protected static final String PLUGIN_ID_EDEFAULT = null;
<     protected String pluginID = PLUGIN_ID_EDEFAULT;
<     protected static final String PLUGIN_NAME_EDEFAULT = null;
<     protected String pluginName = PLUGIN_NAME_EDEFAULT;
<     protected static final String PROVIDER_NAME_EDEFAULT = "Sample Plugin Provider, Inc";
<     protected String providerName = PROVIDER_NAME_EDEFAULT;
---
>     protected GenPlugin plugin = null;
180,181d158
<     protected static final boolean PRINTING_ENABLED_EDEFAULT = false;
<     protected boolean printingEnabled = PRINTING_ENABLED_EDEFAULT;
184c161
<     private static final String DIAGRAM_EDITOR_TOKEN = "gmf.editor";
---
>     static final String DIAGRAM_EDITOR_TOKEN = "gmf.editor";
331a309,338
>     public GenPlugin getPlugin () {
>         return plugin;
>     }
> 
>     public NotificationChain basicSetPlugin (GenPlugin newPlugin, NotificationChain msgs) {
>         GenPlugin oldPlugin = plugin;
>         plugin = newPlugin;
>         if (eNotificationRequired ()) {
>             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN, oldPlugin, newPlugin);
>             if (msgs == null) msgs = notification;
>             else msgs.add (notification);
> 
>         }
>         return msgs;
>     }
> 
>     public void setPlugin (GenPlugin newPlugin) {
>         if (newPlugin != plugin) {
>             NotificationChain msgs = null;
>             if (plugin != null) msgs = ((InternalEObject) plugin).eInverseRemove (this, GMFGenPackage.GEN_PLUGIN__DIAGRAM, GenPlugin.class, msgs);
> 
>             if (newPlugin != null) msgs = ((InternalEObject) newPlugin).eInverseAdd (this, GMFGenPackage.GEN_PLUGIN__DIAGRAM, GenPlugin.class, msgs);
> 
>             msgs = basicSetPlugin (newPlugin, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN, newPlugin, newPlugin));
> 
>     }
> 
409,468d415
<     public String getPluginName () {
<         return pluginName;
<     }
< 
<     public void setPluginName (String newPluginName) {
<         String oldPluginName = pluginName;
<         pluginName = newPluginName;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME, oldPluginName, pluginName));
< 
<     }
< 
<     public String getProviderName () {
<         return providerName;
<     }
< 
<     public void setProviderName (String newProviderName) {
<         String oldProviderName = providerName;
<         providerName = newProviderName;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME, oldProviderName, providerName));
< 
<     }
< 
<     public String getPluginIDGen () {
<         return pluginID;
<     }
< 
<     public String getPluginID () {
<         String value = getPluginIDGen ();
<         if (value == null || value.length () == 0) {
<             return getEMFGenModel ().getModelPluginID () + '.' + DIAGRAM_EDITOR_TOKEN;
<         }
<         return value;
<     }
< 
<     public void setPluginID (String newPluginID) {
<         String oldPluginID = pluginID;
<         pluginID = newPluginID;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID, oldPluginID, pluginID));
< 
<     }
< 
<     public String getPluginClassNameGen () {
<         return pluginClassName;
<     }
< 
<     public String getPluginClassName () {
<         String value = getPluginClassNameGen ();
<         if (isEmpty (value)) {
<             value = getDomainPackageCapName () + "DiagramEditorPlugin";
<         }
<         return value;
<     }
< 
<     public void setPluginClassName (String newPluginClassName) {
<         String oldPluginClassName = pluginClassName;
<         pluginClassName = newPluginClassName;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME, oldPluginClassName, pluginClassName));
< 
<     }
< 
920,930d866
<     public boolean isPrintingEnabled () {
<         return printingEnabled;
<     }
< 
<     public void setPrintingEnabled (boolean newPrintingEnabled) {
<         boolean oldPrintingEnabled = printingEnabled;
<         printingEnabled = newPrintingEnabled;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED, oldPrintingEnabled, printingEnabled));
< 
<     }
< 
1203,1206d1138
<     public String getPluginQualifiedClassName () {
<         return getEditorPackageName () + '.' + getPluginClassName ();
<     }
< 
1259a1192,1195
>             case GMFGenPackage.GEN_DIAGRAM__PLUGIN :
>                 if (plugin != null) msgs = ((InternalEObject) plugin).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__PLUGIN, null, msgs);
> 
>                 return basicSetPlugin ((GenPlugin) otherEnd, msgs);
1277a1214,1215
>             case GMFGenPackage.GEN_DIAGRAM__PLUGIN :
>                 return basicSetPlugin (null, msgs);
1348,1349d1285
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME :
<                 return getPluginClassName ();
1388,1393c1324,1325
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID :
<                 return getPluginID ();
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME :
<                 return getPluginName ();
<             case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME :
<                 return getProviderName ();
---
>             case GMFGenPackage.GEN_DIAGRAM__PLUGIN :
>                 return getPlugin ();
1396,1397d1327
<             case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED :
<                 return isPrintingEnabled () ? Boolean.TRUE : Boolean.FALSE;
1503,1505d1432
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME :
<                 setPluginClassName ((String) newValue);
<                 return;
1563,1570c1490,1491
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID :
<                 setPluginID ((String) newValue);
<                 return;
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME :
<                 setPluginName ((String) newValue);
<                 return;
<             case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME :
<                 setProviderName ((String) newValue);
---
>             case GMFGenPackage.GEN_DIAGRAM__PLUGIN :
>                 setPlugin ((GenPlugin) newValue);
1575,1577d1495
<             case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED :
<                 setPrintingEnabled (((Boolean) newValue).booleanValue ());
<                 return;
1683,1685d1600
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME :
<                 setPluginClassName (PLUGIN_CLASS_NAME_EDEFAULT);
<                 return;
1737,1744c1652,1653
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID :
<                 setPluginID (PLUGIN_ID_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME :
<                 setPluginName (PLUGIN_NAME_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME :
<                 setProviderName (PROVIDER_NAME_EDEFAULT);
---
>             case GMFGenPackage.GEN_DIAGRAM__PLUGIN :
>                 setPlugin ((GenPlugin) null);
1749,1751d1657
<             case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED :
<                 setPrintingEnabled (PRINTING_ENABLED_EDEFAULT);
<                 return;
1825,1826d1730
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME :
<                 return PLUGIN_CLASS_NAME_EDEFAULT == null ? pluginClassName != null : ! PLUGIN_CLASS_NAME_EDEFAULT.equals (pluginClassName);
1861,1866c1765,1766
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID :
<                 return PLUGIN_ID_EDEFAULT == null ? pluginID != null : ! PLUGIN_ID_EDEFAULT.equals (pluginID);
<             case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME :
<                 return PLUGIN_NAME_EDEFAULT == null ? pluginName != null : ! PLUGIN_NAME_EDEFAULT.equals (pluginName);
<             case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME :
<                 return PROVIDER_NAME_EDEFAULT == null ? providerName != null : ! PROVIDER_NAME_EDEFAULT.equals (providerName);
---
>             case GMFGenPackage.GEN_DIAGRAM__PLUGIN :
>                 return plugin != null;
1869,1870d1768
<             case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED :
<                 return printingEnabled != PRINTING_ENABLED_EDEFAULT;
1966,1967d1863
<                 case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME :
<                     return GMFGenPackage.EDITOR_CANDIES__PLUGIN_CLASS_NAME;
2094,2095d1989
<                 case GMFGenPackage.EDITOR_CANDIES__PLUGIN_CLASS_NAME :
<                     return GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME;
2200,2209d2093
<     public EList getRequiredPluginIDs () {
<         Collection requiredPlugins = new LinkedHashSet ();
<         if (usesSVGShapes ()) {
<             requiredPlugins.add ("org.eclipse.gmf.diagramrt.gefsvg");
<         }
<         requiredPlugins.addAll (getExpressionsRequiredPluginIDs ());
<         requiredPlugins.addAll (getValidationRequiredPluginIDs ());
<         return new BasicEList (requiredPlugins);
<     }
< 
2274,2277d2157
<     private boolean usesSVGShapes () {
<         return false;
<     }
< 
2344,2345d2223
<         result.append (", pluginClassName: ");
<         result.append (pluginClassName);
2364,2369d2241
<         result.append (", pluginID: ");
<         result.append (pluginID);
<         result.append (", pluginName: ");
<         result.append (pluginName);
<         result.append (", providerName: ");
<         result.append (providerName);
2372,2373d2243
<         result.append (", printingEnabled: ");
<         result.append (printingEnabled);
2401,2441d2270
<     private Set getExpressionsRequiredPluginIDs () {
<         Set requiredIDs = new HashSet ();
<         for (Iterator it = getAllNodes ().iterator ();
<         it.hasNext ();) {
<             GenNode nextNode = (GenNode) it.next ();
<             TypeModelFacet modelFacet = nextNode.getModelFacet ();
<             if (modelFacet.getModelElementInitializer () != null) {
<                 requiredIDs.addAll (modelFacet.getModelElementInitializer ().getRequiredPluginIDs ());
<             }
<             if (modelFacet.getModelElementSelector () != null) {
<                 requiredIDs.addAll (modelFacet.getModelElementSelector ().getRequiredPluginIDs ());
<             }
<         }
<         for (Iterator it = getLinks ().iterator ();
<         it.hasNext ();) {
<             GenLink nextLink = (GenLink) it.next ();
<             LinkModelFacet modelFacet = nextLink.getModelFacet ();
<             if (modelFacet instanceof TypeLinkModelFacet) {
<                 TypeLinkModelFacet typeModelFacet = (TypeLinkModelFacet) modelFacet;
<                 if (typeModelFacet.getModelElementInitializer () != null) {
<                     requiredIDs.addAll (typeModelFacet.getModelElementInitializer ().getRequiredPluginIDs ());
<                 }
<                 if (typeModelFacet.getModelElementSelector () != null) {
<                     requiredIDs.addAll (typeModelFacet.getModelElementSelector ().getRequiredPluginIDs ());
<                 }
<             }
<         }
<         if (hasLinkCreationConstraints ()) {
<             requiredIDs.add ("org.eclipse.emf.ocl");
<             requiredIDs.add ("org.eclipse.emf.query.ocl");
<         }
<         return requiredIDs;
<     }
< 
<     private Set getValidationRequiredPluginIDs () {
<         if (isValidationEnabled () || (getAudits () != null && ! getAudits ().getAllAuditRules ().isEmpty ())) {
<             return Collections.singleton ("org.eclipse.emf.validation");
<         }
<         return Collections.EMPTY_SET;
<     }
< 
