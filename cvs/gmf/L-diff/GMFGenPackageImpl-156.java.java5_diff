26a27,28
> import org.eclipse.gmf.codegen.gmfgen.Behaviour;
> 
190a193,194
> import org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour;
> 
204a209,210
> import org.eclipse.gmf.codegen.gmfgen.SharedBehaviour;
> 
254a261
>     private EClass behaviourEClass = null;
255a263,264
>     private EClass sharedBehaviourEClass = null;
>     private EClass openDiagramBehaviourEClass = null;
914c923
<     public EReference getGenCommonBase_CustomBehaviour () {
---
>     public EReference getGenCommonBase_Behaviour () {
917a927,934
>     public EClass getBehaviour () {
>         return behaviourEClass;
>     }
> 
>     public EReference getBehaviour_Subject () {
>         return (EReference) behaviourEClass.getEStructuralFeatures ().get (0);
>     }
> 
929a947,962
>     public EClass getSharedBehaviour () {
>         return sharedBehaviourEClass;
>     }
> 
>     public EReference getSharedBehaviour_Delegate () {
>         return (EReference) sharedBehaviourEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EClass getOpenDiagramBehaviour () {
>         return openDiagramBehaviourEClass;
>     }
> 
>     public EAttribute getOpenDiagramBehaviour_EditPolicyClassName () {
>         return (EAttribute) openDiagramBehaviourEClass.getEStructuralFeatures ().get (0);
>     }
> 
2094c2127,2129
<         createEReference (genCommonBaseEClass, GEN_COMMON_BASE__CUSTOM_BEHAVIOUR);
---
>         createEReference (genCommonBaseEClass, GEN_COMMON_BASE__BEHAVIOUR);
>         behaviourEClass = createEClass (BEHAVIOUR);
>         createEReference (behaviourEClass, BEHAVIOUR__SUBJECT);
2097a2133,2136
>         sharedBehaviourEClass = createEClass (SHARED_BEHAVIOUR);
>         createEReference (sharedBehaviourEClass, SHARED_BEHAVIOUR__DELEGATE);
>         openDiagramBehaviourEClass = createEClass (OPEN_DIAGRAM_BEHAVIOUR);
>         createEAttribute (openDiagramBehaviourEClass, OPEN_DIAGRAM_BEHAVIOUR__EDIT_POLICY_CLASS_NAME);
2386a2426,2428
>         customBehaviourEClass.getESuperTypes ().add (this.getBehaviour ());
>         sharedBehaviourEClass.getESuperTypes ().add (this.getBehaviour ());
>         openDiagramBehaviourEClass.getESuperTypes ().add (this.getBehaviour ());
2642c2684
<         initEReference (getGenCommonBase_CustomBehaviour (), this.getCustomBehaviour (), null, "customBehaviour", null, 0, - 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getGenCommonBase_Behaviour (), this.getBehaviour (), this.getBehaviour_Subject (), "behaviour", null, 0, - 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
2650a2693,2695
>         initEClass (behaviourEClass, Behaviour.class, "Behaviour", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getBehaviour_Subject (), this.getGenCommonBase (), this.getGenCommonBase_Behaviour (), "subject", null, 0, 1, Behaviour.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         addEOperation (behaviourEClass, ecorePackage.getEString (), "getEditPolicyQualifiedClassName", 0, 1);
2653a2699,2702
>         initEClass (sharedBehaviourEClass, SharedBehaviour.class, "SharedBehaviour", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getSharedBehaviour_Delegate (), this.getBehaviour (), null, "delegate", null, 1, 1, SharedBehaviour.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (openDiagramBehaviourEClass, OpenDiagramBehaviour.class, "OpenDiagramBehaviour", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getOpenDiagramBehaviour_EditPolicyClassName (), ecorePackage.getEString (), "editPolicyClassName", null, 1, 1, OpenDiagramBehaviour.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
