3,4d2
< import org.eclipse.core.runtime.Platform;
< 
9,18d6
< import org.eclipse.gmf.runtime.common.ui.services.editor.EditorService;
< 
< import org.eclipse.gmf.runtime.common.ui.services.elementselection.ElementSelectionService;
< 
< import org.eclipse.gmf.runtime.common.ui.services.icon.IconService;
< 
< import org.eclipse.gmf.runtime.common.ui.services.marker.MarkerNavigationService;
< 
< import org.eclipse.gmf.runtime.common.ui.services.parser.ParserService;
< 
20,24d7
<     protected final static String EDITOR_PROVIDERS_EXT_P_NAME = "editorProviders";
<     protected static final String MARKER_NAVIGATION_PROVIDERS_EXT_P_NAME = "markerNavigationProviders";
<     protected static final String ICON_PROVIDERS_EXT_P_NAME = "iconProviders";
<     protected static final String PARSER_PROVIDERS_EXT_P_NAME = "parserProviders";
<     protected static final String ELEMENT_SELECTION_PROVIDERS_EXT_P_NAME = "elementSelectionProviders";
37c20
<         return getDefault ().getBundle ().getSymbolicName ();
---
>         return getDefault ().getSymbolicName ();
44,71d26
<     protected void doStartup () {
<         configureEditorProviders ();
<         configureMarkerNavigationProviders ();
<         configureIconProviders ();
<         configureParserProviders ();
<         configureElementSelectionProviders ();
<     }
< 
<     private void configureEditorProviders () {
<         EditorService.getInstance ().configureProviders (Platform.getExtensionRegistry ().getExtensionPoint (getPluginId (), EDITOR_PROVIDERS_EXT_P_NAME).getConfigurationElements ());
<     }
< 
<     private void configureMarkerNavigationProviders () {
<         MarkerNavigationService.getInstance ().configureProviders (Platform.getExtensionRegistry ().getExtensionPoint (getPluginId (), MARKER_NAVIGATION_PROVIDERS_EXT_P_NAME).getConfigurationElements ());
<     }
< 
<     private void configureIconProviders () {
<         IconService.getInstance ().configureProviders (Platform.getExtensionRegistry ().getExtensionPoint (getPluginId (), ICON_PROVIDERS_EXT_P_NAME).getConfigurationElements ());
<     }
< 
<     private void configureParserProviders () {
<         ParserService.getInstance ().configureProviders (Platform.getExtensionRegistry ().getExtensionPoint (getPluginId (), PARSER_PROVIDERS_EXT_P_NAME).getConfigurationElements ());
<     }
< 
<     private void configureElementSelectionProviders () {
<         ElementSelectionService.getInstance ().configureProviders (Platform.getExtensionRegistry ().getExtensionPoint (getPluginId (), ELEMENT_SELECTION_PROVIDERS_EXT_P_NAME).getConfigurationElements ());
<     }
< 
