2a3,4
> import java.util.ArrayList;
> 
44a47,52
> import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider;
> 
208a217,262
>     public List getAllContextSelectorsLocalClassNames () {
>         HashSet classNames = new HashSet ();
>         EList allRules = getAllAuditRules ();
>         for (Iterator it = allRules.iterator ();
>         it.hasNext ();) {
>             String nextClassName = ((GenAuditRule) it.next ()).getContextSelectorLocalClassName ();
>             if (nextClassName != null) {
>                 classNames.add (nextClassName);
>             }
>         }
>         return new ArrayList (classNames);
>     }
> 
>     public List getAllRequiredConstraintAdaptersLocalClassNames () {
>         HashSet classNames = new HashSet ();
>         EList allRules = getAllAuditRules ();
>         for (Iterator it = allRules.iterator ();
>         it.hasNext ();) {
>             GenAuditRule nextAudit = (GenAuditRule) it.next ();
>             if (nextAudit.requiresConstraintAdapter ()) {
>                 String nextClassName = nextAudit.getConstraintAdapterLocalClassName ();
>                 if (nextClassName != null) {
>                     classNames.add (nextClassName);
>                 }
>             }
>         }
>         return new ArrayList (classNames);
>     }
> 
>     public List getAllJavaLangAudits () {
>         List audits = new ArrayList ();
>         if (getEditor () == null || getEditor ().getExpressionProviders () == null) {
>             return audits;
>         }
>         GenExpressionProviderContainer exprProviders = getEditor ().getExpressionProviders ();
>         for (Iterator it = getAllAuditRules ().iterator ();
>         it.hasNext ();) {
>             GenAuditRule nextAudit = (GenAuditRule) it.next ();
>             GenExpressionProviderBase provider = exprProviders.getProvider (nextAudit.getRule ());
>             if (nextAudit.getRule () != null && provider instanceof GenJavaExpressionProvider) {
>                 audits.add (nextAudit);
>             }
>         }
>         return audits;
>     }
> 
