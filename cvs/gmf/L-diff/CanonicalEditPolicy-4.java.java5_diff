38a39,40
> import org.eclipse.emf.ecore.EStructuralFeature;
> 
49,52d50
< import org.eclipse.jface.util.Assert;
< 
< import org.eclipse.swt.widgets.Display;
< 
68a67,68
> import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
> 
83,84d82
< import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
< 
98a97,100
> import org.eclipse.jface.util.Assert;
> 
> import org.eclipse.swt.widgets.Display;
> 
369,370c371,372
<             addListenerFilter (SEMANTIC_FILTER_ID, this, PresentationListener.getNotifier (semanticHost));
<             addListenerFilter ("NotationListener_Visibility", this, PresentationListener.getNotifier (((View) getHost ().getModel ()), NotationPackage.eINSTANCE.getView_Visible ()));
---
>             addListenerFilter (SEMANTIC_FILTER_ID, this, semanticHost);
>             addListenerFilter ("NotationListener_Visibility", this, (View) getHost ().getModel (), NotationPackage.eINSTANCE.getView_Visible ());
435a438,469
>     protected boolean addListenerFilter (String filterId, PropertyChangeListener listener, EObject element) {
>         if (filterId == null || listener == null) {
>             throw new NullPointerException ();
>         }
>         if (element != null) {
>             if (_listenerFilters == null) _listenerFilters = new HashMap ();
> 
>             if (! _listenerFilters.containsKey (filterId)) {
>                 PresentationListener.getInstance ().addPropertyChangeListener (element, listener);
>                 _listenerFilters.put (filterId, new Object [] {element, listener});
>                 return true;
>             }
>         }
>         return false;
>     }
> 
>     protected boolean addListenerFilter (String filterId, PropertyChangeListener listener, EObject element, EStructuralFeature feature) {
>         if (filterId == null || listener == null) {
>             throw new NullPointerException ();
>         }
>         if (element != null) {
>             if (_listenerFilters == null) _listenerFilters = new HashMap ();
> 
>             if (! _listenerFilters.containsKey (filterId)) {
>                 PresentationListener.getInstance ().addPropertyChangeListener (element, feature, listener);
>                 _listenerFilters.put (filterId, new Object [] {element, feature, listener});
>                 return true;
>             }
>         }
>         return false;
>     }
> 
441a476,479
>         if (objects.length > 2) {
>             PresentationListener.getInstance ().removePropertyChangeListener ((EObject) objects [0], (EStructuralFeature) objects [1], (PropertyChangeListener) objects [2]);
>         } else {
>             if (objects [0] instanceof PropertyChangeNotifier) {
442a481,484
>             } else {
>                 PresentationListener.getInstance ().removePropertyChangeListener ((EObject) objects [0], (PropertyChangeListener) objects [1]);
>             }
>         }
