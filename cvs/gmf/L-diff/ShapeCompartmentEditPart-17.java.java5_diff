26a27,28
> import org.eclipse.draw2d.FigureListener;
> 
50a53,54
> import org.eclipse.gef.EditPartListener;
> 
110a115,136
>     private EditPartListener editpartListener = new EditPartListener.Stub () {
>         private FigureListener childFigureListener = new FigureListener () {
> 
>             public void figureMoved (IFigure source) {
>                 refreshConnections ();
>             }
> 
>         }
> 
>         ;
> 
>         public void childAdded (EditPart child, int index) {
>             ((GraphicalEditPart) child).getFigure ().addFigureListener (childFigureListener);
>         }
> 
>         public void removingChild (EditPart child, int index) {
>             ((GraphicalEditPart) child).getFigure ().removeFigureListener (childFigureListener);
>         }
> 
>     }
> 
>     ;
134a161,162
>                 boolean noSource = false;
>                 boolean noTarget = false;
136a165
>                     noSource = ! fig.isVisible ();
143a173
>                     noTarget = ! fig.isVisible ();
148a179,184
>                 if (noSource || noTarget) {
>                     if (noSource && cep.getTarget () != null) cep.getTarget ().refresh ();
> 
>                     if (noTarget && cep.getSource () != null) cep.getSource ().refresh ();
> 
>                 } else {
149a186,211
>                     refreshConnectionEnds (cep);
>                 }
>             }
>         }
> 
>         private void refreshConnectionEnds (ConnectionEditPart cEP) {
>             EditPart srcEditPart = cEP.getSource ();
>             EditPart trgEditPart = cEP.getTarget ();
>             Object model = cEP.getModel ();
>             if (model instanceof Edge) {
>                 Edge edge = (Edge) model;
>                 View source = edge.getSource ();
>                 View target = edge.getTarget ();
>                 if (srcEditPart == null) {
>                     refreshEditPart (cEP.getViewer (), source);
>                 }
>                 if (trgEditPart == null) {
>                     refreshEditPart (cEP.getViewer (), target);
>                 }
>             }
>         }
> 
>         private void refreshEditPart (EditPartViewer viewer, View view) {
>             EditPart ep = (EditPart) viewer.getEditPartRegistry ().get (view);
>             if (ep != null) {
>                 ep.refresh ();
314a377,386
>                     forceRefreshConnections ();
>                 }
> 
>             }
> 
>             );
>         }
>     }
> 
>     protected void forceRefreshConnections () {
324,329d395
<             }
< 
<             );
<         }
<     }
< 
406c472,475
<         refreshConnections ();
---
>         View view = getNotationView ();
>         if (view != null && ! view.isVisible ()) forceRefreshConnections ();
>         else refreshConnections ();
> 
459a529,538
>     public void addNotify () {
>         addEditPartListener (editpartListener);
>         super.addNotify ();
>     }
> 
>     public void removeNotify () {
>         removeEditPartListener (editpartListener);
>         super.removeNotify ();
>     }
> 
