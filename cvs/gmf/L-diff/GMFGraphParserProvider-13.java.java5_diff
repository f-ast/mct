4a5,24
> import org.eclipse.emf.ecore.EAttribute;
> 
> import org.eclipse.emf.ecore.EObject;
> 
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentNameEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.ConnectionNameEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorNameEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureGalleryNameEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.NodeNameEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.parsers.MessageFormatParser;
> 
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
> 
15c35
< import org.eclipse.gmf.runtime.notation.View;
---
> import org.eclipse.gmf.runtime.emf.type.core.IElementType;
17,19c37
< import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
< 
< import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentNameEditPart;
---
> import org.eclipse.gmf.runtime.emf.ui.services.parser.ParserHintAdapter;
21c39
< import org.eclipse.gmf.graphdef.editor.edit.parts.ConnectionNameEditPart;
---
> import org.eclipse.gmf.runtime.notation.View;
23c41,42
< import org.eclipse.gmf.graphdef.editor.edit.parts.FigureGalleryNameEditPart;
---
> public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
>     private IParser compartmentName_5005Parser;
25c44,49
< import org.eclipse.gmf.graphdef.editor.edit.parts.NodeNameEditPart;
---
>     private IParser getCompartmentName_5005Parser () {
>         if (compartmentName_5005Parser == null) {
>             compartmentName_5005Parser = createCompartmentName_5005Parser ();
>         }
>         return compartmentName_5005Parser;
>     }
27c51,55
< import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
---
>     protected IParser createCompartmentName_5005Parser () {
>         EAttribute [] features = new EAttribute [] {GMFGraphPackage.eINSTANCE.getIdentity_Name (),};
>         MessageFormatParser parser = new MessageFormatParser (features);
>         return parser;
>     }
29,30c57
< public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
<     private IParser compartmentCompartmentName_5001Parser;
---
>     private IParser nodeName_5006Parser;
32,34c59,61
<     private IParser getCompartmentCompartmentName_5001Parser () {
<         if (compartmentCompartmentName_5001Parser == null) {
<             compartmentCompartmentName_5001Parser = createCompartmentCompartmentName_5001Parser ();
---
>     private IParser getNodeName_5006Parser () {
>         if (nodeName_5006Parser == null) {
>             nodeName_5006Parser = createNodeName_5006Parser ();
36c63
<         return compartmentCompartmentName_5001Parser;
---
>         return nodeName_5006Parser;
39,42c66,68
<     protected IParser createCompartmentCompartmentName_5001Parser () {
<         GMFGraphStructuralFeatureParser parser = new GMFGraphStructuralFeatureParser (GMFGraphPackage.eINSTANCE.getIdentity_Name ());
<         parser.setViewPattern ("{0}");
<         parser.setEditPattern ("{0}");
---
>     protected IParser createNodeName_5006Parser () {
>         EAttribute [] features = new EAttribute [] {GMFGraphPackage.eINSTANCE.getIdentity_Name (),};
>         MessageFormatParser parser = new MessageFormatParser (features);
46c72
<     private IParser nodeNodeName_5002Parser;
---
>     private IParser connectionName_5007Parser;
48,50c74,76
<     private IParser getNodeNodeName_5002Parser () {
<         if (nodeNodeName_5002Parser == null) {
<             nodeNodeName_5002Parser = createNodeNodeName_5002Parser ();
---
>     private IParser getConnectionName_5007Parser () {
>         if (connectionName_5007Parser == null) {
>             connectionName_5007Parser = createConnectionName_5007Parser ();
52c78
<         return nodeNodeName_5002Parser;
---
>         return connectionName_5007Parser;
55,58c81,83
<     protected IParser createNodeNodeName_5002Parser () {
<         GMFGraphStructuralFeatureParser parser = new GMFGraphStructuralFeatureParser (GMFGraphPackage.eINSTANCE.getIdentity_Name ());
<         parser.setViewPattern ("{0}");
<         parser.setEditPattern ("{0}");
---
>     protected IParser createConnectionName_5007Parser () {
>         EAttribute [] features = new EAttribute [] {GMFGraphPackage.eINSTANCE.getIdentity_Name (),};
>         MessageFormatParser parser = new MessageFormatParser (features);
62c87
<     private IParser connectionConnectionName_5003Parser;
---
>     private IParser figureGalleryName_5009Parser;
64,66c89,91
<     private IParser getConnectionConnectionName_5003Parser () {
<         if (connectionConnectionName_5003Parser == null) {
<             connectionConnectionName_5003Parser = createConnectionConnectionName_5003Parser ();
---
>     private IParser getFigureGalleryName_5009Parser () {
>         if (figureGalleryName_5009Parser == null) {
>             figureGalleryName_5009Parser = createFigureGalleryName_5009Parser ();
68c93
<         return connectionConnectionName_5003Parser;
---
>         return figureGalleryName_5009Parser;
71,74c96,98
<     protected IParser createConnectionConnectionName_5003Parser () {
<         GMFGraphStructuralFeatureParser parser = new GMFGraphStructuralFeatureParser (GMFGraphPackage.eINSTANCE.getIdentity_Name ());
<         parser.setViewPattern ("{0}");
<         parser.setEditPattern ("{0}");
---
>     protected IParser createFigureGalleryName_5009Parser () {
>         EAttribute [] features = new EAttribute [] {GMFGraphPackage.eINSTANCE.getIdentity_Name (),};
>         MessageFormatParser parser = new MessageFormatParser (features);
78c102
<     private IParser figureGalleryFigureGalleryName_5004Parser;
---
>     private IParser figureDescriptorName_5008Parser;
80,82c104,106
<     private IParser getFigureGalleryFigureGalleryName_5004Parser () {
<         if (figureGalleryFigureGalleryName_5004Parser == null) {
<             figureGalleryFigureGalleryName_5004Parser = createFigureGalleryFigureGalleryName_5004Parser ();
---
>     private IParser getFigureDescriptorName_5008Parser () {
>         if (figureDescriptorName_5008Parser == null) {
>             figureDescriptorName_5008Parser = createFigureDescriptorName_5008Parser ();
84c108
<         return figureGalleryFigureGalleryName_5004Parser;
---
>         return figureDescriptorName_5008Parser;
87,90c111,113
<     protected IParser createFigureGalleryFigureGalleryName_5004Parser () {
<         GMFGraphStructuralFeatureParser parser = new GMFGraphStructuralFeatureParser (GMFGraphPackage.eINSTANCE.getIdentity_Name ());
<         parser.setViewPattern ("{0}");
<         parser.setEditPattern ("{0}");
---
>     protected IParser createFigureDescriptorName_5008Parser () {
>         EAttribute [] features = new EAttribute [] {GMFGraphPackage.eINSTANCE.getIdentity_Name (),};
>         MessageFormatParser parser = new MessageFormatParser (features);
97c120
<                 return getCompartmentCompartmentName_5001Parser ();
---
>                 return getCompartmentName_5005Parser ();
99c122
<                 return getNodeNodeName_5002Parser ();
---
>                 return getNodeName_5006Parser ();
101c124
<                 return getConnectionConnectionName_5003Parser ();
---
>                 return getConnectionName_5007Parser ();
103c126,128
<                 return getFigureGalleryFigureGalleryName_5004Parser ();
---
>                 return getFigureGalleryName_5009Parser ();
>             case FigureDescriptorNameEditPart.VISUAL_ID :
>                 return getFigureDescriptorName_5008Parser ();
130a156,173
>     public static class HintAdapter extends ParserHintAdapter {
>         private final IElementType elementType;
> 
>         public HintAdapter (IElementType type, EObject object, String parserHint) {
>             super (object, parserHint);
>             assert type != null;
>             elementType = type;
>         }
> 
>         public Object getAdapter (Class adapter) {
>             if (IElementType.class.equals (adapter)) {
>                 return elementType;
>             }
>             return super.getAdapter (adapter);
>         }
> 
>     }
> 
