13,14d12
< import java.util.HashSet;
< 
16a15,18
> import java.util.LinkedHashMap;
> 
> import java.util.LinkedHashSet;
> 
45,46d46
< import org.eclipse.emf.transaction.util.TransactionUtil;
< 
49c49
< import org.eclipse.gmf.runtime.diagram.core.internal.commands.PersistElementCommand;
---
> import org.eclipse.gmf.runtime.diagram.core.internal.commands.PersistViewsCommand;
61a62
>     private WeakReference editingDomainRef;
71c72
<             Set listenersSet = (Set) keys.get (key);
---
>             Map listenersSet = (Map) keys.get (key);
73c74
<                 listenersSet = new HashSet (4);
---
>                 listenersSet = new LinkedHashMap (4);
76c77
<             listenersSet.add (listener);
---
>             listenersSet.put (listener, null);
86c87
<                 Set listenersSet = (Set) keys.get (key);
---
>                 Map listenersSet = (Map) keys.get (key);
101c102
<                 Set listenersSet = (Set) keys.get (key);
---
>                 Map listenersSet = (Map) keys.get (key);
103c104
<                     return listenersSet;
---
>                     return listenersSet.keySet ();
114c115
<             Set listenersCollection = new HashSet ();
---
>             Set listenersCollection = new LinkedHashSet ();
119,120c120,121
<                 Set listenersSet = (Set) entry.getValue ();
<                 if (listenersSet != null && ! listenersSet.isEmpty ()) listenersCollection.addAll (listenersSet);
---
>                 Map listenersSet = (Map) entry.getValue ();
>                 if (listenersSet != null && ! listenersSet.isEmpty ()) listenersCollection.addAll (listenersSet.keySet ());
125a127,130
>         public boolean isEmpty () {
>             return listenersMap.isEmpty ();
>         }
> 
143a149,151
>             if (diagramEventBroker.editingDomainRef == null) {
>                 diagramEventBroker.editingDomainRef = new WeakReference (editingDomain);
>             }
160c168,170
<             return new DiagramEventBroker ();
---
>             DiagramEventBroker diagramEventBroker = new DiagramEventBroker ();
>             diagramEventBroker.editingDomainRef = new WeakReference (editingDomain);
>             return diagramEventBroker;
181c191
<         Set elementsInPersistQueue = new HashSet ();
---
>         Set elementsInPersistQueue = new LinkedHashSet ();
182a193,195
>         TransactionalEditingDomain editingDomain = (TransactionalEditingDomain) editingDomainRef.get ();
>         boolean hasPreListeners = (preListeners.isEmpty () == false);
>         List viewsToPersistList = new ArrayList ();
190c203
<                 if (deletedObjects.contains (notification.getNotifier ())) {
---
>                 if (deletedObjects.contains (notifier)) {
193c206,213
<                 Command cmd = handleTransactionAboutToCommitEvent (notification, elementsInPersistQueue);
---
>                 if (editingDomain != null) {
>                     View viewToPersist = getViewToPersist (notification, elementsInPersistQueue);
>                     if (viewToPersist != null) {
>                         viewsToPersistList.add (viewToPersist);
>                     }
>                 }
>                 if (hasPreListeners) {
>                     Command cmd = fireTransactionAboutToCommit (notification);
199c219,223
<         elementsInPersistQueue.clear ();
---
>         }
>         if (viewsToPersistList.isEmpty () == false) {
>             PersistViewsCommand persistCmd = new PersistViewsCommand (editingDomain, viewsToPersistList);
>             cc.append (new EMFOperationCommand (editingDomain, persistCmd));
>         }
203a228,230
>         if (postListeners.isEmpty ()) {
>             return;
>         }
213c240
<                 if (deletedObjects.contains (notification.getNotifier ()) && ! customNotification) {
---
>                 if (! customNotification && deletedObjects.contains (notifier)) {
216c243
<                 handleElementEvent (notification);
---
>                 fireNotification (notification);
229,231c256
<         Collection listenerList = getInterestedNotificationListeners (event, false);
<         if (! listenerList.isEmpty ()) {
<             List listenersSnapShot = new ArrayList (listenerList);
---
>         Collection listenerList = getInterestedNotificationListeners (event, postListeners);
233c258
<                 for (Iterator listenerIT = listenersSnapShot.iterator ();
---
>             for (Iterator listenerIT = listenerList.iterator ();
240d264
<     }
242,247c266,267
<     private Command fireTransactionAboutToCommit (Notification event, Set elementsInPersistQueue) {
<         Collection listenerList = getInterestedNotificationListeners (event, true);
<         CompoundCommand cc = new CompoundCommand ();
<         preparePersistCommand (event, cc, elementsInPersistQueue);
<         if (! listenerList.isEmpty ()) {
<             List listenersSnapShot = new ArrayList (listenerList);
---
>     private Command fireTransactionAboutToCommit (Notification event) {
>         Collection listenerList = getInterestedNotificationListeners (event, preListeners);
249c269,270
<                 for (Iterator listenerIT = listenersSnapShot.iterator ();
---
>             CompoundCommand cc = new CompoundCommand ();
>             for (Iterator listenerIT = listenerList.iterator ();
259,262c280
<         }
<         if (cc.isEmpty ()) return null;
< 
<         return cc;
---
>         return null;
265,266c283
<     private void preparePersistCommand (Notification event, CompoundCommand cc, Set elementsInPersistQueue) {
<         PersistElementCommand persistCmd = null;
---
>     private View getViewToPersist (Notification event, Set elementsInPersistQueue) {
275c292,298
<                     persistCmd = getPersistViewCommand ((View) elementToPersist);
---
>                     View view = (View) elementToPersist;
>                     if (! view.isMutable ()) {
>                         View viewToPersist = ViewUtil.getTopViewToPersist (view);
>                         if (viewToPersist != null) {
>                             elementsInPersistQueue.add (viewToPersist);
>                             return viewToPersist;
>                         }
279,280c302,303
<         if (persistCmd != null && persistCmd.getEditingDomain () != null) cc.append (new EMFOperationCommand (persistCmd.getEditingDomain (), persistCmd));
< 
---
>         }
>         return null;
331,343c354
<     public final void finalize () {
<         try {
<             for (Iterator iter = instanceMap.keySet ().iterator ();
<             iter.hasNext ();) {
<                 TransactionalEditingDomain editingDomain = (TransactionalEditingDomain) iter.next ();
<                 editingDomain.removeResourceSetListener ((DiagramEventBroker) ((WeakReference) instanceMap.get (editingDomain)).get ());
<             }
<         } catch (Throwable ignored) {
<         }
<     }
< 
<     private Set getNotificationListeners (Object notifier, boolean preCommit) {
<         NotifierToKeyToListenersSetMap listeners = preCommit ? preListeners : postListeners;
---
>     private Set getNotificationListeners (Object notifier, NotifierToKeyToListenersSetMap listeners) {
347,348c358
<     private Set getNotificationListeners (Object notifier, Object key, boolean preCommit) {
<         NotifierToKeyToListenersSetMap listeners = preCommit ? preListeners : postListeners;
---
>     private Set getNotificationListeners (Object notifier, Object key, NotifierToKeyToListenersSetMap listeners) {
351c361
<                 Set listenersSet = new HashSet ();
---
>                 Set listenersSet = new LinkedHashSet ();
367,369c377,379
<     final protected Set getInterestedNotificationListeners (Notification event, boolean preCommit) {
<         HashSet listenerSet = new HashSet ();
<         Collection c = getNotificationListeners (event.getNotifier (), event.getFeature (), preCommit);
---
>     final protected Set getInterestedNotificationListeners (Notification event, NotifierToKeyToListenersSetMap listeners) {
>         Set listenerSet = new LinkedHashSet ();
>         Collection c = getNotificationListeners (event.getNotifier (), event.getFeature (), listeners);
375c385
<             listenerSet.addAll (getNotificationListeners (notifier.eContainer (), preCommit));
---
>             listenerSet.addAll (getNotificationListeners (notifier.eContainer (), listeners));
377c387
<             addListenersOfNotifier (listenerSet, notifier.eContainer (), event, preCommit);
---
>             addListenersOfNotifier (listenerSet, notifier.eContainer (), event, listeners);
382c392
<             addListenersOfNotifier (listenerSet, notifier, event, preCommit);
---
>             addListenersOfNotifier (listenerSet, notifier, event, listeners);
392c402
<     private void addListenersOfNotifier (Set listenerSet, EObject notifier, Notification event, boolean preCommit) {
---
>     private void addListenersOfNotifier (Set listenerSet, EObject notifier, Notification event, NotifierToKeyToListenersSetMap listeners) {
394c404
<             Collection c = getNotificationListeners (notifier, event.getFeature (), preCommit);
---
>             Collection c = getNotificationListeners (notifier, event.getFeature (), listeners);
408,434d417
<     private Command handleTransactionAboutToCommitEvent (Notification event, Set elementsInPersistQueue) {
<         EObject element = (EObject) event.getNotifier ();
<         if (element != null) {
<             return fireTransactionAboutToCommit (event, elementsInPersistQueue);
<         }
<         return null;
<     }
< 
<     private void handleElementEvent (Notification event) {
<         EObject element = (EObject) event.getNotifier ();
<         if (element != null) {
<             fireNotification (event);
<         }
<     }
< 
<     private PersistElementCommand getPersistViewCommand (View view) {
<         PersistElementCommand pvc = null;
<         if (! view.isMutable ()) {
<             TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain (view);
<             View viewToPersist = ViewUtil.getTopViewToPersist (view);
<             if (viewToPersist != null) {
<                 pvc = new PersistElementCommand (editingDomain, viewToPersist);
<             }
<         }
<         return pvc;
<     }
< 
