17,18d16
< import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
< 
21,22d18
< import org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet;
< 
63,64d58
< import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;
< 
119,121c113
<             String className = "OpenDiagramIn" + myEditorGen.getDomainGenModel ().getModelName () + "DiagramViewAction";
<             className = CodeGenUtil.validJavaIdentifier (className);
<             internalGenerateJavaClass (myEmitters.getOpenDiagramInViewActionGenerator (), myEditorGen.getEditor ().getPackageName (), className, myEditorGen.getEditor ());
---
>             internalGenerateJavaClass (myEmitters.getOpenDiagramInViewActionGenerator (), myEmitters.getOpenDiagramInViewActionQualifiedClassNameGenerator (), myEditorGen.getEditor ());
161a154,156
>             if (next.getLabels ().size () > 0) {
>                 generateConnectionEndpointEditPolicy (next);
>             }
268a264
>         internalGenerateJavaClass (myEmitters.getValidateActionGenerator (), myEmitters.getValidateActionQualifiedNameGenerator (), myDiagram);
276a273
>         internalGenerateJavaClass (myEmitters.getMetricsActionEmitter (), myEmitters.getMetricsActionQualifiedNameEmitter (), myDiagram);
284d280
<         String commandNameInfix = genNode.getDomainMetaClass ().getName () + genNode.getVisualID ();
286c282
<             internalGenerateJavaClass (myEmitters.getCreateNodeCommandEmitter (), myDiagram.getEditCommandsPackageName (), "Create" + commandNameInfix + "Command", genNode);
---
>             internalGenerateJavaClass (myEmitters.getCreateNodeCommandEmitter (), myEmitters.getCreateNodeCommandQualifiedClassNameEmitter (), genNode);
288,289c284,285
<         internalGenerateJavaClass (myEmitters.getAddNodeCommandEmitter (), myDiagram.getEditCommandsPackageName (), "Add" + commandNameInfix + "Command", genNode);
<         internalGenerateJavaClass (myEmitters.getCloneNodeCommandEmitter (), myDiagram.getEditCommandsPackageName (), "Clone" + commandNameInfix + "Command", genNode);
---
>         internalGenerateJavaClass (myEmitters.getAddNodeCommandEmitter (), myEmitters.getAddNodeCommandQualifiedClassNameEmitter (), genNode);
>         internalGenerateJavaClass (myEmitters.getCloneNodeCommandEmitter (), myEmitters.getCloneNodeCommandQualifiedClassNameEmitter (), genNode);
296,311c292,295
<         String commandNameInfix;
<         if (genLink.getModelFacet () instanceof TypeLinkModelFacet) {
<             TypeLinkModelFacet modelFacet = (TypeLinkModelFacet) genLink.getModelFacet ();
<             commandNameInfix = modelFacet.getMetaClass ().getName ();
<         } else if (genLink.getModelFacet () instanceof FeatureLinkModelFacet) {
<             GenFeature metaFeature = ((FeatureLinkModelFacet) genLink.getModelFacet ()).getMetaFeature ();
<             commandNameInfix = metaFeature.getFeatureAccessorName ();
<         } else {
<             return;
<         }
< 
<         commandNameInfix += genLink.getVisualID ();
<         internalGenerateJavaClass (myEmitters.getCreateLinkStartCommandEmitter (), myDiagram.getEditCommandsPackageName (), "Create" + commandNameInfix + "StartCommand", genLink);
<         internalGenerateJavaClass (myEmitters.getCreateLinkCompleteCommandEmitter (), myDiagram.getEditCommandsPackageName (), "Create" + commandNameInfix + "Command", genLink);
<         internalGenerateJavaClass (myEmitters.getReconnectLinkSourceCommandEmitter (), myDiagram.getEditCommandsPackageName (), "Reconnect" + commandNameInfix + "SourceCommand", genLink);
<         internalGenerateJavaClass (myEmitters.getReconnectLinkTargetCommandEmitter (), myDiagram.getEditCommandsPackageName (), "Reconnect" + commandNameInfix + "TargetCommand", genLink);
---
>         internalGenerateJavaClass (myEmitters.getCreateLinkStartCommandEmitter (), myEmitters.getCreateLinkStartCommandQualifiedClassNameEmitter (), genLink);
>         internalGenerateJavaClass (myEmitters.getCreateLinkCompleteCommandEmitter (), myEmitters.getCreateLinkCompleteCommandQualifiedClassNameEmitter (), genLink);
>         internalGenerateJavaClass (myEmitters.getReconnectLinkSourceCommandEmitter (), myEmitters.getReconnectLinkSourceCommandQualifiedClassNameEmitter (), genLink);
>         internalGenerateJavaClass (myEmitters.getReconnectLinkTargetCommandEmitter (), myEmitters.getReconnectLinkTargetCommandQualifiedClassNameEmitter (), genLink);
315,320c299
<         String editPolicyClassName = containerBase.getEditPartClassName ();
<         if (editPolicyClassName.endsWith (GenCommonBase.EDIT_PART_SUFFIX)) {
<             editPolicyClassName = editPolicyClassName.substring (0, editPolicyClassName.length () - GenCommonBase.EDIT_PART_SUFFIX.length ());
<         }
<         editPolicyClassName += "LayoutEditPolicy";
<         internalGenerateJavaClass (myEmitters.getLayoutEditPolicyEmitter (), myDiagram.getEditPoliciesPackageName (), editPolicyClassName, containerBase);
---
>         internalGenerateJavaClass (myEmitters.getLayoutEditPolicyEmitter (), myEmitters.getLayoutEditPolicyQualifiedClassNameEmitter (), containerBase);
328,333c307
<         String editPolicyClassName = genLink.getEditPartClassName ();
<         if (editPolicyClassName.endsWith (GenCommonBase.EDIT_PART_SUFFIX)) {
<             editPolicyClassName = editPolicyClassName.substring (0, editPolicyClassName.length () - GenCommonBase.EDIT_PART_SUFFIX.length ());
<         }
<         editPolicyClassName += "GraphicalNodeEditPolicy";
<         internalGenerateJavaClass (myEmitters.getGraphicalEditPolicyEmitter (), myDiagram.getEditPoliciesPackageName (), editPolicyClassName, genLink);
---
>         internalGenerateJavaClass (myEmitters.getGraphicalEditPolicyEmitter (), myEmitters.getGraphicalEditPolicyQualifiedClassNameEmitter (), genLink);
337,339c311
<         String editPolicyClassName = genElement.getEditPartClassName ();
<         if (editPolicyClassName.endsWith (GenCommonBase.EDIT_PART_SUFFIX)) {
<             editPolicyClassName = editPolicyClassName.substring (0, editPolicyClassName.length () - GenCommonBase.EDIT_PART_SUFFIX.length ());
---
>         internalGenerateJavaClass (myEmitters.getComponentEditPolicyEmitter (), myEmitters.getComponentEditPolicyQualifiedClassNameEmitter (), genElement);
341,342c313,315
<         editPolicyClassName += "ComponentEditPolicy";
<         internalGenerateJavaClass (myEmitters.getComponentEditPolicyEmitter (), myDiagram.getEditPoliciesPackageName (), editPolicyClassName, genElement);
---
> 
>     private void generateConnectionEndpointEditPolicy (GenLink genLink) throws InterruptedException, UnexpectedBehaviourException {
>         internalGenerateJavaClass (myEmitters.getConnectionEndpointEditPolicyEmitter (), myEmitters.getConnectionEndpointEditPolicyQualifiedClassNameEmitter (), genLink);
