6a7,8
> import org.eclipse.gmf.gmfgraph.ChildAccess;
> 
8a11,12
> import org.eclipse.gmf.gmfgraph.RealFigure;
> 
10a15,18
> import org.eclipse.gmf.graphdef.editor.edit.parts.ChildAccessEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentAccessorEditPart;
> 
20a29,30
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelAccessorEditPart;
> 
22a33,34
> import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;
> 
24a37,40
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorNameEditPart;
> 
34a51,52
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;
> 
38a57,58
> import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;
> 
42a63,64
> import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;
> 
50a73,74
> import org.eclipse.gmf.graphdef.editor.providers.GMFGraphParserProvider;
> 
57,58d80
< import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
< 
124c146
<                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Compartment", GMFGraphElementTypes.Compartment_2001);
---
>                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Compartment", GMFGraphElementTypes.Compartment_2005);
126c148
<                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Node", GMFGraphElementTypes.Node_2002);
---
>                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Node", GMFGraphElementTypes.Node_2006);
128c150
<                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Connection", GMFGraphElementTypes.Connection_2003);
---
>                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Connection", GMFGraphElementTypes.Connection_2007);
130c152,154
<                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2005/GraphicalDefinition?FigureGallery", GMFGraphElementTypes.FigureGallery_2004);
---
>                 return getImage ("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2006/GraphicalDefinition?FigureGallery", GMFGraphElementTypes.FigureGallery_2008);
>             case FigureDescriptorEditPart.VISUAL_ID :
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?FigureDescriptor", GMFGraphElementTypes.FigureDescriptor_3009);
132c156
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Rectangle", GMFGraphElementTypes.Rectangle_3001);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Rectangle", GMFGraphElementTypes.Rectangle_3010);
134c158
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Rectangle", GMFGraphElementTypes.Rectangle_3002);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Rectangle", GMFGraphElementTypes.Rectangle_3011);
136c160
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Ellipse", GMFGraphElementTypes.Ellipse_3003);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Ellipse", GMFGraphElementTypes.Ellipse_3012);
138c162
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?RoundedRectangle", GMFGraphElementTypes.RoundedRectangle_3004);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?RoundedRectangle", GMFGraphElementTypes.RoundedRectangle_3013);
140c164
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Polyline", GMFGraphElementTypes.Polyline_3005);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Polyline", GMFGraphElementTypes.Polyline_3014);
142c166
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Ellipse", GMFGraphElementTypes.Ellipse_3006);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Ellipse", GMFGraphElementTypes.Ellipse_3015);
144c168
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?RoundedRectangle", GMFGraphElementTypes.RoundedRectangle_3007);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?RoundedRectangle", GMFGraphElementTypes.RoundedRectangle_3016);
146c170,178
<                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Polyline", GMFGraphElementTypes.Polyline_3008);
---
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Polyline", GMFGraphElementTypes.Polyline_3017);
>             case Rectangle3EditPart.VISUAL_ID :
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Rectangle", GMFGraphElementTypes.Rectangle_3018);
>             case Ellipse3EditPart.VISUAL_ID :
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Ellipse", GMFGraphElementTypes.Ellipse_3019);
>             case RoundedRectangle3EditPart.VISUAL_ID :
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?RoundedRectangle", GMFGraphElementTypes.RoundedRectangle_3020);
>             case Polyline3EditPart.VISUAL_ID :
>                 return getImage ("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Polyline", GMFGraphElementTypes.Polyline_3021);
148c180,186
<                 return getImage ("Navigator?Diagram?http://www.eclipse.org/gmf/2005/GraphicalDefinition?Canvas", GMFGraphElementTypes.Canvas_1000);
---
>                 return getImage ("Navigator?Diagram?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Canvas", GMFGraphElementTypes.Canvas_1000);
>             case ChildAccessEditPart.VISUAL_ID :
>                 return getImage ("Navigator?Link?http://www.eclipse.org/gmf/2006/GraphicalDefinition?ChildAccess", GMFGraphElementTypes.ChildAccess_4002);
>             case CompartmentAccessorEditPart.VISUAL_ID :
>                 return getImage ("Navigator?Link?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Compartment?accessor", GMFGraphElementTypes.CompartmentAccessor_4003);
>             case DiagramLabelAccessorEditPart.VISUAL_ID :
>                 return getImage ("Navigator?Link?http://www.eclipse.org/gmf/2006/GraphicalDefinition?DiagramLabel?accessor", GMFGraphElementTypes.DiagramLabelAccessor_4004);
150c188
<                 return getImage ("Navigator?Link?http://www.eclipse.org/gmf/2005/GraphicalDefinition?DiagramElement?figure", GMFGraphElementTypes.DiagramElementFigure_4001);
---
>                 return getImage ("Navigator?Link?http://www.eclipse.org/gmf/2006/GraphicalDefinition?DiagramElement?figure", GMFGraphElementTypes.DiagramElementFigure_4005);
197c235
<                 return getCompartment_2001Text (view);
---
>                 return getCompartment_2005Text (view);
199c237
<                 return getNode_2002Text (view);
---
>                 return getNode_2006Text (view);
201c239
<                 return getConnection_2003Text (view);
---
>                 return getConnection_2007Text (view);
203c241,243
<                 return getFigureGallery_2004Text (view);
---
>                 return getFigureGallery_2008Text (view);
>             case FigureDescriptorEditPart.VISUAL_ID :
>                 return getFigureDescriptor_3009Text (view);
205c245
<                 return getRectangle_3001Text (view);
---
>                 return getRectangle_3010Text (view);
207c247
<                 return getRectangle_3002Text (view);
---
>                 return getRectangle_3011Text (view);
209c249
<                 return getEllipse_3003Text (view);
---
>                 return getEllipse_3012Text (view);
211c251
<                 return getRoundedRectangle_3004Text (view);
---
>                 return getRoundedRectangle_3013Text (view);
213c253
<                 return getPolyline_3005Text (view);
---
>                 return getPolyline_3014Text (view);
215c255
<                 return getEllipse_3006Text (view);
---
>                 return getEllipse_3015Text (view);
217c257
<                 return getRoundedRectangle_3007Text (view);
---
>                 return getRoundedRectangle_3016Text (view);
219c259,267
<                 return getPolyline_3008Text (view);
---
>                 return getPolyline_3017Text (view);
>             case Rectangle3EditPart.VISUAL_ID :
>                 return getRectangle_3018Text (view);
>             case Ellipse3EditPart.VISUAL_ID :
>                 return getEllipse_3019Text (view);
>             case RoundedRectangle3EditPart.VISUAL_ID :
>                 return getRoundedRectangle_3020Text (view);
>             case Polyline3EditPart.VISUAL_ID :
>                 return getPolyline_3021Text (view);
221a270,275
>             case ChildAccessEditPart.VISUAL_ID :
>                 return getChildAccess_4002Text (view);
>             case CompartmentAccessorEditPart.VISUAL_ID :
>                 return getCompartmentAccessor_4003Text (view);
>             case DiagramLabelAccessorEditPart.VISUAL_ID :
>                 return getDiagramLabelAccessor_4004Text (view);
223c277
<                 return getDiagramElementFigure_4001Text (view);
---
>                 return getDiagramElementFigure_4005Text (view);
229,239c283,290
<     private String getCompartment_2001Text (View view) {
<         IParser parser = ParserService.getInstance ().getParser (new IAdaptable () {
< 
<             public Object getAdapter (Class adapter) {
<                 if (String.class.equals (adapter)) {
<                     return GMFGraphVisualIDRegistry.getType (CompartmentNameEditPart.VISUAL_ID);
<                 }
<                 if (IElementType.class.equals (adapter)) {
<                     return GMFGraphElementTypes.Compartment_2001;
<                 }
<                 return null;
---
>     private String getCompartment_2005Text (View view) {
>         IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter (GMFGraphElementTypes.Compartment_2005, (view.getElement () != null ? view.getElement () : view), GMFGraphVisualIDRegistry.getType (CompartmentNameEditPart.VISUAL_ID));
>         IParser parser = ParserService.getInstance ().getParser (hintAdapter);
>         if (parser != null) {
>             return parser.getPrintString (hintAdapter, ParserOptions.NONE.intValue ());
>         } else {
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5005);
>             return "";
241d291
< 
244c294,296
<         );
---
>     private String getNode_2006Text (View view) {
>         IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter (GMFGraphElementTypes.Node_2006, (view.getElement () != null ? view.getElement () : view), GMFGraphVisualIDRegistry.getType (NodeNameEditPart.VISUAL_ID));
>         IParser parser = ParserService.getInstance ().getParser (hintAdapter);
246c298
<             return parser.getPrintString (new EObjectAdapter (view.getElement () != null ? view.getElement () : view), ParserOptions.NONE.intValue ());
---
>             return parser.getPrintString (hintAdapter, ParserOptions.NONE.intValue ());
248c300
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5001);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5006);
253,263c305,312
<     private String getNode_2002Text (View view) {
<         IParser parser = ParserService.getInstance ().getParser (new IAdaptable () {
< 
<             public Object getAdapter (Class adapter) {
<                 if (String.class.equals (adapter)) {
<                     return GMFGraphVisualIDRegistry.getType (NodeNameEditPart.VISUAL_ID);
<                 }
<                 if (IElementType.class.equals (adapter)) {
<                     return GMFGraphElementTypes.Node_2002;
<                 }
<                 return null;
---
>     private String getConnection_2007Text (View view) {
>         IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter (GMFGraphElementTypes.Connection_2007, (view.getElement () != null ? view.getElement () : view), GMFGraphVisualIDRegistry.getType (ConnectionNameEditPart.VISUAL_ID));
>         IParser parser = ParserService.getInstance ().getParser (hintAdapter);
>         if (parser != null) {
>             return parser.getPrintString (hintAdapter, ParserOptions.NONE.intValue ());
>         } else {
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5007);
>             return "";
265d313
< 
268c316,318
<         );
---
>     private String getFigureGallery_2008Text (View view) {
>         IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter (GMFGraphElementTypes.FigureGallery_2008, (view.getElement () != null ? view.getElement () : view), GMFGraphVisualIDRegistry.getType (FigureGalleryNameEditPart.VISUAL_ID));
>         IParser parser = ParserService.getInstance ().getParser (hintAdapter);
270c320
<             return parser.getPrintString (new EObjectAdapter (view.getElement () != null ? view.getElement () : view), ParserOptions.NONE.intValue ());
---
>             return parser.getPrintString (hintAdapter, ParserOptions.NONE.intValue ());
272c322
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5002);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5009);
277,287c327,334
<     private String getConnection_2003Text (View view) {
<         IParser parser = ParserService.getInstance ().getParser (new IAdaptable () {
< 
<             public Object getAdapter (Class adapter) {
<                 if (String.class.equals (adapter)) {
<                     return GMFGraphVisualIDRegistry.getType (ConnectionNameEditPart.VISUAL_ID);
<                 }
<                 if (IElementType.class.equals (adapter)) {
<                     return GMFGraphElementTypes.Connection_2003;
<                 }
<                 return null;
---
>     private String getFigureDescriptor_3009Text (View view) {
>         IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter (GMFGraphElementTypes.FigureDescriptor_3009, (view.getElement () != null ? view.getElement () : view), GMFGraphVisualIDRegistry.getType (FigureDescriptorNameEditPart.VISUAL_ID));
>         IParser parser = ParserService.getInstance ().getParser (hintAdapter);
>         if (parser != null) {
>             return parser.getPrintString (hintAdapter, ParserOptions.NONE.intValue ());
>         } else {
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5008);
>             return "";
289d335
< 
292,294c338,341
<         );
<         if (parser != null) {
<             return parser.getPrintString (new EObjectAdapter (view.getElement () != null ? view.getElement () : view), ParserOptions.NONE.intValue ());
---
>     private String getRectangle_3010Text (View view) {
>         EObject domainModelElement = view.getElement ();
>         if (domainModelElement != null) {
>             return ((RealFigure) domainModelElement).getName ();
296c343
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5003);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3010);
301,309c348,354
<     private String getFigureGallery_2004Text (View view) {
<         IParser parser = ParserService.getInstance ().getParser (new IAdaptable () {
< 
<             public Object getAdapter (Class adapter) {
<                 if (String.class.equals (adapter)) {
<                     return GMFGraphVisualIDRegistry.getType (FigureGalleryNameEditPart.VISUAL_ID);
<                 }
<                 if (IElementType.class.equals (adapter)) {
<                     return GMFGraphElementTypes.FigureGallery_2004;
---
>     private String getRectangle_3011Text (View view) {
>         EObject domainModelElement = view.getElement ();
>         if (domainModelElement != null) {
>             return ((RealFigure) domainModelElement).getName ();
>         } else {
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3011);
>             return "";
311d355
<                 return null;
313a358,365
>     private String getEllipse_3012Text (View view) {
>         EObject domainModelElement = view.getElement ();
>         if (domainModelElement != null) {
>             return ((RealFigure) domainModelElement).getName ();
>         } else {
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3012);
>             return "";
>         }
316,318c368,371
<         );
<         if (parser != null) {
<             return parser.getPrintString (new EObjectAdapter (view.getElement () != null ? view.getElement () : view), ParserOptions.NONE.intValue ());
---
>     private String getRoundedRectangle_3013Text (View view) {
>         EObject domainModelElement = view.getElement ();
>         if (domainModelElement != null) {
>             return ((RealFigure) domainModelElement).getName ();
320c373
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("Parser was not found for label " + 5004);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3013);
325c378
<     private String getRectangle_3001Text (View view) {
---
>     private String getPolyline_3014Text (View view) {
328c381
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
330c383
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3001);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3014);
335c388
<     private String getRectangle_3002Text (View view) {
---
>     private String getEllipse_3015Text (View view) {
338c391
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
340c393
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3002);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3015);
345c398
<     private String getEllipse_3003Text (View view) {
---
>     private String getRoundedRectangle_3016Text (View view) {
348c401
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
350c403
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3003);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3016);
355c408
<     private String getRoundedRectangle_3004Text (View view) {
---
>     private String getPolyline_3017Text (View view) {
358c411
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
360c413
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3004);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3017);
365c418
<     private String getPolyline_3005Text (View view) {
---
>     private String getRectangle_3018Text (View view) {
368c421
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
370c423
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3005);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3018);
375c428
<     private String getEllipse_3006Text (View view) {
---
>     private String getEllipse_3019Text (View view) {
378c431
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
380c433
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3006);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3019);
385c438
<     private String getRoundedRectangle_3007Text (View view) {
---
>     private String getRoundedRectangle_3020Text (View view) {
388c441
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
390c443
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3007);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3020);
395c448
<     private String getPolyline_3008Text (View view) {
---
>     private String getPolyline_3021Text (View view) {
398c451
<             return ((Identity) domainModelElement).getName ();
---
>             return ((RealFigure) domainModelElement).getName ();
400c453
<             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3008);
---
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 3021);
415c468,486
<     private String getDiagramElementFigure_4001Text (View view) {
---
>     private String getChildAccess_4002Text (View view) {
>         EObject domainModelElement = view.getElement ();
>         if (domainModelElement != null) {
>             return ((ChildAccess) domainModelElement).getAccessor ();
>         } else {
>             GMFGraphDiagramEditorPlugin.getInstance ().logError ("No domain element for view with visualID = " + 4002);
>             return "";
>         }
>     }
> 
>     private String getCompartmentAccessor_4003Text (View view) {
>         return "";
>     }
> 
>     private String getDiagramLabelAccessor_4004Text (View view) {
>         return "";
>     }
> 
>     private String getDiagramElementFigure_4005Text (View view) {
