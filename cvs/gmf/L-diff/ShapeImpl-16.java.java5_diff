5,6d4
< import java.util.Collection;
< 
9,10d6
< import org.eclipse.emf.common.notify.NotificationChain;
< 
15,16d10
< import org.eclipse.emf.ecore.InternalEObject;
< 
19,24d12
< import org.eclipse.emf.ecore.impl.EObjectImpl;
< 
< import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
< 
< import org.eclipse.emf.ecore.util.EObjectWithInverseResolvingEList;
< 
27,36d14
< import org.eclipse.emf.ecore.util.InternalEList;
< 
< import org.eclipse.gmf.gmfgraph.Border;
< 
< import org.eclipse.gmf.gmfgraph.Color;
< 
< import org.eclipse.gmf.gmfgraph.DiagramElement;
< 
< import org.eclipse.gmf.gmfgraph.Dimension;
< 
39,42d16
< import org.eclipse.gmf.gmfgraph.FigureHandle;
< 
< import org.eclipse.gmf.gmfgraph.FigureMarker;
< 
45,46d18
< import org.eclipse.gmf.gmfgraph.Font;
< 
49,56d20
< import org.eclipse.gmf.gmfgraph.Identity;
< 
< import org.eclipse.gmf.gmfgraph.Insets;
< 
< import org.eclipse.gmf.gmfgraph.Layout;
< 
< import org.eclipse.gmf.gmfgraph.LayoutData;
< 
59,60d22
< import org.eclipse.gmf.gmfgraph.Point;
< 
63,79c25
< public abstract class ShapeImpl extends EObjectImpl implements Shape {
<     protected LayoutData layoutData = null;
<     protected Layout layout = null;
<     protected EList < DiagramElement > referencingElements = null;
<     protected static final String NAME_EDEFAULT = null;
<     protected String name = NAME_EDEFAULT;
<     protected EList < FigureMarker > children = null;
<     protected Color foregroundColor = null;
<     protected Color backgroundColor = null;
<     protected Dimension maximumSize = null;
<     protected Dimension minimumSize = null;
<     protected Dimension preferredSize = null;
<     protected Font font = null;
<     protected Insets insets = null;
<     protected Border border = null;
<     protected Point location = null;
<     protected Point size = null;
---
> public abstract class ShapeImpl extends RealFigureImpl implements Shape {
102,492d47
<     public LayoutData getLayoutData () {
<         return layoutData;
<     }
< 
<     public NotificationChain basicSetLayoutData (LayoutData newLayoutData, NotificationChain msgs) {
<         LayoutData oldLayoutData = layoutData;
<         layoutData = newLayoutData;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__LAYOUT_DATA, oldLayoutData, newLayoutData);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setLayoutData (LayoutData newLayoutData) {
<         if (newLayoutData != layoutData) {
<             NotificationChain msgs = null;
<             if (layoutData != null) msgs = ((InternalEObject) layoutData).eInverseRemove (this, GMFGraphPackage.LAYOUT_DATA__OWNER, LayoutData.class, msgs);
< 
<             if (newLayoutData != null) msgs = ((InternalEObject) newLayoutData).eInverseAdd (this, GMFGraphPackage.LAYOUT_DATA__OWNER, LayoutData.class, msgs);
< 
<             msgs = basicSetLayoutData (newLayoutData, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__LAYOUT_DATA, newLayoutData, newLayoutData));
< 
<     }
< 
<     public Layout getLayout () {
<         return layout;
<     }
< 
<     public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs) {
<         Layout oldLayout = layout;
<         layout = newLayout;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__LAYOUT, oldLayout, newLayout);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setLayout (Layout newLayout) {
<         if (newLayout != layout) {
<             NotificationChain msgs = null;
<             if (layout != null) msgs = ((InternalEObject) layout).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__LAYOUT, null, msgs);
< 
<             if (newLayout != null) msgs = ((InternalEObject) newLayout).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__LAYOUT, null, msgs);
< 
<             msgs = basicSetLayout (newLayout, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__LAYOUT, newLayout, newLayout));
< 
<     }
< 
<     public String getName () {
<         return name;
<     }
< 
<     public void setName (String newName) {
<         String oldName = name;
<         name = newName;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__NAME, oldName, name));
< 
<     }
< 
<     public EList < FigureMarker > getChildren () {
<         if (children == null) {
<             children = new EObjectContainmentWithInverseEList < FigureMarker > (FigureMarker.class, this, GMFGraphPackage.SHAPE__CHILDREN, GMFGraphPackage.FIGURE_MARKER__PARENT);
<         }
<         return children;
<     }
< 
<     public Figure getParent () {
<         if (eContainerFeatureID != GMFGraphPackage.SHAPE__PARENT) return null;
< 
<         return (Figure) eContainer ();
<     }
< 
<     public Color getForegroundColor () {
<         return foregroundColor;
<     }
< 
<     public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs) {
<         Color oldForegroundColor = foregroundColor;
<         foregroundColor = newForegroundColor;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__FOREGROUND_COLOR, oldForegroundColor, newForegroundColor);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setForegroundColor (Color newForegroundColor) {
<         if (newForegroundColor != foregroundColor) {
<             NotificationChain msgs = null;
<             if (foregroundColor != null) msgs = ((InternalEObject) foregroundColor).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__FOREGROUND_COLOR, null, msgs);
< 
<             if (newForegroundColor != null) msgs = ((InternalEObject) newForegroundColor).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__FOREGROUND_COLOR, null, msgs);
< 
<             msgs = basicSetForegroundColor (newForegroundColor, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__FOREGROUND_COLOR, newForegroundColor, newForegroundColor));
< 
<     }
< 
<     public Color getBackgroundColor () {
<         return backgroundColor;
<     }
< 
<     public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs) {
<         Color oldBackgroundColor = backgroundColor;
<         backgroundColor = newBackgroundColor;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__BACKGROUND_COLOR, oldBackgroundColor, newBackgroundColor);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setBackgroundColor (Color newBackgroundColor) {
<         if (newBackgroundColor != backgroundColor) {
<             NotificationChain msgs = null;
<             if (backgroundColor != null) msgs = ((InternalEObject) backgroundColor).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__BACKGROUND_COLOR, null, msgs);
< 
<             if (newBackgroundColor != null) msgs = ((InternalEObject) newBackgroundColor).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__BACKGROUND_COLOR, null, msgs);
< 
<             msgs = basicSetBackgroundColor (newBackgroundColor, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__BACKGROUND_COLOR, newBackgroundColor, newBackgroundColor));
< 
<     }
< 
<     public Dimension getMaximumSize () {
<         return maximumSize;
<     }
< 
<     public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs) {
<         Dimension oldMaximumSize = maximumSize;
<         maximumSize = newMaximumSize;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__MAXIMUM_SIZE, oldMaximumSize, newMaximumSize);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setMaximumSize (Dimension newMaximumSize) {
<         if (newMaximumSize != maximumSize) {
<             NotificationChain msgs = null;
<             if (maximumSize != null) msgs = ((InternalEObject) maximumSize).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__MAXIMUM_SIZE, null, msgs);
< 
<             if (newMaximumSize != null) msgs = ((InternalEObject) newMaximumSize).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__MAXIMUM_SIZE, null, msgs);
< 
<             msgs = basicSetMaximumSize (newMaximumSize, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__MAXIMUM_SIZE, newMaximumSize, newMaximumSize));
< 
<     }
< 
<     public Dimension getMinimumSize () {
<         return minimumSize;
<     }
< 
<     public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs) {
<         Dimension oldMinimumSize = minimumSize;
<         minimumSize = newMinimumSize;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__MINIMUM_SIZE, oldMinimumSize, newMinimumSize);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setMinimumSize (Dimension newMinimumSize) {
<         if (newMinimumSize != minimumSize) {
<             NotificationChain msgs = null;
<             if (minimumSize != null) msgs = ((InternalEObject) minimumSize).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__MINIMUM_SIZE, null, msgs);
< 
<             if (newMinimumSize != null) msgs = ((InternalEObject) newMinimumSize).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__MINIMUM_SIZE, null, msgs);
< 
<             msgs = basicSetMinimumSize (newMinimumSize, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__MINIMUM_SIZE, newMinimumSize, newMinimumSize));
< 
<     }
< 
<     public Dimension getPreferredSize () {
<         return preferredSize;
<     }
< 
<     public NotificationChain basicSetPreferredSize (Dimension newPreferredSize, NotificationChain msgs) {
<         Dimension oldPreferredSize = preferredSize;
<         preferredSize = newPreferredSize;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__PREFERRED_SIZE, oldPreferredSize, newPreferredSize);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setPreferredSize (Dimension newPreferredSize) {
<         if (newPreferredSize != preferredSize) {
<             NotificationChain msgs = null;
<             if (preferredSize != null) msgs = ((InternalEObject) preferredSize).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__PREFERRED_SIZE, null, msgs);
< 
<             if (newPreferredSize != null) msgs = ((InternalEObject) newPreferredSize).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__PREFERRED_SIZE, null, msgs);
< 
<             msgs = basicSetPreferredSize (newPreferredSize, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__PREFERRED_SIZE, newPreferredSize, newPreferredSize));
< 
<     }
< 
<     public Font getFont () {
<         return font;
<     }
< 
<     public NotificationChain basicSetFont (Font newFont, NotificationChain msgs) {
<         Font oldFont = font;
<         font = newFont;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__FONT, oldFont, newFont);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setFont (Font newFont) {
<         if (newFont != font) {
<             NotificationChain msgs = null;
<             if (font != null) msgs = ((InternalEObject) font).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__FONT, null, msgs);
< 
<             if (newFont != null) msgs = ((InternalEObject) newFont).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__FONT, null, msgs);
< 
<             msgs = basicSetFont (newFont, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__FONT, newFont, newFont));
< 
<     }
< 
<     public Insets getInsets () {
<         return insets;
<     }
< 
<     public NotificationChain basicSetInsets (Insets newInsets, NotificationChain msgs) {
<         Insets oldInsets = insets;
<         insets = newInsets;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__INSETS, oldInsets, newInsets);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setInsets (Insets newInsets) {
<         if (newInsets != insets) {
<             NotificationChain msgs = null;
<             if (insets != null) msgs = ((InternalEObject) insets).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__INSETS, null, msgs);
< 
<             if (newInsets != null) msgs = ((InternalEObject) newInsets).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__INSETS, null, msgs);
< 
<             msgs = basicSetInsets (newInsets, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__INSETS, newInsets, newInsets));
< 
<     }
< 
<     public Border getBorder () {
<         return border;
<     }
< 
<     public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs) {
<         Border oldBorder = border;
<         border = newBorder;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__BORDER, oldBorder, newBorder);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setBorder (Border newBorder) {
<         if (newBorder != border) {
<             NotificationChain msgs = null;
<             if (border != null) msgs = ((InternalEObject) border).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__BORDER, null, msgs);
< 
<             if (newBorder != null) msgs = ((InternalEObject) newBorder).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__BORDER, null, msgs);
< 
<             msgs = basicSetBorder (newBorder, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__BORDER, newBorder, newBorder));
< 
<     }
< 
<     public Point getLocation () {
<         return location;
<     }
< 
<     public NotificationChain basicSetLocation (Point newLocation, NotificationChain msgs) {
<         Point oldLocation = location;
<         location = newLocation;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__LOCATION, oldLocation, newLocation);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setLocation (Point newLocation) {
<         if (newLocation != location) {
<             NotificationChain msgs = null;
<             if (location != null) msgs = ((InternalEObject) location).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__LOCATION, null, msgs);
< 
<             if (newLocation != null) msgs = ((InternalEObject) newLocation).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__LOCATION, null, msgs);
< 
<             msgs = basicSetLocation (newLocation, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__LOCATION, newLocation, newLocation));
< 
<     }
< 
<     public Point getSize () {
<         return size;
<     }
< 
<     public NotificationChain basicSetSize (Point newSize, NotificationChain msgs) {
<         Point oldSize = size;
<         size = newSize;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__SIZE, oldSize, newSize);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setSize (Point newSize) {
<         if (newSize != size) {
<             NotificationChain msgs = null;
<             if (size != null) msgs = ((InternalEObject) size).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__SIZE, null, msgs);
< 
<             if (newSize != null) msgs = ((InternalEObject) newSize).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__SIZE, null, msgs);
< 
<             msgs = basicSetSize (newSize, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.SHAPE__SIZE, newSize, newSize));
< 
<     }
< 
<     public EList < DiagramElement > getReferencingElements () {
<         if (referencingElements == null) {
<             referencingElements = new EObjectWithInverseResolvingEList < DiagramElement > (DiagramElement.class, this, GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS, GMFGraphPackage.DIAGRAM_ELEMENT__FIGURE);
<         }
<         return referencingElements;
<     }
< 
495c50
<         for (FigureMarker next : getChildren ()) {
---
>         for (Figure next : getChildren ()) {
499,500c54
<                 assert next instanceof Figure;
<                 r.add ((Figure) next);
---
>                 r.add (next);
506,571d59
<     @SuppressWarnings("unchecked")
<     @Override
<     public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
<         switch (featureID) {
<             case GMFGraphPackage.SHAPE__LAYOUT_DATA :
<                 if (layoutData != null) msgs = ((InternalEObject) layoutData).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.SHAPE__LAYOUT_DATA, null, msgs);
< 
<                 return basicSetLayoutData ((LayoutData) otherEnd, msgs);
<             case GMFGraphPackage.SHAPE__PARENT :
<                 if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
< 
<                 return eBasicSetContainer (otherEnd, GMFGraphPackage.SHAPE__PARENT, msgs);
<             case GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS :
<                 return ((InternalEList < InternalEObject >) (InternalEList < ? >) getReferencingElements ()).basicAdd (otherEnd, msgs);
<             case GMFGraphPackage.SHAPE__CHILDREN :
<                 return ((InternalEList < InternalEObject >) (InternalEList < ? >) getChildren ()).basicAdd (otherEnd, msgs);
<         }
<         return super.eInverseAdd (otherEnd, featureID, msgs);
<     }
< 
<     @Override
<     public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
<         switch (featureID) {
<             case GMFGraphPackage.SHAPE__LAYOUT_DATA :
<                 return basicSetLayoutData (null, msgs);
<             case GMFGraphPackage.SHAPE__LAYOUT :
<                 return basicSetLayout (null, msgs);
<             case GMFGraphPackage.SHAPE__PARENT :
<                 return eBasicSetContainer (null, GMFGraphPackage.SHAPE__PARENT, msgs);
<             case GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS :
<                 return ((InternalEList < ? >) getReferencingElements ()).basicRemove (otherEnd, msgs);
<             case GMFGraphPackage.SHAPE__CHILDREN :
<                 return ((InternalEList < ? >) getChildren ()).basicRemove (otherEnd, msgs);
<             case GMFGraphPackage.SHAPE__FOREGROUND_COLOR :
<                 return basicSetForegroundColor (null, msgs);
<             case GMFGraphPackage.SHAPE__BACKGROUND_COLOR :
<                 return basicSetBackgroundColor (null, msgs);
<             case GMFGraphPackage.SHAPE__MAXIMUM_SIZE :
<                 return basicSetMaximumSize (null, msgs);
<             case GMFGraphPackage.SHAPE__MINIMUM_SIZE :
<                 return basicSetMinimumSize (null, msgs);
<             case GMFGraphPackage.SHAPE__PREFERRED_SIZE :
<                 return basicSetPreferredSize (null, msgs);
<             case GMFGraphPackage.SHAPE__FONT :
<                 return basicSetFont (null, msgs);
<             case GMFGraphPackage.SHAPE__INSETS :
<                 return basicSetInsets (null, msgs);
<             case GMFGraphPackage.SHAPE__BORDER :
<                 return basicSetBorder (null, msgs);
<             case GMFGraphPackage.SHAPE__LOCATION :
<                 return basicSetLocation (null, msgs);
<             case GMFGraphPackage.SHAPE__SIZE :
<                 return basicSetSize (null, msgs);
<         }
<         return super.eInverseRemove (otherEnd, featureID, msgs);
<     }
< 
<     @Override
<     public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
<         switch (eContainerFeatureID) {
<             case GMFGraphPackage.SHAPE__PARENT :
<                 return eInternalContainer ().eInverseRemove (this, GMFGraphPackage.FIGURE__CHILDREN, Figure.class, msgs);
<         }
<         return super.eBasicRemoveFromContainerFeature (msgs);
<     }
< 
575,606d62
<             case GMFGraphPackage.SHAPE__LAYOUT_DATA :
<                 return getLayoutData ();
<             case GMFGraphPackage.SHAPE__LAYOUT :
<                 return getLayout ();
<             case GMFGraphPackage.SHAPE__PARENT :
<                 return getParent ();
<             case GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS :
<                 return getReferencingElements ();
<             case GMFGraphPackage.SHAPE__NAME :
<                 return getName ();
<             case GMFGraphPackage.SHAPE__CHILDREN :
<                 return getChildren ();
<             case GMFGraphPackage.SHAPE__FOREGROUND_COLOR :
<                 return getForegroundColor ();
<             case GMFGraphPackage.SHAPE__BACKGROUND_COLOR :
<                 return getBackgroundColor ();
<             case GMFGraphPackage.SHAPE__MAXIMUM_SIZE :
<                 return getMaximumSize ();
<             case GMFGraphPackage.SHAPE__MINIMUM_SIZE :
<                 return getMinimumSize ();
<             case GMFGraphPackage.SHAPE__PREFERRED_SIZE :
<                 return getPreferredSize ();
<             case GMFGraphPackage.SHAPE__FONT :
<                 return getFont ();
<             case GMFGraphPackage.SHAPE__INSETS :
<                 return getInsets ();
<             case GMFGraphPackage.SHAPE__BORDER :
<                 return getBorder ();
<             case GMFGraphPackage.SHAPE__LOCATION :
<                 return getLocation ();
<             case GMFGraphPackage.SHAPE__SIZE :
<                 return getSize ();
629,675d84
<             case GMFGraphPackage.SHAPE__LAYOUT_DATA :
<                 setLayoutData ((LayoutData) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__LAYOUT :
<                 setLayout ((Layout) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS :
<                 getReferencingElements ().clear ();
<                 getReferencingElements ().addAll ((Collection < ? extends DiagramElement >) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__NAME :
<                 setName ((String) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__CHILDREN :
<                 getChildren ().clear ();
<                 getChildren ().addAll ((Collection < ? extends FigureMarker >) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__FOREGROUND_COLOR :
<                 setForegroundColor ((Color) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__BACKGROUND_COLOR :
<                 setBackgroundColor ((Color) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__MAXIMUM_SIZE :
<                 setMaximumSize ((Dimension) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__MINIMUM_SIZE :
<                 setMinimumSize ((Dimension) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__PREFERRED_SIZE :
<                 setPreferredSize ((Dimension) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__FONT :
<                 setFont ((Font) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__INSETS :
<                 setInsets ((Insets) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__BORDER :
<                 setBorder ((Border) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__LOCATION :
<                 setLocation ((Point) newValue);
<                 return;
<             case GMFGraphPackage.SHAPE__SIZE :
<                 setSize ((Point) newValue);
<                 return;
701,745d109
<             case GMFGraphPackage.SHAPE__LAYOUT_DATA :
<                 setLayoutData ((LayoutData) null);
<                 return;
<             case GMFGraphPackage.SHAPE__LAYOUT :
<                 setLayout ((Layout) null);
<                 return;
<             case GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS :
<                 getReferencingElements ().clear ();
<                 return;
<             case GMFGraphPackage.SHAPE__NAME :
<                 setName (NAME_EDEFAULT);
<                 return;
<             case GMFGraphPackage.SHAPE__CHILDREN :
<                 getChildren ().clear ();
<                 return;
<             case GMFGraphPackage.SHAPE__FOREGROUND_COLOR :
<                 setForegroundColor ((Color) null);
<                 return;
<             case GMFGraphPackage.SHAPE__BACKGROUND_COLOR :
<                 setBackgroundColor ((Color) null);
<                 return;
<             case GMFGraphPackage.SHAPE__MAXIMUM_SIZE :
<                 setMaximumSize ((Dimension) null);
<                 return;
<             case GMFGraphPackage.SHAPE__MINIMUM_SIZE :
<                 setMinimumSize ((Dimension) null);
<                 return;
<             case GMFGraphPackage.SHAPE__PREFERRED_SIZE :
<                 setPreferredSize ((Dimension) null);
<                 return;
<             case GMFGraphPackage.SHAPE__FONT :
<                 setFont ((Font) null);
<                 return;
<             case GMFGraphPackage.SHAPE__INSETS :
<                 setInsets ((Insets) null);
<                 return;
<             case GMFGraphPackage.SHAPE__BORDER :
<                 setBorder ((Border) null);
<                 return;
<             case GMFGraphPackage.SHAPE__LOCATION :
<                 setLocation ((Point) null);
<                 return;
<             case GMFGraphPackage.SHAPE__SIZE :
<                 setSize ((Point) null);
<                 return;
771,802d134
<             case GMFGraphPackage.SHAPE__LAYOUT_DATA :
<                 return layoutData != null;
<             case GMFGraphPackage.SHAPE__LAYOUT :
<                 return layout != null;
<             case GMFGraphPackage.SHAPE__PARENT :
<                 return getParent () != null;
<             case GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS :
<                 return referencingElements != null && ! referencingElements.isEmpty ();
<             case GMFGraphPackage.SHAPE__NAME :
<                 return NAME_EDEFAULT == null ? name != null : ! NAME_EDEFAULT.equals (name);
<             case GMFGraphPackage.SHAPE__CHILDREN :
<                 return children != null && ! children.isEmpty ();
<             case GMFGraphPackage.SHAPE__FOREGROUND_COLOR :
<                 return foregroundColor != null;
<             case GMFGraphPackage.SHAPE__BACKGROUND_COLOR :
<                 return backgroundColor != null;
<             case GMFGraphPackage.SHAPE__MAXIMUM_SIZE :
<                 return maximumSize != null;
<             case GMFGraphPackage.SHAPE__MINIMUM_SIZE :
<                 return minimumSize != null;
<             case GMFGraphPackage.SHAPE__PREFERRED_SIZE :
<                 return preferredSize != null;
<             case GMFGraphPackage.SHAPE__FONT :
<                 return font != null;
<             case GMFGraphPackage.SHAPE__INSETS :
<                 return insets != null;
<             case GMFGraphPackage.SHAPE__BORDER :
<                 return border != null;
<             case GMFGraphPackage.SHAPE__LOCATION :
<                 return location != null;
<             case GMFGraphPackage.SHAPE__SIZE :
<                 return size != null;
888,929d219
<     public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass) {
<         if (baseClass == FigureHandle.class) {
<             switch (derivedFeatureID) {
<                 case GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS :
<                     return GMFGraphPackage.FIGURE_HANDLE__REFERENCING_ELEMENTS;
<                 default :
<                     return - 1;
<             }
<         }
<         if (baseClass == Identity.class) {
<             switch (derivedFeatureID) {
<                 case GMFGraphPackage.SHAPE__NAME :
<                     return GMFGraphPackage.IDENTITY__NAME;
<                 default :
<                     return - 1;
<             }
<         }
<         return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
<     }
< 
<     @Override
<     public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass) {
<         if (baseClass == FigureHandle.class) {
<             switch (baseFeatureID) {
<                 case GMFGraphPackage.FIGURE_HANDLE__REFERENCING_ELEMENTS :
<                     return GMFGraphPackage.SHAPE__REFERENCING_ELEMENTS;
<                 default :
<                     return - 1;
<             }
<         }
<         if (baseClass == Identity.class) {
<             switch (baseFeatureID) {
<                 case GMFGraphPackage.IDENTITY__NAME :
<                     return GMFGraphPackage.SHAPE__NAME;
<                 default :
<                     return - 1;
<             }
<         }
<         return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
<     }
< 
<     @Override
934,936c224
<         result.append (" (name: ");
<         result.append (name);
<         result.append (", outline: ");
---
>         result.append (" (outline: ");
