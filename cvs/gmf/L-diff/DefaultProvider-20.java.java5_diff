38a39,40
> import org.eclipse.draw2d.geometry.PrecisionDimension;
> 
74a77,80
> import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
> 
> import org.eclipse.gmf.runtime.common.core.command.ICommand;
> 
78a85,88
> import org.eclipse.gmf.runtime.diagram.core.commands.SetConnectionAnchorsCommand;
> 
> import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
> 
255c265
<                     if (fromNode != null && toNode != null && ! fromNode.equals (toNode)) {
---
>                     if (fromNode != null && toNode != null && ! checkSelfEdge (from, to, editPartToNodeDict)) {
276c286
<             if (fromNode != null && toNode != null && ! fromNode.equals (toNode)) {
---
>             if (fromNode != null && toNode != null && ! checkSelfEdge (from, to, editPartToNodeDict)) {
282a293,298
>     private boolean checkSelfEdge (EditPart from, EditPart to, Map dictionary) {
>         Node graphSource = from instanceof IBorderItemEditPart ? (Node) dictionary.get (from.getParent ()) : (Node) dictionary.get (from);
>         Node graphTarget = to instanceof IBorderItemEditPart ? (Node) dictionary.get (to.getParent ()) : (Node) dictionary.get (to);
>         return graphSource != null && graphTarget != null && graphSource.equals (graphTarget);
>     }
> 
478a495
>         if (cep.getSource ().equals (source.data)) {
489a507,509
>                     if (sourceAnchorCommand instanceof ICommandProxy) {
>                         updateNewSlidingAnchorReferenceRatio ((ICommandProxy) sourceAnchorCommand, true, sourceRatio);
>                     }
493c513,518
<         reconnectRequest.setType (org.eclipse.gef.RequestConstants.REQ_RECONNECT_TARGET);
---
>         } else {
>             resultantSourceAnchorReference = getNewAnchorReferencePoint (source, ((Connection) cep.getFigure ()).getSourceAnchor ().getReferencePoint ());
>         }
>         if (cep.getTarget ().equals (target.data)) {
>             ReconnectRequest reconnectRequest = new ReconnectRequest (org.eclipse.gef.RequestConstants.REQ_RECONNECT_TARGET);
>             reconnectRequest.setConnectionEditPart (cep);
502a528,530
>                     if (targetAnchorCommand instanceof ICommandProxy) {
>                         updateNewSlidingAnchorReferenceRatio ((ICommandProxy) targetAnchorCommand, false, targetRatio);
>                     }
505a534,536
>         } else {
>             resultantTargetAnchorReference = getNewAnchorReferencePoint (target, ((Connection) cep.getFigure ()).getTargetAnchor ().getReferencePoint ());
>         }
508a540,582
>     private void updateNewSlidingAnchorReferenceRatio (ICommandProxy setAnchorCommand, boolean source, PrecisionPoint ratio) {
>         SetConnectionAnchorsCommand cmd = findSetConnectionAnchorsCommand (setAnchorCommand.getICommand ());
>         if (cmd != null) {
>             PrecisionPoint newRatio = null;
>             if (source) {
>                 newRatio = cmd.getNewSourceTerminal () == null ? new PrecisionPoint (0.5, 0.5) : BaseSlidableAnchor.parseTerminalString (cmd.getNewSourceTerminal ());
>             } else {
>                 newRatio = cmd.getNewTargetTerminal () == null ? new PrecisionPoint (0.5, 0.5) : BaseSlidableAnchor.parseTerminalString (cmd.getNewTargetTerminal ());
>             }
>             if (newRatio != null) {
>                 ratio.preciseX = newRatio.preciseX;
>                 ratio.preciseY = newRatio.preciseY;
>                 ratio.updateInts ();
>             }
>         }
>     }
> 
>     private SetConnectionAnchorsCommand findSetConnectionAnchorsCommand (ICommand cmd) {
>         if (cmd instanceof SetConnectionAnchorsCommand) {
>             return (SetConnectionAnchorsCommand) cmd;
>         } else if (cmd instanceof CompositeCommand) {
>             for (Iterator itr = ((CompositeCommand) cmd).listIterator ();
>             itr.hasNext ();) {
>                 ICommand childCmd = (ICommand) itr.next ();
>                 SetConnectionAnchorsCommand setAnchorsCmd = findSetConnectionAnchorsCommand (childCmd);
>                 if (setAnchorsCmd != null) {
>                     return setAnchorsCmd;
>                 }
>             }
>         }
> 
>         return null;
>     }
> 
>     private Point getNewAnchorReferencePoint (Node node, Point oldAbsReference) {
>         GraphicalEditPart gep = (GraphicalEditPart) node.data;
>         PrecisionPoint parentLocation = new PrecisionPoint (gep.getFigure ().getBounds ().getLocation ());
>         gep.getFigure ().translateToAbsolute (parentLocation);
>         PrecisionDimension diff = new PrecisionDimension (oldAbsReference.preciseX () - parentLocation.preciseX (), oldAbsReference.preciseY () - parentLocation.preciseY ());
>         getMapMode ().DPtoLP (diff);
>         return new Point (node.x, node.y).translate (diff);
>     }
> 
