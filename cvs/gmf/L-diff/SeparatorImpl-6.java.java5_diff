3,4d2
< import org.eclipse.emf.common.notify.Notification;
< 
11,12d8
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
< 
15,16d10
< import org.eclipse.emf.ecore.util.EcoreUtil;
< 
40,60d33
<     public NotificationChain basicSetGroup (ToolGroup newGroup, NotificationChain msgs) {
<         msgs = eBasicSetContainer ((InternalEObject) newGroup, GMFGenPackage.SEPARATOR__GROUP, msgs);
<         return msgs;
<     }
< 
<     public void setGroup (ToolGroup newGroup) {
<         if (newGroup != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.SEPARATOR__GROUP && newGroup != null)) {
<             if (EcoreUtil.isAncestor (this, newGroup)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
< 
<             NotificationChain msgs = null;
<             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
< 
<             if (newGroup != null) msgs = ((InternalEObject) newGroup).eInverseAdd (this, GMFGenPackage.TOOL_GROUP__ENTRIES, ToolGroup.class, msgs);
< 
<             msgs = basicSetGroup (newGroup, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.SEPARATOR__GROUP, newGroup, newGroup));
< 
<     }
< 
67c40
<                 return basicSetGroup ((ToolGroup) otherEnd, msgs);
---
>                 return eBasicSetContainer (otherEnd, GMFGenPackage.SEPARATOR__GROUP, msgs);
76c49
<                 return basicSetGroup (null, msgs);
---
>                 return eBasicSetContainer (null, GMFGenPackage.SEPARATOR__GROUP, msgs);
100,119d72
<     public void eSet (int featureID, Object newValue) {
<         switch (featureID) {
<             case GMFGenPackage.SEPARATOR__GROUP :
<                 setGroup ((ToolGroup) newValue);
<                 return;
<         }
<         super.eSet (featureID, newValue);
<     }
< 
<     @Override
<     public void eUnset (int featureID) {
<         switch (featureID) {
<             case GMFGenPackage.SEPARATOR__GROUP :
<                 setGroup ((ToolGroup) null);
<                 return;
<         }
<         super.eUnset (featureID);
<     }
< 
<     @Override
