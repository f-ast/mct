85a86
>     public static final String OPTION_OUTPUT_RESOURCE_FULL_PATH = SECTION_ID + ".outputResource";
87a89
>     private FileNameOption myOutputGalleryPathOption;
94c96,98
<         myInputPathOption = addFileNameOption (OPTION_INPUT_RESOURCE_FULL_PATH, "Input GMFGraph instance", "", THE_ONLY_PAGE_INDEX);
---
>         myInputPathOption = addFileNameOption (false, OPTION_INPUT_RESOURCE_FULL_PATH, "Input GMFGraph instance", "", THE_ONLY_PAGE_INDEX);
>         myOutputGalleryPathOption = addFileNameOption (true, OPTION_OUTPUT_RESOURCE_FULL_PATH, "Create Figure Gallery", "", THE_ONLY_PAGE_INDEX);
>         myOutputGalleryPathOption.setRequired (false);
107a112
>         validateOptions (myOutputGalleryPathOption);
137a143,156
>         createFigureGallery (generator.getGenerationInfo ());
>     }
> 
>     private void createFigureGallery (StandaloneGenerator.GenerationInfo info) throws CoreException {
>         if (! myOutputGalleryPathOption.isEmpty ()) {
>             String path = myOutputGalleryPathOption.getText ();
>             Resource galleryResource = new ResourceSetImpl ().createResource (URI.createFileURI (path));
>             galleryResource.getContents ().add (new StandaloneGalleryConverter ().convertFigureGallery (info));
>             try {
>                 galleryResource.save (null);
>             } catch (IOException e) {
>                 throw new CoreException (new Status (IStatus.ERROR, MY_PLUGIN_ID, 0, e.getMessage (), e));
>             }
>         }
196a216,218
>         if (! validateOutputGalleryPath ()) {
>             return;
>         }
258c280
<     private FileNameOption addFileNameOption (String name, String label, String value, int pageIndex) {
---
>     private FileNameOption addFileNameOption (boolean saveNotLoad, String name, String label, String value, int pageIndex) {
259a282
>         result.setSaveNotLoad (saveNotLoad);
286a310,325
>     private boolean validateOutputGalleryPath () {
>         if (myOutputGalleryPathOption.isEmpty ()) {
>             return true;
>         }
>         String path = myOutputGalleryPathOption.getText ();
>         try {
>             URI.createFileURI (path);
>         } catch (IllegalArgumentException e) {
>             String message = MessageFormat.format ("Path {0} is invalid", new Object [] {path});
>             getTheOnlyPage ().setPageComplete (false);
>             getTheOnlyPage ().setErrorMessage (message);
>             return false;
>         }
>         return true;
>     }
> 
