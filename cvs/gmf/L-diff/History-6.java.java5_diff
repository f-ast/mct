28,31c28,31
<     private final Map myTopNodeMap;
<     private final Map myNodeMap;
<     private final Map myLinkMap;
<     private final Map myMetricMap;
---
>     private final Map < NodeMapping, GenTopLevelNode > myTopNodeMap;
>     private final Map < NodeMapping, Set < GenChildNode > > myNodeMap;
>     private final Map < LinkMapping, GenLink > myLinkMap;
>     private final Map < MetricRule, GenMetricRule > myMetricMap;
34,37c34,37
<         myTopNodeMap = new HashMap ();
<         myNodeMap = new HashMap ();
<         myLinkMap = new HashMap ();
<         myMetricMap = new HashMap ();
---
>         myTopNodeMap = new HashMap < NodeMapping, GenTopLevelNode > ();
>         myNodeMap = new HashMap < NodeMapping, Set < GenChildNode > > ();
>         myLinkMap = new HashMap < LinkMapping, GenLink > ();
>         myMetricMap = new HashMap < MetricRule, GenMetricRule > ();
47c47
<         Set genNodes = (Set) myNodeMap.get (nodeMap);
---
>         Set < GenChildNode > genNodes = myNodeMap.get (nodeMap);
49c49
<             genNodes = new HashSet ();
---
>             genNodes = new HashSet < GenChildNode > ();
67c67
<         return (GenMetricRule) myMetricMap.get (metric);
---
>         return myMetricMap.get (metric);
91c91
<         Set genNodes = (Set) myNodeMap.get (nodeMap);
---
>         Set < GenChildNode > genNodes = myNodeMap.get (nodeMap);
95c95
<         return (GenChildNode []) genNodes.toArray (new GenChildNode [genNodes.size ()]);
---
>         return genNodes.toArray (new GenChildNode [genNodes.size ()]);
100c100
<         return (GenTopLevelNode) myTopNodeMap.get (nodeMap);
---
>         return myTopNodeMap.get (nodeMap);
111c111
<         return (GenLink) myLinkMap.get (linkMap);
---
>         return myLinkMap.get (linkMap);
