20a21,22
> import org.eclipse.draw2d.XYLayout;
> 
24a27,28
> import org.eclipse.gef.GraphicalEditPart;
> 
40a45,46
> import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
> 
42a49,50
> import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
> 
46a55,56
> import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
> 
252a263,302
>     protected boolean calculateEnabled () {
>         List operationSet = getOperationSet ();
>         if (isArrangeAll () && ! operationSet.isEmpty ()) {
>             return true;
>         }
>         EditPart parentEP = getSelectionParent (operationSet);
>         if ((parentEP instanceof IEditableEditPart) && ! ((IEditableEditPart) parentEP).isEditModeEnabled ()) {
>             return false;
>         }
>         for (Iterator i = operationSet.iterator ();
>         i.hasNext ();) {
>             Object next = i.next ();
>             if ((next instanceof IEditableEditPart) && ! ((IEditableEditPart) next).isEditModeEnabled ()) {
>                 return false;
>             }
>         }
>         if (operationSet.size () >= 2) {
>             if (parentEP instanceof GraphicalEditPart) {
>                 GraphicalEditPart parent = (GraphicalEditPart) parentEP;
>                 if ((parent != null) && (parent.getContentPane ().getLayoutManager () instanceof XYLayout)) return true;
> 
>             }
>         } else if (operationSet.size () == 1) {
>             if (operationSet.get (0) instanceof GroupEditPart) {
>                 return true;
>             } else {
>                 EditPart host = (EditPart) operationSet.get (0);
>                 for (Iterator iterator = host.getChildren ().iterator ();
>                 iterator.hasNext ();) {
>                     Object childEP = iterator.next ();
>                     if (childEP instanceof CompartmentEditPart && ((CompartmentEditPart) childEP).getContentPane ().getLayoutManager () instanceof XYLayout) {
>                         return true;
>                     }
>                 }
>             }
>         }
> 
>         return false;
>     }
> 
