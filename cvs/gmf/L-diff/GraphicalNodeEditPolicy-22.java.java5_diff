18a19,22
> import org.eclipse.draw2d.ConnectionLayer;
> 
> import org.eclipse.draw2d.ConnectionRouter;
> 
32a37,38
> import org.eclipse.gef.LayerConstants;
> 
98a105,106
> import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.ConnectionLayerEx;
> 
143c151,152
<             Command cmd = getConnectionCompleteCommand (cmdResult.getReturnValue (), getRequest ());
---
>             Object connectionType = cmdResult.getReturnValue ();
>             Command cmd = getConnectionCompleteCommand (connectionType, getRequest ());
146a156,160
>             if (connectionType instanceof IElementType) {
>                 CreateRequest createRequest = ((CreateUnspecifiedTypeConnectionRequest) request).getRequestForType ((IElementType) connectionType);
>                 Object newObject = createRequest.getNewObject ();
>                 return CommandResult.newOKCommandResult (newObject);
>             }
176a191,220
>     protected ConnectionRouter getDummyConnectionRouter (CreateConnectionRequest arg0) {
>         EditPart ep = getHost ();
>         if (ep instanceof IGraphicalEditPart) {
>             IGraphicalEditPart gep = ((IGraphicalEditPart) ep);
>             Routing routingVal = Routing.MANUAL_LITERAL;
>             if (gep.getNotationView () != null) {
>                 Diagram dgrm = gep.getNotationView ().getDiagram ();
>                 EditPart epfromReg = (EditPart) gep.getViewer ().getEditPartRegistry ().get (dgrm);
>                 if (epfromReg != null) routingVal = (Routing) epfromReg.getAdapter (Routing.class);
> 
>             } else {
>                 IPreferenceStore store = (IPreferenceStore) ((IGraphicalEditPart) ep).getDiagramPreferencesHint ().getPreferenceStore ();
>                 routingVal = Routing.get (store.getInt (IPreferenceConstants.PREF_LINE_STYLE));
>             }
>             ConnectionLayer cLayer = (ConnectionLayer) getLayer (LayerConstants.CONNECTION_LAYER);
>             if (cLayer instanceof ConnectionLayerEx) {
>                 ConnectionLayerEx cLayerEx = (ConnectionLayerEx) cLayer;
>                 if (routingVal == Routing.MANUAL_LITERAL) {
>                     return cLayerEx.getObliqueRouter ();
>                 } else if (routingVal == Routing.RECTILINEAR_LITERAL) {
>                     return cLayerEx.getRectilinearRouter ();
>                 } else if (routingVal == Routing.TREE_LITERAL) {
>                     return cLayerEx.getTreeRouter ();
>                 }
> 
>             }
>         }
>         return super.getDummyConnectionRouter (arg0);
>     }
> 
215c259
<             hint = PackageUtil.getDisplayName (createElementRequest.getElementType ().getEClass ());
---
>             hint = PackageUtil.getID (createElementRequest.getElementType ().getEClass ());
439c483
<                 if (cmd != null) {
---
>                 if (cmd != null && cmd.canExecute ()) {
443,453c487,488
<             return new Command () {
< 
<                 public boolean canExecute () {
<                     for (Iterator iter = commands.iterator ();
<                     iter.hasNext ();) {
<                         Command cmd = (Command) iter.next ();
<                         if (cmd.canExecute ()) {
<                             return true;
<                         }
<                     }
<                     return false;
---
>             if (commands.isEmpty ()) {
>                 return null;
455c490
< 
---
>             return new Command () {
540a576,578
>                     if (individualCmd != null && individualCmd.canExecute ()) {
>                         validRelTypes.add (type);
>                     }
551d588
<                 }
553a591,592
>                         unspecifiedRequest.addRequest (type, connectionRequest);
>                     }
