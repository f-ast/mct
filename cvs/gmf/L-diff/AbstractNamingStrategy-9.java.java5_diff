2a3,10
> import org.eclipse.emf.codegen.util.CodeGenUtil;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenLink;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenNode;
> 
> import org.eclipse.gmf.common.NamesDispenser;
> 
10a19,20
> import org.eclipse.gmf.mappings.MappingEntry;
> 
14c24,42
<     private final NamingStrategy myDelegate;
---
>     private final String suffix;
>     private final NamesDispenser namesDispenser;
>     private final NamingStrategy chainedNamingStrategy;
>     private final NamingStrategy prefixNamingStrategy;
> 
>     public AbstractNamingStrategy (String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
>         this.suffix = suffix;
>         this.namesDispenser = namesDispenser;
>         this.chainedNamingStrategy = chainedNamingStrategy;
>         this.prefixNamingStrategy = prefixNamingStrategy;
>     }
> 
>     protected String createClassName (String s) {
>         s = getValidClassName (s);
>         if (namesDispenser == null) {
>             return suffix == null ? s : s + suffix;
>         }
>         return namesDispenser.get (s, suffix);
>     }
16,17c44,47
<     public AbstractNamingStrategy () {
<         this (null);
---
>     protected String getValidClassName (String s) {
>         assert ! isEmpty (s);
>         s = CodeGenUtil.validJavaIdentifier (s);
>         return Character.toUpperCase (s.charAt (0)) + s.substring (1);
20,21c50,51
<     public AbstractNamingStrategy (NamingStrategy chained) {
<         myDelegate = chained;
---
>     protected boolean isEmpty (String s) {
>         return s == null || s.length () == 0;
24,26c54,64
<     public String get (CanvasMapping cme) {
<         if (myDelegate != null) {
<             return myDelegate.get (cme);
---
>     protected final NamingStrategy getChainedNamingStrategy () {
>         return chainedNamingStrategy;
>     }
> 
>     protected final NamingStrategy getPrefixNamingStrategy () {
>         return prefixNamingStrategy;
>     }
> 
>     public String get (CanvasMapping mapping) {
>         if (chainedNamingStrategy != null) {
>             return chainedNamingStrategy.get (mapping);
31,33c69,71
<     public String get (NodeMapping nme) {
<         if (myDelegate != null) {
<             return myDelegate.get (nme);
---
>     public String get (NodeMapping mapping) {
>         if (chainedNamingStrategy != null) {
>             return chainedNamingStrategy.get (mapping);
38,40c76,78
<     public String get (LinkMapping lme) {
<         if (myDelegate != null) {
<             return myDelegate.get (lme);
---
>     public String get (LinkMapping mapping) {
>         if (chainedNamingStrategy != null) {
>             return chainedNamingStrategy.get (mapping);
45,47c83,85
<     public String get (CompartmentMapping cm) {
<         if (myDelegate != null) {
<             return myDelegate.get (cm);
---
>     public String get (CompartmentMapping mapping) {
>         if (chainedNamingStrategy != null) {
>             return chainedNamingStrategy.get (mapping);
52,54c90,92
<     public String get (LabelMapping labelMapping) {
<         if (myDelegate != null) {
<             return myDelegate.get (labelMapping);
---
>     public String get (LabelMapping mapping) {
>         if (chainedNamingStrategy != null) {
>             return chainedNamingStrategy.get (mapping);
59,60c97,108
<     protected final NamingStrategy getDelegate () {
<         return myDelegate;
---
>     protected String getCompartmentHostPrefix (CompartmentMapping mapping) {
>         return getPrefixNamingStrategy () != null ? getPrefixNamingStrategy ().get (mapping.getParentNode ()) : GenNode.CLASS_NAME_PREFIX;
>     }
> 
>     protected String getLabelHostPrefix (LabelMapping mapping) {
>         MappingEntry parentMapping = mapping.getMapEntry ();
>         if (parentMapping instanceof NodeMapping) {
>             return getPrefixNamingStrategy () != null ? getPrefixNamingStrategy ().get ((NodeMapping) parentMapping) : GenNode.CLASS_NAME_PREFIX;
>         } else if (parentMapping instanceof LinkMapping) {
>             return getPrefixNamingStrategy () != null ? getPrefixNamingStrategy ().get ((LinkMapping) parentMapping) : GenLink.CLASS_NAME_PREFIX;
>         } else {
>             throw new IllegalArgumentException (String.valueOf (mapping));
63,64d110
<     protected static boolean isEmpty (String s) {
<         return s == null || s.length () == 0;
