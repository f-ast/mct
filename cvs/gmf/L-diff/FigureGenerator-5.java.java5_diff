2a3,4
> import java.util.ArrayList;
> 
10a13,14
> import org.eclipse.gmf.common.UnexpectedBehaviourException;
> 
24a29,50
> import org.eclipse.gmf.graphdef.codegen.templates.ConnectionGenerator;
> 
> import org.eclipse.gmf.graphdef.codegen.templates.CustomFigureGenerator;
> 
> import org.eclipse.gmf.graphdef.codegen.templates.DecorationFigureGenerator;
> 
> import org.eclipse.gmf.graphdef.codegen.templates.LabelGenerator;
> 
> import org.eclipse.gmf.graphdef.codegen.templates.ShapeAttrsGenerator;
> 
> import org.eclipse.gmf.graphdef.codegen.templates.ShapeGenerator;
> 
> import org.eclipse.gmf.internal.graphdef.codegen.DispatcherImpl;
> 
> import org.eclipse.gmf.internal.graphdef.codegen.NoSuchTemplateException;
> 
> import org.eclipse.gmf.internal.graphdef.codegen.StaticTemplateRegistry;
> 
> import org.eclipse.gmf.internal.graphdef.codegen.TemplateRegistry;
> 
> import org.eclipse.gmf.internal.graphdef.codegen.YAEmitterFactory;
> 
28,31d53
<     private final JETEmitter shapeEmitter;
<     private final JETEmitter customFigureEmitter;
<     private final JETEmitter decorationFigureEmitter;
<     private final JETEmitter polylineConnectionEmitter;
33c55,56
<     private final JETEmitter labelFigureEmitter;
---
>     private YAEmitterFactory myFactory;
>     private Dispatcher myDispatcher;
42,51c65,72
<         shapeEmitter = new JETEmitter (thisBundle.getEntry ("/templates/ConcreteShape.javajet").toString (), FigureGenerator.class.getClassLoader ());
<         initEmitter (shapeEmitter);
<         customFigureEmitter = new JETEmitter (thisBundle.getEntry ("/templates/CustomFigure.javajet").toString (), FigureGenerator.class.getClassLoader ());
<         initEmitter (customFigureEmitter);
<         decorationFigureEmitter = new JETEmitter (thisBundle.getEntry ("/templates/DecorationFigure.javajet").toString (), FigureGenerator.class.getClassLoader ());
<         initEmitter (decorationFigureEmitter);
<         polylineConnectionEmitter = new JETEmitter (thisBundle.getEntry ("/templates/PolylineConnection.javajet").toString (), FigureGenerator.class.getClassLoader ());
<         initEmitter (polylineConnectionEmitter);
<         labelFigureEmitter = new JETEmitter (thisBundle.getEntry ("/templates/Label.javajet").toString (), FigureGenerator.class.getClassLoader ());
<         initEmitter (labelFigureEmitter);
---
>         final ArrayList variables = new ArrayList ();
>         variables.add ("org.eclipse.gmf.graphdef");
>         variables.add ("org.eclipse.emf.ecore");
>         variables.add ("org.eclipse.emf.common");
>         variables.add ("org.eclipse.gmf.common");
>         variables.add ("org.eclipse.gmf.graphdef.codegen");
>         myFactory = new YAEmitterFactory (thisBundle.getEntry ("/"), fill (), true, variables, true);
>         myDispatcher = new DispatcherImpl (myFactory);
58,66c79,87
<     private static void initEmitter (JETEmitter emitter) {
<         try {
<             emitter.addVariable ("A", "org.eclipse.gmf.graphdef");
<             emitter.addVariable ("B", "org.eclipse.emf.ecore");
<             emitter.addVariable ("C", "org.eclipse.emf.common");
<             emitter.addVariable ("D", "org.eclipse.gmf.common");
<         } catch (JETException ex) {
<             ex.printStackTrace ();
<         }
---
>     private static TemplateRegistry fill () {
>         StaticTemplateRegistry tr = new StaticTemplateRegistry ();
>         tr.put (PolylineConnection.class, "/templates/PolylineConnection.javajet", ConnectionGenerator.class);
>         tr.put (DecorationFigure.class, "/templates/DecorationFigure.javajet", DecorationFigureGenerator.class);
>         tr.put (Shape.class, "/templates/ConcreteShape.javajet", ShapeGenerator.class);
>         tr.put (Label.class, "/templates/Label.javajet", LabelGenerator.class);
>         tr.put (CustomFigure.class, "/templates/CustomFigure.javajet", CustomFigureGenerator.class);
>         tr.put ("ShapeAttrs", "/templates/ShapeAttrs.javajet", ShapeAttrsGenerator.class);
>         return tr;
70a92
>         try {
72c94
<             res = generate (fig, polylineConnectionEmitter);
---
>                 res = generate (fig, myFactory.acquireEmitter (PolylineConnection.class));
74c96
<             res = generate (fig, decorationFigureEmitter);
---
>                 res = generate (fig, myFactory.acquireEmitter (DecorationFigure.class));
76c98
<             res = generate (fig, shapeEmitter);
---
>                 res = generate (fig, myFactory.acquireEmitter (Shape.class));
78c100
<             res = generate (fig, customFigureEmitter);
---
>                 res = generate (fig, myFactory.acquireEmitter (CustomFigure.class));
80c102
<             res = generate (fig, labelFigureEmitter);
---
>                 res = generate (fig, myFactory.acquireEmitter (Label.class));
85a108,112
>         } catch (UnexpectedBehaviourException ex) {
>             throw new IllegalStateException (ex);
>         } catch (NoSuchTemplateException ex) {
>             throw new IllegalStateException (ex);
>         }
90c117
<         Object argument = new Object [] {fig, new NullImportAssistant ()};
---
>         Object argument = new Object [] {fig, new NullImportAssistant (), myDispatcher};
