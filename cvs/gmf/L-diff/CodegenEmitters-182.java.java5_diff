283,284c283,284
<     public TextEmitter getCompositeParserEmitter () throws UnexpectedBehaviourException {
<         return getPrimaryEmitter ("xpt::parsers::CompositeParser");
---
>     public TextEmitter getPredefinedParserEmitter () throws UnexpectedBehaviourException {
>         return newXpandEmitter ("parsers::PredefinedParser::Main");
287,320c287,288
<     public String getCompositeParserName (Object...input) throws UnexpectedBehaviourException {
<         return getQualifiedClassName ("xpt::parsers::CompositeParser", input);
<     }
< 
<     public TextEmitter getMessageFormatParserEmitter () throws UnexpectedBehaviourException {
<         return getPrimaryEmitter ("xpt::parsers::MessageFormatParser");
<     }
< 
<     public String getMessageFormatParserName (Object...input) throws UnexpectedBehaviourException {
<         return getQualifiedClassName ("xpt::parsers::MessageFormatParser", input);
<     }
< 
<     public TextEmitter getNativeParserEmitter () throws UnexpectedBehaviourException {
<         return getPrimaryEmitter ("xpt::parsers::NativeParser");
<     }
< 
<     public String getNativeParserName (Object...input) throws UnexpectedBehaviourException {
<         return getQualifiedClassName ("xpt::parsers::NativeParser", input);
<     }
< 
<     public TextEmitter getPrintfParserEmitter () throws UnexpectedBehaviourException {
<         return getPrimaryEmitter ("xpt::parsers::PrintfParser");
<     }
< 
<     public String getPrintfParserName (Object...input) throws UnexpectedBehaviourException {
<         return getQualifiedClassName ("xpt::parsers::PrintfParser", input);
<     }
< 
<     public TextEmitter getRegexpParserEmitter () throws UnexpectedBehaviourException {
<         return getPrimaryEmitter ("xpt::parsers::RegexpParser");
<     }
< 
<     public String getRegexpParserName (Object...input) throws UnexpectedBehaviourException {
<         return getQualifiedClassName ("xpt::parsers::RegexpParser", input);
---
>     public String getPredefinedParserName (Object...input) throws UnexpectedBehaviourException {
>         return getQualifiedClassName ("parsers::PredefinedParser", input);
