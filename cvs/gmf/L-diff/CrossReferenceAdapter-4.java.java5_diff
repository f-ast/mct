2a3,4
> import java.util.ArrayList;
> 
30a33,34
> import org.eclipse.emf.ecore.InternalEObject;
> 
469a474,495
>     public Collection getInverseReferences (EObject eObject) {
>         Collection result = new ArrayList ();
>         EObject eContainer = eObject.eContainer ();
>         if (eContainer != null) {
>             result.add (((InternalEObject) eContainer).eSetting (eObject.eContainmentFeature ()));
>         }
>         Collection nonNavigableInverseReferences = (Collection) inverseCrossReferencer.get (eObject);
>         if (nonNavigableInverseReferences != null) {
>             result.addAll (nonNavigableInverseReferences);
>         }
>         EContentsEList.FeatureIterator crossReferences = (EContentsEList.FeatureIterator) eObject.eCrossReferences ().iterator ();
>         while (crossReferences.hasNext ()) {
>             InternalEObject referent = (InternalEObject) crossReferences.next ();
>             EReference eReference = (EReference) crossReferences.feature ();
>             EReference eOpposite = eReference.getEOpposite ();
>             if (referent != null && eOpposite != null) {
>                 result.add (referent.eSetting (eOpposite));
>             }
>         }
>         return result;
>     }
> 
