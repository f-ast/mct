5,8d4
< import java.util.Collection;
< 
< import java.util.Collections;
< 
31,32d26
< import org.eclipse.core.runtime.NullProgressMonitor;
< 
49,50d42
< import org.eclipse.gmf.runtime.common.core.command.CMValidator;
< 
55,62d46
< import org.eclipse.gmf.runtime.common.core.internal.CommonCoreDebugOptions;
< 
< import org.eclipse.gmf.runtime.common.core.internal.CommonCorePlugin;
< 
< import org.eclipse.gmf.runtime.common.core.util.Log;
< 
< import org.eclipse.gmf.runtime.common.core.util.Trace;
< 
174,227d157
<     public Collection getAffectedObjects () {
<         return Collections.EMPTY_LIST;
<     }
< 
<     public CMValidator getValidator () {
<         return null;
<     }
< 
<     public boolean involvesReadOnlyNonWorkSpaceFiles () {
<         return false;
<     }
< 
<     public boolean isExecutable () {
<         return canExecute ();
<     }
< 
<     public boolean isRedoable () {
<         return canRedo ();
<     }
< 
<     public boolean isUndoable () {
<         return canUndo ();
<     }
< 
<     public void execute (IProgressMonitor progressMonitor) {
<         try {
<             execute (progressMonitor, null);
<         } catch (ExecutionException e) {
<             handle (e);
<         }
<     }
< 
<     public void redo () {
<         try {
<             redo (new NullProgressMonitor (), null);
<         } catch (ExecutionException e) {
<             handle (e);
<         }
<     }
< 
<     public void undo () {
<         try {
<             undo (new NullProgressMonitor (), null);
<         } catch (ExecutionException e) {
<             handle (e);
<         }
<     }
< 
<     protected void handle (Exception exception) {
<         Trace.catching (CommonCorePlugin.getDefault (), CommonCoreDebugOptions.EXCEPTIONS_CATCHING, getClass (), "handle", exception);
<         setResult (CommandResult.newErrorCommandResult (exception));
<         Log.log (CommonCorePlugin.getDefault (), getCommandResult ().getStatus ());
<     }
< 
