8a9,12
> import java.util.Map;
> 
> import java.util.TreeMap;
> 
17a22,23
>     private final Map < String, XtendResource > cachedXtend = new TreeMap < String, XtendResource > ();
>     private final Map < String, XpandResource > cachedXpand = new TreeMap < String, XpandResource > ();
21a28,30
>             if (hasCachedXtend (fullyQualifiedName)) {
>                 return cachedXtend.get (fullyQualifiedName);
>             }
24c33,38
<             return loadXtendResource (r, fullyQualifiedName);
---
>             final XtendResource loaded = loadXtendResource (r, fullyQualifiedName);
>             assert loaded != null;
>             if (shouldCache ()) {
>                 cachedXtend.put (fullyQualifiedName, loaded);
>             }
>             return loaded;
44a59,61
>             if (hasCachedXpand (fullyQualifiedName)) {
>                 return cachedXpand.get (fullyQualifiedName);
>             }
47c64,69
<             return loadXpandResource (r, fullyQualifiedName);
---
>             final XpandResource loaded = loadXpandResource (r, fullyQualifiedName);
>             assert loaded != null;
>             if (shouldCache ()) {
>                 cachedXpand.put (fullyQualifiedName, loaded);
>             }
>             return loaded;
102a125,147
>     protected abstract boolean shouldCache ();
> 
>     protected final boolean hasCachedXpand (String fullyQualifiedName) {
>         return shouldCache () && cachedXpand.containsKey (fullyQualifiedName);
>     }
> 
>     protected final boolean hasCachedXtend (String fullyQualifiedName) {
>         return shouldCache () && cachedXtend.containsKey (fullyQualifiedName);
>     }
> 
>     protected final void forgetCachedXpand (String fullyQualifiedName) {
>         cachedXpand.remove (fullyQualifiedName);
>     }
> 
>     protected final void forgetCachedXtend (String fullyQualifiedName) {
>         cachedXtend.remove (fullyQualifiedName);
>     }
> 
>     protected final void forgetAll () {
>         cachedXpand.clear ();
>         cachedXtend.clear ();
>     }
> 
