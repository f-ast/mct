2a3,6
> import java.awt.RenderingHints;
> 
> import java.awt.Shape;
> 
10a15,20
> import org.apache.batik.gvt.renderer.ImageRenderer;
> 
> import org.apache.batik.gvt.renderer.StaticRenderer;
> 
> import org.apache.batik.transcoder.SVGAbstractTranscoder;
> 
21c31
< public class SimpleImageTranscoder extends ImageTranscoder {
---
> public class SimpleImageTranscoder extends SVGAbstractTranscoder {
25a36
>     private RenderingHints renderingHints;
28a40
>         renderingHints = new RenderingHints (null);
34a47,50
>     public final RenderingHints getRenderingHints () {
>         return renderingHints;
>     }
> 
129,131c145,159
<     public final BufferedImage getBufferedImage () {
<         if (bufferedImage == null) {
<             updateImage ();
---
>     protected void transcode (Document document, String uri, TranscoderOutput output) throws TranscoderException {
>         super.transcode (document, uri, output);
>         int w = (int) (width + 0.5);
>         int h = (int) (height + 0.5);
>         ImageRenderer renderer = createImageRenderer ();
>         renderer.updateOffScreen (w, h);
>         renderer.setTransform (curTxf);
>         renderer.setTree (this.root);
>         this.root = null;
>         try {
>             Shape raoi = new Rectangle2D.Float (0, 0, width, height);
>             renderer.repaint (curTxf.createInverse ().createTransformedShape (raoi));
>             bufferedImage = renderer.getOffScreen ();
>         } catch (Exception ex) {
>             throw new TranscoderException (ex);
133d160
<         return bufferedImage;
136,138c163,166
<     @Override
<     public final BufferedImage createImage (int width, int height) {
<         return new BufferedImage (width, height, BufferedImage.TYPE_INT_ARGB);
---
>     protected ImageRenderer createImageRenderer () {
>         StaticRenderer renderer = new StaticRenderer ();
>         renderer.getRenderingHints ().add (renderingHints);
>         return renderer;
141,143c169,173
<     @Override
<     public final void writeImage (BufferedImage img, TranscoderOutput output) throws TranscoderException {
<         bufferedImage = img;
---
>     public final BufferedImage getBufferedImage () {
>         if (bufferedImage == null) {
>             updateImage ();
>         }
>         return bufferedImage;
