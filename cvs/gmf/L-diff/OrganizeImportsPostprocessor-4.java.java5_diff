78a79,82
>         organizeImports (icu, null, progress);
>     }
> 
>     public void organizeImports (ICompilationUnit icu, String [] declaredImportsAsStrings, IProgressMonitor progress) throws CoreException {
83c87
<         TextEdit importsEdit = organizeImports (cu, progress);
---
>         TextEdit importsEdit = organizeImports (cu, declaredImportsAsStrings, progress);
94a99,102
>         return organizeImports (astRoot, null, progress);
>     }
> 
>     public TextEdit organizeImports (CompilationUnit astRoot, String [] declaredImports, IProgressMonitor progress) throws CoreException {
97a106
>         String [] customImports = substract (declaredImports, astRoot.imports ());
99c108
<             collectExistingImports (astRoot, oldSingleImports, oldDemandImports);
---
>             collectExistingImports (astRoot, oldSingleImports, oldDemandImports, customImports);
108a118
>         copyImports (importRewrite, customImports);
143a154,176
>     private static void copyImports (ImportRewrite importRewrite, String [] importsToCopy) {
>         if (importsToCopy == null || importsToCopy.length == 0) {
>             return;
>         }
>         for (int i = 0;
>         i < importsToCopy.length; i ++) {
>             importRewrite.addImport (importsToCopy [i]);
>         }
>     }
> 
>     private String [] substract (String [] declaredImports, List list) {
>         if (declaredImports == null || declaredImports.length == 0) {
>             return declaredImports;
>         }
>         List < String > result = new ArrayList < String > (Arrays.asList (declaredImports));
>         for (int i = 0;
>         i < list.size (); i ++) {
>             ImportDeclaration next = (ImportDeclaration) list.get (i);
>             result.remove (next.getName ().getFullyQualifiedName ());
>         }
>         return result.toArray (new String [result.size ()]);
>     }
> 
152,153c185,197
<     private void collectExistingImports (CompilationUnit astRoot, Set < String > oldSingleImports, Set < String > oldDemandImports) {
<         List imports = astRoot.imports ();
---
>     private void collectExistingImports (CompilationUnit astRoot, Set < String > oldSingleImports, Set < String > oldDemandImports, String [] declaredImports) {
>         if (declaredImports != null && declaredImports.length > 0) {
>             for (int i = 0;
>             i < declaredImports.length; i ++) {
>                 String curr = declaredImports [i];
>                 if (curr.endsWith ("*")) {
>                     oldDemandImports.add (curr);
>                 } else {
>                     oldSingleImports.add (curr);
>                 }
>             }
>         }
>         final List imports = astRoot.imports ();
