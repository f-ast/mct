10a11,12
> import org.eclipse.emf.ecore.EClassifier;
> 
120a123,124
> import org.eclipse.gmf.runtime.notation.NotationObject;
> 
226a231
>     private EClass notationObjectEClass = null;
241a247
>     private EDataType uuidEDataType = null;
880a887,894
>     public EClass getNotationObject () {
>         return notationObjectEClass;
>     }
> 
>     public EAttribute getNotationObject_UUID () {
>         return (EAttribute) notationObjectEClass.getEStructuralFeatures ().get (0);
>     }
> 
940a955,958
>     public EDataType getUUID () {
>         return uuidEDataType;
>     }
> 
1105a1124,1125
>         notationObjectEClass = createEClass (NOTATION_OBJECT);
>         createEAttribute (notationObjectEClass, NOTATION_OBJECT__UUID);
1120a1141
>         uuidEDataType = createEDataType (UUID);
1134a1156
>         fillStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1135a1158
>         lineStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1136a1160
>         fontStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1137a1162
>         titleStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1138a1164
>         sortingStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1139a1166
>         descriptionStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1140a1168
>         sizeEClass.getESuperTypes ().add (this.getNotationObject ());
1141a1170
>         locationEClass.getESuperTypes ().add (this.getNotationObject ());
1144a1174
>         ratioEClass.getESuperTypes ().add (this.getNotationObject ());
1145a1176
>         identityAnchorEClass.getESuperTypes ().add (this.getNotationObject ());
1146a1178
>         routingStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1148a1181,1182
>         viewEClass.getESuperTypes ().add (this.getNotationObject ());
>         relativeBendpointsEClass.getESuperTypes ().add (this.getNotationObject ());
1150a1185,1186
>         imageEClass.getESuperTypes ().add (this.getNotationObject ());
>         canonicalStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1159a1196
>         pageStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1160a1198
>         drawerStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1161a1200
>         guideStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1162a1202,1204
>         guideEClass.getESuperTypes ().add (this.getNotationObject ());
>         nodeEntryEClass.getESuperTypes ().add (this.getNotationObject ());
>         filteringStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1167a1210
>         imageStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1170a1214
>         stringToPropertyValueMapEntryEClass.getESuperTypes ().add (this.getNotationObject ());
1173a1218
>         namedStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1174a1220
>         stringObjectConverterEClass.getESuperTypes ().add (this.getNotationObject ());
1189a1236
>         diagramLinkStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1190a1238
>         multiDiagramLinkStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1191a1240
>         textStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1192a1242
>         lineTypeStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1193a1244
>         arrowStyleEClass.getESuperTypes ().add (this.getNotationObject ());
1395a1447,1448
>         initEClass (notationObjectEClass, NotationObject.class, "NotationObject", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getNotationObject_UUID (), this.getUUID (), "uUID", null, 1, 1, NotationObject.class, IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, IS_ID, IS_UNIQUE, ! IS_DERIVED, ! IS_ORDERED);
1451a1505
>         initEDataType (uuidEDataType, byte [].class, "UUID", IS_SERIALIZABLE, ! IS_GENERATED_INSTANCE_CLASS);
1452a1507,1522
>         createExtendedMetaDataAnnotations ();
>     }
> 
>     protected void createExtendedMetaDataAnnotations () {
>         String source = "http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
>         addAnnotation (getNotationObject_UUID (), source, new String [] {"name", "id", "namespace", "http://www.omg.org/XMI", "kind", "attribute"});
>     }
> 
>     void createAnnotations () {
>         for (EClassifier eClassifier : getEClassifiers ()) {
>             String name = eClassifier.getName ();
>             if (name.equals ("Node") || name.indexOf ("Style") != - 1 || name.equals ("Location") || name.equals ("Size") || name.indexOf ("Anchor") != - 1 || name.indexOf ("point") != - 1 || name.equals ("Bounds") || name.indexOf ("Edge") != - 1 || name.indexOf ("Constraint") != - 1) {
>                 String source = "foo";
>                 addAnnotation (eClassifier, source, new String [] {"uuid", "false"});
>             }
>         }
