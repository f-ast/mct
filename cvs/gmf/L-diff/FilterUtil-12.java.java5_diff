45,46d44
< import org.eclipse.gmf.mappings.LabelMapping;
< 
67,68c65,66
<     public static < T > List < T > filterByResourceSet (Collection < T > eClasses, ResourceSet resourceSet) {
<         return sort (getValidEClassesFrom (eClasses, resourceSet));
---
>     public static < T extends EObject > List < T > filterByResourceSet (Collection < T > eClasses, ResourceSet resourceSet) {
>         return sort (filterValidEObjectsFrom (eClasses, resourceSet));
71c69
<     public static List filterByContainmentFeature (Collection eClasses, MappingEntry mappingEntry) {
---
>     public static List < EClass > filterByContainmentFeature (Collection < EClass > eClasses, MappingEntry mappingEntry) {
87c85
<         return sort (getSubtypesOf (getValidEClassesFrom (eClasses, mappingEntry.eResource ().getResourceSet ()), superType));
---
>         return sort (getSubtypesOf (filterValidEObjectsFrom (eClasses, mappingEntry.eResource ().getResourceSet ()), superType));
90c88
<     public static List filterByContainerMetaclass (Collection eReferences, LinkMapping mappingEntry) {
---
>     public static List < EStructuralFeature > filterByContainerMetaclass (Collection < EStructuralFeature > eReferences, MappingEntry mappingEntry) {
95,105c93
<     public static List filterByContainerMetaclass (Collection eAttributes, LabelMapping labelMapping) {
<         EClass containerMetaClass = labelMapping.getMapEntry ().getDomainMetaElement ();
<         return sort (getEStructuralFeaturesOf (eAttributes, containerMetaClass));
<     }
< 
<     public static List filterByContainerMetaclass (Collection eAttributes, MappingEntry mappingEntry) {
<         EClass containerMetaClass = mappingEntry.getDomainMetaElement ();
<         return sort (getEStructuralFeaturesOf (eAttributes, containerMetaClass));
<     }
< 
<     public static List filterByContainerMetaclass (Collection eReferences, NodeReference nodeReference, boolean containmentOnly) {
---
>     public static List < EReference > filterByContainerMetaclass (Collection < EReference > eReferences, NodeReference nodeReference, boolean containmentOnly) {
120c108
<         List fromHierarchy = sort (getEReferences (getEStructuralFeaturesOf (eReferences, containerMetaClass), containmentOnly));
---
>         List < EReference > fromHierarchy = sort (getEReferences (getEStructuralFeaturesOf (eReferences, containerMetaClass), containmentOnly));
124,125c112,113
<         List targetsToChild = sort (getEReferences (getEReferencesOfType (eReferences, targetMetaClass), containmentOnly));
<         for (Iterator it = targetsToChild.iterator ();
---
>         List < EReference > targetsToChild = sort (getEReferences (getEReferencesOfType (eReferences, targetMetaClass), containmentOnly));
>         for (Iterator < EReference > it = targetsToChild.iterator ();
131c119
<         ArrayList rv = new ArrayList (fromHierarchy.size () + targetsToChild.size ());
---
>         ArrayList < EReference > rv = new ArrayList < EReference > (fromHierarchy.size () + targetsToChild.size ());
137c125
<     public static List filterByReferenceType (Collection eReferences, LinkMapping linkMapping) {
---
>     public static List < EReference > filterByReferenceType (Collection < EReference > eReferences, LinkMapping linkMapping) {
142c130
<     public static Collection filterByNodeMapping (Collection childReferences, CompartmentMapping mapping) {
---
>     public static Collection < EObject > filterByNodeMapping (Collection < EObject > childReferences, CompartmentMapping mapping) {
146c134
<     public static Collection filterByNodeMapping (Collection compartments, ChildReference childReference) {
---
>     public static Collection < EObject > filterByNodeMapping (Collection < EObject > compartments, ChildReference childReference) {
150c138
<     public static Collection filterBySuperClasses (Collection instances, Class [] classes) {
---
>     public static Collection < ? > filterBySuperClasses (Collection < ? > instances, Class < ? > [] classes) {
174c162
<                 for (Iterator it = eClasses.iterator ();
---
>                 for (Iterator < EClass > it = eClasses.iterator ();
176c164
<                     EClass nextEClass = (EClass) it.next ();
---
>                     EClass nextEClass = it.next ();
190c178
<     private static Collection getSubtypesOf (Collection eClasses, EClass superType) {
---
>     private static Collection < EClass > getSubtypesOf (Collection < EClass > eClasses, EClass superType) {
194c182
<         for (Iterator it = eClasses.iterator ();
---
>         for (Iterator < EClass > it = eClasses.iterator ();
196c184
<             EClass nextEClass = (EClass) it.next ();
---
>             EClass nextEClass = it.next ();
204c192
<     private static Collection getEReferences (Collection eReferences, boolean containmentOnly) {
---
>     private static Collection < EReference > getEReferences (Collection < EReference > eReferences, boolean containmentOnly) {
208c196
<         for (Iterator it = eReferences.iterator ();
---
>         for (Iterator < EReference > it = eReferences.iterator ();
210c198
<             EReference nextReference = (EReference) it.next ();
---
>             EReference nextReference = it.next ();
218,219c206,207
<     private static Collection getEStructuralFeaturesOf (Collection structuralFeatures, EClass featureContainerEClass) {
<         Collection result = getValidEStructuralFeatures (structuralFeatures);
---
>     private static < T extends EStructuralFeature > Collection < T > getEStructuralFeaturesOf (Collection < T > structuralFeatures, EClass featureContainerEClass) {
>         Collection < T > result = getValidEStructuralFeatures (structuralFeatures);
223c211
<         for (Iterator it = result.iterator ();
---
>         for (Iterator < T > it = result.iterator ();
225c213
<             EStructuralFeature nextFeature = (EStructuralFeature) it.next ();
---
>             EStructuralFeature nextFeature = it.next ();
233,234c221,222
<     private static Collection getEReferencesOfType (Collection references, EClass referenceType) {
<         Collection result = getValidEStructuralFeatures (references);
---
>     private static Collection < EReference > getEReferencesOfType (Collection < EReference > references, EClass referenceType) {
>         Collection < EReference > result = getValidEStructuralFeatures (references);
238c226
<         for (Iterator it = result.iterator ();
---
>         for (Iterator < EReference > it = result.iterator ();
240c228
<             EReference nextFeature = (EReference) it.next ();
---
>             EReference nextFeature = it.next ();
248,250c236,238
<     private static Collection < EStructuralFeature > getValidEStructuralFeatures (Collection structuralFeatures) {
<         Collection result = getValidEObjects (structuralFeatures);
<         for (Iterator it = result.iterator ();
---
>     private static < T extends EStructuralFeature > Collection < T > getValidEStructuralFeatures (Collection < T > structuralFeatures) {
>         Collection < T > result = getValidEObjects (structuralFeatures);
>         for (Iterator < T > it = result.iterator ();
252c240
<             EStructuralFeature nextFeature = (EStructuralFeature) it.next ();
---
>             EStructuralFeature nextFeature = it.next ();
260,262c248,250
<     private static < T > Collection < T > getValidEClassesFrom (Collection < T > eClasses, ResourceSet resourceSet) {
<         Collection result = getValidEObjects (eClasses);
<         for (Iterator it = result.iterator ();
---
>     private static < T extends EObject > Collection < T > filterValidEObjectsFrom (Collection < T > eClasses, ResourceSet resourceSet) {
>         Collection < T > result = getValidEObjects (eClasses);
>         for (Iterator < T > it = result.iterator ();
264c252
<             EClass nextEClass = (EClass) it.next ();
---
>             EObject nextEClass = it.next ();
275,279c263,265
<     private static Collection < EObject > getValidEObjects (Collection < ? > eObjects) {
<         LinkedList < EObject > result = new LinkedList < EObject > ();
<         for (Iterator it = eObjects.iterator ();
<         it.hasNext ();) {
<             EObject nextEObject = (EObject) it.next ();
---
>     private static < T extends EObject > Collection < T > getValidEObjects (Collection < T > eObjects) {
>         LinkedList < T > result = new LinkedList < T > ();
>         for (T nextEObject : eObjects) {
288,292c274,276
<     private static Collection getChildrenOf (Collection elements, EObject container, boolean addNull) {
<         List result = new ArrayList ();
<         for (Iterator it = elements.iterator ();
<         it.hasNext ();) {
<             EObject nextEObject = (EObject) it.next ();
---
>     private static < T extends EObject > Collection < T > getChildrenOf (Collection < T > elements, EObject container, boolean addNull) {
>         LinkedList < T > result = new LinkedList < T > ();
>         for (T nextEObject : elements) {
300,304c284,286
<     private static Collection getSubClassesOf (Collection instances, Class [] classes) {
<         List result = new ArrayList ();
<         for (Iterator it = instances.iterator ();
<         it.hasNext ();) {
<             Object nextInstance = it.next ();
---
>     private static Collection < ? > getSubClassesOf (Collection < ? > instances, Class < ? > [] classes) {
>         LinkedList < Object > result = new LinkedList < Object > ();
>         for (Object nextInstance : instances) {
