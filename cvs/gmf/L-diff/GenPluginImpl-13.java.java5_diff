16a17,18
> import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
> 
184a187
>         requiredPlugins.addAll (getMetricsRequiredPluginIDs ());
229,230c232,247
<         if (getDiagram ().isValidationEnabled () || (getEditorGen ().getAudits () != null && ! getEditorGen ().getAudits ().getAllAuditRules ().isEmpty ())) {
<             return Collections.singleton ("org.eclipse.emf.validation");
---
>         if (getDiagram ().isValidationEnabled () || getEditorGen ().hasAudits ()) {
>             HashSet pluginIDs = new HashSet ();
>             pluginIDs.add ("org.eclipse.emf.validation");
>             if (getEditorGen ().getAudits () != null) {
>                 collectGenPackagesRequiredPluginIDs (getEditorGen ().getAudits ().getAllTargetedModelPackages (), pluginIDs);
>             }
>             return pluginIDs;
>         }
>         return Collections.EMPTY_SET;
>     }
> 
>     private Set getMetricsRequiredPluginIDs () {
>         if (getEditorGen ().getMetrics () != null) {
>             HashSet pluginIDs = new HashSet ();
>             collectGenPackagesRequiredPluginIDs (getEditorGen ().getMetrics ().getAllTargetedModelPackages (), pluginIDs);
>             return pluginIDs;
234a252,259
>     private void collectGenPackagesRequiredPluginIDs (Collection genPackages, Set pluginIDs) {
>         for (Iterator it = genPackages.iterator ();
>         it.hasNext ();) {
>             GenPackage nextPackage = (GenPackage) it.next ();
>             pluginIDs.add (nextPackage.getGenModel ().getModelPluginID ());
>         }
>     }
> 
