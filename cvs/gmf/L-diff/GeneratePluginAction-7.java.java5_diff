36a37,38
> import org.eclipse.core.runtime.Platform;
> 
84a87,90
> import org.eclipse.swt.events.SelectionEvent;
> 
> import org.eclipse.swt.events.SelectionListener;
> 
128,135c134,135
<         StandaloneGenerator.Config config = new StandaloneGenerator.ConfigImpl (pluginId, pluginId, false);
<         FigureQualifiedNameSwitch fqnSwitch;
<         if (dialog.isUseRuntimeFigures ()) {
<             fqnSwitch = new RuntimeFQNSwitch ();
<         } else {
<             fqnSwitch = new RuntimeLiteFQNSwitch ();
<         }
<         final StandaloneGenerator generator = new StandaloneGenerator (input, config, fqnSwitch);
---
>         StandaloneGenerator.Config config = new StandaloneGenerator.ConfigImpl (pluginId, pluginId, dialog.isUseMapMode ());
>         final StandaloneGenerator generator = new StandaloneGenerator (input, config, dialog.getFigureQualifiedNameSwitch ());
249c249
<     private static class StandaloneGeneratorOptionsDialog extends Dialog {
---
>     private static class StandaloneGeneratorOptionsDialog extends FigureGeneratorOptionsDialog {
252,253d251
<         private Text errorMessageText;
<         private Button useRuntimeFiguresButton;
255c253
<         private boolean useRuntimeFigures;
---
>         private final boolean shouldWarnLiteVerstionDoesNotSupportMapMode;
258c256,260
<             super (parentShell);
---
>             this (parentShell, initialPluginId, initialUseRuntimeFigures, false, pluginIdValidator);
>         }
> 
>         public StandaloneGeneratorOptionsDialog (Shell parentShell, String initialPluginId, boolean initialUseRuntimeFigures, boolean initialUseMapMode, IInputValidator pluginIdValidator) {
>             super (parentShell, "Figure Gallery Generator", initialUseRuntimeFigures, initialUseMapMode);
264c266
<             useRuntimeFigures = initialUseRuntimeFigures;
---
>             shouldWarnLiteVerstionDoesNotSupportMapMode = Platform.getBundle ("org.eclipse.gmf.codegen.lite") != null;
267,273c269
<         protected void configureShell (Shell newShell) {
<             super.configureShell (newShell);
<             newShell.setText ("Figure Gallery Generator");
<         }
< 
<         protected Control createDialogArea (Composite parent) {
<             Composite result = (Composite) super.createDialogArea (parent);
---
>         protected void createControls (Composite result) {
279d274
<             label.setFont (parent.getFont ());
291,297c286
<             useRuntimeFiguresButton = new Button (result, SWT.CHECK);
<             useRuntimeFiguresButton.setText ("Utilize enhanced features of GMF runtime");
<             useRuntimeFiguresButton.setSelection (useRuntimeFigures);
<             errorMessageText = new Text (result, SWT.READ_ONLY);
<             errorMessageText.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL));
<             errorMessageText.setBackground (errorMessageText.getDisplay ().getSystemColor (SWT.COLOR_WIDGET_BACKGROUND));
<             return result;
---
>             super.createControls (result);
308,313c297,299
<         public void setErrorMessage (String errorMessage) {
<             errorMessageText.setText (errorMessage == null ? "" : errorMessage);
<             errorMessageText.getParent ().update ();
<             Control button = getButton (IDialogConstants.OK_ID);
<             if (button != null) {
<                 button.setEnabled (errorMessage == null);
---
>         protected void warnLiteVerstionDoesNotSupportMapMode () {
>             if (shouldWarnLiteVerstionDoesNotSupportMapMode) {
>                 super.warnLiteVerstionDoesNotSupportMapMode ();
318d303
<             useRuntimeFigures = useRuntimeFiguresButton.getSelection ();
327,330d311
<         public boolean isUseRuntimeFigures () {
<             return useRuntimeFigures;
<         }
< 
