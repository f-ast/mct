2a3,6
> import java.util.Collection;
> 
> import java.util.HashSet;
> 
9c13
< import org.eclipse.emf.ecore.EObject;
---
> import java.util.Set;
11c15
< import org.eclipse.gmf.gmfgraph.Figure;
---
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
20a25,28
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphDiagramUpdater;
> 
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphNodeDescriptor;
> 
27a36
>     Set myFeaturesToSynchronize;
30,31d38
<         List result = new LinkedList ();
<         EObject modelObject = ((View) getHost ().getModel ()).getElement ();
33,56c40,43
<         EObject nextValue;
<         int nodeVID;
<         for (Iterator values = ((Figure) modelObject).getChildren ().iterator ();
<         values.hasNext ();) {
<             nextValue = (EObject) values.next ();
<             nodeVID = GMFGraphVisualIDRegistry.getNodeVisualID (viewObject, nextValue);
<             switch (nodeVID) {
<                 case Rectangle2EditPart.VISUAL_ID :
<                     {
<                         result.add (nextValue);
<                         break;
<                     } case EllipseEditPart.VISUAL_ID :
<                     {
<                         result.add (nextValue);
<                         break;
<                     } case RoundedRectangleEditPart.VISUAL_ID :
<                     {
<                         result.add (nextValue);
<                         break;
<                     } case PolylineEditPart.VISUAL_ID :
<                     {
<                         result.add (nextValue);
<                         break;
<                     }}
---
>         List result = new LinkedList ();
>         for (Iterator it = GMFGraphDiagramUpdater.getRectangle_3010SemanticChildren (viewObject).iterator ();
>         it.hasNext ();) {
>             result.add (((GMFGraphNodeDescriptor) it.next ()).getModelElement ());
61,66c48,50
<     protected boolean shouldDeleteView (View view) {
<         if (view.getEAnnotation ("Shortcut") != null) {
<             return view.isSetElement () && (view.getElement () == null || view.getElement ().eIsProxy ());
<         }
<         int nodeVID = GMFGraphVisualIDRegistry.getVisualID (view);
<         switch (nodeVID) {
---
>     protected boolean isOrphaned (Collection semanticChildren, final View view) {
>         int visualID = GMFGraphVisualIDRegistry.getVisualID (view);
>         switch (visualID) {
71c55
<                 return true;
---
>                 return ! semanticChildren.contains (view.getElement ()) || visualID != GMFGraphVisualIDRegistry.getNodeVisualID ((View) getHost ().getModel (), view.getElement ());
79a64,71
>     protected Set getFeaturesToSynchronize () {
>         if (myFeaturesToSynchronize == null) {
>             myFeaturesToSynchronize = new HashSet ();
>             myFeaturesToSynchronize.add (GMFGraphPackage.eINSTANCE.getRealFigure_Children ());
>         }
>         return myFeaturesToSynchronize;
>     }
> 
