40a41
>         setEnablementDeterminedByCommand (true);
44a46
>         setEnablementDeterminedByCommand (true);
48,51c50
<         DropObjectsRequest request = new DropObjectsRequest ();
<         request.setObjects (getObjectsBeingDropped ());
<         request.setAllowedDetail (getCurrentEvent ().operations);
<         return request;
---
>         return new DropObjectsRequest ();
70a70
>         if (getDropObjectsRequest ().getRequiredDetail () != DND.DROP_NONE) {
72a73
>     }
75a77
>         if (getDropObjectsRequest ().getRequiredDetail () != DND.DROP_NONE) {
76a79
>         }
111a115,116
>         request.setObjects (getObjectsBeingDropped ());
>         request.setAllowedDetail (getCurrentEvent ().operations);
115,126c120
<         if (super.isEnabled (event)) {
<             boolean result = calculateTargetEditPart () != null;
<             return result;
<         }
<         return false;
<     }
< 
<     protected void updateTargetEditPart () {
<         setTargetEditPart (calculateTargetEditPart ());
<     }
< 
<     private EditPart calculateTargetEditPart () {
---
>         setCurrentEvent (event);
128,131c122,126
<         EditPart ep = getViewer ().findObjectAtExcluding (getDropLocation (), getExclusionSet (), new EditPartViewer.Conditional () {
< 
<             public boolean evaluate (EditPart editpart) {
<                 Command command = editpart.getCommand (getTargetRequest ());
---
>         updateTargetEditPart ();
>         if (getTargetEditPart () == null) {
>             return false;
>         } else if (isEnablementDeterminedByCommand () && isDataTransfered ()) {
>             Command command = getCommand ();
132a128,129
>         } else {
>             return true;
137,142c134,135
<         );
<         if (ep != null) {
<             Command command = ep.getCommand (getTargetRequest ());
<             return (command != null && command.canExecute ()) ? ep : null;
<         }
<         return ep;
---
>     protected boolean isDataTransfered () {
>         return true;
