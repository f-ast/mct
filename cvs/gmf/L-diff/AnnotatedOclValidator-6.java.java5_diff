5,6d4
< import java.util.Iterator;
< 
17,18d14
< import org.eclipse.emf.common.util.EList;
< 
37,38d32
< import org.eclipse.emf.ecore.util.EObjectValidator;
< 
53c47
<     public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context) {
---
>     public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context) {
57c51
<     public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map context) {
---
>     public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context) {
61c55
<     public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context) {
---
>     public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context) {
65c59
<     protected boolean validateOCL (EObject eObject, final DiagnosticChain diagnostics, Map context) {
---
>     protected boolean validateOCL (EObject eObject, final DiagnosticChain diagnostics, Map < Object, Object > context) {
90c84
<         protected boolean handleEAnnotation (EAnnotation annotation, DiagnosticChain diagnostics, Map context) {
---
>         protected boolean handleEAnnotation (EAnnotation annotation, DiagnosticChain diagnostics, Map < Object, Object > context) {
94c88
<         protected boolean handleEAnnotation (EAnnotation annotation, EObject contextInstance, DiagnosticChain diagnostics, Map context) {
---
>         protected boolean handleEAnnotation (EAnnotation annotation, EObject contextInstance, DiagnosticChain diagnostics, Map < Object, Object > context) {
99,101c93
<             for (Iterator it = annotation.getDetails ().iterator ();
<             it.hasNext ();) {
<                 Map.Entry nextDetail = (Map.Entry) it.next ();
---
>             for (Map.Entry < String, String > nextDetail : annotation.getDetails ()) {
149,150c141,142
<         private static String readBodyDetail (Map.Entry bodyEntry, DiagnosticChain diagnostics) {
<             String body = (String) bodyEntry.getValue ();
---
>         private static String readBodyDetail (Map.Entry < String, String > bodyEntry, DiagnosticChain diagnostics) {
>             String body = bodyEntry.getValue ();
158c150
<         protected boolean handleMetaModel (EClass eClass, EObject modelElement, DiagnosticChain diagnostics, Map context) {
---
>         protected boolean handleMetaModel (EClass eClass, EObject modelElement, DiagnosticChain diagnostics, Map < Object, Object > context) {
160,162c152
<             for (Iterator it = eClass.getEAnnotations ().iterator ();
<             it.hasNext ();) {
<                 EAnnotation nextAnnocation = (EAnnotation) it.next ();
---
>             for (EAnnotation nextAnnocation : eClass.getEAnnotations ()) {
167,172c157,158
<             for (Iterator it = eClass.getEOperations ().iterator ();
<             it.hasNext ();) {
<                 EOperation nextOperation = (EOperation) it.next ();
<                 for (Iterator annotIt = nextOperation.getEAnnotations ().iterator ();
<                 annotIt.hasNext ();) {
<                     EAnnotation annotation = (EAnnotation) annotIt.next ();
---
>             for (EOperation nextOperation : eClass.getEOperations ()) {
>                 for (EAnnotation annotation : nextOperation.getEAnnotations ()) {
178,183c164,165
<             for (Iterator it = eClass.getEStructuralFeatures ().iterator ();
<             it.hasNext ();) {
<                 EStructuralFeature nextFeature = (EStructuralFeature) it.next ();
<                 for (Iterator annotIt = nextFeature.getEAnnotations ().iterator ();
<                 annotIt.hasNext ();) {
<                     EAnnotation annotation = (EAnnotation) annotIt.next ();
---
>             for (EStructuralFeature nextFeature : eClass.getEStructuralFeatures ()) {
>                 for (EAnnotation annotation : nextFeature.getEAnnotations ()) {
189,192c171
<             EList superTypes = eClass.getESuperTypes ();
<             for (Iterator it = superTypes.iterator ();
<             it.hasNext ();) {
<                 EClass nextSuperType = (EClass) it.next ();
---
>             for (EClass nextSuperType : eClass.getESuperTypes ()) {
212c191
<         protected boolean handleConstrainedElement (ConstraintAdapter constraint, EObject constrainedElement, DiagnosticChain diagnostics, Map context) {
---
>         protected boolean handleConstrainedElement (ConstraintAdapter constraint, EObject constrainedElement, DiagnosticChain diagnostics, Map < Object, Object > context) {
