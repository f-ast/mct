3,4d2
< import java.util.ArrayList;
< 
23d20
<     private static final int STORAGE_POOL_SIZE = 10;
26d22
<     private final StoragePool myStoragePool;
31d26
<         myStoragePool = new StoragePool (STORAGE_POOL_SIZE);
66c61
<         List storage = myStoragePool.acquireList ();
---
>         final List < Pair > storage = new LinkedList < Pair > ();
68,70c63
<         for (Iterator pairs = storage.iterator ();
<         pairs.hasNext ();) {
<             Pair next = (Pair) pairs.next ();
---
>         for (Pair next : storage) {
87d79
<         myStoragePool.release (storage);
113c105
<         public void match (Collection currents, Collection olds, Collection output) {
---
>         public void match (Collection currents, Collection olds, Collection < Pair > output) {
197,217d188
<     private static class StoragePool extends AbstractPool {
< 
<         public StoragePool (int capacity) {
<             super (capacity);
<         }
< 
<         public List acquireList () {
<             return (List) internalAcquire ();
<         }
< 
<         public void release (List list) {
<             list.clear ();
<             internalRelease (list);
<         }
< 
<         protected Object createNew () {
<             return new ArrayList ();
<         }
< 
<     }
< 
