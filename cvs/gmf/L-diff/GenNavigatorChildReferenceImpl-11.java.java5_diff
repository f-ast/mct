24a25,26
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
69a72,92
>     public NotificationChain basicSetNavigator (GenNavigator newNavigator, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newNavigator, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR, msgs);
>         return msgs;
>     }
> 
>     public void setNavigator (GenNavigator newNavigator) {
>         if (newNavigator != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR && newNavigator != null)) {
>             if (EcoreUtil.isAncestor (this, newNavigator)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newNavigator != null) msgs = ((InternalEObject) newNavigator).eInverseAdd (this, GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES, GenNavigator.class, msgs);
> 
>             msgs = basicSetNavigator (newNavigator, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR, newNavigator, newNavigator));
> 
>     }
> 
200c223
<                 return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR, msgs);
---
>                 return basicSetNavigator ((GenNavigator) otherEnd, msgs);
209c232
<                 return eBasicSetContainer (null, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR, msgs);
---
>                 return basicSetNavigator (null, msgs);
250a274,276
>             case GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR :
>                 setNavigator ((GenNavigator) newValue);
>                 return;
275a302,304
>             case GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR :
>                 setNavigator ((GenNavigator) null);
>                 return;
