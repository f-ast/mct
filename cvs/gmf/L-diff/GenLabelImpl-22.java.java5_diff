31a32,33
>     protected static final boolean READ_ONLY_EDEFAULT = false;
>     protected boolean readOnly = READ_ONLY_EDEFAULT;
43a46,56
>     public boolean isReadOnly () {
>         return readOnly;
>     }
> 
>     public void setReadOnly (boolean newReadOnly) {
>         boolean oldReadOnly = readOnly;
>         readOnly = newReadOnly;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_LABEL__READ_ONLY, oldReadOnly, readOnly));
> 
>     }
> 
112a126,127
>             case GMFGenPackage.GEN_LABEL__READ_ONLY :
>                 return isReadOnly () ? Boolean.TRUE : Boolean.FALSE;
122a138,140
>             case GMFGenPackage.GEN_LABEL__READ_ONLY :
>                 setReadOnly (((Boolean) newValue).booleanValue ());
>                 return;
134a153,155
>             case GMFGenPackage.GEN_LABEL__READ_ONLY :
>                 setReadOnly (READ_ONLY_EDEFAULT);
>                 return;
146a168,169
>             case GMFGenPackage.GEN_LABEL__READ_ONLY :
>                 return readOnly != READ_ONLY_EDEFAULT;
159c182,184
<         result.append (" (elementIcon: ");
---
>         result.append (" (readOnly: ");
>         result.append (readOnly);
>         result.append (", elementIcon: ");
