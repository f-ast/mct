1,3c1
< package org.eclipse.gmf.internal.codegen.lite;
< 
< import java.net.MalformedURLException;
---
> package org.eclipse.gmf.codegen.util;
7,12d4
< import java.util.ArrayList;
< 
< import java.util.HashMap;
< 
< import org.eclipse.core.runtime.IStatus;
< 
15,16d6
< import org.eclipse.core.runtime.Status;
< 
25,26d14
< import org.eclipse.emf.common.CommonPlugin;
< 
29c17
< import org.eclipse.gmf.common.UnexpectedBehaviourException;
---
> import org.eclipse.gmf.codegen.templates.application.ActionBarAdvisorGenerator;
31c19
< import org.eclipse.gmf.internal.common.codegen.BinaryEmitter;
---
> import org.eclipse.gmf.codegen.templates.application.ApplicationGenerator;
33c21
< import org.eclipse.gmf.internal.common.codegen.DefaultTextMerger;
---
> import org.eclipse.gmf.codegen.templates.application.PerspectiveGenerator;
35c23
< import org.eclipse.gmf.internal.common.codegen.GIFEmitter;
---
> import org.eclipse.gmf.codegen.templates.application.URIDiagramDocumentProviderGenerator;
37c25
< import org.eclipse.gmf.internal.common.codegen.JETGIFEmitterAdapter;
---
> import org.eclipse.gmf.codegen.templates.application.URIEditorInputProxyGenerator;
39c27
< import org.eclipse.gmf.internal.common.codegen.TextEmitter;
---
> import org.eclipse.gmf.codegen.templates.application.WorkbenchAdvisorGenerator;
41c29
< import org.eclipse.gmf.internal.common.codegen.TextMerger;
---
> import org.eclipse.gmf.codegen.templates.application.WorkbenchWindowAdvisorGenerator;
43c31
< import org.eclipse.gmf.internal.common.codegen.XpandTextEmitter;
---
> import org.eclipse.gmf.codegen.templates.commands.CreateShortcutDecorationsCommand;
45c33
< import org.eclipse.gmf.internal.xpand.ResourceManager;
---
> import org.eclipse.gmf.codegen.templates.commands.ReorientConnectionViewCommandGenerator;
47c35
< import org.eclipse.gmf.internal.xpand.util.BundleResourceManager;
---
> import org.eclipse.gmf.codegen.templates.editor.ActionBarContributorGenerator;
49c37
< import org.osgi.framework.Bundle;
---
> import org.eclipse.gmf.codegen.templates.editor.BuildPropertiesGenerator;
51,54c39
< public class CodegenEmitters {
<     private static final String CODEGEN_PLUGIN_ID = "org.eclipse.gmf.codegen";
<     private final String [] myTemplatePath;
<     private ResourceManager myResourceManager;
---
> import org.eclipse.gmf.codegen.templates.editor.CreateShortcutActionGenerator;
56,73c41
<     public CodegenEmitters (boolean usePrecompiled, String templateDirectory) {
<         ArrayList < URL > templatesURI = new ArrayList < URL > (3);
<         templatesURI.add (getTemplatesBundle ().getEntry ("/templates/"));
<         templatesURI.add (getCodegenTemplatesBundle ().getEntry ("/templates/"));
<         URL dynamicTemplatesPath = getDynamicTemplatesURL (templateDirectory);
<         if (dynamicTemplatesPath != null) {
<             templatesURI.add (dynamicTemplatesPath);
<         }
<         myResourceManager = new BundleResourceManager (templatesURI.toArray (new URL [templatesURI.size ()]));
<         myTemplatePath = new String [templatesURI.size ()];
<         for (int i = 0;
<         i < templatesURI.size (); i ++) {
<             myTemplatePath [i] = templatesURI.get (i).toString ();
<         }
<         if (usePrecompiled) {
<             myCachedXpandEmitters = new HashMap < String, TextEmitter > ();
<         }
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.CreationWizardGenerator;
75,85c43
<     private static URL getDynamicTemplatesURL (String templateDirectory) {
<         if (templateDirectory != null) {
<             URI templatesURI = templateDirectory.indexOf (":") == - 1 ? URI.createPlatformResourceURI (templateDirectory, true) : URI.createURI (templateDirectory);
<             try {
<                 return new URL (CommonPlugin.resolve (templatesURI).toString ());
<             } catch (MalformedURLException e) {
<                 Activator.getInstance ().getLog ().log (new Status (IStatus.ERROR, Activator.getPluginID (), 0, "Incorrect dynamic templates location", e));
<             }
<         }
<         return null;
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.CreationWizardPageGenerator;
87,98c45
<     public TextMerger createMergeService () {
<         URL controlFile = getJMergeControlFile ();
<         if (controlFile != null) {
<             JControlModel controlModel = new JControlModel ();
<             controlModel.initialize (CodeGenUtil.instantiateFacadeHelper (JMerger.DEFAULT_FACADE_HELPER_CLASS), controlFile.toString ());
<             if (! controlModel.canMerge ()) {
<                 throw new IllegalStateException ("Can not initialize JControlModel");
<             }
<             return new DefaultTextMerger (controlModel);
<         }
<         return null;
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.DiagramEditorUtilGenerator;
100,102c47
<     public TextEmitter getCreateNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateNodeCommand::CreateNodeCommand");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.DocumentProviderGenerator;
104,106c49
<     public TextEmitter getCreateNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateNodeCommand::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.EditorGenerator;
108,110c51
<     public TextEmitter getAddNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::AddNodeCommand::AddNodeCommand");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.ElementChooserGenerator;
112,114c53
<     public TextEmitter getAddNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::AddNodeCommand::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.InitDiagramFileActionGenerator;
116,118c55
<     public TextEmitter getCloneNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CloneNodeCommand::CloneNodeCommand");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.LoadResourceActionGenerator;
120,122c57
<     public TextEmitter getCloneNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CloneNodeCommand::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.ManifestGenerator;
124,126c59
<     public TextEmitter getCreateLinkStartCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateLinkStartCommand::CreateLinkStartCommand");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.MatchingStrategyGenerator;
128,130c61
<     public TextEmitter getCreateLinkStartCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateLinkStartCommand::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.NewDiagramFileWizardGenerator;
132,134c63
<     public TextEmitter getCreateLinkCompleteCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateLinkCompleteCommand::CreateLinkCompleteCommand");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.OptionsFileGenerator;
136,138c65
<     public TextEmitter getCreateLinkCompleteCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateLinkCompleteCommand::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.PaletteFactoryGenerator;
140,142c67
<     public TextEmitter getReconnectLinkSourceCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::ReconnectLinkSourceCommand::ReconnectLinkSourceCommand");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.PluginGenerator;
144,146c69
<     public TextEmitter getReconnectLinkSourceCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::ReconnectLinkSourceCommand::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.PluginPropertiesGenerator;
148,150c71
<     public TextEmitter getReconnectLinkTargetCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::ReconnectLinkTargetCommand::ReconnectLinkTargetCommand");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.PluginXML;
152,154c73
<     public TextEmitter getReconnectLinkTargetCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::ReconnectLinkTargetCommand::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.PreferencesInitializerGenerator;
156,158c75
<     public TextEmitter getViewFactoryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::viewfactories::ViewFactory::ViewFactory");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.PropertySectionGenerator;
160,162c77
<     public TextEmitter getComponentEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ComponentEditPolicy::ComponentEditPolicy");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.SheetLabelProviderGenerator;
164,166c79
<     public TextEmitter getComponentEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ComponentEditPolicy::qualifiedClassName");
<     }
---
> import org.eclipse.gmf.codegen.templates.editor.VisualIDRegistryGenerator;
168,170c81,181
<     public TextEmitter getLayoutEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::LayoutEditPolicy::LayoutEditPolicy");
<     }
---
> import org.eclipse.gmf.codegen.templates.expressions.AbstractExpressionGenerator;
> 
> import org.eclipse.gmf.codegen.templates.expressions.OCLExpressionFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.expressions.RegexpExpressionFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.helpers.BaseEditHelperGenerator;
> 
> import org.eclipse.gmf.codegen.templates.helpers.EditHelperAdviceGenerator;
> 
> import org.eclipse.gmf.codegen.templates.helpers.EditHelperGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.AbstractNavigatorItemGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorActionProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorContentProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorGroupGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorItemGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorLabelProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorLinkHelperGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorSorterGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.ChildNodeEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.CompartmentEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.DiagramEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.DiagramExternalNodeLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.EditPartFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.ExternalNodeLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.LinkEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.LinkLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.NodeEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.NodeLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.ChildContainerCanonicalEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.CompartmentItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.DiagramCanonicalEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.DiagramItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.ExternalNodeLabelHostLayoutEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.GraphicalNodeEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.ItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.LinkItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.NodeItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.OpenDiagramPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.TextNonResizableEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.TextSelectionEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.AbstractParserGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ContributionItemProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.EditPartProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ElementTypesGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.IconProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.LabelTextViewFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.LabelViewFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.MarkerNavigationProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.MetricProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ModelingAssistantProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ParserProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ShortcutsDecoratorProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ShortcutsPropertyTester;
> 
> import org.eclipse.gmf.codegen.templates.providers.StructuralFeatureParserGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.StructuralFeaturesParserGenerator;
172,173c183,230
<     public TextEmitter getLayoutEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::LayoutEditPolicy::qualifiedClassName");
---
> import org.eclipse.gmf.codegen.templates.providers.ValidationDecoratorProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ValidationProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ViewFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ViewProviderGenerator;
> 
> import org.eclipse.gmf.common.UnexpectedBehaviourException;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.CachingEmitterFactory;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactory;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactoryImpl;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.NoSuchTemplateException;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.StaticTemplateRegistry;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.TemplateRegistry;
> 
> import org.eclipse.gmf.internal.common.codegen.BinaryEmitter;
> 
> import org.eclipse.gmf.internal.common.codegen.DefaultTextMerger;
> 
> import org.eclipse.gmf.internal.common.codegen.GIFEmitter;
> 
> import org.eclipse.gmf.internal.common.codegen.JETEmitterAdapter;
> 
> import org.eclipse.gmf.internal.common.codegen.JETGIFEmitterAdapter;
> 
> import org.eclipse.gmf.internal.common.codegen.TextEmitter;
> 
> import org.eclipse.gmf.internal.common.codegen.TextMerger;
> 
> import org.osgi.framework.Bundle;
> 
> public class CodegenEmitters {
>     private static final String TEMPLATES_PLUGIN_ID = "org.eclipse.gmf.codegen";
>     private final EmitterFactory myFactory;
>     private final String [] myTemplatePath;
> 
>     public CodegenEmitters (boolean usePrecompiled, String templateDirectory) {
>         TemplateRegistry registry = initRegistry ();
>         String [] variables = new String [] {"org.eclipse.emf.codegen", "org.eclipse.emf.codegen.ecore", "org.eclipse.emf.common", "org.eclipse.emf.ecore", "org.eclipse.gmf.common", "org.eclipse.gmf.codegen"};
>         myTemplatePath = new String [] {usePrecompiled ? null : templateDirectory != null && templateDirectory.indexOf (":") == - 1 ? URI.createPlatformResourceURI (templateDirectory).toString () : templateDirectory, getTemplatesBundle ().getEntry ("/templates/").toString ()};
>         myFactory = new CachingEmitterFactory (new EmitterFactoryImpl (getTemplatePath (), registry, usePrecompiled, variables));
176,177c233,243
<     public TextEmitter getGraphicalEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::GraphicalNodeEditPolicy::GraphicalNodeEditPolicy");
---
>     public TextMerger createMergeService () {
>         URL controlFile = getJMergeControlFile ();
>         if (controlFile != null) {
>             JControlModel controlModel = new JControlModel ();
>             controlModel.initialize (CodeGenUtil.instantiateFacadeHelper (JMerger.DEFAULT_FACADE_HELPER_CLASS), controlFile.toString ());
>             if (! controlModel.canMerge ()) {
>                 throw new IllegalStateException ("Can not initialize JControlModel");
>             }
>             return new DefaultTextMerger (controlModel);
>         }
>         return null;
180,181c246,335
<     public TextEmitter getGraphicalEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::GraphicalNodeEditPolicy::qualifiedClassName");
---
>     private static TemplateRegistry initRegistry () {
>         final StaticTemplateRegistry tr = new StaticTemplateRegistry (CodegenEmitters.class.getClassLoader ());
>         put (tr, "/commands/ReorientConnectionViewCommand.javajet", ReorientConnectionViewCommandGenerator.class);
>         put (tr, "/helpers/BaseEditHelper.javajet", BaseEditHelperGenerator.class);
>         put (tr, "/helpers/EditHelper.javajet", EditHelperGenerator.class);
>         put (tr, "/helpers/EditHelperAdvice.javajet", EditHelperAdviceGenerator.class);
>         put (tr, "/parts/DiagramEditPart.javajet", DiagramEditPartGenerator.class);
>         put (tr, "/parts/DiagramExternalNodeLabelEditPart.javajet", DiagramExternalNodeLabelEditPartGenerator.class);
>         put (tr, "/parts/NodeEditPart.javajet", NodeEditPartGenerator.class);
>         put (tr, "/parts/NodeLabelEditPart.javajet", NodeLabelEditPartGenerator.class);
>         put (tr, "/parts/ExternalNodeLabelEditPart.javajet", ExternalNodeLabelEditPartGenerator.class);
>         put (tr, "/parts/ChildNodeEditPart.javajet", ChildNodeEditPartGenerator.class);
>         put (tr, "/parts/CompartmentEditPart.javajet", CompartmentEditPartGenerator.class);
>         put (tr, "/parts/LinkEditPart.javajet", LinkEditPartGenerator.class);
>         put (tr, "/parts/LinkLabelEditPart.javajet", LinkLabelEditPartGenerator.class);
>         put (tr, "/parts/EditPartFactory.javajet", EditPartFactoryGenerator.class);
>         put (tr, "/policies/ItemSemanticEditPolicy.javajet", ItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/GraphicalNodeEditPolicy.javajet", GraphicalNodeEditPolicyGenerator.class);
>         put (tr, "/policies/OpenDiagram.javajet", OpenDiagramPolicyGenerator.class);
>         put (tr, "/policies/DiagramCanonicalEditPolicy.javajet", DiagramCanonicalEditPolicyGenerator.class);
>         put (tr, "/policies/ChildContainerCanonicalEditPolicy.javajet", ChildContainerCanonicalEditPolicyGenerator.class);
>         put (tr, "/policies/DiagramItemSemanticEditPolicy.javajet", DiagramItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/CompartmentItemSemanticEditPolicy.javajet", CompartmentItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/NodeItemSemanticEditPolicy.javajet", NodeItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/LinkItemSemanticEditPolicy.javajet", LinkItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/TextSelectionEditPolicy.javajet", TextSelectionEditPolicyGenerator.class);
>         put (tr, "/policies/TextNonResizableEditPolicy.javajet", TextNonResizableEditPolicyGenerator.class);
>         put (tr, "/policies/ExternalNodeLabelHostLayoutEditPolicy.javajet", ExternalNodeLabelHostLayoutEditPolicyGenerator.class);
>         put (tr, "/providers/AbstractParser.javajet", AbstractParserGenerator.class);
>         put (tr, "/providers/StructuralFeatureParser.javajet", StructuralFeatureParserGenerator.class);
>         put (tr, "/providers/StructuralFeaturesParser.javajet", StructuralFeaturesParserGenerator.class);
>         put (tr, "/providers/ViewFactory.javajet", ViewFactoryGenerator.class);
>         put (tr, "/providers/LabelViewFactory.javajet", LabelViewFactoryGenerator.class);
>         put (tr, "/providers/LabelTextViewFactory.javajet", LabelTextViewFactoryGenerator.class);
>         put (tr, "/providers/ElementTypes.javajet", ElementTypesGenerator.class);
>         put (tr, "/providers/ViewProvider.javajet", ViewProviderGenerator.class);
>         put (tr, "/providers/EditPartProvider.javajet", EditPartProviderGenerator.class);
>         put (tr, "/providers/ContributionItemProvider.javajet", ContributionItemProviderGenerator.class);
>         put (tr, "/providers/ModelingAssistantProvider.javajet", ModelingAssistantProviderGenerator.class);
>         put (tr, "/providers/IconProvider.javajet", IconProviderGenerator.class);
>         put (tr, "/providers/ParserProvider.javajet", ParserProviderGenerator.class);
>         put (tr, "/providers/ValidationProvider.javajet", ValidationProviderGenerator.class);
>         put (tr, "/providers/ValidationDecoratorProvider.javajet", ValidationDecoratorProviderGenerator.class);
>         put (tr, "/providers/ShortcutsDecoratorProvider.javajet", ShortcutsDecoratorProviderGenerator.class);
>         put (tr, "/editor/ShortcutPropertyTester.javajet", ShortcutsPropertyTester.class);
>         put (tr, "/providers/MetricProvider.javajet", MetricProviderGenerator.class);
>         put (tr, "/providers/MarkerNavigationProvider.javajet", MarkerNavigationProviderGenerator.class);
>         put (tr, "/editor/InitDiagramFileAction.javajet", InitDiagramFileActionGenerator.class);
>         put (tr, "/editor/NewDiagramFileWizard.javajet", NewDiagramFileWizardGenerator.class);
>         put (tr, "/editor/PaletteFactory.javajet", PaletteFactoryGenerator.class);
>         put (tr, "/editor/DiagramEditorUtil.javajet", DiagramEditorUtilGenerator.class);
>         put (tr, "/editor/VisualIDRegistry.javajet", VisualIDRegistryGenerator.class);
>         put (tr, "/editor/CreationWizard.javajet", CreationWizardGenerator.class);
>         put (tr, "/editor/CreationWizardPage.javajet", CreationWizardPageGenerator.class);
>         put (tr, "/editor/Editor.javajet", EditorGenerator.class);
>         put (tr, "/editor/CreateShortcutAction.javajet", CreateShortcutActionGenerator.class);
>         put (tr, "/commands/CreateShortcutDecorationsCommand.javajet", CreateShortcutDecorationsCommand.class);
>         put (tr, "/editor/LoadResourceAction.javajet", LoadResourceActionGenerator.class);
>         put (tr, "/editor/ElementChooser.javajet", ElementChooserGenerator.class);
>         put (tr, "/editor/DocumentProvider.javajet", DocumentProviderGenerator.class);
>         put (tr, "/editor/ActionBarContributor.javajet", ActionBarContributorGenerator.class);
>         put (tr, "/editor/MatchingStrategy.javajet", MatchingStrategyGenerator.class);
>         put (tr, "/editor/PreferenceInitializer.javajet", PreferencesInitializerGenerator.class);
>         put (tr, "/navigator/NavigatorContentProvider.javajet", NavigatorContentProviderGenerator.class);
>         put (tr, "/navigator/NavigatorLabelProvider.javajet", NavigatorLabelProviderGenerator.class);
>         put (tr, "/navigator/NavigatorLinkHelper.javajet", NavigatorLinkHelperGenerator.class);
>         put (tr, "/navigator/NavigatorSorter.javajet", NavigatorSorterGenerator.class);
>         put (tr, "/navigator/NavigatorActionProvider.javajet", NavigatorActionProviderGenerator.class);
>         put (tr, "/navigator/AbstractNavigatorItem.javajet", AbstractNavigatorItemGenerator.class);
>         put (tr, "/navigator/NavigatorGroup.javajet", NavigatorGroupGenerator.class);
>         put (tr, "/navigator/NavigatorItem.javajet", NavigatorItemGenerator.class);
>         put (tr, "/editor/Plugin.javajet", PluginGenerator.class);
>         put (tr, "/editor/plugin.xmljet", PluginXML.class);
>         put (tr, "/editor/plugin.propertiesjet", PluginPropertiesGenerator.class);
>         put (tr, "/editor/.optionsjet", OptionsFileGenerator.class);
>         put (tr, "/editor/manifest.mfjet", ManifestGenerator.class);
>         put (tr, "/editor/build.propertiesjet", BuildPropertiesGenerator.class);
>         put (tr, "/propsheet/PropertySection.javajet", PropertySectionGenerator.class);
>         put (tr, "/propsheet/SheetLabelProvider.javajet", SheetLabelProviderGenerator.class);
>         put (tr, "/expressions/AbstractExpression.javajet", AbstractExpressionGenerator.class);
>         put (tr, "/expressions/OCLExpressionFactory.javajet", OCLExpressionFactoryGenerator.class);
>         put (tr, "/expressions/RegexpExpressionFactory.javajet", RegexpExpressionFactoryGenerator.class);
>         put (tr, "/application/ActionBarAdvisor.javajet", ActionBarAdvisorGenerator.class);
>         put (tr, "/application/Application.javajet", ApplicationGenerator.class);
>         put (tr, "/application/Perspective.javajet", PerspectiveGenerator.class);
>         put (tr, "/application/WorkbenchAdvisor.javajet", WorkbenchAdvisorGenerator.class);
>         put (tr, "/application/WorkbenchWindowAdvisor.javajet", WorkbenchWindowAdvisorGenerator.class);
>         put (tr, "/application/URIDiagramDocumentProvider.javajet", URIDiagramDocumentProviderGenerator.class);
>         put (tr, "/application/URIEditorInputProxy.javajet", URIEditorInputProxyGenerator.class);
>         return tr;
184,185c338,339
<     public TextEmitter getConnectionEndpointEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ConnectionEndpointEditPolicy::ConnectionEndpointEditPolicy");
---
>     private static void put (StaticTemplateRegistry tr, String path, Class precompiledTemplate) {
>         tr.put (precompiledTemplate, path, precompiledTemplate);
188,189c342,347
<     public TextEmitter getConnectionEndpointEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ConnectionEndpointEditPolicy::qualifiedClassName");
---
>     private TextEmitter retrieve (Class key) throws UnexpectedBehaviourException {
>         try {
>             return new JETEmitterAdapter (myFactory.acquireEmitter (key));
>         } catch (NoSuchTemplateException ex) {
>             throw new UnexpectedBehaviourException (ex.getMessage (), ex);
>         }
192,193c350,351
<     public TextEmitter getValidationProviderGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ValidationProvider::ValidationProvider");
---
>     private String [] getTemplatePath () {
>         return myTemplatePath;
196,197c354,355
<     public TextEmitter getValidateActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ValidateAction::ValidateAction");
---
>     private static Bundle getTemplatesBundle () {
>         return Platform.getBundle (TEMPLATES_PLUGIN_ID);
200,201c358,359
<     public TextEmitter getValidateActionQualifiedNameGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ValidateAction::qualifiedClassName");
---
>     public URL getJMergeControlFile () {
>         return getTemplatesBundle ().getEntry ("/templates/emf-merge.xml");
204,205c362,363
<     public TextEmitter getMetricProviderEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::MetricProvider::MetricProvider");
---
>     public TextEmitter getReorientConnectionViewCommandEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ReorientConnectionViewCommandGenerator.class);
208,209c366,367
<     public TextEmitter getMetricsActionEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::MetricsAction::MetricsAction");
---
>     public TextEmitter getBaseEditHelperEmitter () throws UnexpectedBehaviourException {
>         return retrieve (BaseEditHelperGenerator.class);
212,213c370,371
<     public TextEmitter getMetricsActionQualifiedNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::MetricsAction::qualifiedClassName");
---
>     public TextEmitter getEditHelperEmitter () throws UnexpectedBehaviourException {
>         return retrieve (EditHelperGenerator.class);
216,217c374,375
<     public TextEmitter getDomainElementInitializerGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::DomainElementInitializer::DomainElementInitializer");
---
>     public TextEmitter getEditHelperAdviceEmitter () throws UnexpectedBehaviourException {
>         return retrieve (EditHelperAdviceGenerator.class);
220,221c378,379
<     public TextEmitter getDomainElementInitializerQualifiedNameGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::DomainElementInitializer::qualifiedClassName");
---
>     public TextEmitter getDiagramEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DiagramEditPartGenerator.class);
224,225c382,383
<     public TextEmitter getCompartmentEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::CompartmentEditPart::CompartmentEditPart");
---
>     public TextEmitter getDiagramExternalNodeLabelEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DiagramExternalNodeLabelEditPartGenerator.class);
228,229c386,387
<     public TextEmitter getDiagramEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::DiagramEditPart::DiagramEditPart");
---
>     public TextEmitter getNodeEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NodeEditPartGenerator.class);
232,233c390,391
<     public TextEmitter getEditPartFactoryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::EditPartFactory::EditPartFactory");
---
>     public TextEmitter getNodeLabelEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NodeLabelEditPartGenerator.class);
236,237c394,395
<     public TextEmitter getLinkEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::LinkEditPart::LinkEditPart");
---
>     public TextEmitter getExternalNodeLabelEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ExternalNodeLabelEditPartGenerator.class);
240,241c398,399
<     public TextEmitter getLinkLabelEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::LinkLabelEditPart::LinkLabelEditPart");
---
>     public TextEmitter getChildNodeEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ChildNodeEditPartGenerator.class);
244,245c402,403
<     public TextEmitter getChildNodeEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::ChildNodeEditPart::ChildNodeEditPart");
---
>     public TextEmitter getCompartmentEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CompartmentEditPartGenerator.class);
248,249c406,407
<     public TextEmitter getNodeEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::NodeEditPart::NodeEditPart");
---
>     public TextEmitter getLinkEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LinkEditPartGenerator.class);
252,253c410,411
<     public TextEmitter getNodeLabelEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::NodeLabelEditPart::NodeLabelEditPart");
---
>     public TextEmitter getLinkLabelEditPartEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LinkLabelEditPartGenerator.class);
256,257c414,415
<     public TextEmitter getPluginGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::Plugin::Plugin");
---
>     public TextEmitter getEditPartFactoryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (EditPartFactoryGenerator.class);
260,261c418,419
<     public TextEmitter getActionBarContributorGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ActionBarContributor::ActionBarContributor");
---
>     public TextEmitter getBaseItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ItemSemanticEditPolicyGenerator.class);
264,265c422,423
<     public TextEmitter getOpenDiagramInViewActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::OpenDiagramInViewAction::OpenDiagramInViewAction");
---
>     public TextEmitter getOpenDiagramEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (OpenDiagramPolicyGenerator.class);
268,269c426,427
<     public TextEmitter getOpenDiagramInViewActionQualifiedClassNameGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::OpenDiagramInViewAction::qualifiedClassName");
---
>     public TextEmitter getDiagramCanonicalEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DiagramCanonicalEditPolicyGenerator.class);
272,273c430,431
<     public TextEmitter getEditorGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::Editor::Editor");
---
>     public TextEmitter getChildContainerCanonicalEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ChildContainerCanonicalEditPolicyGenerator.class);
276,277c434,435
<     public TextEmitter getMatchingStrategyEmitter () {
<         return retrieveXpand ("xpt::editor::MatchingStrategy::MatchingStrategy");
---
>     public TextEmitter getDiagramItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DiagramItemSemanticEditPolicyGenerator.class);
280,281c438,439
<     public TextEmitter getCreationWizardGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::CreationWizard::CreationWizard");
---
>     public TextEmitter getCompartmentItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CompartmentItemSemanticEditPolicyGenerator.class);
284,285c442,443
<     public TextEmitter getCreationWizardPageGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::CreationWizardPage::CreationWizardPage");
---
>     public TextEmitter getGraphicalNodeEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (GraphicalNodeEditPolicyGenerator.class);
288,289c446,447
<     public TextEmitter getDiagramEditorUtilGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::DiagramEditorUtil::DiagramEditorUtil");
---
>     public TextEmitter getNodeItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NodeItemSemanticEditPolicyGenerator.class);
292,293c450,451
<     public TextEmitter getPaletteFactoryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::palette::PaletteFactory::Factory");
---
>     public TextEmitter getLinkItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LinkItemSemanticEditPolicyGenerator.class);
296,297c454,455
<     public TextEmitter getVisualIDRegistryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::VisualIDRegistry::VisualIDRegistry");
---
>     public TextEmitter getTextSelectionEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (TextSelectionEditPolicyGenerator.class);
300,301c458,459
<     public TextEmitter getManifestGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::manifest::manifest");
---
>     public TextEmitter getTextNonResizableEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (TextNonResizableEditPolicyGenerator.class);
304,305c462,463
<     public TextEmitter getBuildPropertiesGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::buildProperties::buildProperties");
---
>     public TextEmitter getExternalNodeLabelHostLayoutEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ExternalNodeLabelHostLayoutEditPolicyGenerator.class);
308,309c466,467
<     public TextEmitter getPluginXML () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::plugin::plugin");
---
>     public TextEmitter getAbstractParserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (AbstractParserGenerator.class);
312,313c470,471
<     public TextEmitter getModelElementSelectionPageEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ModelElementSelectionPage::ModelElementSelectionPage");
---
>     public TextEmitter getStructuralFeatureParserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (StructuralFeatureParserGenerator.class);
316,317c474,475
<     public TextEmitter getModelElementSelectionPageQualifiedNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ModelElementSelectionPage::qualifiedClassName");
---
>     public TextEmitter getStructuralFeaturesParserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (StructuralFeaturesParserGenerator.class);
320,321c478,479
<     public TextEmitter getInitDiagramFileActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::InitDiagramFileAction::InitDiagramFileAction");
---
>     public TextEmitter getViewFactoryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ViewFactoryGenerator.class);
324,325c482,483
<     public TextEmitter getNewDiagramFileWizardGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::NewDiagramFileWizard::NewDiagramFileWizard");
---
>     public TextEmitter getLabelViewFactoryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LabelViewFactoryGenerator.class);
328,329c486,487
<     public TextEmitter getURISelectorPageGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::URISelectorPage::URISelectorPage");
---
>     public TextEmitter getLabelTextViewFactoryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LabelTextViewFactoryGenerator.class);
332,333c490,491
<     public TextEmitter getURISelectorPageQualifiedClassNameGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::URISelectorPage::qualifiedClassName");
---
>     public TextEmitter getElementTypesEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ElementTypesGenerator.class);
336,337c494,495
<     public TextEmitter getShortcutPropertyTesterEmitter () {
<         return retrieveXpand ("xpt::editor::ShortcutPropertyTester::ShortcutPropertyTester");
---
>     public TextEmitter getViewProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ViewProviderGenerator.class);
340,341c498,499
<     public TextEmitter getShortcutCreationWizardEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ShortcutCreationWizard::ShortcutCreationWizard");
---
>     public TextEmitter getEditPartProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (EditPartProviderGenerator.class);
344,345c502,503
<     public TextEmitter getShortcutCreationWizardQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ShortcutCreationWizard::qualifiedClassName");
---
>     public TextEmitter getContributionItemProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ContributionItemProviderGenerator.class);
348,349c506,507
<     public TextEmitter getCreateShortcutActionEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::CreateShortcutAction::CreateShortcutAction");
---
>     public TextEmitter getModelingAssistantProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ModelingAssistantProviderGenerator.class);
352,353c510,511
<     public TextEmitter getShortcutProviderEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ShortcutProvider::ShortcutProvider");
---
>     public TextEmitter getPropertySheetLabelProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (SheetLabelProviderGenerator.class);
356,357c514,515
<     public TextEmitter getShortcutProviderQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ShortcutProvider::qualifiedClassName");
---
>     public TextEmitter getPropertySectionEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PropertySectionGenerator.class);
360,361c518,519
<     public TextEmitter getCreateShortcutNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateShortcutNodeCommand::CreateShortcutNodeCommand");
---
>     public TextEmitter getIconProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (IconProviderGenerator.class);
364,365c522,523
<     public TextEmitter getCreateShortcutNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateShortcutNodeCommand::qualifiedClassName");
---
>     public TextEmitter getParserProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ParserProviderGenerator.class);
368,369c526,527
<     public TextEmitter getCreateShortcutEdgeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateShortcutEdgeCommand::CreateShortcutEdgeCommand");
---
>     public TextEmitter getValidationProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ValidationProviderGenerator.class);
372,373c530,531
<     public TextEmitter getCreateShortcutEdgeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateShortcutEdgeCommand::qualifiedClassName");
---
>     public TextEmitter getValidationDecoratorProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ValidationDecoratorProviderGenerator.class);
376,377c534,535
<     public TextEmitter getElementChooserEmitter () {
<         return retrieveXpand ("xpt::editor::ElementChooser::ElementChooser");
---
>     public TextEmitter getShortcutsDecoratorProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ShortcutsDecoratorProviderGenerator.class);
380,381c538,539
<     public TextEmitter getLoadResourceActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::LoadResourceAction::LoadResourceAction");
---
>     public TextEmitter getShortcutPropertyTesterEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ShortcutsPropertyTester.class);
384,385c542,543
<     public TextEmitter getElementTypesGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ElementTypes::ElementTypes");
---
>     public TextEmitter getMetricProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (MetricProviderGenerator.class);
388,389c546,547
<     public TextEmitter getPluginPropertiesGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::properties::properties");
---
>     public TextEmitter getMarkerNavigationProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (MarkerNavigationProviderGenerator.class);
393c551
<         return retrieveXpand ("xpt::expressions::AbstractExpression::AbstractExpression");
---
>         return retrieve (AbstractExpressionGenerator.class);
397c555
<         return retrieveXpand ("xpt::expressions::OCLExpressionFactory::OCLExpressionFactory");
---
>         return retrieve (OCLExpressionFactoryGenerator.class);
401c559
<         return retrieveXpand ("xpt::expressions::RegexpExpressionFactory::RegexpExpressionFactory");
---
>         return retrieve (RegexpExpressionFactoryGenerator.class);
404,405c562,563
<     public TextEmitter getOpenDiagramEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::OpenDiagramEditPolicy::OpenDiagramEditPolicy");
---
>     public TextEmitter getInitDiagramFileActionEmitter () throws UnexpectedBehaviourException {
>         return retrieve (InitDiagramFileActionGenerator.class);
408,409c566,567
<     public TextEmitter getAppearancePreferencePageEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::AppearancePreferencePage::AppearancePreferencePage");
---
>     public TextEmitter getNewDiagramFileWizardEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NewDiagramFileWizardGenerator.class);
412,413c570,571
<     public TextEmitter getAppearancePreferencePageQualifiedClassNameEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::AppearancePreferencePage::qualifiedClassName");
---
>     public TextEmitter getPaletteEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PaletteFactoryGenerator.class);
416,417c574,575
<     public TextEmitter getGeneralPreferencePageEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::GeneralPreferencePage::GeneralPreferencePage");
---
>     public TextEmitter getDiagramEditorUtilEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DiagramEditorUtilGenerator.class);
420,421c578,579
<     public TextEmitter getGeneralPreferencePageQualifiedClassNameEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::GeneralPreferencePage::qualifiedClassName");
---
>     public TextEmitter getVisualIDRegistryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (VisualIDRegistryGenerator.class);
424,425c582,583
<     public BinaryEmitter getDiagramIconEmitter () throws UnexpectedBehaviourException {
<         return newGIFEmitterAdapter ("/xpt/editor/diagram.gif");
---
>     public TextEmitter getCreationWizardEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CreationWizardGenerator.class);
428,429c586,587
<     public BinaryEmitter getWizardBannerImageEmitter () throws UnexpectedBehaviourException {
<         return newGIFEmitterAdapter ("/xpt/editor/wizban.gif");
---
>     public TextEmitter getCreationWizardPageEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CreationWizardPageGenerator.class);
432,433c590,591
<     public TextEmitter getWizardBannerStemEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::CreationWizard::wizardBannerStem");
---
>     public TextEmitter getEditorEmitter () throws UnexpectedBehaviourException {
>         return retrieve (EditorGenerator.class);
436,437c594,595
<     public TextEmitter getWizardBannerLocationEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::CreationWizard::wizardBannerLocation");
---
>     public TextEmitter getCreateShortcutActionEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CreateShortcutActionGenerator.class);
440,441c598,599
<     private BinaryEmitter newGIFEmitter (String relativePath) throws UnexpectedBehaviourException {
<         return new GIFEmitter (checkTemplateLocation (relativePath));
---
>     public TextEmitter getCreateShortcutDecorationCommandEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CreateShortcutDecorationsCommand.class);
444,445c602,603
<     private BinaryEmitter newGIFEmitterAdapter (String relativePath) throws UnexpectedBehaviourException {
<         return new JETGIFEmitterAdapter (new org.eclipse.emf.codegen.util.GIFEmitter (checkTemplateLocation (relativePath)));
---
>     public TextEmitter getLoadResourceActionEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LoadResourceActionGenerator.class);
448,451c606,607
<     private String checkTemplateLocation (String relativePath) throws UnexpectedBehaviourException {
<         String templateLocation = JETCompiler.find (getTemplatePath (), relativePath);
<         if (templateLocation == null) {
<             throw new UnexpectedBehaviourException ("Template " + relativePath + " not found");
---
>     public TextEmitter getElementChooserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ElementChooserGenerator.class);
453c609,611
<         return templateLocation;
---
> 
>     public TextEmitter getDocumentProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DocumentProviderGenerator.class);
456,457c614,615
<     private String [] getTemplatePath () {
<         return myTemplatePath;
---
>     public TextEmitter getActionBarContributorEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ActionBarContributorGenerator.class);
460,461c618,619
<     private static Bundle getTemplatesBundle () {
<         return Activator.getDefault ();
---
>     public TextEmitter getMatchingStrategyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (MatchingStrategyGenerator.class);
464,465c622,623
<     private static Bundle getCodegenTemplatesBundle () {
<         return Platform.getBundle (CODEGEN_PLUGIN_ID);
---
>     public TextEmitter getPreferencesInitializerEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PreferencesInitializerGenerator.class);
468,469c626,627
<     public URL getJMergeControlFile () {
<         return getCodegenTemplatesBundle ().getEntry ("/templates/emf-merge.xml");
---
>     public TextEmitter getNavigatorContentProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorContentProviderGenerator.class);
472,473c630,631
<     public BinaryEmitter getShortcutImageEmitter () throws UnexpectedBehaviourException {
<         return newGIFEmitter ("/xpt/editor/shortcut.gif");
---
>     public TextEmitter getNavigatorLabelProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorLabelProviderGenerator.class);
476,477c634,635
<     public TextEmitter getNavigatorContentProviderEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorContentProvider::NavigatorContentProvider");
---
>     public TextEmitter getNavigatorLinkHelperEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorLinkHelperGenerator.class);
480,481c638,639
<     public TextEmitter getDomainNavigatorContentProviderEmitter () {
<         return retrieveXpand ("xpt::navigator::DomainNavigatorContentProvider::DomainNavigatorContentProvider");
---
>     public TextEmitter getNavigatorSorterEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorSorterGenerator.class);
484,485c642,643
<     public TextEmitter getDomainNavigatorLabelProviderEmitter () {
<         return retrieveXpand ("xpt::navigator::DomainNavigatorLabelProvider::DomainNavigatorLabelProvider");
---
>     public TextEmitter getNavigatorActionProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorActionProviderGenerator.class);
488,489c646,647
<     public TextEmitter getDomainNavigatorItemEmitter () {
<         return retrieveXpand ("xpt::navigator::DomainNavigatorItem::DomainNavigatorItem");
---
>     public TextEmitter getAbstractNavigatorItemEmitter () throws UnexpectedBehaviourException {
>         return retrieve (AbstractNavigatorItemGenerator.class);
492,493c650,651
<     public TextEmitter getDomainModelElementTesterEmitter () {
<         return retrieveXpand ("xpt::editor::DomainModelElementTester::DomainModelElementTester");
---
>     public TextEmitter getNavigatorGroupEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorGroupGenerator.class);
496,497c654,655
<     public TextEmitter getURIEditorInputTesterEmitter () {
<         return retrieveXpand ("xpt::editor::UriEditorInputTester::UriEditorInputTester");
---
>     public TextEmitter getNavigatorItemEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorItemGenerator.class);
500,501c658,659
<     public TextEmitter getNavigatorLabelProviderEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::navigator::NavigatorLabelProvider::NavigatorLabelProvider");
---
>     public TextEmitter getPluginClassEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PluginGenerator.class);
504,505c662,663
<     public TextEmitter getNavigatorLinkHelperEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorLinkHelper::NavigatorLinkHelper");
---
>     public TextEmitter getPluginXmlEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PluginXML.class);
508,509c666,667
<     public TextEmitter getNavigatorSorterEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::navigator::NavigatorSorter::NavigatorSorter");
---
>     public TextEmitter getPluginPropertiesEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PluginPropertiesGenerator.class);
512,513c670,671
<     public TextEmitter getNavigatorActionProviderEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::navigator::NavigatorActionProvider::NavigatorActionProvider");
---
>     public TextEmitter getOptionsFileEmitter () throws UnexpectedBehaviourException {
>         return retrieve (OptionsFileGenerator.class);
516,517c674,675
<     public TextEmitter getAbstractNavigatorItemEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::navigator::AbstractNavigatorItem::AbstractNavigatorItem");
---
>     public TextEmitter getBundleManifestEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ManifestGenerator.class);
520,521c678,679
<     public TextEmitter getNavigatorGroupEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorGroup::NavigatorGroup");
---
>     public TextEmitter getBuildPropertiesEmitter () throws UnexpectedBehaviourException {
>         return retrieve (BuildPropertiesGenerator.class);
524,525c682,683
<     public TextEmitter getNavigatorItemEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorItem::NavigatorItem");
---
>     public BinaryEmitter getShortcutImageEmitter () throws UnexpectedBehaviourException {
>         return newGIFEmitter ("/editor/shortcut.gif");
529c687
<         return newGIFEmitter ("/xpt/navigator/navigatorGroup.gif");
---
>         return newGIFEmitter ("/navigator/navigatorGroup.gif");
532,533c690,691
<     public TextEmitter getPropertySheetLabelProviderEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::propsheet::SheetLabelProvider::SheetLabelProvider");
---
>     public BinaryEmitter getDiagramIconEmitter () throws UnexpectedBehaviourException {
>         return newGIFEmitterAdapter ("/editor/diagram.gif");
536,537c694,695
<     public TextEmitter getPropertySectionEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::propsheet::PropertySection::PropertySection");
---
>     public BinaryEmitter getWizardBannerImageEmitter () throws UnexpectedBehaviourException {
>         return newGIFEmitterAdapter ("/editor/wizban.gif");
540,541c698,699
<     public TextEmitter getApplicationEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::application::Application::Application");
---
>     public TextEmitter getActionBarAdvisorEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ActionBarAdvisorGenerator.class);
544,545c702,703
<     public TextEmitter getActionBarAdvisorEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::application::ActionBarAdvisor::ActionBarAdvisor");
---
>     public TextEmitter getApplicationEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ApplicationGenerator.class);
549c707
<         return retrieveXpand ("xpt::application::Perspective::Perspective");
---
>         return retrieve (PerspectiveGenerator.class);
553c711
<         return retrieveXpand ("xpt::application::WorkbenchAdvisor::WorkbenchAdvisor");
---
>         return retrieve (WorkbenchAdvisorGenerator.class);
557c715
<         return retrieveXpand ("xpt::application::WorkbenchWindowAdvisor::WorkbenchWindowAdvisor");
---
>         return retrieve (WorkbenchWindowAdvisorGenerator.class);
560,561c718,719
<     public TextEmitter getMarkerNavigationProviderEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::MarkerNavigationProvider::MarkerNavigationProvider");
---
>     public TextEmitter getURIDiagramDocumentProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (URIDiagramDocumentProviderGenerator.class);
564,565c722,723
<     public TextEmitter getExternalizeEmitter () {
<         return retrieveXpand ("xpt::Externalizer::Access");
---
>     public TextEmitter getURIEditorInputProxyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (URIEditorInputProxyGenerator.class);
568,569c726,727
<     public TextEmitter getMessagesEmitter () {
<         return retrieveXpand ("xpt::Externalizer::Values");
---
>     private BinaryEmitter newGIFEmitter (String relativePath) throws UnexpectedBehaviourException {
>         return new GIFEmitter (checkTemplateLocation (relativePath));
572,581c730,731
<     private TextEmitter retrieveXpand (String templateFQN) {
<         if (myCachedXpandEmitters == null) {
<             return newXpandEmitter (templateFQN);
<         }
<         TextEmitter result = myCachedXpandEmitters.get (templateFQN);
<         if (result == null) {
<             result = newXpandEmitter (templateFQN);
<             myCachedXpandEmitters.put (templateFQN, result);
<         }
<         return result;
---
>     private BinaryEmitter newGIFEmitterAdapter (String relativePath) throws UnexpectedBehaviourException {
>         return new JETGIFEmitterAdapter (new org.eclipse.emf.codegen.util.GIFEmitter (checkTemplateLocation (relativePath)));
584,585c734,739
<     private TextEmitter newXpandEmitter (String templateFQN) {
<         return new XpandTextEmitter (myResourceManager, templateFQN, getClass ().getClassLoader ());
---
>     private String checkTemplateLocation (String relativePath) throws UnexpectedBehaviourException {
>         String templateLocation = JETCompiler.find (getTemplatePath (), relativePath);
>         if (templateLocation == null) {
>             throw new UnexpectedBehaviourException ("Template " + relativePath + " not found");
>         }
>         return templateLocation;
588d741
<     private HashMap < String, TextEmitter > myCachedXpandEmitters;
