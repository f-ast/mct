72a73,74
> import org.eclipse.gmf.codegen.gmfgen.ModelElementSelector;
> 
82a85,86
> import org.eclipse.gmf.codegen.gmfgen.ValueExpression;
> 
104a109,110
>     private EClass valueExpressionEClass = null;
>     private EClass modelElementSelectorEClass = null;
246a253,256
>     public EReference getGenBaseElement_ModelElementSelector () {
>         return (EReference) genBaseElementEClass.getEStructuralFeatures ().get (3);
>     }
> 
450a461,476
>     public EClass getValueExpression () {
>         return valueExpressionEClass;
>     }
> 
>     public EAttribute getValueExpression_Body () {
>         return (EAttribute) valueExpressionEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getValueExpression_Language () {
>         return (EAttribute) valueExpressionEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EClass getModelElementSelector () {
>         return modelElementSelectorEClass;
>     }
> 
604a631
>         createEReference (genBaseElementEClass, GEN_BASE_ELEMENT__MODEL_ELEMENT_SELECTOR);
655a683,686
>         valueExpressionEClass = createEClass (VALUE_EXPRESSION);
>         createEAttribute (valueExpressionEClass, VALUE_EXPRESSION__BODY);
>         createEAttribute (valueExpressionEClass, VALUE_EXPRESSION__LANGUAGE);
>         modelElementSelectorEClass = createEClass (MODEL_ELEMENT_SELECTOR);
711a743
>         modelElementSelectorEClass.getESuperTypes ().add (this.getValueExpression ());
754a787
>         initEReference (getGenBaseElement_ModelElementSelector (), this.getModelElementSelector (), null, "modelElementSelector", null, 0, 1, GenBaseElement.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, ! IS_UNIQUE, ! IS_DERIVED, ! IS_ORDERED);
809a843,846
>         initEClass (valueExpressionEClass, ValueExpression.class, "ValueExpression", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getValueExpression_Body (), ecorePackage.getEString (), "body", null, 1, 1, ValueExpression.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getValueExpression_Language (), ecorePackage.getEString (), "language", "ocl", 0, 1, ValueExpression.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (modelElementSelectorEClass, ModelElementSelector.class, "ModelElementSelector", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
