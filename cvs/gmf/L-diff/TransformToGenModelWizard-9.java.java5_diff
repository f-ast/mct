48,52d47
<     private static final String PAGE_ID_GMFGEN = "gmfgen";
<     private static final String PAGE_ID_GENMODEL = "genmodel";
<     private static final String PAGE_ID_GMFMAP = "gmfmap";
<     private static final String PAGE_ID_GMFMAP_DIAGNOSTIC = "gmfmap_diagnostic";
<     private static final String PAGE_ID_TRANSFORM = "transform";
56c51
<     private MapModelDiagnosticPage mapDiagnosticPage;
---
>     private ModelDiagnosticPage mapDiagnosticPage;
58a54
>     private ModelDiagnosticPage genDiagnosticPage;
67,69c63
<         newFileCreationPage = new GMFGenNewFileCreationPage (PAGE_ID_GMFGEN, mySelection);
<         newFileCreationPage.setTitle (Messages.TransformToGenModelWizard_title_gmfgen);
<         newFileCreationPage.setDescription (Messages.TransformToGenModelWizard_descr_gmfgen);
---
>         newFileCreationPage = new GMFGenNewFileCreationPage (GMFGenNewFileCreationPage.class.getSimpleName (), mySelection);
79,81c73
<         mapModelPage = new MapModelConfigurationPage (PAGE_ID_GMFMAP, rlp, resourceSet);
<         mapModelPage.setTitle (Messages.TransformToGenModelWizard_title_mapmodel);
<         mapModelPage.setDescription (Messages.TransformToGenModelWizard_descr_mapmodel);
---
>         mapModelPage = new MapModelConfigurationPage (MapModelConfigurationPage.class.getSimpleName (), rlp, resourceSet);
85,87c77
<         mapDiagnosticPage = new MapModelDiagnosticPage (PAGE_ID_GMFMAP_DIAGNOSTIC);
<         mapDiagnosticPage.setTitle (Messages.TransformToGenModelWizard_title_mapdiagnostic);
<         mapDiagnosticPage.setDescription (Messages.TransformToGenModelWizard_descr_mapdiagnostic);
---
>         mapDiagnosticPage = new MapModelDiagnosticPage (MapModelDiagnosticPage.class.getSimpleName ());
89,91c79
<         genModelPage = new GenModelConfigurationPage (PAGE_ID_GENMODEL, rlp, resourceSet);
<         genModelPage.setTitle (Messages.TransformToGenModelWizard_title_genmodel);
<         genModelPage.setDescription (Messages.TransformToGenModelWizard_descr_genmodel);
---
>         genModelPage = new GenModelConfigurationPage (GenModelConfigurationPage.class.getSimpleName (), rlp, resourceSet);
95,97c83
<         transformOptionPage = new ViewmapProducerWizardPage (PAGE_ID_TRANSFORM);
<         transformOptionPage.setTitle (Messages.TransformToGenModelWizard_title_options);
<         transformOptionPage.setDescription (Messages.TransformToGenModelWizard_descr_options);
---
>         transformOptionPage = new ViewmapProducerWizardPage (ViewmapProducerWizardPage.class.getSimpleName ());
99a86,92
>         genDiagnosticPage = new GMFGenModelDiagnosticPage (GMFGenModelDiagnosticPage.class.getSimpleName ());
>         addPage (genDiagnosticPage);
>     }
> 
>     private boolean checkGMFGenValidationResult () {
>         Diagnostic diagnostic = getTransformOperation ().getGMFGenValidationResult ();
>         return ! (Diagnostic.ERROR == diagnostic.getSeverity ());
122a116,120
>         } else if (page == transformOptionPage) {
>             if (checkGMFGenValidationResult ()) {
>                 return null;
>             }
>             return genDiagnosticPage;
149a148,151
>         if (getTransformOperation ().getOptions ().getIgnoreGMFGenValidation () && getContainer ().getCurrentPage () == genDiagnosticPage) {
>             saveTransformOptions ();
>             return true;
>         }
166,168c168
<                 setErrorMessage (null);
<                 saveTransformOptions ();
<                 return true;
---
>                 return processGMFGenValidationResult ();
185a186,195
>     private boolean processGMFGenValidationResult () {
>         if (checkGMFGenValidationResult ()) {
>             setErrorMessage (null);
>             saveTransformOptions ();
>             return true;
>         }
>         getContainer ().showPage (genDiagnosticPage);
>         return false;
>     }
> 
