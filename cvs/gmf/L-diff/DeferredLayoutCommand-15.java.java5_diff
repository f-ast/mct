36a37,38
> import org.eclipse.gef.commands.CompoundCommand;
> 
38a41,42
> import org.eclipse.gmf.runtime.common.core.command.ICommand;
> 
52a57,58
> import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
> 
59d64
<     protected Command layoutCmd;
146c151
<         layoutCmd = containerEP.getCommand (request);
---
>         Command layoutCmd = containerEP.getCommand (request);
148c153,155
<             layoutCmd.execute ();
---
>             ICommand optimizedCommand = optimizeCommand (layoutCmd);
>             optimizedCommand.execute (progressMonitor, info);
>             optimizedCommand = null;
152a160,180
>     private ICommand optimizeCommand (Command command) {
>         if (command instanceof ICommandProxy) {
>             ICommand icmd = ((ICommandProxy) command).getICommand ();
>             return icmd;
>         } else {
>             if (command instanceof CompoundCommand) {
>                 CompositeTransactionalCommand transactionalCommand = new CompositeTransactionalCommand (getEditingDomain (), command.getLabel ());
>                 transactionalCommand.setTransactionNestingEnabled (false);
>                 CompoundCommand compound = (CompoundCommand) command;
>                 Iterator commandIter = compound.getCommands ().iterator ();
>                 while (commandIter.hasNext ()) {
>                     Command iteredCommand = (Command) commandIter.next ();
>                     ICommand iteredICommand = optimizeCommand (iteredCommand);
>                     transactionalCommand.compose (iteredICommand);
>                 }
>                 return transactionalCommand;
>             }
>             return new CommandProxy (command);
>         }
>     }
> 
