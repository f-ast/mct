41,42d40
< import org.eclipse.gmf.codegen.templates.lite.editor.EditorGenerator;
< 
53,58d50
< import org.eclipse.gmf.codegen.templates.lite.editor.PluginGenerator;
< 
< import org.eclipse.gmf.codegen.templates.lite.editor.PluginPropertiesGenerator;
< 
< import org.eclipse.gmf.codegen.templates.lite.editor.PluginXML;
< 
102a95,96
> import org.eclipse.gmf.codegen.templates.lite.providers.MetricProviderGenerator;
> 
104a99,100
> import org.eclipse.gmf.codegen.templates.lite.providers.ValidationProviderGenerator;
> 
186a183,184
>         put (tr, "/providers/ValidationProvider.javajet", ValidationProviderGenerator.class);
>         put (tr, "/providers/MetricProvider.javajet", MetricProviderGenerator.class);
198d195
<         put (tr, "/editor/Editor.javajet", EditorGenerator.class);
205d201
<         put (tr, "/editor/Plugin.javajet", PluginGenerator.class);
210,211d205
<         put (tr, "/editor/plugin.xmljet", PluginXML.class);
<         put (tr, "/editor/plugin.propertiesjet", PluginPropertiesGenerator.class);
264a259,266
>     public TextEmitter getValidationProviderGenerator () throws UnexpectedBehaviourException {
>         return retrieve (ValidationProviderGenerator.class);
>     }
> 
>     public TextEmitter getMetricProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (MetricProviderGenerator.class);
>     }
> 
306c308
<         return retrieve (PluginGenerator.class);
---
>         return retrieveXpand ("xpt::editor::Plugin::Plugin");
318c320
<         return retrieve (EditorGenerator.class);
---
>         return retrieveXpand ("xpt::editor::Editor::Editor");
350c352
<         return retrieve (PluginXML.class);
---
>         return retrieveXpand ("xpt::plugin::plugin");
362c364
<         return retrieve (PluginPropertiesGenerator.class);
---
>         return retrieveXpand ("xpt::properties::properties");
500a503,506
>     public TextEmitter getMarkerNavigationProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieveXpand ("xpt::providers::MarkerNavigationProvider::MarkerNavigationProvider");
>     }
> 
504c510
<             result = new XpandTextEmitter (myResourceManager, templateFQN, getClass ().getClassLoader ());
---
>             result = new AutomaticImportManagerXpandTextEmitter (myResourceManager, templateFQN, getClass ().getClassLoader ());
510a517,524
>     private static class AutomaticImportManagerXpandTextEmitter extends XpandTextEmitter implements IAutomaticImportManager {
> 
>         public AutomaticImportManagerXpandTextEmitter (ResourceManager manager, String templateFQN, ClassLoader context) {
>             super (manager, templateFQN, context);
>         }
> 
>     }
> 
