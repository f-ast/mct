23,32d22
< import org.apache.batik.transcoder.Transcoder;
< 
< import org.apache.batik.transcoder.TranscoderException;
< 
< import org.apache.batik.transcoder.TranscoderInput;
< 
< import org.apache.batik.transcoder.TranscoderOutput;
< 
< import org.apache.batik.transcoder.image.ImageTranscoder;
< 
43,44d32
< import org.eclipse.gmf.internal.runtime.lite.svg.SimpleImageTranscoder;
< 
46a35,36
> import org.eclipse.gmf.internal.runtime.lite.svg.SimpleImageTranscoder;
> 
67,68c57
<     private Document document;
<     private boolean failedToLoadDocument;
---
>     private boolean failedToLoadDocument, specifyCanvasWidth = true, specifyCanvasHeight = true;
70d58
<     private Rectangle2D aoi;
82c70
<         document = null;
---
>         transcoder = null;
98c86,87
<             document = factory.createDocument (uri);
---
>             Document document = factory.createDocument (uri);
>             transcoder = new SimpleImageTranscoder (document);
100d88
<             transcoder = new SimpleImageTranscoder ();
110c98
<         if (document == null) {
---
>         if (transcoder == null) {
113c101
<         return document;
---
>         return transcoder == null ? null : transcoder.getDocument ();
139,140c127
<         Document document = getDocument ();
<         if (document == null || transcoder == null) {
---
>         if (getDocument () == null || getDocument () != element.getOwnerDocument ()) {
144c131
<         BridgeContext ctx = transcoder.initCSSEngine (document);
---
>         BridgeContext ctx = transcoder.initCSSEngine ();
155,168d141
<     private void renderDocument (Transcoder transcoder, Document document) {
<         try {
<             Rectangle r = getClientArea ();
<             transcoder.addTranscodingHint (ImageTranscoder.KEY_WIDTH, new Float (r.width));
<             transcoder.addTranscodingHint (ImageTranscoder.KEY_HEIGHT, new Float (r.height));
<             if (aoi != null) {
<                 transcoder.addTranscodingHint (ImageTranscoder.KEY_AOI, aoi);
<             }
<             transcoder.transcode (new TranscoderInput (document), new TranscoderOutput ());
<         } catch (TranscoderException e) {
<             Activator.logError ("Error rendering SVG image", e);
<         }
<     }
< 
178c151,152
<             renderDocument (transcoder, document);
---
>             Rectangle r = getClientArea ();
>             transcoder.setCanvasSize (specifyCanvasWidth ? r.width : - 1, specifyCanvasHeight ? r.height : - 1);
182d155
<                 Rectangle r = getClientArea ();
215,220c188,189
<         if (aoi == null) {
<             return null;
<         }
<         Rectangle2D result = new Rectangle2D.Float ();
<         result.setRect (aoi);
<         return result;
---
>         getDocument ();
>         return transcoder == null ? null : transcoder.getCanvasAreaOfInterest ();
224,226c193,221
<         if (value == null) {
<             aoi = null;
<             return;
---
>         getDocument ();
>         if (transcoder != null) {
>             transcoder.setCanvasAreaOfInterest (value);
>         }
>         repaint ();
>     }
> 
>     public final boolean isSpecifyCanvasWidth () {
>         return specifyCanvasWidth;
>     }
> 
>     public void setSpecifyCanvasWidth (boolean specifyCanvasWidth) {
>         this.specifyCanvasWidth = specifyCanvasWidth;
>         contentChanged ();
>     }
> 
>     public final boolean isSpecifyCanvasHeight () {
>         return specifyCanvasHeight;
>     }
> 
>     public void setSpecifyCanvasHeight (boolean specifyCanvasHeight) {
>         this.specifyCanvasHeight = specifyCanvasHeight;
>         contentChanged ();
>     }
> 
>     public void contentChanged () {
>         getDocument ();
>         if (transcoder != null) {
>             transcoder.contentChanged ();
228,229d222
<         aoi = new Rectangle2D.Float ();
<         aoi.setRect (value);
