20a21,22
> import org.eclipse.emf.ecore.EClass;
> 
156,157c158
<         newView.setVisible (oldView.isVisible ());
<         copyViewStyles (oldView, newView);
---
>         copyViewAppearance (oldView, newView, new ArrayList ());
162a164,178
>     public void copyViewAppearance (View oldView, View newView, final List excludeStyles) {
>         newView.setVisible (oldView.isVisible ());
>         copyViewStyles (oldView, newView, excludeStyles);
>         for (Iterator j = new ArrayList (oldView.getPersistedChildren ()).iterator ();
>         j.hasNext ();) {
>             Node oldChildNode = (Node) j.next ();
>             if (oldView.getElement () == oldChildNode.getElement () && oldChildNode.getType () != null) {
>                 Node newChildNode = (Node) ViewUtil.getChildBySemanticHint (newView, oldChildNode.getType ());
>                 if (newChildNode != null) {
>                     copyViewAppearance (oldChildNode, newChildNode, excludeStyles);
>                 }
>             }
>         }
>     }
> 
163a180,183
>         copyViewStyles (oldView, newView, new ArrayList ());
>     }
> 
>     protected void copyViewStyles (View oldView, View newView, final List excludeStyles) {
171a192,194
>                 EClass containingStyleEClass = feature.getEContainingClass ();
>                 if (excludeStyles.contains (containingStyleEClass)) continue;
> 
