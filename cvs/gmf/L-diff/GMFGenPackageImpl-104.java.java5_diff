399a400,407
>     public EAttribute getBatchValidation_MetricProviderClassName () {
>         return (EAttribute) batchValidationEClass.getEStructuralFeatures ().get (5);
>     }
> 
>     public EAttribute getBatchValidation_MetricProviderPriority () {
>         return (EAttribute) batchValidationEClass.getEStructuralFeatures ().get (6);
>     }
> 
1309c1317,1325
<         return (EReference) genMetricRuleEClass.getEStructuralFeatures ().get (3);
---
>         return (EReference) genMetricRuleEClass.getEStructuralFeatures ().get (5);
>     }
> 
>     public EAttribute getGenMetricRule_LowLimit () {
>         return (EAttribute) genMetricRuleEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EAttribute getGenMetricRule_HighLimit () {
>         return (EAttribute) genMetricRuleEClass.getEStructuralFeatures ().get (4);
1385a1402,1403
>         createEAttribute (batchValidationEClass, BATCH_VALIDATION__METRIC_PROVIDER_CLASS_NAME);
>         createEAttribute (batchValidationEClass, BATCH_VALIDATION__METRIC_PROVIDER_PRIORITY);
1612a1631,1632
>         createEAttribute (genMetricRuleEClass, GEN_METRIC_RULE__LOW_LIMIT);
>         createEAttribute (genMetricRuleEClass, GEN_METRIC_RULE__HIGH_LIMIT);
1736a1757,1758
>         initEAttribute (getBatchValidation_MetricProviderClassName (), ecorePackage.getEString (), "metricProviderClassName", null, 0, 1, BatchValidation.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getBatchValidation_MetricProviderPriority (), this.getProviderPriority (), "metricProviderPriority", null, 0, 1, BatchValidation.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
1739a1762,1763
>         addEOperation (batchValidationEClass, ecorePackage.getEString (), "getMetricProviderQualifiedClassName", 0, 1);
>         addEOperation (batchValidationEClass, ecorePackage.getEString (), "getMetricViewID", 0, 1);
2046a2071,2072
>         initEAttribute (getGenMetricRule_LowLimit (), ecorePackage.getEDoubleObject (), "lowLimit", null, 0, 1, GenMetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGenMetricRule_HighLimit (), ecorePackage.getEDoubleObject (), "highLimit", null, 0, 1, GenMetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
2101a2128
>         addAnnotation (genMetricRuleEClass, source, new String [] {"ocl", "not lowLimit.oclIsUndefined() and not highLimit.oclIsUndefined()  implies lowLimit < highLimit", "description", "Metric value \'lowLimit\' must be smaller then \'highLimit\'"});
