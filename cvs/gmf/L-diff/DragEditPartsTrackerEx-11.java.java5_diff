8a9,10
> import org.eclipse.draw2d.PositionConstants;
> 
10a13,14
> import org.eclipse.draw2d.geometry.Dimension;
> 
34a39,40
> import org.eclipse.gmf.runtime.diagram.ui.internal.ruler.SnapToHelperUtil;
> 
40a47,48
> import org.eclipse.swt.events.KeyEvent;
> 
186a195,230
>     protected void snapPoint (ChangeBoundsRequest request) {
>         Point moveDelta = request.getMoveDelta ();
>         if (getState () == STATE_ACCESSIBLE_DRAG_IN_PROGRESS) {
>             int restrictedDirection = 0;
>             if (moveDelta.x > 0) {
>                 restrictedDirection = restrictedDirection | PositionConstants.EAST;
>             } else if (moveDelta.x < 0) {
>                 restrictedDirection = restrictedDirection | PositionConstants.WEST;
>             }
> 
>             if (moveDelta.y > 0) {
>                 restrictedDirection = restrictedDirection | PositionConstants.SOUTH;
>             } else if (moveDelta.y < 0) {
>                 restrictedDirection = restrictedDirection | PositionConstants.NORTH;
>             }
> 
>             request.getExtendedData ().put (SnapToHelperUtil.RESTRICTED_DIRECTIONS, restrictedDirection);
>         }
>         super.snapPoint (request);
>     }
> 
>     protected boolean handleKeyDown (KeyEvent e) {
>         if (acceptArrowKey (e)) {
>             if (isInState (STATE_INITIAL)) {
>                 IGraphicalEditPart ep = (IGraphicalEditPart) getSourceEditPart ();
>                 if (ep != null) {
>                     Point location = ep.getFigure ().getBounds ().getCenter ();
>                     ep.getFigure ().translateToAbsolute (location);
>                     placeMouseInViewer (location);
>                     getCurrentInput ().setMouseLocation (location.x, location.y);
>                 }
>             }
>         }
>         return super.handleKeyDown (e);
>     }
> 
