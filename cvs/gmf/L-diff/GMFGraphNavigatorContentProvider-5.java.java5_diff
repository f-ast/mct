28a29,32
> import org.eclipse.gmf.graphdef.editor.edit.parts.ChildAccessEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentAccessorEditPart;
> 
34a39,40
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelAccessorEditPart;
> 
36a43,44
> import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;
> 
38a47,48
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;
> 
46a57,58
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;
> 
50a63,64
> import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;
> 
54a69,70
> import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;
> 
229a246,251
>                     connectedViews = getDiagramLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
>                     links.addChildren (createNavigatorItems (connectedViews, links, false));
>                     connectedViews = getDiagramLinksByType (Collections.singleton (view), CompartmentAccessorEditPart.VISUAL_ID);
>                     links.addChildren (createNavigatorItems (connectedViews, links, false));
>                     connectedViews = getDiagramLinksByType (Collections.singleton (view), DiagramLabelAccessorEditPart.VISUAL_ID);
>                     links.addChildren (createNavigatorItems (connectedViews, links, false));
239,240c261,264
<                     GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Compartment_2001_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement);
<                     Collection connectedViews = getOutgoingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Compartment_2005_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getOutgoingLinksByType (Collections.singleton (view), CompartmentAccessorEditPart.VISUAL_ID);
>                     outgoinglinks.addChildren (createNavigatorItems (connectedViews, outgoinglinks, true));
>                     connectedViews = getOutgoingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
249c273
<                     GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Node_2002_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Node_2006_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement);
259c283
<                     GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Connection_2003_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Connection_2007_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement);
270c294,297
<                     connectedViews = getChildrenByType (connectedViews, RectangleEditPart.VISUAL_ID);
---
>                     connectedViews = getChildrenByType (connectedViews, FigureDescriptorEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), FigureGalleryFiguresEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle3EditPart.VISUAL_ID);
273c300
<                     connectedViews = getChildrenByType (connectedViews, Ellipse2EditPart.VISUAL_ID);
---
>                     connectedViews = getChildrenByType (connectedViews, Ellipse3EditPart.VISUAL_ID);
276c303
<                     connectedViews = getChildrenByType (connectedViews, RoundedRectangle2EditPart.VISUAL_ID);
---
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangle3EditPart.VISUAL_ID);
279c306
<                     connectedViews = getChildrenByType (connectedViews, Polyline2EditPart.VISUAL_ID);
---
>                     connectedViews = getChildrenByType (connectedViews, Polyline3EditPart.VISUAL_ID);
281a309,332
>                 } case FigureDescriptorEditPart.VISUAL_ID :
>                 {
>                     Collection result = new ArrayList ();
>                     GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_FigureDescriptor_3009_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement);
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_FigureDescriptor_3009_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getChildrenByType (Collections.singleton (view), RectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Ellipse2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Polyline2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getOutgoingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
>                     outgoinglinks.addChildren (createNavigatorItems (connectedViews, outgoinglinks, true));
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
>                     incominglinks.addChildren (createNavigatorItems (connectedViews, incominglinks, true));
>                     if (! outgoinglinks.isEmpty ()) {
>                         result.add (outgoinglinks);
>                     }
>                     if (! incominglinks.isEmpty ()) {
>                         result.add (incominglinks);
>                     }
>                     return result.toArray ();
285c336
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Rectangle_3001_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Rectangle_3010_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
399c450
<                     connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
408c459
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Rectangle_3002_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Rectangle_3011_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
451c502
<                     connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
460c511
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Ellipse_3003_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Ellipse_3012_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
503c554
<                     connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
512c563
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_RoundedRectangle_3004_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_RoundedRectangle_3013_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
555c606
<                     connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
564,565c615,616
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Polyline_3005_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
<                     Collection connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Polyline_3014_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
574c625
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Ellipse_3006_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Ellipse_3015_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
688c739
<                     connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
697c748
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_RoundedRectangle_3007_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_RoundedRectangle_3016_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
811c862
<                     connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
820,821c871,872
<                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Polyline_3008_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
<                     Collection connectedViews = getIncomingLinksByType (Collections.singleton (view), DiagramElementFigureEditPart.VISUAL_ID);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Polyline_3017_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
827c878,1124
<                 } case DiagramElementFigureEditPart.VISUAL_ID :
---
>                 } case Rectangle3EditPart.VISUAL_ID :
>                 {
>                     Collection result = new ArrayList ();
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Rectangle_3018_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
>                     incominglinks.addChildren (createNavigatorItems (connectedViews, incominglinks, true));
>                     if (! incominglinks.isEmpty ()) {
>                         result.add (incominglinks);
>                     }
>                     return result.toArray ();
>                 } case Ellipse3EditPart.VISUAL_ID :
>                 {
>                     Collection result = new ArrayList ();
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Ellipse_3019_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
>                     incominglinks.addChildren (createNavigatorItems (connectedViews, incominglinks, true));
>                     if (! incominglinks.isEmpty ()) {
>                         result.add (incominglinks);
>                     }
>                     return result.toArray ();
>                 } case RoundedRectangle3EditPart.VISUAL_ID :
830,831c1127,1261
<                     GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_DiagramElementFigure_4001_source, "icons/linkSourceNavigatorGroup.gif", parentElement);
<                     GMFGraphNavigatorGroup target = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_DiagramElementFigure_4001_target, "icons/linkTargetNavigatorGroup.gif", parentElement);
---
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_RoundedRectangle_3020_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, Rectangle2EditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, EllipseEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), RoundedRectangleEditPart.VISUAL_ID);
>                     connectedViews = getChildrenByType (connectedViews, PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getChildrenByType (Collections.singleton (view), PolylineEditPart.VISUAL_ID);
>                     result.addAll (createNavigatorItems (connectedViews, parentElement, false));
>                     connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
>                     incominglinks.addChildren (createNavigatorItems (connectedViews, incominglinks, true));
>                     if (! incominglinks.isEmpty ()) {
>                         result.add (incominglinks);
>                     }
>                     return result.toArray ();
>                 } case Polyline3EditPart.VISUAL_ID :
>                 {
>                     Collection result = new ArrayList ();
>                     GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_Polyline_3021_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getIncomingLinksByType (Collections.singleton (view), ChildAccessEditPart.VISUAL_ID);
>                     incominglinks.addChildren (createNavigatorItems (connectedViews, incominglinks, true));
>                     if (! incominglinks.isEmpty ()) {
>                         result.add (incominglinks);
>                     }
>                     return result.toArray ();
>                 } case ChildAccessEditPart.VISUAL_ID :
>                 {
>                     Collection result = new ArrayList ();
>                     GMFGraphNavigatorGroup target = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_ChildAccess_4002_target, "icons/linkTargetNavigatorGroup.gif", parentElement);
>                     GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_ChildAccess_4002_source, "icons/linkSourceNavigatorGroup.gif", parentElement);
847a1278,1311
>                     connectedViews = getLinksTargetByType (Collections.singleton (view), Rectangle3EditPart.VISUAL_ID);
>                     target.addChildren (createNavigatorItems (connectedViews, target, true));
>                     connectedViews = getLinksTargetByType (Collections.singleton (view), Ellipse3EditPart.VISUAL_ID);
>                     target.addChildren (createNavigatorItems (connectedViews, target, true));
>                     connectedViews = getLinksTargetByType (Collections.singleton (view), RoundedRectangle3EditPart.VISUAL_ID);
>                     target.addChildren (createNavigatorItems (connectedViews, target, true));
>                     connectedViews = getLinksTargetByType (Collections.singleton (view), Polyline3EditPart.VISUAL_ID);
>                     target.addChildren (createNavigatorItems (connectedViews, target, true));
>                     connectedViews = getLinksSourceByType (Collections.singleton (view), FigureDescriptorEditPart.VISUAL_ID);
>                     source.addChildren (createNavigatorItems (connectedViews, source, true));
>                     if (! target.isEmpty ()) {
>                         result.add (target);
>                     }
>                     if (! source.isEmpty ()) {
>                         result.add (source);
>                     }
>                     return result.toArray ();
>                 } case CompartmentAccessorEditPart.VISUAL_ID :
>                 {
>                     Collection result = new ArrayList ();
>                     GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_CompartmentAccessor_4003_source, "icons/linkSourceNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getLinksSourceByType (Collections.singleton (view), CompartmentEditPart.VISUAL_ID);
>                     source.addChildren (createNavigatorItems (connectedViews, source, true));
>                     if (! source.isEmpty ()) {
>                         result.add (source);
>                     }
>                     return result.toArray ();
>                 } case DiagramElementFigureEditPart.VISUAL_ID :
>                 {
>                     Collection result = new ArrayList ();
>                     GMFGraphNavigatorGroup target = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_DiagramElementFigure_4005_target, "icons/linkTargetNavigatorGroup.gif", parentElement);
>                     GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup (Messages.NavigatorGroupName_DiagramElementFigure_4005_source, "icons/linkSourceNavigatorGroup.gif", parentElement);
>                     Collection connectedViews = getLinksTargetByType (Collections.singleton (view), FigureDescriptorEditPart.VISUAL_ID);
>                     target.addChildren (createNavigatorItems (connectedViews, target, true));
854,856d1317
<                     if (! source.isEmpty ()) {
<                         result.add (source);
<                     }
859a1321,1323
>                     if (! source.isEmpty ()) {
>                         result.add (source);
>                     }
