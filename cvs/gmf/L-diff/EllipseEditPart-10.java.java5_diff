240c240,241
<             AbstractEMFOperation setSizeOperation = new AbstractEMFOperation (getEditingDomain (), "Synchronizing view size with the model", Collections.singletonMap (Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) {
---
>             try {
>                 new AbstractEMFOperation (getEditingDomain (), "Synchronizing view size with the model", Collections.singletonMap (Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) {
252,254c253
<             ;
<             try {
<                 setSizeOperation.execute (new NullProgressMonitor (), null);
---
>                 .execute (new NullProgressMonitor (), null);
261c260,264
<             public void notifyChanged (Notification notification) {
---
>             public void notifyChanged (final Notification notification) {
>                 try {
>                     new AbstractEMFOperation (getEditingDomain (), "Synchronizing model size with the view", Collections.singletonMap (Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) {
> 
>                         protected IStatus doExecute (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
273,283c276,286
<                 int x = getMapMode ().LPtoDP (bounds.getWidth ());
<                 int y = getMapMode ().LPtoDP (bounds.getHeight ());
<                 int width = getMapMode ().LPtoDP (bounds.getX ());
<                 int height = getMapMode ().LPtoDP (bounds.getY ());
<                 if (dim.getDx () != x || dim.getDy () != y) {
<                     dim.setDx (x);
<                     dim.setDy (y);
<                 }
<                 if (location.getX () != width || location.getY () != height) {
<                     location.setX (width);
<                     location.setY (height);
---
>                             int x = getMapMode ().LPtoDP (bounds.getX ());
>                             int y = getMapMode ().LPtoDP (bounds.getY ());
>                             int width = getMapMode ().LPtoDP (bounds.getWidth ());
>                             int height = getMapMode ().LPtoDP (bounds.getHeight ());
>                             if (location.getX () != x || location.getY () != y) {
>                                 location.setX (x);
>                                 location.setY (y);
>                             }
>                             if (dim.getDx () != width || dim.getDy () != height) {
>                                 dim.setDx (width);
>                                 dim.setDy (height);
311a315,323
>                             return Status.OK_STATUS;
>                         }
> 
>                     }
> 
>                     .execute (new NullProgressMonitor (), null);
>                 } catch (ExecutionException e) {
>                     GMFGraphDiagramEditorPlugin.getInstance ().logError ("Unable to synchronize model size with the view", e);
>                 }
383c395,399
<             public void notifyChanged (Notification notification) {
---
>             public void notifyChanged (final Notification notification) {
>                 try {
>                     new AbstractEMFOperation (getEditingDomain (), "Synchronizing model size with the view", Collections.singletonMap (Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) {
> 
>                         protected IStatus doExecute (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
418a435,443
>                             return Status.OK_STATUS;
>                         }
> 
>                     }
> 
>                     .execute (new NullProgressMonitor (), null);
>                 } catch (ExecutionException e) {
>                     GMFGraphDiagramEditorPlugin.getInstance ().logError ("Unable to synchronize model size with the view", e);
>                 }
