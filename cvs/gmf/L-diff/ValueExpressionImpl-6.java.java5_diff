1c1
< package org.eclipse.gmf.mappings.impl;
---
> package org.eclipse.gmf.codegen.gmfgen.impl;
11c11
< import org.eclipse.gmf.mappings.GMFMapPackage;
---
> import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
13c13
< import org.eclipse.gmf.mappings.Language;
---
> import org.eclipse.gmf.codegen.gmfgen.GenLanguage;
15c15,17
< import org.eclipse.gmf.mappings.ValueExpression;
---
> import org.eclipse.gmf.codegen.gmfgen.ValueExpression;
> 
> import org.eclipse.gmf.internal.common.codegen.Conversions;
20,21c22,23
<     protected static final Language LANGUAGE_EDEFAULT = Language.OCL_LITERAL;
<     protected Language language = LANGUAGE_EDEFAULT;
---
>     protected static final GenLanguage LANGUAGE_EDEFAULT = GenLanguage.OCL_LITERAL;
>     protected GenLanguage language = LANGUAGE_EDEFAULT;
29c31,35
<         return GMFMapPackage.eINSTANCE.getValueExpression ();
---
>         return GMFGenPackage.eINSTANCE.getValueExpression ();
>     }
> 
>     public boolean isOCLExpression () {
>         return GenLanguage.OCL_LITERAL.equals (getLanguage ());
39c45
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.VALUE_EXPRESSION__BODY, oldBody, body));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.VALUE_EXPRESSION__BODY, oldBody, body));
43c49
<     public Language getLanguage () {
---
>     public GenLanguage getLanguage () {
47,48c53,54
<     public void setLanguage (Language newLanguage) {
<         Language oldLanguage = language;
---
>     public void setLanguage (GenLanguage newLanguage) {
>         GenLanguage oldLanguage = language;
50c56
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.VALUE_EXPRESSION__LANGUAGE, oldLanguage, language));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.VALUE_EXPRESSION__LANGUAGE, oldLanguage, language));
55c61
<         Language langEnum = getLanguage ();
---
>         GenLanguage langEnum = getLanguage ();
58a65,68
>     public String getBodyString () {
>         return Conversions.toStringLiteral (getBody ());
>     }
> 
61c71
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
63c73
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
65c75
<             case GMFMapPackage.VALUE_EXPRESSION__LANG_NAME :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANG_NAME :
73c83
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
76,77c86,87
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
<                 setLanguage ((Language) newValue);
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
>                 setLanguage ((GenLanguage) newValue);
85c95
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
88c98
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
97c107
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
99c109
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
101c111
<             case GMFMapPackage.VALUE_EXPRESSION__LANG_NAME :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANG_NAME :
