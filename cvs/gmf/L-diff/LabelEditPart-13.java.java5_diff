24a25,26
> import org.eclipse.emf.transaction.RunnableWithResult;
> 
34a37,38
> import org.eclipse.gef.editparts.AbstractEditPart;
> 
39c43,45
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
---
> import org.eclipse.gmf.runtime.common.core.util.Log;
> 
> import org.eclipse.gmf.runtime.common.core.util.Trace;
48a55,60
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
> 
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
> 
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
> 
65,66d76
< import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
< 
100c110,111
<             semanticHint = ((String) MEditingDomainGetter.getMEditingDomain ((View) getModel ()).runAsRead (new MRunnable () {
---
>             try {
>                 semanticHint = ((String) getEditingDomain ().runExclusive (new RunnableWithResult.Impl () {
102,103c113,114
<                 public Object run () {
<                     return ((View) getModel ()).getType ();
---
>                     public void run () {
>                         setResult (((View) getModel ()).getType ());
108a120,123
>             } catch (InterruptedException e) {
>                 Trace.catching (DiagramUIPlugin.getInstance (), DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass (), "getSemanticType", e);
>                 Log.error (DiagramUIPlugin.getInstance (), DiagramUIStatusCodes.IGNORED_EXCEPTION_WARNING, "getSemanticType", e);
>             }
