2a3,4
> import java.util.Arrays;
> 
9,16d10
< import org.eclipse.gmf.common.codegen.ImportAssistant;
< 
< import org.eclipse.gmf.gmfgraph.BorderLayout;
< 
< import org.eclipse.gmf.gmfgraph.CustomClass;
< 
< import org.eclipse.gmf.gmfgraph.Ellipse;
< 
19c13
< import org.eclipse.gmf.gmfgraph.FlowLayout;
---
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
27,34d20
< import org.eclipse.gmf.gmfgraph.LabeledContainer;
< 
< import org.eclipse.gmf.gmfgraph.Polygon;
< 
< import org.eclipse.gmf.gmfgraph.PolygonDecoration;
< 
< import org.eclipse.gmf.gmfgraph.Polyline;
< 
37,49c23
< import org.eclipse.gmf.gmfgraph.PolylineDecoration;
< 
< import org.eclipse.gmf.gmfgraph.Rectangle;
< 
< import org.eclipse.gmf.gmfgraph.RoundedRectangle;
< 
< import org.eclipse.gmf.gmfgraph.StackLayout;
< 
< import org.eclipse.gmf.gmfgraph.XYLayout;
< 
< import org.eclipse.gmf.gmfgraph.XYLayoutData;
< 
< public class RuntimeFQNSwitch extends GMFGraphSwitch implements FigureQualifiedNameSwitch {
---
> public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
51,64c25,26
<     public String get (EObject gmfgraphObject) {
<         return (String) doSwitch (gmfgraphObject);
<     }
< 
<     public String get (EObject gmfgraphObject, ImportAssistant importManager) {
<         return importManager.getImportedName (get (gmfgraphObject));
<     }
< 
<     public String [] getDependencies (FigureGallery gallery) {
<         return (String []) caseFigureGallery (gallery);
<     }
< 
<     public Object caseFigureGallery (FigureGallery gallery) {
<         final String pluginBasicDraw2d = "org.eclipse.draw2d";
---
>     protected void collectDependencies (FigureGallery gallery, UniqueEList result) {
>         super.collectDependencies (gallery, result);
66,71c28,29
<         UniqueEList rv = new UniqueEList ();
<         if (usesDraw2dFigures (gallery)) {
<             rv.add (pluginBasicDraw2d);
<         }
<         if (usesPolylineConnections (gallery)) {
<             rv.add (pluginRuntimeDraw2d);
---
>         if (usesEClassWithID (gallery, new int [] {GMFGraphPackage.POLYLINE_CONNECTION, GMFGraphPackage.LABEL})) {
>             result.add (pluginRuntimeDraw2d);
73,76d30
<         if (gallery.getImplementationBundle () != null) {
<             rv.add (gallery.getImplementationBundle ());
<         }
<         return rv.toArray (new String [rv.size ()]);
79c33,34
<     private boolean usesPolylineConnections (FigureGallery gallery) {
---
>     private boolean usesEClassWithID (FigureGallery gallery, int [] ids) {
>         Arrays.sort (ids);
82c37,39
<             if (it.next () instanceof PolylineConnection) {
---
>             Object next = it.next ();
>             assert next instanceof EObject;
>             if (Arrays.binarySearch (ids, ((EObject) next).eClass ().getClassifierID ()) >= 0) {
89,96d45
<     private boolean usesDraw2dFigures (FigureGallery gallery) {
<         return ! gallery.getFigures ().isEmpty ();
<     }
< 
<     public Object caseCustomClass (CustomClass object) {
<         return object.getQualifiedClassName ();
<     }
< 
105,122c54,55
<     public Object caseFlowLayout (FlowLayout object) {
<         return object.isForceSingleLine () ? "org.eclipse.draw2d.ToolbarLayout" : "org.eclipse.draw2d.FlowLayout";
<     }
< 
<     public Object caseXYLayout (XYLayout object) {
<         return "org.eclipse.draw2d.XYLayout";
<     }
< 
<     public Object caseXYLayoutData (XYLayoutData object) {
<         return "org.eclipse.draw2d.geometry.Rectangle";
<     }
< 
<     public Object caseStackLayout (StackLayout object) {
<         return "org.eclipse.draw2d.StackLayout";
<     }
< 
<     public Object caseBorderLayout (BorderLayout object) {
<         return "org.eclipse.draw2d.BorderLayout";
---
>     public Object casePolylineConnection (PolylineConnection object) {
>         return "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx";
126,162c59
<         return "org.eclipse.draw2d.Label";
<     }
< 
<     public Object caseLabeledContainer (LabeledContainer object) {
<         return "org.eclipse.draw2d.LabeledContainer";
<     }
< 
<     public Object caseRectangle (Rectangle object) {
<         return "org.eclipse.draw2d.RectangleFigure";
<     }
< 
<     public Object caseRoundedRectangle (RoundedRectangle object) {
<         return "org.eclipse.draw2d.RoundedRectangle";
<     }
< 
<     public Object caseEllipse (Ellipse object) {
<         return "org.eclipse.draw2d.Ellipse";
<     }
< 
<     public Object casePolygon (Polygon object) {
<         return "org.eclipse.draw2d.Polygon";
<     }
< 
<     public Object casePolygonDecoration (PolygonDecoration object) {
<         return "org.eclipse.draw2d.PolygonDecoration";
<     }
< 
<     public Object casePolyline (Polyline object) {
<         return "org.eclipse.draw2d.Polyline";
<     }
< 
<     public Object casePolylineDecoration (PolylineDecoration object) {
<         return "org.eclipse.draw2d.PolylineDecoration";
<     }
< 
<     public Object casePolylineConnection (PolylineConnection object) {
<         return "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx";
---
>         return "org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel";
