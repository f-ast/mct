42a43,44
> import org.eclipse.gmf.gmfgraph.Point;
> 
80a83,84
> import org.eclipse.gmf.graphdef.editor.edit.parts.PointEditPart;
> 
120a125,126
>             case PolylineEditPart.VISUAL_ID :
>                 return getPolyline_3014SemanticChildren (view);
124a131,132
>             case Polyline2EditPart.VISUAL_ID :
>                 return getPolyline_3017SemanticChildren (view);
130a139,140
>             case Polyline3EditPart.VISUAL_ID :
>                 return getPolyline_3021SemanticChildren (view);
282a293,310
>     public static List getPolyline_3014SemanticChildren (View view) {
>         if (! view.isSetElement ()) {
>             return Collections.EMPTY_LIST;
>         }
>         Polyline modelElement = (Polyline) view.getElement ();
>         List result = new LinkedList ();
>         for (Iterator it = modelElement.getTemplate ().iterator ();
>         it.hasNext ();) {
>             Point childElement = (Point) it.next ();
>             int visualID = GMFGraphVisualIDRegistry.getNodeVisualID (view, childElement);
>             if (visualID == PointEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
>         }
>         return result;
>     }
> 
342a371,388
>     public static List getPolyline_3017SemanticChildren (View view) {
>         if (! view.isSetElement ()) {
>             return Collections.EMPTY_LIST;
>         }
>         Polyline modelElement = (Polyline) view.getElement ();
>         List result = new LinkedList ();
>         for (Iterator it = modelElement.getTemplate ().iterator ();
>         it.hasNext ();) {
>             Point childElement = (Point) it.next ();
>             int visualID = GMFGraphVisualIDRegistry.getNodeVisualID (view, childElement);
>             if (visualID == PointEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
>         }
>         return result;
>     }
> 
432a479,496
>     public static List getPolyline_3021SemanticChildren (View view) {
>         if (! view.isSetElement ()) {
>             return Collections.EMPTY_LIST;
>         }
>         Polyline modelElement = (Polyline) view.getElement ();
>         List result = new LinkedList ();
>         for (Iterator it = modelElement.getTemplate ().iterator ();
>         it.hasNext ();) {
>             Point childElement = (Point) it.next ();
>             int visualID = GMFGraphVisualIDRegistry.getNodeVisualID (view, childElement);
>             if (visualID == PointEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
>         }
>         return result;
>     }
> 
544a609,610
>             case PointEditPart.VISUAL_ID :
>                 return getPoint_3022ContainedLinks (view);
586a653,654
>             case PointEditPart.VISUAL_ID :
>                 return getPoint_3022IncomingLinks (view);
628a697,698
>             case PointEditPart.VISUAL_ID :
>                 return getPoint_3022OutgoingLinks (view);
706a777,780
>     public static List getPoint_3022ContainedLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
802a877,880
>     public static List getPoint_3022IncomingLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
922a1001,1004
>     public static List getPoint_3022OutgoingLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
