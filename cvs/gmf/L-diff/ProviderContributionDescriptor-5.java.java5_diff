13,22d12
< import org.eclipse.jface.action.IMenuManager;
< 
< import org.eclipse.jface.text.IMarkSelection;
< 
< import org.eclipse.jface.text.ITextSelection;
< 
< import org.eclipse.jface.viewers.ISelection;
< 
< import org.eclipse.jface.viewers.IStructuredSelection;
< 
34a25,40
> import org.eclipse.gmf.runtime.common.ui.util.IPartSelector;
> 
> import org.eclipse.jface.action.IMenuManager;
> 
> import org.eclipse.jface.text.IMarkSelection;
> 
> import org.eclipse.jface.text.ITextSelection;
> 
> import org.eclipse.jface.viewers.ISelection;
> 
> import org.eclipse.jface.viewers.IStructuredSelection;
> 
> import org.eclipse.ui.IWorkbenchPart;
> 
> import org.eclipse.ui.IWorkbenchPartSite;
> 
307c313
<     private static abstract class AbstractPartContributionItemDescriptor extends AbstractContributionItemDescriptor {
---
>     private static abstract class AbstractPartContributionItemDescriptor extends AbstractContributionItemDescriptor implements IPartSelector {
311a318,319
>         private String targetId;
>         private String targetClassName;
325a334,339
>             Object parent = configElement.getParent ();
>             if (parent instanceof IConfigurationElement) {
>                 IConfigurationElement parentElement = ((IConfigurationElement) parent);
>                 targetId = parentElement.getAttribute (ID);
>                 targetClassName = parentElement.getAttribute (CLASS);
>             }
343a358,372
>         public boolean selects (IWorkbenchPart part) {
>             IWorkbenchPartSite site = part.getSite ();
>             if (site != null) {
>                 String partId = site.getId ();
>                 if (targetId != null && partId != null) {
>                     return targetId.equals (partId);
>                 }
>             }
>             Class partClass = part.getClass ();
>             if (targetClassName != null && partClass != null) {
>                 return isAssignableTo (partClass, targetClassName);
>             }
>             return false;
>         }
> 
346c375
<     private static abstract class AbstractPopupContributionItemDescriptor extends AbstractContributionItemDescriptor {
---
>     private static abstract class AbstractPopupContributionItemDescriptor extends AbstractContributionItemDescriptor implements IPartSelector {
369a399,402
>         public boolean selects (IWorkbenchPart part) {
>             return false;
>         }
> 
