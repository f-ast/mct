2a3,14
> import org.eclipse.core.commands.ExecutionException;
> 
> import org.eclipse.core.commands.operations.IOperationHistory;
> 
> import org.eclipse.core.commands.operations.IOperationHistoryListener;
> 
> import org.eclipse.core.commands.operations.IUndoContext;
> 
> import org.eclipse.core.commands.operations.IUndoableOperation;
> 
> import org.eclipse.core.commands.operations.OperationHistoryEvent;
> 
6a19,20
> import org.eclipse.core.runtime.NullProgressMonitor;
> 
8a23,38
> import org.eclipse.gmf.runtime.common.core.command.CommandManager;
> 
> import org.eclipse.gmf.runtime.common.core.command.ICommand;
> 
> import org.eclipse.gmf.runtime.common.core.util.Log;
> 
> import org.eclipse.gmf.runtime.common.core.util.Trace;
> 
> import org.eclipse.gmf.runtime.common.ui.internal.CommonUIDebugOptions;
> 
> import org.eclipse.gmf.runtime.common.ui.internal.CommonUIPlugin;
> 
> import org.eclipse.gmf.runtime.common.ui.internal.CommonUIStatusCodes;
> 
> import org.eclipse.gmf.runtime.common.ui.util.PartListenerAdapter;
> 
53,73c83
< import org.eclipse.gmf.runtime.common.core.command.CommandManager;
< 
< import org.eclipse.gmf.runtime.common.core.command.CommandManagerChangeEvent;
< 
< import org.eclipse.gmf.runtime.common.core.command.ICommand;
< 
< import org.eclipse.gmf.runtime.common.core.command.ICommandManagerChangeListener;
< 
< import org.eclipse.gmf.runtime.common.core.util.Log;
< 
< import org.eclipse.gmf.runtime.common.core.util.Trace;
< 
< import org.eclipse.gmf.runtime.common.ui.internal.CommonUIDebugOptions;
< 
< import org.eclipse.gmf.runtime.common.ui.internal.CommonUIPlugin;
< 
< import org.eclipse.gmf.runtime.common.ui.internal.CommonUIStatusCodes;
< 
< import org.eclipse.gmf.runtime.common.ui.util.PartListenerAdapter;
< 
< public abstract class AbstractContributionItem extends ContributionItem implements ISelectionChangedListener, ICommandManagerChangeListener, IActionWithProgress {
---
> public abstract class AbstractContributionItem extends ContributionItem implements ISelectionChangedListener, IOperationHistoryListener, IActionWithProgress {
130a141,148
>     protected IUndoContext getUndoContext () {
>         IWorkbenchPart part = getWorkbenchPart ();
>         if (part != null) {
>             return (IUndoContext) part.getAdapter (IUndoContext.class);
>         }
>         return null;
>     }
> 
167,168c185,186
<             if (isCommandStackListener ()) {
<                 getCommandManager ().removeCommandManagerChangeListener (this);
---
>             if (isOperationHistoryListener ()) {
>                 getOperationHistory ().removeOperationHistoryListener (this);
179,180c197,198
<             if (isCommandStackListener ()) {
<                 getCommandManager ().addCommandManagerChangeListener (this);
---
>             if (isOperationHistoryListener ()) {
>                 getOperationHistory ().addOperationHistoryListener (this);
275c293
<         if (command == null || ! command.isExecutable ()) return;
---
>         if (command == null || ! command.canExecute ()) return;
277c295,301
<         getCommandManager ().execute (command);
---
>         command.addContext (getUndoContext ());
>         try {
>             getOperationHistory ().execute (command, new NullProgressMonitor (), null);
>         } catch (ExecutionException e) {
>             Trace.catching (CommonUIPlugin.getDefault (), CommonUIDebugOptions.EXCEPTIONS_CATCHING, getClass (), "execute", e);
>             Log.error (CommonUIPlugin.getDefault (), CommonUIStatusCodes.ACTION_FAILURE, e.getLocalizedMessage (), e);
>         }
287c311,315
<         return getActionManager ().getCommandManager ();
---
>         return CommandManager.getDefault ();
>     }
> 
>     protected IOperationHistory getOperationHistory () {
>         return getActionManager ().getOperationHistory ();
326a355,358
>     protected boolean isOperationHistoryListener () {
>         return false;
>     }
> 
331c363,367
<     public final void commandManagerChanged (CommandManagerChangeEvent event) {
---
>     public void historyNotification (OperationHistoryEvent event) {
>         IUndoableOperation operation = event.getOperation ();
>         if (operation != null) {
>             IUndoContext partContext = getUndoContext ();
>             if (partContext != null && operation.hasContext (partContext)) {
341a378,379
>         }
>     }
