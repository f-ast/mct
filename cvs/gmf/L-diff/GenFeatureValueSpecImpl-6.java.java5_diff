2a3,6
> import java.util.Collections;
> 
> import java.util.List;
> 
15,16d18
< import org.eclipse.emf.ecore.util.EcoreUtil;
< 
18a21,22
> import org.eclipse.gmf.codegen.gmfgen.GenFeatureInitializer;
> 
63,83d66
<     public NotificationChain basicSetFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs) {
<         msgs = eBasicSetContainer ((InternalEObject) newFeatureSeqInitializer, GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
<         return msgs;
<     }
< 
<     public void setFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer) {
<         if (newFeatureSeqInitializer != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER && newFeatureSeqInitializer != null)) {
<             if (EcoreUtil.isAncestor (this, newFeatureSeqInitializer)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
< 
<             NotificationChain msgs = null;
<             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
< 
<             if (newFeatureSeqInitializer != null) msgs = ((InternalEObject) newFeatureSeqInitializer).eInverseAdd (this, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS, GenFeatureSeqInitializer.class, msgs);
< 
<             msgs = basicSetFeatureSeqInitializer (newFeatureSeqInitializer, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, newFeatureSeqInitializer, newFeatureSeqInitializer));
< 
<     }
< 
90a74,77
>     public List < GenFeatureSeqInitializer > getAllFeatureSeqInitializers () {
>         return Collections.emptyList ();
>     }
> 
96c83
<                 return basicSetFeatureSeqInitializer ((GenFeatureSeqInitializer) otherEnd, msgs);
---
>                 return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
104c91
<                 return basicSetFeatureSeqInitializer (null, msgs);
---
>                 return eBasicSetContainer (null, GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
134,136d120
<             case GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER :
<                 setFeatureSeqInitializer ((GenFeatureSeqInitializer) newValue);
<                 return;
146,148d129
<             case GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER :
<                 setFeatureSeqInitializer ((GenFeatureSeqInitializer) null);
<                 return;
162a144,171
>     public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass) {
>         if (baseClass == GenFeatureInitializer.class) {
>             switch (derivedFeatureID) {
>                 case GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE :
>                     return GMFGenPackage.GEN_FEATURE_INITIALIZER__FEATURE;
>                 case GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER :
>                     return GMFGenPackage.GEN_FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
>     }
> 
>     public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass) {
>         if (baseClass == GenFeatureInitializer.class) {
>             switch (baseFeatureID) {
>                 case GMFGenPackage.GEN_FEATURE_INITIALIZER__FEATURE :
>                     return GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE;
>                 case GMFGenPackage.GEN_FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER :
>                     return GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
>     }
> 
