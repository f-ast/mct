34a35,36
> import org.eclipse.gmf.internal.xpand.Activator;
> 
59c61,62
<         if (file == null) {
---
>         String fullyQualifiedName;
>         if (file == null || (fullyQualifiedName = toFullyQualifiedName (file)) == null) {
62,63c65,69
<         String fullyQualifiedName = toFullyQualifiedName (file);
<         if (fullyQualifiedName == null) {
---
>         Reader r = new StreamConverter ().toContentsReader (file);
>         loadXtendResources (new Reader [] {r}, fullyQualifiedName);
>         try {
>             return loadXtendThroughCache (fullyQualifiedName);
>         } catch (FileNotFoundException ex) {
66d71
<         return super.loadXtendResource (fullyQualifiedName);
70c75,76
<         if (file == null) {
---
>         String fullyQualifiedName;
>         if (file == null || (fullyQualifiedName = toFullyQualifiedName (file)) == null) {
73,74c79,84
<         String fullyQualifiedName = toFullyQualifiedName (file);
<         if (fullyQualifiedName == null) {
---
>         Reader r = new StreamConverter ().toContentsReader (file);
>         loadXpandResources (new Reader [] {r}, fullyQualifiedName);
>         fullyQualifiedName = getNonAspectsTemplateName (fullyQualifiedName);
>         try {
>             return loadXpandThroughCache (fullyQualifiedName);
>         } catch (FileNotFoundException ex) {
77,78c87,91
<         fullyQualifiedName = getNonAspectsTemplateName (fullyQualifiedName);
<         return super.loadXpandResource (fullyQualifiedName);
---
>     }
> 
>     @Override
>     protected void handleParserException (ParserException ex) {
>         Activator.logWarn (ex.getClass ().getSimpleName () + ":" + ex.getResourceName ());
89,109d101
<     protected Reader resolve (String fqn, String ext) throws IOException {
<         IPath fp = new Path (fqn.replaceAll (SyntaxConstants.NS_DELIM, "/")).addFileExtension (ext);
<         IResource r = null;
<         for (IPath p : getResolutions (fp)) {
<             r = contextProject.findMember (p);
<             if (r != null) {
<                 break;
<             }
<         }
<         if (false == r instanceof IFile) {
<             throw new FileNotFoundException (fp.toString ());
<         }
<         try {
<             return new StreamConverter ().toContentsReader ((IFile) r);
<         } catch (CoreException ex) {
<             IOException wrap = new IOException (ex.getStatus ().getMessage ());
<             wrap.initCause (ex);
<             throw wrap;
<         }
<     }
< 
163,164c155
<         IPath [] configured = getConfiguredRoots ();
<         IPath [] rv = new IPath [configured.length];
---
>         IPath [] rv = new IPath [myConfiguredRoots.length];
166,167c157,158
<         i < configured.length; i ++) {
<             rv [i] = configured [i].append (p);
---
>         i < myConfiguredRoots.length; i ++) {
>             rv [i] = myConfiguredRoots [i].append (p);
172,175d162
<     private IPath [] getConfiguredRoots () {
<         return myConfiguredRoots;
<     }
< 
177c164
<         for (IPath nextRoot : getConfiguredRoots ()) {
---
>         for (IPath nextRoot : myConfiguredRoots) {
191c178
<     private String toFullyQualifiedName (IPath filePath) {
---
>     private static String toFullyQualifiedName (IPath filePath) {
