9,11c9
< import org.eclipse.gmf.runtime.emf.core.edit.MFilter;
< 
< import org.eclipse.gmf.runtime.emf.core.exceptions.MSLActionAbandonedException;
---
> import org.eclipse.emf.transaction.NotificationFilter;
16a15,16
> import org.eclipse.jface.viewers.IStructuredSelection;
> 
89a90,95
>         if (! selection.isEmpty () && selection instanceof IStructuredSelection) {
>             Object firstElement = ((IStructuredSelection) selection).getFirstElement ();
>             if (firstElement instanceof EObject) {
>                 setEObject ((EObject) firstElement);
>             }
>         }
124,134c130,131
<     public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement) {
<         update (notification, owner);
<     }
< 
<     public void handleElementDeletedEvent (Notification notification, EObject owner, EObject oldElement) {
<         update (notification, owner);
<     }
< 
<     public MFilter getFilter () {
<         MFilter lifeCycleEventFilter = new MFilter.Or (MFilter.ELEMENT_CREATED_FILTER, MFilter.ELEMENT_DELETED_FILTER);
<         return new MFilter.Or (lifeCycleEventFilter, MFilter.ELEMENT_MODIFIED_FILTER);
---
>     public NotificationFilter getFilter () {
>         return NotificationFilter.createEventTypeFilter (Notification.SET).or (NotificationFilter.createEventTypeFilter (Notification.ADD)).or (NotificationFilter.createEventTypeFilter (Notification.ADD_MANY)).or (NotificationFilter.createEventTypeFilter (Notification.REMOVE)).or (NotificationFilter.createEventTypeFilter (Notification.REMOVE_MANY)).and (NotificationFilter.createNotifierTypeFilter (EObject.class));
141,143d137
<     protected void handleException (MSLActionAbandonedException exception) {
<     }
< 
