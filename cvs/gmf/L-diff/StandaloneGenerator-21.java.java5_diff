40d39
<     protected final FigureQualifiedNameSwitch myFigureNameSwitch;
57c56,58
<         public boolean needsMapMode ();
---
>         public MapModeCodeGenStrategy getMapMode ();
> 
>         public String getRuntimeToken ();
68c69,70
<         private final boolean myNeedsMapMode;
---
>         private final MapModeCodeGenStrategy myMapMode;
>         private final String myRuntimeToken;
71c73
<             this (pluginId, mainPackageName, true);
---
>             this (pluginId, mainPackageName, MapModeCodeGenStrategy.DYNAMIC, null);
74,75c76,77
<         public ConfigImpl (String pluginId, String mainPackageName, boolean useMapMode) {
<             this (pluginId, mainPackageName, pluginId, "", "PluginActivator", (mainPackageName == null ? "" : mainPackageName + ".") + "activator", useMapMode);
---
>         public ConfigImpl (String pluginId, String mainPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken) {
>             this (pluginId, mainPackageName, pluginId, "", "PluginActivator", (mainPackageName == null ? "" : mainPackageName + ".") + "activator", mapMode, null);
78c80
<         public ConfigImpl (String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, boolean needsMapMode) {
---
>         public ConfigImpl (String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken) {
85c87,88
<             myNeedsMapMode = needsMapMode;
---
>             myMapMode = mapMode;
>             myRuntimeToken = runtimeToken;
112,113c115,120
<         public boolean needsMapMode () {
<             return myNeedsMapMode;
---
>         public MapModeCodeGenStrategy getMapMode () {
>             return myMapMode;
>         }
> 
>         public String getRuntimeToken () {
>             return myRuntimeToken;
134,135c141,142
<     public StandaloneGenerator (Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch) {
<         this (p, config, fqnSwitch, null);
---
>     public StandaloneGenerator (Processor p, Config config) {
>         this (p, config, null);
138,139c145,146
<     public StandaloneGenerator (Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch, URL [] dynamicTemplates) {
<         assert p != null && config != null && fqnSwitch != null;
---
>     public StandaloneGenerator (Processor p, Config config, URL [] dynamicTemplates) {
>         assert p != null && config != null;
142d148
<         myFigureNameSwitch = fqnSwitch;
144c150
<         MapModeCodeGenStrategy strategy;
---
>         final MapModeCodeGenStrategy strategy;
146c152
<         if (config.needsMapMode ()) {
---
>         if (config.getMapMode () == MapModeCodeGenStrategy.DYNAMIC) {
150c156
<             strategy = MapModeCodeGenStrategy.STATIC;
---
>             strategy = config.getMapMode () == null ? MapModeCodeGenStrategy.STATIC : config.getMapMode ();
153c159
<         myFigureGenerator = new FigureGenerator (fqnSwitch, strategy, accessor, false, dynamicTemplates);
---
>         myFigureGenerator = new FigureGenerator (config.getRuntimeToken (), strategy, accessor, false, dynamicTemplates);
189c195
<         doGenerateFile (myAuxiliaryGenerators.getManifestMFEmitter (), new Path ("META-INF/MANIFEST.MF"), myArgs, myProcessor.getRequiredBundles (myFigureNameSwitch));
---
>         doGenerateFile (myAuxiliaryGenerators.getManifestMFEmitter (), new Path ("META-INF/MANIFEST.MF"), myArgs, myProcessor.getRequiredBundles (null));
