35c35
< public class ToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
---
> public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
44d43
<             addDefaultPropertyDescriptor (object);
47d45
<             addQualifiedToolNamePropertyDescriptor (object);
52,55d49
<     protected void addDefaultPropertyDescriptor (Object object) {
<         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_ToolEntry_default_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_ToolEntry_default_feature", "_UI_ToolEntry_type"), GMFGenPackage.eINSTANCE.getToolEntry_Default (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, getString ("_UI_ToolPropertyCategory"), null));
<     }
< 
64,75d57
<     protected void addQualifiedToolNamePropertyDescriptor (Object object) {
<         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_ToolEntry_qualifiedToolName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_ToolEntry_qualifiedToolName_feature", "_UI_ToolEntry_type"), GMFGenPackage.eINSTANCE.getToolEntry_QualifiedToolName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, getString ("_UI_ToolPropertyCategory"), null));
<     }
< 
<     public Collection getChildrenFeatures (Object object) {
<         if (childrenFeatures == null) {
<             super.getChildrenFeatures (object);
<             childrenFeatures.add (GMFGenPackage.eINSTANCE.getToolEntry_Properties ());
<         }
<         return childrenFeatures;
<     }
< 
83,91d64
<         switch (notification.getFeatureID (ToolEntry.class)) {
<             case GMFGenPackage.TOOL_ENTRY__DEFAULT :
<             case GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME :
<                 fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
<                 return;
<             case GMFGenPackage.TOOL_ENTRY__PROPERTIES :
<                 fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), true, false));
<                 return;
<         }
