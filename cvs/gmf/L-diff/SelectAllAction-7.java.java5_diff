11,12d10
< import java.util.LinkedList;
< 
41c39
< import org.eclipse.gmf.runtime.diagram.ui.editparts.ListCompartmentEditPart;
---
> import org.eclipse.gmf.runtime.diagram.ui.editparts.IPrimaryEditPart;
43c41
< import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeCompartmentEditPart;
---
> import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.ISurfaceEditPart;
80,87c78,80
<     private List getBorderItemEditParts (EditPart parent) {
<         List list = new LinkedList ();
<         Iterator iter = parent.getChildren ().iterator ();
<         while (iter.hasNext ()) {
<             EditPart child = (EditPart) iter.next ();
<             if (child instanceof BorderItemEditPart) {
<                 list.add (child);
<                 list.addAll (child.getChildren ());
---
>     protected List getSelectableNodes (EditPart editpart) {
>         if (editpart == null) {
>             return Collections.EMPTY_LIST;
89c82,84
<             list.addAll (getBorderItemEditParts (child));
---
>         List retval = new ArrayList ();
>         getSelectableNodesInside (editpart, true, retval);
>         return retval;
91d85
<         if (list.isEmpty ()) return Collections.EMPTY_LIST;
93c87,107
<         return list;
---
>     private void getSelectableNodesInside (EditPart editpart, boolean topLevel, List retval) {
>         if (editpart instanceof ISurfaceEditPart) {
>             getSelectableChildrenNodes (editpart, retval);
>         } else if (editpart instanceof IPrimaryEditPart) {
>             if (topLevel) {
>                 if (editpart instanceof ConnectionEditPart) {
>                     ConnectionEditPart connection = (ConnectionEditPart) editpart;
>                     EditPart source = connection.getSource ();
>                     EditPart target = connection.getTarget ();
>                     if (source != null && target != null) {
>                         getSelectableNodesInside (source, true, retval);
>                         if (target.getParent () != source.getParent ()) getSelectableNodesInside (target, true, retval);
> 
>                     }
>                 } else getSelectableNodesInside (editpart.getParent (), true, retval);
> 
>             } else {
>                 if (editpart.isSelectable ()) retval.add (editpart);
> 
>                 getSelectableChildrenNodes (editpart, retval);
>             }
96,98d109
<     protected List getSelectableNodes (EditPart editpart) {
<         if (editpart == null) {
<             return Collections.EMPTY_LIST;
100,101c111,112
<         if (editpart instanceof DiagramEditPart || editpart instanceof ShapeCompartmentEditPart || editpart instanceof ListCompartmentEditPart) {
<             List list = new LinkedList ();
---
> 
>     private void getSelectableChildrenNodes (EditPart editpart, List retval) {
105,107c116
<                 list.add (child);
<                 if (! (editpart instanceof DiagramEditPart)) list.addAll (getBorderItemEditParts (child));
< 
---
>             getSelectableNodesInside (child, false, retval);
109d117
<             return list;
111,118d118
<         if (editpart instanceof ConnectionEditPart) {
<             ConnectionEditPart connection = (ConnectionEditPart) editpart;
<             EditPart source = connection.getSource ();
<             EditPart target = connection.getTarget ();
<             if (source != null && target != null) {
<                 List list = new ArrayList ();
<                 list.addAll (getSelectableNodes (source));
<                 if (target.getParent () != source.getParent ()) list.addAll (getSelectableNodes (target));
120c120,126
<                 return list;
---
>     private void getBorderItemEditParts (EditPart parent, Set retval) {
>         Iterator iter = parent.getChildren ().iterator ();
>         while (iter.hasNext ()) {
>             EditPart child = (EditPart) iter.next ();
>             if (child instanceof BorderItemEditPart) {
>                 retval.add (child);
>                 retval.addAll (child.getChildren ());
121a128
>             getBorderItemEditParts (child, retval);
123d129
<         return getSelectableNodes (editpart.getParent ());
132c138
<             connnectableEditParts.addAll (getBorderItemEditParts ((EditPart) li.next ()));
---
>             getBorderItemEditParts ((EditPart) li.next (), connnectableEditParts);
