30a31,32
> import org.eclipse.emf.ecore.util.EContentsEList;
> 
62a65
>     private EContentsEList allChildren = null;
132,137c135,136
<         List children = new ArrayList ();
<         if (persistedChildren != null && persistedChildren.size () > 0) {
<             children.addAll (getPersistedChildren ());
<         }
<         if (transientChildren != null && transientChildren.size () > 0) {
<             children.addAll (getTransientChildren ());
---
>         if (allChildren == null) {
>             allChildren = new EContentsEList (this, new EStructuralFeature [] {NotationPackage.eINSTANCE.getView_PersistedChildren (), NotationPackage.eINSTANCE.getView_TransientChildren ()});
139c138
<         return new BasicEList.UnmodifiableEList (children.size (), children.toArray ());
---
>         return allChildren;
475a475,495
>     public EList getVisibleChildren () {
>         List _children = new ArrayList ();
>         if (persistedChildren != null && persistedChildren.size () > 0) {
>             for (Iterator iter = getPersistedChildren ().iterator ();
>             iter.hasNext ();) {
>                 View view = (View) iter.next ();
>                 if (view.isVisible ()) _children.add (view);
> 
>             }
>         }
>         if (transientChildren != null && transientChildren.size () > 0) {
>             for (Iterator iter = getTransientChildren ().iterator ();
>             iter.hasNext ();) {
>                 View view = (View) iter.next ();
>                 if (view.isVisible ()) _children.add (view);
> 
>             }
>         }
>         return new BasicEList.UnmodifiableEList (_children.size (), _children.toArray ());
>     }
> 
