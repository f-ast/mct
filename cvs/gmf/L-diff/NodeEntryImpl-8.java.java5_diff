23c23
< public class NodeEntryImpl extends NotationObjectImpl implements BasicEMap.Entry {
---
> public class NodeEntryImpl extends NotationEObjectImpl implements BasicEMap.Entry {
25c25,28
<     protected Alignment value = VALUE_EDEFAULT;
---
>     protected static final int VALUE_EFLAG_OFFSET = 8;
>     protected static final int VALUE_EFLAG_DEFAULT = Alignment.VALUES.indexOf (VALUE_EDEFAULT) << VALUE_EFLAG_OFFSET;
>     private static final Alignment [] VALUE_EFLAG_VALUES = (Alignment []) Alignment.VALUES.toArray (new Alignment [Alignment.VALUES.size ()]);
>     protected static final int VALUE_EFLAG = 0x7 << VALUE_EFLAG_OFFSET;
29a33
>         eFlags |= VALUE_EFLAG_DEFAULT;
37c41
<         return value;
---
>         return VALUE_EFLAG_VALUES [(eFlags & VALUE_EFLAG)>>> VALUE_EFLAG_OFFSET];
41,43c45,49
<         Alignment oldValue = value;
<         value = newValue == null ? VALUE_EDEFAULT : newValue;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.NODE_ENTRY__VALUE, oldValue, value));
---
>         Alignment oldValue = VALUE_EFLAG_VALUES [(eFlags & VALUE_EFLAG)>>> VALUE_EFLAG_OFFSET];
>         if (newValue == null) newValue = VALUE_EDEFAULT;
> 
>         eFlags = eFlags & ~ VALUE_EFLAG | Alignment.VALUES.indexOf (newValue) << VALUE_EFLAG_OFFSET;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.NODE_ENTRY__VALUE, oldValue, newValue));
72,73d77
<             case NotationPackage.NODE_ENTRY__UUID :
<                 return getUUID ();
86,88d89
<             case NotationPackage.NODE_ENTRY__UUID :
<                 setUUID ((byte []) newValue);
<                 return;
101,103d101
<             case NotationPackage.NODE_ENTRY__UUID :
<                 setUUID (UUID_EDEFAULT);
<                 return;
116,117d113
<             case NotationPackage.NODE_ENTRY__UUID :
<                 return UUID_EDEFAULT == null ? uUID != null : ! UUID_EDEFAULT.equals (uUID);
119c115
<                 return value != VALUE_EDEFAULT;
---
>                 return (eFlags & VALUE_EFLAG) != VALUE_EFLAG_DEFAULT;
131c127
<         result.append (value);
---
>         result.append (VALUE_EFLAG_VALUES [(eFlags & VALUE_EFLAG)>>> VALUE_EFLAG_OFFSET]);
