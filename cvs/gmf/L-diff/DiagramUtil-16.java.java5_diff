7,8d6
< import org.eclipse.core.runtime.IAdaptable;
< 
13,22d10
< import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
< 
< import org.eclipse.gmf.runtime.diagram.core.services.ViewService;
< 
< import org.eclipse.gmf.runtime.diagram.core.util.ViewType;
< 
< import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
< 
< import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
< 
27,32d14
< import org.eclipse.gmf.runtime.diagram.ui.services.layout.ILayoutNode;
< 
< import org.eclipse.gmf.runtime.diagram.ui.services.layout.LayoutService;
< 
< import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
< 
37,40d18
< import org.eclipse.gmf.runtime.notation.Edge;
< 
< import org.eclipse.gmf.runtime.notation.Node;
< 
43,44d20
< import org.eclipse.jface.util.Assert;
< 
53,78d28
<     public static Diagram createDiagram (EObject context, String kind, PreferencesHint preferencesHint) {
<         IAdaptable viewModel = (context != null) ? new EObjectAdapter (context) : null;
<         String viewType = (kind != null) ? kind : "";
<         return ViewService.getInstance ().createDiagram (viewModel, viewType, preferencesHint);
<     }
< 
<     public static Node createNode (View container, EObject eObject, String type, PreferencesHint preferencesHint) {
<         Assert.isNotNull (container, "The container is null");
<         IAdaptable viewModel = (eObject != null) ? new EObjectAdapter (eObject) : null;
<         String viewType = (type != null) ? type : "";
<         View view = ViewService.getInstance ().createNode (viewModel, container, viewType, ViewUtil.APPEND, preferencesHint);
<         return (view != null) ? (Node) view : null;
<     }
< 
<     public static Edge createEdge (Diagram diagram, EObject eObject, String type, PreferencesHint preferencesHint) {
<         Assert.isNotNull (diagram, "The diagram is null");
<         IAdaptable viewModel = (eObject != null) ? new EObjectAdapter (eObject) : null;
<         String viewType = (type != null) ? type : "";
<         View view = ViewService.getInstance ().createEdge (viewModel, diagram, viewType, ViewUtil.APPEND, preferencesHint);
<         return (view != null) ? (Edge) view : null;
<     }
< 
<     public static Edge createEdge (View source, View target, EObject eObject, String type, PreferencesHint preferencesHint) {
<         return ViewService.createEdge (source, target, eObject, type, preferencesHint);
<     }
< 
87,102d36
<     public static ILayoutNode getLayoutNode (Node node) {
<         return LayoutService.getInstance ().getLayoutNode (node);
<     }
< 
<     public static List getLayoutNodes (DiagramEditPart diagramEP, List nodes) {
<         return LayoutService.getInstance ().getLayoutNodes (diagramEP, nodes);
<     }
< 
<     public static void layout (View view, String hint) {
<         LayoutService.getInstance ().layout (view, hint);
<     }
< 
<     public static void layoutNodes (List nodes, String hint) {
<         LayoutService.getInstance ().layoutNodes (nodes, true, hint);
<     }
< 
