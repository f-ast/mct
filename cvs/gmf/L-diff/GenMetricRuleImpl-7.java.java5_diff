55a56,63
>         if (rule != null && rule.eIsProxy ()) {
>             InternalEObject oldRule = (InternalEObject) rule;
>             rule = (ValueExpression) eResolveProxy (oldRule);
>             if (rule != oldRule) {
>                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.GEN_METRIC_RULE__RULE, oldRule, rule));
> 
>             }
>         }
59,68c67,68
<     public NotificationChain basicSetRule (ValueExpression newRule, NotificationChain msgs) {
<         ValueExpression oldRule = rule;
<         rule = newRule;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_METRIC_RULE__RULE, oldRule, newRule);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
---
>     public ValueExpression basicGetRule () {
>         return rule;
72,81c72,74
<         if (newRule != rule) {
<             NotificationChain msgs = null;
<             if (rule != null) msgs = ((InternalEObject) rule).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_METRIC_RULE__RULE, null, msgs);
< 
<             if (newRule != null) msgs = ((InternalEObject) newRule).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_METRIC_RULE__RULE, null, msgs);
< 
<             msgs = basicSetRule (newRule, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_METRIC_RULE__RULE, newRule, newRule));
---
>         ValueExpression oldRule = rule;
>         rule = newRule;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_METRIC_RULE__RULE, oldRule, rule));
178,179d170
<             case GMFGenPackage.GEN_METRIC_RULE__RULE :
<                 return basicSetRule (null, msgs);
203c194,196
<                 return getRule ();
---
>                 if (resolve) return getRule ();
> 
>                 return basicGetRule ();
