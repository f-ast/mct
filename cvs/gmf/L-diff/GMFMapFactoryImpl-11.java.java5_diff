14a15,16
> import org.eclipse.gmf.mappings.*;
> 
78a81,84
>             case GMFMapPackage.NODE_LABEL_MAPPING :
>                 return createNodeLabelMapping ();
>             case GMFMapPackage.LINK_LABEL_MAPPING :
>                 return createLinkLabelMapping ();
99a106,107
>             case GMFMapPackage.LINK_LABEL_ALIGNMENT :
>                 return createLinkLabelAlignmentFromString (eDataType, initialValue);
108a117,118
>             case GMFMapPackage.LINK_LABEL_ALIGNMENT :
>                 return convertLinkLabelAlignmentToString (eDataType, instanceValue);
140a151,160
>     public NodeLabelMapping createNodeLabelMapping () {
>         NodeLabelMappingImpl nodeLabelMapping = new NodeLabelMappingImpl ();
>         return nodeLabelMapping;
>     }
> 
>     public LinkLabelMapping createLinkLabelMapping () {
>         LinkLabelMappingImpl linkLabelMapping = new LinkLabelMappingImpl ();
>         return linkLabelMapping;
>     }
> 
180a201,211
>     public LinkLabelAlignment createLinkLabelAlignmentFromString (EDataType eDataType, String initialValue) {
>         LinkLabelAlignment result = LinkLabelAlignment.get (initialValue);
>         if (result == null) throw new IllegalArgumentException ("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName () + "'");
> 
>         return result;
>     }
> 
>     public String convertLinkLabelAlignmentToString (EDataType eDataType, Object instanceValue) {
>         return instanceValue == null ? null : instanceValue.toString ();
>     }
> 
