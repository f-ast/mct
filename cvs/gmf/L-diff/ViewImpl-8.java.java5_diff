20a21,22
> import org.eclipse.emf.common.util.URI;
> 
34a37,38
> import org.eclipse.emf.ecore.util.ECrossReferenceEList;
> 
48a53,54
> import org.eclipse.gmf.runtime.notation.NotationObject;
> 
55a62,101
>     protected static final byte [] UUID_EDEFAULT = null;
>     protected byte [] uUID = UUID_EDEFAULT;
>     protected URI eProxyURI;
> 
>     @Override
>     protected EPropertiesHolder eProperties () {
>         if (eProperties == null) {
>             eProperties = new EPropertiesHolderBaseImpl () {
>             }
> 
>             ;
>         }
>         return eProperties;
>     }
> 
>     @Override
>     public boolean eIsProxy () {
>         return eProxyURI != null;
>     }
> 
>     @Override
>     public URI eProxyURI () {
>         return eProxyURI;
>     }
> 
>     @Override
>     public void eSetProxyURI (URI uri) {
>         eProxyURI = uri;
>     }
> 
>     @Override
>     public EList < EObject > eContents () {
>         return EContentsEList.createEContentsEList (this);
>     }
> 
>     @Override
>     public EList < EObject > eCrossReferences () {
>         return ECrossReferenceEList.createECrossReferenceEList (this);
>     }
> 
69d114
<     private EContentsEList allChildren = null;
80a126,136
>     public byte [] getUUID () {
>         return uUID;
>     }
> 
>     public void setUUID (byte [] newUUID) {
>         byte [] oldUUID = uUID;
>         uUID = newUUID;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.VIEW__UUID, oldUUID, uUID));
> 
>     }
> 
140,143c196
<         if (allChildren == null) {
<             allChildren = new EContentsEList (this, childrenFeatures);
<         }
<         return allChildren;
---
>         return new EContentsEList (this, childrenFeatures);
286a340,341
>             case NotationPackage.VIEW__UUID :
>                 return getUUID ();
320a376,378
>             case NotationPackage.VIEW__UUID :
>                 setUUID ((byte []) newValue);
>                 return;
361a420,422
>             case NotationPackage.VIEW__UUID :
>                 setUUID (UUID_EDEFAULT);
>                 return;
396a458,459
>             case NotationPackage.VIEW__UUID :
>                 return UUID_EDEFAULT == null ? uUID != null : ! UUID_EDEFAULT.equals (uUID);
420a484,507
>     public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass) {
>         if (baseClass == NotationObject.class) {
>             switch (derivedFeatureID) {
>                 case NotationPackage.VIEW__UUID :
>                     return NotationPackage.NOTATION_OBJECT__UUID;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
>     }
> 
>     public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass) {
>         if (baseClass == NotationObject.class) {
>             switch (baseFeatureID) {
>                 case NotationPackage.NOTATION_OBJECT__UUID :
>                     return NotationPackage.VIEW__UUID;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
>     }
> 
425c512,514
<         result.append (" (visible: ");
---
>         result.append (" (uUID: ");
>         result.append (uUID);
>         result.append (", visible: ");
