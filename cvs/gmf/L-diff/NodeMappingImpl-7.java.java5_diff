5,6d4
< import org.eclipse.emf.common.notify.Notification;
< 
9,10d6
< import org.eclipse.emf.common.util.EList;
< 
21,24d16
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
< 
< import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
< 
29,32d20
< import org.eclipse.gmf.mappings.AbstractNodeMapping;
< 
< import org.eclipse.gmf.mappings.ChildNodeMapping;
< 
41,48c29
< public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
<     protected Node diagramNode = null;
<     protected EClass domainMetaElement = null;
<     protected Constraint domainSpecialization = null;
<     protected ElementInitializer domainInitializer = null;
<     protected EReference containmentFeature = null;
<     protected EAttribute editFeature = null;
<     protected EList childMappings = null;
---
> public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
58,216d38
<     public Node getDiagramNode () {
<         if (diagramNode != null && diagramNode.eIsProxy ()) {
<             Node oldDiagramNode = diagramNode;
<             diagramNode = (Node) eResolveProxy ((InternalEObject) diagramNode);
<             if (diagramNode != oldDiagramNode) {
<                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
< 
<             }
<         }
<         return diagramNode;
<     }
< 
<     public Node basicGetDiagramNode () {
<         return diagramNode;
<     }
< 
<     public void setDiagramNode (Node newDiagramNode) {
<         Node oldDiagramNode = diagramNode;
<         diagramNode = newDiagramNode;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
< 
<     }
< 
<     public EClass getDomainMetaElement () {
<         if (domainMetaElement != null && domainMetaElement.eIsProxy ()) {
<             EClass oldDomainMetaElement = domainMetaElement;
<             domainMetaElement = (EClass) eResolveProxy ((InternalEObject) domainMetaElement);
<             if (domainMetaElement != oldDomainMetaElement) {
<                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
< 
<             }
<         }
<         return domainMetaElement;
<     }
< 
<     public EClass basicGetDomainMetaElement () {
<         return domainMetaElement;
<     }
< 
<     public void setDomainMetaElement (EClass newDomainMetaElement) {
<         EClass oldDomainMetaElement = domainMetaElement;
<         domainMetaElement = newDomainMetaElement;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
< 
<     }
< 
<     public Constraint getDomainSpecialization () {
<         return domainSpecialization;
<     }
< 
<     public NotificationChain basicSetDomainSpecialization (Constraint newDomainSpecialization, NotificationChain msgs) {
<         Constraint oldDomainSpecialization = domainSpecialization;
<         domainSpecialization = newDomainSpecialization;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION, oldDomainSpecialization, newDomainSpecialization);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setDomainSpecialization (Constraint newDomainSpecialization) {
<         if (newDomainSpecialization != domainSpecialization) {
<             NotificationChain msgs = null;
<             if (domainSpecialization != null) msgs = ((InternalEObject) domainSpecialization).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
< 
<             if (newDomainSpecialization != null) msgs = ((InternalEObject) newDomainSpecialization).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
< 
<             msgs = basicSetDomainSpecialization (newDomainSpecialization, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION, newDomainSpecialization, newDomainSpecialization));
< 
<     }
< 
<     public ElementInitializer getDomainInitializer () {
<         return domainInitializer;
<     }
< 
<     public NotificationChain basicSetDomainInitializer (ElementInitializer newDomainInitializer, NotificationChain msgs) {
<         ElementInitializer oldDomainInitializer = domainInitializer;
<         domainInitializer = newDomainInitializer;
<         if (eNotificationRequired ()) {
<             ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER, oldDomainInitializer, newDomainInitializer);
<             if (msgs == null) msgs = notification;
<             else msgs.add (notification);
< 
<         }
<         return msgs;
<     }
< 
<     public void setDomainInitializer (ElementInitializer newDomainInitializer) {
<         if (newDomainInitializer != domainInitializer) {
<             NotificationChain msgs = null;
<             if (domainInitializer != null) msgs = ((InternalEObject) domainInitializer).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER, null, msgs);
< 
<             if (newDomainInitializer != null) msgs = ((InternalEObject) newDomainInitializer).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER, null, msgs);
< 
<             msgs = basicSetDomainInitializer (newDomainInitializer, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER, newDomainInitializer, newDomainInitializer));
< 
<     }
< 
<     public EReference getContainmentFeature () {
<         if (containmentFeature != null && containmentFeature.eIsProxy ()) {
<             EReference oldContainmentFeature = containmentFeature;
<             containmentFeature = (EReference) eResolveProxy ((InternalEObject) containmentFeature);
<             if (containmentFeature != oldContainmentFeature) {
<                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
< 
<             }
<         }
<         return containmentFeature;
<     }
< 
<     public EReference basicGetContainmentFeature () {
<         return containmentFeature;
<     }
< 
<     public void setContainmentFeature (EReference newContainmentFeature) {
<         EReference oldContainmentFeature = containmentFeature;
<         containmentFeature = newContainmentFeature;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
< 
<     }
< 
<     public EAttribute getEditFeature () {
<         if (editFeature != null && editFeature.eIsProxy ()) {
<             EAttribute oldEditFeature = editFeature;
<             editFeature = (EAttribute) eResolveProxy ((InternalEObject) editFeature);
<             if (editFeature != oldEditFeature) {
<                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__EDIT_FEATURE, oldEditFeature, editFeature));
< 
<             }
<         }
<         return editFeature;
<     }
< 
<     public EAttribute basicGetEditFeature () {
<         return editFeature;
<     }
< 
<     public void setEditFeature (EAttribute newEditFeature) {
<         EAttribute oldEditFeature = editFeature;
<         editFeature = newEditFeature;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__EDIT_FEATURE, oldEditFeature, editFeature));
< 
<     }
< 
<     public EList getChildMappings () {
<         if (childMappings == null) {
<             childMappings = new EObjectContainmentWithInverseEList (ChildNodeMapping.class, this, GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS, GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE);
<         }
<         return childMappings;
<     }
< 
350,397d171
<     public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass) {
<         if (baseClass == AbstractNodeMapping.class) {
<             switch (derivedFeatureID) {
<                 case GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE :
<                     return GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE;
<                 case GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT :
<                     return GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT;
<                 case GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION :
<                     return GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION;
<                 case GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER :
<                     return GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER;
<                 case GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE :
<                     return GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE;
<                 case GMFMapPackage.NODE_MAPPING__EDIT_FEATURE :
<                     return GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE;
<                 case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS :
<                     return GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS;
<                 default :
<                     return - 1;
<             }
<         }
<         return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
<     }
< 
<     public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass) {
<         if (baseClass == AbstractNodeMapping.class) {
<             switch (baseFeatureID) {
<                 case GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE :
<                     return GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE;
<                 case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT :
<                     return GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT;
<                 case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION :
<                     return GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION;
<                 case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER :
<                     return GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER;
<                 case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE :
<                     return GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE;
<                 case GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE :
<                     return GMFMapPackage.NODE_MAPPING__EDIT_FEATURE;
<                 case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS :
<                     return GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS;
<                 default :
<                     return - 1;
<             }
<         }
<         return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
<     }
< 
