18a19,28
> import org.eclipse.swt.widgets.Display;
> 
> import org.eclipse.swt.widgets.Shell;
> 
> import org.eclipse.ui.IWindowListener;
> 
> import org.eclipse.ui.IWorkbenchWindow;
> 
> import org.eclipse.ui.PlatformUI;
> 
19a30,56
>     private WindowListener listener;
>     private class WindowListener implements IWindowListener {
>         protected Shell shell;
> 
>         public void windowActivated (IWorkbenchWindow window) {
>             shell = window.getShell ();
>         }
> 
>         public void windowClosed (IWorkbenchWindow window) {
>         }
> 
>         public void windowDeactivated (IWorkbenchWindow window) {
>         }
> 
>         public void windowOpened (IWorkbenchWindow window) {
>         }
> 
>         public WindowListener (Shell theShell) {
>             this.shell = theShell;
>         }
> 
>         public Shell getShell () {
>             return shell;
>         }
> 
>     }
> 
21a59,73
>     public UIModificationValidator () {
>         Display.getDefault ().asyncExec (new Runnable () {
> 
>             public void run () {
>                 IWorkbenchWindow window = PlatformUI.getWorkbench ().getActiveWorkbenchWindow ();
>                 Shell shell = window == null ? null : window.getShell ();
>                 listener = new WindowListener (shell);
>                 PlatformUI.getWorkbench ().addWindowListener (listener);
>             }
> 
>         }
> 
>         );
>     }
> 
23c75,76
<         boolean ok = FileModificationValidator.getInstance ().okToEdit (files, CommonUIMessages.UIModificationValidator_ModificationMessage);
---
>         Shell shell = listener == null ? null : listener.getShell ();
>         boolean ok = FileModificationValidator.getInstance ().okToEdit (files, CommonUIMessages.UIModificationValidator_ModificationMessage, shell);
26a80,93
>     public void dispose () {
>         if (listener != null) {
>             Display.getDefault ().asyncExec (new Runnable () {
> 
>                 public void run () {
>                     PlatformUI.getWorkbench ().removeWindowListener (listener);
>                 }
> 
>             }
> 
>             );
>         }
>     }
> 
