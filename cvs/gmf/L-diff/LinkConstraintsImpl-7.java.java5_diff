14a15,16
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
41a44,64
>     public NotificationChain basicSetLinkMapping (LinkMapping newLinkMapping, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newLinkMapping, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
>         return msgs;
>     }
> 
>     public void setLinkMapping (LinkMapping newLinkMapping) {
>         if (newLinkMapping != eInternalContainer () || (eContainerFeatureID != GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING && newLinkMapping != null)) {
>             if (EcoreUtil.isAncestor (this, newLinkMapping)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newLinkMapping != null) msgs = ((InternalEObject) newLinkMapping).eInverseAdd (this, GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, LinkMapping.class, msgs);
> 
>             msgs = basicSetLinkMapping (newLinkMapping, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, newLinkMapping, newLinkMapping));
> 
>     }
> 
108c131
<                 return eBasicSetContainer (otherEnd, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
---
>                 return basicSetLinkMapping ((LinkMapping) otherEnd, msgs);
117c140
<                 return eBasicSetContainer (null, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
---
>                 return basicSetLinkMapping (null, msgs);
150a174,176
>             case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING :
>                 setLinkMapping ((LinkMapping) newValue);
>                 return;
163a190,192
>             case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING :
>                 setLinkMapping ((LinkMapping) null);
>                 return;
