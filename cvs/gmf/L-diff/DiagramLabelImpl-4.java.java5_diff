2a3,4
> import org.eclipse.emf.common.notify.Notification;
> 
4a7,8
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> 
9a14,15
>     protected static final boolean ELEMENT_ICON_EDEFAULT = false;
>     protected boolean elementIcon = ELEMENT_ICON_EDEFAULT;
18a25,79
>     public boolean isElementIcon () {
>         return elementIcon;
>     }
> 
>     public void setElementIcon (boolean newElementIcon) {
>         boolean oldElementIcon = elementIcon;
>         elementIcon = newElementIcon;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON, oldElementIcon, elementIcon));
> 
>     }
> 
>     public Object eGet (int featureID, boolean resolve, boolean coreType) {
>         switch (featureID) {
>             case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON :
>                 return isElementIcon () ? Boolean.TRUE : Boolean.FALSE;
>         }
>         return super.eGet (featureID, resolve, coreType);
>     }
> 
>     public void eSet (int featureID, Object newValue) {
>         switch (featureID) {
>             case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON :
>                 setElementIcon (((Boolean) newValue).booleanValue ());
>                 return;
>         }
>         super.eSet (featureID, newValue);
>     }
> 
>     public void eUnset (int featureID) {
>         switch (featureID) {
>             case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON :
>                 setElementIcon (ELEMENT_ICON_EDEFAULT);
>                 return;
>         }
>         super.eUnset (featureID);
>     }
> 
>     public boolean eIsSet (int featureID) {
>         switch (featureID) {
>             case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON :
>                 return elementIcon != ELEMENT_ICON_EDEFAULT;
>         }
>         return super.eIsSet (featureID);
>     }
> 
>     public String toString () {
>         if (eIsProxy ()) return super.toString ();
> 
>         StringBuffer result = new StringBuffer (super.toString ());
>         result.append (" (elementIcon: ");
>         result.append (elementIcon);
>         result.append (')');
>         return result.toString ();
>     }
> 
