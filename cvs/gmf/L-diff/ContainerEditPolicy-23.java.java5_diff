12a13,14
> import java.util.LinkedList;
> 
38a41,42
> import org.eclipse.gef.commands.UnexecutableCommand;
> 
52a57,58
> import org.eclipse.gmf.runtime.diagram.core.commands.GroupCommand;
> 
72a79,82
> import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
> 
> import org.eclipse.gmf.runtime.diagram.ui.editparts.IBorderItemEditPart;
> 
84a95,96
> import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
> 
317a330,332
>             if (ep instanceof GroupEditPart) {
>                 return UnexecutableCommand.INSTANCE;
>             }
385c400,402
<         if (request instanceof ArrangeRequest) {
---
>         if (ActionIds.ACTION_GROUP.equals (request.getType ()) && request instanceof GroupRequest) {
>             return getGroupCommand ((GroupRequest) request);
>         } else if (request instanceof ArrangeRequest) {
387a405
> 
421a440,471
>     protected Command getGroupCommand (GroupRequest request) {
>         List shapeViews = new LinkedList ();
>         IGraphicalEditPart parentEP = null;
>         for (Iterator iter = request.getEditParts ().iterator ();
>         iter.hasNext ();) {
>             Object editpart = iter.next ();
>             if (editpart instanceof ShapeEditPart) {
>                 if (! ((IEditableEditPart) editpart).isEditModeEnabled ()) {
>                     return null;
>                 }
>                 if (editpart instanceof IBorderItemEditPart) {
>                     return null;
>                 }
>                 if (parentEP != null) {
>                     if (parentEP != ((ShapeEditPart) editpart).getParent ()) {
>                         return null;
>                     }
>                 } else {
>                     parentEP = (IGraphicalEditPart) ((ShapeEditPart) editpart).getParent ();
>                 }
>                 if (((ShapeEditPart) editpart).getModel () instanceof Node) {
>                     shapeViews.add (((ShapeEditPart) editpart).getModel ());
>                 }
>             }
>         }
>         if (parentEP == null || ! parentEP.isEditModeEnabled ()) {
>             return null;
>         }
>         GroupCommand cmd = new GroupCommand (((IGraphicalEditPart) getHost ()).getEditingDomain (), shapeViews);
>         return new ICommandProxy (cmd);
>     }
> 
427c477
<         return (ActionIds.ACTION_ARRANGE_ALL.equals (request.getType ()) || ActionIds.ACTION_TOOLBAR_ARRANGE_ALL.equals (request.getType ()) || ActionIds.ACTION_ARRANGE_SELECTION.equals (request.getType ()) || ActionIds.ACTION_TOOLBAR_ARRANGE_SELECTION.equals (request.getType ()) || RequestConstants.REQ_ARRANGE_RADIAL.equals (request.getType ()) || RequestConstants.REQ_ARRANGE_DEFERRED.equals (request.getType ()) || RequestConstants.REQ_REFRESH.equals (request.getType ()) || RequestConstants.REQ_PASTE.equals (request.getType ()) || RequestConstants.REQ_DUPLICATE.equals (request.getType ()) || RequestConstants.REQ_SNAP_TO_GRID.equals (request.getType ()) || ZOrderRequest.REQ_BRING_TO_FRONT.equals (request.getType ()) || ZOrderRequest.REQ_BRING_FORWARD.equals (request.getType ()) || ZOrderRequest.REQ_SEND_TO_BACK.equals (request.getType ()) || ZOrderRequest.REQ_SEND_BACKWARD.equals (request.getType ()));
---
>         return (ActionIds.ACTION_ARRANGE_ALL.equals (request.getType ()) || ActionIds.ACTION_TOOLBAR_ARRANGE_ALL.equals (request.getType ()) || ActionIds.ACTION_ARRANGE_SELECTION.equals (request.getType ()) || ActionIds.ACTION_GROUP.equals (request.getType ()) || ActionIds.ACTION_TOOLBAR_ARRANGE_SELECTION.equals (request.getType ()) || RequestConstants.REQ_ARRANGE_RADIAL.equals (request.getType ()) || RequestConstants.REQ_ARRANGE_DEFERRED.equals (request.getType ()) || RequestConstants.REQ_REFRESH.equals (request.getType ()) || RequestConstants.REQ_PASTE.equals (request.getType ()) || RequestConstants.REQ_DUPLICATE.equals (request.getType ()) || RequestConstants.REQ_SNAP_TO_GRID.equals (request.getType ()) || ZOrderRequest.REQ_BRING_TO_FRONT.equals (request.getType ()) || ZOrderRequest.REQ_BRING_FORWARD.equals (request.getType ()) || ZOrderRequest.REQ_SEND_TO_BACK.equals (request.getType ()) || ZOrderRequest.REQ_SEND_BACKWARD.equals (request.getType ()));
