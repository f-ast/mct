1c1,13
< package org.eclipse.gmf.internal.runtime.lite;
---
> package org.eclipse.gmf.internal.xpand;
> 
> import java.util.HashMap;
> 
> import java.util.LinkedHashSet;
> 
> import java.util.Map;
> 
> import java.util.Set;
> 
> import org.eclipse.core.resources.IProject;
> 
> import org.eclipse.core.runtime.CoreException;
4a17,18
> import org.eclipse.core.runtime.Plugin;
> 
7c21
< import org.eclipse.jface.resource.ImageDescriptor;
---
> import org.eclipse.emf.ecore.EPackage;
9c23
< import org.eclipse.jface.resource.ImageRegistry;
---
> import org.eclipse.gmf.internal.xpand.build.MetaModelSource;
11c25
< import org.eclipse.ui.plugin.AbstractUIPlugin;
---
> import org.eclipse.gmf.internal.xpand.build.WorkspaceResourceManager;
15,17c29,30
< public class Activator extends AbstractUIPlugin {
<     public static final String PLUGIN_ID = "org.eclipse.gmf.runtime.lite";
<     private static Activator plugin;
---
> public class Activator extends Plugin {
>     private static Activator anInstance;
20d32
<         plugin = this;
22a35
>     @Override
24a38
>         anInstance = this;
26a41
>     @Override
28c43
<         plugin = null;
---
>         anInstance = null;
32,33c47,48
<     public static Activator getDefault () {
<         return plugin;
---
>     public static String getId () {
>         return anInstance.getBundle ().getSymbolicName ();
36,37c51,52
<     public void logError (String error) {
<         logError (error, null);
---
>     public static void logWarn (String message) {
>         log (new Status (IStatus.WARNING, getId (), 0, message, null));
40,43c55,59
<     @Override
<     protected void initializeImageRegistry (ImageRegistry reg) {
<         PluginImages.initialize ();
<         super.initializeImageRegistry (reg);
---
>     public static void logError (Exception e) {
>         if (e instanceof CoreException) {
>             log (((CoreException) e).getStatus ());
>         } else {
>             log (new Status (IStatus.ERROR, getId (), 0, e.getMessage (), e));
45,47d60
< 
<     public void logError (String error, Throwable throwable) {
<         log (error, throwable, IStatus.ERROR);
50,52c63,64
<     private void debug (String message, Throwable throwable) {
<         if (! isDebugging ()) {
<             return;
---
>     public static void log (IStatus status) {
>         anInstance.getLog ().log (status);
54,58c66,71
<         if (message != null) {
<             System.err.println (message);
<         }
<         if (throwable != null) {
<             throwable.printStackTrace ();
---
> 
>     private final Map < IProject, ResourceManager > resourceManagers = new HashMap < IProject, ResourceManager > ();
> 
>     public static ResourceManager getResourceManager (IProject context) {
>         if (anInstance.resourceManagers.containsKey (context)) {
>             return anInstance.resourceManagers.get (context);
59a73,75
>         ResourceManager resourceManager = new WorkspaceResourceManager (context);
>         registerResourceManager (context, resourceManager);
>         return resourceManager;
62,63c78,80
<     public void logWarning (String error) {
<         logWarning (error, null);
---
>     public static void registerResourceManager (IProject project, ResourceManager resourceManager) {
>         assert ! anInstance.resourceManagers.containsKey (project);
>         anInstance.resourceManagers.put (project, resourceManager);
66,67c83,87
<     public void logWarning (String error, Throwable throwable) {
<         log (error, throwable, IStatus.WARNING);
---
>     private final Set < MetaModelSource > modelSources = new LinkedHashSet < MetaModelSource > ();
> 
>     public static void registerModelSource (MetaModelSource modelSource) {
>         assert modelSource != null;
>         anInstance.modelSources.add (modelSource);
70,72c90,92
<     private void log (String error, Throwable throwable, int severity) {
<         if (error == null && throwable != null) {
<             error = throwable.getMessage ();
---
>     public static EPackage findMetaModel (String nsURI) {
>         if (anInstance == null) {
>             return null;
74,75c94,97
<         getLog ().log (new Status (severity, getBundle ().getSymbolicName (), IStatus.OK, error, throwable));
<         debug (error, throwable);
---
>         for (MetaModelSource s : anInstance.modelSources) {
>             EPackage p = s.find (nsURI);
>             if (p != null) {
>                 return p;
77,79c99,100
< 
<     public static ImageDescriptor getImageDescriptor (String imageFilePath) {
<         return imageDescriptorFromPlugin (getDefault ().getBundle ().getSymbolicName (), imageFilePath);
---
>         }
>         return EPackage.Registry.INSTANCE.getEPackage (nsURI);
