29c29,30
<     int MAPPING_FEATURE_COUNT = 5;
---
>     int MAPPING__METRICS = 5;
>     int MAPPING_FEATURE_COUNT = 6;
144,145c145,147
<     int RULE_BASE__TARGET = 0;
<     int RULE_BASE_FEATURE_COUNT = 1;
---
>     int RULE_BASE__NAME = 0;
>     int RULE_BASE__DESCRIPTION = 1;
>     int RULE_BASE_FEATURE_COUNT = 2;
147c149,150
<     int AUDIT_RULE__TARGET = RULE_BASE__TARGET;
---
>     int AUDIT_RULE__NAME = RULE_BASE__NAME;
>     int AUDIT_RULE__DESCRIPTION = RULE_BASE__DESCRIPTION;
150c153
<     int AUDIT_RULE__NAME = RULE_BASE_FEATURE_COUNT + 2;
---
>     int AUDIT_RULE__TARGET = RULE_BASE_FEATURE_COUNT + 2;
154,172c157,186
<     int AUDIT_RULE__DESCRIPTION = RULE_BASE_FEATURE_COUNT + 6;
<     int AUDIT_RULE__CONTAINER = RULE_BASE_FEATURE_COUNT + 7;
<     int AUDIT_RULE_FEATURE_COUNT = RULE_BASE_FEATURE_COUNT + 8;
<     int RULE_TARGET = 23;
<     int RULE_TARGET__RULE = 0;
<     int RULE_TARGET_FEATURE_COUNT = 1;
<     int DOMAIN_ELEMENT_TARGET = 24;
<     int DOMAIN_ELEMENT_TARGET__RULE = RULE_TARGET__RULE;
<     int DOMAIN_ELEMENT_TARGET__ELEMENT = RULE_TARGET_FEATURE_COUNT + 0;
<     int DOMAIN_ELEMENT_TARGET_FEATURE_COUNT = RULE_TARGET_FEATURE_COUNT + 1;
<     int DIAGRAM_ELEMENT_TARGET = 25;
<     int DIAGRAM_ELEMENT_TARGET__RULE = RULE_TARGET__RULE;
<     int DIAGRAM_ELEMENT_TARGET__ELEMENT = RULE_TARGET_FEATURE_COUNT + 0;
<     int DIAGRAM_ELEMENT_TARGET_FEATURE_COUNT = RULE_TARGET_FEATURE_COUNT + 1;
<     int NOTATION_ELEMENT_TARGET = 26;
<     int NOTATION_ELEMENT_TARGET__RULE = RULE_TARGET__RULE;
<     int NOTATION_ELEMENT_TARGET__ELEMENT = RULE_TARGET_FEATURE_COUNT + 0;
<     int NOTATION_ELEMENT_TARGET_FEATURE_COUNT = RULE_TARGET_FEATURE_COUNT + 1;
<     int SEVERITY = 27;
---
>     int AUDIT_RULE__CONTAINER = RULE_BASE_FEATURE_COUNT + 6;
>     int AUDIT_RULE_FEATURE_COUNT = RULE_BASE_FEATURE_COUNT + 7;
>     int AUDITABLE = 29;
>     int AUDITABLE_FEATURE_COUNT = 0;
>     int DOMAIN_ELEMENT_TARGET = 23;
>     int DOMAIN_ELEMENT_TARGET__ELEMENT = AUDITABLE_FEATURE_COUNT + 0;
>     int DOMAIN_ELEMENT_TARGET_FEATURE_COUNT = AUDITABLE_FEATURE_COUNT + 1;
>     int DIAGRAM_ELEMENT_TARGET = 24;
>     int DIAGRAM_ELEMENT_TARGET__ELEMENT = AUDITABLE_FEATURE_COUNT + 0;
>     int DIAGRAM_ELEMENT_TARGET_FEATURE_COUNT = AUDITABLE_FEATURE_COUNT + 1;
>     int NOTATION_ELEMENT_TARGET = 25;
>     int NOTATION_ELEMENT_TARGET__ELEMENT = AUDITABLE_FEATURE_COUNT + 0;
>     int NOTATION_ELEMENT_TARGET_FEATURE_COUNT = AUDITABLE_FEATURE_COUNT + 1;
>     int METRIC_CONTAINER = 26;
>     int METRIC_CONTAINER__METRICS = 0;
>     int METRIC_CONTAINER_FEATURE_COUNT = 1;
>     int METRIC_RULE = 27;
>     int METRIC_RULE__NAME = RULE_BASE__NAME;
>     int METRIC_RULE__DESCRIPTION = RULE_BASE__DESCRIPTION;
>     int METRIC_RULE__KEY = RULE_BASE_FEATURE_COUNT + 0;
>     int METRIC_RULE__RULE = RULE_BASE_FEATURE_COUNT + 1;
>     int METRIC_RULE__TARGET = RULE_BASE_FEATURE_COUNT + 2;
>     int METRIC_RULE__CONTAINER = RULE_BASE_FEATURE_COUNT + 3;
>     int METRIC_RULE_FEATURE_COUNT = RULE_BASE_FEATURE_COUNT + 4;
>     int AUDITED_METRIC_TARGET = 28;
>     int AUDITED_METRIC_TARGET__METRIC = AUDITABLE_FEATURE_COUNT + 0;
>     int AUDITED_METRIC_TARGET_FEATURE_COUNT = AUDITABLE_FEATURE_COUNT + 1;
>     int MEASURABLE = 30;
>     int MEASURABLE_FEATURE_COUNT = 0;
>     int SEVERITY = 31;
275a290,291
>     EReference getMapping_Metrics ();
> 
338c354
<     EAttribute getAuditRule_Name ();
---
>     EReference getAuditRule_Target ();
346,347d361
<     EAttribute getAuditRule_Description ();
< 
352c366
<     EReference getRuleBase_Target ();
---
>     EAttribute getRuleBase_Name ();
354,356c368
<     EClass getRuleTarget ();
< 
<     EReference getRuleTarget_Rule ();
---
>     EAttribute getRuleBase_Description ();
369a382,403
>     EClass getMetricContainer ();
> 
>     EReference getMetricContainer_Metrics ();
> 
>     EClass getMetricRule ();
> 
>     EAttribute getMetricRule_Key ();
> 
>     EReference getMetricRule_Rule ();
> 
>     EReference getMetricRule_Target ();
> 
>     EReference getMetricRule_Container ();
> 
>     EClass getAuditedMetricTarget ();
> 
>     EReference getAuditedMetricTarget_Metric ();
> 
>     EClass getAuditable ();
> 
>     EClass getMeasurable ();
> 
