42a43,44
> import org.eclipse.gmf.codegen.gmfgen.GenLinkEnd;
> 
50a53,54
> import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;
> 
76a81,88
>     public EList < GenLink > getGenOutgoingLinks () {
>         return GenLinkEndOperations.getGenOutgoingLinks (this);
>     }
> 
>     public EList < GenLink > getGenIncomingLinks () {
>         return GenLinkEndOperations.getGenIncomingLinks (this);
>     }
> 
223a236,275
>     public EList < GenLinkEnd > getSources () {
>         if (getModelFacet () == null) {
>             return ECollections.emptyEList ();
>         }
>         return getCompatibleLinkEnds (getModelFacet ().getSourceType ());
>     }
> 
>     private EList < GenLinkEnd > getCompatibleLinkEnds (GenClass desiredType) {
>         if (desiredType == null) {
>             return ECollections.emptyEList ();
>         }
>         BasicEList < GenLinkEnd > result = new BasicEList < GenLinkEnd > ();
>         for (GenNode nextNode : getDiagram ().getAllNodes ()) {
>             if (canBeLinkEnd (desiredType, nextNode.getModelFacet ())) {
>                 result.add (nextNode);
>             }
>         }
>         for (GenLink nextLink : getDiagram ().getLinks ()) {
>             if (nextLink.getModelFacet () instanceof TypeModelFacet && canBeLinkEnd (desiredType, (TypeModelFacet) nextLink.getModelFacet ())) {
>                 result.add (nextLink);
>             }
>         }
>         return result;
>     }
> 
>     private static boolean canBeLinkEnd (GenClass desiredEndType, TypeModelFacet actualModelFacet) {
>         if (desiredEndType == null || actualModelFacet == null) {
>             return false;
>         }
>         GenClass actualMetaclass = actualModelFacet.getMetaClass ();
>         return actualMetaclass != null && desiredEndType.getEcoreClass ().isSuperTypeOf (actualMetaclass.getEcoreClass ());
>     }
> 
>     public EList < GenLinkEnd > getTargets () {
>         if (getModelFacet () == null) {
>             return ECollections.emptyEList ();
>         }
>         return getCompatibleLinkEnds (getModelFacet ().getTargetType ());
>     }
> 
307a360,363
>             case GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS :
>                 return getGenOutgoingLinks ();
>             case GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS :
>                 return getGenIncomingLinks ();
327a384,387
>             case GMFGenPackage.GEN_LINK__SOURCES :
>                 return getSources ();
>             case GMFGenPackage.GEN_LINK__TARGETS :
>                 return getTargets ();
404a465,468
>             case GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS :
>                 return ! getGenOutgoingLinks ().isEmpty ();
>             case GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS :
>                 return ! getGenIncomingLinks ().isEmpty ();
424a489,492
>             case GMFGenPackage.GEN_LINK__SOURCES :
>                 return ! getSources ().isEmpty ();
>             case GMFGenPackage.GEN_LINK__TARGETS :
>                 return ! getTargets ().isEmpty ();
429a498,527
>     public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass) {
>         if (baseClass == GenLinkEnd.class) {
>             switch (derivedFeatureID) {
>                 case GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS :
>                     return GMFGenPackage.GEN_LINK_END__GEN_OUTGOING_LINKS;
>                 case GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS :
>                     return GMFGenPackage.GEN_LINK_END__GEN_INCOMING_LINKS;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
>     }
> 
>     @Override
>     public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass) {
>         if (baseClass == GenLinkEnd.class) {
>             switch (baseFeatureID) {
>                 case GMFGenPackage.GEN_LINK_END__GEN_OUTGOING_LINKS :
>                     return GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS;
>                 case GMFGenPackage.GEN_LINK_END__GEN_INCOMING_LINKS :
>                     return GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
>     }
> 
>     @Override
