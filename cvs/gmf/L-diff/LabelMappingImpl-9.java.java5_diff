14a15,16
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
76a79,99
>     public NotificationChain basicSetMapEntry (MappingEntry newMapEntry, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newMapEntry, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
>         return msgs;
>     }
> 
>     public void setMapEntry (MappingEntry newMapEntry) {
>         if (newMapEntry != eInternalContainer () || (eContainerFeatureID != GMFMapPackage.LABEL_MAPPING__MAP_ENTRY && newMapEntry != null)) {
>             if (EcoreUtil.isAncestor (this, newMapEntry)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newMapEntry != null) msgs = ((InternalEObject) newMapEntry).eInverseAdd (this, GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS, MappingEntry.class, msgs);
> 
>             msgs = basicSetMapEntry (newMapEntry, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, newMapEntry, newMapEntry));
> 
>     }
> 
83c106
<                 return eBasicSetContainer (otherEnd, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
---
>                 return basicSetMapEntry ((MappingEntry) otherEnd, msgs);
92c115
<                 return eBasicSetContainer (null, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
---
>                 return basicSetMapEntry (null, msgs);
129a153,155
>             case GMFMapPackage.LABEL_MAPPING__MAP_ENTRY :
>                 setMapEntry ((MappingEntry) newValue);
>                 return;
142a169,171
>             case GMFMapPackage.LABEL_MAPPING__MAP_ENTRY :
>                 setMapEntry ((MappingEntry) null);
>                 return;
