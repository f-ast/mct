23,24d22
< import org.eclipse.gmf.runtime.common.ui.action.IDisposableAction;
< 
26a25,26
> import org.eclipse.gmf.runtime.common.ui.action.IDisposableAction;
> 
48a49,50
> import org.eclipse.jface.action.AbstractGroupMarker;
> 
198a201,205
>             } else if (c instanceof ProviderContributionDescriptor.PopupPredefinedItemDescriptor) {
>                 ProviderContributionDescriptor.PopupPredefinedItemDescriptor item = (ProviderContributionDescriptor.PopupPredefinedItemDescriptor) c;
>                 if (item.isToBeRemoved ()) {
>                     removeExistingItem (item.getId (), item.getPath (), popupMenu);
>                 }
363a371,407
>     private void removeExistingItem (String id, String path, IContributionManager contributionManager) {
>         if (id == null) return;
> 
>         IContributionManager parent = contributionManager;
>         if (path.length () > 1) {
>             parent = findMenuUsingPath (contributionManager, path.substring (1));
>             if (parent == null) {
>                 Log.info (CommonUIServicesActionPlugin.getDefault (), CommonUIServicesActionStatusCodes.SERVICE_FAILURE, "The contribution item path is invalid");
>                 return;
>             }
>         }
>         IContributionItem predefinedItem = parent.find (id);
>         if (predefinedItem == null) {
>             Log.info (CommonUIServicesActionPlugin.getDefault (), CommonUIServicesActionStatusCodes.SERVICE_FAILURE, "The contribution item path is invalid");
>             return;
>         }
>         if (predefinedItem instanceof AbstractGroupMarker) {
>             IContributionItem allItems [] = parent.getItems ();
>             int groupIndex;
>             for (groupIndex = 0; groupIndex < allItems.length; groupIndex ++) {
>                 IContributionItem item = allItems [groupIndex];
>                 if (item.equals (predefinedItem)) {
>                     break;
>                 }
>             }
>             for (int j = groupIndex + 1;
>             j < allItems.length; j ++) {
>                 IContributionItem item = allItems [j];
>                 if (item instanceof AbstractGroupMarker) {
>                     break;
>                 }
>                 parent.remove (item);
>             }
>         }
>         parent.remove (predefinedItem);
>     }
> 
