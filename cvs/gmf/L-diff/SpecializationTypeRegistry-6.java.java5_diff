38a39,40
> import org.eclipse.gmf.runtime.emf.type.core.IClientContext;
> 
48a51,52
> import org.eclipse.gmf.runtime.emf.type.core.ISpecializationTypeDescriptor;
> 
146,147c150,151
<     private List getImmediateSpecializationTypeDescriptors (ElementTypeDescriptor type) {
<         return getSpecializationTypeDescriptors (type, false);
---
>     private List getImmediateSpecializationTypeDescriptors (ElementTypeDescriptor type, IClientContext clientContext) {
>         return getSpecializationTypeDescriptors (type, false, clientContext);
150,151c154,155
<     private List getAllSpecializationTypeDescriptors (ElementTypeDescriptor type) {
<         return getSpecializationTypeDescriptors (type, true);
---
>     private List getAllSpecializationTypeDescriptors (ElementTypeDescriptor type, IClientContext clientContext) {
>         return getSpecializationTypeDescriptors (type, true, clientContext);
154c158
<     private List getSpecializationTypeDescriptors (ElementTypeDescriptor type, boolean deep) {
---
>     private List getSpecializationTypeDescriptors (ElementTypeDescriptor type, boolean deep, IClientContext clientContext) {
161a166
>                 if (clientContext.includes (nextDescriptor)) {
165c170,171
<                         result.addAll (getSpecializationTypeDescriptors (nextDescriptor, deep));
---
>                             result.addAll (getSpecializationTypeDescriptors (nextDescriptor, deep, clientContext));
>                         }
174c180
<     public List getSpecializationDescriptorsMatching (EObject eObject, MetamodelTypeDescriptor metamodelTypeDescriptor) {
---
>     public List getSpecializationDescriptorsMatching (EObject eObject, MetamodelTypeDescriptor metamodelTypeDescriptor, IClientContext clientContext) {
176c182
<         List specializations = getAllSpecializationTypeDescriptors (metamodelTypeDescriptor);
---
>         List specializations = getAllSpecializationTypeDescriptors (metamodelTypeDescriptor, clientContext);
192c198
<     public List getMatchingSpecializations (ElementTypeDescriptor type, EObject eContainer, EReference reference) {
---
>     public List getMatchingSpecializations (ElementTypeDescriptor type, EObject eContainer, EReference reference, IClientContext clientContext) {
194c200
<         List matchingSpecializations = getSpecializationDescriptorsMatching (type, eContainer, reference);
---
>         List matchingSpecializations = getSpecializationDescriptorsMatching (type, eContainer, reference, clientContext);
198c204
<             result.addAll (getMatchingSpecializations ((ElementTypeDescriptor) i.next (), eContainer, reference));
---
>             result.addAll (getMatchingSpecializations ((ElementTypeDescriptor) i.next (), eContainer, reference, clientContext));
231c237
<     private List getSpecializationDescriptorsMatching (ElementTypeDescriptor typeDescriptor, EObject eContainer, EReference feature) {
---
>     private List getSpecializationDescriptorsMatching (ElementTypeDescriptor typeDescriptor, EObject eContainer, EReference feature, IClientContext clientContext) {
233c239
<         Collection specializationDescriptors = getImmediateSpecializationTypeDescriptors (typeDescriptor);
---
>         Collection specializationDescriptors = getImmediateSpecializationTypeDescriptors (typeDescriptor, clientContext);
236a243,245
>             if (! clientContext.includes (nextDescriptor)) {
>                 continue;
>             }
272c281
<     public List getEditHelperAdvice (EObject eObject, MetamodelTypeDescriptor metamodelTypeDescriptor) {
---
>     public List getEditHelperAdvice (EObject eObject, MetamodelTypeDescriptor metamodelTypeDescriptor, IClientContext clientContext) {
278c287
<             result.addAll (getMatchingAdvice (nextSupertype.getId (), eObject, ALL));
---
>             result.addAll (getMatchingAdvice (nextSupertype.getId (), eObject, ALL, clientContext));
280,281c289,290
<         result.addAll (getMatchingAdvice (metamodelTypeDescriptor.getId (), eObject, ALL_NONE));
<         List specializationDescriptors = getSpecializationDescriptorsMatching (eObject, metamodelTypeDescriptor);
---
>         result.addAll (getMatchingAdvice (metamodelTypeDescriptor.getId (), eObject, ALL_NONE, clientContext));
>         List specializationDescriptors = getSpecializationDescriptorsMatching (eObject, metamodelTypeDescriptor, clientContext);
286c295
<             result.addAll (getMatchingAdvice (nextSpecialization.getId (), eObject, ALL_NONE));
---
>             result.addAll (getMatchingAdvice (nextSpecialization.getId (), eObject, ALL_NONE, clientContext));
291c300
<     public List getEditHelperAdvice (IElementType elementType, MetamodelTypeDescriptor metamodelTypeDescriptor) {
---
>     public List getEditHelperAdvice (IElementType elementType, MetamodelTypeDescriptor metamodelTypeDescriptor, IClientContext clientContext) {
299c308
<                 result.addAll (getMatchingAdvice (nextSupertype.getId (), ALL_NONE));
---
>                 result.addAll (getMatchingAdvice (nextSupertype.getId (), ALL_NONE, clientContext));
301c310
<                 result.addAll (getMatchingAdvice (nextSupertype.getId (), ALL));
---
>                 result.addAll (getMatchingAdvice (nextSupertype.getId (), ALL, clientContext));
305c314
<         result.addAll (getMatchingAdvice (elementType.getId (), ALL_NONE));
---
>         result.addAll (getMatchingAdvice (elementType.getId (), ALL_NONE, clientContext));
309c318
<     private List getMatchingAdvice (String elementTypeId, EObject eObject, Set adviceInheritanceToConsider) {
---
>     private List getMatchingAdvice (String elementTypeId, EObject eObject, Set adviceInheritanceToConsider, IClientContext clientContext) {
313a323
>             if (clientContext.includes (nextAdviceDescriptor)) {
323a334
>         }
327c338
<     private List getMatchingAdvice (String elementTypeId, Set adviceInheritanceToConsider) {
---
>     private List getMatchingAdvice (String elementTypeId, Set adviceInheritanceToConsider, IClientContext clientContext) {
331a343
>             if (clientContext.includes (nextAdviceDescriptor)) {
338a351
>         }
388c401
<         return new MultiIterator (new Collection [] {(Collection) adviceBindings.get (elementTypeId), (Collection) adviceBindings.get ("*"),});
---
>         return new MultiIterator (new Collection [] {(Collection) adviceBindings.get (elementTypeId), (Collection) adviceBindings.get ("*")});
398a412,423
>     public Collection getSpecializationTypeDescriptors (IClientContext clientContext) {
>         Collection result = new ArrayList ();
>         for (Iterator i = getSpecializationTypeDescriptors ().iterator ();
>         i.hasNext ();) {
>             ISpecializationTypeDescriptor next = (ISpecializationTypeDescriptor) i.next ();
>             if (clientContext.includes (next)) {
>                 result.add (next);
>             }
>         }
>         return result;
>     }
> 
