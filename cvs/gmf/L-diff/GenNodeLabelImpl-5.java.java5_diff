3,4d2
< import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
< 
11,12d8
< import org.eclipse.emf.ecore.EStructuralFeature;
< 
19,20d14
< import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;
< 
29,30d22
< import org.eclipse.gmf.codegen.gmfgen.Viewmap;
< 
44c36
<         return (GenNode) eContainer;
---
>         return (GenNode) eContainer ();
48c40
<         if (newNode != eContainer || (eContainerFeatureID != GMFGenPackage.GEN_NODE_LABEL__NODE && newNode != null)) {
---
>         if (newNode != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_NODE_LABEL__NODE && newNode != null)) {
52c44
<             if (eContainer != null) msgs = eBasicRemoveFromContainer (msgs);
---
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
63,65c55,56
<     public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
<         if (featureID >= 0) {
<             switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
---
>     public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
67c58
<                     if (eContainer != null) msgs = eBasicRemoveFromContainer (msgs);
---
>                 if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
70,71d60
<                 default :
<                     return eDynamicInverseAdd (otherEnd, featureID, baseClass, msgs);
72a62
>         return super.eInverseAdd (otherEnd, featureID, msgs);
74d63
<         if (eContainer != null) msgs = eBasicRemoveFromContainer (msgs);
76,85c65,66
<         return eBasicSetContainer (otherEnd, featureID, msgs);
<     }
< 
<     public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
<         if (featureID >= 0) {
<             switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
<                 case GMFGenPackage.GEN_NODE_LABEL__VIEWMAP :
<                     return basicSetViewmap (null, msgs);
<                 case GMFGenPackage.GEN_NODE_LABEL__MODEL_FACET :
<                     return basicSetModelFacet (null, msgs);
---
>     public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
88,90d68
<                 default :
<                     return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
<             }
92c70
<         return eBasicSetContainer (null, featureID, msgs);
---
>         return super.eInverseRemove (otherEnd, featureID, msgs);
95,96c73
<     public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs) {
<         if (eContainerFeatureID >= 0) {
---
>     public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
99,126c76,82
<                     return eContainer.eInverseRemove (this, GMFGenPackage.GEN_NODE__LABELS, GenNode.class, msgs);
<                 default :
<                     return eDynamicBasicRemoveFromContainer (msgs);
<             }
<         }
<         return eContainer.eInverseRemove (this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
<     }
< 
<     public Object eGet (EStructuralFeature eFeature, boolean resolve) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
<             case GMFGenPackage.GEN_NODE_LABEL__DIAGRAM_RUN_TIME_CLASS :
<                 if (resolve) return getDiagramRunTimeClass ();
< 
<                 return basicGetDiagramRunTimeClass ();
<             case GMFGenPackage.GEN_NODE_LABEL__VISUAL_ID :
<                 return new Integer (getVisualID ());
<             case GMFGenPackage.GEN_NODE_LABEL__EDIT_PART_CLASS_NAME :
<                 return getEditPartClassName ();
<             case GMFGenPackage.GEN_NODE_LABEL__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME :
<                 return getItemSemanticEditPolicyClassName ();
<             case GMFGenPackage.GEN_NODE_LABEL__NOTATION_VIEW_FACTORY_CLASS_NAME :
<                 return getNotationViewFactoryClassName ();
<             case GMFGenPackage.GEN_NODE_LABEL__VIEWMAP :
<                 return getViewmap ();
<             case GMFGenPackage.GEN_NODE_LABEL__READ_ONLY :
<                 return isReadOnly () ? Boolean.TRUE : Boolean.FALSE;
<             case GMFGenPackage.GEN_NODE_LABEL__MODEL_FACET :
<                 return getModelFacet ();
---
>                 return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_NODE__LABELS, GenNode.class, msgs);
>         }
>         return super.eBasicRemoveFromContainerFeature (msgs);
>     }
> 
>     public Object eGet (int featureID, boolean resolve, boolean coreType) {
>         switch (featureID) {
130c86
<         return eDynamicGet (eFeature, resolve);
---
>         return super.eGet (featureID, resolve, coreType);
133,158c89,90
<     public void eSet (EStructuralFeature eFeature, Object newValue) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
<             case GMFGenPackage.GEN_NODE_LABEL__DIAGRAM_RUN_TIME_CLASS :
<                 setDiagramRunTimeClass ((GenClass) newValue);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__VISUAL_ID :
<                 setVisualID (((Integer) newValue).intValue ());
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__EDIT_PART_CLASS_NAME :
<                 setEditPartClassName ((String) newValue);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME :
<                 setItemSemanticEditPolicyClassName ((String) newValue);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__NOTATION_VIEW_FACTORY_CLASS_NAME :
<                 setNotationViewFactoryClassName ((String) newValue);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__VIEWMAP :
<                 setViewmap ((Viewmap) newValue);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__READ_ONLY :
<                 setReadOnly (((Boolean) newValue).booleanValue ());
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__MODEL_FACET :
<                 setModelFacet ((FeatureModelFacet) newValue);
<                 return;
---
>     public void eSet (int featureID, Object newValue) {
>         switch (featureID) {
163c95
<         eDynamicSet (eFeature, newValue);
---
>         super.eSet (featureID, newValue);
166,191c98,99
<     public void eUnset (EStructuralFeature eFeature) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
<             case GMFGenPackage.GEN_NODE_LABEL__DIAGRAM_RUN_TIME_CLASS :
<                 setDiagramRunTimeClass ((GenClass) null);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__VISUAL_ID :
<                 setVisualID (VISUAL_ID_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__EDIT_PART_CLASS_NAME :
<                 setEditPartClassName (EDIT_PART_CLASS_NAME_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME :
<                 setItemSemanticEditPolicyClassName (ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__NOTATION_VIEW_FACTORY_CLASS_NAME :
<                 setNotationViewFactoryClassName (NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__VIEWMAP :
<                 setViewmap ((Viewmap) null);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__READ_ONLY :
<                 setReadOnly (READ_ONLY_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_NODE_LABEL__MODEL_FACET :
<                 setModelFacet ((FeatureModelFacet) null);
<                 return;
---
>     public void eUnset (int featureID) {
>         switch (featureID) {
196c104
<         eDynamicUnset (eFeature);
---
>         super.eUnset (featureID);
199,216c107,108
<     public boolean eIsSet (EStructuralFeature eFeature) {
<         switch (eDerivedStructuralFeatureID (eFeature)) {
<             case GMFGenPackage.GEN_NODE_LABEL__DIAGRAM_RUN_TIME_CLASS :
<                 return diagramRunTimeClass != null;
<             case GMFGenPackage.GEN_NODE_LABEL__VISUAL_ID :
<                 return visualID != VISUAL_ID_EDEFAULT;
<             case GMFGenPackage.GEN_NODE_LABEL__EDIT_PART_CLASS_NAME :
<                 return EDIT_PART_CLASS_NAME_EDEFAULT == null ? editPartClassName != null : ! EDIT_PART_CLASS_NAME_EDEFAULT.equals (editPartClassName);
<             case GMFGenPackage.GEN_NODE_LABEL__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME :
<                 return ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? itemSemanticEditPolicyClassName != null : ! ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals (itemSemanticEditPolicyClassName);
<             case GMFGenPackage.GEN_NODE_LABEL__NOTATION_VIEW_FACTORY_CLASS_NAME :
<                 return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : ! NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals (notationViewFactoryClassName);
<             case GMFGenPackage.GEN_NODE_LABEL__VIEWMAP :
<                 return viewmap != null;
<             case GMFGenPackage.GEN_NODE_LABEL__READ_ONLY :
<                 return readOnly != READ_ONLY_EDEFAULT;
<             case GMFGenPackage.GEN_NODE_LABEL__MODEL_FACET :
<                 return modelFacet != null;
---
>     public boolean eIsSet (int featureID) {
>         switch (featureID) {
220c112
<         return eDynamicIsSet (eFeature);
---
>         return super.eIsSet (featureID);
