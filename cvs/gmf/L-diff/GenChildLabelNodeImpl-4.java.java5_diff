22,23d21
<     protected static final boolean LABEL_READ_ONLY_EDEFAULT = false;
<     protected boolean labelReadOnly = LABEL_READ_ONLY_EDEFAULT;
36,46d33
<     public boolean isLabelReadOnly () {
<         return labelReadOnly;
<     }
< 
<     public void setLabelReadOnly (boolean newLabelReadOnly) {
<         boolean oldLabelReadOnly = labelReadOnly;
<         labelReadOnly = newLabelReadOnly;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY, oldLabelReadOnly, labelReadOnly));
< 
<     }
< 
102,103d88
<             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
<                 return isLabelReadOnly () ? Boolean.TRUE : Boolean.FALSE;
114,116d98
<             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
<                 setLabelReadOnly (((Boolean) newValue).booleanValue ());
<                 return;
129,131d110
<             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
<                 setLabelReadOnly (LABEL_READ_ONLY_EDEFAULT);
<                 return;
144,145d122
<             case GMFGenPackage.GEN_CHILD_LABEL_NODE__LABEL_READ_ONLY :
<                 return labelReadOnly != LABEL_READ_ONLY_EDEFAULT;
158,160c135
<         result.append (" (labelReadOnly: ");
<         result.append (labelReadOnly);
<         result.append (", labelElementIcon: ");
---
>         result.append (" (labelElementIcon: ");
