21,22d20
< import org.eclipse.draw2d.XYLayout;
< 
27,28d24
< import org.eclipse.gef.GraphicalEditPart;
< 
47,48d42
< import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
< 
53,54d46
< import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
< 
84a77,80
>         List operationSet = getOperationSet ();
>         if (operationSet.isEmpty ()) {
>             return null;
>         }
87,88c83
<             List elements = getOperationSet ();
<             for (Iterator iter = elements.iterator ();
---
>             for (Iterator iter = operationSet.iterator ();
95,98c90,93
<         } else if (getOperationSet ().size () >= 2) {
<             EditPart parent = getSelectionParent (getOperationSet ());
<             if (parent != null) {
<                 Command cmd = parent.getCommand (getTargetRequest ());
---
>         } else {
>             EditPart targetEP = getTargetEditPartForArrangeSelection (operationSet);
>             if (targetEP != null) {
>                 Command cmd = targetEP.getCommand (getTargetRequest ());
103d97
< 
107,121c101,112
<     protected boolean calculateEnabled () {
<         List operationSet = getOperationSet ();
<         if (isArrangeAll () && ! operationSet.isEmpty ()) {
<             return true;
<         }
<         EditPart parentEP = getSelectionParent (operationSet);
<         if ((parentEP instanceof IEditableEditPart) && ! ((IEditableEditPart) parentEP).isEditModeEnabled ()) {
<             return false;
<         }
<         for (Iterator i = operationSet.iterator ();
<         i.hasNext ();) {
<             Object next = i.next ();
<             if ((next instanceof IEditableEditPart) && ! ((IEditableEditPart) next).isEditModeEnabled ()) {
<                 return false;
<             }
---
>     private EditPart getTargetEditPartForArrangeSelection (List editparts) {
>         if (editparts.size () == 1) {
>             return ((EditPart) editparts.get (0)).getTargetEditPart (getTargetRequest ());
>         } else {
>             EditPart parentEP = getSelectionParent (editparts);
>             if (parentEP == null) return null;
> 
>             for (int i = 1;
>             i < editparts.size (); i ++) {
>                 EditPart part = (EditPart) editparts.get (i);
>                 if (part instanceof ConnectionEditPart) {
>                     continue;
123,126c114
<         if (operationSet.size () >= 2) {
<             if (parentEP instanceof GraphicalEditPart) {
<                 GraphicalEditPart parent = (GraphicalEditPart) parentEP;
<                 if ((parent != null) && (parent.getContentPane ().getLayoutManager () instanceof XYLayout)) return true;
---
>                 if (part.getParent () != parentEP) return null;
129,130c117
<         } else if (operationSet.size () == 1 && operationSet.get (0) instanceof GroupEditPart) {
<             return true;
---
>             return parentEP;
132,133d118
< 
<         return false;
140c125
<                 return getElementsToArrange (selection);
---
>                 return createOperationSetForArrangeAll (selection);
142,144c127,128
<             if (getDiagramEditPart () != null) return createOperationSet (getDiagramEditPart ().getChildren ());
< 
<             return Collections.EMPTY_LIST;
---
>             if (getDiagramEditPart () != null) {
>                 return getDiagramEditPart ().getChildren ();
145a130,131
>             return Collections.EMPTY_LIST;
>         } else {
149c135,136
<         return createOperationSet (selection);
---
>             return selection;
>         }
163,187d149
<     private List createOperationSet (List editparts) {
<         if (editparts == null || editparts.isEmpty ()) return Collections.EMPTY_LIST;
< 
<         EditPart parent;
<         if (editparts.size () == 1 && editparts.get (0) instanceof GroupEditPart) {
<             GroupEditPart groupEP = (GroupEditPart) editparts.get (0);
<             parent = groupEP;
<             editparts = groupEP.getChildren ();
<         } else {
<             parent = getSelectionParent (editparts);
<         }
<         if (parent == null) return Collections.EMPTY_LIST;
< 
<         for (int i = 1;
<         i < editparts.size (); i ++) {
<             EditPart part = (EditPart) editparts.get (i);
<             if (part instanceof ConnectionEditPart) {
<                 continue;
<             }
<             if (part.getParent () != parent) return Collections.EMPTY_LIST;
< 
<         }
<         return editparts;
<     }
< 
263c225
<     private List getElementsToArrange (List selection) {
---
>     private List createOperationSetForArrangeAll (List selection) {
286a249,252
>     public String getLabel () {
>         return isArrangeAll () ? DiagramUIActionsMessages.ArrangeAction_toolbar_ArrangeAll_ActionLabelText : DiagramUIActionsMessages.ArrangeAction_toolbar_ArrangeSelection_ActionLabelText;
>     }
> 
