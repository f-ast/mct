head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081015-1925:1.3
	v20081008-1925:1.3
	v20081001-1925:1.3
	v20080924-1925:1.3
	v20080917-1925:1.3
	v20080911-1728:1.3
	v20080910-1520:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070103-0300:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2007.03.22.20.48.50;	author ashatalin;	state dead;
branches;
next	1.2;
commitid	14974602ebb14567;

1.2
date	2006.11.08.14.06.28;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.06.11.47.59;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fixing problems with NavigatorLinkHelper.
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.navigator" class="NavigatorLinkHelperGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenNavigator genNavigator = (GenNavigator) ((Object[]) argument)[0];
GenDiagram genDiagram = genNavigator.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genNavigator.getLinkHelperClassName()%> implements <%=importManager.getImportedName("org.eclipse.ui.navigator.ILinkHelper")%> {

<%
/**
 * Uncomment this inclide ore remove corresponding file on resolving the following
 * request: https://bugs.eclipse.org/bugs/show_bug.cgi?id=159739
 *
	
< %@@ include file="navigatorLinkHelper_findSelection.jetinc" % >
 *
 */
%>

	/**
	 * @@generated
	 */	
	public <%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%> findSelection(<%=importManager.getImportedName("org.eclipse.ui.IEditorInput")%> anInput) {
		return <%=importManager.getImportedName("org.eclipse.jface.viewers.StructuredSelection")%>.EMPTY;
	}
	
	/**
	 * @@generated
	 */	
	public void activateEditor(<%=importManager.getImportedName("org.eclipse.ui.IWorkbenchPage")%> aPage, <%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%> aSelection) {
		if (aSelection == null || aSelection.isEmpty()) {
			return;
		}
		if (false == aSelection.getFirstElement() instanceof <%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) {
			return;
		}
		
		<%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%> navigatorItem = (<%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) aSelection.getFirstElement();
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> navigatorView = null;
		if (navigatorItem instanceof <%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) {
			navigatorView = ((<%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) navigatorItem).getView();
		} else if (navigatorItem instanceof <%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%>) {
			<%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%> group = (<%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%>) navigatorItem;
			if (group.getParent() instanceof <%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) {
				navigatorView = ((<%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) group.getParent()).getView();
			}<%
if (genDiagram.generateShortcutIcon()) {
	%> else if (group.getParent() instanceof <%=importManager.getImportedName("org.eclipse.core.runtime.IAdaptable")%>) {
				navigatorView = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) ((<%=importManager.getImportedName("org.eclipse.core.runtime.IAdaptable")%>) group.getParent()).getAdapter(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>.class);
			}<%
}%>
		}
		if (navigatorView == null) {
			return;
		}
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput")%> editorInput = new <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput")%>(navigatorView.getDiagram());
		<%=importManager.getImportedName("org.eclipse.ui.IEditorPart")%> editor = aPage.findEditor(editorInput);
		if (editor == null) {
			return;
		}
		aPage.bringToTop(editor);
		if (editor instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor")%>) {
			<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor")%> diagramEditor = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor")%>) editor;
			<%=importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource")%> diagramResource = diagramEditor.getDiagram().eResource();
				
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> selectedView = diagramResource.getEObject(navigatorView.eResource().getURIFragment(navigatorView));	
			if (selectedView == null) {
				return;
			}
			<%=importManager.getImportedName("org.eclipse.gef.EditPart")%> selectedEditPart = (<%=importManager.getImportedName("org.eclipse.gef.EditPart")%>) diagramEditor.getDiagramGraphicalViewer().getEditPartRegistry().get(selectedView);
			if (selectedEditPart != null) {
				diagramEditor.getDiagramGraphicalViewer().select(selectedEditPart);
			}
		}
	}
	
}
<%importManager.emitSortedImports();%>
@


1.2
log
@LinkHelper adopted to work correctly with shortcuts.
@
text
@@


1.1
log
@LinkHelper generated for Project Explorer view.
@
text
@d43 34
a76 3
		if (aSelection.getFirstElement() instanceof <%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) {
			<%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%> navigatorItem = (<%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) aSelection.getFirstElement();
			if (!<%=importManager.getImportedName(genDiagram.getEditPartQualifiedClassName())%>.MODEL_ID.equals(navigatorItem.getModelID())) {
d79 3
a81 38
			Object parentFile = navigatorItem.getParent();
			while (parentFile instanceof <%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) {
				parentFile = ((<%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) parentFile).getParent();
			}
			if (false == parentFile instanceof <%=importManager.getImportedName("org.eclipse.core.resources.IFile")%>) {
				return;
			}
			<%=importManager.getImportedName("org.eclipse.ui.IEditorInput")%> fileInput = new <%=importManager.getImportedName("org.eclipse.ui.part.FileEditorInput")%>((<%=importManager.getImportedName("org.eclipse.core.resources.IFile")%>) parentFile);
			<%=importManager.getImportedName("org.eclipse.ui.IEditorPart")%> editor = aPage.findEditor(fileInput);
			if (editor == null) {
				return;
			}
			aPage.bringToTop(editor);
			if (editor instanceof <%=importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName())%>) {
				<%=importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName())%> diagramEditor = (<%=importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName())%>) editor;
				<%=importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource")%> diagramResource = diagramEditor.getDiagram().eResource();
				
				<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> navigatorView = null;
				if (navigatorItem instanceof <%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) {
					navigatorView = ((<%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) navigatorItem).getView();
				} else if (navigatorItem instanceof <%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%>) {
					<%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%> group = (<%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%>) navigatorItem;
					if (group.getParent() instanceof <%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) {
						navigatorView = ((<%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) group.getParent()).getView();
					}
				} 

				if (navigatorView == null) {
					return;
				}
				<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> selectedView = diagramResource.getEObject(navigatorView.eResource().getURIFragment(navigatorView));	
				if (selectedView == null) {
					return;
				}
				<%=importManager.getImportedName("org.eclipse.gef.EditPart")%> selectedEditPart = (<%=importManager.getImportedName("org.eclipse.gef.EditPart")%>) diagramEditor.getDiagramGraphicalViewer().getEditPartRegistry().get(selectedView);
				if (selectedEditPart != null) {
					diagramEditor.getDiagramGraphicalViewer().select(selectedEditPart);
				}
@

