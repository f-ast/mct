head	1.10;
access;
symbols
	v20081022-1925:1.10
	v20081015-1925:1.10
	v20081008-1925:1.10
	v20081001-1925:1.10
	v20080924-1925:1.10
	v20080917-1925:1.10
	v20080911-1728:1.10
	v20080910-1520:1.10
	v20080903-1520:1.10
	v20080827-1520:1.10
	v20080813-1520:1.10
	v20080806-1520:1.10
	v20070202-0200:1.9
	v20061027-1200:1.9
	v20061020-1000:1.9
	v20060919-0800:1.9
	v20060907-1100:1.9
	M1_20:1.9
	v20060904-1500:1.9
	v20060824-1600:1.9
	v20060817-1500:1.9
	v20060728-0500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060620-0400:1.9
	v20060616-1400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.9
	v20060530-1930:1.9
	v20060526-1200:1.9
	v20060519-1300:1.9
	v20060519-0800:1.9
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2006.09.15.20.44.32;	author atikhomirov;	state dead;
branches;
next	1.9;

1.9
date	2006.05.18.13.58.29;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.13.22.22.22;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.07.15.45.27;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.08.17.15.39;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.08.12.28.12;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.00.17.46;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.05.22.57.53;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.17.19.23;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.16.13.30.03;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.providers" class="PropertyProviderGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.EditPart;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.ui.services.properties.GetPropertySourceOperation;
import org.eclipse.gmf.runtime.common.ui.services.properties.ICompositePropertySource;
import org.eclipse.gmf.runtime.common.ui.services.properties.IPropertiesProvider;
import org.eclipse.gmf.runtime.emf.ui.properties.providers.GenericEMFPropertiesProvider;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genDiagram.getPropertyProviderClassName()%> extends GenericEMFPropertiesProvider implements IPropertiesProvider {

	/**
	 * @@generated
	 */
	public boolean provides(IOperation operation) {
		if (operation instanceof GetPropertySourceOperation) {
			Object object = ((GetPropertySourceOperation) operation).getObject();
			return getSemanticElement(object) != null;
		}
		return false;
	}

	/**
	 * @@generated
	 */
	public ICompositePropertySource getPropertySource(Object object) {
		EObject element = getSemanticElement(object);
		if (element != null) {
			return super.getPropertySource(element);
		}
		return null;
	}

	/**
	 * @@generated
	 */
	protected EObject getSemanticElement(Object object) {
		View view = null;
		if (object instanceof View) {
			view = (View) object;
		} else if (object instanceof EditPart) {
			EditPart editPart = (EditPart) object;
			if (editPart.getModel() instanceof View) {
				view = (View) editPart.getModel();
			}
		}
		if (view != null && <%=importManager.getImportedName(genDiagram.getEditPartQualifiedClassName())%>.MODEL_ID.equals(<%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.getModelID(view))) {
			return view.getElement();
		}
		return null;
	}

}
<%importManager.emitSortedImports();%>
@


1.9
log
@use importAssistant to emit package statement instead of handcoding
@
text
@@


1.8
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d4 2
a5 1
GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
d8 1
a8 1
package <%=genDiagram.getProvidersPackageName()%>;
a9 1
<%ImportUtil importManager = new ImportUtil(genDiagram.getProvidersPackageName());%>
@


1.7
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d60 1
a60 1
		if (view != null && "<%=genDiagram.getEditorGen().getModelID()%>".equals(getModelID(view))) {
a64 2
	
<%@@ include file="../editor/getModelID.jetinc" %>
@


1.6
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d6 1
@


1.5
log
@constant used throughout templates to identify diagram (genModel.getModelName) was extracted as explicit attribute
packagePrefix added
@
text
@d4 1
a4 1
GenDiagram genDiagram = (GenDiagram) argument;
@


1.4
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d2 1
a2 1
    imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
a4 1
GenModel genModel = genDiagram.getEditorGen().getDomainGenModel();
d59 1
a59 1
		if (view != null && "<%=genModel.getModelName()%>".equals(getModelID(view))) {
@


1.3
log
@ImportManager moved to oeg.common
@
text
@d5 1
a5 1
GenModel genModel = genDiagram.getEMFGenModel();
@


1.2
log
@#114178
Create shortcut functionality added
@
text
@d2 1
a2 1
    imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
@


1.1
log
@#116399 Expose user-defined features of domain elements in property sheet
@
text
@d60 1
a60 1
		if (view != null && "<%=genModel.getModelName()%>".equals(view.getDiagram().getType())) {
d65 3
@

