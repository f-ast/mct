head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080722-1827:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.5
	v20080521:1.5
	v20080516-1543:1.5
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080411-0411:1.4
	v20080404-1111:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.4
	v20071222-1111:1.4
	v20071214-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071112-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070928-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2008.05.07.13.56.02;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	39124821b4de4567;

1.4
date	2007.05.18.21.17.19;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	2591464e17d14567;

1.3
date	2007.04.04.19.07.50;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	3b7f4613f7854567;

1.2
date	2007.02.05.17.27.22;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	13b045c768f94567;

1.1
date	2007.02.05.14.39.17;	author atikhomirov;	state Exp;
branches;
next	;
commitid	418145c741944567;


desc
@@


1.5
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE Class FOR gmfgen::GenCustomPropertyTab»
	«EXPAND xpt::Common::copyright FOR sheet.editorGen-»
package «sheet.packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «className» extends «EXPAND extendsList» «EXPAND implementsClause»{

«EXPAND getPropertySourceMethod»
«IF sheet.readOnly»
«EXPAND createReadonlyControlsMethod»
«ENDIF»
«EXPAND getPropertySourceProviderMethod»
«EXPAND transfromSelectionMethod»
«EXPAND setInputMethod»
«EXPAND getAdapterFactoryMethod»

«EXPAND additions»
}
«ENDDEFINE»

«DEFINE extendsList FOR gmfgen::GenCustomPropertyTab»org.eclipse.gmf.runtime.diagram.ui.properties.sections.AdvancedPropertySection«ENDDEFINE»
«DEFINE implementsClause FOR gmfgen::GenCustomPropertyTab»implements org.eclipse.ui.views.properties.IPropertySourceProvider«ENDDEFINE»

«DEFINE getPropertySourceMethod FOR gmfgen::GenCustomPropertyTab-»
	«EXPAND xpt::Common::generatedMemberComment»
	public org.eclipse.ui.views.properties.IPropertySource getPropertySource(Object object) {
		if (object instanceof org.eclipse.ui.views.properties.IPropertySource) {
			return (org.eclipse.ui.views.properties.IPropertySource) object;
		}
		org.eclipse.emf.common.notify.AdapterFactory af = getAdapterFactory(object);
		if (af != null) {
			org.eclipse.emf.edit.provider.IItemPropertySource ips = (org.eclipse.emf.edit.provider.IItemPropertySource) af.adapt(object, org.eclipse.emf.edit.provider.IItemPropertySource.class);
			if (ips != null) {
				return new org.eclipse.emf.edit.ui.provider.PropertySource(object, ips);
			}
		}
		if (object instanceof org.eclipse.core.runtime.IAdaptable) {
			return (org.eclipse.ui.views.properties.IPropertySource) ((org.eclipse.core.runtime.IAdaptable) object).getAdapter(org.eclipse.ui.views.properties.IPropertySource.class);
		}
		return null;
	}
«ENDDEFINE»

«DEFINE createReadonlyControlsMethod FOR gmfgen::GenCustomPropertyTab»
	«EXPAND xpt::Common::generatedMemberComment»
	public void createControls(org.eclipse.swt.widgets.Composite parent, org.eclipse.ui.views.properties.tabbed.TabbedPropertySheetPage aTabbedPropertySheetPage) {
		super.createControls(parent, aTabbedPropertySheetPage);
		class ROEntry extends org.eclipse.gmf.runtime.emf.ui.properties.sections.UndoableModelPropertySheetEntry {
			ROEntry(org.eclipse.core.commands.operations.IOperationHistory operationHistory) {
				super(operationHistory);
			}
			public org.eclipse.jface.viewers.CellEditor getEditor(org.eclipse.swt.widgets.Composite parentComposite) {
				return null; // do not allow editing
			}
			protected org.eclipse.gmf.runtime.emf.ui.properties.sections.PropertySheetEntry createChildEntry() {
				return new ROEntry(getOperationHistory());
			}
		};
		ROEntry root = new ROEntry(org.eclipse.core.commands.operations.OperationHistoryFactory.getOperationHistory()); 
		root.setPropertySourceProvider(getPropertySourceProvider());
		page.setRootEntry(root);
	}
«ENDDEFINE»

«DEFINE getPropertySourceProviderMethod FOR gmfgen::GenCustomPropertyTab»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.ui.views.properties.IPropertySourceProvider getPropertySourceProvider() {
		return this; 
	}
«ENDDEFINE»

«DEFINE transfromSelectionMethod FOR gmfgen::GenCustomPropertyTab»
	«EXPAND xpt::Common::generatedMemberComment("Modify/unwrap selection.")»
	protected Object transformSelection(Object selected) {
«IF "domain" == iD /*perhaps, override setInput should obey same condition?*/-»
		«EXPAND transfromSelectionMethodBodyDefault-»
«ENDIF-»
		return selected;
	}
«ENDDEFINE»

«DEFINE transfromSelectionMethodBodyDefault FOR gmfgen::GenCustomPropertyTab»
		if (selected instanceof org.eclipse.gef.EditPart) {
			Object model = ((org.eclipse.gef.EditPart) selected).getModel();
			return model instanceof org.eclipse.gmf.runtime.notation.View ? ((org.eclipse.gmf.runtime.notation.View) model).getElement() : null;
		}
		if (selected instanceof org.eclipse.gmf.runtime.notation.View) {
			return ((org.eclipse.gmf.runtime.notation.View) selected).getElement();
		}
		if (selected instanceof org.eclipse.core.runtime.IAdaptable) {
			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) selected).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
			if (view != null) {
				return view.getElement();
			}
		}
«ENDDEFINE»

«DEFINE setInputMethod FOR gmfgen::GenCustomPropertyTab»
	«EXPAND xpt::Common::generatedMemberComment»
	public void setInput(org.eclipse.ui.IWorkbenchPart part, org.eclipse.jface.viewers.ISelection selection) {
		if (selection.isEmpty() || false == selection instanceof org.eclipse.jface.viewers.StructuredSelection) {
			super.setInput(part, selection);
			return;
		}
		final org.eclipse.jface.viewers.StructuredSelection structuredSelection = ((org.eclipse.jface.viewers.StructuredSelection) selection);
		java.util.ArrayList transformedSelection = new java.util.ArrayList(structuredSelection.size());
		for (java.util.Iterator it = structuredSelection.iterator();  it.hasNext();) {
			Object r = transformSelection(it.next());
			if (r != null) {
				transformedSelection.add(r);
			}
		}
		super.setInput(part, new org.eclipse.jface.viewers.StructuredSelection(transformedSelection));
	}
«ENDDEFINE»

«DEFINE getAdapterFactoryMethod FOR gmfgen::GenCustomPropertyTab»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.emf.common.notify.AdapterFactory getAdapterFactory(Object object) {
		if (getEditingDomain() instanceof org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain) {
			return ((org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain) getEditingDomain()).getAdapterFactory();
		}
		org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(object);
		if (editingDomain != null) {
			return ((org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain) editingDomain).getAdapterFactory();
		}
		return null;
	}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenCustomPropertyTab»«ENDDEFINE»@


1.4
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d12 1
a12 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.3
log
@extracted piece of code for reuse
@
text
@d12 1
a12 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.2
log
@Copyrights added.
@
text
@d90 7
a109 3
«ENDIF-»
		return selected;
	}
@


1.1
log
@property sheet classes are generated with xpand now
@
text
@d16 1
@

