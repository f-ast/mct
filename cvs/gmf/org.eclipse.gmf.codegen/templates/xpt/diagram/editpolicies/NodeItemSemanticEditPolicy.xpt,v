head	1.27;
access;
symbols
	v20081022-1925:1.27
	v20081015-1925:1.27
	v20081008-1925:1.27
	v20081001-1925:1.27
	v20080930-1130:1.27
	v20080926-1245:1.27
	v20080924-1925:1.27
	v20080917-1925:1.27
	v20080911-1728:1.27
	v20080910-1520:1.27
	v20080903-1520:1.27
	v20080827-1520:1.27
	v20080813-1520:1.26
	v20080806-1520:1.26
	v20080722-1827:1.26
	v20080718-1731:1.26
	v20080716-1600:1.25
	v20080716-1642:1.26
	R2_1_maintenance:1.25.0.2
	Root_R2_1_maintenance:1.25
	R2_1_0:1.25
	v20080610-1132:1.25
	v20080603-1553:1.25
	v20080528-1052:1.25
	v20080521:1.25
	v20080516-1543:1.25
	v20080516-1143:1.25
	v20080512-1200:1.25
	v20080508-2000:1.25
	v20080507-1326:1.25
	v20080503-1740:1.24
	v20080501-1739:1.24
	v20080425-1959:1.24
	v20080417-1610:1.24
	v20080411-0411:1.24
	v20080404-1111:1.24
	v20080322-0000:1.24
	v20080222-1200:1.24
	v20080215-1500:1.24
	v20080207-0207:1.24
	v20071222-1111:1.24
	v20071214-1111:1.24
	v20071130-1111:1.24
	v20071124-0000:1.24
	v20071112-0000:1.24
	v20071108-0000:1.24
	v20071003-0000:1.24
	v20070928-0000:1.24
	v20070921-0000:1.24
	v20070915-0000:1.24
	v20070903-0000:1.24
	v20070809-0000:1.24
	R2_0_maintenance:1.24.0.2
	R2_0:1.24
	R4_20:1.24
	v20070621-0000:1.24
	RC3_20:1.24
	v20070614-1400:1.24
	v20070608-1300:1.23
	v20070605-1400:1.23
	v20070601-1400:1.23
	v20070525-1500:1.21
	v20070520-1200:1.21
	v20070518-1300:1.20
	v20070504-1000:1.18
	v20070427-0600:1.18
	v20070420-1000:1.17
	v20070413-1300:1.12
	v20070405-1100:1.7
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.3
	v20060316-0600:1.2
	v20070307-0700:1.1
	v20070301-1200:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.27
date	2008.08.22.15.20.15;	author atikhomirov;	state Exp;
branches;
next	1.26;
commitid	1abb48aed9234567;

1.26
date	2008.07.11.16.13.24;	author ashatalin;	state Exp;
branches;
next	1.25;
commitid	2854487786a34567;

1.25
date	2008.05.07.13.55.59;	author atikhomirov;	state Exp;
branches;
next	1.24;
commitid	39124821b4de4567;

1.24
date	2007.06.13.16.02.40;	author ashatalin;	state Exp;
branches;
next	1.23;
commitid	314d4670151f4567;

1.23
date	2007.05.30.16.17.50;	author ashatalin;	state Exp;
branches;
next	1.22;
commitid	2040465da3ae4567;

1.22
date	2007.05.30.16.02.20;	author ashatalin;	state Exp;
branches;
next	1.21;
commitid	382465da00c4567;

1.21
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.20;
commitid	2591464e17d14567;

1.20
date	2007.05.15.19.19.22;	author ashatalin;	state Exp;
branches;
next	1.19;
commitid	43d3464a07b84567;

1.19
date	2007.05.08.12.14.58;	author ashatalin;	state Exp;
branches;
next	1.18;
commitid	3985464069c14567;

1.18
date	2007.04.24.18.22.42;	author ashatalin;	state Exp;
branches;
next	1.17;
commitid	1456462e4af04567;

1.17
date	2007.04.18.17.34.28;	author ashatalin;	state Exp;
branches;
next	1.16;
commitid	2e44462656a24567;

1.16
date	2007.04.17.12.46.11;	author dstadnik;	state Exp;
branches;
next	1.15;
commitid	46154624c1914567;

1.15
date	2007.04.13.14.29.11;	author dstadnik;	state Exp;
branches;
next	1.14;
commitid	78d4461f93b74567;

1.14
date	2007.04.13.13.51.27;	author dstadnik;	state Exp;
branches;
next	1.13;
commitid	23cc461f8ade4567;

1.13
date	2007.04.13.13.44.44;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	2acb461f894b4567;

1.12
date	2007.04.13.13.00.16;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	4863461f7ee04567;

1.11
date	2007.04.13.12.33.17;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	53a7461f788c4567;

1.10
date	2007.04.12.14.15.23;	author dstadnik;	state Exp;
branches;
next	1.9;
commitid	7d7a461e3efb4567;

1.9
date	2007.04.11.13.03.51;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	713c461cdcb54567;

1.8
date	2007.04.11.11.06.07;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	483e461cc11f4567;

1.7
date	2007.04.04.19.45.47;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	216d4614006a4567;

1.6
date	2007.04.04.11.18.20;	author bblajer;	state Exp;
branches;
next	1.5;
commitid	2664461389794567;

1.5
date	2007.04.03.19.28.21;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	24744612aad14567;

1.4
date	2007.03.23.09.27.29;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	6f4346039d7f4567;

1.3
date	2007.03.19.17.00.00;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	244b45fec1904567;

1.2
date	2007.03.15.16.11.54;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	620045f9703f4567;

1.1
date	2007.02.01.11.51.44;	author dstadnik;	state Exp;
branches;
next	;
commitid	dd445c1d44e4567;


desc
@@


1.27
log
@[243151] mgolubev - explicit source/target for links
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
 
«REM»
	This template should be called only for non-design nodes (modelFacet != null) 
	because *ItemSemanticEditPolicy responsible for dealing with semantic model 
	elements and meaningless (should not be generated) for pure design nodes.   
«ENDREM»
 
«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«EXTENSION xpt::diagram::editpolicies::Utils»

«DEFINE NodeItemSemanticEditPolicy FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::copyright FOR getDiagram().editorGen-»
package «getDiagram().editPoliciesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «itemSemanticEditPolicyClassName» extends «getDiagram().getBaseItemSemanticEditPolicyQualifiedClassName()» {

	«EXPAND xpt::diagram::editpolicies::BaseItemSemanticEditPolicy::defaultConstructor-»

	«EXPAND xpt::diagram::editpolicies::childContainerCreateCommand::childContainerCreateCommand FOR childNodes-»

	«EXPAND getDestroyElementCommand-»
	«IF hasChildrenOrCompartments()-»
		«EXPAND addDestroyChildNodesCommand-»
	«ENDIF-»
	«EXPAND xpt::diagram::editpolicies::linkCommands::linkCommands-»

	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE getDestroyElementCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getDestroyElementCommand(org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest req) {
	org.eclipse.gef.commands.CompoundCommand cc = getDestroyEdgesCommand();
	«IF hasChildrenOrCompartments()-»
	addDestroyChildNodesCommand(cc);
	«ENDIF-»
	addDestroyShortcutsCommand(cc);
	«EXPAND destroySemanticElement-»
	return cc.unwrap();
}
«ENDDEFINE»

«DEFINE destroySemanticElement FOR gmfgen::GenNode-»
	«EXPAND fixElementToDeleteIfShortcut-»
cc.add(getGEFWrapper(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand(req)));
«ENDDEFINE»

«DEFINE addDestroyChildNodesCommand FOR gmfgen::GenNode-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected void addDestroyChildNodesCommand(org.eclipse.gef.commands.CompoundCommand cmd) {
		org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
		org.eclipse.emf.ecore.EAnnotation annotation = view.getEAnnotation("Shortcut"); «EXPAND xpt::Common::nonNLS»
		if (annotation != null) {
			return;
		}
		for (java.util.Iterator it = view.getChildren().iterator(); it.hasNext();) {
			org.eclipse.gmf.runtime.notation.Node node = (org.eclipse.gmf.runtime.notation.Node) it.next();
			switch («EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall FOR getDiagram()»(node)) {
			«EXPAND destroyChildNodes("node")-»
			«IF !compartments.isEmpty()-»
				«FOREACH compartments AS compartment-»
			«EXPAND xpt::Common::caseVisualID FOR compartment»
				for (java.util.Iterator cit = node.getChildren().iterator(); cit.hasNext();) {
					org.eclipse.gmf.runtime.notation.Node cnode = (org.eclipse.gmf.runtime.notation.Node) cit.next();
					switch («EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall FOR getDiagram()»(cnode)) {
					«EXPAND destroyChildNodes("cnode") FOR compartment-»
					}
				}
				break;
				«ENDFOREACH-»
			«ENDIF-»
			}
		}
	}
«ENDDEFINE»

«DEFINE destroyChildNodes(String nodeVar) FOR gmfgen::GenChildContainer-»
	«FOREACH childNodes AS childNode-»
	«EXPAND xpt::Common::caseVisualID FOR childNode»
		cmd.add(getDestroyElementCommand(«nodeVar»));
		break;
	«ENDFOREACH-»
«ENDDEFINE»


«DEFINE fixElementToDeleteIfShortcut FOR gmfgen::GenTopLevelNode-»
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
	if (view.getEAnnotation("Shortcut") != null) { «EXPAND xpt::Common::nonNLS»
		req.setElementToDestroy(view);
	}
«ENDDEFINE»

«REM»Shortcuts supported only for top-level elements«ENDREM»
«DEFINE fixElementToDeleteIfShortcut FOR gmfgen::GenNode»«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenNode»«ENDDEFINE»
@


1.26
log
@[234562] - Adding child elements into a shortcut causes stack overflow
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d39 1
a39 1
	«EXPAND xpt::diagram::editpolicies::linkCommands::linkCommands(getDiagram()) FOR modelFacet-»
@


1.25
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d30 3
@


1.24
log
@[192464] - Convert /policies/CompartmentItemSemapticEditPolicy and DiagramItemSemanticEditPolicy .javajet template to xpand
@
text
@d19 1
a19 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.23
log
@addDestroyShortcutsCommand moved to BaseItemSemanticEditPolicy
@
text
@d30 1
a30 4
	«IF childNodes.size() > 0-»

		«EXPAND xpt::diagram::editpolicies::childContainerCreateCommand::childContainerCreateCommand FOR childNodes-»
	«ENDIF-»
@


1.22
log
@[189594] - Exception Semantic Refresh failed
Deleting shortcuts on removing "original" element.
@
text
@a38 2
	
	«EXPAND addDestroyShortcutsCommand-»
a62 17
«DEFINE addDestroyShortcutsCommand FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
private void addDestroyShortcutsCommand(org.eclipse.gef.commands.CompoundCommand command) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
	if (view.getEAnnotation("Shortcut") != null) { «EXPAND xpt::Common::nonNLS»
		return;
	}
	for (java.util.Iterator it = view.getDiagram().getChildren().iterator(); it.hasNext();) {
		org.eclipse.gmf.runtime.notation.View nextView = (org.eclipse.gmf.runtime.notation.View) it.next();
		if (nextView.getEAnnotation("Shortcut") == null || !nextView.isSetElement() || nextView.getElement() != view.getElement()) { «EXPAND xpt::Common::nonNLS»
			continue;
		}
		command.add(getDestroyElementCommand(nextView));
	}
}
«ENDDEFINE»

@


1.21
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d39 2
d54 1
d65 17
@


1.20
log
@Replacing static method calls with templates.
@
text
@d19 1
a19 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.19
log
@Updating copyrights.
@
text
@d73 1
a73 1
			switch («getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(node)) {
d80 1
a80 1
					switch («getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(cnode)) {
@


1.18
log
@DiagramCanonicalEditpolicy template is in XPAND now.
[182556] - getSemanticChildrenList.jetinc generates empty switch statement causing generation to fail
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.17
log
@Rewriting template to xpt

[170079] - Do not generate unnecessary CanonicalEditPolicies in case if phantoms are allowed for diagram
@
text
@d77 1
a77 1
			case «compartment.getEditPartQualifiedClassName()».VISUAL_ID:
d94 1
a94 1
	case «childNode.getEditPartQualifiedClassName()».VISUAL_ID:
@


1.16
log
@[181778] Generate standalone creation commands for ref links
@
text
@d36 1
a36 1
	«IF hasChildren()-»
d49 1
a49 1
	«IF hasChildren()-»
@


1.15
log
@avoid extra confirmations
@
text
@d31 1
a31 1
	
d40 1
a40 1
	
@


1.14
log
@respect shortcuts when removing element
@
text
@d48 1
a48 1
	org.eclipse.gef.commands.CompoundCommand cc = getDestroyEdgesCommand(req.isConfirmationRequired());
d50 1
a50 1
	addDestroyChildNodesCommand(cc, req.isConfirmationRequired());
d65 1
a65 1
	protected void addDestroyChildNodesCommand(org.eclipse.gef.commands.CompoundCommand cmd, boolean confirm) {
d95 1
a95 1
		cmd.add(getDestroyElementCommand(«nodeVar», confirm));
@


1.13
log
@renamed getMSLWrapper into getGEFWrapper to better reflect what's going on and to avoid unknown acronym
@
text
@d67 4
@


1.12
log
@instead of overriding a method, pass element to be removed as part of request.
@
text
@d59 1
a59 1
cc.add(getMSLWrapper(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand(req)));
@


1.11
log
@with 136738 fixed a year ago, eObject is removed from resource by superclass's implementation
@
text
@d58 2
a59 7
	«LET !{}.add(this).typeSelect(gmfgen::GenTopLevelNode).isEmpty() AS isTopLevel-»
cc.add(getMSLWrapper(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand(req) «IF isTopLevel»{
		«IF isTopLevel-»
			«EXPAND destroyShortcut-»
		«ENDIF-»
}«ENDIF»));
	«ENDLET-»
a95 2
«REM»Method in anonymous inner class - should not be prefixed with @@generated javadoc«ENDREM»
«DEFINE destroyShortcut FOR gmfgen::GenTopLevelNode-»
d97 1
a97 1
protected org.eclipse.emf.ecore.EObject getElementToDestroy() {
d99 2
a100 3
	org.eclipse.emf.ecore.EAnnotation annotation = view.getEAnnotation("Shortcut"); «EXPAND xpt::Common::nonNLS»
	if (annotation != null) {
		return view;
a101 2
	return super.getElementToDestroy();
}		
d104 2
a105 2
«REM»Chortcuts supported only for top-level elements«ENDREM»
«DEFINE destroyShortcut FOR gmfgen::GenNode»«ENDDEFINE»
@


1.10
log
@[177795] deletion of diagram node may corrupt model
@
text
@d59 1
a59 1
cc.add(getMSLWrapper(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand(req) «IF isTopLevel || modelFacet.isPhantomElement()»{
a62 4
		«IF modelFacet.isPhantomElement()-»
			«EXPAND destroyPhantomElement-»
		«ENDIF-»
			
a116 15
«REM»Method in anonimous inner class - should not be prefixed with @@generated javadoc«ENDREM»
«DEFINE destroyPhantomElement FOR gmfgen::GenNode-»

protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(org.eclipse.core.runtime.IProgressMonitor progressMonitor, org.eclipse.core.runtime.IAdaptable info) throws org.eclipse.core.commands.ExecutionException {
	org.eclipse.emf.ecore.EObject eObject = getElementToDestroy();
	boolean removeFromResource = eObject.eContainer() == null;
	org.eclipse.gmf.runtime.common.core.command.CommandResult result = super.doExecuteWithResult(progressMonitor, info);
	org.eclipse.emf.ecore.resource.Resource resource = eObject.eResource();
	if (removeFromResource && resource != null) {
		resource.getContents().remove(eObject);
	}
	return result;
}
«ENDDEFINE»

@


1.9
log
@remove extra s letter
@
text
@d20 3
d36 3
d49 3
d71 35
a105 1
«REM»Method in anonimous inner class - should not be prefixed with @@generated javadoc«ENDREM»
@


1.8
log
@move common code to base editpolicy
@
text
@d42 1
a42 1
	org.eclipse.gef.commands.CompoundCommand cc = getDestroyEdgesCommands(req.isConfirmationRequired());
@


1.7
log
@Removing unnecessary extensions
@
text
@d42 1
a42 2
	org.eclipse.gef.commands.CompoundCommand cc = new org.eclipse.gef.commands.CompoundCommand();
	«EXPAND destroyAllLinks-»
d44 1
a44 14
	return cc;
}
«ENDDEFINE»

«DEFINE destroyAllLinks FOR gmfgen::GenNode-»
java.util.Collection allEdges = new java.util.ArrayList();
org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
allEdges.addAll(view.getSourceEdges());
allEdges.addAll(view.getTargetEdges());
for (java.util.Iterator it = allEdges.iterator(); it.hasNext();) {
	org.eclipse.gmf.runtime.notation.Edge nextEdge = (org.eclipse.gmf.runtime.notation.Edge) it.next();
	org.eclipse.gef.EditPart nextEditPart = (org.eclipse.gef.EditPart) getHost().getViewer().getEditPartRegistry().get(nextEdge);
	org.eclipse.gmf.runtime.diagram.ui.requests.EditCommandRequestWrapper editCommandRequest = new org.eclipse.gmf.runtime.diagram.ui.requests.EditCommandRequestWrapper(new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest(((«getEditPartQualifiedClassName()») getHost()).getEditingDomain(), req.isConfirmationRequired()), java.util.Collections.EMPTY_MAP);
	cc.add(nextEditPart.getCommand(editCommandRequest));
@


1.6
log
@User should be able to configure whether NON-NLS markers are shown or not
@
text
@a19 1
«EXTENSION xpt::diagram::editpolicies::Utils»
@


1.5
log
@[177758] - Link from a node to a link is not possible
@
text
@d82 1
a82 1
	org.eclipse.emf.ecore.EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
@


1.4
log
@[114348] add command to reorient ref based links
@
text
@a19 1
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
a20 1
«EXTENSION xpt::GenModelUtils»
d34 2
a35 9
	«IF !getAllPotentialLinks(this).isEmpty()-»
		«EXPAND createLinks-»
	«ENDIF-»
	«IF getReroutableLinks(this).size() > 0-»
		«EXPAND getReorientLinkCommand-»
	«ENDIF-»
	«IF getReroutableRefLinks(this).size() > 0-»
		«EXPAND getReorientRefLinkCommand-»
	«ENDIF-»
a107 196
«REM»
 * Start  		start of link creation. 
 *				User click to this editpart and start dragging with link tool.
 * Complete 	end of the command
 *				User points to this editpart as a link target and release mouse button.
 *
 * Outgoing 	the node is link source
 *				This element could be a source for this type of link.
 * Incoming		the node is link destination
 *				This element could be a target for this type of link.
«ENDREM»

«DEFINE createLinks FOR gmfgen::GenNode-»

	«EXPAND getCreateRelationshipCommand-»

	«EXPAND createLinkCommands(this) FOREACH getAllPotentialLinks(this)-»

«ENDDEFINE»

«DEFINE getCreateRelationshipCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getCreateRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«EXPAND callLinkCommands(this) FOREACH getAllPotentialLinks(this)-»
	return super.getCreateRelationshipCommand(req);
}
«ENDDEFINE»

«DEFINE callLinkCommands(gmfgen::GenNode node) FOR gmfgen::GenLink-»
if («getDiagram().getElementTypesQualifiedClassName()».«getUniqueIdentifier()» == req.getElementType()) {
	return req.getTarget() == null ? «IF createStartLinkCommand(this, node)-»
		«EXPAND startLinkCommandCreatorName(node)»(req)«ELSE-»
		null«ENDIF-»
	: «IF createCompleteLinkCommand(this, node)-»
	 	«EXPAND completeLinkCommandCreatorName(node)»(req)«ELSE-»
		null«ENDIF-»
;
}
«ENDDEFINE»

«DEFINE createLinkCommands(gmfgen::GenNode node) FOR gmfgen::GenLink-»
	«IF createStartLinkCommand(this, node)-»
	
		«EXPAND createStartLinkCommand(node)-»
	«ENDIF-»
	«IF createCompleteLinkCommand(this, node)-»
	
		«EXPAND createCompleteLinkCommand(node)-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE createStartLinkCommand(gmfgen::GenNode node) FOR gmfgen::GenLink-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command «EXPAND startLinkCommandCreatorName(node) FOR this»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«EXPAND defineSourceTargetAndCheckConstraints(createStartIncomingLinkCommand(this, node), false)-»
«REM»create always executable command«ENDREM»«-»
	return new org.eclipse.gef.commands.Command() {
	};
}
«ENDDEFINE»

«DEFINE createCompleteLinkCommand(gmfgen::GenNode node) FOR gmfgen::GenLink-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command «EXPAND completeLinkCommandCreatorName(node) FOR this»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«EXPAND defineSourceTargetAndCheckConstraints(createCompleteOutgoingLinkCommand(this, node), true)-»
	«EXPAND linkCreateCommand FOR modelFacet-»
}
«ENDDEFINE»

«DEFINE linkCreateCommand FOR gmfgen::TypeLinkModelFacet-»
«REM»create semantic command«ENDREM»«-»
if (req.getContainmentFeature() == null) {
	req.setContainmentFeature(«EXPAND xpt::Common::metaFeatureAccessor FOR containmentMetaFeature»);
}
return getMSLWrapper(new «getCreateCommandQualifiedClassName()»(req, «EXPAND linkCreationParameters(false, true)»));
«ENDDEFINE»

«DEFINE linkCreateCommand FOR gmfgen::FeatureLinkModelFacet-»
«REM»create semantic command«ENDREM»«-»
org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest setReq = new org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest(sourceEObject, «getQualifiedPackageInterfaceName(metaFeature.genClass.genPackage)».eINSTANCE.get«getFeatureAccessorName(metaFeature)»(), target);
return getMSLWrapper(new org.eclipse.gmf.runtime.emf.type.core.commands.SetValueCommand(setReq));
«ENDDEFINE»

«DEFINE linkCreateCommand FOR gmfgen::LinkModelFacet-»
	«EXPAND incorrectLinkModelFacet-»
«ENDDEFINE»

«DEFINE defineSourceTargetAndCheckConstraints(boolean reversedRequest, boolean isCompleteCommand) FOR gmfgen::GenLink-»
	«EXPAND defineLinkSourceTarget(reversedRequest, isCompleteCommand)-»
	«EXPAND definionContainer FOR modelFacet-»
	if(!«getDiagram().getLinkCreationConstraintsQualifiedClassName()».canCreate«getUniqueIdentifier()»(«EXPAND linkCreationParameters(reversedRequest, isCompleteCommand) FOR modelFacet»)) {
		return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;			
	}
«ENDDEFINE»

«DEFINE linkCreationParameters(boolean reversed, boolean isComplete) FOR gmfgen::TypeLinkModelFacet»«IF null != sourceMetaFeature»container, «ENDIF»«EXPAND linkCreationSourceTargetParameters(reversed, isComplete)»«ENDDEFINE»

«DEFINE linkCreationParameters(boolean reversed, boolean isComplete) FOR gmfgen::FeatureLinkModelFacet»«EXPAND linkCreationSourceTargetParameters(reversed, isComplete)»«ENDDEFINE»

«DEFINE linkCreationSourceTargetParameters(boolean reversed, boolean isComplete) FOR gmfgen::LinkModelFacet-»
«IF !reversed || isComplete»source«ELSE»null«ENDIF», «IF reversed || isComplete»target«ELSE»null«ENDIF»«ENDDEFINE»

«DEFINE linkCreationParameters(boolean reversed, boolean isComplete) FOR gmfgen::LinkModelFacet»
	«EXPAND incorrectLinkModelFacet-»
«ENDDEFINE»

«DEFINE defineLinkSourceTarget(boolean reversedRequest, boolean isCompleteCommand) FOR gmfgen::GenLink-»
	«LET !reversedRequest || isCompleteCommand AS checkSource-»
		«LET reversedRequest || isCompleteCommand AS checkTarget-»
			«IF checkSource-»
org.eclipse.emf.ecore.EObject sourceEObject = req.get«IF reversedRequest»Target«ELSE»Source«ENDIF»();
			«ENDIF-»
			«IF checkTarget-»
org.eclipse.emf.ecore.EObject targetEObject = req.get«IF reversedRequest»Source«ELSE»Target«ENDIF»();
			«ENDIF-»
if («IF checkSource»false == sourceEObject instanceof «getQualifiedInterfaceName(modelFacet.getSourceType())»«ENDIF»«IF checkSource && checkTarget» || «ENDIF»«IF checkTarget»false == targetEObject instanceof «getQualifiedInterfaceName(modelFacet.getTargetType())»«ENDIF») {
	return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
}
			«IF checkSource-»
«getQualifiedInterfaceName(modelFacet.getSourceType())» source = («getQualifiedInterfaceName(modelFacet.getSourceType())») sourceEObject;
			«ENDIF-»
			«IF checkTarget-»
«getQualifiedInterfaceName(modelFacet.getTargetType())» target = («getQualifiedInterfaceName(modelFacet.getTargetType())») targetEObject;
			«ENDIF-»
		«ENDLET-»
	«ENDLET-»
«ENDDEFINE»

«DEFINE definionContainer FOR gmfgen::TypeLinkModelFacet-»
	«IF null != sourceMetaFeature-»
«getQualifiedInterfaceName(containmentMetaFeature.genClass)» container = («getQualifiedInterfaceName(containmentMetaFeature.genClass)») getRelationshipContainer(source, «getQualifiedPackageInterfaceName(containmentMetaFeature.genClass.genPackage)».eINSTANCE.get«getClassifierAccessorName(containmentMetaFeature.genClass)»(), req.getElementType());
if (container == null) {
	return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
}
	«ENDIF-»
«ENDDEFINE»

«DEFINE definionContainer FOR gmfgen::FeatureLinkModelFacet»«ENDDEFINE»

«DEFINE definionContainer FOR gmfgen::LinkModelFacet-»
	«EXPAND incorrectLinkModelFacet-»
«ENDDEFINE»

«DEFINE defineLinkContainer FOR gmfgen::GenLink-»
«ENDDEFINE»

«REM»Should be called only if createStartLinkCommand(this, node) == true«ENDREM»
«DEFINE startLinkCommandCreatorName(gmfgen::GenNode node) FOR gmfgen::GenLink»getCreateStart«IF createStartOutgoingLinkCommand(this, node)»Outgoing«ELSEIF createStartIncomingLinkCommand(this, node)»Incoming«ENDIF»«getUniqueIdentifier()»Command«ENDDEFINE»

«REM»Should be called only if createCompleteLinkCommand(this, node) == true«ENDREM»
«DEFINE completeLinkCommandCreatorName(gmfgen::GenNode node) FOR gmfgen::GenLink»getCreateComplete«IF createCompleteIncomingLinkCommand(this, node)»Incoming«ELSEIF createCompleteOutgoingLinkCommand(this, node)»Outgoing«ENDIF»«getUniqueIdentifier()»Command«ENDDEFINE»

«DEFINE incorrectLinkModelFacet FOR gmfgen::LinkModelFacet-»
	«ERROR "Unrecognized link model facet: " + this-»
«ENDDEFINE»

«DEFINE getReorientLinkCommand FOR gmfgen::GenNode»

	/**
	 * Returns command to reorient EClass based link. New link target or source
	 * should be the domain model element associated with this node.
	 * 
	 * @@generated
	 */
	protected org.eclipse.gef.commands.Command getReorientRelationshipCommand(
			org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest req) {
		switch (getVisualID(req)) {
		«FOREACH getReroutableLinks(this) AS link-»
			case «link.getEditPartQualifiedClassName()».VISUAL_ID:
				return getMSLWrapper(new «link.getReorientCommandQualifiedClassName()»(req));
		«ENDFOREACH-»
		}
		return super.getReorientRelationshipCommand(req);
	}
«ENDDEFINE»

«DEFINE getReorientRefLinkCommand FOR gmfgen::GenNode»

	/**
	 * Returns command to reorient EReference based link. New link target or source
	 * should be the domain model element associated with this node.
	 * 
	 * @@generated
	 */
	protected org.eclipse.gef.commands.Command getReorientReferenceRelationshipCommand(
			org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest req) {
		switch (getVisualID(req)) {
		«FOREACH getReroutableRefLinks(this) AS link-»
			case «link.getEditPartQualifiedClassName()».VISUAL_ID:
				return getMSLWrapper(new «link.getReorientCommandQualifiedClassName()»(req));
		«ENDFOREACH-»
		}
		return super.getReorientReferenceRelationshipCommand(req);
	}
«ENDDEFINE»

@


1.3
log
@use visual ids do distinct links
@
text
@d42 3
d276 1
a276 1
	 * Returns command to reorient link. New link target or source
d283 1
d285 3
a287 2
		if («link.getEditPartQualifiedClassName()».VISUAL_ID == «getDiagram().getVisualIDRegistryQualifiedClassName()».getLinkWithClassVisualID(req.getRelationship())) {
			return getMSLWrapper(new «link.getReorientCommandQualifiedClassName()»(req));
d289 18
d308 2
a309 1
		return super.getReorientRelationshipCommand(req);
@


1.2
log
@[114348] Generate command to reorient link
@
text
@d281 1
a281 2
		«FOREACH {link.modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).metaClass AS linkClass-»
		if (req.getRelationship() instanceof «getQualifiedInterfaceName(linkClass)») {
a284 1
		«ENDFOREACH-»
@


1.1
log
@editpolicy templates should be located in one folder
@
text
@d34 1
a34 1
	
d39 3
d270 22
a291 1
«DEFINE additions FOR gmfgen::GenNode»«ENDDEFINE»@

