head	1.13;
access;
symbols
	v20081022-1925:1.13
	v20081015-1925:1.13
	v20081008-1925:1.13
	v20081001-1925:1.13
	v20080930-1130:1.13
	v20080926-1245:1.13
	v20080924-1925:1.13
	v20080917-1925:1.13
	v20080911-1728:1.13
	v20080910-1520:1.13
	v20080903-1520:1.13
	v20080827-1520:1.13
	v20080813-1520:1.12
	v20080806-1520:1.12
	v20080722-1827:1.12
	v20080718-1731:1.12
	v20080716-1600:1.12
	v20080716-1642:1.12
	R2_1_maintenance:1.12.0.2
	Root_R2_1_maintenance:1.12
	R2_1_0:1.12
	v20080610-1132:1.12
	v20080603-1553:1.12
	v20080528-1052:1.12
	v20080521:1.12
	v20080516-1543:1.12
	v20080516-1143:1.12
	v20080512-1200:1.12
	v20080508-2000:1.12
	v20080507-1326:1.12
	v20080503-1740:1.11
	v20080501-1739:1.11
	v20080425-1959:1.11
	v20080417-1610:1.11
	v20080411-0411:1.11
	v20080404-1111:1.11
	v20080322-0000:1.11
	v20080222-1200:1.11
	v20080215-1500:1.11
	v20080207-0207:1.11
	v20071222-1111:1.11
	v20071214-1111:1.11
	v20071130-1111:1.11
	v20071124-0000:1.11
	v20071112-0000:1.11
	v20071108-0000:1.11
	v20071003-0000:1.11
	v20070928-0000:1.11
	v20070921-0000:1.11
	v20070915-0000:1.11
	v20070903-0000:1.11
	v20070809-0000:1.11
	R2_0_maintenance:1.11.0.2
	R2_0:1.11
	R4_20:1.11
	v20070621-0000:1.11
	RC3_20:1.11
	v20070614-1400:1.11
	v20070608-1300:1.11
	v20070605-1400:1.11
	v20070601-1400:1.11
	v20070525-1500:1.11
	v20070520-1200:1.11
	v20070518-1300:1.10
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.5
	v20070413-1300:1.2
	v20070405-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.13
date	2008.08.22.15.20.15;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	1abb48aed9234567;

1.12
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	39124821b4de4567;

1.11
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	2591464e17d14567;

1.10
date	2007.05.08.12.14.58;	author ashatalin;	state Exp;
branches;
next	1.9;
commitid	3985464069c14567;

1.9
date	2007.04.24.18.22.42;	author ashatalin;	state Exp;
branches;
next	1.8;
commitid	1456462e4af04567;

1.8
date	2007.04.24.15.37.47;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	4e6462e244a4567;

1.7
date	2007.04.24.11.49.06;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	7f1d462deeb14567;

1.6
date	2007.04.23.14.04.58;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	4a11462cbd094567;

1.5
date	2007.04.19.11.24.57;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	7d83462751894567;

1.4
date	2007.04.17.12.46.11;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	46154624c1914567;

1.3
date	2007.04.13.13.44.44;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	2acb461f894b4567;

1.2
date	2007.04.11.08.10.24;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	725b461c97d64567;

1.1
date	2007.04.03.19.28.21;	author ashatalin;	state Exp;
branches;
next	;
commitid	24744612aad14567;


desc
@@


1.13
log
@[243151] mgolubev - explicit source/target for links
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 *    Dmitry Stadnik (Borland) - creation logic was moved in commands
 *    Michael Golubev (Borland) - [243151] explicit source/target for links
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::editpolicies::Utils»
«EXTENSION xpt::GenModelUtils»

«REM»
 * Start  		start of link creation. 
 *				User click to this editpart and start dragging with link tool.
 * Complete 	end of the command
 *				User points to this editpart as a link target and release mouse button.
 *
 * Outgoing 	the node is link source
 *				This element could be a source for this type of link.
 * Incoming		the node is link destination
 *				This element could be a target for this type of link.
 *
 * Parameters:
 *
 * 	diagram 	GenDiagram used to collect all defined links
 *
 *	this		Instance of GenLinkEnd for the element link could be creates to/from.
 *				This could be GenNode or GenLink in case of links to links, 
 *              in the latter case it is assumed that its a TypeLink (so its model facet is LinkTypeModelFacet), 
 *              because RefLinks don't have underlying semantic identity   
 *
«ENDREM»

«DEFINE linkCommands FOR gmfgen::GenLinkEnd-»
	«IF getAllPotentialLinks(this).size() > 0-»
		«EXPAND createLinkCommands -»
	«ENDIF-»
	«IF getReroutableTypeLinks(this).size() > 0-»
		«EXPAND reorientTypeLinkCommands -»
	«ENDIF-»
	«IF getReroutableRefLinks(this).size() > 0-»
		«EXPAND reorientRefLinkCommands -»
	«ENDIF-»
«ENDDEFINE»

«DEFINE createLinkCommands FOR gmfgen::GenLinkEnd-»

«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	org.eclipse.gef.commands.Command command = req.getTarget() == null ?
			getStartCreateRelationshipCommand(req) : getCompleteCreateRelationshipCommand(req);
	return command != null ? command : super.getCreateRelationshipCommand(req);
}

«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getStartCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«EXPAND startLinkCommands(this) FOREACH getAllPotentialLinks(this)-»
	return null;
}

«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getCompleteCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«EXPAND completeLinkCommands(this) FOREACH getAllPotentialLinks(this)-»
	return null;
}
«ENDDEFINE»

«DEFINE startLinkCommands(gmfgen::GenLinkEnd linkEnd) FOR gmfgen::GenLink-»
if («getDiagram().getElementTypesQualifiedClassName()».«getUniqueIdentifier()» == req.getElementType()) {
	«IF createStartLinkCommand(this, linkEnd)-»
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req,
		«IF createStartIncomingLinkCommand(this, linkEnd)-»
			req.getTarget(), req.getSource()
		«ELSE-»
			req.getSource(), req.getTarget()
		«ENDIF-»
	));
	«ELSE-»
	return null;
	«ENDIF-»
}
«ENDDEFINE»

«DEFINE completeLinkCommands(gmfgen::GenLinkEnd linkEnd) FOR gmfgen::GenLink-»
if («getDiagram().getElementTypesQualifiedClassName()».«getUniqueIdentifier()» == req.getElementType()) {
	«IF createCompleteLinkCommand(this, linkEnd)-»
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req,
		«IF createCompleteOutgoingLinkCommand(this, linkEnd)-»
			req.getTarget(), req.getSource()
		«ELSE-»
			req.getSource(), req.getTarget()
		«ENDIF-»
	));
	«ELSE-»
	return null;
	«ENDIF-»
}
«ENDDEFINE»

«DEFINE reorientTypeLinkCommands FOR gmfgen::GenLinkEnd-»

«EXPAND xpt::Common::generatedMemberComment(
	"Returns command to reorient EClass based link. New link target or source\n" +
	"should be the domain model element associated with this node.\n"
)»
protected org.eclipse.gef.commands.Command getReorientRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest req) {
	switch (getVisualID(req)) {
	«EXPAND reorientLinkCommand FOREACH getReroutableTypeLinks(this)-»
	}
	return super.getReorientRelationshipCommand(req);
}
«ENDDEFINE»

«DEFINE reorientRefLinkCommands FOR gmfgen::GenLinkEnd-»

«EXPAND xpt::Common::generatedMemberComment(
	"Returns command to reorient EReference based link. New link target or source\n" +
	"should be the domain model element associated with this node.\n"
)»
protected org.eclipse.gef.commands.Command getReorientReferenceRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest req) {
	switch (getVisualID(req)) {
	«EXPAND reorientLinkCommand FOREACH getReroutableRefLinks(this)-»
	}
	return super.getReorientReferenceRelationshipCommand(req);
}
«ENDDEFINE»

«DEFINE reorientLinkCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::caseVisualID»
	return getGEFWrapper(new «getReorientCommandQualifiedClassName()»(req));
«ENDDEFINE»
@


1.12
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d12 1
d35 4
a38 2
 *	this		Instance of TypeModelFacet for the element link could be creates to/from.
 *				This could be TypeModelFacet or TypeLinkModelFacet in case of links to links.
d42 3
a44 3
«DEFINE linkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
	«IF getAllPotentialLinks(diagram).size() > 0-»
		«EXPAND createLinkCommands(diagram)-»
d46 2
a47 2
	«IF getReroutableTypeLinks(diagram).size() > 0-»
		«EXPAND reorientTypeLinkCommands(diagram)-»
d49 2
a50 2
	«IF getReroutableRefLinks(diagram).size() > 0-»
		«EXPAND reorientRefLinkCommands(diagram)-»
d54 1
a54 1
«DEFINE createLinkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
d67 1
a67 1
	«EXPAND startLinkCommands(this) FOREACH getAllPotentialLinks(diagram)-»
d74 1
a74 1
	«EXPAND completeLinkCommands(this) FOREACH getAllPotentialLinks(diagram)-»
d79 1
a79 1
«DEFINE startLinkCommands(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»
d81 1
a81 1
	«IF createStartLinkCommand(typeModelFacet)-»
d83 1
a83 1
		«IF createStartIncomingLinkCommand(typeModelFacet)-»
d95 1
a95 1
«DEFINE completeLinkCommands(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»
d97 1
a97 1
	«IF createCompleteLinkCommand(typeModelFacet)-»
d99 1
a99 1
		«IF createCompleteOutgoingLinkCommand(typeModelFacet)-»
d111 1
a111 1
«DEFINE reorientTypeLinkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
d120 1
a120 1
	«EXPAND reorientLinkCommand FOREACH getReroutableTypeLinks(diagram)-»
d126 1
a126 1
«DEFINE reorientRefLinkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
d135 1
a135 1
	«EXPAND reorientLinkCommand FOREACH getReroutableRefLinks(diagram)-»
@


1.11
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d14 1
a14 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.10
log
@Updating copyrights.
@
text
@d14 1
a14 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.9
log
@DiagramCanonicalEditpolicy template is in XPAND now.
[182556] - getSemanticChildrenList.jetinc generates empty switch statement causing generation to fail
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.8
log
@do not create additional request
@
text
@d139 1
a139 1
case «getEditPartQualifiedClassName()».VISUAL_ID:
@


1.7
log
@[180702] Move logic from semantic edit policy into creation commands
@
text
@d79 1
d81 3
a83 3
	req = new org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest(
			req.getEditingDomain(), req.getContainer(), req.getTarget(), req.getSource(),
			req.getElementType(), req.getContainmentFeature());
d85 1
a85 1
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req));
d95 1
d97 3
a99 3
	req = new org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest(
			req.getEditingDomain(), req.getContainer(), req.getTarget(), req.getSource(),
			req.getElementType(), req.getContainmentFeature());
d101 1
a101 1
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req));
@


1.6
log
@[180702] Move logic from semantic edit policy into creation commands
@
text
@d11 1
a18 5
«DEFINE linkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
	«EXPAND createLinks(diagram)-»
	«EXPAND getReorientLinkCommands(diagram) -»
«ENDDEFINE»

d39 6
a44 10
«DEFINE createLinks(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
	«IF !getAllPotentialLinks(diagram).isEmpty()-»
		«EXPAND getCreateRelationshipCommand(diagram)-»
		«EXPAND createLinkCommands(this) FOREACH getAllPotentialLinks(diagram)-»
	«ENDIF»
«ENDDEFINE»

«DEFINE getReorientLinkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
	«IF getReroutableLinks(diagram).size() > 0-»
		«EXPAND getReorientTypeLinkCommand(diagram)-»
d47 1
a47 1
		«EXPAND getReorientRefLinkCommand(diagram)-»
d51 1
a51 1
«DEFINE getCreateRelationshipCommand(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
d53 13
a65 4
	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getCreateRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«EXPAND callLinkCommands(this) FOREACH getAllPotentialLinks(diagram)-»
	return super.getCreateRelationshipCommand(req);
a66 1
«ENDDEFINE»
d68 5
a72 5
«DEFINE callLinkCommands(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»
if («getDiagram().getElementTypesQualifiedClassName()».«getUniqueIdentifier()» == req.getElementType()) {
	return req.getTarget() == null ?
		«IF createStartLinkCommand(typeModelFacet)»«EXPAND startLinkCommandCreatorName(typeModelFacet)»(req)«ELSE»null«ENDIF»:
		«IF createCompleteLinkCommand(typeModelFacet)»«EXPAND completeLinkCommandCreatorName(typeModelFacet)»(req)«ELSE»null«ENDIF»;
d76 2
a77 5
«DEFINE startLinkCommandCreatorName(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink»getCreateStart«IF createStartOutgoingLinkCommand(typeModelFacet)»Outgoing«ELSEIF createStartIncomingLinkCommand(typeModelFacet)»Incoming«ENDIF»«getUniqueIdentifier()»Command«ENDDEFINE»

«DEFINE completeLinkCommandCreatorName(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink»getCreateComplete«IF createCompleteIncomingLinkCommand(typeModelFacet)»Incoming«ELSEIF createCompleteOutgoingLinkCommand(typeModelFacet)»Outgoing«ENDIF»«getUniqueIdentifier()»Command«ENDDEFINE»

«DEFINE createLinkCommands(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»
d79 1
a79 12
		«EXPAND createStartLinkCommand(typeModelFacet)-»
	«ENDIF-»
	«IF createCompleteLinkCommand(typeModelFacet)-»
		«EXPAND createCompleteLinkCommand(typeModelFacet)-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE createStartLinkCommand(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»

	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command «EXPAND startLinkCommandCreatorName(typeModelFacet)»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«IF createStartIncomingLinkCommand(typeModelFacet)-»
d81 6
a86 1
			req.getEditingDomain(), req.getContainer(), req.getTarget(), req.getSource(), req.getElementType(), req.getContainmentFeature());
a87 1
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req));
d91 4
a94 5
«DEFINE createCompleteLinkCommand(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»

	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command «EXPAND completeLinkCommandCreatorName(typeModelFacet)»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«IF createCompleteOutgoingLinkCommand(typeModelFacet)-»
d96 6
a101 1
			req.getEditingDomain(), req.getContainer(), req.getTarget(), req.getSource(), req.getElementType(), req.getContainmentFeature());
a102 1
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req));
d106 1
a106 1
«DEFINE getReorientTypeLinkCommand(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
d108 6
a113 5
	«EXPAND xpt::Common::generatedMemberComment(
		"Returns command to reorient EClass based link. New link target or source\n" +
		"should be the domain model element associated with this node.\n"
	)»
protected org.eclipse.gef.commands.Command getReorientRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest req) {
d115 1
a115 1
	«EXPAND caseReorientCommand FOREACH getReroutableLinks(diagram)-»
d121 1
a121 1
«DEFINE getReorientRefLinkCommand(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
d123 6
a128 5
	«EXPAND xpt::Common::generatedMemberComment(
		"Returns command to reorient EReference based link. New link target or source\n" +
		"should be the domain model element associated with this node.\n"
	)»
protected org.eclipse.gef.commands.Command getReorientReferenceRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest req) {
d130 1
a130 1
	«EXPAND caseReorientCommand FOREACH getReroutableRefLinks(diagram)-»
d136 1
a136 1
«DEFINE caseReorientCommand FOR gmfgen::GenLink-»
@


1.5
log
@support reversed creation
@
text
@a44 1

a45 1

a51 1

a54 1

d60 1
a81 1

a84 1

d90 1
d93 1
a93 2
	«IF {modelFacet}.typeSelect(gmfgen::FeatureLinkModelFacet).size() > 0-»
		«IF createStartIncomingLinkCommand(typeModelFacet)-»
d96 1
a96 1
		«ENDIF-»
a97 6
	«ELSE-»
	«EXPAND defineSourceTargetAndCheckConstraints(createStartIncomingLinkCommand(typeModelFacet), false)-»
«REM»create always executable command«ENDREM»«-»
	return new org.eclipse.gef.commands.Command() {
	};
	«ENDIF-»
d102 1
d105 1
a105 2
	«IF {modelFacet}.typeSelect(gmfgen::FeatureLinkModelFacet).size() > 0-»
		«IF createCompleteOutgoingLinkCommand(typeModelFacet)-»
d108 1
a108 1
		«ENDIF-»
a109 4
	«ELSE-»
	«EXPAND defineSourceTargetAndCheckConstraints(createCompleteOutgoingLinkCommand(typeModelFacet), true)-»
	«EXPAND linkCreateCommand(this) FOR this.modelFacet-»
	«ENDIF-»
d113 1
a113 25
«DEFINE defineSourceTargetAndCheckConstraints(boolean reversedRequest, boolean isCompleteCommand) FOR gmfgen::GenLink-»
	«EXPAND defineLinkSourceTarget(reversedRequest, isCompleteCommand)-»
	«EXPAND defineContainer FOR modelFacet-»
	if(!«getDiagram().getLinkCreationConstraintsQualifiedClassName()».canCreate«getUniqueIdentifier()»(«EXPAND linkCreationParameters(reversedRequest, isCompleteCommand) FOR modelFacet»)) {
		return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;			
	}
«ENDDEFINE»

«DEFINE defineLinkSourceTarget(boolean reversed, boolean isComplete) FOR gmfgen::GenLink-»
	«IF checkSource(reversed, isComplete)-»
org.eclipse.emf.ecore.EObject sourceEObject = req.get«IF reversed»Target«ELSE»Source«ENDIF»();
	«ENDIF-»
	«IF checkTarget(reversed, isComplete)-»
org.eclipse.emf.ecore.EObject targetEObject = req.get«IF reversed»Source«ELSE»Target«ENDIF»();
	«ENDIF-»
if («IF checkSource(reversed, isComplete)»false == sourceEObject instanceof «getQualifiedInterfaceName(modelFacet.getSourceType())»«ENDIF»«IF checkSource(reversed, isComplete) && checkTarget(reversed, isComplete)» || «ENDIF»«IF checkTarget(reversed, isComplete)»false == targetEObject instanceof «getQualifiedInterfaceName(modelFacet.getTargetType())»«ENDIF») {
	return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
}
	«IF checkSource(reversed, isComplete)-»
«getQualifiedInterfaceName(modelFacet.getSourceType())» source = («getQualifiedInterfaceName(modelFacet.getSourceType())») sourceEObject;
	«ENDIF-»
	«IF checkTarget(reversed, isComplete)-»
«getQualifiedInterfaceName(modelFacet.getTargetType())» target = («getQualifiedInterfaceName(modelFacet.getTargetType())») targetEObject;
	«ENDIF-»
«ENDDEFINE»
a114 61
«DEFINE defineContainer FOR gmfgen::TypeLinkModelFacet-»
	«IF null != sourceMetaFeature-»
«getQualifiedInterfaceName(containmentMetaFeature.genClass)» container = («getQualifiedInterfaceName(containmentMetaFeature.genClass)») getRelationshipContainer(source, «getQualifiedPackageInterfaceName(containmentMetaFeature.genClass.genPackage)».eINSTANCE.get«getClassifierAccessorName(containmentMetaFeature.genClass)»(), req.getElementType());
if (container == null) {
	return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
}
	«ENDIF-»
«ENDDEFINE»

«DEFINE defineContainer FOR gmfgen::FeatureLinkModelFacet»«ENDDEFINE»

«DEFINE defineContainer FOR gmfgen::LinkModelFacet-»
	«EXPAND incorrectLinkModelFacet-»
«ENDDEFINE»

«DEFINE linkCreationParameters(boolean reversed, boolean isComplete) FOR gmfgen::TypeLinkModelFacet-»
	«IF null != sourceMetaFeature»container, «ENDIF»«EXPAND linkCreationSourceTargetParameters(reversed, isComplete)-»
«ENDDEFINE»

«DEFINE linkCreationParameters(boolean reversed, boolean isComplete) FOR gmfgen::FeatureLinkModelFacet-»
	«EXPAND linkCreationSourceTargetParameters(reversed, isComplete)-»
«ENDDEFINE»

«DEFINE linkCreationSourceTargetParameters(boolean reversed, boolean isComplete) FOR gmfgen::LinkModelFacet-»
	«IF checkSource(reversed, isComplete)»source«ELSE»null«ENDIF», «IF checkTarget(reversed, isComplete)»target«ELSE»null«ENDIF-»
«ENDDEFINE»

«DEFINE linkCreationParameters(boolean reversed, boolean isComplete) FOR gmfgen::LinkModelFacet-»
	«EXPAND incorrectLinkModelFacet-»
«ENDDEFINE»

«REM»create semantic command«ENDREM»
«DEFINE linkCreateCommand(gmfgen::GenLink link) FOR gmfgen::TypeLinkModelFacet-»
if (req.getContainmentFeature() == null) {
	req.setContainmentFeature(«EXPAND xpt::Common::metaFeatureAccessor FOR containmentMetaFeature»);
}
«REM»
	* Calling "linkCreationParameters(false, true)" because with these values result will be full set 
	* of parameters including (container,) source and target
«ENDREM»«-»
return getGEFWrapper(new «link.getCreateCommandQualifiedClassName()»(req, «EXPAND linkCreationParameters(false, true)»));
«ENDDEFINE»

«REM»create semantic command«ENDREM»
«DEFINE linkCreateCommand(gmfgen::GenLink link) FOR gmfgen::FeatureLinkModelFacet-»
org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest setReq = new org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest(sourceEObject, «getQualifiedPackageInterfaceName(metaFeature.genClass.genPackage)».eINSTANCE.get«getFeatureAccessorName(metaFeature)»(), target);
return getGEFWrapper(new org.eclipse.gmf.runtime.emf.type.core.commands.SetValueCommand(setReq));
«ENDDEFINE»

«DEFINE linkCreateCommand(gmfgen::GenLink link) FOR gmfgen::LinkModelFacet-»
	«EXPAND incorrectLinkModelFacet-»
«ENDDEFINE»

«REM»
 * Incorrect parameters
«ENDREM»
«DEFINE incorrectLinkModelFacet FOR gmfgen::LinkModelFacet-»
	«ERROR "Unrecognized link model facet: " + this-»
«ENDDEFINE»

«DEFINE getReorientTypeLinkCommand(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
d128 1
@


1.4
log
@[181778] Generate standalone creation commands for ref links
@
text
@d98 4
d116 4
@


1.3
log
@renamed getMSLWrapper into getGEFWrapper to better reflect what's going on and to avoid unknown acronym
@
text
@d54 1
a54 1
	
d58 1
a58 1
	
d73 3
a75 7
	return req.getTarget() == null ? «IF createStartLinkCommand(typeModelFacet)-»
		«EXPAND startLinkCommandCreatorName(typeModelFacet)»(req)«ELSE-»
		null«ENDIF-»
	: «IF createCompleteLinkCommand(typeModelFacet)-»
	 	«EXPAND completeLinkCommandCreatorName(typeModelFacet)»(req)«ELSE-»
		null«ENDIF-»
;
d85 1
a85 1
	
d89 1
a89 1
	
d97 3
d104 1
d111 3
d116 1
@


1.2
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d182 1
a182 1
return getMSLWrapper(new «link.getCreateCommandQualifiedClassName()»(req, «EXPAND linkCreationParameters(false, true)»));
d188 1
a188 1
return getMSLWrapper(new org.eclipse.gmf.runtime.emf.type.core.commands.SetValueCommand(setReq));
d230 1
a230 1
	return getMSLWrapper(new «getReorientCommandQualifiedClassName()»(req));
@


1.1
log
@[177758] - Link from a node to a link is not possible
@
text
@d112 1
a112 1
	«EXPAND linkCreateCommand FOR this.modelFacet-»
d174 1
a174 1
«DEFINE linkCreateCommand FOR gmfgen::TypeLinkModelFacet-»
d182 1
a182 1
return getMSLWrapper(new «getCreateCommandQualifiedClassName()»(req, «EXPAND linkCreationParameters(false, true)»));
d186 1
a186 1
«DEFINE linkCreateCommand FOR gmfgen::FeatureLinkModelFacet-»
d191 1
a191 1
«DEFINE linkCreateCommand FOR gmfgen::LinkModelFacet-»
@

