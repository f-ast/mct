head	1.11;
access;
symbols
	v20081022-1925:1.11
	v20081015-1925:1.11
	v20081008-1925:1.11
	v20081001-1925:1.11
	v20080930-1130:1.11
	v20080926-1245:1.11
	v20080924-1925:1.11
	v20080917-1925:1.11
	v20080911-1728:1.11
	v20080910-1520:1.11
	v20080903-1520:1.11
	v20080827-1520:1.11
	v20080813-1520:1.11
	v20080806-1520:1.11
	v20080722-1827:1.11
	v20080718-1731:1.11
	v20080716-1600:1.11
	v20080716-1642:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080610-1132:1.11
	v20080603-1553:1.11
	v20080528-1052:1.11
	v20080521:1.11
	v20080516-1543:1.11
	v20080516-1143:1.11
	v20080512-1200:1.11
	v20080508-2000:1.11
	v20080507-1326:1.11
	v20080503-1740:1.10
	v20080501-1739:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080411-0411:1.10
	v20080404-1111:1.10
	v20080322-0000:1.10
	v20080222-1200:1.10
	v20080215-1500:1.10
	v20080207-0207:1.10
	v20071222-1111:1.10
	v20071214-1111:1.10
	v20071130-1111:1.10
	v20071124-0000:1.10
	v20071112-0000:1.10
	v20071108-0000:1.10
	v20071003-0000:1.10
	v20070928-0000:1.10
	v20070921-0000:1.10
	v20070915-0000:1.10
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070608-1300:1.10
	v20070605-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.10
	v20070520-1200:1.10
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.8
	v20070413-1300:1.8
	v20070405-1100:1.8
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.2
	v20060316-0600:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	39124821b4de4567;

1.10
date	2007.05.18.21.17.19;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	2591464e17d14567;

1.9
date	2007.04.24.08.17.31;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	3da9462dbd1a4567;

1.8
date	2007.04.05.10.33.12;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	69594614d0664567;

1.7
date	2007.04.04.13.57.24;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	4c6f4613aec34567;

1.6
date	2007.03.29.12.16.36;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	6b76460bae204567;

1.5
date	2007.03.29.09.07.14;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	4ea2460b81c24567;

1.4
date	2007.03.27.18.39.15;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	5173460964d34567;

1.3
date	2007.03.23.09.27.29;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	6f4346039d7f4567;

1.2
date	2007.03.20.15.53.31;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	41734600037a4567;

1.1
date	2007.03.15.16.11.54;	author dstadnik;	state Exp;
branches;
next	;
commitid	620045f9703f4567;


desc
@@


1.11
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»

«EXTENSION xpt::GenModelUtils»

«DEFINE ReorientLinkCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::copyright FOR diagram.editorGen-»
package «diagram.editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «reorientCommandClassName» extends org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand {

	«EXPAND xpt::Common::generatedMemberComment»
	private final int reorientDirection;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.ecore.EObject oldEnd;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.ecore.EObject newEnd;

	«EXPAND xpt::Common::generatedMemberComment»
	public «reorientCommandClassName»(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest request) {
		super(request.getLabel(), request.getRelationship(), request);
		reorientDirection = request.getDirection();
		oldEnd = request.getOldRelationshipEnd();
		newEnd = request.getNewRelationshipEnd();
	}
	«EXPAND xpt::diagram::commands::ReorientLinkUtils::canReorient(this) FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientLinkUtils::reorient FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientLinkUtils::accessors-»
}
«ENDDEFINE»
@


1.10
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.9
log
@rename ReorientUtils template
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.8
log
@minor refactorings
@
text
@d42 3
a44 3
	«EXPAND xpt::diagram::commands::ReorientUtils::canReorient(this) FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientUtils::reorient FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientUtils::accessors-»
@


1.7
log
@[179063] check link constraints for type based links on reroute
@
text
@d44 1
@


1.6
log
@refactor to remove precise link end
@
text
@d42 1
a42 1
	«EXPAND xpt::diagram::commands::ReorientUtils::canReorient FOR modelFacet-»
@


1.5
log
@move shared code in one template file
@
text
@d30 3
d39 1
@


1.4
log
@Correcting compilation problems in samples by adding type-safe variables
@
text
@d38 2
a39 57
«LET (gmfgen::TypeLinkModelFacet)({modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).get(0)) AS typeModelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean canExecute() {
		if (!(getElementToEdit() instanceof «getQualifiedInterfaceName(typeModelFacet.metaClass)»)) {
			return false;
		}
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_SOURCE) {
			return newEnd instanceof «getQualifiedInterfaceName(typeModelFacet.getSourceType())»;
		}
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_TARGET) {
			return newEnd instanceof «getQualifiedInterfaceName(typeModelFacet.getTargetType())»;
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(
			org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info)
			throws org.eclipse.core.commands.ExecutionException {
		if (false == getElementToEdit() instanceof «getQualifiedInterfaceName(typeModelFacet.metaClass)») {
			return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
				"Incorrect link element: " + getElementToEdit());
		}
			
		«getQualifiedInterfaceName(typeModelFacet.metaClass)» link = («getQualifiedInterfaceName(typeModelFacet.metaClass)») getElementToEdit();
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_SOURCE) {
			if (false == newEnd instanceof «getQualifiedInterfaceName(typeModelFacet.getSourceType())») {
				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
					"Incorrect new link source: " + newEnd);
			}
			«getQualifiedInterfaceName(typeModelFacet.getSourceType())» newSource = («getQualifiedInterfaceName(typeModelFacet.getSourceType())») newEnd;
		«IF null != typeModelFacet.sourceMetaFeature-»
			«EXPAND reorientEnd("link", "newSource") FOR typeModelFacet.sourceMetaFeature-»
«REM»Shouldn't we change link container here?«ENDREM»
		«ELSE-»
			if (false == getElementToEdit().eContainer() instanceof «getQualifiedInterfaceName(typeModelFacet.containmentMetaFeature.genClass)») {
				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
					"Incorrect link source: " + getElementToEdit().eContainer());
			}
			«getQualifiedInterfaceName(typeModelFacet.containmentMetaFeature.genClass)» source = («getQualifiedInterfaceName(typeModelFacet.containmentMetaFeature.genClass)») getElementToEdit().eContainer();
			«EXPAND reorientReference("source", "link", "newSource") FOR typeModelFacet.containmentMetaFeature-»
		«ENDIF-»
			return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult(link);
		}
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_TARGET) {
			if (false == newEnd instanceof «getQualifiedInterfaceName(typeModelFacet.getTargetType())») {
				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
					"Incorrect new link target: " + newEnd);
			}
			«getQualifiedInterfaceName(typeModelFacet.getTargetType())» newTarget = («getQualifiedInterfaceName(typeModelFacet.getTargetType())») newEnd;
			«EXPAND reorientEnd("link", "newTarget") FOR typeModelFacet.targetMetaFeature-»
			return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult(link);
		}
		return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
				"Unknown link reorient direction: " + reorientDirection);
	}
a40 29
«ENDLET-»
«ENDDEFINE»

«REM»
	Set link feature to hold the newEnd value. All old values are discarded.
	In this context means to reorient the link.
«ENDREM»
«DEFINE reorientEnd(String linkVar, String newEndVar) FOR genmodel::GenFeature»
	«IF ecoreFeature.many-»
		«EXPAND xpt::Common::getFeatureValue(linkVar, true)».clear();
		«EXPAND xpt::Common::getFeatureValue(linkVar, true)».add(«newEndVar»);
	«ELSE-»
		«EXPAND xpt::Common::setFeatureValue(linkVar, true, newEndVar, true)»;
	«ENDIF-»
«ENDDEFINE»

«REM»
	Remove reference to targetVar element from sourceVar and add it to the newSourceVar
	sourceVar and newSourceVar should have the same feature pointing to targetVar.
	In this context means to reorient the link.
«ENDREM»
«DEFINE reorientReference(String sourceVar, String targetVar, String newSourceVar) FOR genmodel::GenFeature»
	«IF ecoreFeature.many-»
		«EXPAND xpt::Common::getFeatureValue(sourceVar, true)».remove(«targetVar»);
		«EXPAND xpt::Common::getFeatureValue(newSourceVar, true)».add(«targetVar»);
	«ELSE-»
		«EXPAND xpt::Common::setFeatureValue(sourceVar, true, "null", true)»;
		«EXPAND xpt::Common::setFeatureValue(newSourceVar, true, targetVar, true)»;
	«ENDIF-»
@


1.3
log
@[114348] add command to reorient ref based links
@
text
@d58 6
a63 1
		org.eclipse.emf.ecore.EObject link = getElementToEdit();
d65 5
d71 2
a72 1
			«EXPAND reorientEnd("link", "newEnd") FOR typeModelFacet.sourceMetaFeature-»
d74 6
a79 1
			«EXPAND reorientSelfAsEnd("link", "newEnd") FOR typeModelFacet.containmentMetaFeature-»
d84 6
a89 1
			«EXPAND reorientEnd("link", "newEnd") FOR typeModelFacet.targetMetaFeature-»
d105 2
a106 2
		«EXPAND xpt::Common::getFeatureValue(linkVar, false)».clear();
		«EXPAND xpt::Common::getFeatureValue(linkVar, false)».add(«newEndVar»);
d108 1
a108 1
		«EXPAND xpt::Common::setFeatureValue(linkVar, false, newEndVar, false)»;
d113 2
a114 2
	Move link to the newEnd container; current link container and newEnd container
	should have the same feature that contains link instances.
d117 1
a117 1
«DEFINE reorientSelfAsEnd(String linkVar, String newEndVar) FOR genmodel::GenFeature»
d119 2
a120 2
		«EXPAND xpt::Common::getFeatureValue(linkVar + ".eContainer()", false)».remove(«linkVar»);
		«EXPAND xpt::Common::getFeatureValue(newEndVar, false)».add(«linkVar»);
d122 2
a123 2
		«EXPAND xpt::Common::setFeatureValue(linkVar + ".eContainer()", false, "null", true)»;
		«EXPAND xpt::Common::setFeatureValue(newEndVar, false, linkVar, false)»;
@


1.2
log
@[114348] command to reorient EClass based link
@
text
@d15 2
a38 3
«LET getQualifiedInterfaceName(typeModelFacet.metaClass) AS linkTypeFQN-»
«LET getQualifiedInterfaceName(typeModelFacet.getSourceType()) AS sourceTypeFQN-»
«LET getQualifiedInterfaceName(typeModelFacet.getTargetType()) AS targetTypeFQN-»
d42 1
a42 1
		if (!(getElementToEdit() instanceof «linkTypeFQN»)) {
d46 1
a46 1
			return newEnd instanceof «sourceTypeFQN»;
d49 1
a49 1
			return newEnd instanceof «targetTypeFQN»;
d58 1
a58 1
		«linkTypeFQN» link = («linkTypeFQN») getElementToEdit();
d61 1
a61 8
			«LET getAccessorName(typeModelFacet.sourceMetaFeature) AS accessorName-»
			«IF typeModelFacet.targetMetaFeature.ecoreFeature.many-»
			link.get«accessorName»().clear();
			link.get«accessorName»().add((«sourceTypeFQN») newEnd);
			«ELSE-»
			link.set«accessorName»((«sourceTypeFQN») newEnd);
			«ENDIF-»
			«ENDLET-»
d63 1
a63 10
			«LET getAccessorName(typeModelFacet.containmentMetaFeature) AS accessorName-»
			«sourceTypeFQN» oldEnd = («sourceTypeFQN») link.eContainer();
			«IF typeModelFacet.containmentMetaFeature.ecoreFeature.many-»
			oldEnd.get«accessorName»().remove(link);
			((«sourceTypeFQN») newEnd).get«accessorName»().add(link);
			«ELSE-»
			oldEnd.set«accessorName»(null);
			((«sourceTypeFQN») newEnd).set«accessorName»(link);
			«ENDIF-»
			«ENDLET-»
d68 1
a68 8
		«LET getAccessorName(typeModelFacet.targetMetaFeature) AS accessorName-»
			«IF typeModelFacet.targetMetaFeature.ecoreFeature.many-»
			link.get«accessorName»().clear();
			link.get«accessorName»().add((«targetTypeFQN») newEnd);
			«ELSE-»
			link.set«accessorName»((«targetTypeFQN») newEnd);
			«ENDIF-»
		«ENDLET-»
d72 1
a72 1
				"Unknown direction: " + reorientDirection);
d76 28
a103 3
«ENDLET-»
«ENDLET-»
«ENDLET-»
@


1.1
log
@[114348] Generate command to reorient link
@
text
@d36 18
d59 1
a59 3
		«FOREACH {modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).metaClass AS linkClass-»
		«getQualifiedInterfaceName(linkClass)» link = («getQualifiedInterfaceName(linkClass)») getElementToEdit();
		«ENDFOREACH-»
d61 33
a93 3
			//link.setSource(newEnd);
		} else if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_TARGET) {
			//link.setDestination(newEnd);
d95 2
a96 1
		return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult(link);
d99 4
@

