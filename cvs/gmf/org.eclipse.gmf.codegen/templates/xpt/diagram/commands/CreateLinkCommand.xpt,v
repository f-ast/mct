head	1.19;
access;
symbols
	v20081022-1925:1.19
	v20081015-1925:1.19
	v20081008-1925:1.19
	v20081001-1925:1.19
	v20080930-1130:1.19
	v20080926-1245:1.19
	v20080924-1925:1.19
	v20080917-1925:1.19
	v20080911-1728:1.19
	v20080910-1520:1.19
	v20080903-1520:1.19
	v20080827-1520:1.19
	v20080813-1520:1.18
	v20080806-1520:1.18
	v20080722-1827:1.18
	v20080718-1731:1.18
	v20080716-1600:1.16
	v20080716-1642:1.18
	R2_1_maintenance:1.16.0.2
	Root_R2_1_maintenance:1.16
	R2_1_0:1.16
	v20080610-1132:1.16
	v20080603-1553:1.16
	v20080528-1052:1.16
	v20080521:1.16
	v20080516-1543:1.16
	v20080516-1143:1.16
	v20080512-1200:1.16
	v20080508-2000:1.16
	v20080507-1326:1.16
	v20080503-1740:1.14
	v20080501-1739:1.14
	v20080425-1959:1.14
	v20080417-1610:1.14
	v20080411-0411:1.14
	v20080404-1111:1.14
	v20080322-0000:1.14
	v20080222-1200:1.7
	v20080215-1500:1.7
	v20080207-0207:1.7
	v20071222-1111:1.7
	v20071214-1111:1.7
	v20071130-1111:1.7
	v20071124-0000:1.7
	v20071112-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.7
	v20070928-0000:1.7
	v20070921-0000:1.7
	v20070915-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070520-1200:1.7
	v20070518-1300:1.6
	v20070504-1000:1.5
	v20070427-0600:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.19
date	2008.08.20.13.30.37;	author dstadnik;	state Exp;
branches;
next	1.18;
commitid	26c448ac1c694567;

1.18
date	2008.07.01.18.48.54;	author atikhomirov;	state Exp;
branches;
next	1.17;
commitid	4f11486a7c164567;

1.17
date	2008.06.30.19.46.29;	author atikhomirov;	state Exp;
branches;
next	1.16;
commitid	763c486938144567;

1.16
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	39124821b4de4567;

1.15
date	2008.05.05.11.19.50;	author atikhomirov;	state Exp;
branches;
next	1.14;
commitid	2bc6481eed554567;

1.14
date	2008.03.05.16.41.10;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	4c0b47cecd244567;

1.13
date	2008.03.04.21.07.05;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	568f47cdb9f94567;

1.12
date	2008.03.04.20.27.07;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	2ac447cdb09b4567;

1.11
date	2008.03.04.16.47.34;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	5a5047cd7d254567;

1.10
date	2008.02.26.13.53.51;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	19d047c419ed4567;

1.9
date	2008.02.22.11.24.53;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	5c9347beb1044567;

1.8
date	2008.02.21.18.35.58;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	6b4047bdc48d4567;

1.7
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	2591464e17d14567;

1.6
date	2007.05.15.18.15.34;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	117a4649f8c64567;

1.5
date	2007.04.30.11.54.36;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	27754635d8fc4567;

1.4
date	2007.04.24.15.37.47;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	4e6462e244a4567;

1.3
date	2007.04.24.09.41.43;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	5f24462dd0d64567;

1.2
date	2007.04.24.08.44.28;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	1e89462dc36b4567;

1.1
date	2007.04.23.14.04.58;	author dstadnik;	state Exp;
branches;
next	;
commitid	4a11462cbd094567;


desc
@@


1.19
log
@[199995] generate valid code for links with unchangeable features
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»

«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::diagram::Utils»

«DEFINE CreateLinkCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::copyright FOR diagram.editorGen-»
package «diagram.editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «createCommandClassName» extends org.eclipse.gmf.runtime.emf.type.core.commands.CreateElementCommand {
	«EXPAND xpt::diagram::commands::CreateLinkUtils::fields FOR modelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
	public «createCommandClassName»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest request,
			org.eclipse.emf.ecore.EObject source, org.eclipse.emf.ecore.EObject target) {
		super(request);
		«EXPAND xpt::diagram::commands::CreateLinkUtils::init FOR modelFacet-»
	}
	«EXPAND xpt::diagram::commands::CreateLinkUtils::canCreate(this) FOR modelFacet-»
	«EXPAND body(this) FOR modelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(
			org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info)
			throws org.eclipse.core.commands.ExecutionException {
		if (!canExecute()) {
			throw new org.eclipse.core.commands.ExecutionException("Invalid arguments in create link command"); «EXPAND xpt::Common::nonNLS»
		}
		return super.doExecuteWithResult(monitor, info);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest createConfigureRequest() {
		org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest request = super.createConfigureRequest();
		request.setParameter(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest.SOURCE, getSource());
		request.setParameter(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest.TARGET, getTarget());
		return request;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void setElementToEdit(org.eclipse.emf.ecore.EObject element) {
		throw new UnsupportedOperationException();
	}
	«EXPAND xpt::diagram::commands::CreateLinkUtils::accessors FOR modelFacet-»
}
«ENDDEFINE»

«DEFINE body(gmfgen::GenLink link) FOR gmfgen::LinkModelFacet-»
«ENDDEFINE»

«DEFINE body(gmfgen::GenLink link) FOR gmfgen::TypeLinkModelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.emf.ecore.EObject doDefaultElementCreation() {
	«IF (sourceMetaFeature == null ? containmentMetaFeature.ecoreFeature.changeable : sourceMetaFeature.ecoreFeature.changeable) && (targetMetaFeature.ecoreFeature.changeable)-»
		«EXPAND MetaModel::NewInstance("newElement") FOR metaClass-»
		«EXPAND MetaModel::modifyFeature(hasContainerOtherThanSource() ? "getContainer()" : "getSource()", containmentMetaFeature.genClass, "newElement") FOR containmentMetaFeature-»
		«IF sourceMetaFeature != null-»
			«EXPAND MetaModel::modifyFeature("newElement", metaClass, "getSource()") FOR sourceMetaFeature-»
		«ENDIF-»
		«EXPAND MetaModel::modifyFeature("newElement", metaClass, "getTarget()") FOR targetMetaFeature-»
		«IF hasExplicitChildFeature()-»
			«IF sourceMetaFeature != null-»
				«EXPAND MetaModel::modifyFeature("getContainer()", containmentMetaFeature.genClass, "newElement") FOR childMetaFeature-»
			«ELSE-»
				«EXPAND MetaModel::modifyFeature("getSource()", getSourceType(), "newElement") FOR childMetaFeature-»
			«ENDIF-»
		«ENDIF-»
		«EXPAND initialize(link, "newElement")-»
		return «EXPAND MetaModel::DowncastToEObject("newElement") FOR metaClass»;
	«ELSE-»
		throw new UnsupportedOperationException();
	«ENDIF-»
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.emf.ecore.EClass getEClassToEdit() {
		return «EXPAND MetaModel::MetaClass FOR containmentMetaFeature.genClass»;
	}
«ENDDEFINE»

«DEFINE initialize(GenLink link, String newElementvVar) FOR TypeModelFacet»«IF modelElementInitializer != null-»
«link.diagram.getElementTypesQualifiedClassName()».init_«link.getUniqueIdentifier()»(«newElementvVar»);
«ENDIF»«ENDDEFINE»@


1.18
log
@refactored templates moving towards [188329] - Support Java 5.0 (would need to respect generic types when adding into collections) while trying to accomplish [227127]
@
text
@d70 1
d86 3
@


1.17
log
@[226882] Support links with childMetaFeature not from container
@
text
@d71 1
a71 1
		«EXPAND CreateLinkUtils::addValue(hasContainerOtherThanSource() ? "getContainer()" : "getSource()", containmentMetaFeature.genClass, "newElement") FOR containmentMetaFeature-»
d73 1
a73 1
			«EXPAND CreateLinkUtils::addValue("newElement", metaClass, "getSource()") FOR sourceMetaFeature-»
d75 1
a75 1
		«EXPAND CreateLinkUtils::addValue("newElement", metaClass, "getTarget()") FOR targetMetaFeature-»
d78 1
a78 1
				«EXPAND CreateLinkUtils::addValue("getContainer()", containmentMetaFeature.genClass, "newElement") FOR childMetaFeature-»
d80 1
a80 1
				«EXPAND CreateLinkUtils::addValue("getSource()", getSourceType(), "newElement") FOR childMetaFeature-»
@


1.16
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d71 1
a71 1
		«EXPAND CreateLinkUtils::addValue(sourceMetaFeature != null ? "getContainer()" : "getSource()", containmentMetaFeature.genClass, "newElement") FOR containmentMetaFeature-»
@


1.15
log
@hard-coded variable name refacored out
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.14
log
@[221347] refactor/simplify ElementInitializers - shorten path to initializers
@
text
@d83 1
a83 1
		«EXPAND initialize(link)»
d93 2
a94 2
«DEFINE initialize(GenLink link) FOR TypeModelFacet»«IF modelElementInitializer != null-»
«link.diagram.getElementTypesQualifiedClassName()».init_«link.getUniqueIdentifier()»(newElement);
@


1.13
log
@refactored node creation command not to delegate to superclass for primitive operations that can be easily accomplished directly
@
text
@d94 1
a94 1
«link.diagram.getElementTypesQualifiedClassName()».Initializers.init_«link.getUniqueIdentifier()»(newElement);
@


1.12
log
@[221347] refactor/simplify ElementInitializers. Step 1/2: make it simple and straightforward but do not touch existing facilities
@
text
@d18 1
d71 1
a71 1
		«EXPAND addValue(sourceMetaFeature != null ? "getContainer()" : "getSource()", containmentMetaFeature.genClass, "newElement") FOR containmentMetaFeature-»
d73 1
a73 1
			«EXPAND addValue("newElement", metaClass, "getSource()") FOR sourceMetaFeature-»
d75 2
a76 2
		«EXPAND addValue("newElement", metaClass, "getTarget()") FOR targetMetaFeature-»
		«IF !childMetaFeature.ecoreFeature.derived && childMetaFeature != containmentMetaFeature-»
d78 1
a78 1
				«EXPAND addValue("getContainer()", containmentMetaFeature.genClass, "newElement") FOR childMetaFeature-»
d80 1
a80 1
				«EXPAND addValue("getSource()", getSourceType(), "newElement") FOR childMetaFeature-»
a92 8
«DEFINE addValue(String containerVar, genmodel::GenClass containerClass, String valueVar) FOR genmodel::GenFeature-»
	«IF isListType()-»
		«EXPAND MetaModel::getFeatureValue(containerVar, containerClass)».add(«valueVar»);
	«ELSE-»
		«EXPAND MetaModel::setFeatureValue(containerVar, containerClass, valueVar)»;
	«ENDIF-»
«ENDDEFINE»

@


1.11
log
@[150177] phase I, refactor existing code
@
text
@d82 1
a82 3
		«IF modelElementInitializer != null-»
			«link.diagram.getElementTypesQualifiedClassName()».Initializers.«link.getUniqueIdentifier()».init(«EXPAND MetaModel::DowncastToEObject("newElement") FOR metaClass»);
		«ENDIF-»
d99 4
@


1.10
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template.
@
text
@d83 1
a83 2
			«link.diagram.getElementTypesQualifiedClassName()».Initializers.«link.getUniqueIdentifier()».init(
					«IF isExternalInterface(metaClass)»(org.eclipse.emf.ecore.EObject) «ENDIF»newElement);
@


1.9
log
@[150177] phase I, refactor existing code: use same template for metainfo access
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d69 1
a69 1
		«EXPAND xpt::Common::newInstance("newElement") FOR metaClass-»
d86 1
a86 1
		return «EXPAND xpt::Common::castToEObject FOR metaClass»newElement;
d91 1
a91 1
		return «EXPAND xpt::Common::metaClassAccessor FOR containmentMetaFeature.genClass»;
d97 1
a97 1
		«EXPAND xpt::Common::getFeatureValue(containerVar, containerClass)».add(«valueVar»);
d99 1
a99 1
		«EXPAND xpt::Common::setFeatureValue(containerVar, containerClass, valueVar)»;
@


1.8
log
@[150177] phase I, refactor existing code: extract metamodel/generated code access into single place
@
text
@d91 1
a91 1
		return «getQualifiedClassifierAccessor(containmentMetaFeature.genClass)»();
@


1.7
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@a68 1
		// «getQualifiedInterfaceName(metaClass)» newElement = («getQualifiedInterfaceName(metaClass)») super.doDefaultElementCreation();
@


1.6
log
@Non-nls comment replaced by template call.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.5
log
@do not delegate creation to superclass as it doesn't add anything but reflective clutter
@
text
@d41 1
a41 1
			throw new org.eclipse.core.commands.ExecutionException("Invalid arguments in create link command"); //$NON-NLS-1$
@


1.4
log
@do not create additional request
@
text
@d69 3
a71 2
		«getQualifiedInterfaceName(metaClass)» newElement = («getQualifiedInterfaceName(metaClass)») super.doDefaultElementCreation();
		if (newElement != null) {
d87 1
a87 2
		}
		return «IF isExternalInterface(metaClass)»(org.eclipse.emf.ecore.EObject) «ENDIF»newElement;
@


1.3
log
@refactor code that finds link container
@
text
@d28 2
a29 1
	public «createCommandClassName»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest request) {
@


1.2
log
@reorder methods
@
text
@a87 20
	«IF sourceMetaFeature != null-»

	«EXPAND xpt::Common::generatedClassComment(
	"Finds container element for the new link.\n" +
	"Default implementation goes up by containment hierarchy starting from\n" +
	"the specified element and returns the first element that is instance of\n" +
	"the container class.\n"
	)»
	protected org.eclipse.emf.ecore.EObject findLinkContainer(Object uelement, org.eclipse.emf.ecore.EClass containerClass) {
		if (uelement instanceof org.eclipse.emf.ecore.EObject) {
			org.eclipse.emf.ecore.EObject element = (org.eclipse.emf.ecore.EObject) uelement;
			for (; element != null; element = element.eContainer()) {
				if (containerClass.isSuperTypeOf(element.eClass())) {
					return element;
				}
			}
		}
		return null;
	}
	«ENDIF-»
@


1.1
log
@[180702] Move logic from semantic edit policy into creation commands
@
text
@d32 1
a33 1
	«EXPAND xpt::diagram::commands::CreateLinkUtils::canCreate(this) FOR modelFacet-»
@

