head	1.16;
access;
symbols
	v20081022-1925:1.16
	v20081015-1925:1.16
	v20081008-1925:1.15
	v20081001-1925:1.15
	v20080930-1130:1.15
	v20080926-1245:1.15
	v20080924-1925:1.15
	v20080917-1925:1.15
	v20080911-1728:1.15
	v20080910-1520:1.15
	v20080903-1520:1.15
	v20080827-1520:1.15
	v20080813-1520:1.15
	v20080806-1520:1.15
	v20080722-1827:1.15
	v20080718-1731:1.15
	v20080716-1600:1.15
	v20080716-1642:1.15
	R2_1_maintenance:1.15.0.2
	Root_R2_1_maintenance:1.15
	R2_1_0:1.15
	v20080610-1132:1.15
	v20080603-1553:1.15
	v20080528-1052:1.14
	v20080521:1.14
	v20080516-1543:1.14
	v20080516-1143:1.14
	v20080512-1200:1.14
	v20080508-2000:1.14
	v20080507-1326:1.14
	v20080503-1740:1.13
	v20080501-1739:1.13
	v20080425-1959:1.13
	v20080417-1610:1.13
	v20080411-0411:1.13
	v20080404-1111:1.13
	v20080322-0000:1.13
	v20080222-1200:1.12
	v20080215-1500:1.12
	v20080207-0207:1.10.2.2
	v20071222-1111:1.12
	v20071214-1111:1.12
	v20071130-1111:1.12
	v20071124-0000:1.10.2.2
	v20071112-0000:1.12
	v20071108-0000:1.12
	v20071003-0000:1.10
	v20070928-0000:1.10
	v20070921-0000:1.10
	v20070915-0000:1.10
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070608-1300:1.10
	v20070605-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.9
	v20070520-1200:1.8
	v20070518-1300:1.7
	v20070504-1000:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.16
date	2008.10.15.18.01.18;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	b45d48f62fed4567;

1.15
date	2008.06.03.16.04.22;	author ashatalin;	state Exp;
branches;
next	1.14;
commitid	515748456b854567;

1.14
date	2008.05.07.13.56.02;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	39124821b4de4567;

1.13
date	2008.02.26.13.53.51;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	19d047c419ed4567;

1.12
date	2007.10.26.16.39.48;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	344472218534567;

1.11
date	2007.10.26.16.28.06;	author ashatalin;	state Exp;
branches;
next	1.10;
commitid	7648472215964567;

1.10
date	2007.05.30.15.58.40;	author ashatalin;	state Exp;
branches
	1.10.2.1;
next	1.9;
commitid	7535465d9f304567;

1.9
date	2007.05.22.17.43.54;	author ashatalin;	state Exp;
branches;
next	1.8;
commitid	667746532bda4567;

1.8
date	2007.05.18.21.17.20;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	2591464e17d14567;

1.7
date	2007.05.17.17.36.25;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	48df464c92984567;

1.6
date	2007.05.15.19.19.22;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	43d3464a07b84567;

1.5
date	2007.05.11.16.01.30;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	44f84644934f4567;

1.4
date	2007.05.08.12.14.58;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	3985464069c14567;

1.3
date	2007.05.03.20.42.14;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	7f0b463a49254567;

1.2
date	2007.05.01.17.56.31;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	58c746377f464567;

1.1
date	2007.05.01.13.28.04;	author ashatalin;	state Exp;
branches;
next	;
commitid	143a463740554567;

1.10.2.1
date	2007.10.26.16.26.35;	author ashatalin;	state Exp;
branches;
next	1.10.2.2;
commitid	74864722153a4567;

1.10.2.2
date	2007.10.26.16.39.05;	author ashatalin;	state Exp;
branches;
next	;
commitid	1e2472218294567;


desc
@@


1.16
log
@[249301] Wrap use of assert  into dedicated template
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»

«EXTENSION xpt::diagram::updater::Utils»
«EXTENSION xpt::GenModelUtils»

«DEFINE containerBaseCanonicalMethods FOR gmfgen::GenContainerBase-»
	«EXPAND attributes-»
	
	«EXPAND getSemanticChildrenList-»
	«EXPAND shouldDeleteView-»
	
	«EXPAND isOrphaned-»
	«IF hasConformableSemanticChildren(this)-»
	
		«EXPAND populateViewProperties-»
	«ENDIF-»
	
	«EXPAND getDefaultFactoryHint-»
	«EXPAND getFeaturesToSynchronize-»
«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenContainerBase-»
«IF getSemanticChildrenContainmentFeatures(this).size() > 0-»

	«EXPAND xpt::Common::generatedMemberComment»
java.util.Set myFeaturesToSynchronize;
«ENDIF-»
«ENDDEFINE»

«DEFINE getSemanticChildrenList FOR gmfgen::GenContainerBase-»
	«EXPAND xpt::Common::generatedMemberComment»
protected java.util.List getSemanticChildrenList() {
	«IF hasSemanticChildren(this)-»
	org.eclipse.gmf.runtime.notation.View viewObject = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
	java.util.List result = new java.util.LinkedList();
	for (java.util.Iterator it = «EXPAND xpt::diagram::updater::DiagramUpdater::getSemanticChildrenMethodCall»(viewObject).iterator(); it.hasNext();) {
		result.add(((«getDiagram().editorGen.diagramUpdater.getNodeDescriptorQualifiedClassName()») it.next()).getModelElement());
	}
	return result;
	«ELSE-»
	return java.util.Collections.EMPTY_LIST;
	«ENDIF-»
}
«ENDDEFINE»

«DEFINE shouldDeleteView FOR gmfgen::GenContainerBase»«ENDDEFINE»

«DEFINE shouldDeleteView FOR gmfgen::GenDiagram-»

	«EXPAND xpt::Common::generatedMemberComment»
protected boolean shouldDeleteView(org.eclipse.gmf.runtime.notation.View view) {
	return true;
}
«ENDDEFINE»

«DEFINE checkShortcutProperty FOR gmfgen::GenDiagram-»
	«IF !containsShortcutsTo.isEmpty()-»
if (view.getEAnnotation("Shortcut") != null) {«EXPAND xpt::Common::nonNLS»
	return «editorGen.diagramUpdater.getDiagramUpdaterQualifiedClassName()».isShortcutOrphaned(view);
}
	«ENDIF-»
«ENDDEFINE»

«DEFINE checkShortcutProperty FOR gmfgen::GenContainerBase»«ENDDEFINE»

«DEFINE getDefaultFactoryHint FOR gmfgen::GenContainerBase-»
	«EXPAND xpt::Common::generatedMemberComment»
protected String getDefaultFactoryHint() {
	return null;
}
«ENDDEFINE»

«DEFINE isOrphaned FOR gmfgen::GenContainerBase-»
	«EXPAND xpt::Common::generatedMemberComment»
protected boolean isOrphaned(java.util.Collection semanticChildren, final org.eclipse.gmf.runtime.notation.View view) {
	«EXPAND checkShortcutProperty-»
	«IF !getSemanticChildren(this).isEmpty()-»
	int visualID = «EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall FOR getDiagram()»(view);
	switch (visualID) {
		«EXPAND xpt::Common::caseVisualID FOREACH getSemanticChildren(this)»
		if (!semanticChildren.contains(view.getElement())) {
			return true;
		}
		«IF hasConformableSemanticChildren(this)-»
			«EXPAND updateNotationModelElement-»
		«ENDIF-»
	}
	«ENDIF-»
	return false;	
}
«ENDDEFINE»

«DEFINE updateNotationModelElement FOR gmfgen::GenCommonBase-»
	org.eclipse.emf.ecore.EObject domainModelElement = view.getElement();
	if (visualID != «EXPAND xpt::editor::VisualIDRegistry::getNodeVisualIDMethodCall FOR getDiagram()»((org.eclipse.gmf.runtime.notation.View) getHost().getModel(), domainModelElement)) {
		java.util.List createdViews = createViews(java.util.Collections.singletonList(domainModelElement));
		«EXPAND xpt::Common::assert("createdViews.size() == 1")-»
		final org.eclipse.gmf.runtime.notation.View createdView = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) createdViews.get(0)).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
		if (createdView != null) {
			try {
				new org.eclipse.emf.workspace.AbstractEMFOperation(host().getEditingDomain(), org.eclipse.gmf.runtime.common.core.util.StringStatics.BLANK, Collections.singletonMap(org.eclipse.emf.transaction.Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) {
					protected org.eclipse.core.runtime.IStatus doExecute(org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info) throws org.eclipse.core.commands.ExecutionException {
						populateViewProperties(view, createdView);
						return org.eclipse.core.runtime.Status.OK_STATUS;
					}
				}.execute(new org.eclipse.core.runtime.NullProgressMonitor(), null);
			} catch (org.eclipse.core.commands.ExecutionException e) {
				«getDiagram().editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError("Error while copyign view information to newly created view", e); //$NON-NLS-1$
			}
		}
		deleteViews(java.util.Collections.singletonList(view).iterator());	
	}
«ENDDEFINE»

«DEFINE populateViewProperties FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
private void populateViewProperties(org.eclipse.gmf.runtime.notation.View oldView, org.eclipse.gmf.runtime.notation.View newView) {
	if (oldView instanceof org.eclipse.gmf.runtime.notation.Node && newView instanceof org.eclipse.gmf.runtime.notation.Node) {
		org.eclipse.gmf.runtime.notation.Node oldNode = (org.eclipse.gmf.runtime.notation.Node) oldView; 
		org.eclipse.gmf.runtime.notation.Node newNode = (org.eclipse.gmf.runtime.notation.Node) newView;
		if (oldNode.getLayoutConstraint() instanceof org.eclipse.gmf.runtime.notation.Location && newNode.getLayoutConstraint() instanceof org.eclipse.gmf.runtime.notation.Location) {
			((org.eclipse.gmf.runtime.notation.Location) newNode.getLayoutConstraint()).setX(((org.eclipse.gmf.runtime.notation.Location) oldNode.getLayoutConstraint()).getX());
			((org.eclipse.gmf.runtime.notation.Location) newNode.getLayoutConstraint()).setY(((org.eclipse.gmf.runtime.notation.Location) oldNode.getLayoutConstraint()).getY());
		}
		if (oldNode.getLayoutConstraint() instanceof org.eclipse.gmf.runtime.notation.Size && newNode.getLayoutConstraint() instanceof org.eclipse.gmf.runtime.notation.Size) {
			((org.eclipse.gmf.runtime.notation.Size) newNode.getLayoutConstraint()).setWidth(((org.eclipse.gmf.runtime.notation.Size) oldNode.getLayoutConstraint()).getWidth());
			((org.eclipse.gmf.runtime.notation.Size) newNode.getLayoutConstraint()).setHeight(((org.eclipse.gmf.runtime.notation.Size) oldNode.getLayoutConstraint()).getHeight());
		}
		if (oldNode.getLayoutConstraint() instanceof org.eclipse.gmf.runtime.notation.Ratio && newNode.getLayoutConstraint() instanceof org.eclipse.gmf.runtime.notation.Ratio) {
			((org.eclipse.gmf.runtime.notation.Ratio) newNode.getLayoutConstraint()).setValue(((org.eclipse.gmf.runtime.notation.Ratio) oldNode.getLayoutConstraint()).getValue());
		}
		newNode.persist();
	}
}
«ENDDEFINE»

«DEFINE getFeaturesToSynchronize FOR gmfgen::GenContainerBase-»
«IF getSemanticChildrenChildFeatures(this).size() > 0-»

		«EXPAND xpt::Common::generatedMemberComment»
protected java.util.Set getFeaturesToSynchronize(){
	if (myFeaturesToSynchronize == null) {
		myFeaturesToSynchronize = new java.util.HashSet();
		«EXPAND addContainmentFeature FOREACH getSemanticChildrenContainmentFeatures(this)-»
	}
	return myFeaturesToSynchronize;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE addContainmentFeature FOR genmodel::GenFeature-»
myFeaturesToSynchronize.add(«EXPAND MetaModel::MetaFeature»);
«ENDDEFINE»@


1.15
log
@[224206] - Support switching figure of EditPart with domain element property change
@
text
@d110 1
a110 1
		assert createdViews.size() == 1;
@


1.14
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d26 4
d94 6
a99 1
		return !semanticChildren.contains(view.getElement()) || visualID != «EXPAND xpt::editor::VisualIDRegistry::getNodeVisualIDMethodCall FOR getDiagram()»((org.eclipse.gmf.runtime.notation.View) getHost().getModel(), view.getElement());
d106 44
@


1.13
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.12
log
@[192876] - CanonicalEditPolicy should respect containment feature instead/in addition to children feature
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d112 1
a112 1
myFeaturesToSynchronize.add(«EXPAND xpt::Common::metaFeatureAccessor»);
@


1.11
log
@[192876] - CanonicalEditPolicy should respect containment feature instead/in addition to children feature
@
text
@d32 1
a32 1
«IF getSemanticChildrenChildFeatures(this).size() > 0-»
@


1.10
log
@Correcting shortcuts processing.
@
text
@d104 1
a104 1
		«EXPAND addContainmentFeature FOREACH getSemanticChildrenChildFeatures(this)-»
@


1.10.2.1
log
@[192876] - CanonicalEditPolicy should respect containment feature instead/in addition to children feature
@
text
@d104 1
a104 1
		«EXPAND addContainmentFeature FOREACH getSemanticChildrenContainmentFeatures(this)-»
@


1.10.2.2
log
@[192876] - CanonicalEditPolicy should respect containment feature instead/in addition to children feature
@
text
@d32 1
a32 1
«IF getSemanticChildrenContainmentFeatures(this).size() > 0-»
@


1.9
log
@Correcting template to process shortcuts.
@
text
@d67 2
a68 2
if («editorGen.diagramUpdater.getDiagramUpdaterQualifiedClassName()».isShortcutOrphaned(view)) {
	return true;
@


1.8
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d67 3
a69 1
«editorGen.diagramUpdater.getDiagramUpdaterQualifiedClassName()».isShortcutOrphaned(view);
@


1.7
log
@Checking visual ID whild collecting semic children..
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.6
log
@Replacing static method calls with templates.
@
text
@d84 1
a84 1
	«IF hasSemanticChildren(this)-»
d86 6
a91 4
	return «EXPAND xpt::diagram::updater::DiagramUpdater::isDomainMetaChildMethodCall»(visualID) && (!semanticChildren.contains(view.getElement()) || visualID != «EXPAND xpt::editor::VisualIDRegistry::getNodeVisualIDMethodCall FOR getDiagram()»((org.eclipse.gmf.runtime.notation.View) getHost().getModel(), view.getElement()));
	«ELSE-»
	return false;
	«ENDIF-»	
@


1.5
log
@GenDiagramUpdater created in .gmfgen model
@
text
@d85 2
a86 2
	int visualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(view);
	return «EXPAND xpt::diagram::updater::DiagramUpdater::isDomainMetaChildMethodCall»(visualID) && (!semanticChildren.contains(view.getElement()) || visualID != «getDiagram().getVisualIDRegistryQualifiedClassName()».getNodeVisualID((org.eclipse.gmf.runtime.notation.View) getHost().getModel(), view.getElement()));
@


1.4
log
@Updating copyrights.
@
text
@d46 1
a46 1
		result.add(((«getDiagram().getNodeDescriptorQualifiedClassName()») it.next()).getModelElement());
d67 1
a67 1
«getDiagramUpdaterQualifiedClassName()».isShortcutOrphaned(view);
@


1.3
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.2
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d42 1
d49 3
d84 1
a84 1
	«IF !getSemanticChildren(this).isEmpty()-»
@


1.1
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d43 5
a47 1
	return «EXPAND xpt::diagram::updater::DiagramUpdater::getSemanticChildrenMethodCall»(viewObject);
@

