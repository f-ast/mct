head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.06.12.12.20.13;	author dstadnik;	state dead;
branches;
next	1.3;
commitid	5d34466e8f7c4567;

1.3
date	2007.05.18.21.17.19;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	2591464e17d14567;

1.2
date	2007.05.15.18.16.29;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	13fc4649f8fd4567;

1.1
date	2007.05.10.09.23.21;	author dstadnik;	state Exp;
branches;
next	;
commitid	59a14642e4894567;


desc
@@


1.4
log
@move providers out of diagram folder
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE MarkerNavigationProvider FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «providersPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «markerNavigationProviderClassName»
		extends org.eclipse.gmf.runtime.emf.ui.providers.marker.AbstractModelMarkerNavigationProvider {

	«EXPAND xpt::Common::generatedMemberComment»
	public static final String MARKER_TYPE =
		«editorGen.plugin.getActivatorQualifiedClassName()».ID + ".«getValidationDiagnosticMarkerType()»"; «EXPAND xpt::Common::nonNLS»

	«EXPAND xpt::Common::generatedMemberComment»
	protected void doGotoMarker(org.eclipse.core.resources.IMarker marker) {
		String elementId = marker.getAttribute(org.eclipse.gmf.runtime.common.core.resources.IMarker.ELEMENT_ID, null);
		if (elementId == null || !(getEditor() instanceof org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor)) {
			return;
		}
		org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor editor =
				(org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor) getEditor();
		java.util.Map editPartRegistry = editor.getDiagramGraphicalViewer().getEditPartRegistry();
		org.eclipse.emf.ecore.EObject targetView = editor.getDiagram().eResource().getEObject(elementId);
		if (targetView == null) {
			return;
		}
		org.eclipse.gef.EditPart targetEditPart = (org.eclipse.gef.EditPart) editPartRegistry.get(targetView);
		if (targetEditPart != null) {
			«getDiagramEditorUtilQualifiedClassName()».selectElementsInDiagram(
					editor, java.util.Arrays.asList(new org.eclipse.gef.EditPart[] { targetEditPart }));
		}
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public static void deleteMarkers(org.eclipse.core.resources.IResource resource) {
		try {
			resource.deleteMarkers(MARKER_TYPE, true, org.eclipse.core.resources.IResource.DEPTH_ZERO);
		} catch (org.eclipse.core.runtime.CoreException e) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
					"Failed to delete validation markers", e); «EXPAND xpt::Common::nonNLS»
		}
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public static org.eclipse.core.resources.IMarker addMarker(org.eclipse.core.resources.IFile file,
			String elementId, String location, String message, int statusSeverity) {
		org.eclipse.core.resources.IMarker marker = null;
		try {
			marker = file.createMarker(MARKER_TYPE);
			marker.setAttribute(org.eclipse.core.resources.IMarker.MESSAGE, message);
			marker.setAttribute(org.eclipse.core.resources.IMarker.LOCATION, location);
			marker.setAttribute(org.eclipse.gmf.runtime.common.ui.resources.IMarker.ELEMENT_ID, elementId);
			int markerSeverity = org.eclipse.core.resources.IMarker.SEVERITY_INFO;
			if (statusSeverity == org.eclipse.core.runtime.IStatus.WARNING) {
				markerSeverity = org.eclipse.core.resources.IMarker.SEVERITY_WARNING;    						
			} else if (statusSeverity == org.eclipse.core.runtime.IStatus.ERROR ||
					statusSeverity == org.eclipse.core.runtime.IStatus.CANCEL) {
				markerSeverity = org.eclipse.core.resources.IMarker.SEVERITY_ERROR;
			}
			marker.setAttribute(org.eclipse.core.resources.IMarker.SEVERITY, markerSeverity);
		} catch (org.eclipse.core.runtime.CoreException e) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
					"Failed to create validation marker", e); «EXPAND xpt::Common::nonNLS»
		}
		return marker;		
	}	
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenDiagram»«ENDDEFINE»
@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@@


1.2
log
@Non-nls comment replaced by template call.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.1
log
@rewrite marker navigation provider in xpand
@
text
@d27 1
a27 1
		«editorGen.plugin.getActivatorQualifiedClassName()».ID + ".«getValidationDiagnosticMarkerType()»"; //$NON-NLS-1$
d55 1
a55 1
					"Failed to delete validation markers", e); //$NON-NLS-1$
d78 1
a78 1
					"Failed to create validation marker", e); //$NON-NLS-1$
@

