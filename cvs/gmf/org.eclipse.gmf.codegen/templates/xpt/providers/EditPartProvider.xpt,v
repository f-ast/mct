head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081015-1925:1.2
	v20081008-1925:1.2
	v20081001-1925:1.2
	v20080930-1130:1.2
	v20080926-1245:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	v20080722-1827:1.2
	v20080718-1731:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.2
	v20080528-1052:1.2
	v20080521:1.2
	v20080516-1543:1.2
	v20080516-1143:1.2
	v20080512-1200:1.2
	v20080508-2000:1.2
	v20080507-1326:1.2
	v20080503-1740:1.1
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080417-1610:1.1
	v20080411-0411:1.1
	v20080404-1111:1.1
	v20080322-0000:1.1
	v20080222-1200:1.1
	v20080215-1500:1.1
	v20080207-0207:1.1
	v20071222-1111:1.1
	v20071214-1111:1.1
	v20071130-1111:1.1
	v20071124-0000:1.1
	v20071112-0000:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070928-0000:1.1
	v20070921-0000:1.1
	v20070915-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	39124821b4de4567;

1.1
date	2007.06.20.15.50.09;	author dstadnik;	state Exp;
branches;
next	;
commitid	3ba446794caf4567;


desc
@@


1.2
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»

«DEFINE EditPartProvider FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «providersPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «editPartProviderClassName»
		extends org.eclipse.gmf.runtime.diagram.ui.services.editpart.AbstractEditPartProvider {

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.gef.EditPartFactory factory;

	«EXPAND xpt::Common::generatedMemberComment»
	private boolean allowCaching;

	«EXPAND xpt::Common::generatedMemberComment»
	private java.lang.ref.WeakReference cachedPart;

	«EXPAND xpt::Common::generatedMemberComment»
	private java.lang.ref.WeakReference cachedView;

	«EXPAND xpt::Common::generatedMemberComment»
	public «editPartProviderClassName»() {
		setFactory(new «getEditPartFactoryQualifiedClassName()»());
		setAllowCaching(true);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public final org.eclipse.gef.EditPartFactory getFactory() {
		return factory;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void setFactory(org.eclipse.gef.EditPartFactory factory) {
		this.factory = factory;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public final boolean isAllowCaching() {
		return allowCaching;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected synchronized void setAllowCaching(boolean allowCaching) {
		this.allowCaching = allowCaching;
		if (!allowCaching) {
			cachedPart = null;
			cachedView = null;
		}
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart createEditPart(
			org.eclipse.gmf.runtime.notation.View view) {
		org.eclipse.gef.EditPart part = factory.createEditPart(null, view);
		if (part instanceof org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) {
			return (org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) part;
		}
		return null;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart getCachedPart(
			org.eclipse.gmf.runtime.notation.View view) {
		if (cachedView != null && cachedView.get() == view) {
			return (org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) cachedPart.get();
		}
		return null;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public synchronized org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart createGraphicEditPart(
			org.eclipse.gmf.runtime.notation.View view) {
		if (isAllowCaching()) {
			org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart part = getCachedPart(view);
			cachedPart = null;
			cachedView = null;
			if (part != null) {
				return part;
			}
		}
		return createEditPart(view);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public synchronized boolean provides(org.eclipse.gmf.runtime.common.core.service.IOperation operation) {
		if (operation instanceof org.eclipse.gmf.runtime.diagram.ui.services.editpart.CreateGraphicEditPartOperation) {
			org.eclipse.gmf.runtime.notation.View view =
					((org.eclipse.gmf.runtime.diagram.ui.services.editpart.IEditPartOperation) operation).getView();
			if (!«getEditPartQualifiedClassName()».MODEL_ID.equals(
					«getVisualIDRegistryQualifiedClassName()».getModelID(view))) {
				return false;
			}
			if (isAllowCaching() && getCachedPart(view) != null) {
				return true;
			}
			org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart part = createEditPart(view);
			if (part != null) {
				if (isAllowCaching()) {
					cachedPart = new java.lang.ref.WeakReference(part);
					cachedView = new java.lang.ref.WeakReference(view);
				}
				return true;
			}
		}
		return false;
	}
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenDiagram»«ENDDEFINE»
@


1.1
log
@[192848] Rewrite creation wizard and ui contributors in xpand
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@

