head	1.11;
access;
symbols
	v20081022-1925:1.11
	v20081015-1925:1.11
	v20081008-1925:1.11
	v20081001-1925:1.11
	v20080930-1130:1.11
	v20080926-1245:1.11
	v20080924-1925:1.11
	v20080917-1925:1.9
	v20080911-1728:1.9
	v20080910-1520:1.9
	v20080903-1520:1.9
	v20080827-1520:1.9
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080722-1827:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080528-1052:1.9
	v20080521:1.9
	v20080516-1543:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080508-2000:1.9
	v20080507-1326:1.9
	v20080503-1740:1.8
	v20080501-1739:1.8
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080411-0411:1.8
	v20080404-1111:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070928-0000:1.8
	v20070921-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070520-1200:1.8
	v20070518-1300:1.7
	v20070504-1000:1.7
	v20070427-0600:1.7
	v20070420-1000:1.7
	v20070413-1300:1.7
	v20070405-1100:1.7
	v20070403-1500:1.7
	v20070330-1300:1.7
	v20060330-1300:1.7
	v20070322-1100:1.7
	v20060316-0600:1.7
	v20070307-0700:1.7
	v20070301-1200:1.7
	v20070228-2000:1.7
	v20070221-1500:1.7
	v20070208-1800:1.7
	v20070103-0300:1.3
	M4_20:1.3
	v20061222-1800:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2008.09.24.13.52.33;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	2ba2748da46214567;

1.10
date	2008.09.24.13.51.41;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	2b77148da45ed4567;

1.9
date	2008.05.07.13.56.02;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	39124821b4de4567;

1.8
date	2007.05.18.21.17.19;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	2591464e17d14567;

1.7
date	2007.02.02.20.49.46;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	50c945c3a3e84567;

1.6
date	2007.01.30.16.42.28;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	4e0e45bf75734567;

1.5
date	2007.01.12.13.25.49;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	613645a78c5c4567;

1.4
date	2007.01.11.11.47.53;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	6c3445a623e74567;

1.3
date	2006.12.25.11.58.04;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	41fa458fbccb4567;

1.2
date	2006.12.21.17.14.28;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	710b458ac0ed4567;

1.1
date	2006.12.18.18.20.51;	author dstadnik;	state Exp;
branches;
next	;
commitid	7d774586dbfa4567;


desc
@@


1.11
log
@[174961] Code generation support for custom actions, fix RCP
@
text
@/*
 * Copyright (c) 2006, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«EXTENSION xpt::application::i18n»

«DEFINE ActionBarAdvisor FOR gmfgen::GenApplication-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «actionBarAdvisorClassName» extends org.eclipse.ui.application.ActionBarAdvisor {

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.ui.actions.ActionFactory.IWorkbenchAction lockToolBarAction;

	«EXPAND xpt::Common::generatedMemberComment»
    private org.eclipse.ui.actions.ActionFactory.IWorkbenchAction toggleCoolbarAction;

	«EXPAND xpt::Common::generatedMemberComment»
	public «actionBarAdvisorClassName»(org.eclipse.ui.application.IActionBarConfigurer configurer) {
		super(configurer);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.ui.IWorkbenchWindow getWindow() {
		return getActionBarConfigurer().getWindowConfigurer().getWindow();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void makeActions(org.eclipse.ui.IWorkbenchWindow window) {
		toggleCoolbarAction = org.eclipse.ui.actions.ActionFactory.TOGGLE_COOLBAR.create(window);
        register(toggleCoolbarAction);
        lockToolBarAction = org.eclipse.ui.actions.ActionFactory.LOCK_TOOL_BAR.create(window);
        register(lockToolBarAction);
		«EXPAND makeAction("window") FOREACH sharedContributionItems-»
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void fillMenuBar(org.eclipse.jface.action.IMenuManager menu) {
		«EXPAND fill("menu") FOR mainMenu-»
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void fillCoolBar(org.eclipse.jface.action.ICoolBarManager toolBar) {
		org.eclipse.jface.action.IMenuManager popUpMenu = new org.eclipse.jface.action.MenuManager();
		popUpMenu.add(new org.eclipse.jface.action.ActionContributionItem(lockToolBarAction));
		popUpMenu.add(new org.eclipse.jface.action.ActionContributionItem(toggleCoolbarAction));
		toolBar.setContextMenuManager(popUpMenu);
		«EXPAND fill("toolBar") FOR mainToolBar-»
	}

	«EXPAND openEditor FOR editorGen.editor-»

	«EXPAND actions-»

	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE openEditor FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
	private static boolean openEditor(org.eclipse.ui.IWorkbench workbench, org.eclipse.emf.common.util.URI fileURI) {
		org.eclipse.ui.IWorkbenchWindow workbenchWindow = workbench.getActiveWorkbenchWindow();
		org.eclipse.ui.IWorkbenchPage page = workbenchWindow.getActivePage();
		org.eclipse.ui.IEditorDescriptor editorDescriptor =
			workbench.getEditorRegistry().getDefaultEditor(fileURI.toFileString());
		if (editorDescriptor == null) {
			org.eclipse.jface.dialogs.MessageDialog.openError(workbenchWindow.getShell(), 
                «EXPAND xpt::Externalizer::accessorCall(editorGen.application.i18nKeyForDefaultFileEditorErrorDialog().titleKey()) FOR editorGen»,
				org.eclipse.osgi.util.NLS.bind(
				    «EXPAND xpt::Externalizer::accessorCall(editorGen.application.i18nKeyForDefaultFileEditorErrorDialog().messageKey()) FOR editorGen», 
				    fileURI.toFileString()));
			return false;
		} else {
			try {
				page.openEditor(new org.eclipse.emf.common.ui.URIEditorInput(fileURI), editorDescriptor.getId());
			} catch (org.eclipse.ui.PartInitException exception) {
				org.eclipse.jface.dialogs.MessageDialog.openError(
					workbenchWindow.getShell(), 
					«EXPAND xpt::Externalizer::accessorCall(editorGen.application.i18nKeyForDefaultEditorOpenErrorDialog().titleKey()) FOR editorGen»,
					exception.getMessage());
				return false;
			}
		}
		return true;
	}
«ENDDEFINE»

«DEFINE makeAction(String windowVar) FOR gmfgen::GenContributionItem»
	«ERROR "Can not make action for " + this»
«ENDDEFINE»

«DEFINE makeAction(String windowVar) FOR gmfgen::GenActionFactoryContributionItem»
	register(org.eclipse.ui.actions.ActionFactory.«name».create(«windowVar»));
«ENDDEFINE»

«DEFINE fill(String managerVar) FOR gmfgen::GenContributionManager»
	«EXPAND contribute(managerVar) FOREACH items-»
«ENDDEFINE»

«DEFINE contribute(String managerVar) FOR gmfgen::GenContributionItem»
	«ERROR "Can not contribute item: " + this»
«ENDDEFINE»

«DEFINE contribute(String managerVar) FOR gmfgen::GenGroupMarker»
	«managerVar».add(new org.eclipse.jface.action.GroupMarker(«groupName»));
«ENDDEFINE»

«DEFINE contribute(String managerVar) FOR gmfgen::GenSeparator»
	«managerVar».add(new org.eclipse.jface.action.Separator(«IF null != groupName»«groupName»«ENDIF»));
«ENDDEFINE»

«DEFINE contribute(String managerVar) FOR gmfgen::GenMenuManager»
	«LET managerVar + "X" AS menuVar-»
	{
		org.eclipse.jface.action.IMenuManager «menuVar» = new  org.eclipse.jface.action.MenuManager(
		«IF null != name»«EXPAND xpt::Externalizer::accessorCall(i18nKeyForMenu()) FOR editorGen»«ELSE»null«ENDIF»«IF null != iD», «iD»«ENDIF»);
		«EXPAND contribute(menuVar) FOREACH items-»
		«managerVar».add(«menuVar»);
	}
	«ENDLET-»
«ENDDEFINE»

«DEFINE contribute(String managerVar) FOR gmfgen::GenToolBarManager»
	«LET managerVar + "X" AS toolBarVar-»
	{
		org.eclipse.jface.action.IToolBarManager «toolBarVar» = new  org.eclipse.jface.action.ToolBarManager();
		«EXPAND contribute(toolBarVar) FOREACH items-»
		«managerVar».add(new org.eclipse.jface.action.ToolBarContributionItem(«toolBarVar»«IF null != iD», «iD»«ENDIF»));
	}
	«ENDLET-»
«ENDDEFINE»

«DEFINE contribute(String managerVar) FOR gmfgen::GenSharedContributionItem»
	«EXPAND contributeShared(managerVar) FOR actualItem-»
«ENDDEFINE»

«DEFINE contributeShared(String managerVar) FOR gmfgen::GenContributionItem»
	«ERROR "Can not contribute shared item: " + this»
«ENDDEFINE»

«DEFINE contributeShared(String managerVar) FOR gmfgen::GenActionFactoryContributionItem»
	«managerVar».add(getAction(org.eclipse.ui.actions.ActionFactory.«name».getId()));
«ENDDEFINE»

«DEFINE actions FOR gmfgen::GenApplication»
«EXPAND NewDiagramAction-»
«EXPAND OpenUriAction-»
«EXPAND OpenAction-»
«EXPAND AboutAction-»
«ENDDEFINE»

«DEFINE NewDiagramAction FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedClassComment»
	public static class NewDiagramAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		«EXPAND xpt::Common::generatedMemberComment»
		public void run(org.eclipse.jface.action.IAction action) {
			«editorGen.diagram.getCreationWizardQualifiedClassName()» wizard =
				new «editorGen.diagram.getCreationWizardQualifiedClassName()»();
			wizard.init(getWindow().getWorkbench(), org.eclipse.jface.viewers.StructuredSelection.EMPTY);
			org.eclipse.jface.wizard.WizardDialog wizardDialog =
				new org.eclipse.jface.wizard.WizardDialog(getWindow().getShell(), wizard);
			wizardDialog.open();
		}
	}

«ENDDEFINE»

«DEFINE OpenUriAction FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedClassComment»
	public static class OpenURIAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		«EXPAND xpt::Common::generatedMemberComment»
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog loadResourceDialog =
				new org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog(getWindow().getShell());
			if (org.eclipse.jface.dialogs.Dialog.OK == loadResourceDialog.open()) {
				for (java.util.Iterator i = loadResourceDialog.getURIs().iterator(); i.hasNext();) {
					openEditor(getWindow().getWorkbench(), (org.eclipse.emf.common.util.URI) i.next());
				}
			}
		}
	}

«ENDDEFINE»

«DEFINE OpenAction FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedClassComment»
	public static class OpenAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		«EXPAND xpt::Common::generatedMemberComment»
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.swt.widgets.FileDialog fileDialog =
				new org.eclipse.swt.widgets.FileDialog(getWindow().getShell(), org.eclipse.swt.SWT.OPEN);
			fileDialog.open();
			if (fileDialog.getFileName() != null && fileDialog.getFileName().length() > 0) {
				openEditor(getWindow().getWorkbench(), org.eclipse.emf.common.util.URI.createFileURI(
					fileDialog.getFilterPath() + java.io.File.separator + fileDialog.getFileName()));
			}
		}
	}
«ENDDEFINE»

«DEFINE AboutAction FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedClassComment»
	public static class AboutAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		«EXPAND xpt::Common::generatedMemberComment»
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.jface.dialogs.MessageDialog.openInformation(getWindow().getShell(), 
                «EXPAND xpt::Externalizer::accessorCall(i18nKeyForAboutDialog().titleKey()) FOR editorGen»,
                «EXPAND xpt::Externalizer::accessorCall(i18nKeyForAboutDialog().messageKey()) FOR editorGen»
				);
		}
	}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenApplication-»
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenApplication-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForDefaultFileEditorErrorDialog().titleKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForDefaultFileEditorErrorDialog().messageKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForDefaultEditorOpenErrorDialog().titleKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForAboutDialog().titleKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForAboutDialog().messageKey())-»
«IF null != mainMenu-»
«EXPAND internal_i18nAccessors FOR mainMenu-»
«EXPAND internal_i18nAccessors FOREACH mainMenu.items.collectGenMenuManagers()-»
«ENDIF»
«EXPAND internal_i18nAccessors FOREACH sharedContributionItems.collectGenMenuManagers()-»
«ENDDEFINE»

«DEFINE internal_i18nAccessors FOR gmfgen::GenMenuManager-»
«IF null != name»«EXPAND xpt::Externalizer::accessorField(i18nKeyForMenu())»«ENDIF-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenApplication-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForDefaultFileEditorErrorDialog().titleKey(), "Error")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForDefaultFileEditorErrorDialog().messageKey(), "There is no editor registered for the file \"{0}\"")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForDefaultEditorOpenErrorDialog().titleKey(), "Open Editor")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForAboutDialog().titleKey(), "About")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForAboutDialog().messageKey(), editorGen.modelID+" Diagram Editor")-»
«IF null != mainMenu-»
«EXPAND internal_i18nValues FOR mainMenu-»
«EXPAND internal_i18nValues FOREACH mainMenu.items.collectGenMenuManagers()-»
«ENDIF»
«EXPAND internal_i18nValues FOREACH sharedContributionItems.collectGenMenuManagers()-»
«ENDDEFINE»

«DEFINE internal_i18nValues FOR gmfgen::GenMenuManager-»
«IF null != name»«EXPAND xpt::Externalizer::messageEntry(i18nKeyForMenu(), name)»«ENDIF-»
«ENDDEFINE»
@


1.10
log
@[174961] Code generation support for custom actions, fix RCP
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.9
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d129 1
a129 1
		«IF null != name»«EXPAND xpt::Externalizer::accessorCall(i18nKeyForMenu()) FOR this.application.editorGen»«ELSE»null«ENDIF»«IF null != iD», «iD»«ENDIF»);
@


1.8
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.7
log
@[139733] akarjakina - lack of i18n support. More templates i18n-ed
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.6
log
@All the @@generated comments moved into a separate "define" statement.
@
text
@d16 2
d80 5
a84 2
			org.eclipse.jface.dialogs.MessageDialog.openError(workbenchWindow.getShell(), "Error",
				org.eclipse.osgi.util.NLS.bind("There is no editor registered for the file ''{0}''", fileURI.toFileString()));
d91 3
a93 1
					workbenchWindow.getShell(), "Open Editor", exception.getMessage());
d128 2
a129 1
		org.eclipse.jface.action.IMenuManager «menuVar» = new  org.eclipse.jface.action.MenuManager(«name», «iD»);
d223 4
a226 2
			org.eclipse.jface.dialogs.MessageDialog.openInformation(getWindow().getShell(), "About",
				"«editorGen.modelID» Diagram Editor");
d232 35
a266 1
«ENDDEFINE»@


1.5
log
@provide default toolbar content
@
text
@d20 1
a20 3
/**
 * @@generated
 */
d23 1
a23 3
	/**
	 * @@generated
	 */
d26 1
a26 3
	/**
	 * @@generated
	 */
d29 1
a29 3
	/**
	 * @@generated
	 */
d34 1
a34 3
	/**
	 * @@generated
	 */
d39 1
a39 3
	/**
	 * @@generated
	 */
d48 1
a48 3
	/**
	 * @@generated
	 */
d53 1
a53 3
	/**
	 * @@generated
	 */
d71 1
a71 3
	/**
	 * @@generated
	 */
d158 1
a158 3
	/**
	 * @@generated
	 */
d161 1
a161 3
		/**
		 * @@generated
		 */
d175 1
a175 3
	/**
	 * @@generated
	 */
d178 1
a178 3
		/**
		 * @@generated
		 */
d193 1
a193 3
	/**
	 * @@generated
	 */
d196 1
a196 3
		/**
		 * @@generated
		 */
d210 1
a210 3
	/**
	 * @@generated
	 */
d213 1
a213 3
		/**
		 * @@generated
		 */
@


1.4
log
@foreach-expand for --> expand foreach
@
text
@d28 10
d53 4
d71 4
@


1.3
log
@Modularization of templates related to RCP
@
text
@d43 1
a43 3
		«FOREACH sharedContributionItems AS item-»
			«EXPAND makeAction("window") FOR item-»
		«ENDFOREACH-»
d103 1
a103 3
	«FOREACH items AS item-»
		«EXPAND contribute(managerVar) FOR item-»
	«ENDFOREACH-»
d122 1
a122 3
		«FOREACH items AS item-»
			«EXPAND contribute(menuVar) FOR item-»
		«ENDFOREACH-»
d132 1
a132 3
		«FOREACH items AS item-»
			«EXPAND contribute(toolBarVar) FOR item-»
		«ENDFOREACH-»
@


1.2
log
@allow to specify ui contributions for rcp application in genmodel
@
text
@d62 9
a93 3
	
	«EXPAND actions FOR this-»
}
d159 7
d184 3
d206 3
d227 1
d229 1
d244 3
@


1.1
log
@rewrite application templates in xpand; simplify genmodel
@
text
@d35 2
a36 7
	protected void fillMenuBar(org.eclipse.jface.action.IMenuManager menuBar) {
		org.eclipse.ui.IWorkbenchWindow window = getActionBarConfigurer().getWindowConfigurer().getWindow();
		menuBar.add(createFileMenu(window));
		menuBar.add(createEditMenu(window));
		menuBar.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menuBar.add(createWindowMenu(window));
		menuBar.add(createHelpMenu(window));
d42 4
a45 20
	protected org.eclipse.jface.action.IMenuManager createFileMenu(org.eclipse.ui.IWorkbenchWindow window) {
		org.eclipse.jface.action.IMenuManager menu = new org.eclipse.jface.action.MenuManager(
			"&File", org.eclipse.ui.IWorkbenchActionConstants.M_FILE);
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.FILE_START));
		org.eclipse.jface.action.IMenuManager newMenu = new org.eclipse.jface.action.MenuManager("&New", "new"); //$NON-NLS-2$
		newMenu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menu.add(newMenu);
		menu.add(new org.eclipse.jface.action.Separator());
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menu.add(new org.eclipse.jface.action.Separator());
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.CLOSE.create(window));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.CLOSE_ALL.create(window));
		menu.add(new org.eclipse.jface.action.Separator());
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.SAVE.create(window));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.SAVE_AS.create(window));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.SAVE_ALL.create(window));
		menu.add(new org.eclipse.jface.action.Separator());
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.QUIT.create(window));
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.FILE_END));
		return menu;
d51 2
a52 20
	protected org.eclipse.jface.action.IMenuManager createEditMenu(org.eclipse.ui.IWorkbenchWindow window) {
		org.eclipse.jface.action.IMenuManager menu = new org.eclipse.jface.action.MenuManager(
			"&Edit", org.eclipse.ui.IWorkbenchActionConstants.M_EDIT);
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.EDIT_START));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.UNDO.create(window));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.REDO.create(window));
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.UNDO_EXT));
		menu.add(new org.eclipse.jface.action.Separator());
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.CUT.create(window));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.COPY.create(window));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.PASTE.create(window));
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.CUT_EXT));
		menu.add(new org.eclipse.jface.action.Separator());
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.DELETE.create(window));
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.SELECT_ALL.create(window));
		menu.add(new org.eclipse.jface.action.Separator());
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.ADD_EXT));
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.EDIT_END));
		menu.add(new org.eclipse.jface.action.Separator(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		return menu;
d58 2
a59 27
	protected org.eclipse.jface.action.IMenuManager createWindowMenu(org.eclipse.ui.IWorkbenchWindow window) {
		org.eclipse.jface.action.IMenuManager menu = new org.eclipse.jface.action.MenuManager(
			"&Window", org.eclipse.ui.IWorkbenchActionConstants.M_WINDOW);
		addToMenuAndRegister(menu, org.eclipse.ui.actions.ActionFactory.OPEN_NEW_WINDOW.create(window));
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menu.add(org.eclipse.ui.actions.ContributionItemFactory.OPEN_WINDOWS.create(window));
		return menu;
	}

	/**
	 * @@generated
	 */
	protected org.eclipse.jface.action.IMenuManager createHelpMenu(org.eclipse.ui.IWorkbenchWindow window) {
		org.eclipse.jface.action.IMenuManager menu = new org.eclipse.jface.action.MenuManager(
			"&Help", org.eclipse.ui.IWorkbenchActionConstants.M_HELP);
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.HELP_START));
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.HELP_END));
		menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		return menu;
	}

	/**
	 * @@generated
	 */
	protected void addToMenuAndRegister(org.eclipse.jface.action.IMenuManager menu, org.eclipse.jface.action.IAction action) {
		menu.add(action);
		register(action);
d85 4
d90 63
a221 1
}
@

