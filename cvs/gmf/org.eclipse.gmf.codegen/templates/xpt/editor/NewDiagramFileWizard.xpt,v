head	1.17;
access;
symbols
	v20081022-1925:1.17
	v20081015-1925:1.17
	v20081008-1925:1.15
	v20081001-1925:1.15
	v20080930-1130:1.15
	v20080926-1245:1.15
	v20080924-1925:1.15
	v20080917-1925:1.15
	v20080911-1728:1.15
	v20080910-1520:1.15
	v20080903-1520:1.15
	v20080827-1520:1.15
	v20080813-1520:1.15
	v20080806-1520:1.15
	v20080722-1827:1.15
	v20080718-1731:1.15
	v20080716-1600:1.15
	v20080716-1642:1.15
	R2_1_maintenance:1.15.0.2
	Root_R2_1_maintenance:1.15
	R2_1_0:1.15
	v20080610-1132:1.15
	v20080603-1553:1.15
	v20080528-1052:1.15
	v20080521:1.15
	v20080516-1543:1.15
	v20080516-1143:1.15
	v20080512-1200:1.15
	v20080508-2000:1.15
	v20080507-1326:1.15
	v20080503-1740:1.14
	v20080501-1739:1.14
	v20080425-1959:1.14
	v20080417-1610:1.14
	v20080411-0411:1.14
	v20080404-1111:1.14
	v20080322-0000:1.14
	v20080222-1200:1.14
	v20080215-1500:1.14
	v20080207-0207:1.14
	v20071222-1111:1.14
	v20071214-1111:1.14
	v20071130-1111:1.14
	v20071124-0000:1.14
	v20071112-0000:1.14
	v20071108-0000:1.14
	v20071003-0000:1.14
	v20070928-0000:1.14
	v20070921-0000:1.14
	v20070915-0000:1.14
	v20070903-0000:1.14
	v20070809-0000:1.14
	R2_0_maintenance:1.14.0.2
	R2_0:1.14
	R4_20:1.14
	v20070621-0000:1.14
	RC3_20:1.14
	v20070614-1400:1.14
	v20070608-1300:1.14
	v20070605-1400:1.14
	v20070601-1400:1.14
	v20070525-1500:1.14
	v20070520-1200:1.14
	v20070518-1300:1.13
	v20070504-1000:1.10
	v20070427-0600:1.10
	v20070420-1000:1.10
	v20070413-1300:1.10
	v20070405-1100:1.8
	v20070403-1500:1.7
	v20070330-1300:1.7
	v20060330-1300:1.7
	v20070322-1100:1.6
	v20060316-0600:1.4
	v20070307-0700:1.2
	v20070301-1200:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.17
date	2008.10.15.18.01.18;	author atikhomirov;	state Exp;
branches;
next	1.16;
commitid	b45d48f62fed4567;

1.16
date	2008.10.15.17.35.45;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	966a48f629f04567;

1.15
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.14;
commitid	39124821b4de4567;

1.14
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	2591464e17d14567;

1.13
date	2007.05.15.19.19.22;	author ashatalin;	state Exp;
branches;
next	1.12;
commitid	43d3464a07b84567;

1.12
date	2007.05.15.18.34.13;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	25434649fd1f4567;

1.11
date	2007.05.11.13.50.54;	author ashatalin;	state Exp;
branches;
next	1.10;
commitid	6340464474b24567;

1.10
date	2007.04.06.15.34.21;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	33134616687b4567;

1.9
date	2007.04.05.15.03.04;	author ashatalin;	state Exp;
branches;
next	1.8;
commitid	7e8946150fa54567;

1.8
date	2007.04.04.11.18.20;	author bblajer;	state Exp;
branches;
next	1.7;
commitid	2664461389794567;

1.7
date	2007.03.28.08.49.38;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	2240460a2c174567;

1.6
date	2007.03.16.16.40.13;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	5ac345fac86b4567;

1.5
date	2007.03.16.13.57.05;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	741e45faa2304567;

1.4
date	2007.03.15.12.21.03;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	34a45f93a2e4567;

1.3
date	2007.03.15.11.57.13;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	21b545f934984567;

1.2
date	2007.03.01.16.10.27;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	445745e6faf24567;

1.1
date	2007.03.01.13.05.36;	author dstadnik;	state Exp;
branches;
next	;
commitid	1a6045e6cf9e4567;


desc
@@


1.17
log
@[249301] Wrap use of assert  into dedicated template
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 *    Dmitry Stadnik (Borland) - rewritten in xpand
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«EXTENSION xpt::editor::Utils»

«DEFINE className FOR gmfgen::GenDiagram»«newDiagramFileWizardClassName»«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«editorGen.editor.packageName».«EXPAND className»«ENDDEFINE»

«DEFINE NewDiagramFileWizard FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «editorGen.editor.packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» extends org.eclipse.jface.wizard.Wizard {

	«EXPAND xpt::Common::generatedMemberComment»
	private «EXPAND creationPage» myFileCreationPage;

	«EXPAND xpt::Common::generatedMemberComment»
	private «EXPAND xpt::editor::ModelElementSelectionPage::qualifiedClassName» diagramRootElementSelectionPage;

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.emf.transaction.TransactionalEditingDomain myEditingDomain;

	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className»(org.eclipse.emf.common.util.URI domainModelURI,
			org.eclipse.emf.ecore.EObject diagramRoot,
			org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain) {
		«EXPAND xpt::Common::assert("domainModelURI != null : \"Domain model uri must be specified\"")-»
	    «EXPAND xpt::Common::assert("diagramRoot != null : \"Doagram root element must be specified\"")-»
	    «EXPAND xpt::Common::assert("editingDomain != null : \"Editing domain must be specified\"")-»

		myFileCreationPage = new «EXPAND creationPage»(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardCreationPage().nameKey()) FOR editorGen», org.eclipse.jface.viewers.StructuredSelection.EMPTY);
		myFileCreationPage.setTitle(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardCreationPage().titleKey()) FOR editorGen»);
		myFileCreationPage.setDescription(org.eclipse.osgi.util.NLS.bind(
				«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardCreationPage().descriptionKey()) FOR editorGen», 
				«EXPAND xpt::editor::VisualIDRegistry::modelID»));
		org.eclipse.core.runtime.IPath filePath;
		String fileName = domainModelURI.trimFileExtension().lastSegment();
		if (domainModelURI.isPlatformResource()) {
			filePath = new org.eclipse.core.runtime.Path(domainModelURI.trimSegments(1).toPlatformString(true));
		} else if (domainModelURI.isFile()) {
			filePath = new org.eclipse.core.runtime.Path(domainModelURI.trimSegments(1).toFileString());
		} else {
			// TODO : use some default path
			throw new IllegalArgumentException("Unsupported URI: " + domainModelURI); «EXPAND xpt::Common::nonNLS»
		}
		myFileCreationPage.setContainerFullPath(filePath);
		myFileCreationPage.setFileName(«getDiagramEditorUtilQualifiedClassName()».getUniqueFileName(
				filePath, fileName, "«editorGen.diagramFileExtension»")); «EXPAND xpt::Common::nonNLS»

		diagramRootElementSelectionPage = new DiagramRootElementSelectionPage(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardRootSelectionPage().nameKey()) FOR editorGen»);
		diagramRootElementSelectionPage.setTitle(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardRootSelectionPage().titleKey()) FOR editorGen»);
		diagramRootElementSelectionPage.setDescription(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardRootSelectionPage().descriptionKey()) FOR editorGen»);
		diagramRootElementSelectionPage.setModelElement(diagramRoot);

	   	myEditingDomain = editingDomain;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void addPages() {
		addPage(myFileCreationPage);
		addPage(diagramRootElementSelectionPage);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean performFinish() {
		java.util.List affectedFiles = new java.util.LinkedList();
		«IF null == editorGen.application-»
		org.eclipse.core.resources.IFile diagramFile = myFileCreationPage.createNewFile();
		«EXPAND xpt::Common::setCharset("diagramFile")-»
		affectedFiles.add(diagramFile);
		org.eclipse.emf.common.util.URI diagramModelURI = org.eclipse.emf.common.util.URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true);
		«ELSE-»
		org.eclipse.core.runtime.IPath diagramModelPath = myFileCreationPage.getContainerFullPath().append(myFileCreationPage.getFileName());
		org.eclipse.emf.common.util.URI diagramModelURI = org.eclipse.emf.common.util.URI.createFileURI(diagramModelPath.toString());
		«ENDIF-»
		org.eclipse.emf.ecore.resource.ResourceSet resourceSet = myEditingDomain.getResourceSet();
		final org.eclipse.emf.ecore.resource.Resource diagramResource = resourceSet.createResource(diagramModelURI);
		org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand command =
			new org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand(
				myEditingDomain, «EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardInitDiagramCommand()) FOR editorGen», affectedFiles) {

			protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(
					org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info)
						throws org.eclipse.core.commands.ExecutionException {
				int diagramVID = «EXPAND xpt::editor::VisualIDRegistry::getDiagramVisualIDMethodCall»(diagramRootElementSelectionPage.getModelElement());
				if (diagramVID != «EXPAND xpt::editor::VisualIDRegistry::visualID») {
					return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
						«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardIncorrectRootError()) FOR editorGen»);
				}
				org.eclipse.gmf.runtime.notation.Diagram diagram =
					org.eclipse.gmf.runtime.diagram.core.services.ViewService.createDiagram(
						diagramRootElementSelectionPage.getModelElement(), «EXPAND xpt::editor::VisualIDRegistry::modelID»,
						«EXPAND xpt::plugin::Activator::preferenceHintAccess FOR editorGen»);
				diagramResource.getContents().add(diagram);
				«IF editorGen.sameFileForDiagramAndModel-»
				diagramResource.getContents().add(diagram.getElement());
				«ENDIF-»
				«IF !synchronized-»
				new «getDiagramContentInitializerQualifiedClassName()»().initDiagramContent(diagram);			
				«ENDIF-»
				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult();
			}
		};
		try {
			org.eclipse.core.commands.operations.OperationHistoryFactory.getOperationHistory().execute(
				command, new org.eclipse.core.runtime.NullProgressMonitor(), null);
			diagramResource.save(«EXPAND xpt::Common::getSaveOptions»);
			«getDiagramEditorUtilQualifiedClassName()».openDiagram(diagramResource);
		} catch (org.eclipse.core.commands.ExecutionException e) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
				"Unable to create model and diagram", e); «EXPAND xpt::Common::nonNLS»
		} catch (java.io.IOException ex) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
				"Save operation failed for: " + diagramModelURI, ex); «EXPAND xpt::Common::nonNLS»
		} catch (org.eclipse.ui.PartInitException ex) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
				"Unable to open editor", ex); «EXPAND xpt::Common::nonNLS»
		}			
		return true;
	}

	«EXPAND xpt::Common::generatedClassComment»
	private static class DiagramRootElementSelectionPage extends «EXPAND xpt::editor::ModelElementSelectionPage::qualifiedClassName» {

		«EXPAND xpt::Common::generatedMemberComment»
		protected DiagramRootElementSelectionPage(String pageName) {
			super(pageName);
		}

		«EXPAND xpt::Common::generatedMemberComment»
		protected String getSelectionTitle() {
			return «EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardRootSelectionPageSelectionTitle()) FOR editorGen»;
		}

		«EXPAND xpt::Common::generatedMemberComment»
		protected boolean validatePage() {
			if (selectedModelElement == null) {
				setErrorMessage(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardRootSelectionPageNoSelectionMessage()) FOR editorGen»);
				return false;
			}
			boolean result = org.eclipse.gmf.runtime.diagram.core.services.ViewService.getInstance().provides(
				new org.eclipse.gmf.runtime.diagram.core.services.view.CreateDiagramViewOperation(
					new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(selectedModelElement),
					«EXPAND xpt::editor::VisualIDRegistry::modelID», «EXPAND xpt::plugin::Activator::preferenceHintAccess FOR editorGen»));
			setErrorMessage(result ? null : «EXPAND xpt::Externalizer::accessorCall(i18nKeyForNewDiagramFileWizardRootSelectionPageInvalidSelectionMessage()) FOR editorGen»);
			return result;
		}
	}
}
«ENDDEFINE»

«DEFINE creationPage FOR gmfgen::GenDiagram»
«IF null == editorGen.application-»
org.eclipse.ui.dialogs.WizardNewFileCreationPage«ELSE-»
«editorGen.application.packageName».WizardNewFileCreationPage«ENDIF-»
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardCreationPage().nameKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardCreationPage().titleKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardCreationPage().descriptionKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardRootSelectionPage().nameKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardRootSelectionPage().titleKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardRootSelectionPage().descriptionKey())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardRootSelectionPageSelectionTitle())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardRootSelectionPageNoSelectionMessage())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardRootSelectionPageInvalidSelectionMessage())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardInitDiagramCommand())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForNewDiagramFileWizardIncorrectRootError())-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardCreationPage().nameKey(), "Initialize new diagram file")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardCreationPage().titleKey(), "Diagram file")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardCreationPage().descriptionKey(), "Create new diagram based on {0} model content")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardRootSelectionPage().nameKey(), "Select diagram root element")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardRootSelectionPage().titleKey(), "Diagram root element")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardRootSelectionPage().descriptionKey(), "Select semantic model element to be depicted on diagram")-»"Select diagram root element:"
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardRootSelectionPageSelectionTitle(), "Select diagram root element:")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardRootSelectionPageNoSelectionMessage(), "Diagram root element is not selected")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardRootSelectionPageInvalidSelectionMessage(), "Invalid diagram root element is selected")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardInitDiagramCommand(), "Initializing diagram contents")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForNewDiagramFileWizardIncorrectRootError(), "Incorrect model object stored as a root resource object")-»
«ENDDEFINE»
@


1.16
log
@[250767] refactored to access DIAGRAM_PREFERENCES_HINT uniformly
@
text
@d43 3
a45 3
		assert domainModelURI != null : "Domain model uri must be specified"; «EXPAND xpt::Common::nonNLS»
	    assert diagramRoot != null : "Doagram root element must be specified"; «EXPAND xpt::Common::nonNLS»
	    assert editingDomain != null : "Editing domain must be specified"; «EXPAND xpt::Common::nonNLS»
@


1.15
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d109 1
a109 1
						«editorGen.plugin.getActivatorQualifiedClassName()».DIAGRAM_PREFERENCES_HINT);
d160 1
a160 2
					«EXPAND xpt::editor::VisualIDRegistry::modelID»,
					«editorGen.plugin.getActivatorQualifiedClassName()».DIAGRAM_PREFERENCES_HINT));
@


1.14
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d14 1
a14 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.13
log
@Replacing static method calls with templates.
@
text
@d14 1
a14 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.12
log
@Generating VisualIDRegistry using XPAND.
@
text
@d51 1
a51 1
				«getEditPartQualifiedClassName()».MODEL_ID));
d108 1
a108 1
						diagramRootElementSelectionPage.getModelElement(), «getEditPartQualifiedClassName()».MODEL_ID,
d160 1
a160 1
					«getEditPartQualifiedClassName()».MODEL_ID,
@


1.11
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d101 2
a102 2
				int diagramVID = «getVisualIDRegistryQualifiedClassName()».getDiagramVisualID(diagramRootElementSelectionPage.getModelElement());
				if (diagramVID != «getEditPartQualifiedClassName()».VISUAL_ID) {
@


1.10
log
@[139733] akarjakina - i18n support
@
text
@d115 1
a115 1
				new «editorGen.editor.packageName».DiagramContentsInitializer().initDiagramContents(diagram, diagramRootElementSelectionPage.getModelElement());
@


1.9
log
@[179970] - Adopt code generater to make use of EMF "conditional resource saving"
@
text
@d17 2
d47 5
a51 4
		myFileCreationPage = new «EXPAND creationPage»("Initialize new diagram file", org.eclipse.jface.viewers.StructuredSelection.EMPTY);
		myFileCreationPage.setTitle("Diagram file");
		myFileCreationPage.setDescription(
			"Create new diagram based on " + «getEditPartQualifiedClassName()».MODEL_ID + " model content");
d60 1
a60 1
			throw new IllegalArgumentException("Unsupported URI: " + domainModelURI);
d66 3
a68 3
		diagramRootElementSelectionPage = new DiagramRootElementSelectionPage("Select diagram root element");
		diagramRootElementSelectionPage.setTitle("Diagram root element");
		diagramRootElementSelectionPage.setDescription("Select semantic model element to be depicted on diagram");
d96 1
a96 1
				myEditingDomain, "Initializing diagram contents", affectedFiles) { «EXPAND xpt::Common::nonNLS»
d104 1
a104 1
						"Incorrect model object stored as a root resource object"); «EXPAND xpt::Common::nonNLS»
d148 1
a148 1
			return "Select diagram root element:";
d154 1
a154 1
				setErrorMessage("Diagram root element is not selected");
d162 1
a162 1
			setErrorMessage(result ? null : "Invalid diagram root element is selected");
d174 28
@


1.8
log
@User should be able to configure whether NON-NLS markers are shown or not
@
text
@d82 1
a82 6
		try {
			diagramFile.setCharset("UTF-8", new org.eclipse.core.runtime.NullProgressMonitor()); «EXPAND xpt::Common::nonNLS»
		} catch (org.eclipse.core.runtime.CoreException e) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
				"Unable to set charset for diagram file", e); «EXPAND xpt::Common::nonNLS»
		}
d120 1
a120 1
			diagramResource.save(java.util.Collections.EMPTY_MAP);
@


1.7
log
@[168660] Support shortcuts in RCP applications
@
text
@d41 3
a43 3
		assert domainModelURI != null : "Domain model uri must be specified"; //$NON-NLS-1$
	    assert diagramRoot != null : "Doagram root element must be specified"; //$NON-NLS-1$
	    assert editingDomain != null : "Editing domain must be specified"; //$NON-NLS-1$
d61 1
a61 1
				filePath, fileName, "«editorGen.diagramFileExtension»")); //$NON-NLS-1$
d83 1
a83 1
			diagramFile.setCharset("UTF-8", new org.eclipse.core.runtime.NullProgressMonitor()); //$NON-NLS-1$
d86 1
a86 1
				"Unable to set charset for diagram file", e); //$NON-NLS-1$
d98 1
a98 1
				myEditingDomain, "Initializing diagram contents", affectedFiles) { //$NON-NLS-1$
d106 1
a106 1
						"Incorrect model object stored as a root resource object"); //$NON-NLS-1$
d129 1
a129 1
				"Unable to create model and diagram", e); //$NON-NLS-1$
d132 1
a132 1
				"Save operation failed for: " + diagramModelURI, ex); //$NON-NLS-1$
d135 1
a135 1
				"Unable to open editor", ex); //$NON-NLS-1$
@


1.6
log
@[168661] Support init fiagram in RCP
@
text
@a28 3
	private org.eclipse.emf.transaction.TransactionalEditingDomain myEditingDomain;

	«EXPAND xpt::Common::generatedMemberComment»
d32 1
a32 1
	private org.eclipse.emf.common.util.URI domainModelURI;
d35 1
a35 1
	private org.eclipse.emf.ecore.EObject myDiagramRoot;
d42 2
a43 7
	    assert diagramRoot != null : "Null diagramRoot in «EXPAND className» constructor"; //$NON-NLS-1$
	    assert editingDomain != null : "Null editingDomain in «EXPAND className» constructor"; //$NON-NLS-1$

	   	this.domainModelURI = domainModelURI;
	   	myDiagramRoot = diagramRoot;
	   	myEditingDomain = editingDomain;
	}
a44 2
	«EXPAND xpt::Common::generatedMemberComment»
	public void addPages() {
d60 13
a72 1
		myFileCreationPage.setFileName(«getDiagramEditorUtilQualifiedClassName()».getUniqueFileName(filePath, fileName, "«editorGen.diagramFileExtension»")); //$NON-NLS-1$
d74 1
a74 1
		addPage(new RootElementSelectorPage());
d103 1
a103 1
				int diagramVID = «getVisualIDRegistryQualifiedClassName()».getDiagramVisualID(myDiagramRoot);
d110 1
a110 1
						myDiagramRoot, «getEditPartQualifiedClassName()».MODEL_ID,
d117 1
a117 1
				new «editorGen.editor.packageName».DiagramContentsInitializer().initDiagramContents(diagram, myDiagramRoot);
d141 1
a141 21
	private class RootElementSelectorPage extends org.eclipse.jface.wizard.WizardPage implements org.eclipse.jface.viewers.ISelectionChangedListener {

		«EXPAND xpt::Common::generatedMemberComment»
		protected RootElementSelectorPage() {
			super("Select diagram root element");
			setTitle("Diagram root element");
			setDescription("Select semantic model element to be depicted on diagram");
		}

		«EXPAND xpt::Common::generatedMemberComment»
		public void createControl(org.eclipse.swt.widgets.Composite parent) {
			initializeDialogUnits(parent);
			org.eclipse.swt.widgets.Composite topLevel = new org.eclipse.swt.widgets.Composite(parent, org.eclipse.swt.SWT.NONE);
			topLevel.setLayout(new org.eclipse.swt.layout.GridLayout());
			topLevel.setLayoutData(new org.eclipse.swt.layout.GridData(
				org.eclipse.swt.layout.GridData.VERTICAL_ALIGN_FILL | org.eclipse.swt.layout.GridData.HORIZONTAL_ALIGN_FILL));
			topLevel.setFont(parent.getFont());
			setControl(topLevel);
			createModelBrowser(topLevel);
			setPageComplete(validatePage());
		}
d144 2
a145 24
		private void createModelBrowser(org.eclipse.swt.widgets.Composite parent) {
			org.eclipse.swt.widgets.Composite panel = new org.eclipse.swt.widgets.Composite(parent, org.eclipse.swt.SWT.NONE);
			panel.setLayoutData(new org.eclipse.swt.layout.GridData(org.eclipse.swt.layout.GridData.FILL_BOTH));
			org.eclipse.swt.layout.GridLayout layout = new org.eclipse.swt.layout.GridLayout();
			layout.marginWidth = 0;
			panel.setLayout(layout);
			
			org.eclipse.swt.widgets.Label label = new org.eclipse.swt.widgets.Label(panel, org.eclipse.swt.SWT.NONE);
			label.setText("Select diagram root element:");
			label.setLayoutData(new org.eclipse.swt.layout.GridData(org.eclipse.swt.layout.GridData.HORIZONTAL_ALIGN_BEGINNING));
		
			org.eclipse.jface.viewers.TreeViewer treeViewer = new org.eclipse.jface.viewers.TreeViewer(panel,
				org.eclipse.swt.SWT.SINGLE | org.eclipse.swt.SWT.H_SCROLL | org.eclipse.swt.SWT.V_SCROLL | org.eclipse.swt.SWT.BORDER);
			org.eclipse.swt.layout.GridData layoutData = new org.eclipse.swt.layout.GridData(org.eclipse.swt.layout.GridData.FILL_BOTH);
			layoutData.heightHint = 300;
			layoutData.widthHint = 300;
			treeViewer.getTree().setLayoutData(layoutData);
			treeViewer.setContentProvider(new org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider(
				«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getItemProvidersAdapterFactory()));
			treeViewer.setLabelProvider(new org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider(
				«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getItemProvidersAdapterFactory()));
			treeViewer.setInput(myDiagramRoot.eResource());
			treeViewer.setSelection(new org.eclipse.jface.viewers.StructuredSelection(myDiagramRoot));
			treeViewer.addSelectionChangedListener(this);
d149 2
a150 18
		public void selectionChanged(org.eclipse.jface.viewers.SelectionChangedEvent event) {
			myDiagramRoot = null;
			if (event.getSelection() instanceof org.eclipse.jface.viewers.IStructuredSelection) {
				org.eclipse.jface.viewers.IStructuredSelection selection = (org.eclipse.jface.viewers.IStructuredSelection) event.getSelection();
				if (selection.size() == 1) {
					Object selectedElement = selection.getFirstElement();
					if (selectedElement instanceof org.eclipse.emf.edit.provider.IWrapperItemProvider) {
						selectedElement = ((org.eclipse.emf.edit.provider.IWrapperItemProvider) selectedElement).getValue();
					}
					if (selectedElement instanceof org.eclipse.emf.ecore.util.FeatureMap.Entry) {
						selectedElement = ((org.eclipse.emf.ecore.util.FeatureMap.Entry) selectedElement).getValue();
					}
					if (selectedElement instanceof org.eclipse.emf.ecore.EObject) {
						myDiagramRoot = (org.eclipse.emf.ecore.EObject) selectedElement;
					}
				}
			}
			setPageComplete(validatePage());
d154 2
a155 2
		private boolean validatePage() {
			if (myDiagramRoot == null) {
d161 1
a161 1
					new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(myDiagramRoot),
d164 1
a164 1
			setErrorMessage(result ? null : "Invalid diagram root element was selected");
@


1.5
log
@remove stale attribute
@
text
@d77 2
d86 6
d93 1
a93 4
		final org.eclipse.emf.ecore.resource.Resource diagramResource = resourceSet.createResource(
			org.eclipse.emf.common.util.URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true));
		java.util.List affectedFiles = new java.util.LinkedList();
		affectedFiles.add(diagramFile);
d113 1
a113 1
				«ENDIF»
d116 1
a116 1
				«ENDIF»
d130 1
a130 1
				"Save operation failed for: " + diagramFile.getFullPath().toString(), ex); //$NON-NLS-1$
@


1.4
log
@refactor attributes to match types
@
text
@a37 3
	private org.eclipse.ui.IWorkbenchPage myWorkbenchPage;

	«EXPAND xpt::Common::generatedMemberComment»
a41 1
			org.eclipse.ui.IWorkbenchPage workbenchPage,
a44 1
		assert workbenchPage != null : "Null workbenchPage in «EXPAND className» constructor"; //$NON-NLS-1$
a48 1
	   	myWorkbenchPage = workbenchPage;
@


1.3
log
@[168661] Use URIs instead of IResources to make code reusable in RCP
@
text
@d35 1
a35 1
	private org.eclipse.emf.common.util.URI mySelectedModelFile;
d44 1
a44 1
	public «EXPAND className»(org.eclipse.emf.common.util.URI selectedModelFile,
d48 1
a48 1
		assert selectedModelFile != null : "Null selectedModelFile in «EXPAND className» constructor"; //$NON-NLS-1$
d52 2
a53 2
	    
	   	mySelectedModelFile = selectedModelFile;
d66 5
a70 5
		String fileName = mySelectedModelFile.trimFileExtension().lastSegment();
		if (mySelectedModelFile.isPlatformResource()) {
			filePath = new org.eclipse.core.runtime.Path(mySelectedModelFile.trimSegments(1).toPlatformString(true));
		} else if (mySelectedModelFile.isFile()) {
			filePath = new org.eclipse.core.runtime.Path(mySelectedModelFile.trimSegments(1).toFileString());
d73 1
a73 1
			throw new IllegalArgumentException("Unsupported URI: " + mySelectedModelFile);
@


1.2
log
@fix compilation problem
@
text
@d35 1
a35 1
	private org.eclipse.core.resources.IFile mySelectedModelFile;
a40 3
	private org.eclipse.jface.viewers.IStructuredSelection mySelection;

	«EXPAND xpt::Common::generatedMemberComment»
d44 1
a44 1
	public «EXPAND className»(org.eclipse.core.resources.IFile selectedModelFile,
a45 1
			org.eclipse.jface.viewers.IStructuredSelection selection,
a49 1
		assert selection != null : "Null selection in «EXPAND className» constructor"; //$NON-NLS-1$
a54 1
	   	mySelection = selection;
d61 1
a61 14
		myFileCreationPage = new «EXPAND creationPage»("Initialize new Ecore diagram file", mySelection) {

			public void createControl(org.eclipse.swt.widgets.Composite parent) {
				super.createControl(parent);
				org.eclipse.core.resources.IContainer parentContainer = mySelectedModelFile.getParent();
				String originalFileName = mySelectedModelFile.getProjectRelativePath().removeFileExtension().lastSegment();
				String fileExtension = ".«editorGen.diagramFileExtension»"; //$NON-NLS-1$
				String fileName = originalFileName + fileExtension;
				for (int i = 1; parentContainer.getFile(new org.eclipse.core.runtime.Path(fileName)).exists(); i++) {
					fileName = originalFileName + i + fileExtension;
				}
				setFileName(fileName);
			}
		};
d65 12
a93 1
		affectedFiles.add(mySelectedModelFile);
@


1.1
log
@rewrite NewDiagramFileWizard in xpand
@
text
@d75 1
a75 1
				for (int i = 1; parentContainer.getFile(new Path(fileName)).exists(); i++) {
@

