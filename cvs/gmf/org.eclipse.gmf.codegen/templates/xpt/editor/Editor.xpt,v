head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080722-1827:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.4
	v20080521:1.3
	v20080516-1543:1.3
	v20080516-1143:1.3
	v20080512-1200:1.3
	v20080508-2000:1.3
	v20080507-1326:1.3
	v20080503-1740:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080411-0411:1.2
	v20080404-1111:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20080207-0207:1.2
	v20071222-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071112-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070928-0000:1.2
	v20070921-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070614-1400:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2008.10.15.17.35.44;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	966a48f629f04567;

1.5
date	2008.05.29.11.44.53;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	6887483e97334567;

1.4
date	2008.05.26.18.44.22;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	3a58483b04fe4567;

1.3
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	39124821b4de4567;

1.2
date	2007.06.13.12.49.09;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	55a1466fe7bb4567;

1.1
date	2007.06.12.14.18.39;	author ashatalin;	state Exp;
branches;
next	;
commitid	6fec466eab3f4567;


desc
@@


1.6
log
@[250767] refactored to access DIAGRAM_PREFERENCES_HINT uniformly
@
text
@/*
 * Copyright (c) 2006, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::editor::Utils»

«DEFINE Editor FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::copyright FOR editorGen-»
package «packageName»;

	«EXPAND xpt::Common::generatedClassComment»
public class «className»  extends org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditor«EXPAND implementsList FOR getEditorImplementsList(this)» {

	«EXPAND attributes-»
	
	«EXPAND constructor-»
	
	«EXPAND getContextID-»
	«EXPAND createPaletteRoot FOR editorGen.diagram.palette-»
	
	«EXPAND getPreferencesHint-»
	
	«EXPAND getContributorId-»
	«EXPAND getAdapter-»
	
	«EXPAND getDocumentProvider-»
	
	«EXPAND getEditingDomain-»
	
	«EXPAND setDocumentProvider-»
	«IF isIDEMode(this)-»
	
		«EXPAND gotoMarker-»
		
		«EXPAND isSaveAsAllowed-»
		
		«EXPAND doSaveAs-»
		
		«EXPAND performSaveAs-»
		
		«EXPAND getShowInContext-»
		«EXPAND getNavigatorSelection FOR editorGen.navigator-»
	«ENDIF-»

	«EXPAND configureGraphicalViewer-»

	«IF editorGen.diagram.generateCreateShortcutAction()-»
	
		«EXPAND initializeGraphicalViewer-»
		
		«EXPAND DropTargetListener-»
	«ENDIF-»

	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public static final String ID = "«iD»"; «EXPAND xpt::Common::nonNLS»
	
	«EXPAND xpt::Common::generatedMemberComment»
public static final String CONTEXT_ID = "«contextID»"; «EXPAND xpt::Common::nonNLS»
«ENDDEFINE»

«DEFINE constructor FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public «className»() {
	super(«null != editorGen.diagram.palette && editorGen.diagram.palette.flyout»);
}
«ENDDEFINE»

«DEFINE getContextID FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected String getContextID() {
	return CONTEXT_ID;
}
«ENDDEFINE»

«DEFINE createPaletteRoot FOR gmfgen::Palette-»

	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.palette.PaletteRoot createPaletteRoot(org.eclipse.gef.palette.PaletteRoot existingPaletteRoot) {
	org.eclipse.gef.palette.PaletteRoot root = super.createPaletteRoot(existingPaletteRoot);
	new «getFactoryQualifiedClassName()»().fillPalette(root);
	return root;
}
«ENDDEFINE»

«DEFINE getPreferencesHint FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint getPreferencesHint() {
«REM» 
	XXX seems better we use preference store directly (in configureGraphicalViewer) instead all these indirect ids 
«ENDREM»«-»
	return «EXPAND xpt::plugin::Activator::preferenceHintAccess FOR editorGen»;
}
«ENDDEFINE»

«DEFINE getContributorId FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public String getContributorId() {
	return «editorGen.plugin.getActivatorQualifiedClassName()».ID;
}
«ENDDEFINE»

«DEFINE getAdapter FOR gmfgen::GenEditorView-»
	«IF !hasPropertySheet(this) || hasNavigator(this)-»
	
	«EXPAND xpt::Common::generatedMemberComment»
public Object getAdapter(Class type) {
	«IF !hasPropertySheet(this)-»
	if (type == org.eclipse.ui.views.properties.IPropertySheetPage.class) {
		return null;
	}
	«ENDIF-»
	«IF hasNavigator(this)-»
	if (type == org.eclipse.ui.part.IShowInTargetList.class) {
		return new org.eclipse.ui.part.IShowInTargetList() {
			public String[] getShowInTargetIds() {
				return new String[] { org.eclipse.ui.navigator.resources.ProjectExplorer.VIEW_ID };
			}
		};
	}
	«ENDIF-»
	return super.getAdapter(type);
}
	«ENDIF-»
«ENDDEFINE»

«DEFINE getDocumentProvider FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocumentProvider getDocumentProvider(org.eclipse.ui.IEditorInput input) {
	if («EXPAND checkEditorInput») {
		return «editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getDocumentProvider();
	}
	return super.getDocumentProvider(input);
}
«ENDDEFINE»

«DEFINE getEditingDomain FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.emf.transaction.TransactionalEditingDomain getEditingDomain() {
	org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document = getEditorInput() != null ? getDocumentProvider().getDocument(getEditorInput()) : null;
	if (document instanceof org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) {
		return ((org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) document).getEditingDomain();
	}
	return super.getEditingDomain();
}
«ENDDEFINE»

«DEFINE setDocumentProvider FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected void setDocumentProvider(org.eclipse.ui.IEditorInput input) {
	if («EXPAND checkEditorInput») {
		setDocumentProvider(«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getDocumentProvider());
	} else {
		super.setDocumentProvider(input);
	}
}
«ENDDEFINE»

«DEFINE checkEditorInput FOR gmfgen::GenEditorView»«IF isIDEMode(this)»input instanceof org.eclipse.ui.IFileEditorInput || «ENDIF»input instanceof org.eclipse.emf.common.ui.URIEditorInput«ENDDEFINE»

«DEFINE gotoMarker FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public void gotoMarker(org.eclipse.core.resources.IMarker marker) {
	org.eclipse.gmf.runtime.common.ui.services.marker.MarkerNavigationService.getInstance().gotoMarker(this, marker);
}
«ENDDEFINE»

«DEFINE isSaveAsAllowed FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public boolean isSaveAsAllowed() {
	return true;
}
«ENDDEFINE»

«DEFINE doSaveAs FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public void doSaveAs() {
	performSaveAs(new org.eclipse.core.runtime.NullProgressMonitor());
}
«ENDDEFINE»

«DEFINE performSaveAs FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected void performSaveAs(org.eclipse.core.runtime.IProgressMonitor progressMonitor) {
	org.eclipse.swt.widgets.Shell shell = getSite().getShell();
	org.eclipse.ui.IEditorInput input = getEditorInput();
	org.eclipse.ui.dialogs.SaveAsDialog dialog = new org.eclipse.ui.dialogs.SaveAsDialog(shell);
	org.eclipse.core.resources.IFile original = input instanceof org.eclipse.ui.IFileEditorInput ? ((org.eclipse.ui.IFileEditorInput) input).getFile() : null;
	if (original != null) {
		dialog.setOriginalFile(original);
	}
	dialog.create();
	org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocumentProvider provider = getDocumentProvider();
	if (provider == null) {
		// editor has been programmatically closed while the dialog was open
		return;
	}
	if (provider.isDeleted(input) && original != null) {
		String message = org.eclipse.osgi.util.NLS.bind(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForSavingDeletedFile(this)) FOR editorGen», original.getName());
		dialog.setErrorMessage(null);
		dialog.setMessage(message, org.eclipse.jface.dialogs.IMessageProvider.WARNING);
	}
	if (dialog.open() == org.eclipse.jface.window.Window.CANCEL) {
		if (progressMonitor != null) {
			progressMonitor.setCanceled(true);
		}
		return;
	}
	org.eclipse.core.runtime.IPath filePath = dialog.getResult();
	if (filePath == null) {
		if (progressMonitor != null) {
			progressMonitor.setCanceled(true);
		}
		return;
	}
	org.eclipse.core.resources.IWorkspaceRoot workspaceRoot = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot();
	org.eclipse.core.resources.IFile file = workspaceRoot.getFile(filePath);
	final org.eclipse.ui.IEditorInput newInput = new org.eclipse.ui.part.FileEditorInput(file);
	// Check if the editor is already open
	org.eclipse.ui.IEditorMatchingStrategy matchingStrategy = getEditorDescriptor().getEditorMatchingStrategy();
	org.eclipse.ui.IEditorReference[] editorRefs = org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getEditorReferences();
	for (int i = 0; i < editorRefs.length; i++) {
		if (matchingStrategy.matches(editorRefs[i], newInput)) {
			org.eclipse.jface.dialogs.MessageDialog.openWarning(shell, «EXPAND xpt::Externalizer::accessorCall(titleKey(i18nKeyForSaveAsProblems(this))) FOR editorGen», «EXPAND xpt::Externalizer::accessorCall(messageKey(i18nKeyForSaveAsProblems(this))) FOR editorGen»);
			return;
		}
	}
	boolean success = false;
	try {
		provider.aboutToChange(newInput);
		getDocumentProvider(newInput).saveDocument(progressMonitor, newInput, getDocumentProvider().getDocument(getEditorInput()), true);
		success = true;
	} catch (org.eclipse.core.runtime.CoreException x) {
		org.eclipse.core.runtime.IStatus status = x.getStatus();
		if (status == null || status.getSeverity() != org.eclipse.core.runtime.IStatus.CANCEL) {
			org.eclipse.jface.dialogs.ErrorDialog.openError(shell, «EXPAND xpt::Externalizer::accessorCall(titleKey(i18nKeyForSaveProblems(this))) FOR editorGen», «EXPAND xpt::Externalizer::accessorCall(messageKey(i18nKeyForSaveProblems(this))) FOR editorGen», x.getStatus());
		}
	} finally {
		provider.changed(newInput);
		if (success) {
			setInput(newInput);
		}
	}
	if (progressMonitor != null) {
		progressMonitor.setCanceled(!success);
	}
}
«ENDDEFINE»

«DEFINE getShowInContext FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.ui.part.ShowInContext getShowInContext() {
	return new org.eclipse.ui.part.ShowInContext(getEditorInput(), «IF hasNavigator(this)»getNavigatorSelection()«ELSE»getGraphicalViewer().getSelection()«ENDIF»);
}
«ENDDEFINE»

«DEFINE getNavigatorSelection FOR gmfgen::GenNavigator-»
	
	«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.jface.viewers.ISelection getNavigatorSelection() {
	org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument document = getDiagramDocument();
	«EXPAND xpt::navigator::NavigatorLinkHelper::findSelectionBody-»
}
«ENDDEFINE»

«DEFINE configureGraphicalViewer FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected void configureGraphicalViewer() {
		super.configureGraphicalViewer();
		«EXPAND xpt::editor::DiagramEditorContextMenuProvider::qualifiedClassName FOR editorGen.diagram» provider =
				new «EXPAND xpt::editor::DiagramEditorContextMenuProvider::qualifiedClassName FOR editorGen.diagram»(this, getDiagramGraphicalViewer());
		getDiagramGraphicalViewer().setContextMenu(provider);
		getSite().registerContextMenu(org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds.DIAGRAM_EDITOR_CONTEXT_MENU, provider, getDiagramGraphicalViewer());
	}
«ENDDEFINE»

«DEFINE initializeGraphicalViewer FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected void initializeGraphicalViewer() {
	super.initializeGraphicalViewer();
	«EXPAND addDropTargetListener("org.eclipse.jface.util.LocalSelectionTransfer.getTransfer()")-»
	«EXPAND addDropTargetListener("org.eclipse.emf.edit.ui.dnd.LocalTransfer.getInstance()")-»
}
«ENDDEFINE»

«DEFINE addDropTargetListener(String transferAccessor) FOR gmfgen::GenEditorView-»
getDiagramGraphicalViewer().addDropTargetListener(new DropTargetListener(getDiagramGraphicalViewer(), «transferAccessor») {

	protected Object getJavaObject(org.eclipse.swt.dnd.TransferData data) {
		return «transferAccessor».nativeToJava(data);
	}

});
«ENDDEFINE»

«DEFINE DropTargetListener FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedClassComment»
private abstract class DropTargetListener extends org.eclipse.gmf.runtime.diagram.ui.parts.DiagramDropTargetListener {

	«EXPAND DTL_constructor-»

	«EXPAND DTL_getObjectsBeingDropped-»

	«EXPAND DTL_getJavaObject-»

	«EXPAND DTL_additions-»
}
«ENDDEFINE»


«DEFINE DTL_constructor FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
public DropTargetListener(org.eclipse.gef.EditPartViewer viewer, org.eclipse.swt.dnd.Transfer xfer) {
	super(viewer, xfer);
}
«ENDDEFINE»

«DEFINE DTL_getObjectsBeingDropped FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected java.util.List getObjectsBeingDropped() {
	org.eclipse.swt.dnd.TransferData data = getCurrentEvent().currentDataType;
	java.util.Collection uris = new java.util.HashSet();

	Object transferedObject = getJavaObject(data);
	if (transferedObject instanceof org.eclipse.jface.viewers.IStructuredSelection) {
		org.eclipse.jface.viewers.IStructuredSelection selection = (org.eclipse.jface.viewers.IStructuredSelection) transferedObject;
		for (java.util.Iterator it = selection.iterator(); it.hasNext();) {
			Object nextSelectedObject = it.next();
«REM»
	TODO: move NavigatorItem to some place available in runtime and remove 
	"genEditor.getEditorGen().getNavigator() != null" test
«ENDREM»«-»
			«IF hasNavigator(this)»if (nextSelectedObject instanceof «editorGen.navigator.getNavigatorItemQualifiedClassName()») {
				org.eclipse.gmf.runtime.notation.View view = ((«editorGen.navigator.getNavigatorItemQualifiedClassName()») nextSelectedObject).getView();
				nextSelectedObject = view.getElement();
			} else «ENDIF»if (nextSelectedObject instanceof org.eclipse.core.runtime.IAdaptable) {
				org.eclipse.core.runtime.IAdaptable adaptable = (org.eclipse.core.runtime.IAdaptable) nextSelectedObject;
				nextSelectedObject = adaptable.getAdapter(org.eclipse.emf.ecore.EObject.class);
			}

			if (nextSelectedObject instanceof org.eclipse.emf.ecore.EObject) {
				org.eclipse.emf.ecore.EObject modelElement = (org.eclipse.emf.ecore.EObject) nextSelectedObject;
				org.eclipse.emf.ecore.resource.Resource modelElementResource = modelElement.eResource();
				uris.add(modelElementResource.getURI().appendFragment(modelElementResource.getURIFragment(modelElement)));	
			}
		}
	}

	java.util.List result = new java.util.ArrayList();
	for (java.util.Iterator it = uris.iterator(); it.hasNext();) {
		org.eclipse.emf.common.util.URI nextURI = (org.eclipse.emf.common.util.URI) it.next();
		org.eclipse.emf.ecore.EObject modelObject = getEditingDomain().getResourceSet().getEObject(nextURI, true);
		result.add(modelObject);
	}
	return result;
}
«ENDDEFINE»

«DEFINE DTL_getJavaObject FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»
protected abstract Object getJavaObject(org.eclipse.swt.dnd.TransferData data);
«ENDDEFINE»

«DEFINE implementsList FOR List[String]-»
«IF !isEmpty()» implements «EXPAND implementsListEntry FOREACH this SEPARATOR ", "»«ENDIF-»
«ENDDEFINE»

«DEFINE implementsListEntry FOR String»«this»«ENDDEFINE»

«DEFINE DTL_additions FOR gmfgen::GenEditorView-»
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenEditorView-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenEditorView-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForSavingDeletedFile(this), "The original file \"{0}\" has been deleted.")-»
«EXPAND xpt::Externalizer::messageEntry(titleKey(i18nKeyForSaveAsProblems(this)), "Problem During Save As...")-»
«EXPAND xpt::Externalizer::messageEntry(messageKey(i18nKeyForSaveAsProblems(this)), "Save could not be completed. Target file is already open in another editor.")-»
«EXPAND xpt::Externalizer::messageEntry(titleKey(i18nKeyForSaveProblems(this)), "Save Problems")-»
«EXPAND xpt::Externalizer::messageEntry(messageKey(i18nKeyForSaveProblems(this)), "Could not save file.")-»
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForSavingDeletedFile(this))-»
	«EXPAND xpt::Externalizer::accessorField(titleKey(i18nKeyForSaveAsProblems(this)))-»
	«EXPAND xpt::Externalizer::accessorField(messageKey(i18nKeyForSaveAsProblems(this)))-»
	«EXPAND xpt::Externalizer::accessorField(titleKey(i18nKeyForSaveProblems(this)))-»
	«EXPAND xpt::Externalizer::accessorField(messageKey(i18nKeyForSaveProblems(this)))-»
«ENDDEFINE»@


1.5
log
@[178255] post-fix
@
text
@d2 1
a2 1
 * Copyright (c) 2006,2007 Borland Software Corporation
d106 1
a106 1
	return «editorGen.plugin.getActivatorQualifiedClassName()».DIAGRAM_PREFERENCES_HINT;
@


1.4
log
@[178225] Allow to delete ref-based links from the context menu
@
text
@d284 4
a287 2
		getDiagramGraphicalViewer().setContextMenu(
				new DiagramEditorContextMenuProvider(this, getDiagramGraphicalViewer()));
@


1.3
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d54 3
d280 9
@


1.2
log
@[191853] - Convert /editor/ElementChooser.javajet template to xpand
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.1
log
@[191856] - Convert /editor/Editor.javajet template to xpand
[192134] - NPE while regenerating TaiPan diagram (in editor template)
@
text
@d365 1
a365 1
«IF !isEmpty()» implements«EXPAND implementsListEntry(this) FOREACH this»«ENDIF-»
d368 1
a368 1
«DEFINE implementsListEntry(List[String] implementsList) FOR String»«IF implementsList.first() != this»,«ENDIF» «this»«ENDDEFINE»
@

