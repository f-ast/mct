head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080930-1130:1.6
	v20080926-1245:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20080722-1827:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080528-1052:1.6
	v20080521:1.6
	v20080516-1543:1.5
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080508-2000:1.4
	v20080507-1326:1.4
	v20080503-1740:1.3
	v20080501-1739:1.3
	v20080425-1959:1.3
	v20080417-1610:1.3
	v20080411-0411:1.3
	v20080404-1111:1.3
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20080207-0207:1.2
	v20071222-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071112-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070928-0000:1.2
	v20070921-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2008.05.19.11.18.40;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	520c483162104567;

1.5
date	2008.05.16.15.26.35;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	5926482da7aa4567;

1.4
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	39124821b4de4567;

1.3
date	2008.04.02.16.04.04;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	72fe47f3ae744567;

1.2
date	2007.06.20.13.13.11;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	2b2467927e74567;

1.1
date	2007.06.19.19.26.17;	author dstadnik;	state Exp;
branches;
next	;
commitid	611446782dd84567;


desc
@@


1.6
log
@[202577] fix junit test failure
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */
«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»

«EXTENSION xpt::editor::Utils»

«DEFINE CreationWizard FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «editorGen.editor.packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «creationWizardClassName»
		extends org.eclipse.jface.wizard.Wizard implements org.eclipse.ui.INewWizard {

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.ui.IWorkbench workbench;

	«EXPAND xpt::Common::generatedMemberComment»
    protected org.eclipse.jface.viewers.IStructuredSelection selection;

	«EXPAND xpt::Common::generatedMemberComment»
	protected «getCreationWizardPageQualifiedClassName()» diagramModelFilePage;
	«IF isStandaloneDomainModel()-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected «getCreationWizardPageQualifiedClassName()» domainModelFilePage;
	«ENDIF-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.emf.ecore.resource.Resource diagram;

	«EXPAND xpt::Common::generatedMemberComment»
	private boolean openNewlyCreatedDiagramEditor = true;

	«EXPAND xpt::Common::generatedMemberComment»
    public org.eclipse.ui.IWorkbench getWorkbench() {
        return workbench;
    }

	«EXPAND xpt::Common::generatedMemberComment»
	public org.eclipse.jface.viewers.IStructuredSelection getSelection() {
        return selection;
    }

	«EXPAND xpt::Common::generatedMemberComment»
	public final org.eclipse.emf.ecore.resource.Resource getDiagram() {
		return diagram;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public final boolean isOpenNewlyCreatedDiagramEditor() {
		return openNewlyCreatedDiagramEditor;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void setOpenNewlyCreatedDiagramEditor(boolean openNewlyCreatedDiagramEditor) {
		this.openNewlyCreatedDiagramEditor = openNewlyCreatedDiagramEditor;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void init(org.eclipse.ui.IWorkbench workbench, org.eclipse.jface.viewers.IStructuredSelection selection) {
        this.workbench = workbench;
        this.selection = selection;
		setWindowTitle(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizard().titleKey()) FOR editorGen»);
		setDefaultPageImageDescriptor(«editorGen.plugin.getActivatorQualifiedClassName()».getBundledImageDescriptor(
				"icons/wizban/New«IF domainDiagramElement != null»«domainDiagramElement.genPackage.prefix»«ENDIF»Wizard.gif")); //$NON-NLS-1$
		setNeedsProgressMonitor(true);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void addPages() {
		diagramModelFilePage = new «getCreationWizardPageQualifiedClassName()»(
				"DiagramModelFile", getSelection(), "«editorGen.diagramFileExtension»"); //$NON-NLS-1$ //$NON-NLS-2$
		diagramModelFilePage.setTitle(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizardDiagramPage().titleKey()) FOR editorGen»);
		diagramModelFilePage.setDescription(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizardDiagramPage().descriptionKey()) FOR editorGen»);
		addPage(diagramModelFilePage);
	«IF isStandaloneDomainModel()-»

		domainModelFilePage = new «getCreationWizardPageQualifiedClassName()»(
				"DomainModelFile", getSelection(), "«editorGen.domainFileExtension»") { //$NON-NLS-1$ //$NON-NLS-2$

			public void setVisible(boolean visible) {
				if (visible) {
					String fileName = diagramModelFilePage.getFileName();
					fileName = fileName.substring(0, fileName.length() - ".«editorGen.diagramFileExtension»".length()); //$NON-NLS-1$
					setFileName(«getDiagramEditorUtilQualifiedClassName()».getUniqueFileName(
							getContainerFullPath(), fileName, "«editorGen.domainFileExtension»")); //$NON-NLS-1$
				}
				super.setVisible(visible);
			}
		};
		domainModelFilePage.setTitle(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizardDomainPage().titleKey()) FOR editorGen»);
		domainModelFilePage.setDescription(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizardDomainPage().descriptionKey()) FOR editorGen»);
		addPage(domainModelFilePage);
	«ENDIF-»
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean performFinish() {
		org.eclipse.jface.operation.IRunnableWithProgress op =
	«IF editorGen.application == null-»
				new org.eclipse.ui.actions.WorkspaceModifyOperation(null) {

			protected void execute(org.eclipse.core.runtime.IProgressMonitor monitor)
					throws org.eclipse.core.runtime.CoreException, InterruptedException {
	«ELSE-»
				new org.eclipse.jface.operation.IRunnableWithProgress() {

			public void run(org.eclipse.core.runtime.IProgressMonitor monitor)
					throws InvocationTargetException, InterruptedException {
	«ENDIF-»
				diagram = «getDiagramEditorUtilQualifiedClassName()».createDiagram(diagramModelFilePage.getURI(),
	«IF isStandaloneDomainModel()-»
						domainModelFilePage.getURI(),
	«ENDIF-»
						monitor);
				if (isOpenNewlyCreatedDiagramEditor() && diagram != null) {
					try {
						«getDiagramEditorUtilQualifiedClassName()».openDiagram(diagram);
					} catch (org.eclipse.ui.PartInitException e) {
						org.eclipse.jface.dialogs.ErrorDialog.openError(getContainer().getShell(),
								«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizardOpenEditorError()) FOR editorGen», null, e.getStatus());
					}
				}
			}
		};
		try {
			getContainer().run(false, true, op);
		} catch (InterruptedException e) {
			return false;
		} catch (java.lang.reflect.InvocationTargetException e) {
			if (e.getTargetException() instanceof org.eclipse.core.runtime.CoreException) {
				org.eclipse.jface.dialogs.ErrorDialog.openError(getContainer().getShell(),
						«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizardCreationError()) FOR editorGen», null,
						((org.eclipse.core.runtime.CoreException) e.getTargetException()).getStatus());
			} else {
				«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
						"Error creating diagram", e.getTargetException()); //$NON-NLS-1$
			}
			return false;
		}
		return diagram != null;
	}
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenDiagram»«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizard().titleKey(), "New "+editorGen.modelID+" Diagram")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardDiagramPage().titleKey(), "Create "+editorGen.modelID+" Diagram")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardDiagramPage().descriptionKey(), (isStandaloneDomainModel() ? "Select file that will contain diagram model." : "Select file that will contain diagram and domain models."))-»
«IF isStandaloneDomainModel()-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardDomainPage().titleKey(), "Create "+editorGen.modelID+" Domain Model")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardDomainPage().descriptionKey(), "Select file that will contain domain model.")-»
«ENDIF-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardOpenEditorError(), "Error opening diagram editor")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardCreationError(), "Creation Problems")-»
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizard().titleKey())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizardDiagramPage().titleKey())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizardDiagramPage().descriptionKey())-»
	«IF isStandaloneDomainModel()-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizardDomainPage().titleKey())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizardDomainPage().descriptionKey())-»
	«ENDIF-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizardOpenEditorError())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizardCreationError())-»
«ENDDEFINE»
@


1.5
log
@[202577] Use model name from diagram page
@
text
@d95 1
a95 1
					setFileName(TaiPanDiagramEditorUtil.getUniqueFileName(
@


1.4
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d89 12
a100 1
				"DomainModelFile", getSelection(), "«editorGen.domainFileExtension»"); //$NON-NLS-1$ //$NON-NLS-2$
@


1.3
log
@[225328] - Ecore Diagram or Domain?
@
text
@d12 1
a12 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.2
log
@[139733] akarjakina - i18n support for recently migrated templates
@
text
@d153 1
a153 1
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardDomainPage().titleKey(), "Create "+editorGen.modelID+" Diagram")-»
@


1.1
log
@[192848] Rewrite creation wizard and ui contributors in xpand
@
text
@d73 1
a73 1
		setWindowTitle("New «editorGen.modelID» Diagram");
d83 2
a84 6
		diagramModelFilePage.setTitle("Create «editorGen.modelID» Diagram");
	«IF isStandaloneDomainModel()-»
		diagramModelFilePage.setDescription("Select file that will contain diagram model.");
	«ELSE-»
		diagramModelFilePage.setDescription("Select file that will contain diagram and domain models.");
	«ENDIF-»
d90 2
a91 2
		domainModelFilePage.setTitle("Create «editorGen.modelID» Diagram");
		domainModelFilePage.setDescription("Select file that will contain domain model.");
d120 1
a120 1
								"Error opening diagram editor", null, e.getStatus());
d132 1
a132 1
						"Creation Problems", null,
d147 24
@

