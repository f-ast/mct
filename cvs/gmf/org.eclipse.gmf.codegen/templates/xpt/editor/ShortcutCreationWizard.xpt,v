head	1.7;
access;
symbols
	v20081022-1925:1.7
	v20081015-1925:1.7
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080930-1130:1.6
	v20080926-1245:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20080722-1827:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080528-1052:1.6
	v20080521:1.6
	v20080516-1543:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080508-2000:1.6
	v20080507-1326:1.6
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080411-0411:1.5
	v20080404-1111:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070928-0000:1.5
	v20070921-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070403-1500:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.10.15.17.35.45;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	966a48f629f04567;

1.6
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	39124821b4de4567;

1.5
date	2007.06.19.15.36.50;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	72c24677f8124567;

1.4
date	2007.06.19.09.01.10;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	1b846779b554567;

1.3
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	2591464e17d14567;

1.2
date	2007.04.04.11.18.20;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	2664461389794567;

1.1
date	2007.03.28.08.49.38;	author dstadnik;	state Exp;
branches;
next	;
commitid	2240460a2c174567;


desc
@@


1.7
log
@[250767] refactored to access DIAGRAM_PREFERENCES_HINT uniformly
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */
«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::editor::GenDiagram»
«EXTENSION xpt::editor::Utils»

«DEFINE className FOR gmfgen::GenDiagram»«defaultShortcutCreationWizardClassName()»«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«editorGen.editor.packageName».«EXPAND className»«ENDDEFINE»

«DEFINE ShortcutCreationWizard FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «editorGen.editor.packageName»;

/**
 * Allows to select foreign model element and add shortcut to the diagram.
 * 
 * @@generated
 */
public class «EXPAND className» extends org.eclipse.jface.wizard.Wizard {

	/**
	 * @@generated
	 */
	private ReferencedElementSelectionPage referencedElementSelectionPage;

	/**
	 * @@generated
	 */
	private org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain;

	/**
	 * @@generated
	 */
	public «EXPAND className»(org.eclipse.emf.ecore.EObject modelElement, org.eclipse.gmf.runtime.notation.View view,
			org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain) {
		referencedElementSelectionPage = new ReferencedElementSelectionPage(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForShortcutWizardReferencedElementPage().nameKey()) FOR editorGen», view);
		referencedElementSelectionPage.setTitle(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForShortcutWizardReferencedElementPage().titleKey()) FOR editorGen»);
		referencedElementSelectionPage.setDescription(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForShortcutWizardReferencedElementPage().descriptionKey()) FOR editorGen»);
		referencedElementSelectionPage.setModelElement(modelElement);

		this.editingDomain = editingDomain;
	}

	/**
	 * @@generated
	 */
	public void addPages() {
		addPage(referencedElementSelectionPage);
	}

	/**
	 * @@generated
	 */
	public boolean performFinish() {
		org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor viewDescriptor =
				new org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor(
						new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(referencedElementSelectionPage.getModelElement()),
						org.eclipse.gmf.runtime.notation.Node.class, null, «EXPAND xpt::plugin::Activator::preferenceHintAccess FOR editorGen»);
		org.eclipse.gmf.runtime.common.core.command.ICommand command =
				new org.eclipse.gmf.runtime.diagram.ui.commands.CreateCommand(
						editingDomain, viewDescriptor, referencedElementSelectionPage.getView());
		command = command.compose(new «getCreateShortcutDecorationsCommandQualifiedClassName()»(
				editingDomain, referencedElementSelectionPage.getView(), viewDescriptor));
		try {
			org.eclipse.core.commands.operations.OperationHistoryFactory.getOperationHistory().execute(
				command, new org.eclipse.core.runtime.NullProgressMonitor(), null);
		} catch (org.eclipse.core.commands.ExecutionException ee) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError("Unable to create shortcut", ee);«EXPAND xpt::Common::nonNLS»
		}
		return true;
	}

	/**
	 * @@generated
	 */
	private static class ReferencedElementSelectionPage extends «EXPAND xpt::editor::ModelElementSelectionPage::qualifiedClassName» {

		/**
		 * @@generated
		 */
		private org.eclipse.gmf.runtime.notation.View view;

		/**
		 * @@generated
		 */
		public ReferencedElementSelectionPage(String pageName, org.eclipse.gmf.runtime.notation.View view) {
			super(pageName);
			this.view = view;
		}

		/**
		 * @@generated
		 */
		public org.eclipse.gmf.runtime.notation.View getView() {
			return view;
		}

		/**
		 * @@generated
		 */
		protected String getSelectionTitle() {
			return «EXPAND xpt::Externalizer::accessorCall(i18nKeyForShortcutWizardReferencedElementPage().messageKey()) FOR editorGen»;
		}

		/**
		 * @@generated
		 */
		protected boolean validatePage() {
			if (selectedModelElement == null) {
				setErrorMessage(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForShortcutWizardReferencedElementPageEmptyError()) FOR editorGen»);
				return false;
			}
			boolean result = org.eclipse.gmf.runtime.diagram.core.services.ViewService.getInstance().provides(
					org.eclipse.gmf.runtime.notation.Node.class,
					new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(selectedModelElement),
					view, null, org.eclipse.gmf.runtime.diagram.core.util.ViewUtil.APPEND, true,
					«EXPAND xpt::plugin::Activator::preferenceHintAccess FOR editorGen»);
			setErrorMessage(result ? null : «EXPAND xpt::Externalizer::accessorCall(i18nKeyForShortcutWizardReferencedElementPageInvalidError()) FOR editorGen»);
			return result;
		}
	}
}
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«IF null != editorGen.application-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForShortcutWizardReferencedElementPage().nameKey(), "Select referenced element")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForShortcutWizardReferencedElementPage().titleKey(), "Referenced element")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForShortcutWizardReferencedElementPage().descriptionKey(), "Select element that the new shortcut will refer to.")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForShortcutWizardReferencedElementPage().messageKey(), "Select referenced element:")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForShortcutWizardReferencedElementPageEmptyError(), "Referenced element is not selected")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForShortcutWizardReferencedElementPageInvalidError(), "Invalid referenced element is selected")-»
«ENDIF-»
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
«IF null != editorGen.application-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForShortcutWizardReferencedElementPage().nameKey())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForShortcutWizardReferencedElementPage().titleKey())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForShortcutWizardReferencedElementPage().descriptionKey())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForShortcutWizardReferencedElementPage().messageKey())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForShortcutWizardReferencedElementPageEmptyError())-»
	«EXPAND xpt::Externalizer::accessorField(i18nKeyForShortcutWizardReferencedElementPageInvalidError())-»
«ENDIF-»
«ENDDEFINE»
@


1.6
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d69 1
a69 2
						org.eclipse.gmf.runtime.notation.Node.class, null,
						«editorGen.plugin.getActivatorQualifiedClassName()».DIAGRAM_PREFERENCES_HINT);
d79 1
a79 1
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError("Unable to create shortcut", ee); «EXPAND xpt::Common::nonNLS»
d128 1
a128 1
					«editorGen.plugin.getActivatorQualifiedClassName()».DIAGRAM_PREFERENCES_HINT);
@


1.5
log
@do not generate externalized fields for nonrcp apps
@
text
@d12 1
a12 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.4
log
@[139733] akarjakina - i18n support
@
text
@d138 1
d145 1
d149 1
d156 1
@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d15 1
d17 1
a17 1
«DEFINE className FOR gmfgen::GenDiagram»ShortcutCreationWizard«ENDDEFINE»
d47 3
a49 3
		referencedElementSelectionPage = new ReferencedElementSelectionPage("Select referenced element", view);
		referencedElementSelectionPage.setTitle("Referenced element");
		referencedElementSelectionPage.setDescription("Select element that the new shortcut will refer to.");
d114 1
a114 1
			return "Select referenced element:";
d122 1
a122 1
				setErrorMessage("Referenced element is not selected");
d130 1
a130 1
			setErrorMessage(result ? null : "Invalid referenced element is selected");
d136 18
@


1.2
log
@User should be able to configure whether NON-NLS markers are shown or not
@
text
@d12 1
a12 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.1
log
@[168660] Support shortcuts in RCP applications
@
text
@d79 1
a79 1
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError("Unable to create shortcut", ee); //$NON-NLS-1$
@

