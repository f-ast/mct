head	1.21;
access;
symbols
	v20081022-1925:1.21
	v20081015-1925:1.21
	v20081008-1925:1.21
	v20081001-1925:1.21
	v20080930-1130:1.21
	v20080926-1245:1.21
	v20080924-1925:1.21
	v20080917-1925:1.21
	v20080911-1728:1.21
	v20080910-1520:1.21
	v20080903-1520:1.21
	v20080827-1520:1.21
	v20080813-1520:1.20
	v20080806-1520:1.20
	v20080722-1827:1.20
	v20080718-1731:1.20
	v20080716-1600:1.20
	v20080716-1642:1.20
	R2_1_maintenance:1.20.0.2
	Root_R2_1_maintenance:1.20
	R2_1_0:1.20
	v20080610-1132:1.20
	v20080603-1553:1.20
	v20080528-1052:1.20
	v20080521:1.20
	v20080516-1543:1.20
	v20080516-1143:1.20
	v20080512-1200:1.20
	v20080508-2000:1.20
	v20080507-1326:1.20
	v20080503-1740:1.19
	v20080501-1739:1.19
	v20080425-1959:1.19
	v20080417-1610:1.19
	v20080411-0411:1.19
	v20080404-1111:1.19
	v20080322-0000:1.19
	v20080222-1200:1.19
	v20080215-1500:1.19
	v20080207-0207:1.19
	v20071222-1111:1.19
	v20071214-1111:1.19
	v20071130-1111:1.19
	v20071124-0000:1.19
	v20071112-0000:1.19
	v20071108-0000:1.19
	v20071003-0000:1.19
	v20070928-0000:1.19
	v20070921-0000:1.19
	v20070915-0000:1.19
	v20070903-0000:1.19
	v20070809-0000:1.19
	R2_0_maintenance:1.19.0.2
	R2_0:1.19
	R4_20:1.19
	v20070621-0000:1.19
	RC3_20:1.19
	v20070614-1400:1.19
	v20070608-1300:1.18
	v20070605-1400:1.18
	v20070601-1400:1.18
	v20070525-1500:1.18
	v20070520-1200:1.18
	v20070518-1300:1.17
	v20070504-1000:1.14
	v20070427-0600:1.14
	v20070420-1000:1.13
	v20070413-1300:1.13
	v20070405-1100:1.13
	v20070403-1500:1.12
	v20070330-1300:1.11
	v20060330-1300:1.11
	v20070322-1100:1.11
	v20060316-0600:1.6
	v20070307-0700:1.6
	v20070301-1200:1.6
	v20070228-2000:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	M4_20:1.1
	v20070103-0300:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.21
date	2008.08.22.18.25.42;	author atikhomirov;	state Exp;
branches;
next	1.20;
commitid	5d5b48af049e4567;

1.20
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.19;
commitid	39124821b4de4567;

1.19
date	2007.06.11.10.45.38;	author ashatalin;	state Exp;
branches;
next	1.18;
commitid	2581466d27cc4567;

1.18
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.17;
commitid	2591464e17d14567;

1.17
date	2007.05.15.19.19.22;	author ashatalin;	state Exp;
branches;
next	1.16;
commitid	43d3464a07b84567;

1.16
date	2007.05.15.18.34.12;	author ashatalin;	state Exp;
branches;
next	1.15;
commitid	25434649fd1f4567;

1.15
date	2007.05.08.12.14.58;	author ashatalin;	state Exp;
branches;
next	1.14;
commitid	3985464069c14567;

1.14
date	2007.04.24.18.22.42;	author ashatalin;	state Exp;
branches;
next	1.13;
commitid	1456462e4af04567;

1.13
date	2007.04.04.11.18.20;	author bblajer;	state Exp;
branches;
next	1.12;
commitid	2664461389794567;

1.12
date	2007.04.02.14.40.42;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	2da2461115e94567;

1.11
date	2007.03.22.13.44.20;	author ashatalin;	state Exp;
branches;
next	1.10;
commitid	4829460288344567;

1.10
date	2007.03.21.13.41.43;	author ashatalin;	state Exp;
branches;
next	1.9;
commitid	270d460136174567;

1.9
date	2007.03.20.20.15.02;	author ashatalin;	state Exp;
branches;
next	1.8;
commitid	1c03460040bd4567;

1.8
date	2007.03.20.14.49.13;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	761245fff4684567;

1.7
date	2007.03.16.16.09.53;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	565445fac1444567;

1.6
date	2007.02.02.20.49.45;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	50c945c3a3e84567;

1.5
date	2007.01.30.16.42.29;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	4e0e45bf75734567;

1.4
date	2007.01.17.13.08.04;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	61145ae1fb44567;

1.3
date	2007.01.10.13.57.27;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	4c6545a4f0c64567;

1.2
date	2007.01.04.16.26.50;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	1df2459d2ac54567;

1.1
date	2006.12.28.19.45.50;	author ashatalin;	state Exp;
branches;
next	;
commitid	13f545941eec4567;


desc
@@


1.21
log
@simplified visualId-to-viewType conversion helpers
@
text
@/*
 * Copyright (c) 2006,2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
 
«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::navigator::Utils»

«DEFINE NavigatorContentProvider FOR gmfgen::GenNavigator-»
	«EXPAND xpt::Common::copyright FOR editorGen-»
package «packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «contentProviderClassName» implements org.eclipse.ui.navigator.ICommonContentProvider {

	«EXPAND attributes-»
	
	«EXPAND constructor-»

	«EXPAND iContentProvider-»
	
	«EXPAND iStructuredContentProvider-»
	
	«EXPAND iMementoAware-»
    
    «EXPAND iCommonContentProvider-»
    
    «EXPAND iTreeContentProvider-»
    
    «EXPAND additions-»
}
«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenNavigator-»
	«EXPAND xpt::Common::generatedMemberComment»
private static final Object[] EMPTY_ARRAY = new Object[0];

	«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.jface.viewers.Viewer myViewer;

	«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain myEditingDomain;

	«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.emf.workspace.util.WorkspaceSynchronizer myWorkspaceSynchronizer;

	«EXPAND xpt::Common::generatedMemberComment»
private Runnable myViewerRefreshRunnable;
«ENDDEFINE»

«DEFINE constructor FOR gmfgen::GenNavigator-»
	«EXPAND xpt::Common::generatedMemberComment»
public «contentProviderClassName»() {
	«EXPAND initCommonAttributes-»
}
«ENDDEFINE»

«DEFINE initCommonAttributes FOR gmfgen::GenNavigator-»
org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = «EXPAND createEditingDomain»;
myEditingDomain = (org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain) editingDomain;
myEditingDomain.setResourceToReadOnlyMap(new java.util.HashMap() {
	public Object get(Object key) {
		if (!containsKey(key)) {
			put(key, Boolean.TRUE);
		}
		return super.get(key);
	}
});
myViewerRefreshRunnable = new Runnable() {
	public void run() {
		if (myViewer != null) {
			myViewer.refresh();
		}
	}
};
myWorkspaceSynchronizer = new org.eclipse.emf.workspace.util.WorkspaceSynchronizer(editingDomain, new org.eclipse.emf.workspace.util.WorkspaceSynchronizer.Delegate() {
	public void dispose() {
	}

	public boolean handleResourceChanged(final org.eclipse.emf.ecore.resource.Resource resource) {
		«EXPAND processChanges-»
	}
	
	public boolean handleResourceDeleted(org.eclipse.emf.ecore.resource.Resource resource) {
		«EXPAND processChanges-»
	}
	
	public boolean handleResourceMoved(org.eclipse.emf.ecore.resource.Resource resource, final org.eclipse.emf.common.util.URI newURI) {
		«EXPAND processChanges-»
	}
});
«ENDDEFINE»

«DEFINE processChanges FOR gmfgen::GenNavigator-»
for (java.util.Iterator it = myEditingDomain.getResourceSet().getResources().iterator(); it.hasNext();) {
	org.eclipse.emf.ecore.resource.Resource nextResource = (org.eclipse.emf.ecore.resource.Resource) it.next();
	nextResource.unload();
}
if (myViewer != null) {
	myViewer.getControl().getDisplay().asyncExec(myViewerRefreshRunnable);
}
return true;
«ENDDEFINE»

«DEFINE iContentProvider FOR gmfgen::GenNavigator-»
	«EXPAND dispose-»
	
	«EXPAND inputChanged-»
«ENDDEFINE»

«DEFINE dispose FOR gmfgen::GenNavigator-»
	«EXPAND xpt::Common::generatedMemberComment»
public void dispose() {
	myWorkspaceSynchronizer.dispose();
	myWorkspaceSynchronizer = null;
	myViewerRefreshRunnable = null;
	for (java.util.Iterator it = myEditingDomain.getResourceSet().getResources().iterator(); it.hasNext();) {
		org.eclipse.emf.ecore.resource.Resource resource = (org.eclipse.emf.ecore.resource.Resource) it.next();
		resource.unload();
	}
	((org.eclipse.emf.transaction.TransactionalEditingDomain) myEditingDomain).dispose();
	myEditingDomain = null;
}
«ENDDEFINE»

«DEFINE inputChanged FOR gmfgen::GenNavigator-»
	«EXPAND xpt::Common::generatedMemberComment»
public void inputChanged(org.eclipse.jface.viewers.Viewer viewer, Object oldInput, Object newInput) {
	myViewer = viewer;
}
«ENDDEFINE»

«DEFINE iStructuredContentProvider FOR gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
public Object[] getElements(Object inputElement) {
	return getChildren(inputElement);
}
«ENDDEFINE»

«DEFINE iMementoAware FOR gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
public void restoreState(org.eclipse.ui.IMemento aMemento) {
}

«EXPAND xpt::Common::generatedMemberComment»
public void saveState(org.eclipse.ui.IMemento aMemento) {
}
«ENDDEFINE»

«DEFINE iCommonContentProvider FOR gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
public void init(org.eclipse.ui.navigator.ICommonContentExtensionSite aConfig) {
}
«ENDDEFINE»

«DEFINE iTreeContentProvider FOR gmfgen::GenNavigator-»
	«EXPAND getChildren-»
	
	«EXPAND getParent-»
	
	«EXPAND hasChildren-»
«ENDDEFINE»

«DEFINE getChildren FOR gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
public Object[] getChildren(Object parentElement) {
	if (parentElement instanceof org.eclipse.core.resources.IFile) {
	«EXPAND getFileChildren-»
   	} 
    	
   	if (parentElement instanceof «getNavigatorGroupQualifiedClassName()») {
	«EXPAND getGroupChildren-»
	} 
		
	if (parentElement instanceof «getNavigatorItemQualifiedClassName()») {
	«EXPAND getItemChildren-»
	}
		
	«IF editorGen.diagram.generateShortcutIcon()-»
		«EXPAND getAdaptableChildren»
	«ENDIF-»
	«EXPAND getOtherChildren-»
}
    
	«EXPAND getViewChildren-»
    
    «EXPAND utilityMethods-»
«ENDDEFINE»

«DEFINE getParent FOR gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
public Object getParent(Object element) {
	if (element instanceof «getAbstractNavigatorItemQualifiedClassName()») {
    	«getAbstractNavigatorItemQualifiedClassName()» abstractNavigatorItem = («getAbstractNavigatorItemQualifiedClassName()») element;
		return abstractNavigatorItem.getParent();
	}
	return null;
}
«ENDDEFINE»

«DEFINE hasChildren FOR gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
public boolean hasChildren(Object element) {
	return element instanceof org.eclipse.core.resources.IFile || getChildren(element).length > 0;
}
«ENDDEFINE»

«DEFINE getFileChildren FOR gmfgen::GenNavigator-»
	«EXPAND getFileResoruce-»
java.util.Collection result = new java.util.ArrayList();
	«LET getChildReferencesFrom(this, null) AS references-»
		«EXPAND initGroupVariables(this, references, 'file', null) FOREACH getGroupNames(references)-»
		«FOREACH references AS ref-»
			«EXPAND addNavigatorItemsPrefix FOR ref»selectViewsByType(resource.getContents(), «EXPAND getChildViewType FOR ref.child»)«EXPAND addNavigatorItemsSuffix('file', false) FOR ref-»
		«ENDFOREACH-»
		«EXPAND addGroups(references) FOREACH getGroupNames(references)-»
	«ENDLET-»
return result.toArray();
«ENDDEFINE»

«DEFINE getFileResoruce FOR gmfgen::GenNavigator-»
org.eclipse.core.resources.IFile file = (org.eclipse.core.resources.IFile) parentElement;
org.eclipse.emf.common.util.URI fileURI = org.eclipse.emf.common.util.URI.createPlatformResourceURI(file.getFullPath().toString(), true);
org.eclipse.emf.ecore.resource.Resource resource = myEditingDomain.getResourceSet().getResource(fileURI, true);
«ENDDEFINE»

«DEFINE getGroupChildren FOR gmfgen::GenNavigator-»
«getNavigatorGroupQualifiedClassName()» group = («getNavigatorGroupQualifiedClassName()») parentElement;
return group.getChildren();
«ENDDEFINE»

«DEFINE getItemChildren FOR gmfgen::GenNavigator-»
«getNavigatorItemQualifiedClassName()» navigatorItem = («getNavigatorItemQualifiedClassName()») parentElement;
if (navigatorItem.isLeaf() || !isOwnView(navigatorItem.getView())) {
	return EMPTY_ARRAY;
}
return getViewChildren(navigatorItem.getView(), parentElement);
«ENDDEFINE»

«DEFINE getAdaptableChildren FOR gmfgen::GenNavigator-»
/*
 * Due to plugin.xml restrictions this code will be called only for views representing
 * shortcuts to this diagram elements created on other diagrams. 
*/ 
if (parentElement instanceof org.eclipse.core.runtime.IAdaptable) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) parentElement).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
	if (view != null) {
		return getViewChildren(view, parentElement);
	}
}
«ENDDEFINE»

«DEFINE getOtherChildren FOR gmfgen::GenNavigator-»
return EMPTY_ARRAY;
«ENDDEFINE»

«DEFINE getViewChildren FOR gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
private Object[] getViewChildren(org.eclipse.gmf.runtime.notation.View view, Object parentElement) {
   	switch («EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall FOR editorGen.diagram»(view)) {
	«EXPAND caseNavigatorNode(this) FOREACH getNavigatorContainerNodes(this)-»
	}
	return EMPTY_ARRAY;
}
«ENDDEFINE»

«DEFINE utilityMethods FOR  gmfgen::GenNavigator-»
«EXPAND xpt::Common::generatedMemberComment»
private java.util.Collection getLinksSourceByType(java.util.Collection edges, String type) {
	java.util.Collection result = new java.util.ArrayList();
 	for (java.util.Iterator it = edges.iterator(); it.hasNext();) {
 		org.eclipse.gmf.runtime.notation.Edge nextEdge = (org.eclipse.gmf.runtime.notation.Edge) it.next();
 		org.eclipse.gmf.runtime.notation.View nextEdgeSource = nextEdge.getSource();
 		if (type.equals(nextEdgeSource.getType()) && isOwnView(nextEdgeSource)) {
 			result.add(nextEdgeSource);
 		}
 	}
 	return result;
}
	
«EXPAND xpt::Common::generatedMemberComment»
 private java.util.Collection getLinksTargetByType(java.util.Collection edges, String type) {
	java.util.Collection result = new java.util.ArrayList();
 	for (java.util.Iterator it = edges.iterator(); it.hasNext();) {
 		org.eclipse.gmf.runtime.notation.Edge nextEdge = (org.eclipse.gmf.runtime.notation.Edge) it.next();
 		org.eclipse.gmf.runtime.notation.View nextEdgeTarget = nextEdge.getTarget();
 		if (type.equals(nextEdgeTarget.getType()) && isOwnView(nextEdgeTarget)) {
 			result.add(nextEdgeTarget);
 		}
 	}
 	return result;
}

«EXPAND xpt::Common::generatedMemberComment»
 private java.util.Collection getOutgoingLinksByType(java.util.Collection nodes, String type) {
	java.util.Collection result = new java.util.ArrayList();
 	for (java.util.Iterator it = nodes.iterator(); it.hasNext();) {
 		org.eclipse.gmf.runtime.notation.View nextNode = (org.eclipse.gmf.runtime.notation.View) it.next();
		result.addAll(selectViewsByType(nextNode.getSourceEdges(), type));
 	}
 	return result;
}
	
«EXPAND xpt::Common::generatedMemberComment»
private java.util.Collection getIncomingLinksByType(java.util.Collection nodes, String type) {
	java.util.Collection result = new java.util.ArrayList();
 	for (java.util.Iterator it = nodes.iterator(); it.hasNext();) {
 		org.eclipse.gmf.runtime.notation.View nextNode = (org.eclipse.gmf.runtime.notation.View) it.next();
		result.addAll(selectViewsByType(nextNode.getTargetEdges(), type));
 	}
 	return result;
}
	
«EXPAND xpt::Common::generatedMemberComment»
private java.util.Collection getChildrenByType(java.util.Collection nodes, String type) {
	java.util.Collection result = new java.util.ArrayList();
	for (java.util.Iterator it = nodes.iterator(); it.hasNext();) {
		org.eclipse.gmf.runtime.notation.View nextNode = (org.eclipse.gmf.runtime.notation.View) it.next();
		result.addAll(selectViewsByType(nextNode.getChildren(), type));
	}
	return result;
}
	
«EXPAND xpt::Common::generatedMemberComment»
private java.util.Collection getDiagramLinksByType(java.util.Collection diagrams, String type) {
	java.util.Collection result = new java.util.ArrayList();
	for (java.util.Iterator it = diagrams.iterator(); it.hasNext();) {
		org.eclipse.gmf.runtime.notation.Diagram nextDiagram = (org.eclipse.gmf.runtime.notation.Diagram) it.next();
		result.addAll(selectViewsByType(nextDiagram.getEdges(), type));
	}
	return result;
}

«EXPAND xpt::Common::generatedMemberComment»
private java.util.Collection selectViewsByType(java.util.Collection views, String type) {
	java.util.Collection result = new java.util.ArrayList();
	for (java.util.Iterator it = views.iterator(); it.hasNext();) {
		org.eclipse.gmf.runtime.notation.View nextView = (org.eclipse.gmf.runtime.notation.View) it.next();
		if (type.equals(nextView.getType()) && isOwnView(nextView)) {
			result.add(nextView);
		}
	}
	return result;
}
	
«EXPAND xpt::Common::generatedMemberComment»
private boolean isOwnView(org.eclipse.gmf.runtime.notation.View view) {
	return «EXPAND xpt::editor::VisualIDRegistry::modelID FOR editorGen.diagram».equals(«EXPAND xpt::editor::VisualIDRegistry::getModelIDMethodCall FOR editorGen.diagram»(view));
}
	
«EXPAND xpt::Common::generatedMemberComment»
private java.util.Collection createNavigatorItems(java.util.Collection views, Object parent, boolean isLeafs) {
	java.util.Collection result = new java.util.ArrayList();
	for (java.util.Iterator it = views.iterator(); it.hasNext();) {
		result.add(new «getNavigatorItemQualifiedClassName()»((org.eclipse.gmf.runtime.notation.View) it.next(), parent, isLeafs));
	}
	return result;
}
«EXPAND getForeignShortcuts-»
«ENDDEFINE»

«DEFINE getForeignShortcuts FOR gmfgen::GenNavigator-»
	«IF editorGen.diagram.generateCreateShortcutAction() && getChildReferencesFrom(this, editorGen.diagram).size() > 0-»
	
«EXPAND xpt::Common::generatedMemberComment»
private java.util.Collection getForeignShortcuts(org.eclipse.gmf.runtime.notation.Diagram diagram, Object parent) {
	java.util.Collection result = new java.util.ArrayList();
	for (java.util.Iterator it = diagram.getChildren().iterator(); it.hasNext();) {
		org.eclipse.gmf.runtime.notation.View nextView = (org.eclipse.gmf.runtime.notation.View) it.next();
		if (!isOwnView(nextView) && nextView.getEAnnotation("Shortcut") != null) { «EXPAND xpt::Common::nonNLS»
			result.add(nextView);
		}
	}
	return createNavigatorItems(result, parent, false);
}
	«ENDIF-»
«ENDDEFINE»

«DEFINE createEditingDomain FOR gmfgen::GenNavigator»org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory.INSTANCE.createEditingDomain()«ENDDEFINE»

«DEFINE initGroupVariables(gmfgen::GenNavigator navigator, List[gmfgen::GenNavigatorChildReference] references, String parentVarName, gmfgen::GenCommonBase contextElement) FOR String-»
	«navigator.getNavigatorGroupQualifiedClassName()» «asValidJavaIdentifier(this)» = new «navigator.getNavigatorGroupQualifiedClassName()»(
	«EXPAND xpt::Externalizer::accessorCall(i18nKeyForGroup(this, contextElement)) FOR navigator.editorGen»,
	"«getNavigatorReference(this, references).groupIcon»", «parentVarName»); «EXPAND xpt::Common::nonNLS»
«ENDDEFINE»

«DEFINE addNavigatorItemsPrefix FOR gmfgen::GenNavigatorChildReference»«IF isInsideGroup()»«asValidJavaIdentifier(groupName)».addChildren(«ELSE»result.addAll(«ENDIF»createNavigatorItems(«ENDDEFINE»

«DEFINE addNavigatorItemsSuffix(String parentVarName, Boolean isLeaf) FOR gmfgen::GenNavigatorChildReference-»
, «IF isInsideGroup()»«asValidJavaIdentifier(groupName)»«ELSE»«parentVarName»«ENDIF», «isLeaf»));
«ENDDEFINE»

«DEFINE addGroups(List[gmfgen::GenNavigatorChildReference] references) FOR String-»
	«LET getNavigatorReference(this, references) AS ref-»
		«IF ref.hideIfEmpty-»
			if (!«asValidJavaIdentifier(this)».isEmpty()) {«ENDIF-»
		result.add(«asValidJavaIdentifier(this)»);
		«IF ref.hideIfEmpty-»
			}«ENDIF-»
	«ENDLET-»
«ENDDEFINE»

«DEFINE getChildViewType FOR gmfgen::GenDiagram»«EXPAND xpt::editor::VisualIDRegistry::modelID»«ENDDEFINE»

«DEFINE getChildViewType FOR gmfgen::GenCommonBase»«EXPAND xpt::editor::VisualIDRegistry::typeMethodCall»«ENDDEFINE»

«DEFINE caseNavigatorNode(gmfgen::GenNavigator navigator) FOR gmfgen::GenCommonBase»
«EXPAND xpt::Common::caseVisualID» {
	java.util.Collection result = new java.util.ArrayList();
	«EXPAND addForeignShortcuts FOR this-»
	«LET getChildReferencesFrom(navigator, this) AS references-»
		«EXPAND initGroupVariables(navigator, references, 'parentElement', this) FOREACH getGroupNames(references)-»
		«FOREACH references AS reference ITERATOR referencesIterator-»
			«FOREACH reference.findConnectionPaths() AS path ITERATOR pathsIterator-»
				«FOREACH path.segments AS segment ITERATOR segmentsIterator-»
					«IF referencesIterator.isFirstIteration() && pathsIterator.isFirstIteration() && segmentsIterator.isFirstIteration()»java.util.Collection «ENDIF-»
					connectedViews = «EXPAND childrenMethodName(reference.referenceType, segment) FOR segment.from-»
					(«IF segmentsIterator.isFirstIteration()»java.util.Collections.singleton(view)«ELSE»connectedViews«ENDIF-»
					, «EXPAND xpt::editor::VisualIDRegistry::typeMethodCall FOR segment.to»);
				«ENDFOREACH-»
				«EXPAND addNavigatorItemsPrefix FOR reference»connectedViews«EXPAND addNavigatorItemsSuffix('parentElement', reference.referenceType.value != gmfgen::GenNavigatorReferenceType::children.value) FOR reference-»
			«ENDFOREACH-»
		«ENDFOREACH-»
		«EXPAND addGroups(references) FOREACH getGroupNames(references)-»
	«ENDLET-»
	return result.toArray();
}
«ENDDEFINE»

«DEFINE addForeignShortcuts FOR gmfgen::GenDiagram-»
	«IF generateCreateShortcutAction()-»
result.addAll(getForeignShortcuts((org.eclipse.gmf.runtime.notation.Diagram) view, parentElement));
	«ENDIF-»
«ENDDEFINE»

«DEFINE addForeignShortcuts FOR gmfgen::GenCommonBase»«ENDDEFINE»

«DEFINE childrenMethodName(gmfgen::GenNavigatorReferenceType referenceType, gmfgen::GenNavigatorPathSegment segment) FOR gmfgen::GenLink-»
	«IF referenceType.value == gmfgen::GenNavigatorReferenceType::out_target.value»getLinksTargetByType«ELSE»getLinksSourceByType«ENDIF-»
«ENDDEFINE»

«DEFINE childrenMethodName(gmfgen::GenNavigatorReferenceType referenceType, gmfgen::GenNavigatorPathSegment segment) FOR gmfgen::GenCommonBase-»
	«IF referenceType.value == gmfgen::GenNavigatorReferenceType::out_target.value-»
		getOutgoingLinksByType«ELSEIF referenceType.value == gmfgen::GenNavigatorReferenceType::in_source.value-»
		getIncomingLinksByType«ELSE-»
		«IF {segment.from}.typeSelect(gmfgen::GenDiagram).size() > 0 && {segment.to}.typeSelect(gmfgen::GenLink).size() > 0-»
			getDiagramLinksByType«ELSE-»
			getChildrenByType«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenNavigator-»
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenNavigator-»
	«LET getChildReferencesFrom(this, null) AS references-»
        «EXPAND internal_i18nAccessors(null) FOREACH getGroupNames(references)-»
	«ENDLET-»
	«FOREACH getNavigatorContainerNodes(this) AS contextElement-»
        «LET getChildReferencesFrom(this, contextElement) AS references-»
            «EXPAND internal_i18nAccessors(contextElement) FOREACH getGroupNames(references)-»
        «ENDLET-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE internal_i18nAccessors(gmfgen::GenCommonBase contextElement) FOR String-»
«IF null != this»«EXPAND xpt::Externalizer::accessorField(i18nKeyForGroup(contextElement))»«ENDIF-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenNavigator-»
«LET getChildReferencesFrom(this, null) AS references-»
«EXPAND internal_i18nValues(null) FOREACH getGroupNames(references)-»
«ENDLET-»
«FOREACH getNavigatorContainerNodes(this) AS contextElement-»
«LET getChildReferencesFrom(this, contextElement) AS references-»
«EXPAND internal_i18nValues(contextElement) FOREACH getGroupNames(references)-»
«ENDLET-»
«ENDFOREACH-»
«ENDDEFINE»

«DEFINE internal_i18nValues(gmfgen::GenCommonBase contextElement) FOR String-»
«IF null != this»«EXPAND xpt::Externalizer::messageEntry(i18nKeyForGroup(contextElement), this)»«ENDIF-»
«ENDDEFINE»
@


1.20
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d277 1
a277 1
private java.util.Collection getLinksSourceByType(java.util.Collection edges, int visualID) {
a278 1
	«EXPAND getTypeByVID FOR editorGen.diagram-»
d290 1
a290 1
 private java.util.Collection getLinksTargetByType(java.util.Collection edges, int visualID) {
a291 1
	«EXPAND getTypeByVID FOR editorGen.diagram-»
d303 1
a303 1
 private java.util.Collection getOutgoingLinksByType(java.util.Collection nodes, int visualID) {
a304 1
	«EXPAND getTypeByVID FOR editorGen.diagram-»
d313 1
a313 1
private java.util.Collection getIncomingLinksByType(java.util.Collection nodes, int visualID) {
a314 1
	«EXPAND getTypeByVID FOR editorGen.diagram-»
d323 1
a323 1
private java.util.Collection getChildrenByType(java.util.Collection nodes, int visualID) {
a324 1
	«EXPAND getTypeByVID FOR editorGen.diagram-»
d333 1
a333 1
private java.util.Collection getDiagramLinksByType(java.util.Collection diagrams, int visualID) {
a334 1
	«EXPAND getTypeByVID FOR editorGen.diagram-»
a369 6
«DEFINE getTypeByVID FOR gmfgen::GenDiagram-»
String type = «EXPAND xpt::editor::VisualIDRegistry::getTypeMethodCall»(visualID);
«ENDDEFINE»

«DEFINE getType(String varName) FOR gmfgen::GenDiagram»«EXPAND xpt::editor::VisualIDRegistry::getTypeMethodCall»(«varName»)«ENDDEFINE»

d413 1
a413 1
«DEFINE getChildViewType FOR gmfgen::GenCommonBase»«EXPAND xpt::editor::VisualIDRegistry::getTypeMethodCall FOR getDiagram()»(«EXPAND xpt::editor::VisualIDRegistry::visualID»)«ENDDEFINE»
d427 1
a427 1
					, «EXPAND xpt::editor::VisualIDRegistry::visualID FOR segment.to»);
@


1.19
log
@[191852] - Convert /navigator/NavigatorLabelProvider.javajet template to xpand
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.18
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d269 1
a269 1
	«EXPAND caseNavigatorNode(this) FOREACH getNavigatorNodes(this)-»
d479 1
a479 1
	«FOREACH getNavigatorNodes(this) AS contextElement-»
d494 1
a494 1
«FOREACH getNavigatorNodes(this) AS contextElement-»
@


1.17
log
@Replacing static method calls with templates.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.16
log
@Generating VisualIDRegistry using XPAND.
@
text
@d268 1
a268 1
   	switch («editorGen.diagram.getVisualIDRegistryQualifiedClassName()».getVisualID(view)) {
d362 1
a362 1
	return «editorGen.diagram.getEditPartQualifiedClassName()».MODEL_ID.equals(«editorGen.diagram.getVisualIDRegistryQualifiedClassName()».getModelID(view));
d377 1
a377 1
String type = «getVisualIDRegistryQualifiedClassName()».getType(visualID);
d380 1
a380 1
«DEFINE getType(String varName) FOR gmfgen::GenDiagram»«getVisualIDRegistryQualifiedClassName()».getType(«varName»)«ENDDEFINE»
d423 1
a423 1
«DEFINE getChildViewType FOR gmfgen::GenDiagram»«getEditPartQualifiedClassName()».MODEL_ID«ENDDEFINE»
d425 1
a425 1
«DEFINE getChildViewType FOR gmfgen::GenCommonBase»«getDiagram().getVisualIDRegistryQualifiedClassName()».getType(«EXPAND xpt::editor::VisualIDRegistry::visualID»)«ENDDEFINE»
@


1.15
log
@Updating copyrights.
@
text
@d425 1
a425 1
«DEFINE getChildViewType FOR gmfgen::GenCommonBase»«getDiagram().getVisualIDRegistryQualifiedClassName()».getType(«getEditPartQualifiedClassName()».VISUAL_ID)«ENDDEFINE»
d439 1
a439 1
					, «segment.to.getEditPartQualifiedClassName()».VISUAL_ID);
@


1.14
log
@DiagramCanonicalEditpolicy template is in XPAND now.
[182556] - getSemanticChildrenList.jetinc generates empty switch statement causing generation to fail
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.13
log
@User should be able to configure whether NON-NLS markers are shown or not
@
text
@d428 1
a428 1
case «getEditPartQualifiedClassName()».VISUAL_ID: {
@


1.12
log
@Unloading resources + disposing editing domain on closing view/dialog
@
text
@d390 1
a390 1
		if (!isOwnView(nextView) && nextView.getEAnnotation("Shortcut") != null) { //$NON-NLS-1$
d404 1
a404 1
	"«getNavigatorReference(this, references).groupIcon»", «parentVarName»); //$NON-NLS-1$
@


1.11
log
@Refactoring templates.
@
text
@d129 1
@


1.10
log
@Setting all attributes to null in *ContentProvider.dispose().
@
text
@a45 8
	«EXPAND viewerAttribute-»

	«EXPAND editingDomainAttribute-»
	«EXPAND workspaceSynchronizationAttributes-»
«ENDDEFINE»


«DEFINE viewerAttribute FOR gmfgen::GenNavigator-»
a47 1
«ENDDEFINE»
a48 1
«DEFINE editingDomainAttribute FOR gmfgen::GenNavigator-»
a50 3
«ENDDEFINE»

«DEFINE workspaceSynchronizationAttributes FOR gmfgen::GenNavigator-»
d67 2
a68 6
	«EXPAND initReadonlyEditingDomain-»
	«EXPAND initWorkspaceSynchronizationAttributes-»
«ENDDEFINE»

«DEFINE initReadonlyEditingDomain FOR gmfgen::GenNavigator-»
myEditingDomain = «EXPAND createEditingDomain»;
a76 3
«ENDDEFINE»

«DEFINE initWorkspaceSynchronizationAttributes FOR gmfgen::GenNavigator-»
d84 1
a84 1
myWorkspaceSynchronizer = new org.eclipse.emf.workspace.util.WorkspaceSynchronizer((org.eclipse.emf.transaction.TransactionalEditingDomain) myEditingDomain, new org.eclipse.emf.workspace.util.WorkspaceSynchronizer.Delegate() {
d122 3
a124 1
	«EXPAND disposeWorkspaceSynchronizationAttributes-»
a132 6
«DEFINE disposeWorkspaceSynchronizationAttributes FOR gmfgen::GenNavigator-»
myWorkspaceSynchronizer.dispose();
myWorkspaceSynchronizer = null;
myViewerRefreshRunnable = null;
«ENDDEFINE»

d398 1
a398 1
«DEFINE createEditingDomain FOR gmfgen::GenNavigator»(org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain) org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory.INSTANCE.createEditingDomain()«ENDDEFINE»
@


1.9
log
@NavigatorReference type constant name corrected.
Generating wrapper for domain model navigator nodes to preserve navigator tree selection/expansion on model files reload.
@
text
@d147 1
d153 1
@


1.8
log
@Generating diagram file navigator updating code.
@
text
@a45 4
	«EXPAND commonAttributes-»
«ENDDEFINE»

«DEFINE commonAttributes FOR gmfgen::GenNavigator-»
d480 1
a480 1
	«IF referenceType.value == gmfgen::GenNavigatorReferenceType::out_taget.value»getLinksTargetByType«ELSE»getLinksSourceByType«ENDIF-»
d484 1
a484 1
	«IF referenceType.value == gmfgen::GenNavigatorReferenceType::out_taget.value-»
@


1.7
log
@Generating generic navigator providers for domain model.
@
text
@d25 2
d43 1
a43 1
«EXPAND xpt::Common::generatedMemberComment»
d45 90
d138 20
a157 3
«EXPAND xpt::Common::generatedMemberComment»
   public void dispose() {
   }
d159 5
a163 3
«EXPAND xpt::Common::generatedMemberComment»
   public void inputChanged(org.eclipse.jface.viewers.Viewer viewer, Object oldInput, Object newInput) {
   }
d242 1
a242 1
	«EXPAND createReadonlyEditingDomain-»
d254 1
a254 1
«DEFINE createReadonlyEditingDomain FOR gmfgen::GenNavigator-»
a255 11
org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain editingDomain = «EXPAND createEditingDomain»;
editingDomain.setResourceToReadOnlyMap(new java.util.HashMap() {
	public Object get(Object key) {
		if (!containsKey(key)) {
			put(key, Boolean.TRUE);
		}
		return super.get(key);
	}
});
org.eclipse.emf.ecore.resource.ResourceSet resourceSet = editingDomain.getResourceSet();
			
d257 1
a257 1
org.eclipse.emf.ecore.resource.Resource resource = resourceSet.getResource(fileURI, true);
@


1.6
log
@[139733] akarjakina - lack of i18n support. More templates i18n-ed
@
text
@d131 13
a157 9
java.util.Collection result = new java.util.ArrayList();
	«LET getChildReferencesFrom(this, null) AS references-»
		«EXPAND initGroupVariables(this, references, 'file', null) FOREACH getGroupNames(references)-»
		«FOREACH references AS ref-»
			«EXPAND addNavigatorItemsPrefix FOR ref»selectViewsByType(resource.getContents(), «EXPAND getChildViewType FOR ref.child»)«EXPAND addNavigatorItemsSuffix('file', false) FOR ref-»
		«ENDFOREACH-»
		«EXPAND addGroups(references) FOREACH getGroupNames(references)-»
	«ENDLET-»
return result.toArray();
@


1.5
log
@All the @@generated comments moved into a separate "define" statement.
@
text
@d147 1
a147 1
		«EXPAND initGroupVariables(this, references, 'file') FOREACH getGroupNames(references)-»
d322 4
a325 2
«DEFINE initGroupVariables(gmfgen::GenNavigator navigator, List[gmfgen::GenNavigatorChildReference] references, String parentVarName) FOR String-»
	«navigator.getNavigatorGroupQualifiedClassName()» «asValidJavaIdentifier(this)» = new «navigator.getNavigatorGroupQualifiedClassName()»("«this»", "«getNavigatorReference(this, references).groupIcon»", «parentVarName»);
d353 1
a353 1
		«EXPAND initGroupVariables(navigator, references, 'parentElement') FOREACH getGroupNames(references)-»
d395 30
@


1.4
log
@Simplifying template.
@
text
@d21 1
a21 3
/**
 * @@generated
 */
d41 1
a41 3
/**
 * @@generated
 */
d46 1
a46 3
/**
 * @@generated
 */
d50 1
a50 3
/**
 * @@generated
 */
d56 1
a56 3
/**
 * @@generated
 */
d63 1
a63 3
/**
 * @@generated
 */
d67 1
a67 3
/**
 * @@generated
 */
d73 1
a73 3
/**
 * @@generated
 */
d87 1
a87 3
/**
 * @@generated
 */
d113 1
a113 3
/**
 * @@generated
 */
d124 1
a124 3
/**
 * @@generated
 */
d187 1
a187 3
/**
 * @@generated
 */
d197 1
a197 3
/**
 * @@generated
 */
d211 1
a211 3
/**
 * @@generated
 */
d225 1
a225 3
/**
 * @@generated
 */
d236 1
a236 3
/**
 * @@generated
 */
d247 1
a247 3
/**
 * @@generated
 */
d258 1
a258 3
/**
 * @@generated
 */
d269 1
a269 3
/**
 * @@generated
 */
d281 1
a281 3
/**
 * @@generated
 */
d286 1
a286 3
/**
 * @@generated
 */
d306 1
a306 3
/**
 * @@generated
 */
@


1.3
log
@aux getChildViewType was refined and utilized
@
text
@d224 1
a224 1
private java.util.Collection getLinksSourceByType(java.util.Collection edges, String type) {
d226 1
d240 1
a240 1
 private java.util.Collection getLinksTargetByType(java.util.Collection edges, String type) {
d242 1
d256 1
a256 1
 private java.util.Collection getOutgoingLinksByType(java.util.Collection nodes, String type) {
d258 1
d269 1
a269 1
private java.util.Collection getIncomingLinksByType(java.util.Collection nodes, String type) {
d271 1
d282 1
a282 1
private java.util.Collection getChildrenByType(java.util.Collection nodes, String type) {
d284 1
d295 1
a295 1
private java.util.Collection getDiagramLinksByType(java.util.Collection diagrams, String type) {
d297 1
d339 6
d402 1
a402 1
					, «EXPAND getChildViewType FOR segment.to»);
d429 1
a429 1
		«IF {}.add(segment.from).typeSelect(gmfgen::GenDiagram).size() > 0 && {}.add(segment.to).typeSelect(gmfgen::GenLink).size() > 0-»
@


1.2
log
@Additional modularization of template to facilitate aspect-based overriding
@
text
@d171 1
a171 1
			«EXPAND addNavigatorItemsPrefix FOR ref»selectViewsByType(resource.getContents(), «EXPAND getChildViewType(editorGen.diagram) FOR ref.child»)«EXPAND addNavigatorItemsSuffix('file', false) FOR ref-»
d374 1
a374 1
«DEFINE getChildViewType(gmfgen::GenDiagram diagram) FOR gmfgen::GenDiagram»«getEditPartQualifiedClassName()».MODEL_ID«ENDDEFINE»
d376 1
a376 1
«DEFINE getChildViewType(gmfgen::GenDiagram diagram) FOR gmfgen::GenCommonBase»«diagram.getVisualIDRegistryQualifiedClassName()».getType(«getEditPartQualifiedClassName()».VISUAL_ID)«ENDDEFINE»
d390 1
a390 1
					, «navigator.editorGen.diagram.getVisualIDRegistryQualifiedClassName()».getType(«segment.to.getEditPartQualifiedClassName()».VISUAL_ID));
@


1.1
log
@NavigatorContentProvider template reimplemented on xpand
@
text
@d38 1
d330 4
d421 4
a424 1
«ENDDEFINE»@

