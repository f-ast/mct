head	1.9;
access;
symbols
	v20081022-1925:1.9
	v20081015-1925:1.9
	v20081008-1925:1.9
	v20081001-1925:1.9
	v20080930-1130:1.9
	v20080926-1245:1.9
	v20080924-1925:1.9
	v20080917-1925:1.9
	v20080911-1728:1.9
	v20080910-1520:1.9
	v20080903-1520:1.9
	v20080827-1520:1.9
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080722-1827:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080528-1052:1.9
	v20080521:1.9
	v20080516-1543:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080508-2000:1.9
	v20080507-1326:1.9
	v20080503-1740:1.8
	v20080501-1739:1.8
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080411-0411:1.8
	v20080404-1111:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070928-0000:1.8
	v20070921-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.4
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	M4_20:1.1
	v20070103-0300:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	39124821b4de4567;

1.8
date	2007.06.11.14.58.50;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	317d466d63264567;

1.7
date	2007.06.11.13.36.23;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	4172466d4fd34567;

1.6
date	2007.06.11.10.45.38;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	2581466d27cc4567;

1.5
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	2591464e17d14567;

1.4
date	2007.05.08.12.14.58;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	3985464069c14567;

1.3
date	2007.03.28.19.33.36;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	6e6d460ac2e04567;

1.2
date	2007.02.02.20.49.45;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	50c945c3a3e84567;

1.1
date	2006.12.28.19.45.50;	author ashatalin;	state Exp;
branches;
next	;
commitid	13f545941eec4567;


desc
@@


1.9
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2006,2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
 
import "http://www.eclipse.org/gmf/2008/GenModel";
import "http://www.eclipse.org/emf/2002/Ecore";
import "http://www.eclipse.org/emf/2002/GenModel";

int getMaxVisualID(gmfgen::GenNavigator navigator) :
	getMaxVisualIDNavigatorNode(navigator).size() == 1 ? ((gmfgen::GenCommonBase) getMaxVisualIDNavigatorNode(navigator).first()).visualID : 0
;

private cached List[gmfgen::GenCommonBase] getMaxVisualIDNavigatorNode(gmfgen::GenNavigator navigator) :
	getNavigatorNodes(navigator).select(navigatorNode | isMaximumVisualID(navigatorNode, getNavigatorNodes(navigator)))
;

private boolean isMaximumVisualID(gmfgen::GenCommonBase commonBase, List[gmfgen::GenCommonBase] allNavigatorNodes) :
	allNavigatorNodes.select(navigatorNode | navigatorNode.visualID >  commonBase.visualID).isEmpty()
;

boolean isStringFeature(genmodel::GenFeature feature) :
	feature.ecoreFeature.eType.name == "EString"
;

cached List[gmfgen::GenCommonBase] getNavigatorContainerNodes(gmfgen::GenNavigator navigator) :
	getNavigatorNodes(navigator).select( n | getChildReferencesFrom(navigator, n).size() > 0)
;

cached List[gmfgen::GenCommonBase] getNavigatorContainedNodes(gmfgen::GenNavigator navigator) :
	getNavigatorNodes(navigator).select( n | getChildReferencesTo(navigator, n).size() > 0)
;

private List[gmfgen::GenCommonBase] getNavigatorNodes(gmfgen::GenNavigator navigator) :
	let diagram = navigator.editorGen.diagram :
	{ diagram }
		.addAll(diagram.topLevelNodes)
		.addAll(diagram.childNodes)
		.addAll(diagram.links)
		.addAll(diagram.compartments)
		.typeSelect(gmfgen::GenCommonBase)
;

Set[String] getGroupNames(List[gmfgen::GenNavigatorChildReference] references) :
	references.select(ref | ref.isInsideGroup()).collect(ref | ref.groupName).toSet()
;

gmfgen::GenNavigatorChildReference getNavigatorReference(String groupName, List[gmfgen::GenNavigatorChildReference] childReferences) :
	childReferences.select(r | r.groupName == groupName).toList().first()
;

List[gmfgen::GenNavigatorChildReference] getChildReferencesFrom(gmfgen::GenNavigator navigator, gmfgen::GenCommonBase parent) :
	navigator.childReferences.select(r | parent.visualID == r.parent.visualID)
;

List[gmfgen::GenNavigatorChildReference] getChildReferencesTo(gmfgen::GenNavigator navigator, gmfgen::GenCommonBase child) :
	navigator.childReferences.select(r | child.visualID == r.child.visualID)
;

GenNavigatorChildReference getDiagramTopReference(gmfgen::GenNavigator navigator) :
	let diagramTopReferences = navigator.childReferences.select(cr | null == cr.parent).select(cr | cr.child == navigator.editorGen.diagram) :
		diagramTopReferences.size() == 0 ? null : diagramTopReferences.get(0)
;

//
// CodeGenUtil#validJavaIdentifier()
//
String asValidJavaIdentifier(String identifier) :
JAVA org.eclipse.emf.codegen.util.CodeGenUtil.validJavaIdentifier(java.lang.String)
;

String i18nKeyForGroup(String groupName, gmfgen::GenCommonBase contextElement) :
"NavigatorGroupName."+ (null != contextElement ? contextElement.getUniqueIdentifier() : "File") + "." + asValidJavaIdentifier(groupName)
;

String i18nKeyForOpenDiagramActionName() :
"NavigatorActionProvider.OpenDiagramActionName"
;@


1.8
log
@[191851] - Convert /navigator/NavigatorSorter.javajet template to xpand
@
text
@d13 1
a13 1
import "http://www.eclipse.org/gmf/2006/GenModel";
@


1.7
log
@[191850] - Convert /navigator/NavigatorActionProvider.javajet template to xpand
@
text
@d17 12
@


1.6
log
@[191852] - Convert /navigator/NavigatorLabelProvider.javajet template to xpand
@
text
@d70 4
@


1.5
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d15 1
d17 13
a29 1
List[gmfgen::GenCommonBase] getNavigatorNodes(gmfgen::GenNavigator navigator) :
a36 1
		.select( n | getChildReferencesFrom(navigator, n).size() > 0)
d51 4
@


1.4
log
@Updating copyrights.
@
text
@d13 1
a13 1
import "http://www.eclipse.org/gmf/2005/GenModel/2.0";
@


1.3
log
@Implementing "link with editor" for URI editor input
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.2
log
@[139733] akarjakina - lack of i18n support. More templates i18n-ed
@
text
@d39 5
@


1.1
log
@NavigatorContentProvider template reimplemented on xpand
@
text
@d45 4
@

