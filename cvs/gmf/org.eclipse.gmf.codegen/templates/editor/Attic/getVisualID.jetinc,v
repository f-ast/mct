head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2006.04.13.22.22.23;	author ashatalin;	state dead;
branches;
next	1.5;

1.5
date	2006.02.24.20.23.27;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.00.17.45;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.31.19.02.07;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.17.19.23;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.02.17.53.03;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@	/**
	 * @@generated
	 */
	private static int getVisualID(View containerView) {
		<%=importManager.getImportedName("org.eclipse.emf.ecore.EAnnotation")%> annotation = containerView.getEAnnotation("ViewIdentifier"); //$NON-NLS-1$
		if (annotation == null) {
			return -1;
		}
		String visualID = (String) annotation.getDetails().get("visualID"); //$NON-NLS-1$
		if (visualID == null) {
			return -1;
		}
		try {
			return Integer.parseInt(visualID);
		} catch (NumberFormatException e) {
			<%=importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName())%>.getInstance().logError("Unable to parse \"visualID\" annotation: " + visualID, e);
		}
		return -1;
	}@


1.5
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@@


1.4
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d4 1
a4 1
	private int getVisualID(View containerView) {
@


1.3
log
@#125893
Logging methods
@
text
@d16 1
a16 1
			<%=importManager.getImportedName(genDiagram.getPlugin().getActivatorQualifiedClassName())%>.getInstance().logError("Unable to parse \"visualID\" annotation: " + visualID, e);
@


1.2
log
@#114178
Create shortcut functionality added
@
text
@d16 1
a16 1
			e.printStackTrace();		
@


1.1
log
@[ashatalin] #114750 annotate diagram runtime model elements with visual id to tell one from another during EP decision making
@
text
@d4 2
a5 2
	public int getVisualID(View containerView) {
		<%=importManager.getImportedName("org.eclipse.emf.ecore.EAnnotation")%> annotation = containerView.getEAnnotation("VisualID");
d9 1
a9 1
		String visualID = (String) annotation.getDetails().get("value");
d19 1
a19 1
	}
@

