head	1.7;
access;
symbols
	v20081022-1925:1.7
	v20081015-1925:1.7
	v20081008-1925:1.7
	v20081001-1925:1.7
	v20080924-1925:1.7
	v20080917-1925:1.7
	v20080911-1728:1.7
	v20080910-1520:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080806-1520:1.7
	v20070202-0200:1.6
	M4_20:1.6
	v20061222-1800:1.6
	v20061218-1200:1.6
	v20061214-0000:1.6
	v20061120-1300:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.6
	v20061020-1000:1.6
	v20061013-1330:1.6
	v20060919-0800:1.6
	v20060907-1100:1.6
	M1_20:1.6
	v20060904-1500:1.6
	v20060824-1600:1.6
	v20060817-1500:1.6
	v20060728-0500:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060620-0400:1.6
	v20060616-1400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-1300:1.6
	v20060519-0800:1.6
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2006.12.27.18.38.46;	author dstadnik;	state dead;
branches;
next	1.6;
commitid	64234592bdb54567;

1.6
date	2006.03.07.15.45.28;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.08.17.15.39;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.16.06.19;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.08.00.17.45;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.26.13.36.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.16.07.42.24;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[134107] Provide preferences for the generated diagram editors
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.editor" class="PreferencesInitializerGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenEditorGenerator editorGen = (GenEditorGenerator) ((Object[]) argument)[0];
GenDiagram genDiagram = editorGen.getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.gmf.runtime.diagram.ui.preferences.DiagramPreferenceInitializer;
import org.eclipse.jface.preference.IPreferenceStore;

/**
 * @@generated
 */
public class <%=editorGen.getDiagram().getPreferenceInitializerClassName()%> extends DiagramPreferenceInitializer {

	/**
	 * @@generated
	 */
	protected IPreferenceStore getPreferenceStore() {
		return <%=editorGen.getPlugin().getActivatorQualifiedClassName()%>.getInstance().getPreferenceStore();
	}
}
@


1.6
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@@


1.5
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d5 1
d7 3
a9 2

importManager.emitPackageStatement(stringBuffer);%>
@


1.4
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d2 6
a7 3
    imports="org.eclipse.gmf.codegen.gmfgen.*"%>
<%GenEditorGenerator editorGen = (GenEditorGenerator) argument;%>
package <%=editorGen.getEditor().getPackageName()%>;
@


1.3
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d3 2
a4 2
<%GenDiagram genDiagram = (GenDiagram) argument;%>
package <%=genDiagram.getEditorPackageName()%>;
d12 1
a12 1
public class <%=genDiagram.getPreferenceInitializerClassName()%> extends DiagramPreferenceInitializer {
d18 1
a18 1
		return <%=genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()%>.getInstance().getPreferenceStore();
@


1.2
log
@GenDiagram "slicing" goes on and this time attributes related to plugin activator class were moved into separate entity
@
text
@d18 1
a18 1
		return <%=genDiagram.getPlugin().getActivatorQualifiedClassName()%>.getInstance().getPreferenceStore();
@


1.1
log
@#116031 avoid hardcoded class names in templates
@
text
@d18 1
a18 1
		return <%=genDiagram.getPluginQualifiedClassName()%>.getInstance().getPreferenceStore();
@

