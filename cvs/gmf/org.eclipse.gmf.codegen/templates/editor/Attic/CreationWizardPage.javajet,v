head	1.30;
access;
symbols
	v20081022-1925:1.30
	v20081015-1925:1.30
	v20081008-1925:1.30
	v20081001-1925:1.30
	v20080924-1925:1.30
	v20080917-1925:1.30
	v20080911-1728:1.30
	v20080910-1520:1.30
	v20080903-1520:1.30
	v20080827-1520:1.30
	v20080813-1520:1.30
	v20080806-1520:1.30
	RC3_20:1.29
	v20070614-1400:1.29
	v20070608-1300:1.29
	v20070605-1400:1.29
	v20070601-1400:1.29
	v20070525-1500:1.29
	v20070520-1200:1.29
	v20070518-1300:1.29
	v20070504-1000:1.29
	v20070427-0600:1.29
	v20070420-1000:1.29
	v20070413-1300:1.29
	v20070405-1100:1.29
	v20070403-1500:1.29
	v20070330-1300:1.29
	v20060330-1300:1.29
	v20070322-1100:1.29
	v20060316-0600:1.29
	v20070307-0700:1.27
	v20070301-1200:1.27
	v20070228-2000:1.27
	v20070221-1500:1.27
	v20070208-1800:1.27
	v20070202-0200:1.15
	v20070103-0300:1.27
	M4_20:1.27
	v20061222-1800:1.27
	v20061218-1200:1.24
	v20061214-0000:1.24
	v20061120-1300:1.20
	M3_20:1.20
	v20061117-0800:1.20
	v20061027-1200:1.15
	v20061020-1000:1.15
	v20061013-1330:1.16
	v20060919-0800:1.15
	v20060907-1100:1.15
	M1_20:1.15
	v20060904-1500:1.15
	v20060824-1600:1.15
	v20060817-1500:1.15
	v20060728-0500:1.15
	v20060713-1700:1.15
	R1_0_maintenance:1.15.0.2
	R1_0:1.15
	v20060627-1200:1.15
	v20060626-1420:1.15
	v20060620-0400:1.15
	v20060616-1400:1.15
	v20060616-1200:1.15
	v20060609-1400:1.15
	v20060531-1730:1.14
	v20060530-1930:1.14
	v20060526-1200:1.14
	v20060519-1300:1.14
	v20060519-0800:1.14
	v20060512-1000:1.14
	I20060512-1000:1.14
	I20060505-1400:1.14
	I20060428-1300:1.14
	I20060424-0500:1.14
	I20060424-0300:1.14
	M6_10:1.13
	I20060407-1200:1.12
	I20060331-1000:1.12
	I20060324-0300:1.12
	I20060317-1300:1.12
	I20060317-1200:1.12
	I20060316-1300:1.12
	I20060309-1300:1.12
	M5_10:1.11
	S20060303-1600:1.11
	I20060227-1730:1.11
	I20060216-1945:1.11
	I20060210-1715:1.11
	I20060209-1815:1.11
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051208-2000:1.4
	I20051201-1800:1.4
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.30
date	2007.06.19.19.26.17;	author dstadnik;	state dead;
branches;
next	1.29;
commitid	611446782dd84567;

1.29
date	2007.03.15.11.57.13;	author dstadnik;	state Exp;
branches;
next	1.28;
commitid	21b545f934984567;

1.28
date	2007.03.08.01.01.41;	author atikhomirov;	state Exp;
branches;
next	1.27;
commitid	a0545ef60744567;

1.27
date	2006.12.19.14.26.13;	author atikhomirov;	state Exp;
branches;
next	1.26;
commitid	43e54587f67b4567;

1.26
date	2006.12.19.13.38.45;	author atikhomirov;	state Exp;
branches;
next	1.25;
commitid	121d4587eb654567;

1.25
date	2006.12.18.18.20.51;	author dstadnik;	state Exp;
branches;
next	1.24;
commitid	7d774586dbfa4567;

1.24
date	2006.11.22.17.34.44;	author ashatalin;	state Exp;
branches;
next	1.23;
commitid	117b45648a334567;

1.23
date	2006.11.22.15.30.35;	author dstadnik;	state Exp;
branches;
next	1.22;
commitid	2b2545646d1a4567;

1.22
date	2006.11.22.14.59.29;	author dstadnik;	state Exp;
branches;
next	1.21;
commitid	2e20456465d04567;

1.21
date	2006.11.21.11.43.34;	author dstadnik;	state Exp;
branches;
next	1.20;
commitid	109b4562e6644567;

1.20
date	2006.10.24.17.55.06;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.10.24.15.55.35;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.10.24.14.37.53;	author dstadnik;	state Exp;
branches;
next	1.17;

1.17
date	2006.10.16.12.50.45;	author dstadnik;	state Exp;
branches;
next	1.16;

1.16
date	2006.09.27.17.03.35;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.06.01.09.04.14;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.20.13.24.47;	author ashatalin;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.13.22.22.23;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.07.15.45.27;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2006.02.08.17.15.39;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.08.16.06.19;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.08.13.05.28;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.08.12.28.12;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.08.00.17.45;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.05.22.57.54;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.26.18.36.27;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.16.07.42.24;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.15.00.13.01;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.29.09.49.41;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.30
log
@[192848] Rewrite creation wizard and ui contributors in xpand
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.editor" class="CreationWizardPageGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final GenEditorGenerator editorGen = genDiagram.getEditorGen();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
final GenApplication application = editorGen.getApplication();
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import org.eclipse.emf.common.util.URI;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.osgi.util.NLS;
import org.eclipse.swt.widgets.Composite;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=importManager.getCompilationUnitName()%> extends
<%if (application == null) {%>
<%=importManager.getImportedName("org.eclipse.ui.dialogs.WizardNewFileCreationPage")%>	
<%} else {%>
<%=importManager.getImportedName(application.getPackageName() + ".WizardNewFileCreationPage")%>	
<%}%>
	{

	/**
	 * @@generated
	 */
	private final String fileExtension;

	/**
	 * @@generated
	 */
	public <%=importManager.getCompilationUnitName()%>(String pageName, IStructuredSelection selection, String fileExtension) {
		super(pageName, selection);
		this.fileExtension = fileExtension;
	}

	/**
	 * Override to create files with this extension.
	 * 
	 * @@generated
	 */
	protected String getExtension() {
		return fileExtension;
	}

	/**
	 * @@generated
	 */
	public URI getURI() {
<%if (application == null) {%>
		return URI.createPlatformResourceURI(getFilePath().toString(), false);
<%} else {%>
		return URI.createFileURI(getFilePath().toString());
<%}%>
	}
<%if (application == null) {%>

	/**
	 * @@generated
	 */
	protected IPath getFilePath() {
		IPath path = getContainerFullPath();
		if (path == null) {
			path = new Path(""); //$NON-NLS-1$
		}
		String fileName = getFileName();
		if (fileName != null) {
			path = path.append(fileName);
		}
		return path;
	}
<%}%>

	/**
	 * @@generated
	 */
	public void createControl(Composite parent) {
		super.createControl(parent);
		setFileName(<%=importManager.getImportedName(genDiagram.getDiagramEditorUtilQualifiedClassName())%>.getUniqueFileName(
				getContainerFullPath(), getFileName(), getExtension()));
		setPageComplete(validatePage());
	}

	/**
	 * @@generated
	 */
	protected boolean validatePage() {
		if (!super.validatePage()) {
			return false;
		}
		String extension = getExtension();
		if (extension != null && !getFilePath().toString().endsWith("." + extension)) {
			setErrorMessage(NLS.bind("File name should have ''{0}'' extension.", extension));
			return false;
		}
		return true;
	}
}
<%importManager.emitSortedImports();%>@


1.29
log
@[168661] Use URIs instead of IResources to make code reusable in RCP
@
text
@@


1.28
log
@avoid use of deprecated code
@
text
@a80 32
	<%@@ include file="CreationWizardPage_getUniqueFileName.jetinc" fail="alternative"%>
	<%@@ start%>
	/**
	 * @@generated
	 */
	private String getUniqueFileName(IPath containerFullPath, String fileName) {
		if (containerFullPath == null) {
			containerFullPath = new Path(""); //$NON-NLS-1$
		}
		if (fileName == null || fileName.trim().length() == 0) {
			fileName = "default"; //$NON-NLS-1$
		}
		IPath filePath = containerFullPath.append(fileName);
		String extension = getExtension();
		if (extension != null && !extension.equals(filePath.getFileExtension())) {
			filePath = filePath.addFileExtension(extension);
		}

		extension = filePath.getFileExtension();
		fileName = filePath.removeFileExtension().lastSegment();
		int i = 1;
		while (<%=importManager.getImportedName(genDiagram.getDiagramEditorUtilQualifiedClassName())%>.exists(filePath)) {
			i++;
			filePath = containerFullPath.append(fileName + i);
			if (extension != null) {
				filePath = filePath.addFileExtension(extension);
			}
		}
		return filePath.lastSegment();
	}
	<%@@ end%>	

d86 2
a87 1
		setFileName(getUniqueFileName(getContainerFullPath(), getFileName()));
@


1.27
log
@no reason to have subclasses just to pass plain string value
@
text
@d58 1
a58 1
		return URI.createPlatformResourceURI(getFilePath().toString());
@


1.26
log
@[167048] mgolubev - If diagram/domain file extension contains dot, it is impossible to create diagram
@
text
@d34 6
a39 1
	public <%=importManager.getCompilationUnitName()%>(String pageName, IStructuredSelection selection) {
d41 1
d50 1
a50 1
		return null;
@


1.25
log
@rewrite application templates in xpand; simplify genmodel
@
text
@d75 2
d105 1
d124 1
a124 1
		if (extension != null && !extension.equals(getFilePath().getFileExtension())) {
@


1.24
log
@Removing warnings
@
text
@d27 1
a27 1
<%=importManager.getImportedName(application.getApplicationPackageName() + ".WizardNewFileCreationPage")%>	
@


1.23
log
@generate wizard page that allows to select file
@
text
@a7 1
final boolean hasDomainFile = !editorGen.isSameFileForDiagramAndModel() && editorGen.getDomainGenModel() != null;
d128 1
a128 1
<%importManager.emitSortedImports();%>
@


1.22
log
@[165303] Use one more page in generated wizard to ask for model file when standalone domain model option is set
@
text
@a18 1
import org.eclipse.ui.dialogs.WizardNewFileCreationPage;
d24 7
a30 1
public class <%=importManager.getCompilationUnitName()%> extends WizardNewFileCreationPage {
@


1.21
log
@refactor: pass uris to diagram editor util
@
text
@d17 1
a25 12
<%if (hasDomainFile) {%>

	/**
	 * @@generated
	 */
	private static final String DOMAIN_EXT = ".<%=editorGen.getDomainFileExtension()%>"; //$NON-NLS-1$
<%}%>

	/**
	 * @@generated
	 */
	private static final String DIAGRAM_EXT = ".<%=editorGen.getDiagramFileExtension()%>"; //$NON-NLS-1$
d35 2
d39 2
a40 10
	public URI getDiagramURI() {
		IPath path = getFilePath();
		if (path.getFileExtension() == null) {
			path = path.addFileExtension("<%=editorGen.getDiagramFileExtension()%>"); //$NON-NLS-1$
		}
<%if (application == null) {%>
		return URI.createPlatformResourceURI(path.toString());
<%} else {%>
		return URI.createFileURI(path.toString());
<%}%>
a41 1
<%if (hasDomainFile) {%>
d46 1
a46 3
	public URI getModelURI() {
		IPath path = getFilePath();
		path = path.removeFileExtension().addFileExtension("<%=editorGen.getDomainFileExtension()%>"); //$NON-NLS-1$
d48 1
a48 1
		return URI.createPlatformResourceURI(path.toString());
d50 1
a50 1
		return URI.createFileURI(path.toString());
a52 1
<%}%>
d74 11
a84 11
	protected String getDefaultFileName() {
		return "default"; //$NON-NLS-1$
	}

	/**
	 * @@generated
	 */
	public String getFileName() {
		String fileName = super.getFileName();
		if (fileName != null && !fileName.endsWith(DIAGRAM_EXT)) {
			fileName += DIAGRAM_EXT;
a85 2
		return fileName;
	}
d87 2
a88 9
	/**
	 * @@generated
	 */
	private String getUniqueFileName(IPath containerPath, String fileName) {
		String newFileName = fileName;
		IPath diagramFilePath = containerPath.append(newFileName + DIAGRAM_EXT);
<%if (hasDomainFile) {%>
		IPath modelFilePath = containerPath.append(newFileName + DOMAIN_EXT);
<%}%>
d90 1
a90 5
		while (exists(diagramFilePath)
<%if (hasDomainFile) {%>
				|| exists(modelFilePath)
<%}%>
				) {
d92 4
a95 5
			newFileName = fileName + i;
			diagramFilePath = containerPath.append(newFileName + DIAGRAM_EXT);
<%if (hasDomainFile) {%>
			modelFilePath = containerPath.append(newFileName + DOMAIN_EXT);
<%}%>
d97 1
a97 1
		return newFileName;
d105 1
a105 7
		IPath path = getContainerFullPath();
		if (path != null) {
			String fileName = getUniqueFileName(path, getDefaultFileName());
			setFileName(fileName);
		} else {
			setFileName(getDefaultFileName());
		}
a107 1
<%if (hasDomainFile) {%>
d113 7
a119 16
		if (super.validatePage()) {
			String fileName = getFileName();
			if (fileName == null) {
				return false;
			}
			fileName = fileName.substring(0, fileName.length() - DIAGRAM_EXT.length()) + DOMAIN_EXT;
			IPath path = getContainerFullPath();
			if (path == null) {
				path = new Path(""); //$NON-NLS-1$
			}
			path = path.append(fileName);
			if (exists(path)) {
				setErrorMessage("Model file already exists: " + path.lastSegment());
				return false;
			}
			return true;
d121 1
a121 13
		return false;
	}
<%}%>

	/**
	 * @@generated
	 */
	public static boolean exists(IPath path) {
<%if (application == null) {%>
		return <%=importManager.getImportedName("org.eclipse.core.resources.ResourcesPlugin")%>.getWorkspace().getRoot().exists(path);
<%} else {%>
		return path.toFile().exists();
<%}%>
@


1.20
log
@work correctly with pure design editor models
@
text
@d14 2
a18 1

d48 47
d161 5
a165 1
			IPath path = getContainerFullPath().append(fileName);
@


1.19
log
@simplify file names handling
@
text
@d8 1
d24 1
a24 1
<%if (!editorGen.isSameFileForDiagramAndModel()) {%>
d68 1
a68 1
<%if (!editorGen.isSameFileForDiagramAndModel()) {%>
d73 1
a73 1
<%if (!editorGen.isSameFileForDiagramAndModel()) {%>
d80 1
a80 1
<%if (!editorGen.isSameFileForDiagramAndModel()) {%>
d101 1
a101 1
<%if (!editorGen.isSameFileForDiagramAndModel()) {%>
@


1.18
log
@remove unused parameters
@
text
@d7 1
d23 12
d55 2
a56 2
		if (fileName != null) {
			fileName = getDiagramFileCreator().appendExtensionToFileName(fileName);
d64 20
a83 2
	public <%=importManager.getImportedName(genDiagram.getDiagramFileCreatorQualifiedClassName())%> getDiagramFileCreator() {
		return <%=importManager.getImportedName(genDiagram.getDiagramFileCreatorQualifiedClassName())%>.getInstance();
d93 1
a93 1
			String fileName = getDiagramFileCreator().getUniqueFileName(path, getDefaultFileName());
d95 2
d111 3
a113 4
			// appending file extension to correctly process file names including "." symbol
			IPath path = getContainerFullPath().append(getDiagramFileCreator().appendExtensionToFileName(fileName));
			path = path.removeFileExtension().addFileExtension("<%=editorGen.getDomainFileExtension()%>"); //$NON-NLS-1$
			if (<%=importManager.getImportedName(genDiagram.getDiagramFileCreatorQualifiedClassName())%>.exists(path)) {
d122 11
@


1.17
log
@#114200 remove resource deps from wizard
@
text
@a10 3
import java.io.ByteArrayInputStream;
import java.io.InputStream;

a50 7
	public InputStream getInitialContents() {
		return new ByteArrayInputStream(new byte[0]);
	}

	/**
	 * @@generated
	 */
@


1.16
log
@#114200 remove gmf runtime ide dependencies
@
text
@a13 1
import org.eclipse.core.resources.ResourcesPlugin;
a14 1
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.util.DiagramFileCreator;
d24 1
a24 1
public class <%=genDiagram.getCreationWizardPageClassName()%> extends WizardNewFileCreationPage {
d29 1
a29 1
	public <%=genDiagram.getCreationWizardPageClassName()%>(String pageName, IStructuredSelection selection) {
d61 2
a62 2
	public DiagramFileCreator getDiagramFileCreator() {
		return <%=genDiagram.getDiagramFileCreatorClassName()%>.getInstance();
d91 1
a91 1
			if (<%=importManager.getImportedName("org.eclipse.core.resources.ResourcesPlugin")%>.getWorkspace().getRoot().exists(path)) {
@


1.15
log
@fix some nls markers
@
text
@d11 1
d14 1
a14 1
import org.eclipse.core.resources.IFile;
a15 2
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.wizards.EditorWizardPage;
d18 2
a19 2
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.IWorkbenchWindow;
d26 1
a26 1
public class <%=genDiagram.getCreationWizardPageClassName()%> extends EditorWizardPage {
d31 2
a32 4
	public <%=genDiagram.getCreationWizardPageClassName()%>(IWorkbench workbench, IStructuredSelection selection) {
		super("CreationWizardPage", workbench, selection); //$NON-NLS-1$
		setTitle("Create <%=editorGen.getModelID()%> Diagram");
		setDescription("Create a new <%=editorGen.getModelID()%> diagram.");
d38 13
a50 2
	public IFile createAndOpenDiagram(IPath containerPath, String fileName, InputStream initialContents, String kind, IWorkbenchWindow dWindow, IProgressMonitor progressMonitor, boolean saveDiagram) {
		return <%=genDiagram.getDiagramEditorUtilClassName()%>.createAndOpenDiagram(getDiagramFileCreator(), containerPath, fileName, initialContents, kind, dWindow, progressMonitor, isOpenNewlyCreatedDiagramEditor(), saveDiagram);
d56 2
a57 2
	protected String getDefaultFileName() {
		return "default"; //$NON-NLS-1$
d70 8
a77 2
	protected String getDiagramKind() {
		return <%=importManager.getImportedName(genDiagram.getEditPartQualifiedClassName())%>.MODEL_ID;
a78 1
	
d80 1
d94 1
a94 1
				setErrorMessage("Model File already exists: " + path.lastSegment());
a100 1
	
@


1.14
log
@Using modelID in the UI instead of model name.
@
text
@d34 2
a35 2
		setTitle("Create <%=editorGen.getModelID()%> Diagram"); //$NON-NLS-1$
		setDescription("Create a new <%=editorGen.getModelID()%> diagram."); //$NON-NLS-1$
@


1.13
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d34 2
a35 2
		setTitle("Create <%=editorGen.getDomainGenModel().getModelName()%> Diagram"); //$NON-NLS-1$
		setDescription("Create a new <%=editorGen.getDomainGenModel().getModelName()%> diagram."); //$NON-NLS-1$
@


1.12
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d63 1
a63 1
		return "<%=editorGen.getModelID()%>"; //$NON-NLS-1$
@


1.11
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d7 3
a9 2

importManager.emitPackageStatement(stringBuffer);%>
@


1.10
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d4 5
a8 3
GenDiagram genDiagram = (GenDiagram) argument;
GenEditorGenerator editorGen = genDiagram.getEditorGen();%>
package <%=genDiagram.getEditorGen().getEditor().getPackageName()%>;
d20 2
a21 4
<%
ImportUtil importManager = new ImportUtil(genDiagram.getEditorGen().getEditor().getPackageName());
importManager.markImportLocation(stringBuffer);
%>
@


1.9
log
@file extensions moved out from genDiagram. Distinct property captures extension of domain model file now
@
text
@d6 1
a6 1
package <%=genDiagram.getEditorPackageName()%>;
d19 1
a19 1
ImportUtil importManager = new ImportUtil(genDiagram.getEditorPackageName());
@


1.8
log
@constant used throughout templates to identify diagram (genModel.getModelName) was extracted as explicit attribute
packagePrefix added
@
text
@d2 4
a5 3
    imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%GenDiagram genDiagram = (GenDiagram) argument;%>
<%GenModel genModel = genDiagram.getEditorGen().getDomainGenModel();%>
d33 2
a34 2
		setTitle("Create <%=genModel.getModelName()%> Diagram"); //$NON-NLS-1$
		setDescription("Create a new <%=genModel.getModelName()%> diagram."); //$NON-NLS-1$
d62 1
a62 1
		return "<%=genDiagram.getEditorGen().getModelID()%>"; //$NON-NLS-1$
d65 1
a65 1
<%if (!genDiagram.isSameFileForDiagramAndModel()) {%>
d77 1
a77 1
			path = path.removeFileExtension().addFileExtension("<%=genDiagram.getDomainDiagramElement().getGenPackage().getPrefix().toLowerCase()%>"); //$NON-NLS-1$
@


1.7
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d61 1
a61 1
		return "<%=genModel.getModelName()%>"; //$NON-NLS-1$
@


1.6
log
@ImportManager moved to oeg.common
@
text
@d4 1
a4 1
<%GenModel genModel = genDiagram.getEMFGenModel();%>
@


1.5
log
@#121427
Fixing problems with re-creation recently removed diagram.
@
text
@d2 1
a2 1
    imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.ImportUtil"%>
@


1.4
log
@#116031 avoid hardcoded class names in templates
@
text
@d2 1
a2 1
    imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.gmfgen.*"%>
d17 4
d63 24
d88 1
@


1.3
log
@catch up with recent API changes in the runtime
@
text
@d21 1
a21 1
public class CreationWizardPage extends EditorWizardPage {
d26 1
a26 1
	public CreationWizardPage(IWorkbench workbench, IStructuredSelection selection) {
d36 1
a36 1
		return DiagramEditorUtil.createAndOpenDiagram(getDiagramFileCreator(), containerPath, fileName, initialContents, kind, dWindow, progressMonitor, isOpenNewlyCreatedDiagramEditor(), saveDiagram);
d50 1
a50 1
		return DiagramFileCreatorBis.getInstance();
@


1.2
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@d13 1
a13 1
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.util.EditorFileCreator;
d49 2
a50 2
	public EditorFileCreator getDiagramFileCreator() {
		return DiagramFileCreator.getInstance();
@


1.1
log
@[dstadnik] Use Notation Model as runtime model
@
text
@d4 1
a4 1
<%GenModel genModel = genDiagram.getEmfGenModel();%>
@

