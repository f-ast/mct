head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20050828:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2005.10.04.19.20.26;	author atikhomirov;	state dead;
branches;
next	1.3;

1.3
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.19.17.24.29;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.29;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@get rid of old diagramrt, use o.e.gmf.diagram.notation instead
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.edit" class="LinkMetaInfoProviderGenerator" imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.util.ImportUtil"%>
<%GenLink genLink = (GenLink) argument;%>
<%GenDiagram genDiagram = genLink.getDiagram();%>
package <%=genDiagram.getEditProvidersPackageName()%>;
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditProvidersPackageName());%>

import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.gmf.diagramrt.DiagramLink;
import org.eclipse.gmf.edit.provider.metainfo.LinkMetaInfoProvider;
import org.eclipse.gmf.edit.provider.metainfo.MetaInfoProviderAdapter;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genLink.getMetaInfoProviderClassName()%> extends MetaInfoProviderAdapter implements LinkMetaInfoProvider {

	/**
	 * @@generated
	 */
	public EStructuralFeature getTargetFeature(DiagramLink diagramLink) {
<%
GenFeature genFeature1 = genLink.getDomainLinkTargetFeature();
String metaPackageInterfaceName1 = importManager.getImportedName(genFeature1.getGenPackage().getQualifiedPackageInterfaceName());
%>
		return <%=metaPackageInterfaceName1%>.eINSTANCE.get<%=genFeature1.getFeatureAccessorName()%>();
	}

	/**
	 * @@generated
	 */
	public EReference getContainmentFeature(DiagramLink diagramLink) {
<%
if (genLink.getContainmentMetaFeature() == null) {%>
		return null;
<%} else {
GenFeature genFeature2 = genLink.getContainmentMetaFeature();
String metaPackageInterfaceName2 = importManager.getImportedName(genFeature2.getGenPackage().getQualifiedPackageInterfaceName());
%>
		return <%=metaPackageInterfaceName2%>.eINSTANCE.get<%=genFeature2.getFeatureAccessorName()%>();
<%}%>
	}
}
<%importManager.emitSortedImports();%>

@


1.3
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@@


1.2
log
@correct imports
@
text
@d24 1
a24 1
GenFeature genFeature1 = genDiagram.findGenFeature(genLink.getDomainLinkTargetFeature());
d38 1
a38 1
GenFeature genFeature2 = genDiagram.findGenFeature(genLink.getContainmentMetaFeature());
@


1.1
log
@*** empty log message ***
@
text
@d10 2
a11 2
import org.eclipse.gmf.edit.provider.LinkMetaInfoProvider;
import org.eclipse.gmf.edit.provider.MetaInfoProviderAdapter;
@

