head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081015-1925:1.2
	v20081008-1925:1.2
	v20081001-1925:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2005.10.04.19.20.26;	author atikhomirov;	state dead;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.29;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@get rid of old diagramrt, use o.e.gmf.diagram.notation instead
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.edit" class="MetaInfoProviderAdapterFactory2Generator" imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.util.ImportUtil java.util.*"%>
<%
GenDiagram genDiagram = (GenDiagram) argument;
GenPackage rtGenPackage = genDiagram.getDiagramRunTimeClass().getGenPackage();
%>
package <%=genDiagram.getEditProvidersPackageName()%>;
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditProvidersPackageName());%>

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.gmf.diagramrt.DiagramCanvas;
import org.eclipse.gmf.diagramrt.DiagramLink;
import org.eclipse.gmf.diagramrt.DiagramNode;
import org.eclipse.gmf.diagramrt.util.DiagramRTAdapterFactory;
import org.eclipse.gmf.diagramrt.util.DiagramRTSwitch;
import org.eclipse.gmf.edit.provider.metainfo.LinkMetaInfoProvider;
import org.eclipse.gmf.edit.provider.metainfo.NodeMetaInfoProvider;
<%importManager.markImportLocation(stringBuffer);%>


/**
 * This one is for specific DRT model of <%=rtGenPackage.getEcorePackage().getName()%>.
 * @@generated
 */
public class <%=genDiagram.getMetaInfoFactoryClassName()%> extends <%=importManager.getImportedName(rtGenPackage.getQualifiedAdapterFactoryClassName())%> implements ComposeableAdapterFactory, IDisposable {
<%final boolean STATELESS = true;%>
	/**
	 * @@generated
	 */
	private ComposedAdapterFactory myParentFactory;

	/**
	 * @@generated
	 */
	public boolean isFactoryForType(Object object) {
		return NodeMetaInfoProvider.class.equals(object) || LinkMetaInfoProvider.class.equals(object) || super.isFactoryForType(object);
	}

	/**
	 * @@generated
	 */
	public <%=genDiagram.getMetaInfoFactoryClassName()%>() {
	}

<%
final List allElements = new LinkedList();
allElements.addAll(genDiagram.getNodes());
allElements.addAll(genDiagram.getLinks());
allElements.add(genDiagram);
for (Iterator it = allElements.iterator(); it.hasNext();) {
	GenCommonBase genElement = (GenCommonBase) it.next();
	final String mipQualifiedName = importManager.getImportedName(genElement.getMetaInfoProviderQualifiedClassName());
	if (STATELESS) {
%>

	/**
	 * @@generated
	 */
	protected <%=mipQualifiedName%> my<%=genElement.getMetaInfoProviderClassName()%>;

	/**
	 * XXX Looks like we restrict ourselves to 'full' DRT models here, ie for each kind  
	 * of node/link on diagram there should be separate class in DRT. Otherwise, 
	 * there will be no different createXXXAdapter methods and same metainfo 
	 * @@generated
	 * @@overrides
	 */
	public Adapter create<%=genElement.getDiagramRunTimeClass().getName()%>Adapter() {
		if (my<%=genElement.getMetaInfoProviderClassName()%> == null) {
			my<%=genElement.getMetaInfoProviderClassName()%> = new <%=mipQualifiedName%>();
		}
		return my<%=genElement.getMetaInfoProviderClassName()%>;
	}
<%	} else {%>
	// TODO statful
<%	}%>
<%}%>
	/**
	 * @@generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return myParentFactory == null ? this : myParentFactory.getRootAdapterFactory();
	}

	/**
	 * @@generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		myParentFactory = parentAdapterFactory;
	}

	/**
	 * @@generated
	 */
	public void dispose() {
	}
}
<%importManager.emitSortedImports();%>@


1.1
log
@*** empty log message ***
@
text
@@

