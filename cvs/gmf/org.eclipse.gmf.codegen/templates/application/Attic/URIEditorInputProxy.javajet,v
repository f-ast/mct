head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081015-1925:1.2
	v20081008-1925:1.2
	v20081001-1925:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.01.29.14.20.31;	author dstadnik;	state dead;
branches;
next	1.1;
commitid	69ed45be02ac4567;

1.1
date	2006.10.09.17.30.47;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[171528] use URIEditorInput to open diagrams
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.application" class="URIEditorInputProxyGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenApplication application = (GenApplication) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.emf.common.ui.URIEditorInput;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.util.HashUtil;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.MEditingDomainElement;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class URIEditorInputProxy extends URIEditorInput implements MEditingDomainElement {

	/**
	 * @@generated
	 */
	private final URIEditorInput delegate;

	/**
	 * @@generated
	 */
	private final TransactionalEditingDomain domain;

	/**
	 * @@generated
	 */
	public URIEditorInputProxy(URIEditorInput delegate, TransactionalEditingDomain domain) {
		super(delegate.getURI());
		this.delegate = delegate;
		this.domain = domain;
	}

	/**
	 * @@generated
	 */
	public TransactionalEditingDomain getEditingDomain() {
		return domain;
	}

	/**
	 * @@generated
	 */
	public boolean equals(Object obj) {
		if (obj instanceof URIEditorInputProxy) {
			URIEditorInputProxy another = (URIEditorInputProxy) obj;
			return eq(delegate.getURI(), another.getURI()) && eq(domain, another.domain);
		}
		return false;
	}

	/**
	 * @@generated
	 */
	private static boolean eq(Object obj1, Object obj2) {
		return obj1 == null ? obj2 == null : obj1.equals(obj2);
	}

	/**
	 * @@generated
	 */
	public int hashCode() {
		return HashUtil.hash(HashUtil.hash(delegate), domain);
	}
}
<%importManager.emitSortedImports();%>
@


1.1
log
@#114200 use uri editor input for diagram editor
@
text
@@

