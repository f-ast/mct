head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081015-1925:1.2
	v20081008-1925:1.2
	v20081001-1925:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.01.17.13.12.34;	author ashatalin;	state dead;
branches;
next	1.1;
commitid	3d0045ae20c04567;

1.1
date	2006.11.30.18.19.30;	author ashatalin;	state Exp;
branches;
next	;
commitid	5afc456f20b14567;


desc
@@


1.2
log
@NodeItemSemanticEditPolicy template reimplemented using xpand.
@
text
@<%if (modelFacet.getSourceMetaFeature() != null) {
	String containerClassName = importManager.getImportedName(containmentFeature.getGenClass().getQualifiedInterfaceName());%>
<%=containerClassName%> container = (<%=containerClassName%>) getRelationshipContainer(source, <%=importManager.getImportedName(containmentFeature.getGenClass().getGenPackage().getQualifiedPackageInterfaceName())%>.eINSTANCE.get<%=containmentFeature.getGenClass().getClassifierAccessorName()%>(), req.getElementType());
if (container == null) {
	return <%=importManager.getImportedName("org.eclipse.gef.commands.UnexecutableCommand")%>.INSTANCE;
}
<%}%>@


1.1
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@@

