head	1.12;
access;
symbols
	v20081022-1925:1.12
	v20081015-1925:1.12
	v20081008-1925:1.12
	v20081001-1925:1.12
	v20080924-1925:1.12
	v20080917-1925:1.12
	v20080911-1728:1.12
	v20080910-1520:1.12
	v20080903-1520:1.12
	v20080827-1520:1.12
	v20080813-1520:1.12
	v20080806-1520:1.12
	RC3_20:1.11
	v20070614-1400:1.11
	v20070608-1300:1.11
	v20070605-1400:1.11
	v20070601-1400:1.11
	v20070525-1500:1.11
	v20070520-1200:1.11
	v20070518-1300:1.11
	v20070504-1000:1.11
	v20070427-0600:1.11
	v20070420-1000:1.11
	v20070413-1300:1.11
	v20070405-1100:1.11
	v20070403-1500:1.11
	v20070330-1300:1.11
	v20060330-1300:1.11
	v20070322-1100:1.11
	v20060316-0600:1.11
	v20070307-0700:1.11
	v20070301-1200:1.11
	v20070228-2000:1.11
	v20070221-1500:1.11
	v20070208-1800:1.11
	v20070202-0200:1.8
	v20070103-0300:1.11
	M4_20:1.11
	v20061222-1800:1.11
	v20061218-1200:1.11
	v20061214-0000:1.11
	v20061120-1300:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061027-1200:1.8
	v20061020-1000:1.8
	v20061013-1330:1.9
	v20060919-0800:1.8
	v20060907-1100:1.8
	M1_20:1.8
	v20060904-1500:1.8
	v20060824-1600:1.8
	v20060817-1500:1.8
	v20060728-0500:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060626-1420:1.8
	v20060620-0400:1.8
	v20060616-1400:1.8
	v20060616-1200:1.8
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-1300:1.7
	v20060519-0800:1.7
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.1
	I20051124-2000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2007.06.15.14.58.03;	author dstadnik;	state dead;
branches;
next	1.11;
commitid	6d674672a8f74567;

1.11
date	2006.12.12.12.00.00;	author dstadnik;	state Exp;
branches;
next	1.10;
commitid	2d28457e99bb4567;

1.10
date	2006.11.24.22.25.21;	author ashatalin;	state Exp;
branches;
next	1.9;
commitid	5f734567714f4567;

1.9
date	2006.09.26.15.41.04;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.14.18.40.16;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.18.13.58.29;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.07.15.45.27;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.14.13.20.08;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.17.15.39;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.05.22.57.53;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.05.18.48.06;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.21.09.35.37;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.12
log
@[192850] Rewrite GraphicalNodeEditPolicy.javajet template in xpand
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.policies" class="GraphicalNodeEditPolicyGenerator"
	imports="java.util.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenNode genNode = (GenNode) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
final GenDiagram genDiagram = genNode.getDiagram();
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genNode.getGraphicalNodeEditPolicyClassName()%> extends <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.editpolicies.GraphicalNodeEditPolicy")%> {

	/**
	 * @@generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.gef.commands.Command")%> getConnectionCompleteCommand(
			<%=importManager.getImportedName("org.eclipse.gef.requests.CreateConnectionRequest")%> request) {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.IElementType")%> elementType = getElementType(request);
<%	for (Iterator it = genNode.getReorientedIncomingLinks().iterator(); it.hasNext();) {
		GenLink nextLink = (GenLink) it.next();%>
		if (<%=importManager.getImportedName(genDiagram.getElementTypesQualifiedClassName())%>.<%=nextLink.getUniqueIdentifier()%> == elementType) {
<%		if (nextLink.isOutgoingCreationAllowed()) {%>
			if (request.getSourceEditPart() != getHost()) {
<%		}%>
			return getConnectionWithReorientedViewCompleteCommand(request);
<%		if (nextLink.isOutgoingCreationAllowed()) {%>
			}
<%		}%>
		}
<%	}%>
		return super.getConnectionCompleteCommand(request);
	}

	/**
	 * @@generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.IElementType")%> getElementType(<%=importManager.getImportedName("org.eclipse.gef.requests.CreateConnectionRequest")%> request) {
		if (request instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewAndElementRequest")%>) {
			<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter")%> requestAdapter = ((<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewAndElementRequest")%>) request)
					.getConnectionViewAndElementDescriptor().getCreateElementRequestAdapter();
			return (<%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.IElementType")%>) requestAdapter.getAdapter(<%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.IElementType")%>.class);
		}
		return null;
	}

	/**
	 * @@generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.gef.commands.Command")%> getConnectionWithReorientedViewCompleteCommand(<%=importManager.getImportedName("org.eclipse.gef.requests.CreateConnectionRequest")%> request) {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy")%> c = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy")%>) super.getConnectionCompleteCommand(request);
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.common.core.command.CompositeCommand")%> cc = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.common.core.command.CompositeCommand")%>) c.getICommand();
		<%=importManager.getImportedName("org.eclipse.emf.transaction.TransactionalEditingDomain")%> editingDomain = ((<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart")%>) getHost()).getEditingDomain();
		<%=importManager.getImportedName(genDiagram.getReorientConnectionViewCommandQualifiedClassName())%> rcvCommand =
			new <%=importManager.getImportedName(genDiagram.getReorientConnectionViewCommandQualifiedClassName())%>(editingDomain, null);
		rcvCommand.setEdgeAdaptor(getViewAdapter());
		cc.compose(rcvCommand);
		return c;
	}
}
<%importManager.emitSortedImports();%>
@


1.11
log
@change getRevertedIncomingLinks() method to property for xpand templates
@
text
@@


1.10
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@d24 1
a24 1
<%	for (Iterator it = genNode.getReorientedIncomingGenLinks().iterator(); it.hasNext();) {
@


1.9
log
@do not generate GraphicalNodeEditPolicy unless there's smth for it to do
@
text
@d27 3
d31 3
d42 3
a44 3
	protected IElementType getElementType(CreateConnectionRequest request) {
		if (request instanceof CreateConnectionViewAndElementRequest) {
			CreateElementRequestAdapter requestAdapter = ((CreateConnectionViewAndElementRequest) request)
d46 1
a46 1
			return (IElementType) requestAdapter.getAdapter(IElementType.class);
d54 4
a57 4
	protected Command getConnectionWithReorientedViewCompleteCommand(CreateConnectionRequest request) {
		ICommandProxy c = (ICommandProxy) super.getConnectionCompleteCommand(request);
		CompositeCommand cc = (CompositeCommand) c.getICommand();
		TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
@


1.8
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
d4 1
a4 1
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
d6 1
a10 10
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.requests.CreateConnectionRequest;
import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
import org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.GraphicalNodeEditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewAndElementRequest;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
d16 16
a31 1
public class <%=genDiagram.getBaseGraphicalNodeEditPolicyClassName()%> extends GraphicalNodeEditPolicy {
@


1.7
log
@use importAssistant to emit package statement instead of handcoding
@
text
@d15 1
a15 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d43 1
a43 1
		EtoolsProxyCommand c = (EtoolsProxyCommand) super.getConnectionCompleteCommand(request);
@


1.6
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d3 4
a6 1
<%GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];%>
d8 1
a8 1
package <%=genDiagram.getEditPoliciesPackageName()%>;
a9 1
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPoliciesPackageName());%>
@


1.5
log
@use new transactional emf api
@
text
@d4 1
@


1.4
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d7 1
d13 1
d42 1
d44 1
a44 1
			new <%=importManager.getImportedName(genDiagram.getReorientConnectionViewCommandQualifiedClassName())%>(null);
@


1.3
log
@ImportManager moved to oeg.common
@
text
@d3 1
a3 1
<%GenDiagram genDiagram = (GenDiagram) argument;%>
@


1.2
log
@#119279
Reverting link in accordance with model link.
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
@


1.1
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@d37 2
a38 2
	protected Command getConnectionWithReorientedViewCreateCommand(CreateConnectionRequest request) {
		EtoolsProxyCommand c = (EtoolsProxyCommand) super.getConnectionCreateCommand(request);
@

