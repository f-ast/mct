head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080722-1827:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.5
	v20080521:1.5
	v20080516-1543:1.5
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080411-0411:1.4
	v20080404-1111:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.1.2.2
	v20071222-1111:1.4
	v20071214-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.1.2.2
	v20071112-0000:1.4
	v20071108-0000:1.2
	R2_0_maintenance:1.1.0.2;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	39124821b4de4567;

1.4
date	2007.11.09.18.16.19;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	47b54734a3f24567;

1.3
date	2007.11.09.17.08.45;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	6af64734941b4567;

1.2
date	2007.10.29.18.30.24;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	2327472626c04567;

1.1
date	2007.10.29.18.24.40;	author ashatalin;	state dead;
branches
	1.1.2.1;
next	;
commitid	14e4472625684567;

1.1.2.1
date	2007.10.29.18.24.40;	author ashatalin;	state Exp;
branches;
next	1.1.2.2;
commitid	14e4472625684567;

1.1.2.2
date	2007.11.09.17.28.52;	author ashatalin;	state Exp;
branches;
next	;
commitid	647473498d24567;


desc
@@


1.5
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::editparts::Utils»

«DEFINE constructor FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
	public «editPartClassName»(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
«ENDDEFINE»

«DEFINE createDefaultEditPoliciesBody FOR gmfgen::GenDiagram-»
	super.createDefaultEditPolicies();
	«EXPAND xpt::diagram::editparts::Common::installSemanticEditPolicy-»
	«EXPAND xpt::diagram::editparts::Common::installCanonicalEditPolicy-»
	«IF generateCreateShortcutAction() && null == editorGen.application-»
		installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.DRAG_DROP_ROLE, new org.eclipse.gmf.runtime.diagram.ui.editpolicies.DiagramDragDropEditPolicy() {
			public org.eclipse.gef.commands.Command getDropObjectsCommand(org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest dropRequest) {
				java.util.List viewDescriptors = new java.util.ArrayList();
				for (java.util.Iterator it = dropRequest.getObjects().iterator(); it.hasNext();) {
					Object nextObject = it.next();
					if (false == nextObject instanceof org.eclipse.emf.ecore.EObject) {
						continue;
					}
					viewDescriptors.add(new org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter((org.eclipse.emf.ecore.EObject) nextObject), org.eclipse.gmf.runtime.notation.Node.class, null, getDiagramPreferencesHint()));
				}
				return createShortcutsCommand(dropRequest, viewDescriptors);
			}

			private org.eclipse.gef.commands.Command createShortcutsCommand(org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest dropRequest, java.util.List viewDescriptors) {
				org.eclipse.gef.commands.Command command = createViewsAndArrangeCommand(dropRequest, viewDescriptors);
				if (command != null) {
					return command.chain(new org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy(new «getCreateShortcutDecorationsCommandQualifiedClassName()»(getEditingDomain(), (org.eclipse.gmf.runtime.notation.View) getModel(), viewDescriptors)));
				}
				return null;
			}
		});
	«ENDIF-»
	«IF shouldGenerateDiagramViewmap()-»
		// diagram figure does layout; need to install child editpolicy to show selection feedback
		installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, new org.eclipse.gef.editpolicies.LayoutEditPolicy() {
			protected org.eclipse.gef.EditPolicy createChildEditPolicy(org.eclipse.gef.EditPart child) {
				final org.eclipse.gef.editpolicies.NonResizableEditPolicy p = new org.eclipse.gef.editpolicies.NonResizableEditPolicy();
				p.setDragAllowed(false);
				return p;
			}
			protected org.eclipse.gef.commands.Command getMoveChildrenCommand(org.eclipse.gef.Request request) {
				return null;
			}
			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		});
	«ENDIF-»
	«EXPAND xpt::diagram::editparts::Common::behaviour FOR this-»
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.POPUPBAR_ROLE);
«ENDDEFINE»

«DEFINE createFigure FOR gmfgen::GenDiagram-»
	«IF shouldGenerateDiagramViewmap()-»
		«EXPAND xpt::Common::generatedMemberComment»
		protected org.eclipse.draw2d.IFigure createFigure() {
			org.eclipse.draw2d.FreeformLayer l = new org.eclipse.draw2d.FreeformLayer();
			l.setBorder(new org.eclipse.draw2d.MarginBorder(50));
			«EXPAND initLayout("lm") FOR viewmap.layoutType-»
			l.setLayoutManager(lm);
			return l;
		}
	«ENDIF»
«ENDDEFINE»

«DEFINE initLayout(String varName) FOR gmfgen::ViewmapLayoutType-»
	«IF value == gmfgen::ViewmapLayoutType::TOOLBAR_LAYOUT.value-»
		org.eclipse.draw2d.ToolbarLayout «varName» = new org.eclipse.draw2d.ToolbarLayout();
		«varName».setSpacing(10);
	«ELSEIF value == gmfgen::ViewmapLayoutType::FLOW_LAYOUT.value-»
		org.eclipse.draw2d.FlowLayout «varName» = new org.eclipse.draw2d.FlowLayout();
		«varName».setMajorSpacing(10);
		«varName».setMinorSpacing(10);
	«ELSE-»
		org.eclipse.draw2d.LayoutManager «varName» = null; /*FIXME - unknown layout type*/
	«ENDIF-»
«ENDDEFINE»@


1.4
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d14 1
a14 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.3
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d2 1
a2 1
 * Copyright (c) 2006-2007 Borland Software Corporation
@


1.2
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.1
log
@file DiagramEditPart.xpt was initially added on branch R2_0_maintenance.
@
text
@d1 96
@


1.1.2.1
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@a0 96
/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::editparts::Utils»

«DEFINE constructor FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
	public «editPartClassName»(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
«ENDDEFINE»

«DEFINE createDefaultEditPoliciesBody FOR gmfgen::GenDiagram-»
	super.createDefaultEditPolicies();
	«EXPAND xpt::diagram::editparts::Common::installSemanticEditPolicy-»
	«EXPAND xpt::diagram::editparts::Common::installCanonicalEditPolicy-»
	«IF generateCreateShortcutAction() && null == editorGen.application-»
		installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.DRAG_DROP_ROLE, new org.eclipse.gmf.runtime.diagram.ui.editpolicies.DiagramDragDropEditPolicy() {
			public org.eclipse.gef.commands.Command getDropObjectsCommand(org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest dropRequest) {
				java.util.List viewDescriptors = new java.util.ArrayList();
				for (java.util.Iterator it = dropRequest.getObjects().iterator(); it.hasNext();) {
					Object nextObject = it.next();
					if (false == nextObject instanceof org.eclipse.emf.ecore.EObject) {
						continue;
					}
					viewDescriptors.add(new org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter((org.eclipse.emf.ecore.EObject) nextObject), org.eclipse.gmf.runtime.notation.Node.class, null, getDiagramPreferencesHint()));
				}
				return createShortcutsCommand(dropRequest, viewDescriptors);
			}

			private org.eclipse.gef.commands.Command createShortcutsCommand(org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest dropRequest, java.util.List viewDescriptors) {
				org.eclipse.gef.commands.Command command = createViewsAndArrangeCommand(dropRequest, viewDescriptors);
				if (command != null) {
					return command.chain(new org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy(new «getCreateShortcutDecorationsCommandQualifiedClassName()»(getEditingDomain(), (org.eclipse.gmf.runtime.notation.View) getModel(), viewDescriptors)));
				}
				return null;
			}
		});
	«ENDIF-»
	«IF shouldGenerateDiagramViewmap()-»
		// diagram figure does layout; need to install child editpolicy to show selection feedback
		installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, new org.eclipse.gef.editpolicies.LayoutEditPolicy() {
			protected org.eclipse.gef.EditPolicy createChildEditPolicy(org.eclipse.gef.EditPart child) {
				final org.eclipse.gef.editpolicies.NonResizableEditPolicy p = new org.eclipse.gef.editpolicies.NonResizableEditPolicy();
				p.setDragAllowed(false);
				return p;
			}
			protected org.eclipse.gef.commands.Command getMoveChildrenCommand(org.eclipse.gef.Request request) {
				return null;
			}
			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		});
	«ENDIF-»
	«EXPAND xpt::diagram::editparts::Common::behaviour FOR this-»
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.POPUPBAR_ROLE);
«ENDDEFINE»

«DEFINE createFigure FOR gmfgen::GenDiagram-»
	«IF shouldGenerateDiagramViewmap()-»
		«EXPAND xpt::Common::generatedMemberComment»
		protected org.eclipse.draw2d.IFigure createFigure() {
			org.eclipse.draw2d.FreeformLayer l = new org.eclipse.draw2d.FreeformLayer();
			l.setBorder(new org.eclipse.draw2d.MarginBorder(50));
			«EXPAND initLayout("lm") FOR viewmap.layoutType-»
			l.setLayoutManager(lm);
			return l;
		}
	«ENDIF»
«ENDDEFINE»

«DEFINE initLayout(String varName) FOR gmfgen::ViewmapLayoutType-»
	«IF value == gmfgen::ViewmapLayoutType::TOOLBAR_LAYOUT.value-»
		org.eclipse.draw2d.ToolbarLayout «varName» = new org.eclipse.draw2d.ToolbarLayout();
		«varName».setSpacing(10);
	«ELSEIF value == gmfgen::ViewmapLayoutType::FLOW_LAYOUT.value-»
		org.eclipse.draw2d.FlowLayout «varName» = new org.eclipse.draw2d.FlowLayout();
		«varName».setMajorSpacing(10);
		«varName».setMinorSpacing(10);
	«ELSE-»
		org.eclipse.draw2d.LayoutManager «varName» = null; /*FIXME - unknown layout type*/
	«ENDIF-»
«ENDDEFINE»@


1.1.2.2
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d2 1
a2 1
 * Copyright (c) 2006, 2007 Borland Software Corporation
@


