head	1.25;
access;
symbols
	v20081022-1925:1.25
	v20081015-1925:1.25
	v20081008-1925:1.25
	v20081001-1925:1.25
	v20080924-1925:1.25
	v20080917-1925:1.25
	v20080911-1728:1.25
	v20080910-1520:1.25
	v20080903-1520:1.25
	v20080827-1520:1.25
	v20080813-1520:1.25
	v20080806-1520:1.25
	v20070202-0200:1.21
	v20061120-1300:1.24
	M3_20:1.24
	v20061117-0800:1.24
	v20061027-1200:1.21
	v20061020-1000:1.21
	v20061013-1330:1.22
	v20060919-0800:1.21
	v20060907-1100:1.21
	M1_20:1.22
	v20060904-1500:1.22
	v20060824-1600:1.21
	v20060817-1500:1.21
	v20060728-0500:1.21
	v20060713-1700:1.21
	R1_0_maintenance:1.21.0.2
	R1_0:1.21
	v20060627-1200:1.21
	v20060626-1420:1.21
	v20060620-0400:1.21
	v20060616-1400:1.21
	v20060616-1200:1.21
	v20060609-1400:1.21
	v20060531-1730:1.20
	v20060530-1930:1.20
	v20060526-1200:1.20
	v20060519-1300:1.20
	v20060519-0800:1.20
	v20060512-1000:1.18
	I20060512-1000:1.18
	I20060505-1400:1.17
	I20060428-1300:1.17
	I20060424-0500:1.17
	I20060424-0300:1.17
	M6_10:1.16
	I20060407-1200:1.12
	I20060331-1000:1.12
	I20060324-0300:1.12
	I20060317-1300:1.12
	I20060317-1200:1.12
	I20060316-1300:1.12
	I20060309-1300:1.7
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.25
date	2006.12.07.17.33.46;	author dstadnik;	state dead;
branches;
next	1.24;
commitid	23d0457850794567;

1.24
date	2006.10.18.09.56.50;	author dstadnik;	state Exp;
branches;
next	1.23;

1.23
date	2006.10.17.13.08.11;	author dstadnik;	state Exp;
branches;
next	1.22;

1.22
date	2006.07.07.11.58.56;	author dstadnik;	state Exp;
branches;
next	1.21;

1.21
date	2006.06.09.12.31.18;	author dstadnik;	state Exp;
branches;
next	1.20;

1.20
date	2006.05.18.13.58.29;	author atikhomirov;	state Exp;
branches;
next	1.19;

1.19
date	2006.05.17.14.22.47;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.05.10.11.13.14;	author dstadnik;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.20.20.37.15;	author ashatalin;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.14.14.47.54;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.14.07.36.06;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.12.16.28.45;	author dstadnik;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.12.01.16.49;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.15.14.39.11;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.14.17.04.49;	author dstadnik;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.13.22.31.59;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.13.18.39.47;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.13.11.02.30;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.07.15.45.28;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.01.13.02.24;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.08.17.15.50;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.05.22.57.54;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.19.14.06.54;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.11.43.59;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.12.10.41.33;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.25
log
@rewrite ext node label edit part template in xpand
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.parts" class="ExternalNodeLabelEditPartGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenExternalNodeLabel genLabel = (GenExternalNodeLabel) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
GenCommonBase genHost = genLabel.getNode();
GenDiagram genDiagram = genLabel.getDiagram();
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.draw2d.Label;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.gef.EditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genLabel.getEditPartClassName()%> extends <%=genDiagram.getBaseExternalNodeLabelEditPartClassName()%> implements ITextAwareEditPart {
<%{	GenCommonBase genCommonBase = genLabel;%>
<%@@ include file="visualID.jetinc"%>
<%}%>
<%@@ include file="textAwareFields.jetinc"%>

	/**
	 * @@generated
	 */
	static {
		registerSnapBackPosition(<%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.getType(<%=importManager.getImportedName(genLabel.getEditPartQualifiedClassName())%>.VISUAL_ID), new Point(0, 0));
	}

	/**
	 * @@generated
	 */
	public <%=genLabel.getEditPartClassName()%>(View view) {
		super(view);
	}

	/**
	 * @@generated
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
<%{	GenCommonBase genCommonBase = genLabel;%>
<%@@ include file="customBehaviour.jetinc"%>
<%}%>
	}
<%
final boolean needsRefreshBounds = false;
final boolean readOnly = genLabel.isReadOnly();
final boolean useElementIcon = genLabel.isElementIcon();
final boolean designLabel = genLabel.getModelFacet() instanceof DesignLabelModelFacet;
%>
<%@@ include file="textAware.jetinc"%>

	/**
	 * @@generated
	 */
	protected void handleNotificationEvent(<%=importManager.getImportedName("org.eclipse.emf.common.notify.Notification")%> event) {
		Object feature = event.getFeature();
<%@@ include file="handleText.jetinc"%>
		super.handleNotificationEvent(event);
	}
<%@@ include file="labelFigure.jetinc"%>
}
<%importManager.emitSortedImports();%>
@


1.24
log
@#161380 move readOnly back to GenLabel
@
text
@@


1.23
log
@#160894 Move readOnly property from GenLabel to LabelFeatureModelFacet
@
text
@d56 1
a56 1
final boolean readOnly = genLabel.getModelFacet() != null && genLabel.getModelFacet().isReadOnly();
@


1.22
log
@add custom behaviour
@
text
@d56 1
a56 1
final boolean readOnly = genLabel.isReadOnly();
@


1.21
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d25 1
a25 2
<%{
GenCommonBase genCommonBase = genLabel;%>
d50 3
@


1.20
log
@use importAssistant to emit package statement instead of handcoding
@
text
@d56 1
@


1.19
log
@#139127 Provide an option for labels to display node icon
@
text
@d4 2
a5 1
GenExternalNodeLabel genLabel = (GenExternalNodeLabel) ((Object[]) argument)[0];
d10 1
a10 1
package <%=genDiagram.getEditPartsPackageName()%>;
a11 1
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPartsPackageName());%>
@


1.18
log
@#133836 Creating a child node without a label causes error
@
text
@d55 1
a56 1
<%@@ include file="textAwareNoIcon.jetinc"%>
@


1.17
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d52 4
a55 1
<%final boolean needsRefreshBounds = false;%>
@


1.16
log
@handle both Label and WrapLabel : continued further
@
text
@d35 1
a35 1
		registerSnapBackPosition(<%=importManager.getImportedName(genLabel.getEditPartQualifiedClassName())%>.VISUAL_ID, new Point(0, 0));
@


1.15
log
@remove temporary label direct edit policy
@
text
@a52 1
<%@@ include file="textAwareLabel.jetinc"%>
@


1.14
log
@#135694 remove temporary code
@
text
@d17 1
a17 2
//import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
import <%=genDiagram.getEditPoliciesPackageName()%>.LabelDirectEditPolicy;
@


1.13
log
@#125900 Redundant annotations added to View in generated view factory

Visual ID used as a semantic hint for creation of all the diagram elements.
@
text
@d16 1
a16 1
//import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
@


1.12
log
@generate label figures for all label types
@
text
@d26 4
d36 1
a36 1
		registerSnapBackPosition(<%=importManager.getImportedName(genDiagram.getSemanticHintsQualifiedClassName())%>.<%=genLabel.getNode().getUniqueIdentifier()%>Labels.<%=genLabel.getSemanticHintFieldName()%>, new Point(0, 0));
@


1.11
log
@use specified label figure in ext node labels
@
text
@a48 35

	/**
	 * @@generated
	 */
	protected IFigure createFigure() {
		Label label = createLabel();
		defaultText = label.getText();
		return label;
	}

	/**
	 * @@generated
	 */
	protected Label createLabel() {
<%
String figureQualifiedClassName = null;
Viewmap viewmap = genLabel.getViewmap();
if (viewmap instanceof FigureViewmap) {
	figureQualifiedClassName = ((FigureViewmap) viewmap).getFigureQualifiedClassName();
	if (figureQualifiedClassName == null || figureQualifiedClassName.trim().length() == 0) {
		figureQualifiedClassName = "org.eclipse.draw2d.Label";
	}
%>
		return new <%=importManager.getImportedName(figureQualifiedClassName)%>();
<%} // instanceof FigureViewmap
 else if (viewmap instanceof SnippetViewmap) {%>
		return <%=((SnippetViewmap) viewmap).getBody()%>;
<%} // instanceof SnippetViewmap; FIXME : obtain figure class name to generate getter
 else if (viewmap instanceof InnerClassViewmap) {
 	figureQualifiedClassName = ((InnerClassViewmap) viewmap).getClassName();
%>
		return new <%=figureQualifiedClassName%>();
<%}%>
	}

d62 1
a62 3
<%if (genLabel.getViewmap() instanceof InnerClassViewmap) {%>
<%=((InnerClassViewmap) genLabel.getViewmap()).getClassBody()%>
<%}%>
@


1.10
log
@duplicated refreshVisuals method when label's node has flow layout
@
text
@d12 2
d50 34
d97 3
@


1.9
log
@use Labels instead of WrapLabels
@
text
@d48 1
@


1.8
log
@#129145 do not use intermediate TextCompartmentEditParts
@
text
@d48 1
a48 1
<%@@ include file="textAwareWrapLabel.jetinc"%>
@


1.7
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d5 1
d13 4
d23 2
a24 1
public class <%=genLabel.getEditPartClassName()%> extends <%=genDiagram.getBaseExternalNodeLabelEditPartClassName()%> {
d30 1
a30 1
		registerSnapBackPosition(<%=importManager.getImportedName(genDiagram.getSemanticHintsQualifiedClassName())%>.<%=genLabel.getNode().getUniqueIdentifier()%>Labels.<%=genLabel.getSemanticHintLabelFieldName()%>, new Point(0, 0));
d39 21
@


1.6
log
@#127696 Templates should use new transaction API
@
text
@d7 1
@


1.5
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d19 3
@


1.4
log
@ImportManager moved to oeg.common
@
text
@d4 1
a4 1
GenExternalNodeLabel genLabel = (GenExternalNodeLabel) argument;
@


1.3
log
@#124347 Label snap back action not working in generated code...
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
@


1.2
log
@#122054 support external node labels
@
text
@d10 1
d19 4
@


1.1
log
@#122054 support external node labels (partial fix)
@
text
@a9 1
import org.eclipse.gmf.runtime.diagram.ui.editparts.LabelEditPart;
d16 1
a16 1
public class <%=genLabel.getEditPartClassName()%> extends LabelEditPart {
@

