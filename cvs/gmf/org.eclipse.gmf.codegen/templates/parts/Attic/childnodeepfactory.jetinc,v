head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081015-1925:1.3
	v20081008-1925:1.3
	v20081001-1925:1.3
	v20080924-1925:1.3
	v20080917-1925:1.3
	v20080911-1728:1.3
	v20080910-1520:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080806-1520:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2005.10.04.15.40.37;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.29;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[dstadnik]
#111455 Generate consistent names for notation view factories
#111461 Do not use 'final' keyword in method parameters
#111460 Generate dedicated edit part for the node label
#111457 Use model labels in palette factory
@
text
@<%
	GenClass nextGen = genNode.getDomainMetaClass();
	GenPackage genPackage = nextGen.getGenPackage();
	importManager.addImport(genPackage.getInterfacePackageName(), genPackage.getPackageInterfaceName());
%>
		if (parentMetaClass == <%=genPackage.getPackageInterfaceName()%>.eINSTANCE.get<%=nextGen.getClassifierAccessorName()%>()) {
<%
	for (Iterator it2 = genNode.getChildNodes().iterator(); it2.hasNext();) {
		GenChildNode genChildNode = (GenChildNode) it2.next();
		GenClass nextGenChildClass = genChildNode.getDomainMetaClass();
		GenPackage nextChildGenPackage = nextGenChildClass.getGenPackage();
		if (nextChildGenPackage != genPackage) {
			importManager.addImport(nextChildGenPackage.getInterfacePackageName(), nextChildGenPackage.getPackageInterfaceName());
		}
%>
			if (childMetaClass == <%=nextChildGenPackage.getPackageInterfaceName()%>.eINSTANCE.get<%=nextGenChildClass.getClassifierAccessorName()%>()) {
				// && genChildNode.getGroupID == diagramElement.getGroupID()?
				return new <%=importManager.getImportedName(genChildNode.getEditPartQualifiedClassName())%>(diagramElement);
			}
<%
	}
%>
		}
@


1.2
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d2 1
a2 2
	EClass next = genNode.getDomainMetaClass();
	GenClass nextGen = genDiagram.findGenClass(next);
d10 1
a10 1
		GenClass nextGenChildClass = genDiagram.findGenClass(genChildNode.getDomainMetaClass());
@

