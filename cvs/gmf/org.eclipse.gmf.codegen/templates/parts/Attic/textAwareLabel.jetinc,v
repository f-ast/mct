head	1.7;
access;
symbols
	v20081022-1925:1.7
	v20081015-1925:1.7
	v20081008-1925:1.7
	v20081001-1925:1.7
	v20080924-1925:1.7
	v20080917-1925:1.7
	v20080911-1728:1.7
	v20080910-1520:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080806-1520:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	M6_10:1.5
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2006.04.14.14.47.54;	author dstadnik;	state dead;
branches;
next	1.6;

1.6
date	2006.04.14.14.05.32;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.12.16.56.06;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.12.16.28.45;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.14.17.04.50;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.14.10.27.02;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.13.18.39.47;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.7
log
@handle both Label and WrapLabel : continued further
@
text
@
	/**
	 * @@generated
	 */
	public <%=importManager.getImportedName("org.eclipse.draw2d.Label")%> getLabel() {
		return (<%=importManager.getImportedName("org.eclipse.draw2d.Label")%>) getFigure();
	}

	/**
	 * @@generated
	 */
	public void setLabel(<%=importManager.getImportedName("org.eclipse.draw2d.Label")%> figure) {
		unregisterVisuals();
		setFigure(figure);
		defaultText = figure.getText();
		registerVisuals();
		refreshVisuals();
	}
@


1.6
log
@handle both Label and WrapLabel : continued
@
text
@@


1.5
log
@do not use hardcoded policy name
@
text
@a18 35

	/**
	 * @@generated
	 */
	public void setLabelText(String text) {
		getLabel().setText(text);
		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
		if (pdEditPolicy instanceof <%=importManager.getImportedName(genDiagram.getTextSelectionEditPolicyQualifiedClassName())%>) {
			((<%=importManager.getImportedName(genDiagram.getTextSelectionEditPolicyQualifiedClassName())%>) pdEditPolicy).refreshFeedback();
		}
	}

	/**
	 * @@generated
	 */
	protected void refreshUnderline() {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.FontStyle")%> style =
			(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.FontStyle")%>) getPrimaryView().getStyle(
				<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationPackage")%>.eINSTANCE.getFontStyle());
		if (style != null) {
			//getLabel().setTextUnderline(style.isUnderline());
		}
	}

	/**
	 * @@generated
	 */
	protected void refreshStrikeThrough() {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.FontStyle")%> style =
			(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.FontStyle")%>) getPrimaryView().getStyle(
				<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationPackage")%>.eINSTANCE.getFontStyle());
		if (style != null) {
			//getLabel().setTextStrikeThrough(style.isStrikeThrough());
		}
	}
@


1.4
log
@#135694 remove temporary code
@
text
@d26 2
a27 2
		if (pdEditPolicy instanceof TaiPanTextSelectionEditPolicy) {
			((TaiPanTextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
@


1.3
log
@use specified label figure in ext node labels
@
text
@d23 11
@


1.2
log
@show selection; update default text
@
text
@a4 10
	protected <%=importManager.getImportedName("org.eclipse.draw2d.IFigure")%> createFigure() {
		<%=importManager.getImportedName("org.eclipse.draw2d.Label")%> figure =
			new <%=importManager.getImportedName("org.eclipse.draw2d.Label")%>();
		defaultText = figure.getText();
		return figure;
	}

	/**
	 * @@generated
	 */
@


1.1
log
@use Labels instead of WrapLabels
@
text
@d22 11
@

