head	1.26;
access;
symbols
	v20081022-1925:1.26
	v20081015-1925:1.26
	v20081008-1925:1.26
	v20081001-1925:1.26
	v20080924-1925:1.26
	v20080917-1925:1.26
	v20080911-1728:1.26
	v20080910-1520:1.26
	v20080903-1520:1.26
	v20080827-1520:1.26
	v20080813-1520:1.26
	v20080806-1520:1.26
	v20070202-0200:1.19
	v20061214-0000:1.25
	v20061120-1300:1.24
	M3_20:1.24
	v20061117-0800:1.24
	v20061027-1200:1.19
	v20061020-1000:1.19
	v20061013-1330:1.22
	v20060919-0800:1.19
	v20060907-1100:1.19
	M1_20:1.20
	v20060904-1500:1.20
	v20060824-1600:1.19
	v20060817-1500:1.19
	v20060728-0500:1.19
	v20060713-1700:1.19
	R1_0_maintenance:1.19.0.2
	R1_0:1.19
	v20060627-1200:1.19
	v20060626-1420:1.19
	v20060620-0400:1.19
	v20060616-1400:1.18
	v20060616-1200:1.18
	v20060609-1400:1.18
	v20060531-1730:1.17
	v20060530-1930:1.17
	v20060526-1200:1.17
	v20060519-1300:1.16
	v20060519-0800:1.16
	v20060512-1000:1.15
	I20060512-1000:1.15
	I20060505-1400:1.15
	I20060428-1300:1.15
	I20060424-0500:1.15
	I20060424-0300:1.15
	M6_10:1.14
	I20060407-1200:1.13
	I20060331-1000:1.13
	I20060324-0300:1.13
	I20060317-1300:1.13
	I20060317-1200:1.13
	I20060316-1300:1.13
	I20060309-1300:1.13
	M5_10:1.12
	S20060303-1600:1.12
	I20060227-1730:1.12
	I20060216-1945:1.12
	I20060210-1715:1.12
	I20060209-1815:1.12
	I20060203-0830:1.10
	I20060202-1415:1.10
	I20060129-1145:1.10
	I20060127-0900:1.10
	I20060120-1530:1.10
	I20060113-1700:1.10
	M4_10:1.10
	I20060107-1100:1.10
	I20060105-1630:1.10
	I20051230-1230:1.10
	I20051223-1100:1.10
	I20051217-0925:1.10
	I20051208-2000:1.10
	I20051201-1800:1.10
	I20051124-2000:1.10
	M3_10:1.9
	I20051118-1245:1.9
	I20051111-1800:1.6
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.26
date	2006.12.15.16.43.58;	author dstadnik;	state dead;
branches;
next	1.25;
commitid	6a0d4582d0cd4567;

1.25
date	2006.12.07.11.27.05;	author ashatalin;	state Exp;
branches;
next	1.24;
commitid	3a414577fa884567;

1.24
date	2006.10.25.10.59.05;	author dstadnik;	state Exp;
branches;
next	1.23;

1.23
date	2006.10.24.14.49.09;	author ashatalin;	state Exp;
branches;
next	1.22;

1.22
date	2006.10.06.12.15.31;	author atikhomirov;	state Exp;
branches;
next	1.21;

1.21
date	2006.09.28.10.52.30;	author ashatalin;	state Exp;
branches;
next	1.20;

1.20
date	2006.07.07.11.58.56;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.06.19.14.02.19;	author ashatalin;	state Exp;
branches;
next	1.18;

1.18
date	2006.06.01.09.04.14;	author dstadnik;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.24.11.47.59;	author atikhomirov;	state Exp;
branches;
next	1.16;

1.16
date	2006.05.18.13.58.29;	author atikhomirov;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.20.20.37.15;	author ashatalin;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.13.22.22.23;	author ashatalin;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.07.15.45.28;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.02.08.17.15.50;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2006.02.05.22.57.54;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.23.10.11.52;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.17.18.23.01;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.17.12.38.37;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.16.07.42.24;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.09.13.20.23;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.08.15.36.54;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.04.18.26.17;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.24.17.02.53;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.24.16.47.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.19.16.05;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.26
log
@rewrite diagram edit part template in xpand
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.parts" class="DiagramEditPartGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genDiagram.getEditPartClassName()%> extends <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart")%> {
	<%@@ include file="DiagramEditPart_additions.jetinc" fail="silent"%>

	/**
	 * @@generated
	 */
	public final static String MODEL_ID = "<%=genDiagram.getEditorGen().getModelID()%>"; //$NON-NLS-1$
<%{	GenCommonBase genCommonBase = genDiagram;%>
<%@@ include file="visualID.jetinc"%>
<%}%>

	/**
	 * @@generated
	 */
	public <%=genDiagram.getEditPartClassName()%>(View view) {
		super(view);
	}
	
	/**
	 * @@generated
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new <%=importManager.getImportedName(genDiagram.getItemSemanticEditPolicyQualifiedClassName())%>());
<%if (genDiagram.needsCanonicalEditPolicy()) {%>
		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new <%=importManager.getImportedName(genDiagram.getCanonicalEditPolicyQualifiedClassName())%>());
<%}

if (genDiagram.generateCreateShortcutAction() && genDiagram.getEditorGen().getApplication() == null) {%>
		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.editpolicies.DiagramDragDropEditPolicy")%>() {
			public <%=importManager.getImportedName("org.eclipse.gef.commands.Command")%> getDropObjectsCommand(<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest")%> dropRequest) {
				<%=importManager.getImportedName("java.util.List")%> viewDescriptors = new <%=importManager.getImportedName("java.util.ArrayList")%>();
				for(<%=importManager.getImportedName("java.util.Iterator")%> it = dropRequest.getObjects().iterator(); it.hasNext();) {
					viewDescriptors.add(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest")%>.ViewDescriptor(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter")%>((<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) it.next()), <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Node")%>.class, null, getDiagramPreferencesHint()));
				}

				return createShortcutsCommand(dropRequest, viewDescriptors);
			}

			private <%=importManager.getImportedName("org.eclipse.gef.commands.Command")%> createShortcutsCommand(<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest")%> dropRequest, <%=importManager.getImportedName("java.util.List")%> viewDescriptors) {
				<%=importManager.getImportedName("org.eclipse.gef.commands.Command")%> command = createViewsAndArrangeCommand(dropRequest, viewDescriptors);
				if (command != null) {
					return command.chain(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy")%>(new <%=importManager.getImportedName(genDiagram.getCreateShortcutDecorationsCommandQualifiedClassName())%>(getEditingDomain(), (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) getModel(), viewDescriptors)));
				}
				return null;
			}
		});
<%}

{	GenCommonBase genCommonBase = genDiagram;%>
<%@@ include file="customBehaviour.jetinc"%>
<%}%>
	}
}
<%importManager.emitSortedImports();%>
@


1.25
log
@[167055] mgolubev - Provide possibility to include additional custom contents into generated files without copying the whole template
@
text
@@


1.24
log
@currently shortcuts are disabled in rcp applications
@
text
@d18 1
@


1.23
log
@D&D from diagram content navigator to Diagram surface.
@
text
@d44 1
a44 1
if (genDiagram.generateCreateShortcutAction()) {%>
@


1.22
log
@refactor common attribute (canonical ep name) into shared superclass, get ready to avoid generation of useless canonicalep classes
@
text
@d42 24
a65 2
<%}%>
<%{	GenCommonBase genCommonBase = genDiagram;%>
@


1.21
log
@[158991] - Generating useless / inefficient code
@
text
@d40 1
a40 1
<%if (genDiagram.isSynchronized()) {%>
@


1.20
log
@add custom behaviour
@
text
@d22 1
a22 1
	public static String MODEL_ID = "<%=genDiagram.getEditorGen().getModelID()%>"; //$NON-NLS-1$
@


1.19
log
@#145734 Generate "delete from view" popup menu action for not-synchronized diagrams
@
text
@d23 1
a23 2
<%{
GenCommonBase genCommonBase = genDiagram;%>
d43 3
@


1.18
log
@fix some nls markers
@
text
@d41 1
d43 1
@


1.17
log
@#142211 Handle metamodel names that may have clashes with existing class names
@
text
@d22 1
a22 1
	public static String MODEL_ID = "<%=genDiagram.getEditorGen().getModelID()%>";
@


1.16
log
@use importAssistant to emit package statement instead of handcoding
@
text
@a9 1
import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
d17 1
a17 1
public class <%=genDiagram.getEditPartClassName()%> extends DiagramEditPart {
@


1.15
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d4 2
a5 1
GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
d8 1
a8 1
package <%=genDiagram.getEditPartsPackageName()%>;
a9 1
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPartsPackageName());%>
@


1.14
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d24 4
@


1.13
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d23 5
@


1.12
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d6 1
@


1.11
log
@ImportManager moved to oeg.common
@
text
@d4 1
a4 1
GenDiagram genDiagram = (GenDiagram) argument;
@


1.10
log
@#117660 move canonical edit policy into separate class to shorten it's file name
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
@


1.9
log
@#116905
Using VisualIDRegistry to create CanonicalEditPolicies
@
text
@d2 1
a2 2
	imports="java.util.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.util.*"
	skeleton="../common.skeleton"%>
a8 4
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

a9 1
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalConnectionEditPolicy;
a11 3
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.emf.ecore.EObject;
d32 1
a32 1
		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new <%=genDiagram.getEditPartClassName()%>CanonicalEditPolicy());
a33 79
	
	/**
	 * @@generated
	 */
	private class <%=genDiagram.getEditPartClassName()%>CanonicalEditPolicy extends CanonicalConnectionEditPolicy {
	
<%
String modelElementInterfaceName = importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName());
{
	Collection genNodes = genDiagram.getNodes();
%>
<%@@ include file="getSemanticChildrenList.jetinc"%>
<%
}
%>
		
		/**
		 * @@generated
		 */
		protected List getSemanticConnectionsList() {
			Diagram diagram = (Diagram) getHost().getModel();
			<%=modelElementInterfaceName%> modelElement = (<%=modelElementInterfaceName%>) diagram.getElement();
			List result = new LinkedList();
			for (Iterator diagramElements = modelElement.eContents().iterator(); diagramElements.hasNext();) {
				EObject nextDiagramElement = (EObject) diagramElements.next();
				for (Iterator childElements = nextDiagramElement.eContents().iterator(); childElements.hasNext();) {
					EObject nextChild = (EObject) childElements.next();
					if (<%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.INSTANCE.getLinkWithClassVisualID(nextChild) != -1) {
						result.add(nextChild);
					}
				}
			}
			return result;
		}

		/**
		 * @@generated
		 */
		protected EObject getSourceElement(EObject relationship) {
			return relationship.eContainer();
		}

		/**
		 * @@generated
		 */
		protected EObject getTargetElement(EObject relationship) {
			int vID = <%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.INSTANCE.getLinkWithClassVisualID(relationship);
			switch (vID) {
<%
for (Iterator it = genDiagram.getLinks().iterator(); it.hasNext();) {
	GenLink nextGenLink = (GenLink) it.next();
	if (nextGenLink.getModelFacet() instanceof TypeLinkModelFacet) {
		TypeLinkModelFacet typeLinkFacet = (TypeLinkModelFacet) nextGenLink.getModelFacet(); 
		GenFeature nextLinkTargetFeature = typeLinkFacet.getTargetMetaFeature();
%>
				case <%=nextGenLink.getVisualID()%>:
					return <%=getFeatureValueGetter("relationship", nextLinkTargetFeature, true, importManager)%><%=nextLinkTargetFeature.isListType() ? ".get(0)" : ""%>;
<%
	}
}
%>
			}

			return null;
		}
		
		/**
		 * For now we are skipping links which was generated based on "GenLinkReferenceOnly" classes
		 * since they do not handle any domain model objects inside, so we can not process them using
		 * CanonicalConnectionEditPolicy class
		 *
		 * @@generated
		 */
		protected boolean shouldIncludeConnection(Edge connector, List children) {
			return super.shouldIncludeConnection(connector, children) && connector.getElement() != null;
		}
	
	}
	
@


1.8
log
@#116655

Generating correct access for all the features.
@
text
@a48 4
		/**
		 * @@generated
		 */
		protected List getSemanticChildrenList() {
d51 2
d54 1
a54 2
			<%=modelElementInterfaceName%> modelElement = (<%=modelElementInterfaceName%>) ((View) getHost().getModel()).getElement();
			List result = new LinkedList();
a55 4
Set containmentFeatures = new LinkedHashSet();
for (Iterator it = genDiagram.getNodes().iterator(); it.hasNext();) {
	GenNode nextGenNode = (GenNode) it.next();
	containmentFeatures.add(nextGenNode.getModelFacet().getContainmentMetaFeature());
a56 2
for (Iterator it = containmentFeatures.iterator(); it.hasNext();) {
	GenFeature nextFeature = (GenFeature) it.next();	
a57 6
			result.<%=nextFeature.isListType() ? "addAll" : "add"%>(<%=getFeatureValueGetter("modelElement", nextFeature, false, importManager)%>);
<%
}
%>
			return result;
		}
@


1.7
log
@#116031 avoid hardcoded class names in templates
@
text
@d2 2
a3 1
	imports="java.util.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.util.*"%>
d67 1
a67 1
			result.<%=nextFeature.isListType() ? "addAll" : "add"%>(modelElement.<%=nextFeature.getGetAccessor()%>());
d114 1
a114 1
					((<%=importManager.getImportedName(typeLinkFacet.getMetaClass().getQualifiedInterfaceName())%>) relationship).<%=nextLinkTargetFeature.getGetAccessor()%>()<%=nextLinkTargetFeature.isListType() ? ".get(0)" : ""%>;
@


1.6
log
@[ashatalin] #115625 fixes compilation problems with initializers
@
text
@d84 1
a84 1
					if (<%=importManager.getImportedName(genDiagram.getEditorPackageName() + ".VisualIDRegistry")%>.INSTANCE.getLinkWithClassVisualID(nextChild) != -1) {
d103 1
a103 1
			int vID = <%=importManager.getImportedName(genDiagram.getEditorPackageName() + ".VisualIDRegistry")%>.INSTANCE.getLinkWithClassVisualID(relationship);
@


1.5
log
@[dstadnik] #115466 custom semantic edit policies to control link creation
@
text
@d113 1
a113 1
					((<%=importManager.getImportedName(typeLinkFacet.getMetaClass().getQualifiedInterfaceName())%>) relationship).<%=nextLinkTargetFeature.getGetAccessor()%>()<%=nextLinkTargetFeature.isListType() ? "get(0)" : ""%>;
@


1.4
log
@[ashatalin] #115107 remove uses of deprecated runtime code in templates
@
text
@d39 1
@


1.3
log
@[ashatalin] #113561 use MEditingDomain.getImports instead of ExternalCrossReferencer
@
text
@a19 1
import org.eclipse.emf.ecore.EPackage;
@


1.2
log
@[ashatalin] #113258 sync diagram and domain models using canonicalEditPolicy
@
text
@d58 1
a58 1
Set containmentFeatures = new HashSet();
@


1.1
log
@[dstadnik] support for (a) connections (with associated domain class) and (b) compartments
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.*"%>
d8 5
d14 2
d17 5
d34 102
d137 1
@

