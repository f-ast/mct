head	1.29;
access;
symbols
	v20081022-1925:1.29
	v20081015-1925:1.29
	v20081008-1925:1.29
	v20081001-1925:1.29
	v20080930-1130:1.29
	v20080926-1245:1.29
	v20080924-1925:1.29
	v20080917-1925:1.28
	v20080911-1728:1.28
	v20080910-1520:1.28
	v20080903-1520:1.28
	v20080827-1520:1.27
	v20080813-1520:1.26
	v20080806-1520:1.26
	v20080722-1827:1.26
	v20080718-1731:1.26
	v20080716-1600:1.26
	v20080716-1642:1.26
	R2_1_maintenance:1.26.0.2
	Root_R2_1_maintenance:1.26
	R2_1_0:1.26
	v20080610-1132:1.26
	v20080603-1553:1.26
	v20080528-1052:1.26
	v20080521:1.26
	v20080516-1543:1.26
	v20080516-1143:1.26
	v20080512-1200:1.26
	v20080508-2000:1.26
	v20080507-1326:1.26
	v20080503-1740:1.26
	v20080501-1739:1.26
	v20080425-1959:1.26
	v20080417-1610:1.26
	v20080411-0411:1.26
	v20080404-1111:1.26
	v20080322-0000:1.26
	v20080222-1200:1.25
	v20080215-1500:1.25
	v20080207-0207:1.25
	v20071222-1111:1.25
	v20071214-1111:1.25
	v20071130-1111:1.25
	v20071124-0000:1.25
	v20071112-0000:1.25
	v20071108-0000:1.25
	v20071003-0000:1.25
	v20070928-0000:1.25
	v20070921-0000:1.25
	v20070915-0000:1.25
	v20070903-0000:1.25
	v20070809-0000:1.25
	R2_0_maintenance:1.25.0.2
	R2_0:1.25
	R4_20:1.25
	v20070621-0000:1.25
	RC3_20:1.25
	v20070614-1400:1.25
	v20070608-1300:1.25
	v20070605-1400:1.25
	v20070601-1400:1.25
	v20070525-1500:1.25
	v20070520-1200:1.25
	v20070518-1300:1.25
	v20070504-1000:1.24
	v20070427-0600:1.23
	v20070420-1000:1.23
	v20070413-1300:1.23
	v20070405-1100:1.22
	v20070403-1500:1.22
	v20070330-1300:1.22
	v20060330-1300:1.22
	v20070322-1100:1.22
	v20060316-0600:1.22
	v20070307-0700:1.21
	v20070301-1200:1.21
	v20070228-2000:1.21
	v20070221-1500:1.21
	v20070208-1800:1.21
	v20070202-0200:1.15
	v20070103-0300:1.19
	M4_20:1.19
	v20061222-1800:1.19
	v20061218-1200:1.19
	v20061214-0000:1.19
	v20061120-1300:1.19
	M3_20:1.19
	v20061117-0800:1.19
	v20061027-1200:1.15
	v20061020-1000:1.15
	v20061013-1330:1.19
	v20060919-0800:1.15
	v20060907-1100:1.15
	M1_20:1.16
	v20060904-1500:1.16
	v20060824-1600:1.15
	v20060817-1500:1.15
	v20060728-0500:1.15
	v20060713-1700:1.15
	R1_0_maintenance:1.15.0.2
	R1_0:1.15
	v20060627-1200:1.15
	v20060626-1420:1.15
	v20060620-0400:1.15
	v20060616-1400:1.15
	v20060616-1200:1.15
	v20060609-1400:1.14
	v20060531-1730:1.14
	v20060530-1930:1.14
	v20060526-1200:1.13
	v20060519-1300:1.12
	v20060519-0800:1.12
	v20060512-1000:1.12
	I20060512-1000:1.12
	I20060505-1400:1.12
	I20060428-1300:1.12
	I20060424-0500:1.12
	I20060424-0300:1.12
	M6_10:1.12
	I20060407-1200:1.11
	I20060331-1000:1.11
	I20060324-0300:1.11
	I20060317-1300:1.11
	I20060317-1200:1.11
	I20060316-1300:1.11
	I20060309-1300:1.10
	M5_10:1.9
	S20060303-1600:1.9
	I20060227-1730:1.8
	I20060216-1945:1.6
	I20060210-1715:1.5
	I20060209-1815:1.5;
locks; strict;
comment	@# @;
expand	@k@;


1.29
date	2008.09.23.14.54.39;	author atikhomirov;	state Exp;
branches;
next	1.28;
commitid	2569e48d903244567;

1.28
date	2008.08.29.16.10.04;	author atikhomirov;	state Exp;
branches;
next	1.27;
commitid	4a1948b81f524567;

1.27
date	2008.08.25.16.53.20;	author atikhomirov;	state Exp;
branches;
next	1.26;
commitid	21e48b2e3764567;

1.26
date	2008.02.27.17.30.20;	author atikhomirov;	state Exp;
branches;
next	1.25;
commitid	22cf47c59e244567;

1.25
date	2007.05.11.16.01.30;	author ashatalin;	state Exp;
branches;
next	1.24;
commitid	44f84644934f4567;

1.24
date	2007.05.04.11.55.25;	author dstadnik;	state Exp;
branches;
next	1.23;
commitid	64c2463b1f274567;

1.23
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.22;
commitid	725b461c97d64567;

1.22
date	2007.03.14.14.39.34;	author atikhomirov;	state Exp;
branches;
next	1.21;
commitid	444245f8090b4567;

1.21
date	2007.02.08.19.31.57;	author atikhomirov;	state Exp;
branches;
next	1.20;
commitid	2f8045cb7a9f4567;

1.20
date	2007.02.08.18.06.49;	author atikhomirov;	state Exp;
branches;
next	1.19;
commitid	56b45cb66aa4567;

1.19
date	2006.09.27.10.04.42;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.09.15.20.44.31;	author atikhomirov;	state Exp;
branches;
next	1.17;

1.17
date	2006.09.11.18.21.35;	author ashatalin;	state Exp;
branches;
next	1.16;

1.16
date	2006.07.20.17.40.06;	author ashatalin;	state Exp;
branches;
next	1.15;

1.15
date	2006.06.09.19.39.00;	author radvorak;	state Exp;
branches;
next	1.14;

1.14
date	2006.05.29.18.04.06;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.26.14.16.24;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.04.13.15.41.17;	author radvorak;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.10.13.41.36;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.07.15.45.28;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.03.18.32.30;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.24.20.23.26;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.17.12.02.06;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.15.18.59.31;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.08.16.06.19;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.14.14.20;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.08.13.05.28;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.08.12.28.12;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.08.00.17.46;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.29
log
@[174961] Code generation support for custom actions
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
import org.eclipse.emf.codegen.util.CodeGenUtil;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.BasicEList;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenApplication;
import org.eclipse.gmf.codegen.gmfgen.GenAuditRoot;
import org.eclipse.gmf.codegen.gmfgen.GenContextMenu;
import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
import org.eclipse.gmf.codegen.gmfgen.GenDiagramUpdater;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
import org.eclipse.gmf.codegen.gmfgen.GenEditorView;
import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer;
import org.eclipse.gmf.codegen.gmfgen.GenMetricContainer;
import org.eclipse.gmf.codegen.gmfgen.GenNavigator;
import org.eclipse.gmf.codegen.gmfgen.GenParsers;
import org.eclipse.gmf.codegen.gmfgen.GenPlugin;
import org.eclipse.gmf.codegen.gmfgen.GenPropertySheet;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Editor Generator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getAudits <em>Audits</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getMetrics <em>Metrics</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getDiagram <em>Diagram</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getPlugin <em>Plugin</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getEditor <em>Editor</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getNavigator <em>Navigator</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getDiagramUpdater <em>Diagram Updater</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getPropertySheet <em>Property Sheet</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getApplication <em>Application</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getDomainGenModel <em>Domain Gen Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getPackageNamePrefix <em>Package Name Prefix</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getModelID <em>Model ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#isSameFileForDiagramAndModel <em>Same File For Diagram And Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getDiagramFileExtension <em>Diagram File Extension</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getDomainFileExtension <em>Domain File Extension</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#isDynamicTemplates <em>Dynamic Templates</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getTemplateDirectory <em>Template Directory</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getCopyrightText <em>Copyright Text</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getExpressionProviders <em>Expression Providers</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getModelAccess <em>Model Access</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getLabelParsers <em>Label Parsers</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorGeneratorImpl#getContextMenus <em>Context Menus</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
	/**
	 * The cached value of the '{@@link #getAudits() <em>Audits</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAudits()
	 * @@generated
	 * @@ordered
	 */
	protected GenAuditRoot audits;

	/**
	 * The cached value of the '{@@link #getMetrics() <em>Metrics</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetrics()
	 * @@generated
	 * @@ordered
	 */
	protected GenMetricContainer metrics;

	/**
	 * The cached value of the '{@@link #getDiagram() <em>Diagram</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagram()
	 * @@generated
	 * @@ordered
	 */
	protected GenDiagram diagram;

	/**
	 * The cached value of the '{@@link #getPlugin() <em>Plugin</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPlugin()
	 * @@generated
	 * @@ordered
	 */
	protected GenPlugin plugin;

	/**
	 * The cached value of the '{@@link #getEditor() <em>Editor</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditor()
	 * @@generated
	 * @@ordered
	 */
	protected GenEditorView editor;

	/**
	 * The cached value of the '{@@link #getNavigator() <em>Navigator</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNavigator()
	 * @@generated
	 * @@ordered
	 */
	protected GenNavigator navigator;

	/**
	 * The cached value of the '{@@link #getDiagramUpdater() <em>Diagram Updater</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramUpdater()
	 * @@generated
	 * @@ordered
	 */
	protected GenDiagramUpdater diagramUpdater;

	/**
	 * The cached value of the '{@@link #getPropertySheet() <em>Property Sheet</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPropertySheet()
	 * @@generated
	 * @@ordered
	 */
	protected GenPropertySheet propertySheet;

	/**
	 * The cached value of the '{@@link #getApplication() <em>Application</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getApplication()
	 * @@generated
	 * @@ordered
	 */
	protected GenApplication application;

	/**
	 * The cached value of the '{@@link #getDomainGenModel() <em>Domain Gen Model</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainGenModel()
	 * @@generated
	 * @@ordered
	 */
	protected GenModel domainGenModel;

	/**
	 * The default value of the '{@@link #getPackageNamePrefix() <em>Package Name Prefix</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageNamePrefix()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PACKAGE_NAME_PREFIX_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPackageNamePrefix() <em>Package Name Prefix</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageNamePrefix()
	 * @@generated
	 * @@ordered
	 */
	protected String packageNamePrefix = PACKAGE_NAME_PREFIX_EDEFAULT;

	/**
	 * The default value of the '{@@link #getModelID() <em>Model ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String MODEL_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getModelID() <em>Model ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelID()
	 * @@generated
	 * @@ordered
	 */
	protected String modelID = MODEL_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSameFileForDiagramAndModel()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSameFileForDiagramAndModel()
	 * @@generated
	 * @@ordered
	 */
	protected boolean sameFileForDiagramAndModel = SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DIAGRAM_FILE_EXTENSION_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected String diagramFileExtension = DIAGRAM_FILE_EXTENSION_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainFileExtension() <em>Domain File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_FILE_EXTENSION_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainFileExtension() <em>Domain File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected String domainFileExtension = DOMAIN_FILE_EXTENSION_EDEFAULT;

	/**
	 * The default value of the '{@@link #isDynamicTemplates() <em>Dynamic Templates</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isDynamicTemplates()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean DYNAMIC_TEMPLATES_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isDynamicTemplates() <em>Dynamic Templates</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isDynamicTemplates()
	 * @@generated
	 * @@ordered
	 */
	protected boolean dynamicTemplates = DYNAMIC_TEMPLATES_EDEFAULT;

	/**
	 * The default value of the '{@@link #getTemplateDirectory() <em>Template Directory</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTemplateDirectory()
	 * @@generated
	 * @@ordered
	 */
	protected static final String TEMPLATE_DIRECTORY_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getTemplateDirectory() <em>Template Directory</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTemplateDirectory()
	 * @@generated
	 * @@ordered
	 */
	protected String templateDirectory = TEMPLATE_DIRECTORY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCopyrightText() <em>Copyright Text</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCopyrightText()
	 * @@generated
	 * @@ordered
	 */
	protected static final String COPYRIGHT_TEXT_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCopyrightText() <em>Copyright Text</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCopyrightText()
	 * @@generated
	 * @@ordered
	 */
	protected String copyrightText = COPYRIGHT_TEXT_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getExpressionProviders() <em>Expression Providers</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getExpressionProviders()
	 * @@generated
	 * @@ordered
	 */
	protected GenExpressionProviderContainer expressionProviders;

	/**
	 * The cached value of the '{@@link #getModelAccess() <em>Model Access</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelAccess()
	 * @@generated
	 * @@ordered
	 */
	protected DynamicModelAccess modelAccess;

	/**
	 * The cached value of the '{@@link #getLabelParsers() <em>Label Parsers</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelParsers()
	 * @@generated
	 * @@ordered
	 */
	protected GenParsers labelParsers;

	/**
	 * The cached value of the '{@@link #getContextMenus() <em>Context Menus</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContextMenus()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenContextMenu> contextMenus;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenEditorGeneratorImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenEditorGenerator();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenAuditRoot getAudits() {
		return audits;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetAudits(GenAuditRoot newAudits, NotificationChain msgs) {
		GenAuditRoot oldAudits = audits;
		audits = newAudits;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS, oldAudits, newAudits);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setAudits(GenAuditRoot newAudits) {
		if (newAudits != audits) {
			NotificationChain msgs = null;
			if (audits != null)
				msgs = ((InternalEObject)audits).eInverseRemove(this, GMFGenPackage.GEN_AUDIT_ROOT__EDITOR_GEN, GenAuditRoot.class, msgs);
			if (newAudits != null)
				msgs = ((InternalEObject)newAudits).eInverseAdd(this, GMFGenPackage.GEN_AUDIT_ROOT__EDITOR_GEN, GenAuditRoot.class, msgs);
			msgs = basicSetAudits(newAudits, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS, newAudits, newAudits));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenMetricContainer getMetrics() {
		return metrics;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetMetrics(GenMetricContainer newMetrics, NotificationChain msgs) {
		GenMetricContainer oldMetrics = metrics;
		metrics = newMetrics;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS, oldMetrics, newMetrics);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMetrics(GenMetricContainer newMetrics) {
		if (newMetrics != metrics) {
			NotificationChain msgs = null;
			if (metrics != null)
				msgs = ((InternalEObject)metrics).eInverseRemove(this, GMFGenPackage.GEN_METRIC_CONTAINER__EDITOR_GEN, GenMetricContainer.class, msgs);
			if (newMetrics != null)
				msgs = ((InternalEObject)newMetrics).eInverseAdd(this, GMFGenPackage.GEN_METRIC_CONTAINER__EDITOR_GEN, GenMetricContainer.class, msgs);
			msgs = basicSetMetrics(newMetrics, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS, newMetrics, newMetrics));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenDiagram getDiagram() {
		return diagram;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDiagram(GenDiagram newDiagram, NotificationChain msgs) {
		GenDiagram oldDiagram = diagram;
		diagram = newDiagram;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM, oldDiagram, newDiagram);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagram(GenDiagram newDiagram) {
		if (newDiagram != diagram) {
			NotificationChain msgs = null;
			if (diagram != null)
				msgs = ((InternalEObject)diagram).eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, GenDiagram.class, msgs);
			if (newDiagram != null)
				msgs = ((InternalEObject)newDiagram).eInverseAdd(this, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, GenDiagram.class, msgs);
			msgs = basicSetDiagram(newDiagram, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM, newDiagram, newDiagram));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenPlugin getPlugin() {
		return plugin;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetPlugin(GenPlugin newPlugin, NotificationChain msgs) {
		GenPlugin oldPlugin = plugin;
		plugin = newPlugin;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN, oldPlugin, newPlugin);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPlugin(GenPlugin newPlugin) {
		if (newPlugin != plugin) {
			NotificationChain msgs = null;
			if (plugin != null)
				msgs = ((InternalEObject)plugin).eInverseRemove(this, GMFGenPackage.GEN_PLUGIN__EDITOR_GEN, GenPlugin.class, msgs);
			if (newPlugin != null)
				msgs = ((InternalEObject)newPlugin).eInverseAdd(this, GMFGenPackage.GEN_PLUGIN__EDITOR_GEN, GenPlugin.class, msgs);
			msgs = basicSetPlugin(newPlugin, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN, newPlugin, newPlugin));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenEditorView getEditor() {
		return editor;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetEditor(GenEditorView newEditor, NotificationChain msgs) {
		GenEditorView oldEditor = editor;
		editor = newEditor;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR, oldEditor, newEditor);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditor(GenEditorView newEditor) {
		if (newEditor != editor) {
			NotificationChain msgs = null;
			if (editor != null)
				msgs = ((InternalEObject)editor).eInverseRemove(this, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, GenEditorView.class, msgs);
			if (newEditor != null)
				msgs = ((InternalEObject)newEditor).eInverseAdd(this, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, GenEditorView.class, msgs);
			msgs = basicSetEditor(newEditor, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR, newEditor, newEditor));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenNavigator getNavigator() {
		return navigator;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetNavigator(GenNavigator newNavigator, NotificationChain msgs) {
		GenNavigator oldNavigator = navigator;
		navigator = newNavigator;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR, oldNavigator, newNavigator);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNavigator(GenNavigator newNavigator) {
		if (newNavigator != navigator) {
			NotificationChain msgs = null;
			if (navigator != null)
				msgs = ((InternalEObject)navigator).eInverseRemove(this, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, GenNavigator.class, msgs);
			if (newNavigator != null)
				msgs = ((InternalEObject)newNavigator).eInverseAdd(this, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, GenNavigator.class, msgs);
			msgs = basicSetNavigator(newNavigator, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR, newNavigator, newNavigator));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenDiagramUpdater getDiagramUpdater() {
		return diagramUpdater;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDiagramUpdater(GenDiagramUpdater newDiagramUpdater, NotificationChain msgs) {
		GenDiagramUpdater oldDiagramUpdater = diagramUpdater;
		diagramUpdater = newDiagramUpdater;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER, oldDiagramUpdater, newDiagramUpdater);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramUpdater(GenDiagramUpdater newDiagramUpdater) {
		if (newDiagramUpdater != diagramUpdater) {
			NotificationChain msgs = null;
			if (diagramUpdater != null)
				msgs = ((InternalEObject)diagramUpdater).eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM_UPDATER__EDITOR_GEN, GenDiagramUpdater.class, msgs);
			if (newDiagramUpdater != null)
				msgs = ((InternalEObject)newDiagramUpdater).eInverseAdd(this, GMFGenPackage.GEN_DIAGRAM_UPDATER__EDITOR_GEN, GenDiagramUpdater.class, msgs);
			msgs = basicSetDiagramUpdater(newDiagramUpdater, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER, newDiagramUpdater, newDiagramUpdater));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenPropertySheet getPropertySheet() {
		return propertySheet;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetPropertySheet(GenPropertySheet newPropertySheet, NotificationChain msgs) {
		GenPropertySheet oldPropertySheet = propertySheet;
		propertySheet = newPropertySheet;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET, oldPropertySheet, newPropertySheet);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPropertySheet(GenPropertySheet newPropertySheet) {
		if (newPropertySheet != propertySheet) {
			NotificationChain msgs = null;
			if (propertySheet != null)
				msgs = ((InternalEObject)propertySheet).eInverseRemove(this, GMFGenPackage.GEN_PROPERTY_SHEET__EDITOR_GEN, GenPropertySheet.class, msgs);
			if (newPropertySheet != null)
				msgs = ((InternalEObject)newPropertySheet).eInverseAdd(this, GMFGenPackage.GEN_PROPERTY_SHEET__EDITOR_GEN, GenPropertySheet.class, msgs);
			msgs = basicSetPropertySheet(newPropertySheet, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET, newPropertySheet, newPropertySheet));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenApplication getApplication() {
		return application;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetApplication(GenApplication newApplication, NotificationChain msgs) {
		GenApplication oldApplication = application;
		application = newApplication;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION, oldApplication, newApplication);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setApplication(GenApplication newApplication) {
		if (newApplication != application) {
			NotificationChain msgs = null;
			if (application != null)
				msgs = ((InternalEObject)application).eInverseRemove(this, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, GenApplication.class, msgs);
			if (newApplication != null)
				msgs = ((InternalEObject)newApplication).eInverseAdd(this, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, GenApplication.class, msgs);
			msgs = basicSetApplication(newApplication, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION, newApplication, newApplication));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenModel getDomainGenModel() {
		if (domainGenModel != null && domainGenModel.eIsProxy()) {
			InternalEObject oldDomainGenModel = (InternalEObject)domainGenModel;
			domainGenModel = (GenModel)eResolveProxy(oldDomainGenModel);
			if (domainGenModel != oldDomainGenModel) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_GEN_MODEL, oldDomainGenModel, domainGenModel));
			}
		}
		return domainGenModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenModel basicGetDomainGenModel() {
		return domainGenModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainGenModel(GenModel newDomainGenModel) {
		GenModel oldDomainGenModel = domainGenModel;
		domainGenModel = newDomainGenModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_GEN_MODEL, oldDomainGenModel, domainGenModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPackageNamePrefixGen() {
		return packageNamePrefix;
	}

	public String getPackageNamePrefix() {
		// @@see org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl#getQualifiedPackageName()
		String value = getPackageNamePrefixGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			if (getPrimaryGenPackage() == null) {
				return "";
			}
			return getPrimaryGenPackage().getQualifiedPackageName() + ".diagram";
		}
		return value;
	}

	/**
	 * Assume first genPackage in the domainGenModel to be primary
	 */
	private GenPackage getPrimaryGenPackage() {
		if (getDomainGenModel() == null || getDomainGenModel().getGenPackages().isEmpty()) {
			return null;
		}
		return getDomainGenModel().getGenPackages().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPackageNamePrefix(String newPackageNamePrefix) {
		String oldPackageNamePrefix = packageNamePrefix;
		packageNamePrefix = newPackageNamePrefix;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__PACKAGE_NAME_PREFIX, oldPackageNamePrefix, packageNamePrefix));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getModelIDGen() {
		return modelID;
	}

	/**
	 * @@generated NOT
	 */
	public String getModelID() {
		String value = getModelIDGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDomainGenModel() == null ? "Design" : getDomainGenModel().getModelName();
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setModelID(String newModelID) {
		String oldModelID = modelID;
		modelID = newModelID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ID, oldModelID, modelID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isSameFileForDiagramAndModel() {
		return sameFileForDiagramAndModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSameFileForDiagramAndModel(boolean newSameFileForDiagramAndModel) {
		boolean oldSameFileForDiagramAndModel = sameFileForDiagramAndModel;
		sameFileForDiagramAndModel = newSameFileForDiagramAndModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__SAME_FILE_FOR_DIAGRAM_AND_MODEL, oldSameFileForDiagramAndModel, sameFileForDiagramAndModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDiagramFileExtensionGen() {
		return diagramFileExtension;
	}

	public String getDiagramFileExtension() {
		String value = getDiagramFileExtensionGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			String prefix = getDomainFileExtension();
			if (GenCommonBaseImpl.isEmpty(prefix)) {
				prefix = "design";
			}
			return prefix + "_diagram";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramFileExtension(String newDiagramFileExtension) {
		String oldDiagramFileExtension = diagramFileExtension;
		diagramFileExtension = newDiagramFileExtension;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_FILE_EXTENSION, oldDiagramFileExtension, diagramFileExtension));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainFileExtensionGen() {
		return domainFileExtension;
	}

	public String getDomainFileExtension() {
		String value = getDomainFileExtensionGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			if (getPrimaryGenPackage() == null) {
				return "";
			}
			return getPrimaryGenPackage().getPrefix().toLowerCase();
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainFileExtension(String newDomainFileExtension) {
		String oldDomainFileExtension = domainFileExtension;
		domainFileExtension = newDomainFileExtension;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_FILE_EXTENSION, oldDomainFileExtension, domainFileExtension));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isDynamicTemplates() {
		return dynamicTemplates;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDynamicTemplates(boolean newDynamicTemplates) {
		boolean oldDynamicTemplates = dynamicTemplates;
		dynamicTemplates = newDynamicTemplates;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__DYNAMIC_TEMPLATES, oldDynamicTemplates, dynamicTemplates));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getTemplateDirectory() {
		return templateDirectory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTemplateDirectory(String newTemplateDirectory) {
		String oldTemplateDirectory = templateDirectory;
		templateDirectory = newTemplateDirectory;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__TEMPLATE_DIRECTORY, oldTemplateDirectory, templateDirectory));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCopyrightText() {
		return copyrightText;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCopyrightText(String newCopyrightText) {
		String oldCopyrightText = copyrightText;
		copyrightText = newCopyrightText;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__COPYRIGHT_TEXT, oldCopyrightText, copyrightText));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenExpressionProviderContainer getExpressionProviders() {
		return expressionProviders;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetExpressionProviders(GenExpressionProviderContainer newExpressionProviders, NotificationChain msgs) {
		GenExpressionProviderContainer oldExpressionProviders = expressionProviders;
		expressionProviders = newExpressionProviders;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS, oldExpressionProviders, newExpressionProviders);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setExpressionProviders(GenExpressionProviderContainer newExpressionProviders) {
		if (newExpressionProviders != expressionProviders) {
			NotificationChain msgs = null;
			if (expressionProviders != null)
				msgs = ((InternalEObject)expressionProviders).eInverseRemove(this, GMFGenPackage.GEN_EXPRESSION_PROVIDER_CONTAINER__EDITOR_GEN, GenExpressionProviderContainer.class, msgs);
			if (newExpressionProviders != null)
				msgs = ((InternalEObject)newExpressionProviders).eInverseAdd(this, GMFGenPackage.GEN_EXPRESSION_PROVIDER_CONTAINER__EDITOR_GEN, GenExpressionProviderContainer.class, msgs);
			msgs = basicSetExpressionProviders(newExpressionProviders, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS, newExpressionProviders, newExpressionProviders));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public DynamicModelAccess getModelAccess() {
		return modelAccess;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetModelAccess(DynamicModelAccess newModelAccess, NotificationChain msgs) {
		DynamicModelAccess oldModelAccess = modelAccess;
		modelAccess = newModelAccess;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS, oldModelAccess, newModelAccess);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setModelAccess(DynamicModelAccess newModelAccess) {
		if (newModelAccess != modelAccess) {
			NotificationChain msgs = null;
			if (modelAccess != null)
				msgs = ((InternalEObject)modelAccess).eInverseRemove(this, GMFGenPackage.DYNAMIC_MODEL_ACCESS__EDITOR_GEN, DynamicModelAccess.class, msgs);
			if (newModelAccess != null)
				msgs = ((InternalEObject)newModelAccess).eInverseAdd(this, GMFGenPackage.DYNAMIC_MODEL_ACCESS__EDITOR_GEN, DynamicModelAccess.class, msgs);
			msgs = basicSetModelAccess(newModelAccess, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS, newModelAccess, newModelAccess));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenParsers getLabelParsers() {
		return labelParsers;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetLabelParsers(GenParsers newLabelParsers, NotificationChain msgs) {
		GenParsers oldLabelParsers = labelParsers;
		labelParsers = newLabelParsers;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS, oldLabelParsers, newLabelParsers);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLabelParsers(GenParsers newLabelParsers) {
		if (newLabelParsers != labelParsers) {
			NotificationChain msgs = null;
			if (labelParsers != null)
				msgs = ((InternalEObject)labelParsers).eInverseRemove(this, GMFGenPackage.GEN_PARSERS__EDITOR_GEN, GenParsers.class, msgs);
			if (newLabelParsers != null)
				msgs = ((InternalEObject)newLabelParsers).eInverseAdd(this, GMFGenPackage.GEN_PARSERS__EDITOR_GEN, GenParsers.class, msgs);
			msgs = basicSetLabelParsers(newLabelParsers, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS, newLabelParsers, newLabelParsers));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenContextMenu> getContextMenus() {
		if (contextMenus == null) {
			contextMenus = new EObjectContainmentEList<GenContextMenu>(GenContextMenu.class, this, GMFGenPackage.GEN_EDITOR_GENERATOR__CONTEXT_MENUS);
		}
		return contextMenus;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenPackage> getAllDomainGenPackages(boolean withUsed) {
		ArrayList<GenPackage> result = new ArrayList<GenPackage>();
		GenModel genModel = getDomainGenModel();
		if (genModel != null) {
			List<GenPackage> genPackages = genModel.getAllGenPackagesWithClassifiers();
			for (int i = 0; i < genPackages.size(); i++) {
				GenPackage genPackage = genPackages.get(i);
				if (genPackage.getGenModel().hasEditSupport()) {
					result.add(genPackage);
				}
			}
			if (withUsed) {
				genPackages = genModel.getAllUsedGenPackagesWithClassifiers();
				for (int i = 0; i < genPackages.size(); i++) {
					GenPackage genPackage = genPackages.get(i);
					if (genPackage.getGenModel().hasEditSupport()) {
						result.add(genPackage);
					}
				}
			}
		}
	    return new BasicEList.UnmodifiableEList<GenPackage>(result.size(), result.toArray());
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */	
	public boolean hasAudits() {
		return getAudits() != null && !getAudits().getRules().isEmpty();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS:
				if (audits != null)
					msgs = ((InternalEObject)audits).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS, null, msgs);
				return basicSetAudits((GenAuditRoot)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS:
				if (metrics != null)
					msgs = ((InternalEObject)metrics).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS, null, msgs);
				return basicSetMetrics((GenMetricContainer)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM:
				if (diagram != null)
					msgs = ((InternalEObject)diagram).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM, null, msgs);
				return basicSetDiagram((GenDiagram)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN:
				if (plugin != null)
					msgs = ((InternalEObject)plugin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN, null, msgs);
				return basicSetPlugin((GenPlugin)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR:
				if (editor != null)
					msgs = ((InternalEObject)editor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR, null, msgs);
				return basicSetEditor((GenEditorView)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR:
				if (navigator != null)
					msgs = ((InternalEObject)navigator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR, null, msgs);
				return basicSetNavigator((GenNavigator)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER:
				if (diagramUpdater != null)
					msgs = ((InternalEObject)diagramUpdater).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER, null, msgs);
				return basicSetDiagramUpdater((GenDiagramUpdater)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET:
				if (propertySheet != null)
					msgs = ((InternalEObject)propertySheet).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET, null, msgs);
				return basicSetPropertySheet((GenPropertySheet)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION:
				if (application != null)
					msgs = ((InternalEObject)application).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION, null, msgs);
				return basicSetApplication((GenApplication)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS:
				if (expressionProviders != null)
					msgs = ((InternalEObject)expressionProviders).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS, null, msgs);
				return basicSetExpressionProviders((GenExpressionProviderContainer)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS:
				if (modelAccess != null)
					msgs = ((InternalEObject)modelAccess).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS, null, msgs);
				return basicSetModelAccess((DynamicModelAccess)otherEnd, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS:
				if (labelParsers != null)
					msgs = ((InternalEObject)labelParsers).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS, null, msgs);
				return basicSetLabelParsers((GenParsers)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS:
				return basicSetAudits(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS:
				return basicSetMetrics(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM:
				return basicSetDiagram(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN:
				return basicSetPlugin(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR:
				return basicSetEditor(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR:
				return basicSetNavigator(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER:
				return basicSetDiagramUpdater(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET:
				return basicSetPropertySheet(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION:
				return basicSetApplication(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS:
				return basicSetExpressionProviders(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS:
				return basicSetModelAccess(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS:
				return basicSetLabelParsers(null, msgs);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__CONTEXT_MENUS:
				return ((InternalEList<?>)getContextMenus()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS:
				return getAudits();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS:
				return getMetrics();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM:
				return getDiagram();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN:
				return getPlugin();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR:
				return getEditor();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR:
				return getNavigator();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER:
				return getDiagramUpdater();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET:
				return getPropertySheet();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION:
				return getApplication();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_GEN_MODEL:
				if (resolve) return getDomainGenModel();
				return basicGetDomainGenModel();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PACKAGE_NAME_PREFIX:
				return getPackageNamePrefix();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ID:
				return getModelID();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return isSameFileForDiagramAndModel() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_FILE_EXTENSION:
				return getDiagramFileExtension();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_FILE_EXTENSION:
				return getDomainFileExtension();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DYNAMIC_TEMPLATES:
				return isDynamicTemplates() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__TEMPLATE_DIRECTORY:
				return getTemplateDirectory();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__COPYRIGHT_TEXT:
				return getCopyrightText();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS:
				return getExpressionProviders();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS:
				return getModelAccess();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS:
				return getLabelParsers();
			case GMFGenPackage.GEN_EDITOR_GENERATOR__CONTEXT_MENUS:
				return getContextMenus();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS:
				setAudits((GenAuditRoot)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS:
				setMetrics((GenMetricContainer)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM:
				setDiagram((GenDiagram)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN:
				setPlugin((GenPlugin)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR:
				setEditor((GenEditorView)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR:
				setNavigator((GenNavigator)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER:
				setDiagramUpdater((GenDiagramUpdater)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET:
				setPropertySheet((GenPropertySheet)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION:
				setApplication((GenApplication)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_GEN_MODEL:
				setDomainGenModel((GenModel)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PACKAGE_NAME_PREFIX:
				setPackageNamePrefix((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ID:
				setModelID((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_FILE_EXTENSION:
				setDiagramFileExtension((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_FILE_EXTENSION:
				setDomainFileExtension((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DYNAMIC_TEMPLATES:
				setDynamicTemplates(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__TEMPLATE_DIRECTORY:
				setTemplateDirectory((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__COPYRIGHT_TEXT:
				setCopyrightText((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS:
				setExpressionProviders((GenExpressionProviderContainer)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS:
				setModelAccess((DynamicModelAccess)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS:
				setLabelParsers((GenParsers)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__CONTEXT_MENUS:
				getContextMenus().clear();
				getContextMenus().addAll((Collection<? extends GenContextMenu>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS:
				setAudits((GenAuditRoot)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS:
				setMetrics((GenMetricContainer)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM:
				setDiagram((GenDiagram)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN:
				setPlugin((GenPlugin)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR:
				setEditor((GenEditorView)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR:
				setNavigator((GenNavigator)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER:
				setDiagramUpdater((GenDiagramUpdater)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET:
				setPropertySheet((GenPropertySheet)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION:
				setApplication((GenApplication)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_GEN_MODEL:
				setDomainGenModel((GenModel)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PACKAGE_NAME_PREFIX:
				setPackageNamePrefix(PACKAGE_NAME_PREFIX_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ID:
				setModelID(MODEL_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_FILE_EXTENSION:
				setDiagramFileExtension(DIAGRAM_FILE_EXTENSION_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_FILE_EXTENSION:
				setDomainFileExtension(DOMAIN_FILE_EXTENSION_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DYNAMIC_TEMPLATES:
				setDynamicTemplates(DYNAMIC_TEMPLATES_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__TEMPLATE_DIRECTORY:
				setTemplateDirectory(TEMPLATE_DIRECTORY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__COPYRIGHT_TEXT:
				setCopyrightText(COPYRIGHT_TEXT_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS:
				setExpressionProviders((GenExpressionProviderContainer)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS:
				setModelAccess((DynamicModelAccess)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS:
				setLabelParsers((GenParsers)null);
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__CONTEXT_MENUS:
				getContextMenus().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS:
				return audits != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS:
				return metrics != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM:
				return diagram != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN:
				return plugin != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR:
				return editor != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR:
				return navigator != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER:
				return diagramUpdater != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET:
				return propertySheet != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION:
				return application != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_GEN_MODEL:
				return domainGenModel != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PACKAGE_NAME_PREFIX:
				return PACKAGE_NAME_PREFIX_EDEFAULT == null ? packageNamePrefix != null : !PACKAGE_NAME_PREFIX_EDEFAULT.equals(packageNamePrefix);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ID:
				return MODEL_ID_EDEFAULT == null ? modelID != null : !MODEL_ID_EDEFAULT.equals(modelID);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return sameFileForDiagramAndModel != SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_FILE_EXTENSION:
				return DIAGRAM_FILE_EXTENSION_EDEFAULT == null ? diagramFileExtension != null : !DIAGRAM_FILE_EXTENSION_EDEFAULT.equals(diagramFileExtension);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_FILE_EXTENSION:
				return DOMAIN_FILE_EXTENSION_EDEFAULT == null ? domainFileExtension != null : !DOMAIN_FILE_EXTENSION_EDEFAULT.equals(domainFileExtension);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DYNAMIC_TEMPLATES:
				return dynamicTemplates != DYNAMIC_TEMPLATES_EDEFAULT;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__TEMPLATE_DIRECTORY:
				return TEMPLATE_DIRECTORY_EDEFAULT == null ? templateDirectory != null : !TEMPLATE_DIRECTORY_EDEFAULT.equals(templateDirectory);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__COPYRIGHT_TEXT:
				return COPYRIGHT_TEXT_EDEFAULT == null ? copyrightText != null : !COPYRIGHT_TEXT_EDEFAULT.equals(copyrightText);
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS:
				return expressionProviders != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS:
				return modelAccess != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS:
				return labelParsers != null;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__CONTEXT_MENUS:
				return contextMenus != null && !contextMenus.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (packageNamePrefix: ");
		result.append(packageNamePrefix);
		result.append(", modelID: ");
		result.append(modelID);
		result.append(", sameFileForDiagramAndModel: ");
		result.append(sameFileForDiagramAndModel);
		result.append(", diagramFileExtension: ");
		result.append(diagramFileExtension);
		result.append(", domainFileExtension: ");
		result.append(domainFileExtension);
		result.append(", dynamicTemplates: ");
		result.append(dynamicTemplates);
		result.append(", templateDirectory: ");
		result.append(templateDirectory);
		result.append(", copyrightText: ");
		result.append(copyrightText);
		result.append(')');
		return result.toString();
	}

	String getDomainModelCapName() {
		String name = "Design";
		if (getDomainGenModel() != null) {
			name = CodeGenUtil.validJavaIdentifier(getDomainGenModel().getModelName());
		}
		if (name.length() < 2) {
			return name.toUpperCase();
		}
		return Character.toUpperCase(name.charAt(0)) + name.substring(1);
	}
} //GenEditorGeneratorImpl
@


1.28
log
@[244419] Support for custom parser - finalize parsers/labelmodelfacet relationship
@
text
@d10 1
d24 2
d30 1
d70 1
d368 10
d1177 12
d1316 2
d1373 2
d1384 1
d1451 4
d1530 3
d1587 2
@


1.27
log
@[235113] alternative parser access, step 1: introduce separate entity into genmodel to keep track of attributes related to parsing
@
text
@a9 1
import java.util.Iterator;
a19 1
import org.eclipse.emf.ecore.EObject;
a23 1
import org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet;
a35 1

a36 1
import org.eclipse.gmf.codegen.gmfgen.LabelTextAccessMethod;
a1191 18
	 */
	public boolean requiresParser(LabelTextAccessMethod method) {
		for (Iterator<EObject> it = getDiagram().eAllContents(); it.hasNext(); ) {
			Object next = it.next();
			if (next instanceof FeatureLabelModelFacet) {
				FeatureLabelModelFacet facet = (FeatureLabelModelFacet) next;
				if (facet.getViewMethod() == method || facet.getEditMethod() == method) {
					return true;
				}
			}
		}
		return false;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
@


1.26
log
@[150177] phase II, generated facility to perform metamodel operations (like instanceof or metaclass accessors) with dynamic models, new gmfgen options to parameterize codegen.
@
text
@d37 1
d70 1
d358 10
d1124 43
d1272 4
d1310 2
d1365 2
d1439 3
d1514 3
d1569 2
@


1.25
log
@GenDiagramUpdater created in .gmfgen model
@
text
@d25 1
d68 1
d346 10
d1069 43
d1213 4
d1249 2
d1302 2
d1373 3
d1445 3
d1498 2
@


1.24
log
@use java 5 if printf parser is used
@
text
@d30 1
d54 1
d134 10
d625 43
d1142 4
d1182 2
d1214 2
d1271 3
d1340 3
d1403 2
@


1.23
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d10 1
d21 1
d25 1
d38 1
d1032 18
@


1.22
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d75 1
a75 1
	protected GenAuditRoot audits = null;
d85 1
a85 1
	protected GenMetricContainer metrics = null;
d95 1
a95 1
	protected GenDiagram diagram = null;
d105 1
a105 1
	protected GenPlugin plugin = null;
d115 1
a115 1
	protected GenEditorView editor = null;
d125 1
a125 1
	protected GenNavigator navigator = null;
d135 1
a135 1
	protected GenPropertySheet propertySheet = null;
d145 1
a145 1
	protected GenApplication application = null;
d155 1
a155 1
	protected GenModel domainGenModel = null;
d325 1
a325 1
	protected GenExpressionProviderContainer expressionProviders = null;
@


1.21
log
@get rid of GenRuleContainerBase
@
text
@d341 1
d756 1
a756 1
		return (GenPackage) getDomainGenModel().getGenPackages().get(0);
d1000 2
a1001 2
	public EList getAllDomainGenPackages(boolean withUsed) {
		List<GenPackage> result = new ArrayList<GenPackage>();
d1004 1
a1004 1
			List genPackages = genModel.getAllGenPackagesWithClassifiers();
d1006 1
a1006 1
				GenPackage genPackage = (GenPackage) genPackages.get(i);
d1014 1
a1014 1
					GenPackage genPackage = (GenPackage) genPackages.get(i);
d1021 1
a1021 1
	    return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
d1038 1
d1086 1
d1116 1
d1165 1
d1231 1
d1297 1
d1345 1
@


1.20
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d421 1
a421 1
				msgs = ((InternalEObject)metrics).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS, null, msgs);
d423 1
a423 1
				msgs = ((InternalEObject)newMetrics).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS, null, msgs);
d1043 4
@


1.19
log
@#114200 Provide an option to generate RCP application
@
text
@d9 1
d25 1
a25 1
import org.eclipse.gmf.codegen.gmfgen.GenAuditContainer;
d75 1
a75 1
	protected GenAuditContainer audits = null;
d350 1
a350 1
	public GenAuditContainer getAudits() {
d359 2
a360 2
	public NotificationChain basicSetAudits(GenAuditContainer newAudits, NotificationChain msgs) {
		GenAuditContainer oldAudits = audits;
d374 1
a374 1
	public void setAudits(GenAuditContainer newAudits) {
d378 1
a378 1
				msgs = ((InternalEObject)audits).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS, null, msgs);
d380 1
a380 1
				msgs = ((InternalEObject)newAudits).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS, null, msgs);
d1000 1
a1000 1
		EList result = new BasicEList();
d1029 1
a1029 1
		return getAudits() != null && !getAudits().getAllAuditRules().isEmpty();
d1039 4
d1160 1
a1160 1
				setAudits((GenAuditContainer)newValue);
d1225 1
a1225 1
				setAudits((GenAuditContainer)null);
@


1.18
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d23 1
d49 1
d137 10
d650 43
d1058 4
d1091 2
d1120 2
d1175 3
d1240 3
d1298 2
@


1.17
log
@Model navigator, initial version.
@
text
@d32 2
d47 1
d125 10
d595 43
d999 4
d1030 2
d1057 2
d1109 3
d1171 3
d1227 2
@


1.16
log
@GenModel unit-tests added.
@
text
@d29 1
d44 1
d112 10
d539 43
d939 4
d968 2
d993 2
d1042 3
d1101 3
d1155 2
@


1.15
log
@#144485 Do not generate "o.e.e.v.constraintBindings" extension in plugin.xml if !genDiagram.isValidationEnabled
@
text
@d572 1
a572 1
		if (value == null || value.trim().length() == 0) {
d617 1
a617 1
		if (value == null || value.trim().length() == 0) {
d667 1
a667 1
		if (value == null || value.length() == 0) {
d669 1
a669 1
			if (prefix == null || prefix.trim().length() == 0) {
d700 1
a700 1
		if (value == null || value.trim().length() == 0) {
@


1.14
log
@[mgolubev] #144203 Reconcile custom model id
@
text
@d855 9
@


1.13
log
@#114175 allow to create diagram editor without domain model
@
text
@d612 3
d618 1
a618 1
			return getDomainGenModel() == null ? "Design" : getDomainGenModel().getModelName();
@


1.12
log
@[#134511] common access to expressions of different languages
@
text
@d615 1
a615 1
			return getDomainGenModel().getModelName();
d665 5
a669 1
			return getDomainFileExtension() + "_diagram";
d1128 4
a1131 1
		String name = CodeGenUtil.validJavaIdentifier(getDomainGenModel().getModelName());
@


1.11
log
@typo, incorrect xxGen method was invoked
@
text
@d27 1
d52 1
d280 10
d780 43
d868 4
d893 2
d935 2
d990 3
d1046 3
d1088 2
@


1.10
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d680 1
a680 1
		String value = getDiagramFileExtensionGen();
@


1.9
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d50 1
d258 20
d747 21
d872 2
d924 3
d977 3
d1017 2
d1046 2
@


1.8
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@d27 1
d38 1
d67 10
d322 43
d784 2
d805 2
d844 3
d894 3
d943 2
@


1.7
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@a17 1

@


1.6
log
@#125175 Allow toolsmith to use different (sub)set of templates for editor code generation
@
text
@d9 2
d16 3
d672 29
@


1.5
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d42 2
d201 40
d627 42
d734 4
d779 6
d826 6
d863 4
d890 4
@


1.4
log
@make use of public packageNamePrefix
@
text
@d11 1
d22 1
d35 1
d79 10
d350 43
d595 4
d616 2
d635 2
d670 3
d711 3
d749 2
d790 7
@


1.3
log
@file extensions moved out from genDiagram. Distinct property captures extension of domain model file now
@
text
@d380 1
d386 1
a386 1
			return getPrimaryGenPackage().getBasePackage();
@


1.2
log
@constant used throughout templates to identify diagram (genModel.getModelName) was extracted as explicit attribute
packagePrefix added
@
text
@d36 3
d126 60
d382 1
a382 1
			if (getDomainGenModel() == null || getDomainGenModel().getGenPackages().isEmpty()) {
d385 1
a385 2
			// TODO primary genPackage?
			return ((GenPackage) getDomainGenModel().getGenPackages().get(0)).getBasePackage();
d391 10
d446 82
d579 6
d614 9
d652 9
d684 6
d707 6
@


1.1
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d10 1
d34 2
d83 40
d312 62
d421 4
d448 6
d477 6
d502 4
d510 17
@

