head	1.25;
access;
symbols
	v20081022-1925:1.25
	v20081015-1925:1.25
	v20081008-1925:1.25
	v20081001-1925:1.25
	v20080930-1130:1.25
	v20080926-1245:1.25
	v20080924-1925:1.25
	v20080917-1925:1.25
	v20080911-1728:1.25
	v20080910-1520:1.25
	v20080903-1520:1.25
	v20080827-1520:1.25
	v20080813-1520:1.25
	v20080806-1520:1.25
	v20080722-1827:1.25
	v20080718-1731:1.25
	v20080716-1600:1.25
	v20080716-1642:1.25
	R2_1_maintenance:1.25.0.2
	Root_R2_1_maintenance:1.25
	R2_1_0:1.25
	v20080610-1132:1.25
	v20080603-1553:1.25
	v20080528-1052:1.25
	v20080521:1.25
	v20080516-1543:1.25
	v20080516-1143:1.25
	v20080512-1200:1.25
	v20080508-2000:1.25
	v20080507-1326:1.25
	v20080503-1740:1.25
	v20080501-1739:1.25
	v20080425-1959:1.25
	v20080417-1610:1.25
	v20080411-0411:1.25
	v20080404-1111:1.25
	v20080322-0000:1.25
	v20080222-1200:1.25
	v20080215-1500:1.25
	v20080207-0207:1.24.2.1
	v20071222-1111:1.25
	v20071214-1111:1.25
	v20071130-1111:1.25
	v20071124-0000:1.24.2.1
	v20071112-0000:1.25
	v20071108-0000:1.25
	v20071003-0000:1.25
	v20070928-0000:1.24.2.1
	v20070921-0000:1.24.2.1
	v20070915-0000:1.24.2.1
	v20070903-0000:1.24
	v20070809-0000:1.24
	R2_0_maintenance:1.24.0.2
	R2_0:1.24
	R4_20:1.24
	v20070621-0000:1.24
	RC3_20:1.24
	v20070614-1400:1.24
	v20070608-1300:1.24
	v20070605-1400:1.24
	v20070601-1400:1.24
	v20070525-1500:1.24
	v20070520-1200:1.24
	v20070518-1300:1.24
	v20070504-1000:1.23
	v20070427-0600:1.23
	v20070420-1000:1.23
	v20070413-1300:1.23
	v20070405-1100:1.23
	v20070403-1500:1.23
	v20070330-1300:1.23
	v20060330-1300:1.23
	v20070322-1100:1.23
	v20060316-0600:1.23
	v20070307-0700:1.22
	v20070301-1200:1.22
	v20070228-2000:1.22
	v20070221-1500:1.22
	v20070208-1800:1.22
	v20070202-0200:1.18
	v20070103-0300:1.20
	M4_20:1.20
	v20061222-1800:1.20
	v20061218-1200:1.20
	v20061214-0000:1.20
	v20061120-1300:1.20
	M3_20:1.20
	v20061117-0800:1.20
	v20061027-1200:1.18
	v20061020-1000:1.18
	v20061013-1330:1.20
	v20060919-0800:1.18
	v20060907-1100:1.18
	M1_20:1.19
	v20060904-1500:1.19
	v20060824-1600:1.18
	v20060817-1500:1.18
	v20060728-0500:1.18
	v20060713-1700:1.18
	R1_0_maintenance:1.18.0.2
	R1_0:1.18
	v20060627-1200:1.18
	v20060626-1420:1.18
	v20060620-0400:1.18
	v20060616-1400:1.18
	v20060616-1200:1.18
	v20060609-1400:1.18
	v20060531-1730:1.16
	v20060530-1930:1.16
	v20060526-1200:1.16
	v20060519-1300:1.16
	v20060519-0800:1.16
	v20060512-1000:1.15
	I20060512-1000:1.15
	I20060505-1400:1.15
	I20060428-1300:1.15
	I20060424-0500:1.15
	I20060424-0300:1.15
	M6_10:1.15
	I20060407-1200:1.14
	I20060331-1000:1.14
	I20060324-0300:1.14
	I20060317-1300:1.13
	I20060317-1200:1.13
	I20060316-1300:1.13
	I20060309-1300:1.13
	M5_10:1.13
	S20060303-1600:1.13
	I20060227-1730:1.13
	I20060216-1945:1.13
	I20060210-1715:1.13
	I20060209-1815:1.13
	I20060203-0830:1.13
	I20060202-1415:1.13
	I20060129-1145:1.13
	I20060127-0900:1.13
	I20060120-1530:1.12
	I20060113-1700:1.12
	M4_10:1.12
	I20060107-1100:1.12
	I20060105-1630:1.12
	I20051230-1230:1.12
	I20051223-1100:1.12
	I20051217-0925:1.10
	I20051208-2000:1.10
	I20051201-1800:1.10
	I20051124-2000:1.9
	M3_10:1.8
	I20051118-1245:1.8
	I20051111-1800:1.7
	I20051106-0900:1.6
	v20051030:1.6
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.25
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.24;
commitid	5d1f46e195874567;

1.24
date	2007.05.18.13.28.04;	author dstadnik;	state Exp;
branches
	1.24.2.1;
next	1.23;
commitid	8a7464da9df4567;

1.23
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.22;
commitid	444245f8090b4567;

1.22
date	2007.01.30.15.42.00;	author atikhomirov;	state Exp;
branches;
next	1.21;
commitid	7bf745bf67434567;

1.21
date	2007.01.29.18.09.13;	author ashatalin;	state Exp;
branches;
next	1.20;
commitid	21cf45be38464567;

1.20
date	2006.09.29.21.26.44;	author atikhomirov;	state Exp;
branches;
next	1.19;

1.19
date	2006.07.07.11.58.56;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.06.07.09.29.01;	author dstadnik;	state Exp;
branches;
next	1.17;

1.17
date	2006.06.05.11.23.48;	author dstadnik;	state Exp;
branches;
next	1.16;

1.16
date	2006.05.17.12.39.15;	author atikhomirov;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.12.08.48.33;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.23.17.04.22;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.24.12.01.20;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.22.16.10.18;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.20.18.00.01;	author ashatalin;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.28.16.09.46;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.22.11.50.01;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.18.17.49.11;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.08.15.36.54;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.19.13.28.20;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.13.14.21.40;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.11.16.43.53;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.07.13.01.34;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.28;	author atikhomirov;	state Exp;
branches;
next	;

1.24.2.1
date	2007.09.07.18.10.36;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.25
log
@regenerate; add java expr accessor to the model
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import java.util.List;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Common Base</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * One that combines attributes that are essential for diagram elements
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getDiagramRunTimeClass <em>Diagram Run Time Class</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getVisualID <em>Visual ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getElementType <em>Element Type</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getEditPartClassName <em>Edit Part Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getItemSemanticEditPolicyClassName <em>Item Semantic Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getNotationViewFactoryClassName <em>Notation View Factory Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getViewmap <em>Viewmap</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getStyles <em>Styles</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getBehaviour <em>Behaviour</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#isSansDomain <em>Sans Domain</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase()
 * @@model abstract="true"
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='styles->forAll(style|style.ecoreClass.eAllSuperTypes->including(style.ecoreClass)->one(ePackage.name = \'notation\' and name = \'Style\'))' description='Each style must be a notation::Style or sub-class'"
 * @@generated
 */
public interface GenCommonBase extends EObject {
	/**
	 * Returns the value of the '<em><b>Diagram Run Time Class</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Run Time Class</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Run Time Class</em>' reference.
	 * @@see #setDiagramRunTimeClass(GenClass)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_DiagramRunTimeClass()
	 * @@model required="true"
	 * @@generated
	 */
	GenClass getDiagramRunTimeClass();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getDiagramRunTimeClass <em>Diagram Run Time Class</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Run Time Class</em>' reference.
	 * @@see #getDiagramRunTimeClass()
	 * @@generated
	 */
	void setDiagramRunTimeClass(GenClass value);

	/**
	 * Returns the value of the '<em><b>Visual ID</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * way to decide which editpart to use for specific diagram element. Maps to attribute in DRT.
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Visual ID</em>' attribute.
	 * @@see #setVisualID(int)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_VisualID()
	 * @@model required="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='visualID >= 0' description='Visual ID must be a non-negative integer'"
	 * @@generated
	 */
	int getVisualID();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getVisualID <em>Visual ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Visual ID</em>' attribute.
	 * @@see #getVisualID()
	 * @@generated
	 */
	void setVisualID(int value);

	/**
	 * Returns the value of the '<em><b>Element Type</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getDiagramElement <em>Diagram Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Element Type</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Element Type</em>' containment reference.
	 * @@see #setElementType(ElementType)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_ElementType()
	 * @@see org.eclipse.gmf.codegen.gmfgen.ElementType#getDiagramElement
	 * @@model opposite="diagramElement" containment="true"
	 * @@generated
	 */
	ElementType getElementType();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getElementType <em>Element Type</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Element Type</em>' containment reference.
	 * @@see #getElementType()
	 * @@generated
	 */
	void setElementType(ElementType value);

	/**
	 * Returns the value of the '<em><b>Edit Part Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Edit Part Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Edit Part Class Name</em>' attribute.
	 * @@see #setEditPartClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_EditPartClassName()
	 * @@model
	 * @@generated
	 */
	String getEditPartClassName();

	public static final String EDIT_PART_SUFFIX = "EditPart"; //$NON-NLS-1$

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getEditPartClassName <em>Edit Part Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Part Class Name</em>' attribute.
	 * @@see #getEditPartClassName()
	 * @@generated
	 */
	void setEditPartClassName(String value);

	/**
	 * Returns the value of the '<em><b>Item Semantic Edit Policy Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Item Semantic Edit Policy Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Item Semantic Edit Policy Class Name</em>' attribute.
	 * @@see #setItemSemanticEditPolicyClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_ItemSemanticEditPolicyClassName()
	 * @@model
	 * @@generated
	 */
	String getItemSemanticEditPolicyClassName();

	public static final String ITEM_SEMANTIC_EDIT_POLICY_SUFFIX = "ItemSemanticEditPolicy"; //$NON-NLS-1$

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getItemSemanticEditPolicyClassName <em>Item Semantic Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Item Semantic Edit Policy Class Name</em>' attribute.
	 * @@see #getItemSemanticEditPolicyClassName()
	 * @@generated
	 */
	void setItemSemanticEditPolicyClassName(String value);

	/**
	 * Returns the value of the '<em><b>Notation View Factory Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Notation View Factory Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Notation View Factory Class Name</em>' attribute.
	 * @@see #setNotationViewFactoryClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_NotationViewFactoryClassName()
	 * @@model
	 * @@generated
	 */
	String getNotationViewFactoryClassName();

	public static final String NOTATION_VIEW_FACTORY_SUFFIX = "ViewFactory"; //$NON-NLS-1$

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getNotationViewFactoryClassName <em>Notation View Factory Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Notation View Factory Class Name</em>' attribute.
	 * @@see #getNotationViewFactoryClassName()
	 * @@generated
	 */
	void setNotationViewFactoryClassName(String value);

	/**
	 * Returns the value of the '<em><b>Viewmap</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Viewmap</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Viewmap</em>' containment reference.
	 * @@see #setViewmap(Viewmap)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_Viewmap()
	 * @@model containment="true" required="true"
	 * @@generated
	 */
	Viewmap getViewmap();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getViewmap <em>Viewmap</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Viewmap</em>' containment reference.
	 * @@see #getViewmap()
	 * @@generated
	 */
	void setViewmap(Viewmap value);

	/**
	 * Returns the value of the '<em><b>Styles</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.codegen.ecore.genmodel.GenClass}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Styles</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Styles</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_Styles()
	 * @@model
	 * @@generated
	 */
	EList<GenClass> getStyles();

	/**
	 * Returns the value of the '<em><b>Behaviour</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.Behaviour}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.Behaviour#getSubject <em>Subject</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Behaviour</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Behaviour</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_Behaviour()
	 * @@see org.eclipse.gmf.codegen.gmfgen.Behaviour#getSubject
	 * @@model opposite="subject" containment="true"
	 * @@generated
	 */
	EList<Behaviour> getBehaviour();

	/**
	 * Returns the value of the '<em><b>Sans Domain</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Sans Domain</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Indicates this element has no associated domain model. IOW, pure design element.
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Sans Domain</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_SansDomain()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
	 * @@generated
	 */
	boolean isSansDomain();

	/**
	 * Filter list of behavior to instances of particular kind. Note, behaviour returned is not 
	 * necessarily owned (think contained) by this element, as this method unwraps {@@link SharedBehaviour}   
	 * @@param behaviourClass should be Behaviour.class.isAssignableFrom(behaviourClass)
	 */
	<T extends Behaviour> List<T> getBehaviour(Class<T> behaviourClass);

	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Class Name Prefix</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getClassNamePrefix();

	public static final String DEFAULT_CLASS_NAME_PREFIX = "Unknown"; //$NON-NLS-1$

	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Class Name Suffux</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getClassNameSuffux();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * This unique string identifier could be used to construct unique identifiers in generated java code
	 * <!-- end-model-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getUniqueIdentifier();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	ViewmapLayoutType getLayoutType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getEditPartQualifiedClassName();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getItemSemanticEditPolicyQualifiedClassName();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getNotationViewFactoryQualifiedClassName();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	GenDiagram getDiagram();

} // GenCommonBase
@


1.24
log
@[186339] Allow to specify custom notation styles in view factory
@
text
@d248 1
a248 1
	 * @@model type="org.eclipse.emf.codegen.ecore.genmodel.GenClass"
d266 1
a266 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.Behaviour" opposite="subject" containment="true"
@


1.24.2.1
log
@regenerate; add java expr getter to model
@
text
@d248 1
a248 1
	 * @@model
d266 1
a266 1
	 * @@model opposite="subject" containment="true"
@


1.23
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d35 1
d43 1
d238 16
@


1.22
log
@a bit of documentation for new sansDomain attribute
@
text
@d251 1
a251 1
	EList getBehaviour();
@


1.21
log
@[167466] - Do not generate ??ItemSemanticEditPolicy for pure-design elements
@
text
@d261 3
@


1.20
log
@[119465] support for diagram partitioning - started to reorganize the way we store behaviours in the genmodel - let them be reused. OpenDiagram as an example of new way to add behaviours.
@
text
@d36 1
d254 15
@


1.19
log
@add custom behaviour
@
text
@d9 2
d35 1
a35 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getCustomBehaviour <em>Custom Behaviour</em>}</li>
d235 3
a237 2
	 * Returns the value of the '<em><b>Custom Behaviour</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.CustomBehaviour}.
d240 1
a240 1
	 * If the meaning of the '<em>Custom Behaviour</em>' containment reference list isn't clear,
d244 4
a247 3
	 * @@return the value of the '<em>Custom Behaviour</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_CustomBehaviour()
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.CustomBehaviour" containment="true"
d250 8
a257 1
	EList getCustomBehaviour();
@


1.18
log
@provide Node/Link/Label/Diagram class prefix instead of Unknown for elements without model facet; add extra empty values checks
@
text
@d10 2
d33 1
d233 16
@


1.17
log
@#144679 Do not use visual ids in edit helper names
@
text
@d241 2
@


1.16
log
@[mgolubev] #140186 XYLayoutEditPolicy should not be installed for editparts that have figure with non-XYLayout in the gmfgraph model
@
text
@d135 1
a135 1
	public static final String EDIT_PART_SUFFIX = "EditPart";
d163 1
a163 1
	public static final String ITEM_SEMANTIC_EDIT_POLICY_SUFFIX = "ItemSemanticEditPolicy";
d191 1
a191 1
	public static final String NOTATION_VIEW_FACTORY_SUFFIX = "ViewFactory";
@


1.15
log
@#126200 register element types in xml
@
text
@d270 8
@


1.14
log
@[rdvorak] #131546 Update constraint annotations in gmfgen meta-model to the latest changes
@
text
@d26 1
d92 28
@


1.13
log
@rename GenContainerEditPart -> GenContainerBase
@
text
@d75 1
@


1.12
log
@#121888
One toolbar tool can create several elements.
@
text
@d18 1
a18 1
 * One that combines attributes that are essential for EditPart
d37 1
a37 1
public interface GenCommonBase extends EObject{
@


1.11
log
@#121581
Fields for the compartments are named unique.
@
text
@a236 8
	 * @@model
	 * @@generated
	 */
	String asJavaConstantName(String name);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
@


1.10
log
@#117749 & #118040 generate unique names for the shared elements in mapping model
@
text
@d237 8
@


1.9
log
@#112187 generate separate class for the link label text view
@
text
@d105 2
d133 2
d161 2
@


1.8
log
@don't require diagramRunTimeClass to be set unless we start using it
@
text
@d49 1
a49 1
	 * @@model
@


1.7
log
@[dstadnik] #115466 custom semantic edit policies to control link creation
@
text
@d49 1
a49 1
	 * @@model required="true"
@


1.6
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d27 1
d116 26
d242 8
@


1.5
log
@minor cleanup - unnecessary attributes were removed
@
text
@d28 1
d141 26
@


1.4
log
@[ashatalin] #112122 Action to initialize diagram for domain model.
 unique id introduced, refactoring to use it throughout the code
@
text
@d169 1
a169 1
	 * @@model kind="operation" required="true"
@


1.3
log
@#111775 cleanup in gmfgen - unused attributes gone
@
text
@d166 11
@


1.2
log
@#111775 stale properties in gmfgen
#111784 GenChildContainer extends GenCommonBase
@
text
@d27 1
d114 26
d177 8
@


1.1
log
@*** empty log message ***
@
text
@a26 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getMetaInfoProviderClassName <em>Meta Info Provider Class Name</em>}</li>
a112 38
	 * Returns the value of the '<em><b>Meta Info Provider Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Meta Info Provider Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Meta Info Provider Class Name</em>' attribute.
	 * @@see #setMetaInfoProviderClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCommonBase_MetaInfoProviderClassName()
	 * @@model
	 * @@generated
	 */
	String getMetaInfoProviderClassName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getMetaInfoProviderClassName <em>Meta Info Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Meta Info Provider Class Name</em>' attribute.
	 * @@see #getMetaInfoProviderClassName()
	 * @@generated
	 */
	void setMetaInfoProviderClassName(String value);

	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Meta Info Provider Qualified Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getMetaInfoProviderQualifiedClassName();

	/**
@

