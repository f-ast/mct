head	1.77;
access;
symbols
	v20081022-1925:1.77
	v20081015-1925:1.77
	v20081008-1925:1.76
	v20081001-1925:1.75
	v20080930-1130:1.75
	v20080926-1245:1.75
	v20080924-1925:1.75
	v20080917-1925:1.74
	v20080911-1728:1.74
	v20080910-1520:1.74
	v20080903-1520:1.74
	v20080827-1520:1.74
	v20080813-1520:1.72
	v20080806-1520:1.72
	v20080722-1827:1.72
	v20080718-1731:1.72
	v20080716-1600:1.71
	v20080716-1642:1.72
	R2_1_maintenance:1.71.0.2
	Root_R2_1_maintenance:1.71
	R2_1_0:1.71
	v20080610-1132:1.71
	v20080603-1553:1.71
	v20080528-1052:1.71
	v20080521:1.71
	v20080516-1543:1.71
	v20080516-1143:1.71
	v20080512-1200:1.71
	v20080508-2000:1.71
	v20080507-1326:1.71
	v20080503-1740:1.71
	v20080501-1739:1.71
	v20080425-1959:1.71
	v20080417-1610:1.71
	v20080411-0411:1.70
	v20080404-1111:1.70
	v20080322-0000:1.70
	v20080222-1200:1.69
	v20080215-1500:1.69
	v20080207-0207:1.68
	v20071222-1111:1.69
	v20071214-1111:1.69
	v20071130-1111:1.69
	v20071124-0000:1.68
	v20071112-0000:1.68
	v20071108-0000:1.68
	v20071003-0000:1.68
	v20070928-0000:1.68
	v20070921-0000:1.68
	v20070915-0000:1.68
	v20070903-0000:1.68
	v20070809-0000:1.68
	R2_0_maintenance:1.68.0.2
	R2_0:1.68
	R4_20:1.68
	v20070621-0000:1.68
	RC3_20:1.68
	v20070614-1400:1.68
	v20070608-1300:1.68
	v20070605-1400:1.68
	v20070601-1400:1.68
	v20070525-1500:1.68
	v20070520-1200:1.68
	v20070518-1300:1.68
	v20070504-1000:1.67
	v20070427-0600:1.66
	v20070420-1000:1.66
	v20070413-1300:1.66
	v20070405-1100:1.66
	v20070403-1500:1.66
	v20070330-1300:1.66
	v20060330-1300:1.66
	v20070322-1100:1.66
	v20060316-0600:1.65
	v20070307-0700:1.64
	v20070301-1200:1.64
	v20070228-2000:1.64
	v20070221-1500:1.64
	v20070208-1800:1.64
	v20070202-0200:1.49
	v20070103-0300:1.61
	M4_20:1.61
	v20061222-1800:1.59
	v20061218-1200:1.58
	v20061214-0000:1.58
	v20061120-1300:1.57
	M3_20:1.57
	v20061117-0800:1.57
	v20061027-1200:1.49
	v20061020-1000:1.49
	v20061013-1330:1.56
	v20060919-0800:1.49
	v20060907-1100:1.49
	M1_20:1.51
	v20060904-1500:1.51
	v20060824-1600:1.49
	v20060817-1500:1.49
	v20060728-0500:1.49
	v20060713-1700:1.49
	R1_0_maintenance:1.49.0.2
	R1_0:1.49
	v20060627-1200:1.49
	v20060626-1420:1.49
	v20060620-0400:1.49
	v20060616-1400:1.48
	v20060616-1200:1.48
	v20060609-1400:1.48
	v20060531-1730:1.47
	v20060530-1930:1.47
	v20060526-1200:1.47
	v20060519-1300:1.46
	v20060519-0800:1.46
	v20060512-1000:1.46
	I20060512-1000:1.46
	I20060505-1400:1.45
	I20060428-1300:1.45
	I20060424-0500:1.44
	I20060424-0300:1.44
	M6_10:1.42
	I20060407-1200:1.40
	I20060331-1000:1.39
	I20060324-0300:1.38
	I20060317-1300:1.38
	I20060317-1200:1.38
	I20060316-1300:1.38
	I20060309-1300:1.36
	M5_10:1.35
	S20060303-1600:1.35
	I20060227-1730:1.34
	I20060216-1945:1.32
	I20060210-1715:1.29
	I20060209-1815:1.29
	I20060203-0830:1.26
	I20060202-1415:1.25
	I20060129-1145:1.24
	I20060127-0900:1.24
	I20060120-1530:1.21
	I20060113-1700:1.20
	M4_10:1.20
	I20060107-1100:1.18
	I20060105-1630:1.17
	I20051230-1230:1.16
	I20051223-1100:1.16
	I20051217-0925:1.16
	I20051208-2000:1.16
	I20051201-1800:1.16
	I20051124-2000:1.15
	M3_10:1.15
	I20051118-1245:1.15
	I20051111-1800:1.15
	I20051106-0900:1.15
	v20051030:1.15
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.77
date	2008.10.14.17.29.55;	author atikhomirov;	state Exp;
branches;
next	1.76;
commitid	2c9048f4d70a4567;

1.76
date	2008.10.08.18.51.03;	author atikhomirov;	state Exp;
branches;
next	1.75;
commitid	2d5d448ed010f4567;

1.75
date	2008.09.23.14.54.39;	author atikhomirov;	state Exp;
branches;
next	1.74;
commitid	2569e48d903244567;

1.74
date	2008.08.25.16.53.20;	author atikhomirov;	state Exp;
branches;
next	1.73;
commitid	21e48b2e3764567;

1.73
date	2008.08.22.15.20.15;	author atikhomirov;	state Exp;
branches;
next	1.72;
commitid	1abb48aed9234567;

1.72
date	2008.07.01.11.40.17;	author atikhomirov;	state Exp;
branches;
next	1.71;
commitid	7b70486a179a4567;

1.71
date	2008.04.14.08.38.03;	author atikhomirov;	state Exp;
branches;
next	1.70;
commitid	1b0e480317df4567;

1.70
date	2008.02.27.17.30.20;	author atikhomirov;	state Exp;
branches;
next	1.69;
commitid	22cf47c59e244567;

1.69
date	2007.11.19.18.10.47;	author dstadnik;	state Exp;
branches;
next	1.68;
commitid	225d4741d1a54567;

1.68
date	2007.05.11.16.01.30;	author ashatalin;	state Exp;
branches;
next	1.67;
commitid	44f84644934f4567;

1.67
date	2007.05.01.13.28.04;	author ashatalin;	state Exp;
branches;
next	1.66;
commitid	143a463740554567;

1.66
date	2007.03.16.16.09.53;	author ashatalin;	state Exp;
branches;
next	1.65;
commitid	565445fac1444567;

1.65
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches;
next	1.64;
commitid	444245f8090b4567;

1.64
date	2007.02.08.19.31.57;	author atikhomirov;	state Exp;
branches;
next	1.63;
commitid	2f8045cb7a9f4567;

1.63
date	2007.02.08.18.06.49;	author atikhomirov;	state Exp;
branches;
next	1.62;
commitid	56b45cb66aa4567;

1.62
date	2007.01.03.20.34.48;	author dstadnik;	state Exp;
branches;
next	1.61;
commitid	58fc459c135f4567;

1.61
date	2006.12.28.19.45.51;	author ashatalin;	state Exp;
branches;
next	1.60;
commitid	13f545941eec4567;

1.60
date	2006.12.27.12.43.26;	author dstadnik;	state Exp;
branches;
next	1.59;
commitid	5bbc45926a654567;

1.59
date	2006.12.21.17.14.28;	author dstadnik;	state Exp;
branches;
next	1.58;
commitid	710b458ac0ed4567;

1.58
date	2006.11.22.20.09.57;	author atikhomirov;	state Exp;
branches;
next	1.57;
commitid	29594564ae8d4567;

1.57
date	2006.10.18.14.21.46;	author dstadnik;	state Exp;
branches;
next	1.56;

1.56
date	2006.09.29.21.26.45;	author atikhomirov;	state Exp;
branches;
next	1.55;

1.55
date	2006.09.27.10.04.42;	author dstadnik;	state Exp;
branches;
next	1.54;

1.54
date	2006.09.15.20.44.31;	author atikhomirov;	state Exp;
branches;
next	1.53;

1.53
date	2006.09.11.18.21.35;	author ashatalin;	state Exp;
branches;
next	1.52;

1.52
date	2006.09.05.23.41.12;	author radvorak;	state Exp;
branches;
next	1.51;

1.51
date	2006.08.25.18.32.57;	author atikhomirov;	state Exp;
branches;
next	1.50;

1.50
date	2006.07.07.11.58.56;	author dstadnik;	state Exp;
branches;
next	1.49;

1.49
date	2006.06.19.12.42.03;	author ashatalin;	state Exp;
branches;
next	1.48;

1.48
date	2006.06.09.12.31.18;	author dstadnik;	state Exp;
branches;
next	1.47;

1.47
date	2006.05.24.09.20.16;	author atikhomirov;	state Exp;
branches;
next	1.46;

1.46
date	2006.05.10.11.13.14;	author dstadnik;	state Exp;
branches;
next	1.45;

1.45
date	2006.04.25.19.16.05;	author radvorak;	state Exp;
branches;
next	1.44;

1.44
date	2006.04.20.13.59.45;	author dstadnik;	state Exp;
branches;
next	1.43;

1.43
date	2006.04.19.19.42.26;	author atikhomirov;	state Exp;
branches;
next	1.42;

1.42
date	2006.04.13.15.41.17;	author radvorak;	state Exp;
branches;
next	1.41;

1.41
date	2006.04.12.08.48.33;	author dstadnik;	state Exp;
branches;
next	1.40;

1.40
date	2006.04.03.12.52.47;	author dstadnik;	state Exp;
branches;
next	1.39;

1.39
date	2006.03.30.20.42.04;	author atikhomirov;	state Exp;
branches;
next	1.38;

1.38
date	2006.03.13.11.02.30;	author dstadnik;	state Exp;
branches;
next	1.37;

1.37
date	2006.03.10.14.47.54;	author atikhomirov;	state Exp;
branches;
next	1.36;

1.36
date	2006.03.07.14.09.19;	author dstadnik;	state Exp;
branches;
next	1.35;

1.35
date	2006.03.03.18.32.30;	author ashatalin;	state Exp;
branches;
next	1.34;

1.34
date	2006.02.24.20.23.26;	author atikhomirov;	state Exp;
branches;
next	1.33;

1.33
date	2006.02.23.20.15.40;	author atikhomirov;	state Exp;
branches;
next	1.32;

1.32
date	2006.02.15.15.09.49;	author dstadnik;	state Exp;
branches;
next	1.31;

1.31
date	2006.02.14.20.12.32;	author atikhomirov;	state Exp;
branches;
next	1.30;

1.30
date	2006.02.14.18.46.23;	author ashatalin;	state Exp;
branches;
next	1.29;

1.29
date	2006.02.08.16.06.20;	author atikhomirov;	state Exp;
branches;
next	1.28;

1.28
date	2006.02.08.00.17.46;	author atikhomirov;	state Exp;
branches;
next	1.27;

1.27
date	2006.02.06.11.00.20;	author dstadnik;	state Exp;
branches;
next	1.26;

1.26
date	2006.02.03.12.38.15;	author dstadnik;	state Exp;
branches;
next	1.25;

1.25
date	2006.01.30.18.26.46;	author dstadnik;	state Exp;
branches;
next	1.24;

1.24
date	2006.01.26.13.36.40;	author atikhomirov;	state Exp;
branches;
next	1.23;

1.23
date	2006.01.25.19.52.35;	author atikhomirov;	state Exp;
branches;
next	1.22;

1.22
date	2006.01.24.12.01.20;	author dstadnik;	state Exp;
branches;
next	1.21;

1.21
date	2006.01.19.00.10.44;	author ashatalin;	state Exp;
branches;
next	1.20;

1.20
date	2006.01.12.10.41.33;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.01.10.12.51.22;	author atikhomirov;	state Exp;
branches;
next	1.18;

1.18
date	2006.01.06.17.03.34;	author atikhomirov;	state Exp;
branches;
next	1.17;

1.17
date	2006.01.05.17.30.30;	author atikhomirov;	state Exp;
branches;
next	1.16;

1.16
date	2005.11.29.18.33.26;	author atikhomirov;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.27.16.12.20;	author atikhomirov;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.27.11.41.45;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.26.18.43.48;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.24.14.58.46;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.21.13.31.57;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.20.16.04.34;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.13.12.45.56;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.11.12.25.35;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.10.12.57.39;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.07.13.01.08;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.03.19.09.15;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.29.09.49.41;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.26.15.15.44;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.29;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.77
log
@[250772] Support custom preferences
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.codegen.gmfgen.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage
 * @@generated
 */
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
	/**
	 * The cached model package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected static GMFGenPackage modelPackage;

	/**
	 * Creates an instance of the adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GMFGenAdapterFactory() {
		if (modelPackage == null) {
			modelPackage = GMFGenPackage.eINSTANCE;
		}
	}

	/**
	 * Returns whether this factory is applicable for the type of the object.
	 * <!-- begin-user-doc -->
	 * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
	 * <!-- end-user-doc -->
	 * @@return whether this factory is applicable for the type of the object.
	 * @@generated
	 */
	@@Override
	public boolean isFactoryForType(Object object) {
		if (object == modelPackage) {
			return true;
		}
		if (object instanceof EObject) {
			return ((EObject)object).eClass().getEPackage() == modelPackage;
		}
		return false;
	}

	/**
	 * The switch that delegates to the <code>createXXX</code> methods.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GMFGenSwitch<Adapter> modelSwitch =
		new GMFGenSwitch<Adapter>() {
			@@Override
			public Adapter caseGenEditorGenerator(GenEditorGenerator object) {
				return createGenEditorGeneratorAdapter();
			}
			@@Override
			public Adapter caseGenDiagram(GenDiagram object) {
				return createGenDiagramAdapter();
			}
			@@Override
			public Adapter caseGenEditorView(GenEditorView object) {
				return createGenEditorViewAdapter();
			}
			@@Override
			public Adapter caseGenPreferencePage(GenPreferencePage object) {
				return createGenPreferencePageAdapter();
			}
			@@Override
			public Adapter caseGenCustomPreferencePage(GenCustomPreferencePage object) {
				return createGenCustomPreferencePageAdapter();
			}
			@@Override
			public Adapter caseGenStandardPreferencePage(GenStandardPreferencePage object) {
				return createGenStandardPreferencePageAdapter();
			}
			@@Override
			public Adapter caseGenDiagramPreferences(GenDiagramPreferences object) {
				return createGenDiagramPreferencesAdapter();
			}
			@@Override
			public Adapter caseGenFont(GenFont object) {
				return createGenFontAdapter();
			}
			@@Override
			public Adapter caseGenStandardFont(GenStandardFont object) {
				return createGenStandardFontAdapter();
			}
			@@Override
			public Adapter caseGenCustomFont(GenCustomFont object) {
				return createGenCustomFontAdapter();
			}
			@@Override
			public Adapter caseGenColor(GenColor object) {
				return createGenColorAdapter();
			}
			@@Override
			public Adapter caseGenRGBColor(GenRGBColor object) {
				return createGenRGBColorAdapter();
			}
			@@Override
			public Adapter caseGenConstantColor(GenConstantColor object) {
				return createGenConstantColorAdapter();
			}
			@@Override
			public Adapter caseGenPreference(GenPreference object) {
				return createGenPreferenceAdapter();
			}
			@@Override
			public Adapter caseBatchValidation(BatchValidation object) {
				return createBatchValidationAdapter();
			}
			@@Override
			public Adapter caseProviderClassNames(ProviderClassNames object) {
				return createProviderClassNamesAdapter();
			}
			@@Override
			public Adapter caseShortcuts(Shortcuts object) {
				return createShortcutsAdapter();
			}
			@@Override
			public Adapter casePackageNames(PackageNames object) {
				return createPackageNamesAdapter();
			}
			@@Override
			public Adapter caseLinkConstraints(LinkConstraints object) {
				return createLinkConstraintsAdapter();
			}
			@@Override
			public Adapter caseEditorCandies(EditorCandies object) {
				return createEditorCandiesAdapter();
			}
			@@Override
			public Adapter caseEditPartCandies(EditPartCandies object) {
				return createEditPartCandiesAdapter();
			}
			@@Override
			public Adapter caseMeasurementUnit(MeasurementUnit object) {
				return createMeasurementUnitAdapter();
			}
			@@Override
			public Adapter caseGenDiagramUpdater(GenDiagramUpdater object) {
				return createGenDiagramUpdaterAdapter();
			}
			@@Override
			public Adapter caseGenPlugin(GenPlugin object) {
				return createGenPluginAdapter();
			}
			@@Override
			public Adapter caseDynamicModelAccess(DynamicModelAccess object) {
				return createDynamicModelAccessAdapter();
			}
			@@Override
			public Adapter caseGenCommonBase(GenCommonBase object) {
				return createGenCommonBaseAdapter();
			}
			@@Override
			public Adapter caseBehaviour(Behaviour object) {
				return createBehaviourAdapter();
			}
			@@Override
			public Adapter caseCustomBehaviour(CustomBehaviour object) {
				return createCustomBehaviourAdapter();
			}
			@@Override
			public Adapter caseSharedBehaviour(SharedBehaviour object) {
				return createSharedBehaviourAdapter();
			}
			@@Override
			public Adapter caseOpenDiagramBehaviour(OpenDiagramBehaviour object) {
				return createOpenDiagramBehaviourAdapter();
			}
			@@Override
			public Adapter caseGenContainerBase(GenContainerBase object) {
				return createGenContainerBaseAdapter();
			}
			@@Override
			public Adapter caseGenChildContainer(GenChildContainer object) {
				return createGenChildContainerAdapter();
			}
			@@Override
			public Adapter caseGenNode(GenNode object) {
				return createGenNodeAdapter();
			}
			@@Override
			public Adapter caseGenTopLevelNode(GenTopLevelNode object) {
				return createGenTopLevelNodeAdapter();
			}
			@@Override
			public Adapter caseGenChildNode(GenChildNode object) {
				return createGenChildNodeAdapter();
			}
			@@Override
			public Adapter caseGenChildSideAffixedNode(GenChildSideAffixedNode object) {
				return createGenChildSideAffixedNodeAdapter();
			}
			@@Override
			public Adapter caseGenChildLabelNode(GenChildLabelNode object) {
				return createGenChildLabelNodeAdapter();
			}
			@@Override
			public Adapter caseGenCompartment(GenCompartment object) {
				return createGenCompartmentAdapter();
			}
			@@Override
			public Adapter caseGenLink(GenLink object) {
				return createGenLinkAdapter();
			}
			@@Override
			public Adapter caseGenLabel(GenLabel object) {
				return createGenLabelAdapter();
			}
			@@Override
			public Adapter caseGenNodeLabel(GenNodeLabel object) {
				return createGenNodeLabelAdapter();
			}
			@@Override
			public Adapter caseGenExternalNodeLabel(GenExternalNodeLabel object) {
				return createGenExternalNodeLabelAdapter();
			}
			@@Override
			public Adapter caseGenLinkLabel(GenLinkLabel object) {
				return createGenLinkLabelAdapter();
			}
			@@Override
			public Adapter caseElementType(ElementType object) {
				return createElementTypeAdapter();
			}
			@@Override
			public Adapter caseMetamodelType(MetamodelType object) {
				return createMetamodelTypeAdapter();
			}
			@@Override
			public Adapter caseSpecializationType(SpecializationType object) {
				return createSpecializationTypeAdapter();
			}
			@@Override
			public Adapter caseNotationType(NotationType object) {
				return createNotationTypeAdapter();
			}
			@@Override
			public Adapter caseModelFacet(ModelFacet object) {
				return createModelFacetAdapter();
			}
			@@Override
			public Adapter caseLinkModelFacet(LinkModelFacet object) {
				return createLinkModelFacetAdapter();
			}
			@@Override
			public Adapter caseLabelModelFacet(LabelModelFacet object) {
				return createLabelModelFacetAdapter();
			}
			@@Override
			public Adapter caseTypeModelFacet(TypeModelFacet object) {
				return createTypeModelFacetAdapter();
			}
			@@Override
			public Adapter caseTypeLinkModelFacet(TypeLinkModelFacet object) {
				return createTypeLinkModelFacetAdapter();
			}
			@@Override
			public Adapter caseFeatureLinkModelFacet(FeatureLinkModelFacet object) {
				return createFeatureLinkModelFacetAdapter();
			}
			@@Override
			public Adapter caseFeatureLabelModelFacet(FeatureLabelModelFacet object) {
				return createFeatureLabelModelFacetAdapter();
			}
			@@Override
			public Adapter caseDesignLabelModelFacet(DesignLabelModelFacet object) {
				return createDesignLabelModelFacetAdapter();
			}
			@@Override
			public Adapter caseAttributes(Attributes object) {
				return createAttributesAdapter();
			}
			@@Override
			public Adapter caseColorAttributes(ColorAttributes object) {
				return createColorAttributesAdapter();
			}
			@@Override
			public Adapter caseStyleAttributes(StyleAttributes object) {
				return createStyleAttributesAdapter();
			}
			@@Override
			public Adapter caseResizeConstraints(ResizeConstraints object) {
				return createResizeConstraintsAdapter();
			}
			@@Override
			public Adapter caseDefaultSizeAttributes(DefaultSizeAttributes object) {
				return createDefaultSizeAttributesAdapter();
			}
			@@Override
			public Adapter caseLabelOffsetAttributes(LabelOffsetAttributes object) {
				return createLabelOffsetAttributesAdapter();
			}
			@@Override
			public Adapter caseViewmap(Viewmap object) {
				return createViewmapAdapter();
			}
			@@Override
			public Adapter caseFigureViewmap(FigureViewmap object) {
				return createFigureViewmapAdapter();
			}
			@@Override
			public Adapter caseSnippetViewmap(SnippetViewmap object) {
				return createSnippetViewmapAdapter();
			}
			@@Override
			public Adapter caseInnerClassViewmap(InnerClassViewmap object) {
				return createInnerClassViewmapAdapter();
			}
			@@Override
			public Adapter caseParentAssignedViewmap(ParentAssignedViewmap object) {
				return createParentAssignedViewmapAdapter();
			}
			@@Override
			public Adapter caseValueExpression(ValueExpression object) {
				return createValueExpressionAdapter();
			}
			@@Override
			public Adapter caseGenConstraint(GenConstraint object) {
				return createGenConstraintAdapter();
			}
			@@Override
			public Adapter casePalette(Palette object) {
				return createPaletteAdapter();
			}
			@@Override
			public Adapter caseEntryBase(EntryBase object) {
				return createEntryBaseAdapter();
			}
			@@Override
			public Adapter caseAbstractToolEntry(AbstractToolEntry object) {
				return createAbstractToolEntryAdapter();
			}
			@@Override
			public Adapter caseToolEntry(ToolEntry object) {
				return createToolEntryAdapter();
			}
			@@Override
			public Adapter caseStandardEntry(StandardEntry object) {
				return createStandardEntryAdapter();
			}
			@@Override
			public Adapter caseToolGroupItem(ToolGroupItem object) {
				return createToolGroupItemAdapter();
			}
			@@Override
			public Adapter caseSeparator(Separator object) {
				return createSeparatorAdapter();
			}
			@@Override
			public Adapter caseToolGroup(ToolGroup object) {
				return createToolGroupAdapter();
			}
			@@Override
			public Adapter caseGenElementInitializer(GenElementInitializer object) {
				return createGenElementInitializerAdapter();
			}
			@@Override
			public Adapter caseGenFeatureSeqInitializer(GenFeatureSeqInitializer object) {
				return createGenFeatureSeqInitializerAdapter();
			}
			@@Override
			public Adapter caseGenFeatureValueSpec(GenFeatureValueSpec object) {
				return createGenFeatureValueSpecAdapter();
			}
			@@Override
			public Adapter caseGenReferenceNewElementSpec(GenReferenceNewElementSpec object) {
				return createGenReferenceNewElementSpecAdapter();
			}
			@@Override
			public Adapter caseGenFeatureInitializer(GenFeatureInitializer object) {
				return createGenFeatureInitializerAdapter();
			}
			@@Override
			public Adapter caseGenLinkConstraints(GenLinkConstraints object) {
				return createGenLinkConstraintsAdapter();
			}
			@@Override
			public Adapter caseGenAuditRoot(GenAuditRoot object) {
				return createGenAuditRootAdapter();
			}
			@@Override
			public Adapter caseGenAuditContainer(GenAuditContainer object) {
				return createGenAuditContainerAdapter();
			}
			@@Override
			public Adapter caseGenRuleBase(GenRuleBase object) {
				return createGenRuleBaseAdapter();
			}
			@@Override
			public Adapter caseGenAuditRule(GenAuditRule object) {
				return createGenAuditRuleAdapter();
			}
			@@Override
			public Adapter caseGenRuleTarget(GenRuleTarget object) {
				return createGenRuleTargetAdapter();
			}
			@@Override
			public Adapter caseGenDomainElementTarget(GenDomainElementTarget object) {
				return createGenDomainElementTargetAdapter();
			}
			@@Override
			public Adapter caseGenDiagramElementTarget(GenDiagramElementTarget object) {
				return createGenDiagramElementTargetAdapter();
			}
			@@Override
			public Adapter caseGenDomainAttributeTarget(GenDomainAttributeTarget object) {
				return createGenDomainAttributeTargetAdapter();
			}
			@@Override
			public Adapter caseGenNotationElementTarget(GenNotationElementTarget object) {
				return createGenNotationElementTargetAdapter();
			}
			@@Override
			public Adapter caseGenMetricContainer(GenMetricContainer object) {
				return createGenMetricContainerAdapter();
			}
			@@Override
			public Adapter caseGenMetricRule(GenMetricRule object) {
				return createGenMetricRuleAdapter();
			}
			@@Override
			public Adapter caseGenAuditedMetricTarget(GenAuditedMetricTarget object) {
				return createGenAuditedMetricTargetAdapter();
			}
			@@Override
			public Adapter caseGenAuditable(GenAuditable object) {
				return createGenAuditableAdapter();
			}
			@@Override
			public Adapter caseGenAuditContext(GenAuditContext object) {
				return createGenAuditContextAdapter();
			}
			@@Override
			public Adapter caseGenMeasurable(GenMeasurable object) {
				return createGenMeasurableAdapter();
			}
			@@Override
			public Adapter caseGenExpressionProviderContainer(GenExpressionProviderContainer object) {
				return createGenExpressionProviderContainerAdapter();
			}
			@@Override
			public Adapter caseGenExpressionProviderBase(GenExpressionProviderBase object) {
				return createGenExpressionProviderBaseAdapter();
			}
			@@Override
			public Adapter caseGenJavaExpressionProvider(GenJavaExpressionProvider object) {
				return createGenJavaExpressionProviderAdapter();
			}
			@@Override
			public Adapter caseGenExpressionInterpreter(GenExpressionInterpreter object) {
				return createGenExpressionInterpreterAdapter();
			}
			@@Override
			public Adapter caseGenLiteralExpressionProvider(GenLiteralExpressionProvider object) {
				return createGenLiteralExpressionProviderAdapter();
			}
			@@Override
			public Adapter caseGenDomainModelNavigator(GenDomainModelNavigator object) {
				return createGenDomainModelNavigatorAdapter();
			}
			@@Override
			public Adapter caseGenNavigator(GenNavigator object) {
				return createGenNavigatorAdapter();
			}
			@@Override
			public Adapter caseGenNavigatorChildReference(GenNavigatorChildReference object) {
				return createGenNavigatorChildReferenceAdapter();
			}
			@@Override
			public Adapter caseGenNavigatorPath(GenNavigatorPath object) {
				return createGenNavigatorPathAdapter();
			}
			@@Override
			public Adapter caseGenNavigatorPathSegment(GenNavigatorPathSegment object) {
				return createGenNavigatorPathSegmentAdapter();
			}
			@@Override
			public Adapter caseGenPropertySheet(GenPropertySheet object) {
				return createGenPropertySheetAdapter();
			}
			@@Override
			public Adapter caseGenPropertyTab(GenPropertyTab object) {
				return createGenPropertyTabAdapter();
			}
			@@Override
			public Adapter caseGenStandardPropertyTab(GenStandardPropertyTab object) {
				return createGenStandardPropertyTabAdapter();
			}
			@@Override
			public Adapter caseGenCustomPropertyTab(GenCustomPropertyTab object) {
				return createGenCustomPropertyTabAdapter();
			}
			@@Override
			public Adapter caseGenPropertyTabFilter(GenPropertyTabFilter object) {
				return createGenPropertyTabFilterAdapter();
			}
			@@Override
			public Adapter caseTypeTabFilter(TypeTabFilter object) {
				return createTypeTabFilterAdapter();
			}
			@@Override
			public Adapter caseCustomTabFilter(CustomTabFilter object) {
				return createCustomTabFilterAdapter();
			}
			@@Override
			public Adapter caseGenContributionItem(GenContributionItem object) {
				return createGenContributionItemAdapter();
			}
			@@Override
			public Adapter caseGenSharedContributionItem(GenSharedContributionItem object) {
				return createGenSharedContributionItemAdapter();
			}
			@@Override
			public Adapter caseGenGroupMarker(GenGroupMarker object) {
				return createGenGroupMarkerAdapter();
			}
			@@Override
			public Adapter caseGenSeparator(GenSeparator object) {
				return createGenSeparatorAdapter();
			}
			@@Override
			public Adapter caseGenCustomAction(GenCustomAction object) {
				return createGenCustomActionAdapter();
			}
			@@Override
			public Adapter caseGenCommandAction(GenCommandAction object) {
				return createGenCommandActionAdapter();
			}
			@@Override
			public Adapter caseGenAction(GenAction object) {
				return createGenActionAdapter();
			}
			@@Override
			public Adapter caseLoadResourceAction(LoadResourceAction object) {
				return createLoadResourceActionAdapter();
			}
			@@Override
			public Adapter caseInitDiagramAction(InitDiagramAction object) {
				return createInitDiagramActionAdapter();
			}
			@@Override
			public Adapter caseCreateShortcutAction(CreateShortcutAction object) {
				return createCreateShortcutActionAdapter();
			}
			@@Override
			public Adapter caseGenActionFactoryContributionItem(GenActionFactoryContributionItem object) {
				return createGenActionFactoryContributionItemAdapter();
			}
			@@Override
			public Adapter caseGenContributionManager(GenContributionManager object) {
				return createGenContributionManagerAdapter();
			}
			@@Override
			public Adapter caseGenMenuManager(GenMenuManager object) {
				return createGenMenuManagerAdapter();
			}
			@@Override
			public Adapter caseGenToolBarManager(GenToolBarManager object) {
				return createGenToolBarManagerAdapter();
			}
			@@Override
			public Adapter caseGenContextMenu(GenContextMenu object) {
				return createGenContextMenuAdapter();
			}
			@@Override
			public Adapter caseGenApplication(GenApplication object) {
				return createGenApplicationAdapter();
			}
			@@Override
			public Adapter caseGenLinkEnd(GenLinkEnd object) {
				return createGenLinkEndAdapter();
			}
			@@Override
			public Adapter caseGenParsers(GenParsers object) {
				return createGenParsersAdapter();
			}
			@@Override
			public Adapter caseGenParserImplementation(GenParserImplementation object) {
				return createGenParserImplementationAdapter();
			}
			@@Override
			public Adapter casePredefinedParser(PredefinedParser object) {
				return createPredefinedParserAdapter();
			}
			@@Override
			public Adapter caseCustomParser(CustomParser object) {
				return createCustomParserAdapter();
			}
			@@Override
			public Adapter caseExternalParser(ExternalParser object) {
				return createExternalParserAdapter();
			}
			@@Override
			public Adapter defaultCase(EObject object) {
				return createEObjectAdapter();
			}
		};

	/**
	 * Creates an adapter for the <code>target</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param target the object to adapt.
	 * @@return the adapter for the <code>target</code>.
	 * @@generated
	 */
	@@Override
	public Adapter createAdapter(Notifier target) {
		return modelSwitch.doSwitch((EObject)target);
	}


	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator <em>Gen Editor Generator</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator
	 * @@generated
	 */
	public Adapter createGenEditorGeneratorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagram <em>Gen Diagram</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagram
	 * @@generated
	 */
	public Adapter createGenDiagramAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorView <em>Gen Editor View</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenEditorView
	 * @@generated
	 */
	public Adapter createGenEditorViewAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenPreferencePage <em>Gen Preference Page</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPreferencePage
	 * @@generated
	 */
	public Adapter createGenPreferencePageAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCustomPreferencePage <em>Gen Custom Preference Page</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCustomPreferencePage
	 * @@generated
	 */
	public Adapter createGenCustomPreferencePageAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenStandardPreferencePage <em>Gen Standard Preference Page</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenStandardPreferencePage
	 * @@generated
	 */
	public Adapter createGenStandardPreferencePageAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramPreferences <em>Gen Diagram Preferences</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagramPreferences
	 * @@generated
	 */
	public Adapter createGenDiagramPreferencesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenFont <em>Gen Font</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenFont
	 * @@generated
	 */
	public Adapter createGenFontAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenStandardFont <em>Gen Standard Font</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenStandardFont
	 * @@generated
	 */
	public Adapter createGenStandardFontAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCustomFont <em>Gen Custom Font</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCustomFont
	 * @@generated
	 */
	public Adapter createGenCustomFontAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenColor <em>Gen Color</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenColor
	 * @@generated
	 */
	public Adapter createGenColorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenRGBColor <em>Gen RGB Color</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenRGBColor
	 * @@generated
	 */
	public Adapter createGenRGBColorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenConstantColor <em>Gen Constant Color</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenConstantColor
	 * @@generated
	 */
	public Adapter createGenConstantColorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenPreference <em>Gen Preference</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPreference
	 * @@generated
	 */
	public Adapter createGenPreferenceAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.BatchValidation <em>Batch Validation</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.BatchValidation
	 * @@generated
	 */
	public Adapter createBatchValidationAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ProviderClassNames <em>Provider Class Names</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ProviderClassNames
	 * @@generated
	 */
	public Adapter createProviderClassNamesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.Shortcuts <em>Shortcuts</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.Shortcuts
	 * @@generated
	 */
	public Adapter createShortcutsAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.PackageNames <em>Package Names</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.PackageNames
	 * @@generated
	 */
	public Adapter createPackageNamesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LinkConstraints <em>Link Constraints</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LinkConstraints
	 * @@generated
	 */
	public Adapter createLinkConstraintsAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.EditorCandies <em>Editor Candies</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.EditorCandies
	 * @@generated
	 */
	public Adapter createEditorCandiesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.EditPartCandies <em>Edit Part Candies</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.EditPartCandies
	 * @@generated
	 */
	public Adapter createEditPartCandiesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.MeasurementUnit <em>Measurement Unit</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.MeasurementUnit
	 * @@generated
	 */
	public Adapter createMeasurementUnitAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramUpdater <em>Gen Diagram Updater</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagramUpdater
	 * @@generated
	 */
	public Adapter createGenDiagramUpdaterAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenPlugin <em>Gen Plugin</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPlugin
	 * @@generated
	 */
	public Adapter createGenPluginAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess <em>Dynamic Model Access</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess
	 * @@generated
	 */
	public Adapter createDynamicModelAccessAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ElementType <em>Element Type</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ElementType
	 * @@generated
	 */
	public Adapter createElementTypeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.MetamodelType <em>Metamodel Type</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.MetamodelType
	 * @@generated
	 */
	public Adapter createMetamodelTypeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.SpecializationType <em>Specialization Type</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.SpecializationType
	 * @@generated
	 */
	public Adapter createSpecializationTypeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.NotationType <em>Notation Type</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.NotationType
	 * @@generated
	 */
	public Adapter createNotationTypeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase <em>Gen Common Base</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCommonBase
	 * @@generated
	 */
	public Adapter createGenCommonBaseAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.Behaviour <em>Behaviour</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.Behaviour
	 * @@generated
	 */
	public Adapter createBehaviourAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.CustomBehaviour <em>Custom Behaviour</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CustomBehaviour
	 * @@generated
	 */
	public Adapter createCustomBehaviourAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.SharedBehaviour <em>Shared Behaviour</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.SharedBehaviour
	 * @@generated
	 */
	public Adapter createSharedBehaviourAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour <em>Open Diagram Behaviour</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour
	 * @@generated
	 */
	public Adapter createOpenDiagramBehaviourAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenContainerBase <em>Gen Container Base</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenContainerBase
	 * @@generated
	 */
	public Adapter createGenContainerBaseAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode <em>Gen Node</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNode
	 * @@generated
	 */
	public Adapter createGenNodeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode <em>Gen Top Level Node</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode
	 * @@generated
	 */
	public Adapter createGenTopLevelNodeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode <em>Gen Child Node</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildNode
	 * @@generated
	 */
	public Adapter createGenChildNodeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildSideAffixedNode <em>Gen Child Side Affixed Node</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildSideAffixedNode
	 * @@generated
	 */
	public Adapter createGenChildSideAffixedNodeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildLabelNode <em>Gen Child Label Node</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildLabelNode
	 * @@generated
	 */
	public Adapter createGenChildLabelNodeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment <em>Gen Compartment</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCompartment
	 * @@generated
	 */
	public Adapter createGenCompartmentAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer <em>Gen Child Container</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildContainer
	 * @@generated
	 */
	public Adapter createGenChildContainerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLink <em>Gen Link</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLink
	 * @@generated
	 */
	public Adapter createGenLinkAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel <em>Gen Label</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLabel
	 * @@generated
	 */
	public Adapter createGenLabelAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenNodeLabel <em>Gen Node Label</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNodeLabel
	 * @@generated
	 */
	public Adapter createGenNodeLabelAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel <em>Gen External Node Label</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel
	 * @@generated
	 */
	public Adapter createGenExternalNodeLabelAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLinkLabel <em>Gen Link Label</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLinkLabel
	 * @@generated
	 */
	public Adapter createGenLinkLabelAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ModelFacet <em>Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ModelFacet
	 * @@generated
	 */
	public Adapter createModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LinkModelFacet <em>Link Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LinkModelFacet
	 * @@generated
	 */
	public Adapter createLinkModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LabelModelFacet <em>Label Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelModelFacet
	 * @@generated
	 */
	public Adapter createLabelModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.TypeModelFacet <em>Type Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.TypeModelFacet
	 * @@generated
	 */
	public Adapter createTypeModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet <em>Feature Label Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet
	 * @@generated
	 */
	public Adapter createFeatureLabelModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet <em>Design Label Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet
	 * @@generated
	 */
	public Adapter createDesignLabelModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet <em>Type Link Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet
	 * @@generated
	 */
	public Adapter createTypeLinkModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet <em>Feature Link Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet
	 * @@generated
	 */
	public Adapter createFeatureLinkModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.Viewmap <em>Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.Viewmap
	 * @@generated
	 */
	public Adapter createViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.Attributes <em>Attributes</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.Attributes
	 * @@generated
	 */
	public Adapter createAttributesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ColorAttributes <em>Color Attributes</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ColorAttributes
	 * @@generated
	 */
	public Adapter createColorAttributesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.StyleAttributes <em>Style Attributes</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.StyleAttributes
	 * @@generated
	 */
	public Adapter createStyleAttributesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ResizeConstraints <em>Resize Constraints</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ResizeConstraints
	 * @@generated
	 */
	public Adapter createResizeConstraintsAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.DefaultSizeAttributes <em>Default Size Attributes</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.DefaultSizeAttributes
	 * @@generated
	 */
	public Adapter createDefaultSizeAttributesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LabelOffsetAttributes <em>Label Offset Attributes</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelOffsetAttributes
	 * @@generated
	 */
	public Adapter createLabelOffsetAttributesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.FigureViewmap <em>Figure Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.FigureViewmap
	 * @@generated
	 */
	public Adapter createFigureViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.SnippetViewmap <em>Snippet Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.SnippetViewmap
	 * @@generated
	 */
	public Adapter createSnippetViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap <em>Inner Class Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap
	 * @@generated
	 */
	public Adapter createInnerClassViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ParentAssignedViewmap <em>Parent Assigned Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ParentAssignedViewmap
	 * @@generated
	 */
	public Adapter createParentAssignedViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.Palette <em>Palette</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.Palette
	 * @@generated
	 */
	public Adapter createPaletteAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.EntryBase <em>Entry Base</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.EntryBase
	 * @@generated
	 */
	public Adapter createEntryBaseAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.AbstractToolEntry <em>Abstract Tool Entry</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.AbstractToolEntry
	 * @@generated
	 */
	public Adapter createAbstractToolEntryAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ToolEntry <em>Tool Entry</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ToolEntry
	 * @@generated
	 */
	public Adapter createToolEntryAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.StandardEntry <em>Standard Entry</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.StandardEntry
	 * @@generated
	 */
	public Adapter createStandardEntryAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ToolGroupItem <em>Tool Group Item</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ToolGroupItem
	 * @@generated
	 */
	public Adapter createToolGroupItemAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.Separator <em>Separator</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.Separator
	 * @@generated
	 */
	public Adapter createSeparatorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ToolGroup <em>Tool Group</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ToolGroup
	 * @@generated
	 */
	public Adapter createToolGroupAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenElementInitializer <em>Gen Element Initializer</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenElementInitializer
	 * @@generated
	 */
	public Adapter createGenElementInitializerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer <em>Gen Feature Seq Initializer</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer
	 * @@generated
	 */
	public Adapter createGenFeatureSeqInitializerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec <em>Gen Feature Value Spec</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec
	 * @@generated
	 */
	public Adapter createGenFeatureValueSpecAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenReferenceNewElementSpec <em>Gen Reference New Element Spec</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenReferenceNewElementSpec
	 * @@generated
	 */
	public Adapter createGenReferenceNewElementSpecAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenFeatureInitializer <em>Gen Feature Initializer</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenFeatureInitializer
	 * @@generated
	 */
	public Adapter createGenFeatureInitializerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints <em>Gen Link Constraints</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints
	 * @@generated
	 */
	public Adapter createGenLinkConstraintsAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot <em>Gen Audit Root</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditRoot
	 * @@generated
	 */
	public Adapter createGenAuditRootAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer <em>Gen Audit Container</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer
	 * @@generated
	 */
	public Adapter createGenAuditContainerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule <em>Gen Audit Rule</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditRule
	 * @@generated
	 */
	public Adapter createGenAuditRuleAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenRuleTarget <em>Gen Rule Target</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenRuleTarget
	 * @@generated
	 */
	public Adapter createGenRuleTargetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget <em>Gen Domain Element Target</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget
	 * @@generated
	 */
	public Adapter createGenDomainElementTargetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget <em>Gen Diagram Element Target</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget
	 * @@generated
	 */
	public Adapter createGenDiagramElementTargetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenDomainAttributeTarget <em>Gen Domain Attribute Target</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDomainAttributeTarget
	 * @@generated
	 */
	public Adapter createGenDomainAttributeTargetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget <em>Gen Notation Element Target</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget
	 * @@generated
	 */
	public Adapter createGenNotationElementTargetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenMetricContainer <em>Gen Metric Container</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenMetricContainer
	 * @@generated
	 */
	public Adapter createGenMetricContainerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenMetricRule <em>Gen Metric Rule</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenMetricRule
	 * @@generated
	 */
	public Adapter createGenMetricRuleAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditedMetricTarget <em>Gen Audited Metric Target</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditedMetricTarget
	 * @@generated
	 */
	public Adapter createGenAuditedMetricTargetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditable <em>Gen Auditable</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditable
	 * @@generated
	 */
	public Adapter createGenAuditableAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContext <em>Gen Audit Context</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditContext
	 * @@generated
	 */
	public Adapter createGenAuditContextAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenMeasurable <em>Gen Measurable</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenMeasurable
	 * @@generated
	 */
	public Adapter createGenMeasurableAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer <em>Gen Expression Provider Container</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer
	 * @@generated
	 */
	public Adapter createGenExpressionProviderContainerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase <em>Gen Expression Provider Base</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase
	 * @@generated
	 */
	public Adapter createGenExpressionProviderBaseAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider <em>Gen Java Expression Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider
	 * @@generated
	 */
	public Adapter createGenJavaExpressionProviderAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter <em>Gen Expression Interpreter</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter
	 * @@generated
	 */
	public Adapter createGenExpressionInterpreterAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLiteralExpressionProvider <em>Gen Literal Expression Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLiteralExpressionProvider
	 * @@generated
	 */
	public Adapter createGenLiteralExpressionProviderAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenDomainModelNavigator <em>Gen Domain Model Navigator</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDomainModelNavigator
	 * @@generated
	 */
	public Adapter createGenDomainModelNavigatorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenNavigator <em>Gen Navigator</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNavigator
	 * @@generated
	 */
	public Adapter createGenNavigatorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorChildReference <em>Gen Navigator Child Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNavigatorChildReference
	 * @@generated
	 */
	public Adapter createGenNavigatorChildReferenceAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorPath <em>Gen Navigator Path</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNavigatorPath
	 * @@generated
	 */
	public Adapter createGenNavigatorPathAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorPathSegment <em>Gen Navigator Path Segment</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNavigatorPathSegment
	 * @@generated
	 */
	public Adapter createGenNavigatorPathSegmentAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenPropertySheet <em>Gen Property Sheet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPropertySheet
	 * @@generated
	 */
	public Adapter createGenPropertySheetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenPropertyTab <em>Gen Property Tab</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPropertyTab
	 * @@generated
	 */
	public Adapter createGenPropertyTabAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenStandardPropertyTab <em>Gen Standard Property Tab</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenStandardPropertyTab
	 * @@generated
	 */
	public Adapter createGenStandardPropertyTabAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCustomPropertyTab <em>Gen Custom Property Tab</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCustomPropertyTab
	 * @@generated
	 */
	public Adapter createGenCustomPropertyTabAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenPropertyTabFilter <em>Gen Property Tab Filter</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPropertyTabFilter
	 * @@generated
	 */
	public Adapter createGenPropertyTabFilterAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.TypeTabFilter <em>Type Tab Filter</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.TypeTabFilter
	 * @@generated
	 */
	public Adapter createTypeTabFilterAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.CustomTabFilter <em>Custom Tab Filter</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CustomTabFilter
	 * @@generated
	 */
	public Adapter createCustomTabFilterAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenContributionItem <em>Gen Contribution Item</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenContributionItem
	 * @@generated
	 */
	public Adapter createGenContributionItemAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenSharedContributionItem <em>Gen Shared Contribution Item</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenSharedContributionItem
	 * @@generated
	 */
	public Adapter createGenSharedContributionItemAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenGroupMarker <em>Gen Group Marker</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenGroupMarker
	 * @@generated
	 */
	public Adapter createGenGroupMarkerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenSeparator <em>Gen Separator</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenSeparator
	 * @@generated
	 */
	public Adapter createGenSeparatorAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCustomAction <em>Gen Custom Action</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCustomAction
	 * @@generated
	 */
	public Adapter createGenCustomActionAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommandAction <em>Gen Command Action</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCommandAction
	 * @@generated
	 */
	public Adapter createGenCommandActionAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenAction <em>Gen Action</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAction
	 * @@generated
	 */
	public Adapter createGenActionAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LoadResourceAction <em>Load Resource Action</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LoadResourceAction
	 * @@generated
	 */
	public Adapter createLoadResourceActionAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.InitDiagramAction <em>Init Diagram Action</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.InitDiagramAction
	 * @@generated
	 */
	public Adapter createInitDiagramActionAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.CreateShortcutAction <em>Create Shortcut Action</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CreateShortcutAction
	 * @@generated
	 */
	public Adapter createCreateShortcutActionAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenActionFactoryContributionItem <em>Gen Action Factory Contribution Item</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenActionFactoryContributionItem
	 * @@generated
	 */
	public Adapter createGenActionFactoryContributionItemAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenContributionManager <em>Gen Contribution Manager</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenContributionManager
	 * @@generated
	 */
	public Adapter createGenContributionManagerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenMenuManager <em>Gen Menu Manager</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenMenuManager
	 * @@generated
	 */
	public Adapter createGenMenuManagerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenToolBarManager <em>Gen Tool Bar Manager</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenToolBarManager
	 * @@generated
	 */
	public Adapter createGenToolBarManagerAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenContextMenu <em>Gen Context Menu</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenContextMenu
	 * @@generated
	 */
	public Adapter createGenContextMenuAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenApplication <em>Gen Application</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenApplication
	 * @@generated
	 */
	public Adapter createGenApplicationAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLinkEnd <em>Gen Link End</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLinkEnd
	 * @@generated
	 */
	public Adapter createGenLinkEndAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenParsers <em>Gen Parsers</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenParsers
	 * @@generated
	 */
	public Adapter createGenParsersAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenParserImplementation <em>Gen Parser Implementation</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenParserImplementation
	 * @@generated
	 */
	public Adapter createGenParserImplementationAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.PredefinedParser <em>Predefined Parser</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.PredefinedParser
	 * @@generated
	 */
	public Adapter createPredefinedParserAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.CustomParser <em>Custom Parser</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CustomParser
	 * @@generated
	 */
	public Adapter createCustomParserAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ExternalParser <em>External Parser</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ExternalParser
	 * @@generated
	 */
	public Adapter createExternalParserAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenRuleBase <em>Gen Rule Base</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenRuleBase
	 * @@generated
	 */
	public Adapter createGenRuleBaseAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression <em>Value Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ValueExpression
	 * @@generated
	 */
	public Adapter createValueExpressionAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenConstraint <em>Gen Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenConstraint
	 * @@generated
	 */
	public Adapter createGenConstraintAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for the default case.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@generated
	 */
	public Adapter createEObjectAdapter() {
		return null;
	}

} //GMFGenAdapterFactory@


1.76
log
@[174961] Menu actions - refactor previously generated actions to match general approach.
@
text
@d124 4
d818 14
@


1.75
log
@[174961] Code generation support for custom actions
@
text
@d548 16
d2256 56
@


1.74
log
@[235113] alternative parser access, step 1: introduce separate entity into genmodel to keep track of attributes related to parsing
@
text
@d540 8
d564 4
d2212 28
d2296 14
@


1.73
log
@[243151] mgolubev - explicit source/target for links
@
text
@d564 20
d2284 70
@


1.72
log
@[227127] support literal values for feature initializers. step 1: models updated to specify new possible values
@
text
@d560 4
d2250 14
@


1.71
log
@[226149] Refactor Validation/Constraints: explicit context groupings instead of ID matching, unused IClientSelectors implementations are no longer generated, less custom code in the model, odd approach with map (semanticCtxIdMap) replaced with in-place VisualID check.
@
text
@d472 4
d1938 14
@


1.70
log
@[150177] phase II, generated facility to perform metamodel operations (like instanceof or metaclass accessors) with dynamic models, new gmfgen options to parameterize codegen.
@
text
@d448 4
d1850 14
@


1.69
log
@regenerated using M3
@
text
@d164 4
d894 14
@


1.68
log
@GenDiagramUpdater created in .gmfgen model
@
text
@d64 1
a64 1
	 * The switch the delegates to the <code>createXXX</code> methods.
@


1.67
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d156 2
a157 2
			public Adapter caseUpdater(Updater object) {
				return createUpdaterAdapter();
d862 1
a862 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.Updater <em>Updater</em>}'.
d868 1
a868 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.Updater
d871 1
a871 1
	public Adapter createUpdaterAdapter() {
@


1.66
log
@Generating generic navigator providers for domain model.
@
text
@d156 4
d862 14
@


1.65
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d460 4
d1880 14
@


1.64
log
@get rid of GenRuleContainerBase
@
text
@d52 1
d69 4
a72 3
	protected GMFGenSwitch modelSwitch =
		new GMFGenSwitch() {
			public Object caseGenEditorGenerator(GenEditorGenerator object) {
d75 2
a76 1
			public Object caseGenDiagram(GenDiagram object) {
d79 2
a80 1
			public Object caseGenEditorView(GenEditorView object) {
d83 2
a84 1
			public Object caseGenPreferencePage(GenPreferencePage object) {
d87 2
a88 1
			public Object caseGenCustomPreferencePage(GenCustomPreferencePage object) {
d91 2
a92 1
			public Object caseGenStandardPreferencePage(GenStandardPreferencePage object) {
d95 2
a96 1
			public Object caseGenDiagramPreferences(GenDiagramPreferences object) {
d99 2
a100 1
			public Object caseGenFont(GenFont object) {
d103 2
a104 1
			public Object caseGenStandardFont(GenStandardFont object) {
d107 2
a108 1
			public Object caseGenCustomFont(GenCustomFont object) {
d111 2
a112 1
			public Object caseGenColor(GenColor object) {
d115 2
a116 1
			public Object caseGenRGBColor(GenRGBColor object) {
d119 2
a120 1
			public Object caseGenConstantColor(GenConstantColor object) {
d123 2
a124 1
			public Object caseBatchValidation(BatchValidation object) {
d127 2
a128 1
			public Object caseProviderClassNames(ProviderClassNames object) {
d131 2
a132 1
			public Object caseShortcuts(Shortcuts object) {
d135 2
a136 1
			public Object casePackageNames(PackageNames object) {
d139 2
a140 1
			public Object caseLinkConstraints(LinkConstraints object) {
d143 2
a144 1
			public Object caseEditorCandies(EditorCandies object) {
d147 2
a148 1
			public Object caseEditPartCandies(EditPartCandies object) {
d151 2
a152 1
			public Object caseMeasurementUnit(MeasurementUnit object) {
d155 2
a156 1
			public Object caseGenPlugin(GenPlugin object) {
d159 2
a160 1
			public Object caseGenCommonBase(GenCommonBase object) {
d163 2
a164 1
			public Object caseBehaviour(Behaviour object) {
d167 2
a168 1
			public Object caseCustomBehaviour(CustomBehaviour object) {
d171 2
a172 1
			public Object caseSharedBehaviour(SharedBehaviour object) {
d175 2
a176 1
			public Object caseOpenDiagramBehaviour(OpenDiagramBehaviour object) {
d179 2
a180 1
			public Object caseGenContainerBase(GenContainerBase object) {
d183 2
a184 1
			public Object caseGenChildContainer(GenChildContainer object) {
d187 2
a188 1
			public Object caseGenNode(GenNode object) {
d191 2
a192 1
			public Object caseGenTopLevelNode(GenTopLevelNode object) {
d195 2
a196 1
			public Object caseGenChildNode(GenChildNode object) {
d199 2
a200 1
			public Object caseGenChildSideAffixedNode(GenChildSideAffixedNode object) {
d203 2
a204 1
			public Object caseGenChildLabelNode(GenChildLabelNode object) {
d207 2
a208 1
			public Object caseGenCompartment(GenCompartment object) {
d211 2
a212 1
			public Object caseGenLink(GenLink object) {
d215 2
a216 1
			public Object caseGenLabel(GenLabel object) {
d219 2
a220 1
			public Object caseGenNodeLabel(GenNodeLabel object) {
d223 2
a224 1
			public Object caseGenExternalNodeLabel(GenExternalNodeLabel object) {
d227 2
a228 1
			public Object caseGenLinkLabel(GenLinkLabel object) {
d231 2
a232 1
			public Object caseElementType(ElementType object) {
d235 2
a236 1
			public Object caseMetamodelType(MetamodelType object) {
d239 2
a240 1
			public Object caseSpecializationType(SpecializationType object) {
d243 2
a244 1
			public Object caseNotationType(NotationType object) {
d247 2
a248 1
			public Object caseModelFacet(ModelFacet object) {
d251 2
a252 1
			public Object caseLinkModelFacet(LinkModelFacet object) {
d255 2
a256 1
			public Object caseLabelModelFacet(LabelModelFacet object) {
d259 2
a260 1
			public Object caseTypeModelFacet(TypeModelFacet object) {
d263 2
a264 1
			public Object caseTypeLinkModelFacet(TypeLinkModelFacet object) {
d267 2
a268 1
			public Object caseFeatureLinkModelFacet(FeatureLinkModelFacet object) {
d271 2
a272 1
			public Object caseFeatureLabelModelFacet(FeatureLabelModelFacet object) {
d275 2
a276 1
			public Object caseDesignLabelModelFacet(DesignLabelModelFacet object) {
d279 2
a280 1
			public Object caseAttributes(Attributes object) {
d283 2
a284 1
			public Object caseColorAttributes(ColorAttributes object) {
d287 2
a288 1
			public Object caseStyleAttributes(StyleAttributes object) {
d291 2
a292 1
			public Object caseResizeConstraints(ResizeConstraints object) {
d295 2
a296 1
			public Object caseDefaultSizeAttributes(DefaultSizeAttributes object) {
d299 2
a300 1
			public Object caseLabelOffsetAttributes(LabelOffsetAttributes object) {
d303 2
a304 1
			public Object caseViewmap(Viewmap object) {
d307 2
a308 1
			public Object caseFigureViewmap(FigureViewmap object) {
d311 2
a312 1
			public Object caseSnippetViewmap(SnippetViewmap object) {
d315 2
a316 1
			public Object caseInnerClassViewmap(InnerClassViewmap object) {
d319 2
a320 1
			public Object caseParentAssignedViewmap(ParentAssignedViewmap object) {
d323 2
a324 1
			public Object caseValueExpression(ValueExpression object) {
d327 2
a328 1
			public Object caseGenConstraint(GenConstraint object) {
d331 2
a332 1
			public Object casePalette(Palette object) {
d335 2
a336 1
			public Object caseEntryBase(EntryBase object) {
d339 2
a340 1
			public Object caseAbstractToolEntry(AbstractToolEntry object) {
d343 2
a344 1
			public Object caseToolEntry(ToolEntry object) {
d347 2
a348 1
			public Object caseStandardEntry(StandardEntry object) {
d351 2
a352 1
			public Object caseToolGroupItem(ToolGroupItem object) {
d355 2
a356 1
			public Object caseSeparator(Separator object) {
d359 2
a360 1
			public Object caseToolGroup(ToolGroup object) {
d363 2
a364 1
			public Object caseGenElementInitializer(GenElementInitializer object) {
d367 2
a368 1
			public Object caseGenFeatureSeqInitializer(GenFeatureSeqInitializer object) {
d371 2
a372 1
			public Object caseGenFeatureValueSpec(GenFeatureValueSpec object) {
d375 2
a376 1
			public Object caseGenReferenceNewElementSpec(GenReferenceNewElementSpec object) {
d379 2
a380 1
			public Object caseGenFeatureInitializer(GenFeatureInitializer object) {
d383 2
a384 1
			public Object caseGenLinkConstraints(GenLinkConstraints object) {
d387 2
a388 1
			public Object caseGenAuditRoot(GenAuditRoot object) {
d391 2
a392 1
			public Object caseGenAuditContainer(GenAuditContainer object) {
d395 2
a396 1
			public Object caseGenRuleBase(GenRuleBase object) {
d399 2
a400 1
			public Object caseGenAuditRule(GenAuditRule object) {
d403 2
a404 1
			public Object caseGenRuleTarget(GenRuleTarget object) {
d407 2
a408 1
			public Object caseGenDomainElementTarget(GenDomainElementTarget object) {
d411 2
a412 1
			public Object caseGenDiagramElementTarget(GenDiagramElementTarget object) {
d415 2
a416 1
			public Object caseGenDomainAttributeTarget(GenDomainAttributeTarget object) {
d419 2
a420 1
			public Object caseGenNotationElementTarget(GenNotationElementTarget object) {
d423 2
a424 1
			public Object caseGenMetricContainer(GenMetricContainer object) {
d427 2
a428 1
			public Object caseGenMetricRule(GenMetricRule object) {
d431 2
a432 1
			public Object caseGenAuditedMetricTarget(GenAuditedMetricTarget object) {
d435 2
a436 1
			public Object caseGenAuditable(GenAuditable object) {
d439 2
a440 1
			public Object caseGenMeasurable(GenMeasurable object) {
d443 2
a444 1
			public Object caseGenExpressionProviderContainer(GenExpressionProviderContainer object) {
d447 2
a448 1
			public Object caseGenExpressionProviderBase(GenExpressionProviderBase object) {
d451 2
a452 1
			public Object caseGenJavaExpressionProvider(GenJavaExpressionProvider object) {
d455 2
a456 1
			public Object caseGenExpressionInterpreter(GenExpressionInterpreter object) {
d459 2
a460 1
			public Object caseGenNavigator(GenNavigator object) {
d463 2
a464 1
			public Object caseGenNavigatorChildReference(GenNavigatorChildReference object) {
d467 2
a468 1
			public Object caseGenNavigatorPath(GenNavigatorPath object) {
d471 2
a472 1
			public Object caseGenNavigatorPathSegment(GenNavigatorPathSegment object) {
d475 2
a476 1
			public Object caseGenPropertySheet(GenPropertySheet object) {
d479 2
a480 1
			public Object caseGenPropertyTab(GenPropertyTab object) {
d483 2
a484 1
			public Object caseGenStandardPropertyTab(GenStandardPropertyTab object) {
d487 2
a488 1
			public Object caseGenCustomPropertyTab(GenCustomPropertyTab object) {
d491 2
a492 1
			public Object caseGenPropertyTabFilter(GenPropertyTabFilter object) {
d495 2
a496 1
			public Object caseTypeTabFilter(TypeTabFilter object) {
d499 2
a500 1
			public Object caseCustomTabFilter(CustomTabFilter object) {
d503 2
a504 1
			public Object caseGenContributionItem(GenContributionItem object) {
d507 2
a508 1
			public Object caseGenSharedContributionItem(GenSharedContributionItem object) {
d511 2
a512 1
			public Object caseGenGroupMarker(GenGroupMarker object) {
d515 2
a516 1
			public Object caseGenSeparator(GenSeparator object) {
d519 2
a520 1
			public Object caseGenActionFactoryContributionItem(GenActionFactoryContributionItem object) {
d523 2
a524 1
			public Object caseGenContributionManager(GenContributionManager object) {
d527 2
a528 1
			public Object caseGenMenuManager(GenMenuManager object) {
d531 2
a532 1
			public Object caseGenToolBarManager(GenToolBarManager object) {
d535 2
a536 1
			public Object caseGenApplication(GenApplication object) {
d539 2
a540 1
			public Object defaultCase(EObject object) {
d553 1
d555 1
a555 1
		return (Adapter)modelSwitch.doSwitch((EObject)target);
@


1.63
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@a14 75
import org.eclipse.gmf.codegen.gmfgen.Attributes;
import org.eclipse.gmf.codegen.gmfgen.BatchValidation;
import org.eclipse.gmf.codegen.gmfgen.ColorAttributes;
import org.eclipse.gmf.codegen.gmfgen.DefaultSizeAttributes;
import org.eclipse.gmf.codegen.gmfgen.EditPartCandies;
import org.eclipse.gmf.codegen.gmfgen.EditorCandies;
import org.eclipse.gmf.codegen.gmfgen.ElementType;
import org.eclipse.gmf.codegen.gmfgen.EntryBase;
import org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet;
import org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.FigureViewmap;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenAuditContainer;
import org.eclipse.gmf.codegen.gmfgen.GenAuditRule;
import org.eclipse.gmf.codegen.gmfgen.GenAuditable;
import org.eclipse.gmf.codegen.gmfgen.GenAuditedMetricTarget;
import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;
import org.eclipse.gmf.codegen.gmfgen.GenChildNode;
import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
import org.eclipse.gmf.codegen.gmfgen.GenCompartment;
import org.eclipse.gmf.codegen.gmfgen.GenConstraint;
import org.eclipse.gmf.codegen.gmfgen.GenContainerBase;
import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
import org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget;
import org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
import org.eclipse.gmf.codegen.gmfgen.GenEditorView;
import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;
import org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter;
import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase;
import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer;
import org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel;
import org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer;
import org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec;
import org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider;
import org.eclipse.gmf.codegen.gmfgen.GenLabel;
import org.eclipse.gmf.codegen.gmfgen.GenLink;
import org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints;
import org.eclipse.gmf.codegen.gmfgen.GenLinkLabel;
import org.eclipse.gmf.codegen.gmfgen.GenMeasurable;
import org.eclipse.gmf.codegen.gmfgen.GenMetricContainer;
import org.eclipse.gmf.codegen.gmfgen.GenMetricRule;
import org.eclipse.gmf.codegen.gmfgen.GenNode;
import org.eclipse.gmf.codegen.gmfgen.GenNodeLabel;
import org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget;
import org.eclipse.gmf.codegen.gmfgen.GenPlugin;
import org.eclipse.gmf.codegen.gmfgen.GenRuleBase;
import org.eclipse.gmf.codegen.gmfgen.GenRuleContainerBase;
import org.eclipse.gmf.codegen.gmfgen.GenRuleTarget;
import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;
import org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap;
import org.eclipse.gmf.codegen.gmfgen.LabelModelFacet;
import org.eclipse.gmf.codegen.gmfgen.LabelOffsetAttributes;
import org.eclipse.gmf.codegen.gmfgen.LinkConstraints;
import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.MeasurementUnit;
import org.eclipse.gmf.codegen.gmfgen.MetamodelType;
import org.eclipse.gmf.codegen.gmfgen.ModelFacet;
import org.eclipse.gmf.codegen.gmfgen.NotationType;
import org.eclipse.gmf.codegen.gmfgen.PackageNames;
import org.eclipse.gmf.codegen.gmfgen.Palette;
import org.eclipse.gmf.codegen.gmfgen.ProviderClassNames;
import org.eclipse.gmf.codegen.gmfgen.ResizeConstraints;
import org.eclipse.gmf.codegen.gmfgen.Separator;
import org.eclipse.gmf.codegen.gmfgen.Shortcuts;
import org.eclipse.gmf.codegen.gmfgen.SnippetViewmap;
import org.eclipse.gmf.codegen.gmfgen.SpecializationType;
import org.eclipse.gmf.codegen.gmfgen.ToolEntry;
import org.eclipse.gmf.codegen.gmfgen.ToolGroup;
import org.eclipse.gmf.codegen.gmfgen.ToolGroupItem;
import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;
import org.eclipse.gmf.codegen.gmfgen.ValueExpression;
import org.eclipse.gmf.codegen.gmfgen.Viewmap;

a306 3
			public Object caseGenRuleContainerBase(GenRuleContainerBase object) {
				return createGenRuleContainerBaseAdapter();
			}
a1517 14
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenRuleContainerBase <em>Gen Rule Container Base</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenRuleContainerBase
	 * @@generated
	 */
	public Adapter createGenRuleContainerBaseAdapter() {
		return null;
	}

	/**
@


1.62
log
@[134107] add entities for preference pages
@
text
@d385 3
d1610 14
@


1.61
log
@NavigatorContentProvider template reimplemented on xpand
@
text
@d154 9
d557 42
@


1.60
log
@[134107] Provide preferences for the generated diagram editors
@
text
@d433 6
d1808 28
@


1.59
log
@allow to specify ui contributions for rcp application in genmodel
@
text
@d154 21
d542 98
@


1.58
log
@[164021] allow to choose standard tools
@
text
@d433 24
d1781 112
@


1.57
log
@#161380 simplify feature model facets
@
text
@d316 3
d322 3
d1225 14
d1253 14
@


1.56
log
@[119465] support for diagram partitioning - started to reorganize the way we store behaviours in the genmodel - let them be reused. OpenDiagram as an example of new way to add behaviours.
@
text
@a17 2
import org.eclipse.gmf.codegen.gmfgen.CompositeFeatureLabelModelFacet;
import org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet;
a24 1
import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;
a258 6
			public Object caseFeatureModelFacet(FeatureModelFacet object) {
				return createFeatureModelFacetAdapter();
			}
			public Object caseCompositeFeatureModelFacet(CompositeFeatureModelFacet object) {
				return createCompositeFeatureModelFacetAdapter();
			}
a267 3
			public Object caseCompositeFeatureLabelModelFacet(CompositeFeatureLabelModelFacet object) {
				return createCompositeFeatureLabelModelFacetAdapter();
			}
a980 14
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet <em>Feature Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet
	 * @@generated
	 */
	public Adapter createFeatureModelFacetAdapter() {
		return null;
	}

	/**
a994 28
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet <em>Composite Feature Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet
	 * @@generated
	 */
	public Adapter createCompositeFeatureModelFacetAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.CompositeFeatureLabelModelFacet <em>Composite Feature Label Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompositeFeatureLabelModelFacet
	 * @@generated
	 */
	public Adapter createCompositeFeatureLabelModelFacetAdapter() {
		return null;
	}

	/**
@


1.55
log
@#114200 Provide an option to generate RCP application
@
text
@d187 3
d193 6
d699 14
d727 28
@


1.54
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d430 3
d1726 14
@


1.53
log
@Model navigator, initial version.
@
text
@d409 21
d1625 98
@


1.52
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
- updating gmfgen
@
text
@d403 6
d1576 28
d1657 1
a1657 1
} //GMFGenAdapterFactory
@


1.51
log
@[124826] mgolubev - Support nodes with border items
@
text
@d340 6
d1290 28
@


1.50
log
@add custom behaviour
@
text
@d205 3
d724 14
@


1.49
log
@[mgolubev] #145863 Colors defined in the gmfgraph model should be used by the generated polyline connections
@
text
@d187 3
d651 14
@


1.48
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d274 3
d1012 14
@


1.47
log
@heading towards explicit use of parent's figure in children
@
text
@d265 3
d925 14
@


1.46
log
@#133836 Creating a child node without a label causes error
@
text
@d292 3
d1076 14
@


1.45
log
@#138464 Support EAttribute based target in AuditRule element
@
text
@d202 3
d695 14
@


1.44
log
@#136877 Provide inital offset from the host link for the link label
@
text
@d13 2
d346 3
d1280 14
@


1.43
log
@#131270 Duplicated tool entries when same tool definition is referenced from gmfmap.
@
text
@d68 1
d272 3
d995 14
@


1.42
log
@[#134511] common access to expressions of different languages
@
text
@a12 2
import org.eclipse.gmf.codegen.gmfgen.*;

d44 3
d50 1
a68 1
import org.eclipse.gmf.codegen.gmfgen.LinkEntry;
d71 1
d73 1
a73 1
import org.eclipse.gmf.codegen.gmfgen.NodeEntry;
d78 1
d81 1
d84 1
d298 2
a299 2
			public Object caseNodeEntry(NodeEntry object) {
				return createNodeEntryAdapter();
d301 2
a302 2
			public Object caseLinkEntry(LinkEntry object) {
				return createLinkEntryAdapter();
d1075 1
a1075 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.NodeEntry <em>Node Entry</em>}'.
d1081 1
a1081 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.NodeEntry
d1084 1
a1084 1
	public Adapter createNodeEntryAdapter() {
d1089 1
a1089 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LinkEntry <em>Link Entry</em>}'.
d1095 1
a1095 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.LinkEntry
d1098 1
a1098 1
	public Adapter createLinkEntryAdapter() {
@


1.41
log
@#126200 register element types in xml
@
text
@d353 12
d1336 56
@


1.40
log
@#126200 register element types in xml
@
text
@d13 2
a175 3
			public Object caseElementType(ElementType object) {
				return createElementTypeAdapter();
			}
d212 12
d554 42
@


1.39
log
@#114061 Support shape with fixed horizontal/vertical size. First, 'resize' part of the request was covered.
Obsolete ShapeAttributes class was deleted, same attributes should be set in gmfgraph now.
@
text
@d21 1
d174 3
d529 14
@


1.38
log
@#129145 do not use intermediate TextCompartmentEditParts
@
text
@a12 2
import org.eclipse.gmf.codegen.gmfgen.*;

d29 2
d50 3
d66 1
d72 1
a72 1
import org.eclipse.gmf.codegen.gmfgen.ShapeAttributes;
d245 2
a246 2
			public Object caseShapeAttributes(ShapeAttributes object) {
				return createShapeAttributesAdapter();
d875 1
a875 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ShapeAttributes <em>Shape Attributes</em>}'.
d881 1
a881 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.ShapeAttributes
d884 1
a884 1
	public Adapter createShapeAttributesAdapter() {
@


1.37
log
@added attribute to match measurement unit setting of notation diagram
@
text
@a23 1
import org.eclipse.gmf.codegen.gmfgen.ExternalLabel;
a195 3
			public Object caseExternalLabel(ExternalLabel object) {
				return createExternalLabelAdapter();
			}
a646 14
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ExternalLabel <em>External Label</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.ExternalLabel
	 * @@generated
	 */
	public Adapter createExternalLabelAdapter() {
		return null;
	}

	/**
@


1.36
log
@#130715 Use default label text defined in gmfgraph model
@
text
@d164 3
d497 14
@


1.35
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@a71 1
import org.eclipse.gmf.codegen.gmfgen.TextLabelModelFacet;
a214 3
			public Object caseTextLabelModelFacet(TextLabelModelFacet object) {
				return createTextLabelModelFacetAdapter();
			}
a731 14
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.TextLabelModelFacet <em>Text Label Model Facet</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.TextLabelModelFacet
	 * @@generated
	 */
	public Adapter createTextLabelModelFacetAdapter() {
		return null;
	}

	/**
@


1.34
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@d13 2
d324 15
d1198 70
@


1.33
log
@organized imports
@
text
@d37 2
d51 1
d53 3
d298 3
d304 3
d310 12
d1083 14
d1125 70
@


1.32
log
@#126245 configurable priorities
@
text
@a12 2
import org.eclipse.gmf.codegen.gmfgen.*;

@


1.31
log
@organized imports
@
text
@d13 2
@


1.30
log
@[rdvorak] #127700 Rename genmodel::ModelElementSelector as a generic GenConstraint element
@
text
@a12 2
import org.eclipse.gmf.codegen.gmfgen.*;

@


1.29
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d16 1
d18 2
d21 2
d25 2
d33 1
d36 2
d39 2
d51 2
d54 2
a57 1
import org.eclipse.gmf.codegen.gmfgen.ModelElementSelector;
d60 1
d62 1
d64 1
d66 1
d261 2
a262 2
			public Object caseModelElementSelector(ModelElementSelector object) {
				return createModelElementSelectorAdapter();
d1103 1
a1103 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.ModelElementSelector <em>Model Element Selector</em>}'.
d1109 1
a1109 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.ModelElementSelector
d1112 1
a1112 1
	public Adapter createModelElementSelectorAdapter() {
@


1.28
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d116 3
d328 14
@


1.27
log
@#126533 It should be possible to specify a label with fixed text in gmfgen model
@
text
@d110 3
d297 14
@


1.26
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@d185 3
d644 14
@


1.25
log
@#125729 Support labels based on multiple structural features
@
text
@d197 9
d669 14
d697 14
d725 14
@


1.24
log
@GenDiagram "slicing" goes on and this time attributes related to plugin activator class were moved into separate entity
@
text
@d182 3
d191 3
d618 14
d660 14
@


1.23
log
@split that eyeball teaser, GenDiagram, into smaller parts, aiming to hack it further later on
@
text
@d134 3
d388 14
@


1.22
log
@rename GenContainerEditPart -> GenContainerBase
@
text
@d113 21
d287 98
@


1.21
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d116 2
a117 2
			public Object caseGenContainerEditPart(GenContainerEditPart object) {
				return createGenContainerEditPartAdapter();
d280 1
a280 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenContainerEditPart <em>Gen Container Edit Part</em>}'.
d286 1
a286 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenContainerEditPart
d289 1
a289 1
	public Adapter createGenContainerEditPartAdapter() {
@


1.20
log
@#122054 support external node labels (partial fix)
@
text
@d16 1
d19 1
d23 2
a25 1
import org.eclipse.gmf.codegen.gmfgen.GenChildNode;
d30 1
d39 1
d116 3
d125 2
a126 2
			public Object caseGenCompartment(GenCompartment object) {
				return createGenCompartmentAdapter();
d131 3
d280 14
d308 1
a308 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment <em>Gen Compartment</em>}'.
d314 1
a314 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCompartment
d317 1
a317 1
	public Adapter createGenCompartmentAdapter() {
d336 14
@


1.19
log
@[rdvorak] #123232 audits (ocl constraints) definition in genmodel
@
text
@d129 3
d135 3
d353 14
d381 14
@


1.18
log
@one more flavor of snippet viewmap - inner class
@
text
@d210 6
d697 28
@


1.17
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d171 3
d537 14
@


1.16
log
@[rdvorak] #117743 support for link creation constraints
@
text
@a15 2
import org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap;
import org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap;
d18 1
d24 1
d26 4
d31 2
d34 1
a34 1
import org.eclipse.gmf.codegen.gmfgen.LinkDecoration;
d36 3
d42 1
d45 3
d168 2
a169 17
			public Object caseBasicNodeViewmap(BasicNodeViewmap object) {
				return createBasicNodeViewmapAdapter();
			}
			public Object caseDecoratedConnectionViewmap(DecoratedConnectionViewmap object) {
				return createDecoratedConnectionViewmapAdapter();
			}
			public Object caseLinkDecoration(LinkDecoration object) {
				return createLinkDecorationAdapter();
			}
			public Object caseDiagramViewmap(DiagramViewmap object) {
				return createDiagramViewmapAdapter();
			}
			public Object caseCompartmentViewmap(CompartmentViewmap object) {
				return createCompartmentViewmapAdapter();
			}
			public Object caseLabelViewmap(LabelViewmap object) {
				return createLabelViewmapAdapter();
d520 1
a520 71
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap <em>Basic Node Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap
	 * @@generated
	 */
	public Adapter createBasicNodeViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap <em>Decorated Connection Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap
	 * @@generated
	 */
	public Adapter createDecoratedConnectionViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LinkDecoration <em>Link Decoration</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LinkDecoration
	 * @@generated
	 */
	public Adapter createLinkDecorationAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.DiagramViewmap <em>Diagram Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.DiagramViewmap
	 * @@generated
	 */
	public Adapter createDiagramViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.CompartmentViewmap <em>Compartment Viewmap</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompartmentViewmap
	 * @@generated
	 */
	public Adapter createCompartmentViewmapAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LabelViewmap <em>Label Viewmap</em>}'.
d526 1
a526 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelViewmap
d529 1
a529 1
	public Adapter createLabelViewmapAdapter() {
@


1.15
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@d206 3
d732 14
@


1.14
log
@[dsadnik] #113824 marker viewmaps for diagram, label and childcontainer
@
text
@d98 3
d104 2
a105 2
			public Object caseGenChildContainer(GenChildContainer object) {
				return createGenChildContainerAdapter();
d267 14
@


1.13
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@d161 9
d544 42
@


1.12
log
@[dstadnik] #113525 Get rid of LinkWithClass/LinkWithReference, use parallel hierarchy of modelFacet instead
@
text
@a21 1
import org.eclipse.gmf.codegen.gmfgen.GenBaseElement;
a97 3
			public Object caseGenBaseElement(GenBaseElement object) {
				return createGenBaseElementAdapter();
			}
a240 14
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenBaseElement <em>Gen Base Element</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenBaseElement
	 * @@generated
	 */
	public Adapter createGenBaseElementAdapter() {
		return null;
	}

	/**
@


1.11
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@a27 2
import org.eclipse.gmf.codegen.gmfgen.GenLinkReferenceOnly;
import org.eclipse.gmf.codegen.gmfgen.GenLinkWithClass;
a113 6
			public Object caseGenLinkWithClass(GenLinkWithClass object) {
				return createGenLinkWithClassAdapter();
			}
			public Object caseGenLinkReferenceOnly(GenLinkReferenceOnly object) {
				return createGenLinkReferenceOnlyAdapter();
			}
d126 3
a314 28
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLinkWithClass <em>Gen Link With Class</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLinkWithClass
	 * @@generated
	 */
	public Adapter createGenLinkWithClassAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.GenLinkReferenceOnly <em>Gen Link Reference Only</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @@return the new adapter.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLinkReferenceOnly
	 * @@generated
	 */
	public Adapter createGenLinkReferenceOnlyAdapter() {
		return null;
	}

	/**
d371 14
@


1.10
log
@[rdvorak] #113224 Generate custom initialization code for domain model elements
@
text
@d122 20
a141 2
			public Object caseLinkLabel(LinkLabel object) {
				return createLinkLabelAdapter();
d348 85
a432 1
	 * Creates a new adapter for an object of class '{@@link org.eclipse.gmf.codegen.gmfgen.LinkLabel <em>Link Label</em>}'.
d438 1
a438 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.LinkLabel
d441 1
a441 1
	public Adapter createLinkLabelAdapter() {
@


1.9
log
@[rdvorak] #112097 genmodel support to use expression evaluation to choose editpart (visual representation)
@
text
@d176 9
d554 42
@


1.8
log
@#112191 colors as Viewmap's Attributes
@
text
@d152 6
d545 28
@


1.7
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@d128 3
d357 14
@


1.6
log
@#111775 stale properties in gmfgen
#111784 GenChildContainer extends GenCommonBase
@
text
@d13 2
d122 3
d312 14
@


1.5
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@d105 3
a110 3
			public Object caseGenChildContainer(GenChildContainer object) {
				return createGenChildContainerAdapter();
			}
a119 3
			public Object caseViewmap(Viewmap object) {
				return createViewmapAdapter();
			}
d129 3
@


1.4
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d13 4
a16 2
import org.eclipse.gmf.codegen.gmfgen.*;

d18 1
d29 1
d33 1
d36 1
@


1.3
log
@[dstadnik] Use Notation Model as runtime model
@
text
@d13 2
d114 24
d301 112
@


1.2
log
@[ashatalin] Action to initialize diagram from existing domain model gets generated.
@
text
@a12 2
import org.eclipse.gmf.codegen.gmfgen.*;

@


1.1
log
@*** empty log message ***
@
text
@d13 2
@

