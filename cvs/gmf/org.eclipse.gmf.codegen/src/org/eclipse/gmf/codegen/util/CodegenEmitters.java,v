head	1.186;
access;
symbols
	v20081022-1925:1.186
	v20081015-1925:1.186
	v20081008-1925:1.185
	v20081001-1925:1.185
	v20080930-1130:1.184
	v20080926-1245:1.184
	v20080924-1925:1.183
	v20080917-1925:1.182
	v20080911-1728:1.181
	v20080910-1520:1.181
	v20080903-1520:1.181
	v20080827-1520:1.180
	v20080813-1520:1.179
	v20080806-1520:1.179
	v20080722-1827:1.179
	v20080718-1731:1.179
	v20080716-1600:1.179
	v20080716-1642:1.179
	R2_1_maintenance:1.179.0.2
	Root_R2_1_maintenance:1.179
	R2_1_0:1.179
	v20080610-1132:1.179
	v20080603-1553:1.178
	v20080528-1052:1.178
	v20080521:1.177
	v20080516-1543:1.177
	v20080516-1143:1.177
	v20080512-1200:1.177
	v20080508-2000:1.177
	v20080507-1326:1.177
	v20080503-1740:1.177
	v20080501-1739:1.177
	v20080425-1959:1.177
	v20080417-1610:1.177
	v20080411-0411:1.177
	v20080404-1111:1.177
	v20080322-0000:1.177
	v20080222-1200:1.175
	v20080215-1500:1.175
	v20080207-0207:1.162.2.5
	v20071222-1111:1.175
	v20071214-1111:1.175
	v20071130-1111:1.175
	v20071124-0000:1.162.2.5
	v20071112-0000:1.175
	v20071108-0000:1.170
	v20071003-0000:1.167
	v20070928-0000:1.162.2.5
	v20070921-0000:1.162.2.5
	v20070915-0000:1.162.2.5
	v20070903-0000:1.162
	v20070809-0000:1.162
	R2_0_maintenance:1.162.0.2
	R2_0:1.162
	R4_20:1.162
	v20070621-0000:1.162
	RC3_20:1.159
	v20070614-1400:1.159
	v20070608-1300:1.142
	v20070605-1400:1.139
	v20070601-1400:1.131
	v20070525-1500:1.130
	v20070520-1200:1.129
	v20070518-1300:1.129
	v20070504-1000:1.121
	v20070427-0600:1.113
	v20070420-1000:1.108
	v20070413-1300:1.106
	v20070405-1100:1.106
	v20070403-1500:1.104
	v20070330-1300:1.104
	v20060330-1300:1.104
	v20070322-1100:1.100
	v20060316-0600:1.96
	v20070307-0700:1.94
	v20070301-1200:1.94
	v20070228-2000:1.93
	v20070221-1500:1.92
	v20070208-1800:1.92
	v20070202-0200:1.30.2.1
	v20070103-0300:1.76
	M4_20:1.76
	v20061222-1800:1.70
	v20061218-1200:1.68
	v20061214-0000:1.62
	v20061120-1300:1.50
	M3_20:1.50
	v20061117-0800:1.50
	v20061027-1200:1.30.2.1
	v20061020-1000:1.30.2.1
	v20061013-1330:1.45
	v20060919-0800:1.30.2.1
	v20060907-1100:1.30
	M1_20:1.33
	v20060904-1500:1.33
	v20060824-1600:1.30
	v20060817-1500:1.30
	v20060728-0500:1.30
	v20060713-1700:1.30
	R1_0_maintenance:1.30.0.2
	R1_0:1.30
	v20060627-1200:1.30
	v20060626-1420:1.30
	v20060620-0400:1.29
	v20060616-1400:1.29
	v20060616-1200:1.29
	v20060609-1400:1.29
	v20060531-1730:1.28
	v20060530-1930:1.27
	v20060526-1200:1.26
	v20060519-1300:1.26
	v20060519-0800:1.26
	v20060512-1000:1.25
	I20060512-1000:1.25
	I20060505-1400:1.23
	I20060428-1300:1.23
	I20060424-0500:1.22
	I20060424-0300:1.22
	M6_10:1.21
	I20060407-1200:1.13
	I20060331-1000:1.12
	I20060324-0300:1.11
	I20060317-1300:1.11
	I20060317-1200:1.11
	I20060316-1300:1.11
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.2
	I20060209-1815:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.186
date	2008.10.14.12.53.49;	author atikhomirov;	state Exp;
branches;
next	1.185;
commitid	2e35d48f496534567;

1.185
date	2008.10.01.14.43.09;	author atikhomirov;	state Exp;
branches;
next	1.184;
commitid	3462648e38c794567;

1.184
date	2008.09.26.15.10.17;	author atikhomirov;	state Exp;
branches;
next	1.183;
commitid	e57748dcfb594567;

1.183
date	2008.09.23.14.54.39;	author atikhomirov;	state Exp;
branches;
next	1.182;
commitid	2569e48d903244567;

1.182
date	2008.09.16.19.22.28;	author atikhomirov;	state Exp;
branches;
next	1.181;
commitid	18fb48d007744567;

1.181
date	2008.08.28.21.22.12;	author atikhomirov;	state Exp;
branches;
next	1.180;
commitid	3cb348b717024567;

1.180
date	2008.08.26.20.52.27;	author atikhomirov;	state Exp;
branches;
next	1.179;
commitid	3a7648b46d064567;

1.179
date	2008.06.05.11.42.19;	author atikhomirov;	state Exp;
branches;
next	1.178;
commitid	242b4847d11a4567;

1.178
date	2008.05.26.18.44.22;	author dstadnik;	state Exp;
branches;
next	1.177;
commitid	3a58483b04fe4567;

1.177
date	2008.02.28.20.25.43;	author atikhomirov;	state Exp;
branches;
next	1.176;
commitid	4dd847c718c64567;

1.176
date	2008.02.27.17.30.20;	author atikhomirov;	state Exp;
branches;
next	1.175;
commitid	22cf47c59e244567;

1.175
date	2007.11.09.16.54.25;	author ashatalin;	state Exp;
branches;
next	1.174;
commitid	6065473490c14567;

1.174
date	2007.11.09.16.28.34;	author ashatalin;	state Exp;
branches;
next	1.173;
commitid	42df47348ab14567;

1.173
date	2007.11.09.14.35.09;	author ashatalin;	state Exp;
branches;
next	1.172;
commitid	22bb4734701b4567;

1.172
date	2007.11.08.18.46.29;	author ashatalin;	state Exp;
branches;
next	1.171;
commitid	7893473359834567;

1.171
date	2007.11.08.18.00.43;	author ashatalin;	state Exp;
branches;
next	1.170;
commitid	333047334eca4567;

1.170
date	2007.10.29.18.30.24;	author ashatalin;	state Exp;
branches;
next	1.169;
commitid	2327472626c04567;

1.169
date	2007.10.29.17.56.19;	author ashatalin;	state Exp;
branches;
next	1.168;
commitid	494847261ec24567;

1.168
date	2007.10.29.15.48.49;	author ashatalin;	state Exp;
branches;
next	1.167;
commitid	6a0e472600e04567;

1.167
date	2007.09.14.18.23.24;	author dstadnik;	state Exp;
branches;
next	1.166;
commitid	153b46ead19a4567;

1.166
date	2007.09.14.14.53.25;	author dstadnik;	state Exp;
branches;
next	1.165;
commitid	40c546eaa0634567;

1.165
date	2007.09.13.18.19.02;	author dstadnik;	state Exp;
branches;
next	1.164;
commitid	51ec46e97f104567;

1.164
date	2007.09.12.12.22.30;	author dstadnik;	state Exp;
branches;
next	1.163;
commitid	164a46e7da054567;

1.163
date	2007.09.10.21.17.30;	author dstadnik;	state Exp;
branches;
next	1.162;
commitid	153446e5b4694567;

1.162
date	2007.06.20.15.50.09;	author dstadnik;	state Exp;
branches
	1.162.2.1;
next	1.161;
commitid	3ba446794caf4567;

1.161
date	2007.06.19.19.26.18;	author dstadnik;	state Exp;
branches;
next	1.160;
commitid	611446782dd84567;

1.160
date	2007.06.15.14.58.04;	author dstadnik;	state Exp;
branches;
next	1.159;
commitid	6d674672a8f74567;

1.159
date	2007.06.13.17.27.14;	author dstadnik;	state Exp;
branches;
next	1.158;
commitid	7428467028f04567;

1.158
date	2007.06.13.16.02.40;	author ashatalin;	state Exp;
branches;
next	1.157;
commitid	314d4670151f4567;

1.157
date	2007.06.13.15.54.59;	author dstadnik;	state Exp;
branches;
next	1.156;
commitid	3f1d467013514567;

1.156
date	2007.06.13.15.14.23;	author dstadnik;	state Exp;
branches;
next	1.155;
commitid	78d4467009cd4567;

1.155
date	2007.06.13.14.48.18;	author ashatalin;	state Exp;
branches;
next	1.154;
commitid	3455467003af4567;

1.154
date	2007.06.13.14.02.28;	author ashatalin;	state Exp;
branches;
next	1.153;
commitid	3d5e466ff8ed4567;

1.153
date	2007.06.13.12.49.09;	author ashatalin;	state Exp;
branches;
next	1.152;
commitid	55a1466fe7bb4567;

1.152
date	2007.06.13.12.27.25;	author dstadnik;	state Exp;
branches;
next	1.151;
commitid	4af4466fe2ac4567;

1.151
date	2007.06.12.23.41.58;	author dstadnik;	state Exp;
branches;
next	1.150;
commitid	2e6e466f2f424567;

1.150
date	2007.06.12.14.18.39;	author ashatalin;	state Exp;
branches;
next	1.149;
commitid	6fec466eab3f4567;

1.149
date	2007.06.12.12.20.13;	author dstadnik;	state Exp;
branches;
next	1.148;
commitid	5d34466e8f7c4567;

1.148
date	2007.06.12.11.36.12;	author dstadnik;	state Exp;
branches;
next	1.147;
commitid	31a3466e852b4567;

1.147
date	2007.06.11.17.15.58;	author ashatalin;	state Exp;
branches;
next	1.146;
commitid	73b5466d834a4567;

1.146
date	2007.06.11.16.40.53;	author ashatalin;	state Exp;
branches;
next	1.145;
commitid	4fdb466d7b0f4567;

1.145
date	2007.06.11.14.58.50;	author ashatalin;	state Exp;
branches;
next	1.144;
commitid	317d466d63264567;

1.144
date	2007.06.11.13.36.23;	author ashatalin;	state Exp;
branches;
next	1.143;
commitid	4172466d4fd34567;

1.143
date	2007.06.11.10.45.38;	author ashatalin;	state Exp;
branches;
next	1.142;
commitid	2581466d27cc4567;

1.142
date	2007.06.07.17.32.55;	author dstadnik;	state Exp;
branches;
next	1.141;
commitid	5505466841464567;

1.141
date	2007.06.07.11.35.20;	author dstadnik;	state Exp;
branches;
next	1.140;
commitid	251b4667ed774567;

1.140
date	2007.06.07.10.59.13;	author dstadnik;	state Exp;
branches;
next	1.139;
commitid	535f4667e5014567;

1.139
date	2007.06.05.17.01.07;	author dstadnik;	state Exp;
branches;
next	1.138;
commitid	7adc466596d24567;

1.138
date	2007.06.05.15.38.46;	author dstadnik;	state Exp;
branches;
next	1.137;
commitid	6d90466583854567;

1.137
date	2007.06.05.15.35.47;	author dstadnik;	state Exp;
branches;
next	1.136;
commitid	6ce3466582d24567;

1.136
date	2007.06.04.17.14.38;	author dstadnik;	state Exp;
branches;
next	1.135;
commitid	54d4664487d4567;

1.135
date	2007.06.04.16.40.24;	author dstadnik;	state Exp;
branches;
next	1.134;
commitid	33fc466440784567;

1.134
date	2007.06.04.15.56.46;	author dstadnik;	state Exp;
branches;
next	1.133;
commitid	20bf4664363d4567;

1.133
date	2007.06.04.15.13.46;	author dstadnik;	state Exp;
branches;
next	1.132;
commitid	27ac46642c284567;

1.132
date	2007.06.04.12.58.12;	author dstadnik;	state Exp;
branches;
next	1.131;
commitid	6a8946640c624567;

1.131
date	2007.05.28.16.52.23;	author ashatalin;	state Exp;
branches;
next	1.130;
commitid	51cb465b08c54567;

1.130
date	2007.05.22.18.18.54;	author ashatalin;	state Exp;
branches;
next	1.129;
commitid	5a1d465333ad4567;

1.129
date	2007.05.18.14.56.13;	author dstadnik;	state Exp;
branches;
next	1.128;
commitid	36ed464dbe8c4567;

1.128
date	2007.05.15.18.34.13;	author ashatalin;	state Exp;
branches;
next	1.127;
commitid	25434649fd1f4567;

1.127
date	2007.05.14.14.27.04;	author dstadnik;	state Exp;
branches;
next	1.126;
commitid	38ba464871b24567;

1.126
date	2007.05.11.13.50.53;	author ashatalin;	state Exp;
branches;
next	1.125;
commitid	6340464474b24567;

1.125
date	2007.05.11.12.26.16;	author dstadnik;	state Exp;
branches;
next	1.124;
commitid	398e464460e54567;

1.124
date	2007.05.10.13.12.15;	author dstadnik;	state Exp;
branches;
next	1.123;
commitid	52b46431a2d4567;

1.123
date	2007.05.10.09.23.22;	author dstadnik;	state Exp;
branches;
next	1.122;
commitid	59a14642e4894567;

1.122
date	2007.05.04.15.27.49;	author ashatalin;	state Exp;
branches;
next	1.121;
commitid	6ef6463b50ec4567;

1.121
date	2007.05.04.11.34.18;	author dstadnik;	state Exp;
branches;
next	1.120;
commitid	2c60463b1a394567;

1.120
date	2007.05.04.09.57.57;	author dstadnik;	state Exp;
branches;
next	1.119;
commitid	74c2463b03a54567;

1.119
date	2007.05.04.09.16.10;	author dstadnik;	state Exp;
branches;
next	1.118;
commitid	2a14463af9d94567;

1.118
date	2007.05.03.11.03.11;	author dstadnik;	state Exp;
branches;
next	1.117;
commitid	f824639c16d4567;

1.117
date	2007.05.03.09.58.55;	author dstadnik;	state Exp;
branches;
next	1.116;
commitid	518a4639b24f4567;

1.116
date	2007.05.01.17.56.31;	author ashatalin;	state Exp;
branches;
next	1.115;
commitid	58c746377f464567;

1.115
date	2007.05.01.13.28.04;	author ashatalin;	state Exp;
branches;
next	1.114;
commitid	143a463740554567;

1.114
date	2007.04.27.11.00.33;	author dstadnik;	state Exp;
branches;
next	1.113;
commitid	23d34631d7d04567;

1.113
date	2007.04.27.09.26.27;	author dstadnik;	state Exp;
branches;
next	1.112;
commitid	4a7d4631c1c24567;

1.112
date	2007.04.27.08.53.39;	author dstadnik;	state Exp;
branches;
next	1.111;
commitid	30cb4631ba124567;

1.111
date	2007.04.27.08.33.37;	author dstadnik;	state Exp;
branches;
next	1.110;
commitid	15c64631b5604567;

1.110
date	2007.04.24.18.22.42;	author ashatalin;	state Exp;
branches;
next	1.109;
commitid	1456462e4af04567;

1.109
date	2007.04.23.14.04.58;	author dstadnik;	state Exp;
branches;
next	1.108;
commitid	4a11462cbd094567;

1.108
date	2007.04.18.17.34.28;	author ashatalin;	state Exp;
branches;
next	1.107;
commitid	2e44462656a24567;

1.107
date	2007.04.17.12.46.11;	author dstadnik;	state Exp;
branches;
next	1.106;
commitid	46154624c1914567;

1.106
date	2007.04.05.21.00.22;	author atikhomirov;	state Exp;
branches;
next	1.105;
commitid	13d6461563644567;

1.105
date	2007.04.03.19.28.21;	author ashatalin;	state Exp;
branches;
next	1.104;
commitid	24744612aad14567;

1.104
date	2007.03.28.19.33.36;	author ashatalin;	state Exp;
branches;
next	1.103;
commitid	6e6d460ac2e04567;

1.103
date	2007.03.28.08.49.38;	author dstadnik;	state Exp;
branches;
next	1.102;
commitid	2240460a2c174567;

1.102
date	2007.03.23.09.27.29;	author dstadnik;	state Exp;
branches;
next	1.101;
commitid	6f4346039d7f4567;

1.101
date	2007.03.22.20.48.50;	author ashatalin;	state Exp;
branches;
next	1.100;
commitid	14974602ebb14567;

1.100
date	2007.03.20.20.15.02;	author ashatalin;	state Exp;
branches;
next	1.99;
commitid	1c03460040bd4567;

1.99
date	2007.03.20.14.49.13;	author ashatalin;	state Exp;
branches;
next	1.98;
commitid	761245fff4684567;

1.98
date	2007.03.16.16.09.53;	author ashatalin;	state Exp;
branches;
next	1.97;
commitid	565445fac1444567;

1.97
date	2007.03.16.14.45.34;	author dstadnik;	state Exp;
branches;
next	1.96;
commitid	2a5045faad8d4567;

1.96
date	2007.03.15.16.11.54;	author dstadnik;	state Exp;
branches;
next	1.95;
commitid	620045f9703f4567;

1.95
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches;
next	1.94;
commitid	444245f8090b4567;

1.94
date	2007.03.01.13.05.36;	author dstadnik;	state Exp;
branches;
next	1.93;
commitid	1a6045e6cf9e4567;

1.93
date	2007.02.22.19.49.50;	author ashatalin;	state Exp;
branches;
next	1.92;
commitid	299645ddf3da4567;

1.92
date	2007.02.07.12.05.15;	author ashatalin;	state Exp;
branches;
next	1.91;
commitid	37da45c9c07a4567;

1.91
date	2007.02.07.00.37.48;	author atikhomirov;	state Exp;
branches;
next	1.90;
commitid	c5d45c91f504567;

1.90
date	2007.02.05.14.39.18;	author atikhomirov;	state Exp;
branches;
next	1.89;
commitid	418145c741944567;

1.89
date	2007.02.02.21.46.55;	author atikhomirov;	state Exp;
branches;
next	1.88;
commitid	50e45c3b14e4567;

1.88
date	2007.02.02.19.45.10;	author atikhomirov;	state Exp;
branches;
next	1.87;
commitid	1a2145c394c34567;

1.87
date	2007.02.02.10.49.59;	author ashatalin;	state Exp;
branches;
next	1.86;
commitid	527745c317554567;

1.86
date	2007.02.01.11.51.44;	author dstadnik;	state Exp;
branches;
next	1.85;
commitid	dd445c1d44e4567;

1.85
date	2007.02.01.11.26.41;	author dstadnik;	state Exp;
branches;
next	1.84;
commitid	69af45c1ce6e4567;

1.84
date	2007.01.31.17.26.03;	author atikhomirov;	state Exp;
branches;
next	1.83;
commitid	3dcc45c0d1144567;

1.83
date	2007.01.29.19.44.15;	author atikhomirov;	state Exp;
branches;
next	1.82;
commitid	bd245be4e8e4567;

1.82
date	2007.01.29.18.59.30;	author atikhomirov;	state Exp;
branches;
next	1.81;
commitid	774445be44114567;

1.81
date	2007.01.29.14.20.31;	author dstadnik;	state Exp;
branches;
next	1.80;
commitid	69ed45be02ac4567;

1.80
date	2007.01.25.16.57.54;	author ashatalin;	state Exp;
branches;
next	1.79;
commitid	271945b8e1904567;

1.79
date	2007.01.17.13.12.34;	author ashatalin;	state Exp;
branches;
next	1.78;
commitid	3d0045ae20c04567;

1.78
date	2007.01.09.15.51.33;	author dstadnik;	state Exp;
branches;
next	1.77;
commitid	6f1245a3b9f84567;

1.77
date	2007.01.08.18.09.51;	author dstadnik;	state Exp;
branches;
next	1.76;
commitid	78dd45a288ee4567;

1.76
date	2006.12.28.19.45.50;	author ashatalin;	state Exp;
branches;
next	1.75;
commitid	13f545941eec4567;

1.75
date	2006.12.28.18.09.44;	author dstadnik;	state Exp;
branches;
next	1.74;
commitid	4971459408674567;

1.74
date	2006.12.28.13.40.13;	author dstadnik;	state Exp;
branches;
next	1.73;
commitid	422a4593c9344567;

1.73
date	2006.12.27.18.38.46;	author dstadnik;	state Exp;
branches;
next	1.72;
commitid	64234592bdb54567;

1.72
date	2006.12.27.17.37.09;	author dstadnik;	state Exp;
branches;
next	1.71;
commitid	45374592af3d4567;

1.71
date	2006.12.27.13.40.49;	author atikhomirov;	state Exp;
branches;
next	1.70;
commitid	5b47459277e04567;

1.70
date	2006.12.20.02.16.53;	author dstadnik;	state Exp;
branches;
next	1.69;
commitid	1ea745889d114567;

1.69
date	2006.12.18.18.20.51;	author dstadnik;	state Exp;
branches;
next	1.68;
commitid	7d774586dbfa4567;

1.68
date	2006.12.18.13.23.18;	author dstadnik;	state Exp;
branches;
next	1.67;
commitid	113e4586960e4567;

1.67
date	2006.12.15.19.25.23;	author dstadnik;	state Exp;
branches;
next	1.66;
commitid	54dd4582f6a24567;

1.66
date	2006.12.15.17.46.19;	author dstadnik;	state Exp;
branches;
next	1.65;
commitid	3a134582df6a4567;

1.65
date	2006.12.15.16.43.58;	author dstadnik;	state Exp;
branches;
next	1.64;
commitid	6a0d4582d0cd4567;

1.64
date	2006.12.14.19.02.24;	author dstadnik;	state Exp;
branches;
next	1.63;
commitid	408e45819fb94567;

1.63
date	2006.12.14.18.32.17;	author ashatalin;	state Exp;
branches;
next	1.62;
commitid	1c32458198b04567;

1.62
date	2006.12.13.19.37.43;	author dstadnik;	state Exp;
branches;
next	1.61;
commitid	753f458056514567;

1.61
date	2006.12.13.18.57.26;	author dstadnik;	state Exp;
branches;
next	1.60;
commitid	68a45804d154567;

1.60
date	2006.12.11.18.42.43;	author ashatalin;	state Exp;
branches;
next	1.59;
commitid	34a457da6a14567;

1.59
date	2006.12.11.17.01.34;	author dstadnik;	state Exp;
branches;
next	1.58;
commitid	30fa457d8eeb4567;

1.58
date	2006.12.08.19.20.41;	author dstadnik;	state Exp;
branches;
next	1.57;
commitid	49124579bb084567;

1.57
date	2006.12.08.14.39.39;	author dstadnik;	state Exp;
branches;
next	1.56;
commitid	75d4457979294567;

1.56
date	2006.12.07.17.33.50;	author dstadnik;	state Exp;
branches;
next	1.55;
commitid	23d0457850794567;

1.55
date	2006.11.29.19.57.57;	author atikhomirov;	state Exp;
branches;
next	1.54;
commitid	5235456de6434567;

1.54
date	2006.11.24.22.25.21;	author ashatalin;	state Exp;
branches;
next	1.53;
commitid	5f734567714f4567;

1.53
date	2006.11.22.17.34.44;	author ashatalin;	state Exp;
branches;
next	1.52;
commitid	117b45648a334567;

1.52
date	2006.11.22.15.30.35;	author dstadnik;	state Exp;
branches;
next	1.51;
commitid	2b2545646d1a4567;

1.51
date	2006.11.22.10.21.49;	author ashatalin;	state Exp;
branches;
next	1.50;
commitid	7860456424b04567;

1.50
date	2006.11.16.19.24.51;	author atikhomirov;	state Exp;
branches;
next	1.49;
commitid	1423455cbb014567;

1.49
date	2006.11.03.20.43.48;	author ashatalin;	state Exp;
branches;
next	1.48;

1.48
date	2006.10.24.17.25.11;	author dstadnik;	state Exp;
branches;
next	1.47;

1.47
date	2006.10.24.14.49.09;	author ashatalin;	state Exp;
branches;
next	1.46;

1.46
date	2006.10.17.19.19.54;	author ashatalin;	state Exp;
branches;
next	1.45;

1.45
date	2006.10.13.16.30.03;	author ashatalin;	state Exp;
branches;
next	1.44;

1.44
date	2006.10.09.17.30.47;	author dstadnik;	state Exp;
branches;
next	1.43;

1.43
date	2006.10.06.11.47.59;	author ashatalin;	state Exp;
branches;
next	1.42;

1.42
date	2006.10.03.08.05.55;	author dstadnik;	state Exp;
branches;
next	1.41;

1.41
date	2006.09.27.20.39.06;	author atikhomirov;	state Exp;
branches;
next	1.40;

1.40
date	2006.09.26.15.41.04;	author atikhomirov;	state Exp;
branches;
next	1.39;

1.39
date	2006.09.22.13.21.23;	author ashatalin;	state Exp;
branches;
next	1.38;

1.38
date	2006.09.18.19.08.54;	author atikhomirov;	state Exp;
branches;
next	1.37;

1.37
date	2006.09.15.20.44.31;	author atikhomirov;	state Exp;
branches;
next	1.36;

1.36
date	2006.09.15.11.48.01;	author ashatalin;	state Exp;
branches;
next	1.35;

1.35
date	2006.09.14.18.08.54;	author ashatalin;	state Exp;
branches;
next	1.34;

1.34
date	2006.09.11.18.21.36;	author ashatalin;	state Exp;
branches;
next	1.33;

1.33
date	2006.09.01.16.03.20;	author atikhomirov;	state Exp;
branches;
next	1.32;

1.32
date	2006.08.30.15.12.10;	author atikhomirov;	state Exp;
branches;
next	1.31;

1.31
date	2006.08.29.21.22.01;	author atikhomirov;	state Exp;
branches;
next	1.30;

1.30
date	2006.06.23.12.26.15;	author dstadnik;	state Exp;
branches
	1.30.2.1;
next	1.29;

1.29
date	2006.06.08.14.32.25;	author ashatalin;	state Exp;
branches;
next	1.28;

1.28
date	2006.05.31.19.53.02;	author ashatalin;	state Exp;
branches;
next	1.27;

1.27
date	2006.05.29.17.17.18;	author atikhomirov;	state Exp;
branches;
next	1.26;

1.26
date	2006.05.18.19.12.38;	author atikhomirov;	state Exp;
branches;
next	1.25;

1.25
date	2006.05.11.12.21.32;	author ashatalin;	state Exp;
branches;
next	1.24;

1.24
date	2006.05.09.12.41.31;	author radvorak;	state Exp;
branches;
next	1.23;

1.23
date	2006.04.26.17.48.40;	author radvorak;	state Exp;
branches;
next	1.22;

1.22
date	2006.04.18.12.19.27;	author dstadnik;	state Exp;
branches;
next	1.21;

1.21
date	2006.04.14.07.36.06;	author dstadnik;	state Exp;
branches;
next	1.20;

1.20
date	2006.04.14.07.21.22;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.04.13.15.41.18;	author radvorak;	state Exp;
branches;
next	1.18;

1.18
date	2006.04.12.16.28.45;	author dstadnik;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.12.08.48.33;	author dstadnik;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.12.01.16.49;	author ashatalin;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.11.19.16.44;	author atikhomirov;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.11.12.51.52;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.03.12.52.47;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.29.12.12.26;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.14.15.31.58;	author dstadnik;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.14.14.18.23;	author ashatalin;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.14.14.01.58;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.14.13.14.55;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.13.11.02.30;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.16.19.09.40;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.16.10.30.35;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.15.18.59.31;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.15.18.11.24;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.08.18.53.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.06.23.22.32;	author atikhomirov;	state Exp;
branches;
next	;

1.30.2.1
date	2006.09.13.23.07.15;	author rgronback;	state Exp;
branches;
next	;

1.162.2.1
date	2007.09.10.20.58.22;	author dstadnik;	state Exp;
branches;
next	1.162.2.2;
commitid	f4446e5afed4567;

1.162.2.2
date	2007.09.12.12.20.49;	author dstadnik;	state Exp;
branches;
next	1.162.2.3;
commitid	42c246e7d99f4567;

1.162.2.3
date	2007.09.13.18.16.20;	author dstadnik;	state Exp;
branches;
next	1.162.2.4;
commitid	485346e97e6f4567;

1.162.2.4
date	2007.09.14.15.11.12;	author dstadnik;	state Exp;
branches;
next	1.162.2.5;
commitid	18546eaa48f4567;

1.162.2.5
date	2007.09.14.18.46.29;	author dstadnik;	state Exp;
branches;
next	;
commitid	622c46ead7044567;


desc
@@


1.186
log
@[174961] Menu actions - refactor LoadResource and CreateShortcut actions to use generic genmodel action infrastructure
@
text
@/*
 * Copyright (c) 2005, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.codegen.util;

import java.lang.reflect.InvocationTargetException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Map;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.core.runtime.Platform;
import org.eclipse.core.runtime.Status;
import org.eclipse.emf.codegen.jet.JETCompiler;
import org.eclipse.emf.codegen.merge.java.JControlModel;
import org.eclipse.emf.codegen.merge.java.JMerger;
import org.eclipse.emf.codegen.util.CodeGenUtil;
import org.eclipse.emf.common.CommonPlugin;
import org.eclipse.emf.common.util.URI;
import org.eclipse.gmf.common.UnexpectedBehaviourException;
import org.eclipse.gmf.internal.common.codegen.BinaryEmitter;
import org.eclipse.gmf.internal.common.codegen.DefaultTextMerger;
import org.eclipse.gmf.internal.common.codegen.GIFEmitter;
import org.eclipse.gmf.internal.common.codegen.JETGIFEmitterAdapter;
import org.eclipse.gmf.internal.common.codegen.TextEmitter;
import org.eclipse.gmf.internal.common.codegen.TextMerger;
import org.eclipse.gmf.internal.common.codegen.XpandTextEmitter;
import org.eclipse.gmf.internal.xpand.ResourceManager;
import org.eclipse.gmf.internal.xpand.util.BundleResourceManager;
import org.osgi.framework.Bundle;

/**
 * @@author artem
 */
public class CodegenEmitters {

	private static final String PATH_SEPARATOR = "::"; //$NON-NLS-1$

	private final ResourceManager myResourceManager;
	private final URL[] myLocations;

	private Map<String, Object> myGlobals;

	public CodegenEmitters(boolean useBaseTemplatesOnly, String templateDirectory, boolean includeDynamicModelTemplates) {
		ArrayList<URL> urls = new ArrayList<URL>(5);
		if (!useBaseTemplatesOnly) {
			urls.add(getDynamicTemplatesURL(templateDirectory));
		}
		if (includeDynamicModelTemplates) {
			urls.add(getTemplatesBundle().getEntry("/templates-dynmodel/")); //$NON-NLS-1$
		}
		urls.add(getTemplatesBundle().getEntry("/templates/")); //$NON-NLS-1$
	
		myLocations = urls.toArray(new URL[urls.size()]);
		myResourceManager = new BundleResourceManager(myLocations);
	}
	
	/*package*/ void setGlobals(Map<String, Object> globals) {
		myGlobals = globals;
	}

	/**
	 * @@return null if no merger is needed
	 */
	public TextMerger createMergeService() {
		URL controlFile = getJMergeControlFile();
		if (controlFile != null){
			JControlModel controlModel = new JControlModel();
			controlModel.initialize(CodeGenUtil.instantiateFacadeHelper(JMerger.DEFAULT_FACADE_HELPER_CLASS), controlFile.toString());
			if (!controlModel.canMerge()){
				throw new IllegalStateException("Can not initialize JControlModel");
			}
			return new DefaultTextMerger(controlModel);
		}
		return null;
	}

	private static Bundle getTemplatesBundle() {
		return Platform.getBundle("org.eclipse.gmf.codegen"); //$NON-NLS-1$
	}
	
	private static URL getDynamicTemplatesURL(String templateDirectory) {
		if (templateDirectory != null) {
			URI templatesURI = templateDirectory.indexOf(":") == -1 ? URI.createPlatformResourceURI(templateDirectory, true) : URI.createURI(templateDirectory); //$NON-NLS-1$
			try {
				return new URL(CommonPlugin.resolve(templatesURI).toString());
			} catch (MalformedURLException e) {
				Platform.getLog(getTemplatesBundle()).log(new Status(IStatus.ERROR, getTemplatesBundle().getSymbolicName(), 0, "Incorrecct dynamic templates location", e)); //$NON-NLS-1$
			}
		}
		return null;
	}

	public URL getJMergeControlFile() {
		return getTemplatesBundle().getEntry("/templates/emf-merge.xml"); //$NON-NLS-1$
	}

	// commands

	public TextEmitter getCreateNodeCommandEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::commands::CreateNodeCommand"); //$NON-NLS-1$
	}

	public TextEmitter getCreateLinkCommandEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::commands::CreateLinkCommand"); //$NON-NLS-1$
	}

	public TextEmitter getCreateRefLinkCommandEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::commands::CreateRefLinkCommand"); //$NON-NLS-1$
	}

	public TextEmitter getReorientLinkCommandEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::commands::ReorientLinkCommand"); //$NON-NLS-1$
	}

	public TextEmitter getReorientRefLinkCommandEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::commands::ReorientRefLinkCommand"); //$NON-NLS-1$
	}

	public TextEmitter getReorientLinkViewCommandEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::commands::ReorientLinkViewCommand"); //$NON-NLS-1$
	}

	public TextEmitter getCreateShortcutDecorationsCommandEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::commands::CreateShortcutDecorationsCommand"); //$NON-NLS-1$
	}

	// helpers

	public TextEmitter getBaseEditHelperEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::edithelpers::BaseEditHelper"); //$NON-NLS-1$
	}

	public TextEmitter getEditHelperEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::edithelpers::EditHelper"); //$NON-NLS-1$
	}

	public TextEmitter getEditHelperAdviceEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::edithelpers::EditHelperAdvice"); //$NON-NLS-1$
	}

	// parts

	public TextEmitter getDiagramEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::DiagramEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getNodeEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::NodeEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getNodeLabelEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::NodeLabelEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getExternalNodeLabelEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::ExternalNodeLabelEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getChildNodeLabelEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::ChildNodeLabelEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getCompartmentEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::CompartmentEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getLinkEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::LinkEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getLinkLabelEditPartEmitter() throws UnexpectedBehaviourException {
		return getMainEmitter("diagram::editparts::LinkLabelEditPart"); //$NON-NLS-1$
	}

	public TextEmitter getEditPartFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::editparts::EditPartFactory"); //$NON-NLS-1$
	}

	// policies

	public TextEmitter getBaseItemSemanticEditPolicyEmitter() {
		return getPrimaryEmitter("xpt::diagram::editpolicies::BaseItemSemanticEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getOpenDiagramEditPolicyEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::editpolicies::OpenDiagram"); //$NON-NLS-1$
	}

	public TextEmitter getDiagramCanonicalEditPolicyEmitter() {
		return getPrimaryEmitter("xpt::diagram::editpolicies::DiagramCanonicalEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getChildContainerCanonicalEditPolicyEmitter() {
		return getPrimaryEmitter("xpt::diagram::editpolicies::ChildContainerCanonicalEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getDiagramItemSemanticEditPolicyEmitter() {
		return getPrimaryEmitter("xpt::diagram::editpolicies::DiagramItemSemanticEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getCompartmentItemSemanticEditPolicyEmitter() {
		return getPrimaryEmitter("xpt::diagram::editpolicies::CompartmentItemSemanticEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getGraphicalNodeEditPolicyEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::editpolicies::GraphicalNodeEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getNodeItemSemanticEditPolicyEmitter() {
		return getPrimaryEmitter("xpt::diagram::editpolicies::NodeItemSemanticEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getLinkItemSemanticEditPolicyEmitter() {
		return getPrimaryEmitter("xpt::diagram::editpolicies::LinkItemSemanticEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getTextSelectionEditPolicyEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::diagram::editpolicies::TextFeedback::TextSelectionEditPolicy"); //$NON-NLS-1$
	}

	public TextEmitter getTextNonResizableEditPolicyEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::diagram::editpolicies::TextFeedback::TextNonResizableEditPolicy"); //$NON-NLS-1$
	}

	// view factories

	public TextEmitter getDiagramViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::DiagramViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getNodeViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::NodeViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getLabelNodeViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LabelNodeViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getCompartmentViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::CompartmentViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getLinkViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LinkViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getFloatingLabelViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::FloatingLabelViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getLabelViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LabelViewFactory"); //$NON-NLS-1$
	}

	// updater

	public TextEmitter getDiagramUpdaterEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::DiagramUpdater"); //$NON-NLS-1$
	}

	public TextEmitter getUpdateCommandEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::UpdateCommand"); //$NON-NLS-1$
	}

	public TextEmitter getNodeDescriptorEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::NodeDescriptor"); //$NON-NLS-1$
	}

	public TextEmitter getLinkDescriptorEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::LinkDescriptor"); //$NON-NLS-1$
	}

	// parsers

	public TextEmitter getAbstractParserEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::parsers::AbstractParser"); //$NON-NLS-1$
	}

	public String getAbstractParserName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::parsers::AbstractParser", input); //$NON-NLS-1$
	}

	public TextEmitter getPredefinedParserEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("parsers::PredefinedParser::Main"); //$NON-NLS-1$
	}

	public String getPredefinedParserName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("parsers::PredefinedParser", input); //$NON-NLS-1$
	}

	// providers

	public TextEmitter getParserProviderEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("parsers::ParserProvider::Main"); //$NON-NLS-1$
	}

	public TextEmitter getElementInitializersEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::ElementInitializers"); //$NON-NLS-1$
	}

	public TextEmitter getElementTypesEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::ElementTypes"); //$NON-NLS-1$
	}

	public TextEmitter getViewProviderEmitter() {
		return getPrimaryEmitter("xpt::providers::ViewProvider"); //$NON-NLS-1$
	}

	public TextEmitter getEditPartProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::EditPartProvider"); //$NON-NLS-1$
	}

	public TextEmitter getModelingAssistantProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::ModelingAssistantProvider"); //$NON-NLS-1$
	}

	public TextEmitter getIconProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::IconProvider"); //$NON-NLS-1$
	}

	public TextEmitter getMarkerNavigationProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::MarkerNavigationProvider"); //$NON-NLS-1$
	}	

	public TextEmitter getValidationProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::ValidationProvider"); //$NON-NLS-1$
	}

	public TextEmitter getValidationDecoratorProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::ValidationDecoratorProvider"); //$NON-NLS-1$
	}

	public TextEmitter getShortcutsDecoratorProviderEmitter() {
		return getPrimaryEmitter("xpt::providers::ShortcutsDecoratorProvider"); //$NON-NLS-1$
	}

	public TextEmitter getMetricProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::MetricProvider"); //$NON-NLS-1$
	}	

	public TextEmitter getAbstractExpressionEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::expressions::AbstractExpression"); //$NON-NLS-1$
	}

	public TextEmitter getOCLExpressionFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::expressions::OCLExpressionFactory"); //$NON-NLS-1$
	}	

	public TextEmitter getRegexpExpressionFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::expressions::RegexpExpressionFactory"); //$NON-NLS-1$
	}

	// property sheet

	public TextEmitter getPropertySheetLabelProviderEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::propsheet::LabelProvider::Class"); //$NON-NLS-1$
	}

	public TextEmitter getPropertySectionEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::propsheet::PropertySection::Class"); //$NON-NLS-1$
	}

	// editor

	public TextEmitter getValidateActionEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::ValidateAction"); //$NON-NLS-1$
	}

	public String getValidateActionName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::ValidateAction", input); //$NON-NLS-1$
	}

	public TextEmitter getValidationMarkerEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::ValidationMarker"); //$NON-NLS-1$
	}

	public String getValidationMarkerName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::ValidationMarker", input); //$NON-NLS-1$
	}
	
	public TextEmitter getDiagramContentInitializerEmitter() {
		return getPrimaryEmitter("xpt::editor::DiagramContentInitializer"); //$NON-NLS-1$
	}

	public TextEmitter getShortcutPropertyTesterEmitter() {
		return getPrimaryEmitter("xpt::editor::ShortcutPropertyTester"); //$NON-NLS-1$
	}

	public String getShortcutCreationWizardName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::ShortcutCreationWizard", input); //$NON-NLS-1$
	}

	public TextEmitter getShortcutCreationWizardEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::ShortcutCreationWizard"); //$NON-NLS-1$
	}

	public String getModelElementSelectionPageName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::ModelElementSelectionPage", input); //$NON-NLS-1$
	}

	public TextEmitter getModelElementSelectionPageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::ModelElementSelectionPage"); //$NON-NLS-1$
	}

	public String getNewDiagramFileWizardName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::NewDiagramFileWizard", input); //$NON-NLS-1$
	}

	public TextEmitter getNewDiagramFileWizardEmitter() {
		return getPrimaryEmitter("xpt::editor::NewDiagramFileWizard"); //$NON-NLS-1$
	}

	public TextEmitter getPaletteEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::editor::palette::PaletteFactory::Factory"); //$NON-NLS-1$
	}

	public TextEmitter getDiagramEditorUtilEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::DiagramEditorUtil"); //$NON-NLS-1$
	}

	public TextEmitter getVisualIDRegistryEmitter() {
		return getPrimaryEmitter("xpt::editor::VisualIDRegistry"); //$NON-NLS-1$
	}

	public TextEmitter getCreationWizardEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::CreationWizard"); //$NON-NLS-1$
	}

	public TextEmitter getCreationWizardPageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::CreationWizardPage"); //$NON-NLS-1$
	}

	public TextEmitter getDeleteElementActionEmitter() {
		return getPrimaryEmitter("xpt::editor::DeleteElementAction"); //$NON-NLS-1$
	}

	public String getDeleteElementActionName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::DeleteElementAction", input); //$NON-NLS-1$
	}

	public TextEmitter getDiagramEditorContextMenuProviderEmitter() {
		return getPrimaryEmitter("xpt::editor::DiagramEditorContextMenuProvider"); //$NON-NLS-1$
	}

	public String getDiagramEditorContextMenuProviderName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::DiagramEditorContextMenuProvider", input); //$NON-NLS-1$
	}

	public TextEmitter getEditorEmitter() {
		return getPrimaryEmitter("xpt::editor::Editor"); //$NON-NLS-1$
	}

	public TextEmitter getElementChooserEmitter() {
		return getPrimaryEmitter("xpt::editor::ElementChooser"); //$NON-NLS-1$
	}

	public TextEmitter getDocumentProviderEmitter() {
		return getPrimaryEmitter("xpt::editor::DocumentProvider"); //$NON-NLS-1$
	}

	public TextEmitter getActionBarContributorEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::ActionBarContributor"); //$NON-NLS-1$
	}

	public TextEmitter getMatchingStrategyEmitter() {
		return getPrimaryEmitter("xpt::editor::MatchingStrategy"); //$NON-NLS-1$
	}

	public TextEmitter getDomainModelElementTesterEmitter() {
		return getPrimaryEmitter("xpt::editor::DomainModelElementTester"); //$NON-NLS-1$
	}

	public TextEmitter getURIEditorInputTesterEmitter() {
		return getPrimaryEmitter("xpt::editor::UriEditorInputTester"); //$NON-NLS-1$
	}

	public BinaryEmitter getShortcutImageEmitter() throws UnexpectedBehaviourException {
		return newGIFEmitter("/xpt/editor/shortcut.gif"); //$NON-NLS-1$
	}

	public BinaryEmitter getDiagramIconEmitter() throws UnexpectedBehaviourException {
		return newGIFEmitterAdapter("/xpt/editor/diagram.gif"); //$NON-NLS-1$
	}

	public BinaryEmitter getWizardBannerImageEmitter() throws UnexpectedBehaviourException {
		return newGIFEmitterAdapter("/xpt/editor/wizban.gif"); //$NON-NLS-1$
	}

	public TextEmitter getModelAccessFacilityEmitter() {
		return newXpandEmitter("Facility::Main"); //$NON-NLS-1$
	}

	// navigator

	public TextEmitter getNavigatorContentProviderEmitter() {
		return getPrimaryEmitter("xpt::navigator::NavigatorContentProvider"); //$NON-NLS-1$
	}

	public TextEmitter getDomainNavigatorContentProviderEmitter() {
		return getPrimaryEmitter("xpt::navigator::DomainNavigatorContentProvider"); //$NON-NLS-1$
	}

	public TextEmitter getDomainNavigatorLabelProviderEmitter() {
		return getPrimaryEmitter("xpt::navigator::DomainNavigatorLabelProvider"); //$NON-NLS-1$
	}

	public TextEmitter getDomainNavigatorItemEmitter() {
		return getPrimaryEmitter("xpt::navigator::DomainNavigatorItem"); //$NON-NLS-1$
	}

	public TextEmitter getNavigatorLabelProviderEmitter() {
		return getPrimaryEmitter("xpt::navigator::NavigatorLabelProvider"); //$NON-NLS-1$
	}

	public TextEmitter getNavigatorLinkHelperEmitter() {
		return getPrimaryEmitter("xpt::navigator::NavigatorLinkHelper"); //$NON-NLS-1$
	}

	public TextEmitter getNavigatorSorterEmitter() {
		return getPrimaryEmitter("xpt::navigator::NavigatorSorter"); //$NON-NLS-1$
	}

	public TextEmitter getNavigatorActionProviderEmitter() {
		return getPrimaryEmitter("xpt::navigator::NavigatorActionProvider"); //$NON-NLS-1$
	}

	public TextEmitter getAbstractNavigatorItemEmitter() {
		return getPrimaryEmitter("xpt::navigator::AbstractNavigatorItem"); //$NON-NLS-1$
	}

	public TextEmitter getNavigatorGroupEmitter() {
		return getPrimaryEmitter("xpt::navigator::NavigatorGroup"); //$NON-NLS-1$
	}

	public TextEmitter getNavigatorItemEmitter() {
		return getPrimaryEmitter("xpt::navigator::NavigatorItem"); //$NON-NLS-1$
	}

	public BinaryEmitter getGroupIconEmitter() throws UnexpectedBehaviourException {
		return newGIFEmitter("/xpt/navigator/navigatorGroup.gif"); //$NON-NLS-1$
	}

	// preferences

	public TextEmitter getPreferenceInitializerEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::preferences::PreferenceInitializer"); //$NON-NLS-1$
	}

	public String getPreferenceInitializerName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::diagram::preferences::PreferenceInitializer", input); //$NON-NLS-1$
	}

	public TextEmitter getStandardPreferencePageEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("impl::preferences::StandardPage::Main"); //$NON-NLS-1$
	}
	
	public TextEmitter getCustomPreferencePageEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("impl::preferences::CustomPage::Main"); //$NON-NLS-1$
	}

	// plugin

	public TextEmitter getActivatorEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::Activator"); //$NON-NLS-1$
	}

	public TextEmitter getBundleManifestEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::manifest"); //$NON-NLS-1$
	}

	public TextEmitter getPluginXmlEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::plugin"); //$NON-NLS-1$
	}

	public TextEmitter getPluginPropertiesEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::properties"); //$NON-NLS-1$
	}

	public TextEmitter getBuildPropertiesEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::build"); //$NON-NLS-1$
	}

	public TextEmitter getOptionsFileEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::options"); //$NON-NLS-1$
	}

    public TextEmitter getExternalizeEmitter() {
        return newXpandEmitter("xpt::Externalizer::Access"); //$NON-NLS-1$
    }

    public TextEmitter getMessagesEmitter() {
        return newXpandEmitter("xpt::Externalizer::Values"); //$NON-NLS-1$
    }

	// application

	public TextEmitter getApplicationEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::application::Application"); //$NON-NLS-1$
	}

	public TextEmitter getActionBarAdvisorEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::application::ActionBarAdvisor"); //$NON-NLS-1$
	}

	public TextEmitter getPerspectiveEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::application::Perspective"); //$NON-NLS-1$
	}

	public TextEmitter getWorkbenchAdvisorEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::application::WorkbenchAdvisor"); //$NON-NLS-1$
	}

	public TextEmitter getWorkbenchWindowAdvisorEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::application::WorkbenchWindowAdvisor"); //$NON-NLS-1$
	}

	public TextEmitter getWizardNewFileCreationPageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::application::WizardNewFileCreationPage"); //$NON-NLS-1$
	}

	// actions

	public TextEmitter getCustomActionEmitter() {
		return newXpandEmitter("impl::actions::CustomAction::Main"); //$NON-NLS-1$
	}

	public TextEmitter getPredefinedActionEmitter() {
		return newXpandEmitter("impl::actions::PredefinedAction::Main"); //$NON-NLS-1$
	}

	// util

    /**
     * Returns emitter for the primary definition in the specified template.
     * Primary definition has the same name as template file.
     */
	private TextEmitter getPrimaryEmitter(String templateName) {
		String[] parts = templateName.split(PATH_SEPARATOR);
		String definition = templateName + PATH_SEPARATOR + parts[parts.length-1];
		return newXpandEmitter(definition);
	}
	
    /**
     * Returns "Main" emitter for the specified template file.
     */
	private TextEmitter getMainEmitter(String templateFilePath) {
		return newXpandEmitter(templateFilePath + PATH_SEPARATOR + "Main"); //$NON-NLS-1$
	}

    /**
     * Returns emitter for qualified class name definition in the specified template.
     * Definition should be named 'qualifiedClassName'.
     */
	private TextEmitter getQualifiedClassNameEmitter(String templateName) throws UnexpectedBehaviourException {
		String definition = templateName + PATH_SEPARATOR + "qualifiedClassName"; //$NON-NLS-1$
		return newXpandEmitter(definition);
	}


	/**
	 * Returns text generated by emitter.
	 */
	private String getText(TextEmitter emitter, Object... input) throws UnexpectedBehaviourException {
		try {
			return emitter.generate(new NullProgressMonitor(), input).trim();
		} catch (InterruptedException ie) {
			return null;
		} catch (InvocationTargetException ite) {
			throw new UnexpectedBehaviourException(ite.getCause());
		}
	}

	/**
	 * Returns qualified class name defined in template.
	 */
	private String getQualifiedClassName(String templateName, Object... input) throws UnexpectedBehaviourException {
		TextEmitter emitter = getQualifiedClassNameEmitter(templateName);
		return getText(emitter, input);
	}

	private BinaryEmitter newGIFEmitter(String relativePath) throws UnexpectedBehaviourException {
		return new GIFEmitter(checkTemplateLocation(relativePath));
	}

	private BinaryEmitter newGIFEmitterAdapter(String relativePath) throws UnexpectedBehaviourException {
		return new JETGIFEmitterAdapter(new org.eclipse.emf.codegen.util.GIFEmitter(checkTemplateLocation(relativePath)));
	}

	private String checkTemplateLocation(String relativePath) throws UnexpectedBehaviourException {
		String[] templatesPath = new String[myLocations.length];
		for (int i = 0; i < myLocations.length; i++) {
			templatesPath[i] = myLocations[i].toString();
		}
		String templateLocation = JETCompiler.find(templatesPath, relativePath);
		if (templateLocation == null) {
			throw new UnexpectedBehaviourException("Template " + relativePath +" not found");
		}
		return templateLocation;
	}

	protected TextEmitter newXpandEmitter(String definition) {
		return new XpandTextEmitter(myResourceManager, definition, getClass().getClassLoader(), myGlobals);
	}
}@


1.185
log
@[174961] Menu actions - do not generate provider when the same can be achieved with straightforward Java coding.
Note, along with the move of action contribution, printintEnabled attribute now controls presence of Page Setup action as well. GMF Runtime always contributes this action, while there might be a need not to.
@
text
@a415 8
	public String getInitDiagramFileActionName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::InitDiagramFileAction", input); //$NON-NLS-1$
	}

	public TextEmitter getInitDiagramFileActionEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::InitDiagramFileAction"); //$NON-NLS-1$
	}

a463 8
	public TextEmitter getCreateShortcutActionEmitter() {
		return getPrimaryEmitter("xpt::editor::CreateShortcutAction"); //$NON-NLS-1$
	}

	public TextEmitter getLoadResourceActionEmitter() {
		return getPrimaryEmitter("xpt::editor::LoadResourceAction"); //$NON-NLS-1$
	}

d638 3
@


1.184
log
@test failure on linux machine
@
text
@a323 4
	public TextEmitter getContributionItemProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::providers::ContributionItemProvider"); //$NON-NLS-1$
	}

@


1.183
log
@[174961] Code generation support for custom actions
@
text
@d655 1
a655 1
		return newXpandEmitter("impl::Actions::CustomAction::Main"); //$NON-NLS-1$
@


1.182
log
@[247311] support boilerplate code generation for custom preference pages
[247542] generate only actually used preference pages
@
text
@d521 1
a521 1
		return getMainEmitter("Facility"); //$NON-NLS-1$
d585 1
a585 1
		return getMainEmitter("impl::preferences::StandardPage"); //$NON-NLS-1$
d589 1
a589 1
		return getMainEmitter("impl::preferences::CustomPage"); //$NON-NLS-1$
d652 4
a655 2
	public TextEmitter getMetaModelFacilityEmitter() {
		return newXpandEmitter("Facility::Main"); //$NON-NLS-1$
d658 1
@


1.181
log
@Refactoring to address [235113] alternative parser access and [244419] Support for custom parser:
no separate Parser implementations, rather tailored to specific view and edit methods used.
@
text
@d584 2
a585 2
	public TextEmitter getAppearancePreferencePageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::preferences::AppearancePreferencePage"); //$NON-NLS-1$
d587 3
a589 35

	public String getAppearancePreferencePageName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::diagram::preferences::AppearancePreferencePage", input); //$NON-NLS-1$
	}

	public TextEmitter getConnectionsPreferencePageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::preferences::ConnectionsPreferencePage"); //$NON-NLS-1$
	}

	public String getConnectionsPreferencePageName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::diagram::preferences::ConnectionsPreferencePage", input); //$NON-NLS-1$
	}

	public TextEmitter getGeneralPreferencePageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::preferences::GeneralPreferencePage"); //$NON-NLS-1$
	}

	public String getGeneralPreferencePageName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::diagram::preferences::GeneralPreferencePage", input); //$NON-NLS-1$
	}

	public TextEmitter getPrintingPreferencePageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::preferences::PrintingPreferencePage"); //$NON-NLS-1$
	}

	public String getPrintingPreferencePageName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::diagram::preferences::PrintingPreferencePage", input); //$NON-NLS-1$
	}

	public TextEmitter getRulersAndGridPreferencePageEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::preferences::RulersAndGridPreferencePage"); //$NON-NLS-1$
	}

	public String getRulersAndGridPreferencePageName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::diagram::preferences::RulersAndGridPreferencePage", input); //$NON-NLS-1$
@


1.180
log
@[235113] alternative parser access, step 2: use dedicated GenParsers entry, along with exposing parts of template as API
@
text
@d294 2
a295 2
	public TextEmitter getCompositeParserEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::parsers::CompositeParser"); //$NON-NLS-1$
d298 2
a299 34
	public String getCompositeParserName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::parsers::CompositeParser", input); //$NON-NLS-1$
	}

	public TextEmitter getMessageFormatParserEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::parsers::MessageFormatParser"); //$NON-NLS-1$
	}

	public String getMessageFormatParserName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::parsers::MessageFormatParser", input); //$NON-NLS-1$
	}

	public TextEmitter getNativeParserEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::parsers::NativeParser"); //$NON-NLS-1$
	}

	public String getNativeParserName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::parsers::NativeParser", input); //$NON-NLS-1$
	}

	public TextEmitter getPrintfParserEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::parsers::PrintfParser"); //$NON-NLS-1$
	}

	public String getPrintfParserName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::parsers::PrintfParser", input); //$NON-NLS-1$
	}

	public TextEmitter getRegexpParserEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::parsers::RegexpParser"); //$NON-NLS-1$
	}

	public String getRegexpParserName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::parsers::RegexpParser", input); //$NON-NLS-1$
@


1.179
log
@[150177] Use dynamic EMF model instead of generated code - tests.
@
text
@d337 1
a337 1
		return getPrimaryEmitter("xpt::providers::ParserProvider"); //$NON-NLS-1$
@


1.178
log
@[178225] Allow to delete ref-based links from the context menu
@
text
@d18 1
d52 2
d67 4
d716 4
d791 1
a791 1
		return new XpandTextEmitter(myResourceManager, definition, getClass().getClassLoader());
@


1.177
log
@[150177] phase III, bring dynamic access facility into the game.
@
text
@d481 16
@


1.176
log
@[150177] phase II, generated facility to perform metamodel operations (like instanceof or metaclass accessors) with dynamic models, new gmfgen options to parameterize codegen.
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2007 Borland Software Corporation
d17 1
a29 5
import org.eclipse.gmf.internal.codegen.dispatch.CachingEmitterFactory;
import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactory;
import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactoryImpl;
import org.eclipse.gmf.internal.codegen.dispatch.NoSuchTemplateException;
import org.eclipse.gmf.internal.codegen.dispatch.StaticTemplateRegistry;
a32 1
import org.eclipse.gmf.internal.common.codegen.JETEmitterAdapter;
d48 2
a49 4
	private static final String TEMPLATES_PLUGIN_ID = "org.eclipse.gmf.codegen"; //$NON-NLS-1$
	private final EmitterFactory myFactory;
	private final String[] myTemplatePath;
	private ResourceManager myResourceManager;
d51 9
a59 3
	public CodegenEmitters(boolean usePrecompiled, String templateDirectory) {
		this(usePrecompiled, templateDirectory, getDefaultVariables(), new StaticTemplateRegistry(CodegenEmitters.class.getClassLoader()));
	}
d61 2
a62 14
	public CodegenEmitters(boolean usePrecompiled, String templateDirectory, String[] variables, StaticTemplateRegistry registry) {
		final URL baseURL = getTemplatesBundle().getEntry("/templates/"); //$NON-NLS-1$
		final URL dynModelBase = getTemplatesBundle().getEntry("/templates-dynmodel/"); //$NON-NLS-1$
		final URL dynamicURL = usePrecompiled ? null : getDynamicTemplatesURL(templateDirectory);
		
		myTemplatePath = new String[] { dynamicURL != null ? dynamicURL.toString() : null, baseURL.toString() };
		// actually, that's new JETEmitterFactory with JETTemplateRegistry
		myFactory = new CachingEmitterFactory(new EmitterFactoryImpl(getTemplatePath(), registry, usePrecompiled, variables));
		
		if (dynamicURL == null) {
			myResourceManager = new BundleResourceManager(baseURL, dynModelBase);	
		} else {
			myResourceManager = new BundleResourceManager(dynamicURL, baseURL, dynModelBase);
		}
a80 16
	/**
	 * depends on {@@link #put(StaticTemplateRegistry, String, Class) } impl - class object of
	 * precompiled template serves as a key
	 */
	public TextEmitter retrieve(Class<?> key) throws UnexpectedBehaviourException {
		try {
			return new JETEmitterAdapter(myFactory.acquireEmitter(key));
		} catch (NoSuchTemplateException ex) {
			throw new UnexpectedBehaviourException(ex.getMessage(), ex);
		}
	}

	private String[] getTemplatePath() {
		return myTemplatePath;
	}

d82 1
a82 1
		return Platform.getBundle(TEMPLATES_PLUGIN_ID);
d91 1
a91 2
				String pluginID = "org.eclipse.gmf.codegen"; //$NON-NLS-1$
				Platform.getLog(Platform.getBundle(pluginID)).log(new Status(IStatus.ERROR, pluginID, 0, "Incorrecct dynamic templates location", e)); //$NON-NLS-1$
d752 5
a756 1
		String templateLocation = JETCompiler.find(getTemplatePath(), relativePath);
a765 12

	protected static String[] getDefaultVariables(){
		return new String[] {
		        "org.eclipse.emf.codegen", //$NON-NLS-1$
				"org.eclipse.emf.codegen.ecore", //$NON-NLS-1$
				"org.eclipse.emf.common", //$NON-NLS-1$
				"org.eclipse.emf.ecore", //$NON-NLS-1$
				"org.eclipse.gmf.common", //$NON-NLS-1$
				"org.eclipse.gmf.codegen", //$NON-NLS-1$
		};
	}

@


1.175
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d64 1
d72 1
a72 1
			myResourceManager = new BundleResourceManager(baseURL);	
d74 1
a74 1
			myResourceManager = new BundleResourceManager(dynamicURL, baseURL);
d559 4
@


1.174
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d185 1
a185 1
		return getPrimaryEmitter("xpt::diagram::editparts::NodeLabelEditPart"); //$NON-NLS-1$
@


1.173
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d181 1
a181 1
		return getPrimaryEmitter("xpt::diagram::editparts::NodeEditPart"); //$NON-NLS-1$
@


1.172
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d205 1
a205 1
		return getPrimaryEmitter("xpt::diagram::editparts::LinkLabelEditPart"); //$NON-NLS-1$
@


1.171
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d201 1
a201 1
		return getPrimaryEmitter("xpt::diagram::editparts::LinkEditPart"); //$NON-NLS-1$
@


1.170
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d189 1
a189 1
		return getPrimaryEmitter("xpt::diagram::editparts::ExternalNodeLabelEditPart"); //$NON-NLS-1$
@


1.169
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d177 1
a177 1
		return getPrimaryEmitter("xpt::diagram::editparts::DiagramEditPart"); //$NON-NLS-1$
@


1.168
log
@[207784] - Add variation-points to xpt\diagram\editparts\*.xpt
@
text
@d197 1
a197 1
		return getPrimaryEmitter("xpt::diagram::editparts::CompartmentEditPart"); //$NON-NLS-1$
@


1.167
log
@get rid of jet
@
text
@d193 1
a193 1
		return getPrimaryEmitter("xpt::diagram::editparts::ChildNodeLabelEditPart"); //$NON-NLS-1$
d729 7
@


1.166
log
@rewrite abs expr in xpand
@
text
@a27 2
import org.eclipse.gmf.codegen.templates.expressions.OCLExpressionFactoryGenerator;
import org.eclipse.gmf.codegen.templates.expressions.RegexpExpressionFactoryGenerator;
a46 2
 * Provides JET templates.
 * 
a62 1
		initRegistry(registry);
a92 12
	private static void initRegistry(StaticTemplateRegistry tr) {
		put(tr, "/expressions/OCLExpressionFactory.javajet", OCLExpressionFactoryGenerator.class); //$NON-NLS-1$		
		put(tr, "/expressions/RegexpExpressionFactory.javajet", RegexpExpressionFactoryGenerator.class); //$NON-NLS-1$
	}

	/**
	 * @@see #retrieve(Class)
	 */
	protected static void put(StaticTemplateRegistry tr, String path, Class<?> precompiledTemplate) {
		tr.put(precompiledTemplate, path, precompiledTemplate);
	}

d415 1
a415 1
		return retrieve(OCLExpressionFactoryGenerator.class);
d419 1
a419 1
		return retrieve(RegexpExpressionFactoryGenerator.class);
@


1.165
log
@rewrite validation prov in xpand
@
text
@a27 1
import org.eclipse.gmf.codegen.templates.expressions.AbstractExpressionGenerator;
a98 1
		put(tr, "/expressions/AbstractExpression.javajet", AbstractExpressionGenerator.class); //$NON-NLS-1$		
d428 1
a428 1
		return retrieve(AbstractExpressionGenerator.class);
d430 1
a430 1
	
d434 1
a434 1
	
@


1.164
log
@rewrite metric provider in xpand
@
text
@a30 1
import org.eclipse.gmf.codegen.templates.providers.ValidationProviderGenerator;
a99 1
		put(tr, "/providers/ValidationProvider.javajet", ValidationProviderGenerator.class); //$NON-NLS-1$
d414 1
a414 1
		return retrieve(ValidationProviderGenerator.class);
@


1.163
log
@rewrite element initializer in xpand
@
text
@a30 1
import org.eclipse.gmf.codegen.templates.providers.MetricProviderGenerator;
a101 1
		put(tr, "/providers/MetricProvider.javajet", MetricProviderGenerator.class); //$NON-NLS-1$		
d428 1
a428 1
		return retrieve(MetricProviderGenerator.class);
@


1.162
log
@[192848] Rewrite creation wizard and ui contributors in xpand
@
text
@a30 1
import org.eclipse.gmf.codegen.templates.providers.ElementInitializersGenerator;
a101 1
		put(tr, "/providers/ElementInitializers.javajet", ElementInitializersGenerator.class); //$NON-NLS-1$
d386 1
a386 1
		return retrieve(ElementInitializersGenerator.class);
@


1.162.2.1
log
@rewrite element initializers in xpand
@
text
@d31 1
d103 1
d388 1
a388 1
		return getPrimaryEmitter("xpt::providers::ElementInitializers"); //$NON-NLS-1$
@


1.162.2.2
log
@rewrite metric provider in xpand
@
text
@d31 1
d103 1
d430 1
a430 1
		return getPrimaryEmitter("xpt::providers::MetricProvider"); //$NON-NLS-1$
@


1.162.2.3
log
@rewrite validation prov in xpand
@
text
@d31 1
d101 1
d416 1
a416 1
		return getPrimaryEmitter("xpt::providers::ValidationProvider"); //$NON-NLS-1$
@


1.162.2.4
log
@rewrite abs expr in xpand
@
text
@d28 1
d100 1
d430 1
a430 1
		return getPrimaryEmitter("xpt::expressions::AbstractExpression"); //$NON-NLS-1$
d432 1
a432 1

d436 1
a436 1

@


1.162.2.5
log
@get rid of jet
@
text
@d28 2
d49 2
d67 1
d98 12
d432 1
a432 1
		return getPrimaryEmitter("xpt::expressions::OCLExpressionFactory"); //$NON-NLS-1$
d436 1
a436 1
		return getPrimaryEmitter("xpt::expressions::RegexpExpressionFactory"); //$NON-NLS-1$
@


1.161
log
@[192848] Rewrite creation wizard and ui contributors in xpand
@
text
@a30 2
import org.eclipse.gmf.codegen.templates.providers.ContributionItemProviderGenerator;
import org.eclipse.gmf.codegen.templates.providers.EditPartProviderGenerator;
d103 1
a103 3
		put(tr, "/providers/EditPartProvider.javajet", EditPartProviderGenerator.class);
		put(tr, "/providers/ContributionItemProvider.javajet", ContributionItemProviderGenerator.class);
		put(tr, "/providers/ElementInitializers.javajet", ElementInitializersGenerator.class);
d283 48
a380 30
	// view factories

	public TextEmitter getDiagramViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::DiagramViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getNodeViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::NodeViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getLabelNodeViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LabelNodeViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getCompartmentViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::CompartmentViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getLinkViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LinkViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getFloatingLabelViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::FloatingLabelViewFactory"); //$NON-NLS-1$
	}

	public TextEmitter getLabelViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LabelViewFactory"); //$NON-NLS-1$
	}

d400 1
a400 1
		return retrieve(EditPartProviderGenerator.class);
d404 1
a404 1
		return retrieve(ContributionItemProviderGenerator.class);
a410 8
	public TextEmitter getPropertySheetLabelProviderEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::propsheet::LabelProvider::Class"); //$NON-NLS-1$
	}

	public TextEmitter getPropertySectionEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::propsheet::PropertySection::Class"); //$NON-NLS-1$
	}

d428 1
a428 5
		return newXpandEmitter("xpt::providers::ShortcutsDecoratorProvider::ShortcutsDecoratorProvider"); //$NON-NLS-1$
	}
	
	public TextEmitter getShortcutPropertyTesterEmitter() {
		return newXpandEmitter("xpt::editor::ShortcutPropertyTester::ShortcutPropertyTester"); //$NON-NLS-1$
d447 10
d479 4
d555 6
a560 2
	public TextEmitter getDiagramUpdaterEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::DiagramUpdater"); //$NON-NLS-1$
d563 2
a564 2
	public TextEmitter getUpdateCommandEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::UpdateCommand"); //$NON-NLS-1$
d567 2
a568 2
	public TextEmitter getNodeDescriptorEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::NodeDescriptor"); //$NON-NLS-1$
d571 2
a572 2
	public TextEmitter getLinkDescriptorEmitter() {
		return getPrimaryEmitter("xpt::diagram::updater::LinkDescriptor"); //$NON-NLS-1$
d575 2
a576 2
	public TextEmitter getActionBarContributorEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::editor::ActionBarContributor"); //$NON-NLS-1$
d579 2
a580 2
	public TextEmitter getMatchingStrategyEmitter() {
		return getPrimaryEmitter("xpt::editor::MatchingStrategy"); //$NON-NLS-1$
d583 2
a600 8
	public TextEmitter getDomainModelElementTesterEmitter() {
		return getPrimaryEmitter("xpt::editor::DomainModelElementTester"); //$NON-NLS-1$
	}

	public TextEmitter getURIEditorInputTesterEmitter() {
		return getPrimaryEmitter("xpt::editor::UriEditorInputTester"); //$NON-NLS-1$
	}

a628 4
	public BinaryEmitter getShortcutImageEmitter() throws UnexpectedBehaviourException {
		return newGIFEmitter("/editor/shortcut.gif"); //$NON-NLS-1$
	}
	
a632 20
	public BinaryEmitter getDiagramIconEmitter() throws UnexpectedBehaviourException {
		return newGIFEmitterAdapter("/editor/diagram.gif"); //$NON-NLS-1$
	}

	public BinaryEmitter getWizardBannerImageEmitter() throws UnexpectedBehaviourException {
		return newGIFEmitterAdapter("/editor/wizban.gif"); //$NON-NLS-1$
	}

    public TextEmitter getExternalizeEmitter() {
        return newXpandEmitter("xpt::Externalizer::Access"); //$NON-NLS-1$
    }

    public TextEmitter getMessagesEmitter() {
        return newXpandEmitter("xpt::Externalizer::Values"); //$NON-NLS-1$
    }

	public String getURIDiagramDocumentProviderName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::URIDiagramDocumentProvider", input); //$NON-NLS-1$
	}

d709 8
@


1.160
log
@[192850] Rewrite GraphicalNodeEditPolicy.javajet template in xpand
@
text
@a27 3
import org.eclipse.gmf.codegen.templates.editor.ActionBarContributorGenerator;
import org.eclipse.gmf.codegen.templates.editor.CreationWizardGenerator;
import org.eclipse.gmf.codegen.templates.editor.CreationWizardPageGenerator;
a109 3
		put(tr, "/editor/CreationWizard.javajet", CreationWizardGenerator.class);
		put(tr, "/editor/CreationWizardPage.javajet", CreationWizardPageGenerator.class);
		put(tr, "/editor/ActionBarContributor.javajet", ActionBarContributorGenerator.class);
d504 1
a504 1
		return newXpandEmitter("xpt::editor::DiagramEditorUtil::DiagramEditorUtil"); //$NON-NLS-1$
d506 1
a506 1
	
d508 1
a508 1
		return newXpandEmitter("xpt::editor::VisualIDRegistry::VisualIDRegistry"); //$NON-NLS-1$
d512 1
a512 1
		return retrieve(CreationWizardGenerator.class);
d516 1
a516 1
		return retrieve(CreationWizardPageGenerator.class);
d520 1
a520 1
		return newXpandEmitter("xpt::editor::Editor::Editor"); //$NON-NLS-1$
d522 1
a522 1
	
d524 1
a524 1
		return newXpandEmitter("xpt::editor::CreateShortcutAction::CreateShortcutAction"); //$NON-NLS-1$
d528 1
a528 1
		return newXpandEmitter("xpt::editor::LoadResourceAction::LoadResourceAction"); //$NON-NLS-1$
d530 1
a530 1
	
d532 1
a532 1
		return newXpandEmitter("xpt::editor::ElementChooser::ElementChooser"); //$NON-NLS-1$
d534 1
a534 1
	
d536 1
a536 1
		return newXpandEmitter("xpt::editor::DocumentProvider::DocumentProvider"); //$NON-NLS-1$
d538 1
a538 1
	
d540 1
a540 1
		return newXpandEmitter("xpt::diagram::updater::DiagramUpdater::DiagramUpdater"); //$NON-NLS-1$
d544 1
a544 1
		return newXpandEmitter("xpt::diagram::updater::UpdateCommand::UpdateCommand"); //$NON-NLS-1$
d546 1
a546 1
	
d548 1
a548 1
		return newXpandEmitter("xpt::diagram::updater::NodeDescriptor::NodeDescriptor"); //$NON-NLS-1$
d550 1
a550 1
	
d552 1
a552 1
		return newXpandEmitter("xpt::diagram::updater::LinkDescriptor::LinkDescriptor"); //$NON-NLS-1$
d554 1
a554 1
	
d556 1
a556 1
		return retrieve(ActionBarContributorGenerator.class);
d560 1
a560 1
		return newXpandEmitter("xpt::editor::MatchingStrategy::MatchingStrategy"); //$NON-NLS-1$
d562 1
a562 1
	
d564 1
a564 1
		return newXpandEmitter("xpt::navigator::NavigatorContentProvider::NavigatorContentProvider"); //$NON-NLS-1$
d566 1
a566 1
	
d568 1
a568 1
		return newXpandEmitter("xpt::navigator::DomainNavigatorContentProvider::DomainNavigatorContentProvider"); //$NON-NLS-1$
d570 1
a570 1
	
d572 1
a572 1
		return newXpandEmitter("xpt::navigator::DomainNavigatorLabelProvider::DomainNavigatorLabelProvider"); //$NON-NLS-1$
d574 1
a574 1
	
d576 1
a576 1
		return newXpandEmitter("xpt::navigator::DomainNavigatorItem::DomainNavigatorItem"); //$NON-NLS-1$
d578 1
a578 1
	
d580 1
a580 1
		return newXpandEmitter("xpt::editor::DomainModelElementTester::DomainModelElementTester"); //$NON-NLS-1$
d582 1
a582 1
	
d584 1
a584 1
		return newXpandEmitter("xpt::editor::UriEditorInputTester::UriEditorInputTester"); //$NON-NLS-1$
d588 1
a588 1
		return newXpandEmitter("xpt::navigator::NavigatorLabelProvider::NavigatorLabelProvider"); //$NON-NLS-1$
d590 1
a590 1
	
d592 1
a592 1
		return newXpandEmitter("xpt::navigator::NavigatorLinkHelper::NavigatorLinkHelper"); //$NON-NLS-1$
d594 1
a594 1
	
d596 1
a596 1
		return newXpandEmitter("xpt::navigator::NavigatorSorter::NavigatorSorter"); //$NON-NLS-1$
d598 1
a598 1
	
d600 1
a600 1
		return newXpandEmitter("xpt::navigator::NavigatorActionProvider::NavigatorActionProvider"); //$NON-NLS-1$
d602 1
a602 1
	
d604 1
a604 1
		return newXpandEmitter("xpt::navigator::AbstractNavigatorItem::AbstractNavigatorItem"); //$NON-NLS-1$
d606 1
a606 1
	
d608 1
a608 1
		return newXpandEmitter("xpt::navigator::NavigatorGroup::NavigatorGroup"); //$NON-NLS-1$
d612 1
a612 1
		return newXpandEmitter("xpt::navigator::NavigatorItem::NavigatorItem"); //$NON-NLS-1$
@


1.159
log
@group plugin templates in one folder
@
text
@a33 1
import org.eclipse.gmf.codegen.templates.policies.GraphicalNodeEditPolicyGenerator;
a107 1
		put(tr, "/policies/GraphicalNodeEditPolicy.javajet", GraphicalNodeEditPolicyGenerator.class);
d266 1
a266 1
		return newXpandEmitter("xpt::diagram::editpolicies::DiagramItemSemanticEditPolicy::DiagramItemSemanticEditPolicy"); //$NON-NLS-1$
d270 1
a270 1
		return newXpandEmitter("xpt::diagram::editpolicies::CompartmentItemSemanticEditPolicy::CompartmentItemSemanticEditPolicy"); //$NON-NLS-1$
d274 1
a274 1
		return retrieve(GraphicalNodeEditPolicyGenerator.class);
@


1.158
log
@[192464] - Convert /policies/CompartmentItemSemapticEditPolicy and DiagramItemSemanticEditPolicy .javajet template to xpand
@
text
@a621 24
	
	public TextEmitter getPluginClassEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::Activator"); //$NON-NLS-1$
	}

	public TextEmitter getPluginXmlEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin"); //$NON-NLS-1$
	}

	public TextEmitter getPluginPropertiesEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::properties"); //$NON-NLS-1$
	}

	public TextEmitter getOptionsFileEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::options"); //$NON-NLS-1$
	}

	public TextEmitter getBundleManifestEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::manifest"); //$NON-NLS-1$
	}

	public TextEmitter getBuildPropertiesEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::plugin::build"); //$NON-NLS-1$
	}
d701 26
@


1.157
log
@rewrite in xpand
@
text
@a33 2
import org.eclipse.gmf.codegen.templates.policies.CompartmentItemSemanticEditPolicyGenerator;
import org.eclipse.gmf.codegen.templates.policies.DiagramItemSemanticEditPolicyGenerator;
a109 2
		put(tr, "/policies/DiagramItemSemanticEditPolicy.javajet", DiagramItemSemanticEditPolicyGenerator.class);
		put(tr, "/policies/CompartmentItemSemanticEditPolicy.javajet", CompartmentItemSemanticEditPolicyGenerator.class);
d267 2
a268 2
	public TextEmitter getDiagramItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(DiagramItemSemanticEditPolicyGenerator.class);
d271 2
a272 2
	public TextEmitter getCompartmentItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(CompartmentItemSemanticEditPolicyGenerator.class);
@


1.156
log
@[192422] Rewrite Plugin.javajet template in xpand
@
text
@a28 1
import org.eclipse.gmf.codegen.templates.editor.BuildPropertiesGenerator;
a30 1
import org.eclipse.gmf.codegen.templates.editor.OptionsFileGenerator;
a121 2
		put(tr, "/editor/.optionsjet", OptionsFileGenerator.class);
		put(tr, "/editor/build.propertiesjet", BuildPropertiesGenerator.class);
d640 1
a640 1
		return retrieve(OptionsFileGenerator.class);
d648 1
a648 1
		return retrieve(BuildPropertiesGenerator.class);
d650 1
a650 1
	
@


1.155
log
@[191858] - Convert /providers/ShortcutsDecoratorProvider.javajet template to xpand
@
text
@a32 1
import org.eclipse.gmf.codegen.templates.editor.PluginGenerator;
a123 1
		put(tr, "/editor/Plugin.javajet", PluginGenerator.class);
d632 1
a632 1
		return retrieve(PluginGenerator.class);
@


1.154
log
@[191855] - Convert /editor/CreateShortcutAction.javajet template to xpand
@
text
@a43 1
import org.eclipse.gmf.codegen.templates.providers.ShortcutsDecoratorProviderGenerator;
a120 1
		put(tr, "/providers/ShortcutsDecoratorProvider.javajet", ShortcutsDecoratorProviderGenerator.class); //$NON-NLS-1$
d439 2
a440 2
	public TextEmitter getShortcutsDecoratorProviderEmitter() throws UnexpectedBehaviourException {
		return retrieve(ShortcutsDecoratorProviderGenerator.class);
@


1.153
log
@[191853] - Convert /editor/ElementChooser.javajet template to xpand
@
text
@a29 1
import org.eclipse.gmf.codegen.templates.editor.CreateShortcutActionGenerator;
a125 1
		put(tr, "/editor/CreateShortcutAction.javajet", CreateShortcutActionGenerator.class);
d543 2
a544 2
	public TextEmitter getCreateShortcutActionEmitter() throws UnexpectedBehaviourException {
		return retrieve(CreateShortcutActionGenerator.class);
@


1.152
log
@[192026] Rewrite edit helper templates in xpand
@
text
@a32 1
import org.eclipse.gmf.codegen.templates.editor.ElementChooserGenerator;
a127 1
		put(tr, "/editor/ElementChooser.javajet", ElementChooserGenerator.class);
d553 2
a554 2
	public TextEmitter getElementChooserEmitter() throws UnexpectedBehaviourException {
		return retrieve(ElementChooserGenerator.class);
@


1.151
log
@[192029] Rewrite modeling assistant provider in xpand
@
text
@a38 3
import org.eclipse.gmf.codegen.templates.helpers.BaseEditHelperGenerator;
import org.eclipse.gmf.codegen.templates.helpers.EditHelperAdviceGenerator;
import org.eclipse.gmf.codegen.templates.helpers.EditHelperGenerator;
a116 3
		put(tr, "/helpers/BaseEditHelper.javajet", BaseEditHelperGenerator.class);
		put(tr, "/helpers/EditHelper.javajet", EditHelperGenerator.class);
		put(tr, "/helpers/EditHelperAdvice.javajet", EditHelperAdviceGenerator.class);
d216 1
a216 1
		return retrieve(BaseEditHelperGenerator.class);
d220 1
a220 1
		return retrieve(EditHelperGenerator.class);
d224 1
a224 1
		return retrieve(EditHelperAdviceGenerator.class);
d230 1
a230 1
		return newXpandEmitter("xpt::diagram::editparts::DiagramEditPart::DiagramEditPart"); //$NON-NLS-1$
d234 1
a234 1
		return newXpandEmitter("xpt::diagram::editparts::NodeEditPart::NodeEditPart"); //$NON-NLS-1$
d238 1
a238 1
		return newXpandEmitter("xpt::diagram::editparts::NodeLabelEditPart::NodeLabelEditPart"); //$NON-NLS-1$
d242 1
a242 1
		return newXpandEmitter("xpt::diagram::editparts::ExternalNodeLabelEditPart::ExternalNodeLabelEditPart"); //$NON-NLS-1$
d246 1
a246 1
		return newXpandEmitter("xpt::diagram::editparts::ChildNodeLabelEditPart::ChildNodeLabelEditPart"); //$NON-NLS-1$
d250 1
a250 1
		return newXpandEmitter("xpt::diagram::editparts::CompartmentEditPart::CompartmentEditPart"); //$NON-NLS-1$
d254 1
a254 1
		return newXpandEmitter("xpt::diagram::editparts::LinkEditPart::LinkEditPart"); //$NON-NLS-1$
d258 1
a258 1
		return newXpandEmitter("xpt::diagram::editparts::LinkLabelEditPart::LinkLabelEditPart"); //$NON-NLS-1$
d262 1
a262 1
		return newXpandEmitter("xpt::diagram::editparts::EditPartFactory::EditPartFactory"); //$NON-NLS-1$
d268 1
a268 1
		return newXpandEmitter("xpt::diagram::editpolicies::BaseItemSemanticEditPolicy::BaseItemSemanticEditPolicy"); //$NON-NLS-1$
d272 1
a272 1
		return newXpandEmitter("xpt::diagram::editpolicies::OpenDiagram::OpenDiagram"); //$NON-NLS-1$
d276 1
a276 1
		return newXpandEmitter("xpt::diagram::editpolicies::DiagramCanonicalEditPolicy::DiagramCanonicalEditPolicy"); //$NON-NLS-1$
d280 1
a280 1
		return newXpandEmitter("xpt::diagram::editpolicies::ChildContainerCanonicalEditPolicy::ChildContainerCanonicalEditPolicy"); //$NON-NLS-1$
d296 1
a296 1
		return newXpandEmitter("xpt::diagram::editpolicies::NodeItemSemanticEditPolicy::NodeItemSemanticEditPolicy"); //$NON-NLS-1$
d300 1
a300 1
		return newXpandEmitter("xpt::diagram::editpolicies::LinkItemSemanticEditPolicy::LinkItemSemanticEditPolicy"); //$NON-NLS-1$
@


1.150
log
@[191856] - Convert /editor/Editor.javajet template to xpand
[192134] - NPE while regenerating TaiPan diagram (in editor template)
@
text
@a48 1
import org.eclipse.gmf.codegen.templates.providers.ModelingAssistantProviderGenerator;
a127 1
		put(tr, "/providers/ModelingAssistantProvider.javajet", ModelingAssistantProviderGenerator.class);
d424 1
a424 1
		return retrieve(ModelingAssistantProviderGenerator.class);
@


1.149
log
@move providers out of diagram folder
@
text
@a32 1
import org.eclipse.gmf.codegen.templates.editor.EditorGenerator;
a135 1
		put(tr, "/editor/Editor.javajet", EditorGenerator.class);
d551 2
a552 2
	public TextEmitter getEditorEmitter() throws UnexpectedBehaviourException {
		return retrieve(EditorGenerator.class);
@


1.148
log
@[192027] Rewrite IconProvider template in xpand
@
text
@d404 1
a404 1
		return newXpandEmitter("xpt::diagram::providers::ParserProvider::ParserProvider"); //$NON-NLS-1$
d412 1
a412 1
		return newXpandEmitter("xpt::diagram::providers::ElementTypes::ElementTypes"); //$NON-NLS-1$
d416 1
a416 1
		return newXpandEmitter("xpt::diagram::providers::ViewProvider::ViewProvider"); //$NON-NLS-1$
d444 1
a444 1
		return getPrimaryEmitter("xpt::diagram::providers::MarkerNavigationProvider"); //$NON-NLS-1$
d452 1
a452 1
		return getPrimaryEmitter("xpt::diagram::providers::ValidationDecoratorProvider"); //$NON-NLS-1$
@


1.147
log
@[191857] - Convert /editor/ShortcutPropertyTester.javajet template to xpand
@
text
@a48 1
import org.eclipse.gmf.codegen.templates.providers.IconProviderGenerator;
a130 1
		put(tr, "/providers/IconProvider.javajet", IconProviderGenerator.class);
d440 1
a440 1
		return retrieve(IconProviderGenerator.class);
@


1.146
log
@[191854] - Convert /editor/LoadResourceAction.javajet template to xpand
@
text
@a52 1
import org.eclipse.gmf.codegen.templates.providers.ShortcutsPropertyTester;
a135 1
		put(tr, "/editor/ShortcutPropertyTester.javajet", ShortcutsPropertyTester.class); //$NON-NLS-1$
d461 2
a462 2
	public TextEmitter getShortcutPropertyTesterEmitter() throws UnexpectedBehaviourException {
		return retrieve(ShortcutsPropertyTester.class);
@


1.145
log
@[191851] - Convert /navigator/NavigatorSorter.javajet template to xpand
@
text
@a34 1
import org.eclipse.gmf.codegen.templates.editor.LoadResourceActionGenerator;
a142 1
		put(tr, "/editor/LoadResourceAction.javajet", LoadResourceActionGenerator.class);
d565 2
a566 2
	public TextEmitter getLoadResourceActionEmitter() throws UnexpectedBehaviourException {
		return retrieve(LoadResourceActionGenerator.class);
@


1.144
log
@[191850] - Convert /navigator/NavigatorActionProvider.javajet template to xpand
@
text
@a43 1
import org.eclipse.gmf.codegen.templates.navigator.NavigatorSorterGenerator;
a146 1
		put(tr, "/navigator/NavigatorSorter.javajet", NavigatorSorterGenerator.class);
d635 2
a636 2
	public TextEmitter getNavigatorSorterEmitter() throws UnexpectedBehaviourException {
		return retrieve(NavigatorSorterGenerator.class);
d684 1
a684 1
		return newGIFEmitter("/navigator/navigatorGroup.gif"); //$NON-NLS-1$
@


1.143
log
@[191852] - Convert /navigator/NavigatorLabelProvider.javajet template to xpand
@
text
@a43 1
import org.eclipse.gmf.codegen.templates.navigator.NavigatorActionProviderGenerator;
a148 1
		put(tr, "/navigator/NavigatorActionProvider.javajet", NavigatorActionProviderGenerator.class);
d641 2
a642 2
	public TextEmitter getNavigatorActionProviderEmitter() throws UnexpectedBehaviourException {
		return retrieve(NavigatorActionProviderGenerator.class);
@


1.142
log
@rewrite create node command in xpand
@
text
@a44 1
import org.eclipse.gmf.codegen.templates.navigator.NavigatorLabelProviderGenerator;
a148 1
		put(tr, "/navigator/NavigatorLabelProvider.javajet", NavigatorLabelProviderGenerator.class);
d631 2
a632 2
	public TextEmitter getNavigatorLabelProviderEmitter() throws UnexpectedBehaviourException {
		return retrieve(NavigatorLabelProviderGenerator.class);
@


1.141
log
@rewrite command to create shortcut annotation in xpand
@
text
@a27 1
import org.eclipse.gmf.codegen.templates.commands.CreateTypeNodeCommandGenerator;
a133 1
		put(tr, "/commands/CreateTypeNodeCommand.javajet", CreateTypeNodeCommandGenerator.class);
d207 4
a320 4
	public TextEmitter getNodeCreateCommandEmitter() throws UnexpectedBehaviourException {
		return retrieve(CreateTypeNodeCommandGenerator.class);
	}

@


1.140
log
@rewrite command in xpand
@
text
@a27 1
import org.eclipse.gmf.codegen.templates.commands.CreateShortcutDecorationsCommand;
a148 1
		put(tr, "/commands/CreateShortcutDecorationsCommand.javajet", CreateShortcutDecorationsCommand.class);
d229 4
a573 4
	
	public TextEmitter getCreateShortcutDecorationCommandEmitter() throws UnexpectedBehaviourException {
		return retrieve(CreateShortcutDecorationsCommand.class);
	}
@


1.139
log
@rewrite new file wizard page in xpand
@
text
@a29 1
import org.eclipse.gmf.codegen.templates.commands.ReorientConnectionViewCommandGenerator;
a129 1
		put(tr, "/commands/ReorientConnectionViewCommand.javajet", ReorientConnectionViewCommandGenerator.class);
a210 4
	public TextEmitter getReorientConnectionViewCommandEmitter() throws UnexpectedBehaviourException {
		return retrieve(ReorientConnectionViewCommandGenerator.class);
	}

d212 1
a212 1
		return newXpandEmitter("xpt::diagram::commands::CreateLinkCommand::CreateLinkCommand"); //$NON-NLS-1$
d216 1
a216 1
		return newXpandEmitter("xpt::diagram::commands::CreateRefLinkCommand::CreateRefLinkCommand"); //$NON-NLS-1$
d220 1
a220 1
		return newXpandEmitter("xpt::diagram::commands::ReorientLinkCommand::ReorientLinkCommand"); //$NON-NLS-1$
d224 5
a228 1
		return newXpandEmitter("xpt::diagram::commands::ReorientRefLinkCommand::ReorientRefLinkCommand"); //$NON-NLS-1$
@


1.138
log
@rename label text view factory to label view factory
@
text
@a27 1
import org.eclipse.gmf.codegen.templates.application.WizardNewFileCreationPageGenerator;
a164 1
		put(tr, "/application/WizardNewFileCreationPage.javajet", WizardNewFileCreationPageGenerator.class); //$NON-NLS-1$
d707 12
d772 1
a772 1
		return newXpandEmitter("xpt::application::Application::Application"); //$NON-NLS-1$
d776 1
a776 1
		return newXpandEmitter("xpt::application::ActionBarAdvisor::ActionBarAdvisor"); //$NON-NLS-1$
d780 1
a780 1
		return newXpandEmitter("xpt::application::Perspective::Perspective"); //$NON-NLS-1$
d784 1
a784 1
		return newXpandEmitter("xpt::application::WorkbenchAdvisor::WorkbenchAdvisor"); //$NON-NLS-1$
d788 1
a788 5
		return newXpandEmitter("xpt::application::WorkbenchWindowAdvisor::WorkbenchWindowAdvisor"); //$NON-NLS-1$
	}

	public String getURIDiagramDocumentProviderName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::URIDiagramDocumentProvider", input); //$NON-NLS-1$
d792 1
a792 1
		return retrieve(WizardNewFileCreationPageGenerator.class);
a794 8
    public TextEmitter getExternalizeEmitter() {
        return newXpandEmitter("xpt::Externalizer::Access"); //$NON-NLS-1$
    }

    public TextEmitter getMessagesEmitter() {
        return newXpandEmitter("xpt::Externalizer::Values"); //$NON-NLS-1$
    }
    
@


1.137
log
@rename label view factory to floating label view factory
@
text
@d413 2
a414 2
	public TextEmitter getLabelTextViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LabelTextViewFactory"); //$NON-NLS-1$
@


1.136
log
@rewrite node view factory generator in xpand
@
text
@d409 2
a410 2
	public TextEmitter getLabelViewFactoryEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::views::LabelViewFactory"); //$NON-NLS-1$
@


1.135
log
@rewrite label node view factory generator in xpand
@
text
@a62 1
import org.eclipse.gmf.codegen.templates.providers.ViewFactoryGenerator;
a139 1
		put(tr, "/providers/ViewFactory.javajet", ViewFactoryGenerator.class);
d393 2
a394 2
	public TextEmitter getViewFactoryEmitter() throws UnexpectedBehaviourException {
		return retrieve(ViewFactoryGenerator.class);
@


1.134
log
@rewrite link view factory generator in xpand
@
text
@d399 4
@


1.133
log
@rewrite compartment view factory generator in xpand
@
text
@d403 4
@


1.132
log
@rewrite label view factories in xpand
@
text
@d399 4
@


1.131
log
@- ViewProvider is in xpand now.
- Separating semantic part of VisualIDRegistry from pure-notation.
@
text
@a57 2
import org.eclipse.gmf.codegen.templates.providers.LabelTextViewFactoryGenerator;
import org.eclipse.gmf.codegen.templates.providers.LabelViewFactoryGenerator;
a141 2
		put(tr, "/providers/LabelViewFactory.javajet", LabelViewFactoryGenerator.class);
		put(tr, "/providers/LabelTextViewFactory.javajet", LabelTextViewFactoryGenerator.class);
d400 1
a400 1
		return retrieve(LabelViewFactoryGenerator.class);
d404 1
a404 1
		return retrieve(LabelTextViewFactoryGenerator.class);
@


1.130
log
@F5 triggering update of selected element added
@
text
@a65 1
import org.eclipse.gmf.codegen.templates.providers.ViewProviderGenerator;
a145 1
		put(tr, "/providers/ViewProvider.javajet", ViewProviderGenerator.class);
d425 2
a426 2
	public TextEmitter getViewProviderEmitter() throws UnexpectedBehaviourException {
		return retrieve(ViewProviderGenerator.class);
@


1.129
log
@rewrite diagram view factory in xpand
@
text
@d592 4
@


1.128
log
@Generating VisualIDRegistry using XPAND.
@
text
@d395 1
a395 1
	// providers
d397 2
a398 2
	public TextEmitter getParserProviderEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::diagram::providers::ParserProvider::ParserProvider"); //$NON-NLS-1$
d413 6
@


1.127
log
@[178958] Provide validation decorations in RCP diagram editors
@
text
@a41 1
import org.eclipse.gmf.codegen.templates.editor.VisualIDRegistryGenerator;
a156 1
		put(tr, "/editor/VisualIDRegistry.javajet", VisualIDRegistryGenerator.class);
d547 2
a548 2
	public TextEmitter getVisualIDRegistryEmitter() throws UnexpectedBehaviourException {
		return retrieve(VisualIDRegistryGenerator.class);
@


1.126
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d496 8
@


1.125
log
@rewrite in xpand
@
text
@a36 1
import org.eclipse.gmf.codegen.templates.editor.DiagramContentsInitializerGenerator;
a157 1
		put(tr, "/editor/DiagramContentsInitializer.javajet", DiagramContentsInitializerGenerator.class);
d496 3
a498 3

	public TextEmitter getDiagramContentsInitializerEmitter() throws UnexpectedBehaviourException {
		return retrieve(DiagramContentsInitializerGenerator.class);
d529 1
a529 1
	public TextEmitter getNewDiagramFileWizardEmitter() throws UnexpectedBehaviourException {
d783 1
a783 1
	private TextEmitter getPrimaryEmitter(String templateName) throws UnexpectedBehaviourException {
@


1.124
log
@extract validate action from provider
@
text
@a65 1
import org.eclipse.gmf.codegen.templates.providers.ValidationDecoratorProviderGenerator;
a155 1
		put(tr, "/providers/ValidationDecoratorProvider.javajet", ValidationDecoratorProviderGenerator.class); //$NON-NLS-1$		
d453 4
d462 1
a462 1
		return retrieve(ValidationDecoratorProviderGenerator.class);
d476 1
a476 5
	
	public TextEmitter getMarkerNavigationProviderEmitter() throws UnexpectedBehaviourException {
		return getPrimaryEmitter("xpt::diagram::providers::MarkerNavigationProvider"); //$NON-NLS-1$
	}	
	
@


1.123
log
@rewrite marker navigation provider in xpand
@
text
@d493 8
@


1.122
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@a61 1
import org.eclipse.gmf.codegen.templates.providers.MarkerNavigationProviderGenerator;
a160 1
		put(tr, "/providers/MarkerNavigationProvider.javajet", MarkerNavigationProviderGenerator.class); //$NON-NLS-1$
d476 1
a476 1
		return retrieve(MarkerNavigationProviderGenerator.class);
@


1.121
log
@rewrite manifest.mf in xpand
@
text
@d583 4
@


1.120
log
@[156412] Support printf syntax to produce label text
@
text
@a40 1
import org.eclipse.gmf.codegen.templates.editor.ManifestGenerator;
a177 1
		put(tr, "/editor/manifest.mfjet", ManifestGenerator.class);
d648 1
a648 1
		return newXpandEmitter("xpt::plugin::plugin"); //$NON-NLS-1$
d652 1
a652 1
		return newXpandEmitter("xpt::properties::properties"); //$NON-NLS-1$
d660 1
a660 1
		return retrieve(ManifestGenerator.class);
@


1.119
log
@[156411] Support regular expressions in label mappings to extract feature values from user input
@
text
@d389 8
@


1.118
log
@[158420] Using factory methods for converting to/from Strings and EDataType values in label editor parser
@
text
@d389 8
@


1.117
log
@refactor message format parser; introduce editor pattern
@
text
@d365 8
d381 8
@


1.116
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d355 1
a355 1
	// providers
d358 5
a362 1
		return newXpandEmitter("xpt::diagram::providers::AbstractParser::AbstractParser"); //$NON-NLS-1$
d365 2
a366 2
	public TextEmitter getStructuralFeatureParserEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::diagram::providers::StructuralFeatureParser::StructuralFeatureParser"); //$NON-NLS-1$
d369 2
a370 2
	public TextEmitter getStructuralFeaturesParserEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::diagram::providers::StructuralFeaturesParser::StructuralFeaturesParser"); //$NON-NLS-1$
d373 2
@


1.115
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d543 4
@


1.114
log
@rewrite ParserProvider in xpand
@
text
@d539 4
@


1.113
log
@rewrite StructuralFeaturesParser in xpand
@
text
@a65 1
import org.eclipse.gmf.codegen.templates.providers.ParserProviderGenerator;
a156 1
		put(tr, "/providers/ParserProvider.javajet", ParserProviderGenerator.class);
d369 4
a420 4
	public TextEmitter getParserProviderEmitter() throws UnexpectedBehaviourException {
		return retrieve(ParserProviderGenerator.class);
	}

@


1.112
log
@rewrite StructuralFeatureParser in xpand
@
text
@a68 1
import org.eclipse.gmf.codegen.templates.providers.StructuralFeaturesParserGenerator;
a149 1
		put(tr, "/providers/StructuralFeaturesParser.javajet", StructuralFeaturesParserGenerator.class);
d368 1
a368 1
		return retrieve(StructuralFeaturesParserGenerator.class);
@


1.111
log
@rewrite AbstractParser in xpand
@
text
@a68 1
import org.eclipse.gmf.codegen.templates.providers.StructuralFeatureParserGenerator;
a150 1
		put(tr, "/providers/StructuralFeatureParser.javajet", StructuralFeatureParserGenerator.class);
d324 1
a324 1
		return newXpandEmitter("xpt::diagram::editpolicies::ChildContainerCanonicalEditPolicy::ChildContainerCanonicalEditPolicy");
d366 1
a366 1
		return retrieve(StructuralFeatureParserGenerator.class);
@


1.110
log
@DiagramCanonicalEditpolicy template is in XPAND now.
[182556] - getSemanticChildrenList.jetinc generates empty switch statement causing generation to fail
@
text
@a56 1
import org.eclipse.gmf.codegen.templates.providers.AbstractParserGenerator;
a151 1
		put(tr, "/providers/AbstractParser.javajet", AbstractParserGenerator.class);
d364 1
a364 1
		return retrieve(AbstractParserGenerator.class);
@


1.109
log
@[180702] Move logic from semantic edit policy into creation commands
@
text
@a54 1
import org.eclipse.gmf.codegen.templates.policies.DiagramCanonicalEditPolicyGenerator;
a149 1
		put(tr, "/policies/DiagramCanonicalEditPolicy.javajet", DiagramCanonicalEditPolicyGenerator.class);
d323 2
a324 2
	public TextEmitter getDiagramCanonicalEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(DiagramCanonicalEditPolicyGenerator.class);
@


1.108
log
@Rewriting template to xpt

[170079] - Do not generate unnecessary CanonicalEditPolicies in case if phantoms are allowed for diagram
@
text
@a29 1
import org.eclipse.gmf.codegen.templates.commands.CreateTypeLinkCommandGenerator;
a154 1
		put(tr, "/commands/CreateTypeLinkCommand.javajet", CreateTypeLinkCommandGenerator.class);
d247 4
a355 4
	
	public TextEmitter getCreateTypeLinkCommandEmitter() throws UnexpectedBehaviourException {
		return retrieve(CreateTypeLinkCommandGenerator.class);
	}
@


1.107
log
@[181778] Generate standalone creation commands for ref links
@
text
@a54 1
import org.eclipse.gmf.codegen.templates.policies.ChildContainerCanonicalEditPolicyGenerator;
a152 1
		put(tr, "/policies/ChildContainerCanonicalEditPolicy.javajet", ChildContainerCanonicalEditPolicyGenerator.class);
d327 2
a328 2
	public TextEmitter getChildContainerCanonicalEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(ChildContainerCanonicalEditPolicyGenerator.class);
@


1.106
log
@allow for subclasses to tune emitters
@
text
@d251 4
@


1.105
log
@[177758] - Link from a node to a link is not possible
@
text
@a84 1
import org.eclipse.gmf.internal.codegen.dispatch.TemplateRegistry;
d112 5
a116 9
		TemplateRegistry registry = initRegistry();
		String[] variables = new String[] {
		        "org.eclipse.emf.codegen", //$NON-NLS-1$
				"org.eclipse.emf.codegen.ecore", //$NON-NLS-1$
				"org.eclipse.emf.common", //$NON-NLS-1$
				"org.eclipse.emf.ecore", //$NON-NLS-1$
				"org.eclipse.gmf.common", //$NON-NLS-1$
				"org.eclipse.gmf.codegen" //$NON-NLS-1$
		};
d147 1
a147 2
	private static TemplateRegistry initRegistry() {
		final StaticTemplateRegistry tr = new StaticTemplateRegistry(CodegenEmitters.class.getClassLoader());
a198 1
		return tr;
d204 1
a204 1
	private static void put(StaticTemplateRegistry tr, String path, Class<?> precompiledTemplate) {
d796 1
a796 1
	private TextEmitter newXpandEmitter(String definition) {
d799 12
@


1.104
log
@Implementing "link with editor" for URI editor input
@
text
@a59 1
import org.eclipse.gmf.codegen.templates.policies.LinkItemSemanticEditPolicyGenerator;
a163 1
		put(tr, "/policies/LinkItemSemanticEditPolicy.javajet", LinkItemSemanticEditPolicyGenerator.class);
d356 2
a357 2
	public TextEmitter getLinkItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(LinkItemSemanticEditPolicyGenerator.class);
@


1.103
log
@[168660] Support shortcuts in RCP applications
@
text
@d585 4
@


1.102
log
@[114348] add command to reorient ref based links
@
text
@d482 16
@


1.101
log
@Fixing problems with NavigatorLinkHelper.
@
text
@d264 4
@


1.100
log
@NavigatorReference type constant name corrected.
Generating wrapper for domain model navigator nodes to preserve navigator tree selection/expansion on model files reload.
@
text
@a42 1
import org.eclipse.gmf.codegen.templates.editor.MatchingStrategyGenerator;
a53 1
import org.eclipse.gmf.codegen.templates.navigator.NavigatorLinkHelperGenerator;
a195 1
		put(tr, "/editor/MatchingStrategy.javajet", MatchingStrategyGenerator.class);
a196 1
		put(tr, "/navigator/NavigatorLinkHelper.javajet", NavigatorLinkHelperGenerator.class);
d542 2
a543 2
	public TextEmitter getMatchingStrategyEmitter() throws UnexpectedBehaviourException {
		return retrieve(MatchingStrategyGenerator.class);
d570 2
a571 2
	public TextEmitter getNavigatorLinkHelperEmitter() throws UnexpectedBehaviourException {
		return retrieve(NavigatorLinkHelperGenerator.class);
@


1.99
log
@Generating diagram file navigator updating code.
@
text
@d562 4
@


1.98
log
@Generating generic navigator providers for domain model.
@
text
@a52 1
import org.eclipse.gmf.codegen.templates.navigator.AbstractNavigatorItemGenerator;
a53 2
import org.eclipse.gmf.codegen.templates.navigator.NavigatorGroupGenerator;
import org.eclipse.gmf.codegen.templates.navigator.NavigatorItemGenerator;
a202 3
		put(tr, "/navigator/AbstractNavigatorItem.javajet", AbstractNavigatorItemGenerator.class);
		put(tr, "/navigator/NavigatorGroup.javajet", NavigatorGroupGenerator.class);
		put(tr, "/navigator/NavigatorItem.javajet", NavigatorItemGenerator.class);
d582 2
a583 2
	public TextEmitter getAbstractNavigatorItemEmitter() throws UnexpectedBehaviourException {
		return retrieve(AbstractNavigatorItemGenerator.class);
d586 2
a587 2
	public TextEmitter getNavigatorGroupEmitter() throws UnexpectedBehaviourException {
		return retrieve(NavigatorGroupGenerator.class);
d590 2
a591 2
	public TextEmitter getNavigatorItemEmitter() throws UnexpectedBehaviourException {
		return retrieve(NavigatorItemGenerator.class);
@


1.97
log
@rewrite init diagram file action in xpand
@
text
@d328 1
a328 1
	public TextEmitter getBaseItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
d356 1
a356 1
	public TextEmitter getNodeItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
d544 1
a544 1
	public TextEmitter getDocumentProviderEmitter() throws UnexpectedBehaviourException {
d556 1
a556 1
	public TextEmitter getNavigatorContentProviderEmitter() throws UnexpectedBehaviourException {
d559 12
@


1.96
log
@[114348] Generate command to reorient link
@
text
@a40 1
import org.eclipse.gmf.codegen.templates.editor.InitDiagramFileActionGenerator;
a191 1
		put(tr, "/editor/InitDiagramFileAction.javajet", InitDiagramFileActionGenerator.class);
d488 4
d493 1
a493 1
		return retrieve(InitDiagramFileActionGenerator.class);
@


1.95
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d272 4
@


1.94
log
@rewrite NewDiagramFileWizard in xpand
@
text
@d225 1
a225 1
	private static void put(StaticTemplateRegistry tr, String path, Class precompiledTemplate) {
d233 1
a233 1
	public TextEmitter retrieve(Class key) throws UnexpectedBehaviourException {
@


1.93
log
@[175169] - Double-click on diagram in Project Explorer should open corresponding diagram editor as before
@
text
@d38 1
a44 1
import org.eclipse.gmf.codegen.templates.editor.NewDiagramFileWizardGenerator;
d192 1
a193 1
		put(tr, "/editor/NewDiagramFileWizard.javajet", NewDiagramFileWizardGenerator.class);
d482 4
d489 5
a493 1
	
d495 1
a495 1
		return retrieve(NewDiagramFileWizardGenerator.class);
@


1.92
log
@Removing *EditorInputProxies - only EditorInputs are used in generated code from now.
@
text
@a689 4
	public TextEmitter getURIDiagramDocumentProviderEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::editor::URIDiagramDocumentProvider::URIDiagramDocumentProvider"); //$NON-NLS-1$
	}

@


1.91
log
@complete migration of plugin.xml template to xpand version - constraint providers rewritten
@
text
@a693 8
	public String getURIEditorInputProxyName(Object... input) throws UnexpectedBehaviourException {
		return getQualifiedClassName("xpt::editor::URIEditorInputProxy", input); //$NON-NLS-1$
	}

	public TextEmitter getURIEditorInputProxyEmitter() throws UnexpectedBehaviourException {
		return newXpandEmitter("xpt::editor::URIEditorInputProxy::URIEditorInputProxy"); //$NON-NLS-1$
	}

@


1.90
log
@property sheet classes are generated with xpand now
@
text
@a46 1
import org.eclipse.gmf.codegen.templates.editor.PluginXML;
a211 1
		put(tr, "/editor/plugin.xmljet", PluginXML.class);
@


1.89
log
@non-nls
@
text
@a47 2
import org.eclipse.gmf.codegen.templates.editor.PropertySectionGenerator;
import org.eclipse.gmf.codegen.templates.editor.SheetLabelProviderGenerator;
a216 2
		put(tr, "/propsheet/PropertySection.javajet", PropertySectionGenerator.class);
		put(tr, "/propsheet/SheetLabelProvider.javajet", SheetLabelProviderGenerator.class);
d431 1
a431 1
		return retrieve(SheetLabelProviderGenerator.class);
d435 1
a435 1
		return retrieve(PropertySectionGenerator.class);
@


1.88
log
@DiagramEditorUtil with xpand
@
text
@d713 1
a713 1
        return newXpandEmitter("xpt::Externalizer::Access");
d717 1
a717 1
        return newXpandEmitter("xpt::Externalizer::Values");
@


1.87
log
@Document Provider generated using xpand templates.
@
text
@a37 1
import org.eclipse.gmf.codegen.templates.editor.DiagramEditorUtilGenerator;
a196 1
		put(tr, "/editor/DiagramEditorUtil.javajet", DiagramEditorUtilGenerator.class);
d501 1
a501 1
		return retrieve(DiagramEditorUtilGenerator.class);
@


1.86
log
@editpolicy templates should be located in one folder
@
text
@a38 1
import org.eclipse.gmf.codegen.templates.editor.DocumentProviderGenerator;
a206 1
		put(tr, "/editor/DocumentProvider.javajet", DocumentProviderGenerator.class);
d539 1
a539 1
		return retrieve(DocumentProviderGenerator.class);
@


1.85
log
@[172460] Allow to generate open diagram editpolicy
@
text
@d337 1
a337 1
		return newXpandEmitter("xpt::policies::BaseItemSemanticEditPolicy::BaseItemSemanticEditPolicy"); //$NON-NLS-1$
d365 1
a365 1
		return newXpandEmitter("xpt::policies::NodeItemSemanticEditPolicy::NodeItemSemanticEditPolicy"); //$NON-NLS-1$
d367 1
a367 1
	
@


1.84
log
@move XpandTextEmitter out from codegen to common plugin
@
text
@d341 1
a341 1
		return newXpandEmitter("xpt::policies::OpenDiagram::EditPolicy"); //$NON-NLS-1$
@


1.83
log
@correct copyright year
@
text
@a16 3
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
a17 1
import org.eclipse.core.runtime.IProgressMonitor;
a91 1
import org.eclipse.gmf.common.codegen.ImportAssistant;
d105 1
a105 1
import org.eclipse.gmf.internal.xpand.BufferOutput;
a106 4
import org.eclipse.gmf.internal.xpand.XpandFacade;
import org.eclipse.gmf.internal.xpand.expression.Variable;
import org.eclipse.gmf.internal.xpand.model.XpandExecutionContext;
import org.eclipse.gmf.internal.xpand.model.XpandExecutionContextImpl;
a107 1
import org.eclipse.gmf.internal.xpand.util.ContextFactory;
d299 1
a299 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::DiagramEditPart::DiagramEditPart"); //$NON-NLS-1$
d303 1
a303 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::NodeEditPart::NodeEditPart"); //$NON-NLS-1$
d307 1
a307 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::NodeLabelEditPart::NodeLabelEditPart"); //$NON-NLS-1$
d311 1
a311 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::ExternalNodeLabelEditPart::ExternalNodeLabelEditPart"); //$NON-NLS-1$
d315 1
a315 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::ChildNodeLabelEditPart::ChildNodeLabelEditPart"); //$NON-NLS-1$
d319 1
a319 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::CompartmentEditPart::CompartmentEditPart"); //$NON-NLS-1$
d323 1
a323 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::LinkEditPart::LinkEditPart"); //$NON-NLS-1$
d327 1
a327 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::LinkLabelEditPart::LinkLabelEditPart"); //$NON-NLS-1$
d331 1
a331 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::EditPartFactory::EditPartFactory"); //$NON-NLS-1$
d337 1
a337 1
		return new XpandTextEmitter(myResourceManager, "xpt::policies::BaseItemSemanticEditPolicy::BaseItemSemanticEditPolicy"); //$NON-NLS-1$
d341 1
a341 1
		return new XpandTextEmitter(myResourceManager, "xpt::policies::OpenDiagram::EditPolicy"); //$NON-NLS-1$
d365 1
a365 1
		return new XpandTextEmitter(myResourceManager, "xpt::policies::NodeItemSemanticEditPolicy::NodeItemSemanticEditPolicy"); //$NON-NLS-1$
d381 1
a381 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editpolicies::TextFeedback::TextSelectionEditPolicy"); //$NON-NLS-1$
d385 1
a385 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editpolicies::TextFeedback::TextNonResizableEditPolicy"); //$NON-NLS-1$
d419 1
a419 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::providers::ElementTypes::ElementTypes"); //$NON-NLS-1$
d501 1
a501 1
		return new XpandTextEmitter(myResourceManager, "xpt::editor::palette::PaletteFactory::Factory"); //$NON-NLS-1$
d553 1
a553 1
		return new XpandTextEmitter(myResourceManager, "xpt::navigator::NavigatorContentProvider::NavigatorContentProvider"); //$NON-NLS-1$
d589 1
a589 1
		return new XpandTextEmitter(myResourceManager, "xpt::plugin::plugin"); //$NON-NLS-1$
d593 1
a593 1
		return new XpandTextEmitter(myResourceManager, "xpt::properties::properties"); //$NON-NLS-1$
d677 1
a677 1
		return new XpandTextEmitter(myResourceManager, "xpt::application::Application::Application"); //$NON-NLS-1$
d681 1
a681 1
		return new XpandTextEmitter(myResourceManager, "xpt::application::ActionBarAdvisor::ActionBarAdvisor"); //$NON-NLS-1$
d685 1
a685 1
		return new XpandTextEmitter(myResourceManager, "xpt::application::Perspective::Perspective"); //$NON-NLS-1$
d689 1
a689 1
		return new XpandTextEmitter(myResourceManager, "xpt::application::WorkbenchAdvisor::WorkbenchAdvisor"); //$NON-NLS-1$
d693 1
a693 1
		return new XpandTextEmitter(myResourceManager, "xpt::application::WorkbenchWindowAdvisor::WorkbenchWindowAdvisor"); //$NON-NLS-1$
d701 1
a701 1
		return new XpandTextEmitter(myResourceManager, "xpt::editor::URIDiagramDocumentProvider::URIDiagramDocumentProvider"); //$NON-NLS-1$
d709 1
a709 1
		return new XpandTextEmitter(myResourceManager, "xpt::editor::URIEditorInputProxy::URIEditorInputProxy"); //$NON-NLS-1$
d717 1
a717 1
        return new XpandTextEmitter(myResourceManager, "xpt::Externalizer::Access");
d721 1
a721 1
        return new XpandTextEmitter(myResourceManager, "xpt::Externalizer::Values");
d733 1
a733 1
		return new XpandTextEmitter(myResourceManager, definition);
d742 1
a742 1
		return new XpandTextEmitter(myResourceManager, definition);
d745 1
d783 2
a784 43
	private static class XpandTextEmitter implements TextEmitter {
		private final ResourceManager myResourceManager;
		private final String myTemplateFQN;

		public XpandTextEmitter(ResourceManager manager, String templateFQN) {
			myResourceManager = manager;
			myTemplateFQN = templateFQN;
		}

		public String generate(IProgressMonitor monitor, Object[] arguments) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException {
			StringBuilder result = new StringBuilder();
			// JET gets single Object as an argument, and that's Object[] {diagram, importUtil} in our case.
			// FIXME it's JETEmitterAdapter's role to wrap Object[] into single Object passed to emitter, not XpandEmitter's
			Object[] actualArguments = arguments != null && arguments.length == 1 && arguments[0] instanceof Object[] ? (Object[]) arguments[0] : arguments;
			new XpandFacade(createContext(result)).evaluate(myTemplateFQN, extractTarget(actualArguments), extractArguments(actualArguments));
			return result.toString();
		}

		protected Object extractTarget(Object[] arguments) {
			assert arguments != null && arguments.length > 0;
			return arguments[0];
		}

		protected Object[] extractArguments(Object[] arguments) {
			assert arguments != null && arguments.length > 0;
			ArrayList<Object> res = new ArrayList<Object>(arguments.length);
			// strip first one off, assume it's target
			for (int i = 1; i < arguments.length; i++) {
				if (false == arguments[i] instanceof ImportAssistant) {
					// strip assistant off
					res.add(arguments[i]);
				}
			}
			return res.toArray();
		}

		private XpandExecutionContext createContext(StringBuilder result) {
			final BufferOutput output = new BufferOutput(result);
			final List<Variable> globals = Collections.emptyList();
			final XpandExecutionContext xpandContext = ContextFactory.createXpandContext(myResourceManager, output, globals);
			((XpandExecutionContextImpl) xpandContext).setContextClassLoader(getClass().getClassLoader());
			return xpandContext;
		}
@


1.82
log
@OpenDiagramEditPolicy as xpt
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
@


1.81
log
@[171528] use URIEditorInput to open diagrams
@
text
@a75 1
import org.eclipse.gmf.codegen.templates.policies.OpenDiagramPolicyGenerator;
a180 1
		put(tr, "/policies/OpenDiagram.javajet", OpenDiagramPolicyGenerator.class);
d351 1
a351 1
		return retrieve(OpenDiagramPolicyGenerator.class);
d803 4
a806 1
			new XpandFacade(createContext(result)).evaluate(myTemplateFQN, extractTarget(arguments), extractArguments(arguments));
@


1.80
log
@Revriting BaseItemSemanticEditPolicy to xpand
@
text
@a31 2
import org.eclipse.gmf.codegen.templates.application.URIDiagramDocumentProviderGenerator;
import org.eclipse.gmf.codegen.templates.application.URIEditorInputProxyGenerator;
a239 2
		put(tr, "/application/URIDiagramDocumentProvider.javajet", URIDiagramDocumentProviderGenerator.class); //$NON-NLS-1$
		put(tr, "/application/URIEditorInputProxy.javajet", URIEditorInputProxyGenerator.class); //$NON-NLS-1$
d708 4
d713 5
a717 1
		return retrieve(URIDiagramDocumentProviderGenerator.class);
d721 1
a721 1
		return retrieve(URIEditorInputProxyGenerator.class);
@


1.79
log
@NodeItemSemanticEditPolicy template reimplemented using xpand.
@
text
@a76 1
import org.eclipse.gmf.codegen.templates.policies.ItemSemanticEditPolicyGenerator;
a182 1
		put(tr, "/policies/ItemSemanticEditPolicy.javajet", ItemSemanticEditPolicyGenerator.class);
d353 1
a353 1
		return retrieve(ItemSemanticEditPolicyGenerator.class);
@


1.78
log
@rewrite plugin.properties template in xpand
@
text
@a78 1
import org.eclipse.gmf.codegen.templates.policies.NodeItemSemanticEditPolicyGenerator;
a190 1
		put(tr, "/policies/NodeItemSemanticEditPolicy.javajet", NodeItemSemanticEditPolicyGenerator.class);
d383 1
a383 1
		return retrieve(NodeItemSemanticEditPolicyGenerator.class);
@


1.77
log
@rewrite plugin.xml template in xpand
@
text
@a54 1
import org.eclipse.gmf.codegen.templates.editor.PluginPropertiesGenerator;
a237 1
		put(tr, "/editor/plugin.propertiesjet", PluginPropertiesGenerator.class);
d613 1
a613 1
		return retrieve(PluginPropertiesGenerator.class);
d615 1
a615 1
	
@


1.76
log
@NavigatorContentProvider template reimplemented on xpand
@
text
@d265 1
a265 1
	private TextEmitter retrieve(Class key) throws UnexpectedBehaviourException {
d611 1
a611 1
		return retrieve(PluginXML.class);
@


1.75
log
@specify class names in templates
@
text
@a67 1
import org.eclipse.gmf.codegen.templates.navigator.NavigatorContentProviderGenerator;
a229 1
		put(tr, "/navigator/NavigatorContentProvider.javajet", NavigatorContentProviderGenerator.class);
d575 1
a575 1
		return retrieve(NavigatorContentProviderGenerator.class);
@


1.74
log
@define pref initializer class name and qualified class name in template
@
text
@d659 5
a663 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::preferences::AppearancePreferencePage::AppearancePreferencePage"); //$NON-NLS-1$
d667 5
a671 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::preferences::ConnectionsPreferencePage::ConnectionsPreferencePage"); //$NON-NLS-1$
d675 5
a679 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::preferences::GeneralPreferencePage::GeneralPreferencePage"); //$NON-NLS-1$
d683 5
a687 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::preferences::PrintingPreferencePage::PrintingPreferencePage"); //$NON-NLS-1$
d691 5
a695 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::preferences::RulersandGridPreferencePage::RulersAndGridPreferencePage"); //$NON-NLS-1$
@


1.73
log
@[134107] Provide preferences for the generated diagram editors
@
text
@d23 1
d134 2
d651 5
a655 1
		return new XpandTextEmitter(myResourceManager, "xpt::diagram::preferences::PreferenceInitializer::PreferenceInitializer"); //$NON-NLS-1$
d722 40
@


1.72
log
@[134107] Provide preferences for the generated diagram editors
@
text
@a55 1
import org.eclipse.gmf.codegen.templates.editor.PreferencesInitializerGenerator;
a227 1
		put(tr, "/editor/PreferenceInitializer.javajet", PreferencesInitializerGenerator.class);
a571 4

	public TextEmitter getPreferencesInitializerEmitter() throws UnexpectedBehaviourException {
		return retrieve(PreferencesInitializerGenerator.class);
	}
d647 4
@


1.71
log
@[139733] akarjakina - i18n support, step 1 - generate environment for externalized messages
@
text
@d651 22
@


1.70
log
@rewrite element types in xpand
@
text
@d685 8
@


1.69
log
@rewrite application templates in xpand; simplify genmodel
@
text
@d86 1
a86 1
import org.eclipse.gmf.codegen.templates.providers.ElementTypesGenerator;
a201 1
		put(tr, "/providers/ElementTypes.javajet", ElementTypesGenerator.class);
d208 1
d436 5
a440 1
	
d442 1
a442 1
		return retrieve(ElementTypesGenerator.class);
@


1.68
log
@rewrite text feedback edit policies in xpand
@
text
@a30 3
import org.eclipse.gmf.codegen.templates.application.ActionBarAdvisorGenerator;
import org.eclipse.gmf.codegen.templates.application.ApplicationGenerator;
import org.eclipse.gmf.codegen.templates.application.PerspectiveGenerator;
a33 2
import org.eclipse.gmf.codegen.templates.application.WorkbenchAdvisorGenerator;
import org.eclipse.gmf.codegen.templates.application.WorkbenchWindowAdvisorGenerator;
a248 5
		put(tr, "/application/ActionBarAdvisor.javajet", ActionBarAdvisorGenerator.class); //$NON-NLS-1$
		put(tr, "/application/Application.javajet", ApplicationGenerator.class); //$NON-NLS-1$
		put(tr, "/application/Perspective.javajet", PerspectiveGenerator.class); //$NON-NLS-1$
		put(tr, "/application/WorkbenchAdvisor.javajet", WorkbenchAdvisorGenerator.class); //$NON-NLS-1$
		put(tr, "/application/WorkbenchWindowAdvisor.javajet", WorkbenchWindowAdvisorGenerator.class); //$NON-NLS-1$
d649 2
a650 2
	public TextEmitter getActionBarAdvisorEmitter() throws UnexpectedBehaviourException {
		return retrieve(ActionBarAdvisorGenerator.class);
d653 2
a654 2
	public TextEmitter getApplicationEmitter() throws UnexpectedBehaviourException {
		return retrieve(ApplicationGenerator.class);
d658 1
a658 1
		return retrieve(PerspectiveGenerator.class);
d662 1
a662 1
		return retrieve(WorkbenchAdvisorGenerator.class);
d666 1
a666 1
		return retrieve(WorkbenchWindowAdvisorGenerator.class);
@


1.67
log
@rewrite edit part factory template in xpand
@
text
@a87 2
import org.eclipse.gmf.codegen.templates.policies.TextNonResizableEditPolicyGenerator;
import org.eclipse.gmf.codegen.templates.policies.TextSelectionEditPolicyGenerator;
a200 2
		put(tr, "/policies/TextSelectionEditPolicy.javajet", TextSelectionEditPolicyGenerator.class);
		put(tr, "/policies/TextNonResizableEditPolicy.javajet", TextNonResizableEditPolicyGenerator.class);
d414 1
a414 1
		return retrieve(TextSelectionEditPolicyGenerator.class);
d418 1
a418 1
		return retrieve(TextNonResizableEditPolicyGenerator.class);
@


1.66
log
@rewrite compartment edit part template in xpand
@
text
@a78 1
import org.eclipse.gmf.codegen.templates.parts.EditPartFactoryGenerator;
a191 1
		put(tr, "/parts/EditPartFactory.javajet", EditPartFactoryGenerator.class);
d368 1
a368 1
		return retrieve(EditPartFactoryGenerator.class);
@


1.65
log
@rewrite diagram edit part template in xpand
@
text
@a78 1
import org.eclipse.gmf.codegen.templates.parts.CompartmentEditPartGenerator;
a192 1
		put(tr, "/parts/CompartmentEditPart.javajet", CompartmentEditPartGenerator.class);
d358 1
a358 1
		return retrieve(CompartmentEditPartGenerator.class);
d360 1
a360 1
	
d372 1
a372 1
	
@


1.64
log
@[164935] Use border items infrastructure to support external labels
@
text
@a79 1
import org.eclipse.gmf.codegen.templates.parts.DiagramEditPartGenerator;
a193 1
		put(tr, "/parts/DiagramEditPart.javajet", DiagramEditPartGenerator.class);
d340 1
a340 1
		return retrieve(DiagramEditPartGenerator.class);
@


1.63
log
@Enabling dynamic templates for xpand.
@
text
@a80 1
import org.eclipse.gmf.codegen.templates.parts.DiagramExternalNodeLabelEditPartGenerator;
a85 1
import org.eclipse.gmf.codegen.templates.policies.ExternalNodeLabelHostLayoutEditPolicyGenerator;
a195 1
		put(tr, "/parts/DiagramExternalNodeLabelEditPart.javajet", DiagramExternalNodeLabelEditPartGenerator.class);
a210 1
		put(tr, "/policies/ExternalNodeLabelHostLayoutEditPolicy.javajet", ExternalNodeLabelHostLayoutEditPolicyGenerator.class);
a344 4
	public TextEmitter getDiagramExternalNodeLabelEditPartEmitter() throws UnexpectedBehaviourException {
		return retrieve(DiagramExternalNodeLabelEditPartGenerator.class);
	}

a430 4
	public TextEmitter getExternalNodeLabelHostLayoutEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(ExternalNodeLabelHostLayoutEditPolicyGenerator.class);
	}

@


1.62
log
@use xpand template to generate link edit part
@
text
@d15 1
d22 1
d24 1
d29 1
d162 3
a164 5
		myTemplatePath = new String[] {
				usePrecompiled ? null : templateDirectory != null && templateDirectory.indexOf(":") == -1 ? //$NON-NLS-1$
						URI.createPlatformResourceURI(templateDirectory, true).toString() : templateDirectory,
				baseURL.toString()
		};
d167 6
a172 2

		myResourceManager = new BundleResourceManager(baseURL);
d305 13
@


1.61
log
@use xpand template to generate node edit part
@
text
@a78 1
import org.eclipse.gmf.codegen.templates.parts.LinkEditPartGenerator;
a193 1
		put(tr, "/parts/LinkEditPart.javajet", LinkEditPartGenerator.class);
d355 1
a355 1
		return retrieve(LinkEditPartGenerator.class);
@


1.60
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@a79 1
import org.eclipse.gmf.codegen.templates.parts.NodeEditPartGenerator;
a193 1
		put(tr, "/parts/NodeEditPart.javajet", NodeEditPartGenerator.class);
d337 1
a337 1
		return retrieve(NodeEditPartGenerator.class);
@


1.59
log
@rewrite child node label edit part template in xpand
@
text
@d37 1
d207 1
d403 4
@


1.58
log
@migrate node label edit part to xpand templates
@
text
@a73 1
import org.eclipse.gmf.codegen.templates.parts.ChildNodeEditPartGenerator;
a194 1
		put(tr, "/parts/ChildNodeEditPart.javajet", ChildNodeEditPartGenerator.class);
d348 2
a349 2
	public TextEmitter getChildNodeEditPartEmitter() throws UnexpectedBehaviourException {
		return retrieve(ChildNodeEditPartGenerator.class);
@


1.57
log
@rewrite link label edit part template in xpand
@
text
@a80 1
import org.eclipse.gmf.codegen.templates.parts.NodeLabelEditPartGenerator;
a195 1
		put(tr, "/parts/NodeLabelEditPart.javajet", NodeLabelEditPartGenerator.class);
d343 1
a343 1
		return retrieve(NodeLabelEditPartGenerator.class);
@


1.56
log
@rewrite ext node label edit part template in xpand
@
text
@a79 1
import org.eclipse.gmf.codegen.templates.parts.LinkLabelEditPartGenerator;
a200 1
		put(tr, "/parts/LinkLabelEditPart.javajet", LinkLabelEditPartGenerator.class);
d365 1
a365 1
		return retrieve(LinkLabelEditPartGenerator.class);
@


1.55
log
@get started using xpand templates. PaletteFactory template replaced with xpand version
@
text
@a78 1
import org.eclipse.gmf.codegen.templates.parts.ExternalNodeLabelEditPartGenerator;
a198 1
		put(tr, "/parts/ExternalNodeLabelEditPart.javajet", ExternalNodeLabelEditPartGenerator.class);
d351 1
a351 1
		return retrieve(ExternalNodeLabelEditPartGenerator.class);
d537 1
a537 1
		return new XpandTextEmitter(myResourceManager, "xpt::editor::palette::PaletteFactory::Factory");
@


1.54
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@d14 1
d16 3
d20 1
a52 1
import org.eclipse.gmf.codegen.templates.editor.PaletteFactoryGenerator;
d116 1
d130 8
d150 1
d162 1
d166 1
a166 1
				getTemplatesBundle().getEntry("/templates/").toString() //$NON-NLS-1$
d170 2
a239 1
		put(tr, "/editor/PaletteFactory.javajet", PaletteFactoryGenerator.class);
d539 1
a539 1
		return retrieve(PaletteFactoryGenerator.class);
d717 42
@


1.53
log
@Removing warnings
@
text
@d31 1
d198 1
d397 4
@


1.52
log
@generate wizard page that allows to select file
@
text
@d149 1
a149 1
						URI.createPlatformResourceURI(templateDirectory).toString() : templateDirectory,
@


1.51
log
@[152717] - Do not generate *ReferenceConnectionEditPolicy
@
text
@d27 1
d261 1
d674 4
@


1.50
log
@heading towards full palette specification in tooldef model - no reason to invoke palette factory indirectly through services
@
text
@a87 1
import org.eclipse.gmf.codegen.templates.policies.ReferenceConnectionEditPolicyGenerator;
a188 1
		put(tr, "/policies/ReferenceConnectionEditPolicy.javajet", ReferenceConnectionEditPolicyGenerator.class);
a361 4
	public TextEmitter getReferenceConnectionEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(ReferenceConnectionEditPolicyGenerator.class);
	}

@


1.49
log
@Refactoring navigator to support cross-diagram shortcuts.
@
text
@a100 1
import org.eclipse.gmf.codegen.templates.providers.PaletteProviderGenerator;
a209 1
		put(tr, "/providers/PaletteProvider.javajet", PaletteProviderGenerator.class);
a449 4
	public TextEmitter getPaletteProviderEmitter() throws UnexpectedBehaviourException {
		return retrieve(PaletteProviderGenerator.class);
	}
	
@


1.48
log
@remove file creator template
@
text
@d104 1
d219 1
d491 4
@


1.47
log
@D&D from diagram content navigator to Diagram surface.
@
text
@a36 1
import org.eclipse.gmf.codegen.templates.editor.DiagramFileCreatorGenerator;
a223 1
		put(tr, "/editor/DiagramFileCreator.javajet", DiagramFileCreatorGenerator.class);
a526 4

	public TextEmitter getDiagramFileCreatorEmitter() throws UnexpectedBehaviourException {
		return retrieve(DiagramFileCreatorGenerator.class);
	}
@


1.46
log
@Open action for diagram nodes in Navigator added.
@
text
@d29 1
d231 1
d553 4
@


1.45
log
@Navigator Sorter added.
@
text
@d61 1
d240 1
d592 4
@


1.44
log
@#114200 use uri editor input for diagram editor
@
text
@d66 1
d238 1
d586 4
@


1.43
log
@LinkHelper generated for Project Explorer view.
@
text
@d25 2
d130 2
a131 1
	private static final String TEMPLATES_PLUGIN_ID = "org.eclipse.gmf.codegen";
d138 6
a143 6
		        "org.eclipse.emf.codegen",
				"org.eclipse.emf.codegen.ecore",
				"org.eclipse.emf.common",
				"org.eclipse.emf.ecore",
				"org.eclipse.gmf.common",
				"org.eclipse.gmf.codegen"
d146 3
a148 2
				usePrecompiled ? null : templateDirectory != null && templateDirectory.indexOf(":") == -1 ? URI.createPlatformResourceURI(templateDirectory).toString() : templateDirectory,
				getTemplatesBundle().getEntry("/templates/").toString()
d256 2
d289 1
a289 1
		return getTemplatesBundle().getEntry("/templates/emf-merge.xml");
d621 1
a621 1
		return newGIFEmitter("/editor/shortcut.gif");
d625 1
a625 1
		return newGIFEmitter("/navigator/navigatorGroup.gif");
d629 1
a629 1
		return newGIFEmitterAdapter("/editor/diagram.gif");
d633 1
a633 1
		return newGIFEmitterAdapter("/editor/wizban.gif");
d658 8
@


1.42
log
@#114200 generate RCP specific classes
@
text
@d63 1
d232 1
d574 4
@


1.41
log
@[119465] support for diagram partitioning - use annotations to keep references to diagrams and to pass information about editors to be open.
Still a lot of subtle issues to resolve, do not turn editpolicy generation on for a while
@
text
@d22 5
a239 1

a241 1

d245 5
a249 1

d624 24
@


1.40
log
@do not generate GraphicalNodeEditPolicy unless there's smth for it to do
@
text
@d77 1
d179 1
d349 4
@


1.39
log
@Read-only properties provided into the navigator.
@
text
@a75 1
import org.eclipse.gmf.codegen.templates.policies.NodeGraphicalNodeEditPolicyGenerator;
a181 1
		put(tr, "/policies/NodeGraphicalNodeEditPolicy.javajet", NodeGraphicalNodeEditPolicyGenerator.class);
a342 4
	public TextEmitter getBaseGraphicalNodeEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(GraphicalNodeEditPolicyGenerator.class);
	}
	
d363 2
a364 2
	public TextEmitter getNodeGraphicalNodeEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(NodeGraphicalNodeEditPolicyGenerator.class);
@


1.38
log
@optionally generate label provider for caption of property sheet
@
text
@a36 3
import org.eclipse.gmf.codegen.templates.editor.NavigatorContentProviderGenerator;
import org.eclipse.gmf.codegen.templates.editor.NavigatorGroupGenerator;
import org.eclipse.gmf.codegen.templates.editor.NavigatorLabelProviderGenerator;
d53 5
d224 5
a228 3
		put(tr, "/editor/NavigatorContentProvider.javajet", NavigatorContentProviderGenerator.class);
		put(tr, "/editor/NavigatorLabelProvider.javajet", NavigatorLabelProviderGenerator.class);
		put(tr, "/editor/NavigatorGroup.javajet", NavigatorGroupGenerator.class);
d565 4
d572 4
d606 1
a606 1
		return newGIFEmitter("/editor/navigatorGroup.gif");
@


1.37
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d48 1
d233 1
d439 4
@


1.36
log
@Generating group icons only once.
@
text
@d47 1
a89 1
import org.eclipse.gmf.codegen.templates.providers.PropertyProviderGenerator;
a197 1
		put(tr, "/providers/PropertyProvider.javajet", PropertyProviderGenerator.class);
d230 3
a232 1
		
d236 1
a236 1
		
d437 2
a438 2
	public TextEmitter getPropertyProviderEmitter() throws UnexpectedBehaviourException {
		return retrieve(PropertyProviderGenerator.class);
@


1.35
log
@Icons provided to Navigator
@
text
@d587 1
a587 1
		return newGIFEmitterAdapter("/editor/navigatorGroup.gif");
@


1.34
log
@Model navigator, initial version.
@
text
@d585 4
@


1.33
log
@refactoring: abstract use of JMerge for merging away from generator services (GeneratorBase)
@
text
@d37 3
d222 3
d545 4
d550 8
d609 1
a609 1
}
@


1.32
log
@extracted caching behaviour outside from the factory - moving towards support for different template engines, #114207
@
text
@d18 3
d102 1
d107 1
d138 16
@


1.31
log
@hide jet nature of emitters far behind - moving towards support for different template engines
@
text
@d92 1
d94 1
d129 2
a130 1
		myFactory = new EmitterFactory(getTemplatePath(), registry, usePrecompiled, variables, true);
@


1.30
log
@#144885 CCE while moving external node label on diagram
@
text
@a17 1
import org.eclipse.emf.codegen.jet.JETEmitter;
d220 1
a220 1
	private JETEmitter retrieve(Class key) throws UnexpectedBehaviourException {
d222 1
a222 1
			return myFactory.acquireEmitter(key);
d242 1
a242 1
	public JETEmitter getReorientConnectionViewCommandEmitter() throws UnexpectedBehaviourException {
d248 1
a248 1
	public JETEmitter getBaseEditHelperEmitter() throws UnexpectedBehaviourException {
d252 1
a252 1
	public JETEmitter getEditHelperEmitter() throws UnexpectedBehaviourException {
d256 1
a256 1
	public JETEmitter getEditHelperAdviceEmitter() throws UnexpectedBehaviourException {
d262 1
a262 1
	public JETEmitter getDiagramEditPartEmitter() throws UnexpectedBehaviourException {
d266 1
a266 1
	public JETEmitter getDiagramExternalNodeLabelEditPartEmitter() throws UnexpectedBehaviourException {
d270 1
a270 1
	public JETEmitter getNodeEditPartEmitter() throws UnexpectedBehaviourException {
d274 1
a274 1
	public JETEmitter getNodeLabelEditPartEmitter() throws UnexpectedBehaviourException {
d278 1
a278 1
	public JETEmitter getExternalNodeLabelEditPartEmitter() throws UnexpectedBehaviourException {
d282 1
a282 1
	public JETEmitter getChildNodeEditPartEmitter() throws UnexpectedBehaviourException {
d286 1
a286 1
	public JETEmitter getCompartmentEditPartEmitter() throws UnexpectedBehaviourException {
d290 1
a290 1
	public JETEmitter getLinkEditPartEmitter() throws UnexpectedBehaviourException {
d294 1
a294 1
	public JETEmitter getLinkLabelEditPartEmitter() throws UnexpectedBehaviourException {
d298 1
a298 1
	public JETEmitter getEditPartFactoryEmitter() throws UnexpectedBehaviourException {
d304 1
a304 1
	public JETEmitter getBaseItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
d308 1
a308 1
	public JETEmitter getBaseGraphicalNodeEditPolicyEmitter() throws UnexpectedBehaviourException {
d312 1
a312 1
	public JETEmitter getReferenceConnectionEditPolicyEmitter() throws UnexpectedBehaviourException {
d316 1
a316 1
	public JETEmitter getDiagramCanonicalEditPolicyEmitter() throws UnexpectedBehaviourException {
d320 1
a320 1
	public JETEmitter getChildContainerCanonicalEditPolicyEmitter() throws UnexpectedBehaviourException {
d324 1
a324 1
	public JETEmitter getDiagramItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
d328 1
a328 1
	public JETEmitter getCompartmentItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
d332 1
a332 1
	public JETEmitter getNodeGraphicalNodeEditPolicyEmitter() throws UnexpectedBehaviourException {
d336 1
a336 1
	public JETEmitter getNodeItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
d340 1
a340 1
	public JETEmitter getLinkItemSemanticEditPolicyEmitter() throws UnexpectedBehaviourException {
d344 1
a344 1
	public JETEmitter getTextSelectionEditPolicyEmitter() throws UnexpectedBehaviourException {
d348 1
a348 1
	public JETEmitter getTextNonResizableEditPolicyEmitter() throws UnexpectedBehaviourException {
d352 1
a352 1
	public JETEmitter getExternalNodeLabelHostLayoutEditPolicyEmitter() throws UnexpectedBehaviourException {
d358 1
a358 1
	public JETEmitter getAbstractParserEmitter() throws UnexpectedBehaviourException {
d362 1
a362 1
	public JETEmitter getStructuralFeatureParserEmitter() throws UnexpectedBehaviourException {
d366 1
a366 1
	public JETEmitter getStructuralFeaturesParserEmitter() throws UnexpectedBehaviourException {
d370 1
a370 1
	public JETEmitter getViewFactoryEmitter() throws UnexpectedBehaviourException {
d374 1
a374 1
	public JETEmitter getLabelViewFactoryEmitter() throws UnexpectedBehaviourException {
d378 1
a378 1
	public JETEmitter getLabelTextViewFactoryEmitter() throws UnexpectedBehaviourException {
d382 1
a382 1
	public JETEmitter getElementTypesEmitter() throws UnexpectedBehaviourException {
d386 1
a386 1
	public JETEmitter getViewProviderEmitter() throws UnexpectedBehaviourException {
d390 1
a390 1
	public JETEmitter getEditPartProviderEmitter() throws UnexpectedBehaviourException {
d394 1
a394 1
	public JETEmitter getPaletteProviderEmitter() throws UnexpectedBehaviourException {
d398 1
a398 1
	public JETEmitter getContributionItemProviderEmitter() throws UnexpectedBehaviourException {
d402 1
a402 1
	public JETEmitter getModelingAssistantProviderEmitter() throws UnexpectedBehaviourException {
d406 1
a406 1
	public JETEmitter getPropertyProviderEmitter() throws UnexpectedBehaviourException {
d410 1
a410 1
	public JETEmitter getIconProviderEmitter() throws UnexpectedBehaviourException {
d414 1
a414 1
	public JETEmitter getParserProviderEmitter() throws UnexpectedBehaviourException {
d418 1
a418 1
	public JETEmitter getValidationProviderEmitter() throws UnexpectedBehaviourException {
d422 1
a422 1
	public JETEmitter getValidationDecoratorProviderEmitter() throws UnexpectedBehaviourException {
d426 1
a426 1
	public JETEmitter getShortcutsDecoratorProviderEmitter() throws UnexpectedBehaviourException {
d430 1
a430 1
	public JETEmitter getMetricProviderEmitter() throws UnexpectedBehaviourException {
d434 1
a434 1
	public JETEmitter getMarkerNavigationProviderEmitter() throws UnexpectedBehaviourException {
d438 1
a438 1
	public JETEmitter getAbstractExpressionEmitter() throws UnexpectedBehaviourException {
d442 1
a442 1
	public JETEmitter getOCLExpressionFactoryEmitter() throws UnexpectedBehaviourException {
d446 1
a446 1
	public JETEmitter getRegexpExpressionFactoryEmitter() throws UnexpectedBehaviourException {
d452 1
a452 1
	public JETEmitter getInitDiagramFileActionEmitter() throws UnexpectedBehaviourException {
d456 1
a456 1
	public JETEmitter getNewDiagramFileWizardEmitter() throws UnexpectedBehaviourException {
d460 1
a460 1
	public JETEmitter getPaletteEmitter() throws UnexpectedBehaviourException {
d464 1
a464 1
	public JETEmitter getDiagramEditorUtilEmitter() throws UnexpectedBehaviourException {
d468 1
a468 1
	public JETEmitter getDiagramFileCreatorEmitter() throws UnexpectedBehaviourException {
d472 1
a472 1
	public JETEmitter getVisualIDRegistryEmitter() throws UnexpectedBehaviourException {
d476 1
a476 1
	public JETEmitter getCreationWizardEmitter() throws UnexpectedBehaviourException {
d480 1
a480 1
	public JETEmitter getCreationWizardPageEmitter() throws UnexpectedBehaviourException {
d484 1
a484 1
	public JETEmitter getEditorEmitter() throws UnexpectedBehaviourException {
d488 1
a488 1
	public JETEmitter getCreateShortcutActionEmitter() throws UnexpectedBehaviourException {
d492 1
a492 1
	public JETEmitter getLoadResourceActionEmitter() throws UnexpectedBehaviourException {
d496 1
a496 1
	public JETEmitter getElementChooserEmitter() throws UnexpectedBehaviourException {
d500 1
a500 1
	public JETEmitter getDocumentProviderEmitter() throws UnexpectedBehaviourException {
d504 1
a504 1
	public JETEmitter getActionBarContributorEmitter() throws UnexpectedBehaviourException {
d508 1
a508 1
	public JETEmitter getMatchingStrategyEmitter() throws UnexpectedBehaviourException {
d512 1
a512 1
	public JETEmitter getPreferencesInitializerEmitter() throws UnexpectedBehaviourException {
d516 1
a516 1
	public JETEmitter getPluginClassEmitter() throws UnexpectedBehaviourException {
d521 1
a521 1
		return new JETEmitterAdapter(retrieve(PluginXML.class));
d525 1
a525 1
		return new JETEmitterAdapter(retrieve(PluginPropertiesGenerator.class));
d529 1
a529 1
		return new JETEmitterAdapter(retrieve(OptionsFileGenerator.class));
d533 1
a533 1
		return new JETEmitterAdapter(retrieve(ManifestGenerator.class));
d537 1
a537 1
		return new JETEmitterAdapter(retrieve(BuildPropertiesGenerator.class));
@


1.30.2.1
log
@[153901] Updated copyright date from 2005 to 2005, 2006 for those changed in CVS in 2006 (based on Tom/Anthony's script).
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 Borland Software Corporation
@


1.29
log
@#126249 Generate PrintPreview action for the diagram
@
text
@d63 1
d159 1
d353 4
@


1.28
log
@#144251 Example ecore diagram editor creates invalid ecore file

Should be possible to remove reference-only links.
@
text
@d72 1
d168 1
d392 4
@


1.27
log
@#141865 Icon not displayed for the wizard banner
Wizard banner image and wizard/editor icon are generated now with EMF facility for coloured .gifs
Keyword added to iconPath values to allow reference icons from EMF editor
@
text
@d68 1
d147 1
d308 4
@


1.26
log
@Emitter became top-level entity (TextEmitter), oddness of JetAdapter and Emitter api were cleared.
GeneratorBase lost knowledge about JET.
Parts of gmf.common made internal to avoid possible API issues.
ImportAssistant refactored to know name of compilation unit to avoid problems like #134506.
FigureGenerator's reuse of ImportAssistant removed.
[mgolubev] Tests for #134506 and 142553
@
text
@d94 1
d97 1
d523 22
a544 2
	public GIFEmitter getShortcutImageEmitter() throws UnexpectedBehaviourException {
		String templateLocation = JETCompiler.find(getTemplatePath(), "/editor/shortcut.gif");
d546 1
a546 1
			throw new UnexpectedBehaviourException("shortcut image template not found");
d548 1
a548 1
		return new GIFEmitter(templateLocation);
@


1.25
log
@#139843
- VisualIdRegistry corrected
- .option file generated so in future we would be able to switch off info messages by default.
@
text
@a89 1
import org.eclipse.gmf.common.codegen.GIFEmitter;
d94 3
d501 2
a502 2
	public JETEmitter getPluginXmlEmitter() throws UnexpectedBehaviourException {
		return retrieve(PluginXML.class);
d505 2
a506 2
	public JETEmitter getPluginPropertiesEmitter() throws UnexpectedBehaviourException {
		return retrieve(PluginPropertiesGenerator.class);
d509 2
a510 2
	public JETEmitter getOptionsFileEmitter() throws UnexpectedBehaviourException {
		return retrieve(OptionsFileGenerator.class);
d513 2
a514 2
	public JETEmitter getBundleManifestEmitter() throws UnexpectedBehaviourException {
		return retrieve(ManifestGenerator.class);
d517 2
a518 2
	public JETEmitter getBuildPropertiesEmitter() throws UnexpectedBehaviourException {
		return retrieve(BuildPropertiesGenerator.class);
@


1.24
log
@#136803 Support decorator provider for validated elements in generated diagram editors
@
text
@d36 1
d189 1
d506 4
@


1.23
log
@#138687 Add RegExpExpressionFactory JET template to the editor generation step
@
text
@d84 1
d165 1
d399 4
@


1.22
log
@remove ref connection edit policy - not required anymore
@
text
@d44 1
d189 3
a191 2
		put(tr, "/expressions/AbstractExpression.javajet", AbstractExpressionGenerator.class);		
		put(tr, "/expressions/OCLExpressionFactory.javajet", OCLExpressionFactoryGenerator.class);		
d416 4
@


1.21
log
@remove temporary label direct edit policy
@
text
@a65 1
import org.eclipse.gmf.codegen.templates.policies.ReferenceConnectionEditPolicyGenerator;
a138 1
		put(tr, "/policies/ReferenceConnectionEditPolicy.javajet", ReferenceConnectionEditPolicyGenerator.class);
a296 4
	public JETEmitter getReferenceConnectionEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(ReferenceConnectionEditPolicyGenerator.class);
	}

@


1.20
log
@#135693 Use decoration service to provide shortcut image
@
text
@a62 1
import org.eclipse.gmf.codegen.templates.policies.LabelDirectEditPolicyGenerator;
a191 2
		// temp
		put(tr, "/policies/LabelDirectEditPolicy.javajet", LabelDirectEditPolicyGenerator.class);
a195 4
	public JETEmitter getLabelDirectEditPolicyEmitter() throws UnexpectedBehaviourException {
		return retrieve(LabelDirectEditPolicyGenerator.class);
	}

@


1.19
log
@[#134511] common access to expressions of different languages
@
text
@d82 1
d166 1
d407 5
a411 1
	
@


1.18
log
@#135694 remove temporary code
@
text
@d42 2
d189 2
d413 8
@


1.17
log
@#126200 register element types in xml
@
text
@a50 1
import org.eclipse.gmf.codegen.templates.parts.ITextAwareEditPartGenerator;
a54 1
import org.eclipse.gmf.codegen.templates.parts.TextDirectEditManagerGenerator;
a187 2
		put(tr, "/parts/ITextAwareEditPart.javajet", ITextAwareEditPartGenerator.class);
		put(tr, "/parts/TextDirectEditManager.javajet", TextDirectEditManagerGenerator.class);
a192 8
	public JETEmitter getITextAwareEditPartEmitter() throws UnexpectedBehaviourException {
		return retrieve(ITextAwareEditPartGenerator.class);
	}

	public JETEmitter getTextDirectEditManagerEmitter() throws UnexpectedBehaviourException {
		return retrieve(TextDirectEditManagerGenerator.class);
	}

@


1.16
log
@#125900 Redundant annotations added to View in generated view factory

Visual ID used as a semantic hint for creation of all the diagram elements.
@
text
@d42 1
d125 1
d248 4
@


1.15
log
@refactor exception thrown during generation. There's nothing we could do about JETException, so why treat it differently from Unexpected
@
text
@a80 1
import org.eclipse.gmf.codegen.templates.providers.SemanticHintsGenerator;
a150 1
		put(tr, "/providers/SemanticHints.javajet", SemanticHintsGenerator.class);
a359 4
	public JETEmitter getSemanticHintsEmitter() throws UnexpectedBehaviourException {
		return retrieve(SemanticHintsGenerator.class);
	}

@


1.14
log
@Move GIFEmitter to common plug-in to reuse in pure-gef codegen
@
text
@a18 1
import org.eclipse.emf.codegen.jet.JETException;
d197 1
a197 1
	public JETEmitter getITextAwareEditPartEmitter() throws JETException {
d201 1
a201 1
	public JETEmitter getTextDirectEditManagerEmitter() throws JETException {
d205 1
a205 1
	public JETEmitter getLabelDirectEditPolicyEmitter() throws JETException {
d220 1
a220 1
	private JETEmitter retrieve(Class key) throws JETException {
d224 1
a224 4
			// FIXME rethrow as UnexpectedBehaviour()
			throw new JETException(ex.getClass().getName(), ex);
		} catch (UnexpectedBehaviourException ex) {
			throw new JETException(ex.getClass().getName(), ex);
d242 1
a242 1
	public JETEmitter getReorientConnectionViewCommandEmitter() throws JETException {
d248 1
a248 1
	public JETEmitter getEditHelperEmitter() throws JETException {
d252 1
a252 1
	public JETEmitter getEditHelperAdviceEmitter() throws JETException {
d258 1
a258 1
	public JETEmitter getDiagramEditPartEmitter() throws JETException {
d262 1
a262 1
	public JETEmitter getDiagramExternalNodeLabelEditPartEmitter() throws JETException {
d266 1
a266 1
	public JETEmitter getNodeEditPartEmitter() throws JETException {
d270 1
a270 1
	public JETEmitter getNodeLabelEditPartEmitter() throws JETException {
d274 1
a274 1
	public JETEmitter getExternalNodeLabelEditPartEmitter() throws JETException {
d278 1
a278 1
	public JETEmitter getChildNodeEditPartEmitter() throws JETException {
d282 1
a282 1
	public JETEmitter getCompartmentEditPartEmitter() throws JETException {
d286 1
a286 1
	public JETEmitter getLinkEditPartEmitter() throws JETException {
d290 1
a290 1
	public JETEmitter getLinkLabelEditPartEmitter() throws JETException {
d294 1
a294 1
	public JETEmitter getEditPartFactoryEmitter() throws JETException {
d300 1
a300 1
	public JETEmitter getBaseItemSemanticEditPolicyEmitter() throws JETException {
d304 1
a304 1
	public JETEmitter getBaseGraphicalNodeEditPolicyEmitter() throws JETException {
d308 1
a308 1
	public JETEmitter getReferenceConnectionEditPolicyEmitter() throws JETException {
d312 1
a312 1
	public JETEmitter getDiagramCanonicalEditPolicyEmitter() throws JETException {
d316 1
a316 1
	public JETEmitter getChildContainerCanonicalEditPolicyEmitter() throws JETException {
d320 1
a320 1
	public JETEmitter getDiagramItemSemanticEditPolicyEmitter() throws JETException {
d324 1
a324 1
	public JETEmitter getCompartmentItemSemanticEditPolicyEmitter() throws JETException {
d328 1
a328 1
	public JETEmitter getNodeGraphicalNodeEditPolicyEmitter() throws JETException {
d332 1
a332 1
	public JETEmitter getNodeItemSemanticEditPolicyEmitter() throws JETException {
d336 1
a336 1
	public JETEmitter getLinkItemSemanticEditPolicyEmitter() throws JETException {
d340 1
a340 1
	public JETEmitter getTextSelectionEditPolicyEmitter() throws JETException {
d344 1
a344 1
	public JETEmitter getTextNonResizableEditPolicyEmitter() throws JETException {
d350 1
a350 1
	public JETEmitter getAbstractParserEmitter() throws JETException {
d354 1
a354 1
	public JETEmitter getStructuralFeatureParserEmitter() throws JETException {
d358 1
a358 1
	public JETEmitter getStructuralFeaturesParserEmitter() throws JETException {
d362 1
a362 1
	public JETEmitter getSemanticHintsEmitter() throws JETException {
d366 1
a366 1
	public JETEmitter getViewFactoryEmitter() throws JETException {
d370 1
a370 1
	public JETEmitter getLabelViewFactoryEmitter() throws JETException {
d374 1
a374 1
	public JETEmitter getLabelTextViewFactoryEmitter() throws JETException {
d378 1
a378 1
	public JETEmitter getElementTypesEmitter() throws JETException {
d382 1
a382 1
	public JETEmitter getViewProviderEmitter() throws JETException {
d386 1
a386 1
	public JETEmitter getEditPartProviderEmitter() throws JETException {
d390 1
a390 1
	public JETEmitter getPaletteProviderEmitter() throws JETException {
d394 1
a394 1
	public JETEmitter getModelingAssistantProviderEmitter() throws JETException {
d398 1
a398 1
	public JETEmitter getPropertyProviderEmitter() throws JETException {
d402 1
a402 1
	public JETEmitter getIconProviderEmitter() throws JETException {
d406 1
a406 1
	public JETEmitter getParserProviderEmitter() throws JETException {
d410 1
a410 1
	public JETEmitter getValidationProviderEmitter() throws JETException {
d414 1
a414 1
	public JETEmitter getMetricProviderEmitter() throws JETException {
d418 1
a418 1
	public JETEmitter getMarkerNavigationProviderEmitter() throws JETException {
d424 1
a424 1
	public JETEmitter getInitDiagramFileActionEmitter() throws JETException {
d428 1
a428 1
	public JETEmitter getNewDiagramFileWizardEmitter() throws JETException {
d432 1
a432 1
	public JETEmitter getPaletteEmitter() throws JETException {
d436 1
a436 1
	public JETEmitter getDiagramEditorUtilEmitter() throws JETException {
d440 1
a440 1
	public JETEmitter getDiagramFileCreatorEmitter() throws JETException {
d444 1
a444 1
	public JETEmitter getVisualIDRegistryEmitter() throws JETException {
d448 1
a448 1
	public JETEmitter getCreationWizardEmitter() throws JETException {
d452 1
a452 1
	public JETEmitter getCreationWizardPageEmitter() throws JETException {
d456 1
a456 1
	public JETEmitter getEditorEmitter() throws JETException {
d460 1
a460 1
	public JETEmitter getCreateShortcutActionEmitter() throws JETException {
d464 1
a464 1
	public JETEmitter getLoadResourceActionEmitter() throws JETException {
d468 1
a468 1
	public JETEmitter getElementChooserEmitter() throws JETException {
d472 1
a472 1
	public JETEmitter getDocumentProviderEmitter() throws JETException {
d476 1
a476 1
	public JETEmitter getActionBarContributorEmitter() throws JETException {
d480 1
a480 1
	public JETEmitter getMatchingStrategyEmitter() throws JETException {
d484 1
a484 1
	public JETEmitter getPreferencesInitializerEmitter() throws JETException {
d488 1
a488 1
	public JETEmitter getPluginClassEmitter() throws JETException {
d492 1
a492 1
	public JETEmitter getPluginXmlEmitter() throws JETException {
d496 1
a496 1
	public JETEmitter getPluginPropertiesEmitter() throws JETException {
d500 1
a500 1
	public JETEmitter getBundleManifestEmitter() throws JETException {
d504 1
a504 1
	public JETEmitter getBuildPropertiesEmitter() throws JETException {
d508 1
a508 1
	public GIFEmitter getShortcutImageEmitter() throws JETException {
d511 1
a511 1
			throw new JETException("shortcut image template not found");
@


1.13
log
@#126200 register element types in xml
@
text
@d89 1
@


1.12
log
@[rdvorak] #133369 Generate code for metric evaluation and result visualization
@
text
@d43 2
d125 2
d249 10
@


1.11
log
@provide selection for the child nodes
@
text
@d75 1
d161 1
d400 1
a400 1
		return retrieve(ValidationProviderGenerator.class); //$NON-NLS-1$
d403 4
d408 1
a408 1
		return retrieve(MarkerNavigationProviderGenerator.class); //$NON-NLS-1$
@


1.10
log
@#131543 Code reconstructing the diagram contents separated from the init diagram file action.
@
text
@a64 1
import org.eclipse.gmf.codegen.templates.policies.NonResizableTextEditPolicyGenerator;
d66 1
d143 1
a186 1
		put(tr, "/policies/NonResizableTextEditPolicy.javajet", NonResizableTextEditPolicyGenerator.class);
a202 4
	public JETEmitter getNonResizableTextEditPolicyEmitter() throws JETException {
		return retrieve(NonResizableTextEditPolicyGenerator.class);
	}

d331 4
@


1.9
log
@skip CTLEP generation
@
text
@d36 1
d161 1
d410 4
@


1.8
log
@provide custom text selection edit policy
@
text
@a55 1
import org.eclipse.gmf.codegen.templates.policies.ConstrainedToolbarLayoutEditPolicyGenerator;
a182 1
		put(tr, "/policies/ConstrainedToolbarLayoutEditPolicy.javajet", ConstrainedToolbarLayoutEditPolicyGenerator.class);
a196 4
	public JETEmitter getConstrainedToolbarLayoutEditPolicyEmitter() throws JETException {
		return retrieve(ConstrainedToolbarLayoutEditPolicyGenerator.class);
	}

@


1.7
log
@#129145 do not use intermediate TextCompartmentEditParts
@
text
@d67 1
d142 1
d334 5
a338 1
	
@


1.6
log
@#125175
- Do not cache templates if dynamicTemplates == true
- template classLoader could be specified if using dynamicTemplates
@
text
@d48 1
a48 1
import org.eclipse.gmf.codegen.templates.parts.ExternalNodeLabelTextEditPartGenerator;
a50 1
import org.eclipse.gmf.codegen.templates.parts.LinkLabelTextEditPartGenerator;
d53 1
d56 1
d61 1
d65 1
a125 1
		put(tr, "/parts/ExternalNodeLabelTextEditPart.javajet", ExternalNodeLabelTextEditPartGenerator.class);
a129 1
		put(tr, "/parts/LinkLabelTextEditPart.javajet", LinkLabelTextEditPartGenerator.class);
d178 8
d189 20
a270 4
	public JETEmitter getExternalNodeLabelTextEditPartEmitter() throws JETException {
		return retrieve(ExternalNodeLabelTextEditPartGenerator.class);
	}

a286 4
	public JETEmitter getLinkLabelTextEditPartEmitter() throws JETException {
		return retrieve(LinkLabelTextEditPartGenerator.class);
	}

@


1.5
log
@#127696
Templates should use new transaction API
(not finished)
@
text
@d116 1
a116 1
		final StaticTemplateRegistry tr = new StaticTemplateRegistry();
@


1.4
log
@#125175 Allow toolsmith to use different (sub)set of templates for editor code generation
@
text
@a70 1
import org.eclipse.gmf.codegen.templates.providers.MetamodelSupportProviderGenerator;
a150 1
		put(tr, "/providers/MetamodelSupportProvider.javajet", MetamodelSupportProviderGenerator.class);
a357 4
	public JETEmitter getMetamodelSupportProviderEmitter() throws JETException {
		return retrieve(MetamodelSupportProviderGenerator.class);
	}

@


1.3
log
@#126199 add palette provider
@
text
@d17 1
d20 1
d97 1
d99 1
a99 1
	public CodegenEmitters(boolean usePrecompiled) {
d109 5
a113 1
		myFactory = new EmitterFactory(getTemplatesBundle().getEntry("/"), registry, usePrecompiled, variables, true);
d118 61
a178 61
		put(tr, "/templates/commands/ReorientConnectionViewCommand.javajet", ReorientConnectionViewCommandGenerator.class);
		put(tr, "/templates/parts/DiagramEditPart.javajet", DiagramEditPartGenerator.class);
		put(tr, "/templates/parts/DiagramExternalNodeLabelEditPart.javajet", DiagramExternalNodeLabelEditPartGenerator.class);
		put(tr, "/templates/parts/NodeEditPart.javajet", NodeEditPartGenerator.class);
		put(tr, "/templates/parts/NodeLabelEditPart.javajet", NodeLabelEditPartGenerator.class);
		put(tr, "/templates/parts/ExternalNodeLabelEditPart.javajet", ExternalNodeLabelEditPartGenerator.class);
		put(tr, "/templates/parts/ExternalNodeLabelTextEditPart.javajet", ExternalNodeLabelTextEditPartGenerator.class);
		put(tr, "/templates/parts/ChildNodeEditPart.javajet", ChildNodeEditPartGenerator.class);
		put(tr, "/templates/parts/CompartmentEditPart.javajet", CompartmentEditPartGenerator.class);
		put(tr, "/templates/parts/LinkEditPart.javajet", LinkEditPartGenerator.class);
		put(tr, "/templates/parts/LinkLabelEditPart.javajet", LinkLabelEditPartGenerator.class);
		put(tr, "/templates/parts/LinkLabelTextEditPart.javajet", LinkLabelTextEditPartGenerator.class);
		put(tr, "/templates/parts/EditPartFactory.javajet", EditPartFactoryGenerator.class);
		put(tr, "/templates/policies/ItemSemanticEditPolicy.javajet", ItemSemanticEditPolicyGenerator.class);
		put(tr, "/templates/policies/GraphicalNodeEditPolicy.javajet", GraphicalNodeEditPolicyGenerator.class);
		put(tr, "/templates/policies/ReferenceConnectionEditPolicy.javajet", ReferenceConnectionEditPolicyGenerator.class);
		put(tr, "/templates/policies/DiagramCanonicalEditPolicy.javajet", DiagramCanonicalEditPolicyGenerator.class);
		put(tr, "/templates/policies/ChildContainerCanonicalEditPolicy.javajet", ChildContainerCanonicalEditPolicyGenerator.class);
		put(tr, "/templates/policies/DiagramItemSemanticEditPolicy.javajet", DiagramItemSemanticEditPolicyGenerator.class);
		put(tr, "/templates/policies/CompartmentItemSemanticEditPolicy.javajet", CompartmentItemSemanticEditPolicyGenerator.class);
		put(tr, "/templates/policies/NodeGraphicalNodeEditPolicy.javajet", NodeGraphicalNodeEditPolicyGenerator.class);
		put(tr, "/templates/policies/NodeItemSemanticEditPolicy.javajet", NodeItemSemanticEditPolicyGenerator.class);
		put(tr, "/templates/policies/LinkItemSemanticEditPolicy.javajet", LinkItemSemanticEditPolicyGenerator.class);
		put(tr, "/templates/providers/AbstractParser.javajet", AbstractParserGenerator.class);
		put(tr, "/templates/providers/StructuralFeatureParser.javajet", StructuralFeatureParserGenerator.class);
		put(tr, "/templates/providers/StructuralFeaturesParser.javajet", StructuralFeaturesParserGenerator.class);
		put(tr, "/templates/providers/SemanticHints.javajet", SemanticHintsGenerator.class);
		put(tr, "/templates/providers/ViewFactory.javajet", ViewFactoryGenerator.class);
		put(tr, "/templates/providers/LabelViewFactory.javajet", LabelViewFactoryGenerator.class);
		put(tr, "/templates/providers/LabelTextViewFactory.javajet", LabelTextViewFactoryGenerator.class);
		put(tr, "/templates/providers/ElementTypes.javajet", ElementTypesGenerator.class);
		put(tr, "/templates/providers/ViewProvider.javajet", ViewProviderGenerator.class);
		put(tr, "/templates/providers/EditPartProvider.javajet", EditPartProviderGenerator.class);
		put(tr, "/templates/providers/PaletteProvider.javajet", PaletteProviderGenerator.class);
		put(tr, "/templates/providers/MetamodelSupportProvider.javajet", MetamodelSupportProviderGenerator.class);
		put(tr, "/templates/providers/ModelingAssistantProvider.javajet", ModelingAssistantProviderGenerator.class);
		put(tr, "/templates/providers/PropertyProvider.javajet", PropertyProviderGenerator.class);
		put(tr, "/templates/providers/IconProvider.javajet", IconProviderGenerator.class);
		put(tr, "/templates/providers/ParserProvider.javajet", ParserProviderGenerator.class);
		put(tr, "/templates/providers/ValidationProvider.javajet", ValidationProviderGenerator.class); //$NON-NLS-1$
		put(tr, "/templates/providers/MarkerNavigationProvider.javajet", MarkerNavigationProviderGenerator.class); //$NON-NLS-1$
		put(tr, "/templates/editor/InitDiagramFileAction.javajet", InitDiagramFileActionGenerator.class);
		put(tr, "/templates/editor/PaletteFactory.javajet", PaletteFactoryGenerator.class);
		put(tr, "/templates/editor/DiagramEditorUtil.javajet", DiagramEditorUtilGenerator.class);
		put(tr, "/templates/editor/DiagramFileCreator.javajet", DiagramFileCreatorGenerator.class);
		put(tr, "/templates/editor/VisualIDRegistry.javajet", VisualIDRegistryGenerator.class);
		put(tr, "/templates/editor/CreationWizard.javajet", CreationWizardGenerator.class);
		put(tr, "/templates/editor/CreationWizardPage.javajet", CreationWizardPageGenerator.class);
		put(tr, "/templates/editor/Editor.javajet", EditorGenerator.class);
		put(tr, "/templates/editor/CreateShortcutAction.javajet", CreateShortcutActionGenerator.class);
		put(tr, "/templates/editor/LoadResourceAction.javajet", LoadResourceActionGenerator.class);
		put(tr, "/templates/editor/ElementChooser.javajet", ElementChooserGenerator.class);
		put(tr, "/templates/editor/DocumentProvider.javajet", DocumentProviderGenerator.class);
		put(tr, "/templates/editor/ActionBarContributor.javajet", ActionBarContributorGenerator.class);
		put(tr, "/templates/editor/MatchingStrategy.javajet", MatchingStrategyGenerator.class);
		put(tr, "/templates/editor/PreferenceInitializer.javajet", PreferencesInitializerGenerator.class);
		put(tr, "/templates/editor/Plugin.javajet", PluginGenerator.class);
		put(tr, "/templates/editor/plugin.xmljet", PluginXML.class);
		put(tr, "/templates/editor/plugin.propertiesjet", PluginPropertiesGenerator.class);
		put(tr, "/templates/editor/manifest.mfjet", ManifestGenerator.class);
		put(tr, "/templates/editor/build.propertiesjet", BuildPropertiesGenerator.class);
d204 3
d470 6
a475 2
	public GIFEmitter getShortcutImageEmitter() {
		return new GIFEmitter("/templates/editor/shortcut.gif", getTemplatesBundle());
@


1.2
log
@getSimpleName is Java5 :(
@
text
@d71 1
d144 1
d346 4
@


1.1
log
@EmitterFactory -> CodegenEmitters; got an instance; uses EmitterFactory from oeg.common now. Plus mem leak of one softRef.
@
text
@d189 1
a189 1
			throw new JETException(ex.getClass().getSimpleName(), ex);
d191 1
a191 1
			throw new JETException(ex.getClass().getSimpleName(), ex);
@

