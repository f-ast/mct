head	1.11;
access;
symbols
	v20081022-1925:1.11
	v20081015-1925:1.11
	v20081008-1925:1.11
	v20081001-1925:1.11
	v20080930-1130:1.11
	v20080926-1245:1.11
	v20080924-1925:1.11
	v20080917-1925:1.11
	v20080911-1728:1.11
	v20080910-1520:1.11
	v20080903-1520:1.11
	v20080827-1520:1.11
	v20080813-1520:1.11
	v20080806-1520:1.11
	v20080722-1827:1.11
	v20080718-1731:1.11
	v20080716-1600:1.11
	v20080716-1642:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080610-1132:1.11
	v20080603-1553:1.11
	v20080528-1052:1.11
	v20080521:1.11
	v20080516-1543:1.11
	v20080516-1143:1.11
	v20080512-1200:1.11
	v20080508-2000:1.11
	v20080507-1326:1.11
	v20080503-1740:1.11
	v20080501-1739:1.11
	v20080425-1959:1.11
	v20080417-1610:1.11
	v20080411-0411:1.11
	v20080404-1111:1.11
	v20080322-0000:1.11
	v20080222-1200:1.11
	v20080215-1500:1.11
	v20080207-0207:1.10.2.1
	v20071222-1111:1.11
	v20071214-1111:1.11
	v20071130-1111:1.11
	v20071124-0000:1.10.2.1
	v20071112-0000:1.11
	v20071108-0000:1.11
	v20071003-0000:1.11
	v20070928-0000:1.10.2.1
	v20070921-0000:1.10.2.1
	v20070915-0000:1.10.2.1
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070608-1300:1.10
	v20070605-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.10
	v20070520-1200:1.10
	v20070518-1300:1.10
	v20070504-1000:1.10
	v20070427-0600:1.10
	v20070420-1000:1.10
	v20070413-1300:1.10
	v20070405-1100:1.10
	v20070403-1500:1.10
	v20070330-1300:1.10
	v20060330-1300:1.10
	v20070322-1100:1.10
	v20060316-0600:1.10
	v20070307-0700:1.9
	v20070301-1200:1.9
	v20070228-2000:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070202-0200:1.7
	v20070103-0300:1.9
	M4_20:1.9
	v20061222-1800:1.9
	v20061218-1200:1.9
	v20061214-0000:1.9
	v20061120-1300:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061027-1200:1.7
	v20061020-1000:1.7
	v20061013-1330:1.7
	v20060919-0800:1.7
	v20060907-1100:1.7
	M1_20:1.7
	v20060904-1500:1.7
	v20060824-1600:1.7
	v20060817-1500:1.7
	v20060728-0500:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060626-1420:1.7
	v20060620-0400:1.7
	v20060616-1400:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-1300:1.6
	v20060519-0800:1.6
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.3
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.10;
commitid	5d1f46e195874567;

1.10
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches
	1.10.2.1;
next	1.9;
commitid	444245f8090b4567;

1.9
date	2006.10.18.09.56.50;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.17.13.08.11;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.07.13.52.17;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.17.14.22.47;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.13.12.39.59;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.03.12.38.15;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.30.18.26.46;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.20.18.00.01;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	;

1.10.2.1
date	2007.09.07.18.10.37;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.11
log
@regenerate; add java expr accessor to the model
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Label</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Label on diagram
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#isReadOnly <em>Read Only</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#isElementIcon <em>Element Icon</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#getModelFacet <em>Model Facet</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenLabel()
 * @@model abstract="true"
 * @@generated
 */
public interface GenLabel extends GenCommonBase {

	/**
	 * Returns the value of the '<em><b>Read Only</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Read Only</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Read Only</em>' attribute.
	 * @@see #setReadOnly(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenLabel_ReadOnly()
	 * @@model
	 * @@generated
	 */
	boolean isReadOnly();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#isReadOnly <em>Read Only</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Read Only</em>' attribute.
	 * @@see #isReadOnly()
	 * @@generated
	 */
	void setReadOnly(boolean value);

	public static final String CLASS_NAME_PREFIX = "Label"; //$NON-NLS-1$

	/**
	 * Returns the value of the '<em><b>Element Icon</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Element Icon</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Element Icon</em>' attribute.
	 * @@see #setElementIcon(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenLabel_ElementIcon()
	 * @@model
	 * @@generated
	 */
	boolean isElementIcon();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#isElementIcon <em>Element Icon</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Element Icon</em>' attribute.
	 * @@see #isElementIcon()
	 * @@generated
	 */
	void setElementIcon(boolean value);

	/**
	 * Returns the value of the '<em><b>Model Facet</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Model Facet</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * If model facet is not specified then custom parser should be provided for the label
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Model Facet</em>' containment reference.
	 * @@see #setModelFacet(LabelModelFacet)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenLabel_ModelFacet()
	 * @@model containment="true"
	 * @@generated
	 */
	LabelModelFacet getModelFacet();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#getModelFacet <em>Model Facet</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Model Facet</em>' containment reference.
	 * @@see #getModelFacet()
	 * @@generated
	 */
	void setModelFacet(LabelModelFacet value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Returns structural features that provide label content
	 * <!-- end-model-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	EList<GenFeature> getMetaFeatures();

} // GenLabel
@


1.10
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d125 1
a125 1
	 * @@model kind="operation" type="org.eclipse.emf.codegen.ecore.genmodel.GenFeature"
@


1.10.2.1
log
@regenerate; add java expr getter to model
@
text
@d125 1
a125 1
	 * @@model kind="operation"
@


1.9
log
@#161380 move readOnly back to GenLabel
@
text
@d9 1
d128 1
a128 1
	EList getMetaFeatures();
@


1.8
log
@#160894 Move readOnly property from GenLabel to LabelFeatureModelFacet
@
text
@d23 1
d35 26
@


1.7
log
@#145502 Naming strategy and gmfgen model objects should generate consistent class names
@
text
@a22 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#isReadOnly <em>Read Only</em>}</li>
a36 26
	 * Returns the value of the '<em><b>Read Only</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Read Only</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Read Only</em>' attribute.
	 * @@see #setReadOnly(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenLabel_ReadOnly()
	 * @@model
	 * @@generated
	 */
	boolean isReadOnly();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenLabel#isReadOnly <em>Read Only</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Read Only</em>' attribute.
	 * @@see #isReadOnly()
	 * @@generated
	 */
	void setReadOnly(boolean value);

	/**
@


1.6
log
@#139127 Provide an option for labels to display node icon
@
text
@d34 3
@


1.5
log
@#125900 Redundant annotations added to View in generated view factory

semantic hint class name plroperty removed from the model.
@
text
@d24 1
d61 26
@


1.4
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@a90 8
	 * @@model kind="operation"
	 * @@generated
	 */
	String getSemanticHintFieldName();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
@


1.3
log
@#125729 Support labels based on multiple structural features
@
text
@d67 3
d73 1
a73 1
	 * @@model containment="true" required="true"
@


1.2
log
@#121581
Fields for the compartments are named unique.
@
text
@d9 1
a9 2

import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
d32 1
a32 1
public interface GenLabel extends GenCommonBase{
d68 1
a68 1
	 * @@see #setModelFacet(FeatureModelFacet)
d73 1
a73 1
	FeatureModelFacet getModelFacet();
d83 1
a83 1
	void setModelFacet(FeatureModelFacet value);
d91 1
a91 1
	GenFeature getMetaFeature();
d96 4
a99 1
	 * @@model kind="operation"
d102 1
a102 1
	String getSemanticHintFieldName();
@


1.1
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d33 1
a33 1
public interface GenLabel extends GenCommonBase {
d94 8
@

