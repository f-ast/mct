head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080930-1130:1.4
	v20080926-1245:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20080722-1827:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080528-1052:1.4
	v20080521:1.4
	v20080516-1543:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080508-2000:1.4
	v20080507-1326:1.4
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080411-0411:1.4
	v20080404-1111:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.3.2.1
	v20071222-1111:1.4
	v20071214-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.3.2.1
	v20071112-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070928-0000:1.3.2.1
	v20070921-0000:1.3.2.1
	v20070915-0000:1.3.2.1
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070103-0300:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	5d1f46e195874567;

1.3
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	444245f8090b4567;

1.2
date	2006.09.22.13.21.23;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.15.20.44.31;	author atikhomirov;	state Exp;
branches;
next	;

1.3.2.1
date	2007.09.07.18.10.37;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.4
log
@regenerate; add java expr accessor to the model
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Type Tab Filter</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.TypeTabFilter#getTypes <em>Types</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.TypeTabFilter#getGeneratedTypes <em>Generated Types</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getTypeTabFilter()
 * @@model
 * @@generated
 */
public interface TypeTabFilter extends GenPropertyTabFilter {
	/**
	 * Returns the value of the '<em><b>Types</b></em>' attribute list.
	 * The list contents are of type {@@link java.lang.String}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Types</em>' attribute list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Fully-qualified class names for selection to match
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Types</em>' attribute list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getTypeTabFilter_Types()
	 * @@model required="true"
	 * @@generated
	 */
	EList<String> getTypes();

	/**
	 * Returns the value of the '<em><b>Generated Types</b></em>' attribute list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GeneratedType}.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.GeneratedType}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Generated Types</em>' attribute list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Generated Types</em>' attribute list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GeneratedType
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getTypeTabFilter_GeneratedTypes()
	 * @@model
	 * @@generated
	 */
	EList<GeneratedType> getGeneratedTypes();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation" required="true"
	 * @@generated
	 */
	EList<String> getAllTypes();

} // TypeTabFilter@


1.3
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d43 1
a43 1
	 * @@model type="java.lang.String" required="true"
d61 1
a61 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GeneratedType"
d69 1
a69 1
	 * @@model kind="operation" type="java.lang.String" required="true"
@


1.3.2.1
log
@regenerate; add java expr getter to model
@
text
@d43 1
a43 1
	 * @@model required="true"
d61 1
a61 1
	 * @@model
d69 1
a69 1
	 * @@model kind="operation" required="true"
@


1.2
log
@Read-only properties provided into the navigator.
@
text
@d46 1
a46 1
	EList getTypes();
d64 1
a64 1
	EList getGeneratedTypes();
d72 1
a72 1
	EList getAllTypes();
@


1.1
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d20 1
d48 26
@

