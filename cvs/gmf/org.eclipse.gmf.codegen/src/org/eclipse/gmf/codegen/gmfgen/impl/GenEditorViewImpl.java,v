head	1.12;
access;
symbols
	v20081022-1925:1.12
	v20081015-1925:1.12
	v20081008-1925:1.12
	v20081001-1925:1.12
	v20080930-1130:1.12
	v20080926-1245:1.12
	v20080924-1925:1.12
	v20080917-1925:1.12
	v20080911-1728:1.12
	v20080910-1520:1.12
	v20080903-1520:1.12
	v20080827-1520:1.12
	v20080813-1520:1.12
	v20080806-1520:1.12
	v20080722-1827:1.12
	v20080718-1731:1.12
	v20080716-1600:1.12
	v20080716-1642:1.12
	R2_1_maintenance:1.12.0.2
	Root_R2_1_maintenance:1.12
	R2_1_0:1.12
	v20080610-1132:1.12
	v20080603-1553:1.12
	v20080528-1052:1.12
	v20080521:1.12
	v20080516-1543:1.12
	v20080516-1143:1.12
	v20080512-1200:1.12
	v20080508-2000:1.12
	v20080507-1326:1.12
	v20080503-1740:1.12
	v20080501-1739:1.12
	v20080425-1959:1.12
	v20080417-1610:1.11
	v20080411-0411:1.11
	v20080404-1111:1.11
	v20080322-0000:1.11
	v20080222-1200:1.10
	v20080215-1500:1.10
	v20080207-0207:1.10
	v20071222-1111:1.10
	v20071214-1111:1.10
	v20071130-1111:1.10
	v20071124-0000:1.10
	v20071112-0000:1.10
	v20071108-0000:1.10
	v20071003-0000:1.10
	v20070928-0000:1.10
	v20070921-0000:1.10
	v20070915-0000:1.10
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070608-1300:1.10
	v20070605-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.10
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070405-1100:1.9
	v20070403-1500:1.9
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070307-0700:1.8
	v20070301-1200:1.8
	v20070228-2000:1.8
	v20070221-1500:1.8
	v20070208-1800:1.8
	v20070202-0200:1.5
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	v20061120-1300:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.5
	v20061020-1000:1.5
	v20061013-1330:1.6
	v20060919-0800:1.5
	v20060907-1100:1.5
	M1_20:1.6
	v20060904-1500:1.6
	v20060824-1600:1.5
	v20060817-1500:1.5
	v20060728-0500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060620-0400:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.2
	I20060210-1715:1.1
	I20060209-1815:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.04.18.14.43.22;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	2e1d4808b3814567;

1.11
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	5e5047cd7dd64567;

1.10
date	2007.05.22.18.18.54;	author ashatalin;	state Exp;
branches;
next	1.9;
commitid	5a1d465333ad4567;

1.9
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	444245f8090b4567;

1.8
date	2007.01.03.21.21.08;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	4243459c1e3d4567;

1.7
date	2006.11.22.11.23.33;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	26bd4564332d4567;

1.6
date	2006.07.20.17.40.06;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.29.17.17.18;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.29.12.45.39;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.17.07.33.19;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.14.20.12.32;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.08.16.06.19;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.12
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
import org.eclipse.gmf.codegen.gmfgen.GenEditorView;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Editor View</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getEditorGen <em>Editor Gen</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getPackageName <em>Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getActionBarContributorClassName <em>Action Bar Contributor Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getClassName <em>Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getIconPath <em>Icon Path</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getIconPathX <em>Icon Path X</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getID <em>ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#isEclipseEditor <em>Eclipse Editor</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenEditorViewImpl#getContextID <em>Context ID</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
	/**
	 * The default value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String packageName = PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionBarContributorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionBarContributorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String actionBarContributorClassName = ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getClassName() <em>Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getClassName() <em>Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String className = CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getIconPath() <em>Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ICON_PATH_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getIconPath() <em>Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected String iconPath = ICON_PATH_EDEFAULT;

	/**
	 * The default value of the '{@@link #getIconPathX() <em>Icon Path X</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconPathX()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ICON_PATH_X_EDEFAULT = null;

	/**
	 * The default value of the '{@@link #getID() <em>ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getID() <em>ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getID()
	 * @@generated
	 * @@ordered
	 */
	protected String iD = ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #isEclipseEditor() <em>Eclipse Editor</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isEclipseEditor()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean ECLIPSE_EDITOR_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isEclipseEditor() <em>Eclipse Editor</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isEclipseEditor()
	 * @@generated
	 * @@ordered
	 */
	protected boolean eclipseEditor = ECLIPSE_EDITOR_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContextID() <em>Context ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContextID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTEXT_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getContextID() <em>Context ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContextID()
	 * @@generated
	 * @@ordered
	 */
	protected String contextID = CONTEXT_ID_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenEditorViewImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenEditorView();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenEditorGenerator getEditorGen() {
		if (eContainerFeatureID != GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN) return null;
		return (GenEditorGenerator)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPackageNameGen() {
		return packageName;
	}

	public String getPackageName() {
		String value = getPackageNameGen();
		if (value == null) {
			value = getEditorGen().getPackageNamePrefix() + ".part";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPackageName(String newPackageName) {
		String oldPackageName = packageName;
		packageName = newPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME, oldPackageName, packageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getActionBarContributorClassNameGen() {
		return actionBarContributorClassName;
	}

	public String getActionBarContributorClassName() {
		String value = getActionBarContributorClassNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDomainModelCapName() + "DiagramActionBarContributor"; //$NON-NLS-1$
		}
		return value;
	}


	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setActionBarContributorClassName(String newActionBarContributorClassName) {
		String oldActionBarContributorClassName = actionBarContributorClassName;
		actionBarContributorClassName = newActionBarContributorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME, oldActionBarContributorClassName, actionBarContributorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getClassNameGen() {
		return className;
	}

	public String getClassName() {
		String value = getClassNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDomainModelCapName() + "DiagramEditor"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setClassName(String newClassName) {
		String oldClassName = className;
		className = newClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME, oldClassName, className));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getIconPathGen() {
		return iconPath;
	}

	public String getIconPath() {
		String value = getIconPathGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			if (getEditorGen().getDiagram() != null) {
				return getEditorGen().getDiagram().getCreationWizardIconPath();
			} else {
				return createDefaultIconPath();
			}
		}
		return value;
	}

	public String getIconPathX() {
		String value = getIconPath();
		if (GenDiagramImpl.REUSE_ICON_VALUE.equalsIgnoreCase(value)) {
			if (getEditorGen().getDiagram() != null && getEditorGen().getDiagram().getDomainDiagramElement() != null) {
				GenPackage domainMetaModel = getEditorGen().getDiagram().getDomainDiagramElement().getGenPackage();
				return "../" + getEditorGen().getDomainGenModel().getEditorPluginID() + "/icons/full/obj16/" + domainMetaModel.getPrefix() + "ModelFile.gif";
			} else {
				return createDefaultIconPath();
			}
		}
		return value;
	}

	private static String createDefaultIconPath() {
		// use same default value as in the genDiagram
		return new GenDiagramImpl().getCreationWizardIconPath();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setIconPath(String newIconPath) {
		String oldIconPath = iconPath;
		iconPath = newIconPath;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH, oldIconPath, iconPath));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getIDGen() {
		return iD;
	}

	public String getID() {
		String value = getIDGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			return getQualifiedClassName() + "ID";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setID(String newID) {
		String oldID = iD;
		iD = newID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__ID, oldID, iD));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isEclipseEditor() {
		return eclipseEditor;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEclipseEditor(boolean newEclipseEditor) {
		boolean oldEclipseEditor = eclipseEditor;
		eclipseEditor = newEclipseEditor;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__ECLIPSE_EDITOR, oldEclipseEditor, eclipseEditor));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getContextIDGen() {
		return contextID;
	}
	
	public String getContextID() {
		String value = getContextIDGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".ui.diagramContext"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContextID(String newContextID) {
		String oldContextID = contextID;
		contextID = newContextID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__CONTEXT_ID, oldContextID, contextID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getActionBarContributorQualifiedClassName() {
		return getPackageName() + '.' + getActionBarContributorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getQualifiedClassName() {
		return getPackageName() + '.' + getClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN:
				return eBasicSetContainer(null, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR, GenEditorGenerator.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN:
				return getEditorGen();
			case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME:
				return getPackageName();
			case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				return getActionBarContributorClassName();
			case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME:
				return getClassName();
			case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH:
				return getIconPath();
			case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH_X:
				return getIconPathX();
			case GMFGenPackage.GEN_EDITOR_VIEW__ID:
				return getID();
			case GMFGenPackage.GEN_EDITOR_VIEW__ECLIPSE_EDITOR:
				return isEclipseEditor() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_EDITOR_VIEW__CONTEXT_ID:
				return getContextID();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME:
				setPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				setActionBarContributorClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME:
				setClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH:
				setIconPath((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ID:
				setID((String)newValue);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ECLIPSE_EDITOR:
				setEclipseEditor(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__CONTEXT_ID:
				setContextID((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME:
				setPackageName(PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				setActionBarContributorClassName(ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME:
				setClassName(CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH:
				setIconPath(ICON_PATH_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ID:
				setID(ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__ECLIPSE_EDITOR:
				setEclipseEditor(ECLIPSE_EDITOR_EDEFAULT);
				return;
			case GMFGenPackage.GEN_EDITOR_VIEW__CONTEXT_ID:
				setContextID(CONTEXT_ID_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN:
				return getEditorGen() != null;
			case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME:
				return PACKAGE_NAME_EDEFAULT == null ? packageName != null : !PACKAGE_NAME_EDEFAULT.equals(packageName);
			case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				return ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT == null ? actionBarContributorClassName != null : !ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT.equals(actionBarContributorClassName);
			case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME:
				return CLASS_NAME_EDEFAULT == null ? className != null : !CLASS_NAME_EDEFAULT.equals(className);
			case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH:
				return ICON_PATH_EDEFAULT == null ? iconPath != null : !ICON_PATH_EDEFAULT.equals(iconPath);
			case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH_X:
				return ICON_PATH_X_EDEFAULT == null ? getIconPathX() != null : !ICON_PATH_X_EDEFAULT.equals(getIconPathX());
			case GMFGenPackage.GEN_EDITOR_VIEW__ID:
				return ID_EDEFAULT == null ? iD != null : !ID_EDEFAULT.equals(iD);
			case GMFGenPackage.GEN_EDITOR_VIEW__ECLIPSE_EDITOR:
				return eclipseEditor != ECLIPSE_EDITOR_EDEFAULT;
			case GMFGenPackage.GEN_EDITOR_VIEW__CONTEXT_ID:
				return CONTEXT_ID_EDEFAULT == null ? contextID != null : !CONTEXT_ID_EDEFAULT.equals(contextID);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (packageName: ");
		result.append(packageName);
		result.append(", actionBarContributorClassName: ");
		result.append(actionBarContributorClassName);
		result.append(", className: ");
		result.append(className);
		result.append(", iconPath: ");
		result.append(iconPath);
		result.append(", iD: ");
		result.append(iD);
		result.append(", eclipseEditor: ");
		result.append(eclipseEditor);
		result.append(", contextID: ");
		result.append(contextID);
		result.append(')');
		return result.toString();
	}

	/**
	 * delegates to {@@link GenEditorGeneratorImpl#getDomainModelCapName()}
	 */
	private String getDomainModelCapName() {
		return ((GenEditorGeneratorImpl) getEditorGen()).getDomainModelCapName();
	}
} //GenEditorViewImpl
@


1.11
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a15 1
import org.eclipse.emf.ecore.util.EcoreUtil;
a225 31
	public NotificationChain basicSetEditorGen(GenEditorGenerator newEditorGen, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newEditorGen, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditorGen(GenEditorGenerator newEditorGen) {
		if (newEditorGen != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN && newEditorGen != null)) {
			if (EcoreUtil.isAncestor(this, newEditorGen))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newEditorGen != null)
				msgs = ((InternalEObject)newEditorGen).eInverseAdd(this, GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR, GenEditorGenerator.class, msgs);
			msgs = basicSetEditorGen(newEditorGen, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, newEditorGen, newEditorGen));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d468 1
a468 1
				return basicSetEditorGen((GenEditorGenerator)otherEnd, msgs);
d482 1
a482 1
				return basicSetEditorGen(null, msgs);
a538 3
			case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)newValue);
				return;
a571 3
			case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)null);
				return;
@


1.10
log
@F5 triggering update of selected element added
@
text
@d16 1
d227 31
d500 1
a500 1
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, msgs);
d514 1
a514 1
				return eBasicSetContainer(null, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, msgs);
d571 3
d607 3
@


1.9
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d35 1
d173 20
d413 29
d525 2
d557 3
d590 3
d621 2
d649 2
@


1.8
log
@make getIconX() available in model
@
text
@d185 1
d412 1
d428 1
d442 1
d456 1
d484 1
d514 1
d544 1
d572 1
@


1.7
log
@[163214] attributes to distinguish Eclipse editor/view generation target
@
text
@d32 1
d122 10
d464 2
d549 2
@


1.6
log
@GenModel unit-tests added.
@
text
@d33 1
d141 20
d359 21
d455 2
d483 3
d512 3
d538 2
d563 2
@


1.5
log
@#141865 Icon not displayed for the wizard banner
Wizard banner image and wizard/editor icon are generated now with EMF facility for coloured .gifs
Keyword added to iconPath values to allow reference icons from EMF editor
@
text
@d207 1
a207 1
		if (value == null || value.trim().length() == 0) {
d237 1
a237 1
		if (value == null || value.trim().length() == 0) {
d317 1
a317 1
		if (value == null || value.trim().length() == 0) {
@


1.4
log
@ensure that obligatory icons are specified; provide reasonable defaults for design diagrams
@
text
@d9 1
d267 5
a271 1
			value = ((GenDiagramImpl) getEditorGen().getDiagram()).getModelIconPath();
d276 18
@


1.3
log
@make diagram editor and creation wizard icons configurable
@
text
@a8 1
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
d265 2
a266 3
		if (GenCommonBaseImpl.isEmpty(value) && getEditorGen().getDiagram().getDomainDiagramElement() != null) {
			GenPackage domainMetaModel = getEditorGen().getDiagram().getDomainDiagramElement().getGenPackage();
			value = "../" + getEditorGen().getDomainGenModel().getEditorPluginID() + "/icons/full/obj16/" + domainMetaModel.getPrefix() + "ModelFile.gif";
@


1.2
log
@organized imports
@
text
@d9 1
d31 1
d100 20
d260 30
d388 2
d412 3
d438 3
d463 2
d486 2
@


1.1
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@a10 1

a12 1

a14 1

@

