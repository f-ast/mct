head	1.1;
access;
symbols
	v20081022-1925:1.1
	v20081015-1925:1.1
	v20081008-1925:1.1
	v20081001-1925:1.1
	v20080930-1130:1.1
	v20080926-1245:1.1
	v20080924-1925:1.1
	v20080917-1925:1.1
	v20080911-1728:1.1
	v20080910-1520:1.1
	v20080903-1520:1.1
	v20080827-1520:1.1
	v20080813-1520:1.1
	v20080806-1520:1.1
	v20080722-1827:1.1
	v20080718-1731:1.1
	v20080716-1642:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.07.01.11.40.16;	author atikhomirov;	state Exp;
branches;
next	;
commitid	7b70486a179a4567;


desc
@@


1.1
log
@[227127] support literal values for feature initializers. step 1: models updated to specify new possible values
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenLanguage;
import org.eclipse.gmf.codegen.gmfgen.GenLiteralExpressionProvider;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Literal Expression Provider</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * </p>
 *
 * @@generated
 */
public class GenLiteralExpressionProviderImpl extends GenExpressionProviderBaseImpl implements GenLiteralExpressionProvider {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLiteralExpressionProviderImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenLiteralExpressionProvider();
	}

	@@Override
	public GenLanguage getLanguage() {
		return GenLanguage.LITERAL_LITERAL;
	}
} //GenLiteralExpressionProviderImpl
@
