head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20070202-0200:1.5
	v20061027-1200:1.5
	v20061020-1000:1.5
	v20060919-0800:1.5
	v20060907-1100:1.5
	M1_20:1.5
	v20060904-1500:1.5
	v20060824-1600:1.5
	v20060817-1500:1.5
	v20060728-0500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060620-0400:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-1300:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2006.09.05.23.41.12;	author radvorak;	state dead;
branches;
next	1.5;

1.5
date	2006.02.14.18.46.22;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.10.13.49.37;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.05.17.30.30;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.26.18.43.48;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.20.16.04.34;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
- updating gmfgen
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;
import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Element Initializer</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenElementInitializerImpl#getTypeModelFacet <em>Type Model Facet</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public abstract class GenElementInitializerImpl extends EObjectImpl implements GenElementInitializer {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenElementInitializerImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenElementInitializer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public TypeModelFacet getTypeModelFacet() {
		if (eContainerFeatureID != GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET) return null;
		return (TypeModelFacet)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
				return eBasicSetContainer(null, GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, TypeModelFacet.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
				return getTypeModelFacet();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
				return getTypeModelFacet() != null;
		}
		return super.eIsSet(featureID);
	}

} //GenElementInitializerImpl
@


1.5
log
@[rdvorak] #127700 Rename genmodel::ModelElementSelector as a generic GenConstraint element
@
text
@@


1.4
log
@#123240, part 1 - get rid of StringArray datatype
@
text
@a9 3
import org.eclipse.emf.common.util.BasicEList;
import org.eclipse.emf.common.util.EList;

a61 9
	 * @@generated NOT
	 */
	public EList getRequiredPluginIDs() {
		return new BasicEList();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
@


1.3
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d10 3
d67 2
a68 2
	public String[] getRequiredPluginIDs() {
		return new String[0];
@


1.2
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@a9 3



a10 1
import org.eclipse.emf.ecore.EStructuralFeature;
a11 1

a12 1

a14 1

d56 1
a56 1
		return (TypeModelFacet)eContainer;
d73 6
a78 10
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d80 1
a80 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d88 4
a91 8
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
					return eBasicSetContainer(null, GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d93 1
a93 1
		return eBasicSetContainer(null, featureID, msgs);
d101 4
a104 8
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET:
					return eContainer.eInverseRemove(this, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, TypeModelFacet.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
d106 1
a106 1
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
d114 2
a115 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d119 1
a119 1
		return eDynamicGet(eFeature, resolve);
d127 2
a128 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d132 1
a132 1
		return eDynamicIsSet(eFeature);
@


1.1
log
@[rdvorak] #113224 Generate custom initialization code for domain model elements
@
text
@d11 2
a19 2
import org.eclipse.gmf.codegen.gmfgen.GenBaseElement;
import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
d22 2
d31 1
a31 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenElementInitializerImpl#getElement <em>Element</em>}</li>
d61 3
a63 28
	public GenBaseElement getElement() {
		if (eContainerFeatureID != GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT) return null;
		return (GenBaseElement)eContainer;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getInitializerMethodName() {
		if(getElement() != null) {
			return "init_" + getElement().getUniqueIdentifier(); //$NON-NLS-1$
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getInitializersQualifiedClassName() {
		if(getElement() != null && getElement().getDiagram() != null) {
			GenDiagram diagram = getElement().getDiagram();		
			return diagram.getElementInitializersPackageName() + "." + diagram.getElementInitializersClassName(); //$NON-NLS-1$
		}
		return null;
d83 1
a83 1
				case GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT:
d86 1
a86 1
					return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT, msgs);
d104 2
a105 2
				case GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT:
					return eBasicSetContainer(null, GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT, msgs);
d121 2
a122 2
				case GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT:
					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_BASE_ELEMENT__MODEL_ELEMENT_INITIALIZER, GenBaseElement.class, msgs);
d137 2
a138 2
			case GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT:
				return getElement();
d150 2
a151 2
			case GMFGenPackage.GEN_ELEMENT_INITIALIZER__ELEMENT:
				return getElement() != null;
@

