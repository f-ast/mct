head	1.12;
access;
symbols
	v20081022-1925:1.12
	v20081015-1925:1.12
	v20081008-1925:1.12
	v20081001-1925:1.12
	v20080930-1130:1.12
	v20080926-1245:1.12
	v20080924-1925:1.12
	v20080917-1925:1.12
	v20080911-1728:1.12
	v20080910-1520:1.12
	v20080903-1520:1.12
	v20080827-1520:1.12
	v20080813-1520:1.12
	v20080806-1520:1.12
	v20080722-1827:1.12
	v20080718-1731:1.12
	v20080716-1600:1.12
	v20080716-1642:1.12
	R2_1_maintenance:1.12.0.2
	Root_R2_1_maintenance:1.12
	R2_1_0:1.12
	v20080610-1132:1.12
	v20080603-1553:1.12
	v20080528-1052:1.12
	v20080521:1.12
	v20080516-1543:1.12
	v20080516-1143:1.12
	v20080512-1200:1.12
	v20080508-2000:1.12
	v20080507-1326:1.12
	v20080503-1740:1.12
	v20080501-1739:1.12
	v20080425-1959:1.12
	v20080417-1610:1.12
	v20080411-0411:1.12
	v20080404-1111:1.12
	v20080322-0000:1.12
	v20080222-1200:1.12
	v20080215-1500:1.12
	v20080207-0207:1.11.2.1
	v20071222-1111:1.12
	v20071214-1111:1.12
	v20071130-1111:1.12
	v20071124-0000:1.11.2.1
	v20071112-0000:1.12
	v20071108-0000:1.12
	v20071003-0000:1.12
	v20070928-0000:1.11.2.1
	v20070921-0000:1.11.2.1
	v20070915-0000:1.11.2.1
	v20070903-0000:1.11
	v20070809-0000:1.11
	R2_0_maintenance:1.11.0.2
	R2_0:1.11
	R4_20:1.11
	v20070621-0000:1.11
	RC3_20:1.11
	v20070614-1400:1.11
	v20070608-1300:1.11
	v20070605-1400:1.11
	v20070601-1400:1.11
	v20070525-1500:1.11
	v20070520-1200:1.11
	v20070518-1300:1.11
	v20070504-1000:1.11
	v20070427-0600:1.11
	v20070420-1000:1.11
	v20070413-1300:1.11
	v20070405-1100:1.11
	v20070403-1500:1.11
	v20070330-1300:1.11
	v20060330-1300:1.11
	v20070322-1100:1.11
	v20060316-0600:1.11
	v20070307-0700:1.10
	v20070301-1200:1.10
	v20070228-2000:1.10
	v20070221-1500:1.10
	v20070208-1800:1.10
	v20070202-0200:1.9
	v20070103-0300:1.10
	M4_20:1.10
	v20061222-1800:1.10
	v20061218-1200:1.10
	v20061214-0000:1.10
	v20061120-1300:1.10
	M3_20:1.10
	v20061117-0800:1.10
	v20061027-1200:1.9
	v20061020-1000:1.9
	v20061013-1330:1.10
	v20060919-0800:1.9
	v20060907-1100:1.9
	M1_20:1.9
	v20060904-1500:1.9
	v20060824-1600:1.9
	v20060817-1500:1.9
	v20060728-0500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060620-0400:1.9
	v20060616-1400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-1300:1.8
	v20060519-0800:1.8
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.6
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.11;
commitid	5d1f46e195874567;

1.11
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches
	1.11.2.1;
next	1.10;
commitid	444245f8090b4567;

1.10
date	2006.10.06.12.15.31;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.05.11.23.48;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.17.12.39.15;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.24.12.01.20;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.19.00.10.44;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.28.16.09.46;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.23.10.11.52;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.27.16.12.20;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.10.12.57.39;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.28;	author atikhomirov;	state Exp;
branches;
next	;

1.11.2.1
date	2007.09.07.18.10.37;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.12
log
@regenerate; add java expr accessor to the model
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;


import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Child Container</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Base class for all ChildNode containers
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getChildNodes <em>Child Nodes</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer()
 * @@model abstract="true"
 * @@generated
 */
public interface GenChildContainer extends GenContainerBase {
	/**
	 * Returns the value of the '<em><b>Child Nodes</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode#getContainers <em>Containers</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Child Nodes</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Child Nodes</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_ChildNodes()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildNode#getContainers
	 * @@model opposite="containers"
	 * @@generated
	 */
	EList<GenChildNode> getChildNodes();

} // GenChildContainer
@


1.11
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d46 1
a46 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenChildNode" opposite="containers"
@


1.11.2.1
log
@regenerate; add java expr getter to model
@
text
@d46 1
a46 1
	 * @@model opposite="containers"
@


1.10
log
@refactor common attribute (canonical ep name) into shared superclass, get ready to avoid generation of useless canonicalep classes
@
text
@d49 1
a49 1
	EList getChildNodes();
@


1.9
log
@#144679 Do not use visual ids in edit helper names
@
text
@a24 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getCanonicalEditPolicyClassName <em>Canonical Edit Policy Class Name</em>}</li>
a50 36
	/**
	 * Returns the value of the '<em><b>Canonical Edit Policy Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Canonical Edit Policy Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Canonical Edit Policy Class Name</em>' attribute.
	 * @@see #setCanonicalEditPolicyClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_CanonicalEditPolicyClassName()
	 * @@model
	 * @@generated
	 */
	String getCanonicalEditPolicyClassName();

	public static final String CANONICAL_EDIT_POLICY_SUFFIX = "CanonicalEditPolicy"; //$NON-NLS-1$

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getCanonicalEditPolicyClassName <em>Canonical Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Canonical Edit Policy Class Name</em>' attribute.
	 * @@see #getCanonicalEditPolicyClassName()
	 * @@generated
	 */
	void setCanonicalEditPolicyClassName(String value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getCanonicalEditPolicyQualifiedClassName();

@


1.8
log
@[mgolubev] #140186 XYLayoutEditPolicy should not be installed for editparts that have figure with non-XYLayout in the gmfgraph model
@
text
@d68 1
a68 1
	public static final String CANONICAL_EDIT_POLICY_SUFFIX = "CanonicalEditPolicy";
@


1.7
log
@rename GenContainerEditPart -> GenContainerBase
@
text
@a25 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isListLayout <em>List Layout</em>}</li>
a80 27
	 * Returns the value of the '<em><b>List Layout</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>List Layout</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>List Layout</em>' attribute.
	 * @@see #setListLayout(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_ListLayout()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isListLayout();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isListLayout <em>List Layout</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>List Layout</em>' attribute.
	 * @@see #isListLayout()
	 * @@generated
	 */
	void setListLayout(boolean value);

	/**
@


1.6
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d34 1
a34 1
public interface GenChildContainer extends GenContainerEditPart {
@


1.5
log
@#117749 & #118040 generate unique names for the shared elements in mapping model
@
text
@d26 1
d34 1
a34 1
public interface GenChildContainer extends GenCommonBase{
d36 1
a36 1
	 * Returns the value of the '<em><b>Child Nodes</b></em>' containment reference list.
d38 1
a38 1
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode#getContainer <em>Container</em>}'.
d45 1
a45 1
	 * @@return the value of the '<em>Child Nodes</em>' containment reference list.
d47 2
a48 2
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildNode#getContainer
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenChildNode" opposite="container" containment="true"
d82 27
@


1.4
log
@#117660 move canonical edit policy into separate class to shorten it's file name
@
text
@d68 2
@


1.3
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@d25 1
d52 34
@


1.2
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@d10 2
d18 1
a18 1
 * Child container within node. Compartment, iow.
d24 1
a24 7
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getGroupID <em>Group ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getTitleKey <em>Title Key</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isCanCollapse <em>Can Collapse</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isHideIfEmpty <em>Hide If Empty</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isNeedsTitle <em>Needs Title</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getLayoutKind <em>Layout Kind</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getParentNode <em>Parent Node</em>}</li>
d29 1
a29 1
 * @@model
d34 3
a36 164
	 * Returns the value of the '<em><b>Group ID</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Group ID</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Group ID</em>' attribute.
	 * @@see #setGroupID(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_GroupID()
	 * @@model
	 * @@generated
	 */
	String getGroupID();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getGroupID <em>Group ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Group ID</em>' attribute.
	 * @@see #getGroupID()
	 * @@generated
	 */
	void setGroupID(String value);

	/**
	 * Returns the value of the '<em><b>Title Key</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Title Key</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Title Key</em>' attribute.
	 * @@see #setTitleKey(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_TitleKey()
	 * @@model
	 * @@generated
	 */
	String getTitleKey();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getTitleKey <em>Title Key</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Title Key</em>' attribute.
	 * @@see #getTitleKey()
	 * @@generated
	 */
	void setTitleKey(String value);

	/**
	 * Returns the value of the '<em><b>Can Collapse</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Can Collapse</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Can Collapse</em>' attribute.
	 * @@see #setCanCollapse(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_CanCollapse()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isCanCollapse();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isCanCollapse <em>Can Collapse</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Can Collapse</em>' attribute.
	 * @@see #isCanCollapse()
	 * @@generated
	 */
	void setCanCollapse(boolean value);

	/**
	 * Returns the value of the '<em><b>Hide If Empty</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Hide If Empty</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Hide If Empty</em>' attribute.
	 * @@see #setHideIfEmpty(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_HideIfEmpty()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isHideIfEmpty();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isHideIfEmpty <em>Hide If Empty</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Hide If Empty</em>' attribute.
	 * @@see #isHideIfEmpty()
	 * @@generated
	 */
	void setHideIfEmpty(boolean value);

	/**
	 * Returns the value of the '<em><b>Needs Title</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Needs Title</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Needs Title</em>' attribute.
	 * @@see #setNeedsTitle(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_NeedsTitle()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isNeedsTitle();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#isNeedsTitle <em>Needs Title</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Needs Title</em>' attribute.
	 * @@see #isNeedsTitle()
	 * @@generated
	 */
	void setNeedsTitle(boolean value);

	/**
	 * Returns the value of the '<em><b>Layout Kind</b></em>' attribute.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Layout Kind</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Layout Kind</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind
	 * @@see #setLayoutKind(CompartmentLayoutKind)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_LayoutKind()
	 * @@model
	 * @@generated
	 */
	CompartmentLayoutKind getLayoutKind();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getLayoutKind <em>Layout Kind</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Layout Kind</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind
	 * @@see #getLayoutKind()
	 * @@generated
	 */
	void setLayoutKind(CompartmentLayoutKind value);

	/**
	 * Returns the value of the '<em><b>Parent Node</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getChildContainers <em>Child Containers</em>}'.
d39 1
a39 1
	 * If the meaning of the '<em>Parent Node</em>' container reference isn't clear,
d43 4
a46 4
	 * @@return the value of the '<em>Parent Node</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenChildContainer_ParentNode()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNode#getChildContainers
	 * @@model opposite="childContainers" required="true" changeable="false"
d49 1
a49 1
	GenNode getParentNode();
@


1.1
log
@*** empty log message ***
@
text
@a8 1
import org.eclipse.emf.ecore.EObject;
d28 1
d36 1
a36 1
public interface GenChildContainer extends EObject {
d199 17
@

