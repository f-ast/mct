head	1.12;
access;
symbols
	v20081022-1925:1.12
	v20081015-1925:1.12
	v20081008-1925:1.12
	v20081001-1925:1.12
	v20080930-1130:1.12
	v20080926-1245:1.12
	v20080924-1925:1.12
	v20080917-1925:1.12
	v20080911-1728:1.12
	v20080910-1520:1.12
	v20080903-1520:1.12
	v20080827-1520:1.12
	v20080813-1520:1.12
	v20080806-1520:1.12
	v20080722-1827:1.12
	v20080718-1731:1.12
	v20080716-1600:1.12
	v20080716-1642:1.12
	R2_1_maintenance:1.12.0.2
	Root_R2_1_maintenance:1.12
	R2_1_0:1.12
	v20080610-1132:1.12
	v20080603-1553:1.12
	v20080528-1052:1.12
	v20080521:1.12
	v20080516-1543:1.12
	v20080516-1143:1.12
	v20080512-1200:1.12
	v20080508-2000:1.12
	v20080507-1326:1.12
	v20080503-1740:1.12
	v20080501-1739:1.12
	v20080425-1959:1.12
	v20080417-1610:1.11
	v20080411-0411:1.11
	v20080404-1111:1.11
	v20080322-0000:1.11
	v20080222-1200:1.10
	v20080215-1500:1.10
	v20080207-0207:1.9.4.1
	v20071222-1111:1.10
	v20071214-1111:1.10
	v20071130-1111:1.10
	v20071124-0000:1.9.4.1
	v20071112-0000:1.10
	v20071108-0000:1.10
	v20071003-0000:1.10
	v20070928-0000:1.9.4.1
	v20070921-0000:1.9.4.1
	v20070915-0000:1.9.4.1
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.4
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070405-1100:1.9
	v20070403-1500:1.9
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070307-0700:1.9
	v20070301-1200:1.9
	v20070228-2000:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070202-0200:1.9
	v20070103-0300:1.9
	M4_20:1.9
	v20061222-1800:1.9
	v20061218-1200:1.9
	v20061214-0000:1.9
	v20061120-1300:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061027-1200:1.9
	v20061020-1000:1.9
	v20061013-1330:1.9
	v20060919-0800:1.9
	v20060907-1100:1.9
	M1_20:1.9
	v20060904-1500:1.9
	v20060824-1600:1.9
	v20060817-1500:1.9
	v20060728-0500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060620-0400:1.9
	v20060616-1400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-1300:1.7
	v20060519-0800:1.7
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.04.18.14.43.21;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	2e1d4808b3814567;

1.11
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	5e5047cd7dd64567;

1.10
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.9;
commitid	5d1f46e195874567;

1.9
date	2006.06.09.09.02.46;	author dstadnik;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2006.06.07.13.52.17;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.17.12.39.15;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.13.12.39.59;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.23.17.04.22;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.23.12.21.25;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.19.00.10.44;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.20.18.00.01;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.27.16.12.20;	author atikhomirov;	state Exp;
branches;
next	;

1.9.4.1
date	2007.09.07.18.10.38;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.12
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;



/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Compartment</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Child container within node. Compartment, iow.
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getTitle <em>Title</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isCanCollapse <em>Can Collapse</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isHideIfEmpty <em>Hide If Empty</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isNeedsTitle <em>Needs Title</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getDiagram <em>Diagram</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getNode <em>Node</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isListLayout <em>List Layout</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment()
 * @@model
 * @@generated
 */
public interface GenCompartment extends GenChildContainer {

	public static final String CLASS_NAME_PREFIX = "Compartment"; //$NON-NLS-1$

	/**
	 * Returns the value of the '<em><b>Title</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Title</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Title</em>' attribute.
	 * @@see #setTitle(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_Title()
	 * @@model
	 * @@generated
	 */
	String getTitle();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getTitle <em>Title</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Title</em>' attribute.
	 * @@see #getTitle()
	 * @@generated
	 */
	void setTitle(String value);

	/**
	 * Returns the value of the '<em><b>Can Collapse</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Can Collapse</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Can Collapse</em>' attribute.
	 * @@see #setCanCollapse(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_CanCollapse()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isCanCollapse();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isCanCollapse <em>Can Collapse</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Can Collapse</em>' attribute.
	 * @@see #isCanCollapse()
	 * @@generated
	 */
	void setCanCollapse(boolean value);

	/**
	 * Returns the value of the '<em><b>Hide If Empty</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Hide If Empty</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Hide If Empty</em>' attribute.
	 * @@see #setHideIfEmpty(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_HideIfEmpty()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isHideIfEmpty();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isHideIfEmpty <em>Hide If Empty</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Hide If Empty</em>' attribute.
	 * @@see #isHideIfEmpty()
	 * @@generated
	 */
	void setHideIfEmpty(boolean value);

	/**
	 * Returns the value of the '<em><b>Needs Title</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Needs Title</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Needs Title</em>' attribute.
	 * @@see #setNeedsTitle(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_NeedsTitle()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isNeedsTitle();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isNeedsTitle <em>Needs Title</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Needs Title</em>' attribute.
	 * @@see #isNeedsTitle()
	 * @@generated
	 */
	void setNeedsTitle(boolean value);

	/**
	 * Returns the value of the '<em><b>Diagram</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagram#getCompartments <em>Compartments</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_Diagram()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagram#getCompartments
	 * @@model opposite="compartments" resolveProxies="false" required="true" transient="false" changeable="false"
	 * @@generated
	 */
	GenDiagram getDiagram();

	/**
	 * Returns the value of the '<em><b>Node</b></em>' reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getCompartments <em>Compartments</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Node</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Node</em>' reference.
	 * @@see #setNode(GenNode)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_Node()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNode#getCompartments
	 * @@model opposite="compartments" required="true"
	 * @@generated
	 */
	GenNode getNode();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getNode <em>Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Node</em>' reference.
	 * @@see #getNode()
	 * @@generated
	 */
	void setNode(GenNode value);

	/**
	 * Returns the value of the '<em><b>List Layout</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>List Layout</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>List Layout</em>' attribute.
	 * @@see #setListLayout(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_ListLayout()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isListLayout();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#isListLayout <em>List Layout</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>List Layout</em>' attribute.
	 * @@see #isListLayout()
	 * @@generated
	 */
	void setListLayout(boolean value);

} // GenCompartment
@


1.11
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d160 1
a160 1
	 * @@model opposite="compartments" resolveProxies="false" required="true" transient="false" suppressedSetVisibility="true"
@


1.10
log
@regenerate; add java expr accessor to the model
@
text
@d160 1
a160 1
	 * @@model opposite="compartments" required="true" transient="false" changeable="false"
@


1.9
log
@#146199 There should be no exceptions when child nodes are defined in pure design diagrams
@
text
@d160 1
a160 1
	 * @@model opposite="compartments" required="true" changeable="false"
@


1.9.4.1
log
@regenerate; add java expr getter to model
@
text
@d160 1
a160 1
	 * @@model opposite="compartments" required="true" transient="false" changeable="false"
@


1.8
log
@#145502 Naming strategy and gmfgen model objects should generate consistent class names
@
text
@d34 1
a34 1
 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='childNodes->forAll(n|n.modelFacet.containmentMetaFeature.genClass.ecoreClass.isSuperTypeOf(node.getDomainMetaClass().ecoreClass))' description='Compartment contains child nodes with \'Containment Feature\' not available in the compartment containing node \'Domain Element\''"
@


1.7
log
@[mgolubev] #140186 XYLayoutEditPolicy should not be installed for editparts that have figure with non-XYLayout in the gmfgraph model
@
text
@d38 3
@


1.6
log
@#125900 Redundant annotations added to View in generated view factory

semantic hint class name plroperty removed from the model.
@
text
@d29 1
d190 27
@


1.5
log
@[rdvorak] #131546 Update constraint annotations in gmfgen meta-model to the latest changes
@
text
@a188 8
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getSemanticHintFieldName();

@


1.4
log
@Correcting model to correctly load cross-references in the model.
@
text
@d33 1
a33 1
 * @@model
@


1.3
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d171 1
d174 1
a174 1
	 * @@model opposite="compartments" required="true" changeable="false"
d180 10
@


1.2
log
@#121581
Fields for the compartments are named unique.
@
text
@d10 1
d27 1
a27 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getLayoutKind <em>Layout Kind</em>}</li>
d36 1
a36 1
public interface GenCompartment extends GenChildContainer{
d145 2
a146 2
	 * Returns the value of the '<em><b>Layout Kind</b></em>' attribute.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind}.
d149 1
a149 1
	 * If the meaning of the '<em>Layout Kind</em>' attribute isn't clear,
d153 4
a156 16
	 * @@return the value of the '<em>Layout Kind</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind
	 * @@see #setLayoutKind(CompartmentLayoutKind)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenCompartment_LayoutKind()
	 * @@model
	 * @@generated
	 */
	CompartmentLayoutKind getLayoutKind();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getLayoutKind <em>Layout Kind</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Layout Kind</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind
	 * @@see #getLayoutKind()
d159 1
a159 1
	void setLayoutKind(CompartmentLayoutKind value);
d162 1
a162 1
	 * Returns the value of the '<em><b>Node</b></em>' container reference.
d166 1
a166 1
	 * If the meaning of the '<em>Node</em>' container reference isn't clear,
d170 1
a170 1
	 * @@return the value of the '<em>Node</em>' container reference.
@


1.1
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@d189 8
@

