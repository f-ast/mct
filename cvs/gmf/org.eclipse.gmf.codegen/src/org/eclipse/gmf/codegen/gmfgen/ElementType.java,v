head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080722-1827:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.5
	v20080521:1.5
	v20080516-1543:1.5
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080411-0411:1.5
	v20080404-1111:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.4.4.1
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.4.4.1
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070928-0000:1.4.4.1
	v20070921-0000:1.4.4.1
	v20070915-0000:1.4.4.1
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.4
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070405-1100:1.4
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070307-0700:1.4
	v20070301-1200:1.4
	v20070228-2000:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.2
	I20060407-1200:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	5d1f46e195874567;

1.4
date	2006.05.22.10.02.13;	author dstadnik;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2006.04.19.19.42.26;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.12.08.48.33;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.03.12.52.43;	author dstadnik;	state Exp;
branches;
next	;

1.4.4.1
date	2007.09.07.18.10.37;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.5
log
@regenerate; add java expr accessor to the model
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Element Type</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Base element type
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getDiagramElement <em>Diagram Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getUniqueIdentifier <em>Unique Identifier</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getDisplayName <em>Display Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#isDefinedExternally <em>Defined Externally</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getElementType()
 * @@model abstract="true"
 * @@generated
 */
public interface ElementType extends EObject {
	/**
	 * Returns the value of the '<em><b>Diagram Element</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getElementType <em>Element Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Element</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Element</em>' container reference.
	 * @@see #setDiagramElement(GenCommonBase)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getElementType_DiagramElement()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCommonBase#getElementType
	 * @@model opposite="elementType" required="true" transient="false"
	 * @@generated
	 */
	GenCommonBase getDiagramElement();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getDiagramElement <em>Diagram Element</em>}' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Element</em>' container reference.
	 * @@see #getDiagramElement()
	 * @@generated
	 */
	void setDiagramElement(GenCommonBase value);

	/**
	 * Returns the value of the '<em><b>Unique Identifier</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Unique Identifier</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Unique Identifier</em>' attribute.
	 * @@see #setUniqueIdentifier(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getElementType_UniqueIdentifier()
	 * @@model required="true"
	 * @@generated
	 */
	String getUniqueIdentifier();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getUniqueIdentifier <em>Unique Identifier</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Unique Identifier</em>' attribute.
	 * @@see #getUniqueIdentifier()
	 * @@generated
	 */
	void setUniqueIdentifier(String value);

	/**
	 * Returns the value of the '<em><b>Display Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * When there's palette, defaults to title of first tool that uses element with this type
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Display Name</em>' attribute.
	 * @@see #setDisplayName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getElementType_DisplayName()
	 * @@model
	 * @@generated
	 */
	String getDisplayName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getDisplayName <em>Display Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Display Name</em>' attribute.
	 * @@see #getDisplayName()
	 * @@generated
	 */
	void setDisplayName(String value);

	/**
	 * Returns the value of the '<em><b>Defined Externally</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Defined Externally</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Defined Externally</em>' attribute.
	 * @@see #setDefinedExternally(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getElementType_DefinedExternally()
	 * @@model
	 * @@generated
	 */
	boolean isDefinedExternally();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#isDefinedExternally <em>Defined Externally</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Defined Externally</em>' attribute.
	 * @@see #isDefinedExternally()
	 * @@generated
	 */
	void setDefinedExternally(boolean value);

} // ElementType
@


1.4
log
@#139021 Generated code should register all used element types inside own elementTypeBinding
@
text
@d48 1
a48 1
	 * @@model opposite="elementType" required="true"
@


1.4.4.1
log
@regenerate; add java expr getter to model
@
text
@d48 1
a48 1
	 * @@model opposite="elementType" required="true" transient="false"
@


1.3
log
@#131270 Duplicated tool entries when same tool definition is referenced from gmfmap.
@
text
@d26 1
d114 26
@


1.2
log
@#126200 register element types in xml
@
text
@d25 1
d88 25
@


1.1
log
@#126200 register element types in xml
@
text
@d16 4
d23 2
a24 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getEditHelperClassName <em>Edit Helper Class Name</em>}</li>
d29 1
a29 1
 * @@model interface="true" abstract="true"
d34 2
a35 1
	 * Returns the value of the '<em><b>Edit Helper Class Name</b></em>' attribute.
d38 1
a38 1
	 * If the meaning of the '<em>Edit Helper Class Name</em>' attribute isn't clear,
d42 5
a46 4
	 * @@return the value of the '<em>Edit Helper Class Name</em>' attribute.
	 * @@see #setEditHelperClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getElementType_EditHelperClassName()
	 * @@model
d49 1
a49 1
	String getEditHelperClassName();
d51 9
a59 1
	public static final String EDIT_HELPER_SUFFIX = "EditHelper";
d62 1
a62 1
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.ElementType#getEditHelperClassName <em>Edit Helper Class Name</em>}' attribute.
d64 4
d69 4
a72 2
	 * @@param value the new value of the '<em>Edit Helper Class Name</em>' attribute.
	 * @@see #getEditHelperClassName()
d75 1
a75 1
	void setEditHelperClassName(String value);
d78 1
d81 2
a82 1
	 * @@model kind="operation"
d85 1
a85 1
	String getEditHelperQualifiedClassName();
@

