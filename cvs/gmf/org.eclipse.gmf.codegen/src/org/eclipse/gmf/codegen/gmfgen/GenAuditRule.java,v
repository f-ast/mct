head	1.14;
access;
symbols
	v20081022-1925:1.14
	v20081015-1925:1.14
	v20081008-1925:1.14
	v20081001-1925:1.14
	v20080930-1130:1.14
	v20080926-1245:1.14
	v20080924-1925:1.14
	v20080917-1925:1.14
	v20080911-1728:1.14
	v20080910-1520:1.14
	v20080903-1520:1.14
	v20080827-1520:1.14
	v20080813-1520:1.14
	v20080806-1520:1.14
	v20080722-1827:1.14
	v20080718-1731:1.14
	v20080716-1600:1.14
	v20080716-1642:1.14
	R2_1_maintenance:1.14.0.2
	Root_R2_1_maintenance:1.14
	R2_1_0:1.14
	v20080610-1132:1.14
	v20080603-1553:1.14
	v20080528-1052:1.14
	v20080521:1.14
	v20080516-1543:1.14
	v20080516-1143:1.14
	v20080512-1200:1.14
	v20080508-2000:1.14
	v20080507-1326:1.14
	v20080503-1740:1.13
	v20080501-1739:1.13
	v20080425-1959:1.13
	v20080417-1610:1.12
	v20080411-0411:1.11
	v20080404-1111:1.11
	v20080322-0000:1.11
	v20080222-1200:1.10
	v20080215-1500:1.10
	v20080207-0207:1.9.2.1
	v20071222-1111:1.10
	v20071214-1111:1.10
	v20071130-1111:1.10
	v20071124-0000:1.9.2.1
	v20071112-0000:1.10
	v20071108-0000:1.10
	v20071003-0000:1.10
	v20070928-0000:1.9.2.1
	v20070921-0000:1.9.2.1
	v20070915-0000:1.9.2.1
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070405-1100:1.9
	v20070403-1500:1.9
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070307-0700:1.9
	v20070301-1200:1.9
	v20070228-2000:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070202-0200:1.7
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	v20061120-1300:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061027-1200:1.7
	v20061020-1000:1.7
	v20061013-1330:1.7
	v20060919-0800:1.7
	v20060907-1100:1.7
	M1_20:1.7
	v20060904-1500:1.7
	v20060824-1600:1.7
	v20060817-1500:1.7
	v20060728-0500:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060626-1420:1.7
	v20060620-0400:1.7
	v20060616-1400:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-1300:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.4
	I20060216-1945:1.3
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.14
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	39124821b4de4567;

1.13
date	2008.04.18.14.43.20;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	2e1d4808b3814567;

1.12
date	2008.04.14.08.38.03;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	1b0e480317df4567;

1.11
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	5e5047cd7dd64567;

1.10
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.9;
commitid	5d1f46e195874567;

1.9
date	2007.02.08.18.06.49;	author atikhomirov;	state Exp;
branches
	1.9.2.1;
next	1.8;
commitid	56b45cb66aa4567;

1.8
date	2007.02.07.00.37.49;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	c5d45c91f504567;

1.7
date	2006.04.20.19.36.27;	author radvorak;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.23.17.04.22;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.03.18.32.30;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.24.20.23.26;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.14.18.46.23;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.20.53.19;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.10.12.51.22;	author atikhomirov;	state Exp;
branches;
next	;

1.9.2.1
date	2007.09.07.18.10.36;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.14
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;



/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Audit Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Auditing rule in the form of a constraint evaluated against its target
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getRoot <em>Root</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getId <em>Id</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getRule <em>Rule</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getTarget <em>Target</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getMessage <em>Message</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getSeverity <em>Severity</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#isUseInLiveMode <em>Use In Live Mode</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#isRequiresConstraintAdapter <em>Requires Constraint Adapter</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory <em>Category</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule()
 * @@model
 * @@generated
 */
public interface GenAuditRule extends GenRuleBase {
	/**
	 * Returns the value of the '<em><b>Root</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getRules <em>Rules</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Root</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Root</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Root()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getRules
	 * @@model opposite="rules" resolveProxies="false" required="true" transient="false" changeable="false"
	 * @@generated
	 */
	GenAuditRoot getRoot();

	/**
	 * Returns the value of the '<em><b>Id</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Id</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Unique identifier of this audit rule
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Id</em>' attribute.
	 * @@see #setId(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Id()
	 * @@model required="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not id.oclIsUndefined() implies root.rules->one(i | i.id = self.id)' description='Audit rule with the same ID already exists'"
	 * @@generated
	 */
	String getId();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getId <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Id</em>' attribute.
	 * @@see #getId()
	 * @@generated
	 */
	void setId(String value);

	/**
	 * Returns the value of the '<em><b>Message</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * The text message to be reported in case of this audit violation
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Message</em>' attribute.
	 * @@see #setMessage(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Message()
	 * @@model
	 * @@generated
	 */
	String getMessage();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getMessage <em>Message</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Message</em>' attribute.
	 * @@see #getMessage()
	 * @@generated
	 */
	void setMessage(String value);

	/**
	 * Returns the value of the '<em><b>Rule</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Rule</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * A boolean type condition which if not satisfied indicates this audit rule violation. It is evaluated in the context of the target
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Rule</em>' reference.
	 * @@see #setRule(GenConstraint)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Rule()
	 * @@model required="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='context' ocl='target.getContext()'"
	 * @@generated
	 */
	GenConstraint getRule();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getRule <em>Rule</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Rule</em>' reference.
	 * @@see #getRule()
	 * @@generated
	 */
	void setRule(GenConstraint value);

	/**
	 * Returns the value of the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * The target representing the context this audit is evaluated in
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Target</em>' containment reference.
	 * @@see #setTarget(GenAuditable)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Target()
	 * @@model containment="true" required="true"
	 * @@generated
	 */
	GenAuditable getTarget();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getTarget <em>Target</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Target</em>' containment reference.
	 * @@see #getTarget()
	 * @@generated
	 */
	void setTarget(GenAuditable value);

	/**
	 * Returns the value of the '<em><b>Severity</b></em>' attribute.
	 * The default value is <code>"ERROR"</code>.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.GenSeverity}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Severity</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Describes the severity of this audit rule violation
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Severity</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenSeverity
	 * @@see #setSeverity(GenSeverity)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Severity()
	 * @@model default="ERROR"
	 * @@generated
	 */
	GenSeverity getSeverity();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getSeverity <em>Severity</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Severity</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenSeverity
	 * @@see #getSeverity()
	 * @@generated
	 */
	void setSeverity(GenSeverity value);

	/**
	 * Returns the value of the '<em><b>Use In Live Mode</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Use In Live Mode</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Indicates if this audit should be evaluated also in Live mode. If 'false', only Batch mode is applicable
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Use In Live Mode</em>' attribute.
	 * @@see #setUseInLiveMode(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_UseInLiveMode()
	 * @@model default="false"
	 * @@generated
	 */
	boolean isUseInLiveMode();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#isUseInLiveMode <em>Use In Live Mode</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Use In Live Mode</em>' attribute.
	 * @@see #isUseInLiveMode()
	 * @@generated
	 */
	void setUseInLiveMode(boolean value);

	/**
	 * Returns the value of the '<em><b>Requires Constraint Adapter</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Requires Constraint Adapter</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Requires Constraint Adapter</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_RequiresConstraintAdapter()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
	 * @@generated
	 */
	boolean isRequiresConstraintAdapter();

	/**
	 * Returns the value of the '<em><b>Category</b></em>' reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getAudits <em>Audits</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Category</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Category</em>' reference.
	 * @@see #setCategory(GenAuditContainer)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Category()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getAudits
	 * @@model opposite="audits" required="true"
	 * @@generated
	 */
	GenAuditContainer getCategory();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory <em>Category</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Category</em>' reference.
	 * @@see #getCategory()
	 * @@generated
	 */
	void setCategory(GenAuditContainer value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getConstraintAdapterQualifiedClassName();

	String getConstraintAdapterLocalClassName();
	String getConstraintAdapterClassName();
	
} // GenAuditRule
@


1.13
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@d113 1
a113 1
	 * Returns the value of the '<em><b>Rule</b></em>' containment reference.
d123 1
a123 1
	 * @@return the value of the '<em>Rule</em>' containment reference.
d126 1
a126 1
	 * @@model containment="true" required="true"
d133 1
a133 1
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getRule <em>Rule</em>}' containment reference.
d136 1
a136 1
	 * @@param value the new value of the '<em>Rule</em>' containment reference.
@


1.12
log
@[226149] Refactor Validation/Constraints: explicit context groupings instead of ID matching, unused IClientSelectors implementations are no longer generated, less custom code in the model, odd approach with map (semanticCtxIdMap) replaced with in-place VisualID check.
@
text
@d52 1
a52 1
	 * @@model opposite="rules" resolveProxies="false" required="true" transient="false" suppressedSetVisibility="true"
@


1.11
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a23 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContextSelectorLocalClassName <em>Context Selector Local Class Name</em>}</li>
a275 38
	 * @@model kind="operation" required="true"
	 * @@generated
	 */
	String getContextSelectorClassName();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation" required="true"
	 * @@generated
	 */
	String getContextSelectorQualifiedClassName();

	/**
	 * Returns the value of the '<em><b>Context Selector Local Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Context Selector Local Class Name</em>' attribute.
	 * @@see #setContextSelectorLocalClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_ContextSelectorLocalClassName()
	 * @@model
	 * @@generated
	 */
	String getContextSelectorLocalClassName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContextSelectorLocalClassName <em>Context Selector Local Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Context Selector Local Class Name</em>' attribute.
	 * @@see #getContextSelectorLocalClassName()
	 * @@generated
	 */
	void setContextSelectorLocalClassName(String value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
@


1.10
log
@regenerate; add java expr accessor to the model
@
text
@d53 1
a53 1
	 * @@model opposite="rules" required="true" transient="false" changeable="false"
@


1.9
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d53 1
a53 1
	 * @@model opposite="rules" required="true" changeable="false"
@


1.9.2.1
log
@regenerate; add java expr getter to model
@
text
@d53 1
a53 1
	 * @@model opposite="rules" required="true" transient="false" changeable="false"
@


1.8
log
@complete migration of plugin.xml template to xpand version - constraint providers rewritten
@
text
@d23 2
a30 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer <em>Container</em>}</li>
d32 1
d42 17
d73 1
a73 1
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not id.oclIsUndefined() implies container.audits->one(i | i.id = self.id)' description='Audit rule with the same ID already exists'"
d232 1
a232 2
	 * Returns the value of the '<em><b>Container</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getAudits <em>Audits</em>}'.
d235 1
a235 1
	 * If the meaning of the '<em>Container</em>' containment reference isn't clear,
d239 3
a241 8
	 * <!-- begin-model-doc -->
	 * The containing audit container of this audit rule
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Container</em>' container reference.
	 * @@see #setContainer(GenAuditContainer)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Container()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getAudits
	 * @@model opposite="audits" required="true"
d244 1
a244 1
	GenAuditContainer getContainer();
d247 2
a248 1
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer <em>Container</em>}' container reference.
d250 4
d255 5
a259 2
	 * @@param value the new value of the '<em>Container</em>' container reference.
	 * @@see #getContainer()
d262 1
a262 1
	void setContainer(GenAuditContainer value);
d265 1
a265 1
	 * Returns the value of the '<em><b>Requires Constraint Adapter</b></em>' attribute.
a266 4
	 * <p>
	 * If the meaning of the '<em>Requires Constraint Adapter</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
d268 2
a269 3
	 * @@return the value of the '<em>Requires Constraint Adapter</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_RequiresConstraintAdapter()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
d272 1
a272 1
	boolean isRequiresConstraintAdapter();
d291 1
d294 4
a297 1
	 * @@model kind="operation" required="true"
d303 10
@


1.7
log
@#136672 use common expression accessor with audits
@
text
@d30 1
d244 15
d282 8
a291 2
	String getConstraintAdapterQualifiedClassName();	
	boolean requiresConstraintAdapter();	
@


1.6
log
@[rdvorak] #131546 Update constraint annotations in gmfgen meta-model to the latest changes
@
text
@d10 1
d266 5
@


1.5
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d52 1
d107 1
a107 1
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='context' ocl='target.ecoreClass'"
@


1.4
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@d24 1
a24 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getName <em>Name</em>}</li>
a25 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getDescription <em>Description</em>}</li>
a66 29
	 * Returns the value of the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * A human readable name
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Name</em>' attribute.
	 * @@see #setName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Name()
	 * @@model
	 * @@generated
	 */
	String getName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getName <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Name</em>' attribute.
	 * @@see #getName()
	 * @@generated
	 */
	void setName(String value);

	/**
a91 25
	 * Returns the value of the '<em><b>Description</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * The detailed description of this audit semantics
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Description</em>' attribute.
	 * @@see #setDescription(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Description()
	 * @@model
	 * @@generated
	 */
	String getDescription();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getDescription <em>Description</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Description</em>' attribute.
	 * @@see #getDescription()
	 * @@generated
	 */
	void setDescription(String value);

	/**
d122 25
@


1.3
log
@[rdvorak] #127700 Rename genmodel::ModelElementSelector as a generic GenConstraint element
@
text
@a8 2
import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.ecore.EObject;
d15 4
a23 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getTarget <em>Target</em>}</li>
d37 1
a37 1
public interface GenAuditRule extends EObject {
a176 29
	 * Returns the value of the '<em><b>Target</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Target</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Model class to which this rules is targeted and is the context for rule expression evaluation
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Target</em>' reference.
	 * @@see #setTarget(GenClass)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditRule_Target()
	 * @@model required="true"
	 * @@generated
	 */
	GenClass getTarget();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getTarget <em>Target</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Target</em>' reference.
	 * @@see #getTarget()
	 * @@generated
	 */
	void setTarget(GenClass value);

	/**
d270 24
@


1.2
log
@[rdvorak] #123656 Added message and description to audit rule
@
text
@d157 1
a157 1
	 * @@see #setRule(ValueExpression)
d163 1
a163 1
	ValueExpression getRule();
d173 1
a173 1
	void setRule(ValueExpression value);
@


1.1
log
@[rdvorak] #123232 audits (ocl constraints) definition in genmodel
@
text
@d24 2
d96 50
@

