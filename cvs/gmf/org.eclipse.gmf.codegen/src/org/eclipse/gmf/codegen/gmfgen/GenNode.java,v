head	1.34;
access;
symbols
	v20081022-1925:1.34
	v20081015-1925:1.34
	v20081008-1925:1.34
	v20081001-1925:1.34
	v20080930-1130:1.34
	v20080926-1245:1.34
	v20080924-1925:1.34
	v20080917-1925:1.34
	v20080911-1728:1.34
	v20080910-1520:1.34
	v20080903-1520:1.34
	v20080827-1520:1.34
	v20080813-1520:1.33
	v20080806-1520:1.33
	v20080722-1827:1.33
	v20080718-1731:1.33
	v20080716-1600:1.33
	v20080716-1642:1.33
	R2_1_maintenance:1.33.0.2
	Root_R2_1_maintenance:1.33
	R2_1_0:1.33
	v20080610-1132:1.33
	v20080603-1553:1.33
	v20080528-1052:1.33
	v20080521:1.33
	v20080516-1543:1.33
	v20080516-1143:1.33
	v20080512-1200:1.33
	v20080508-2000:1.33
	v20080507-1326:1.33
	v20080503-1740:1.33
	v20080501-1739:1.33
	v20080425-1959:1.33
	v20080417-1610:1.33
	v20080411-0411:1.33
	v20080404-1111:1.33
	v20080322-0000:1.33
	v20080222-1200:1.33
	v20080215-1500:1.33
	v20080207-0207:1.32.2.1
	v20071222-1111:1.33
	v20071214-1111:1.33
	v20071130-1111:1.33
	v20071124-0000:1.32.2.1
	v20071112-0000:1.33
	v20071108-0000:1.33
	v20071003-0000:1.33
	v20070928-0000:1.32.2.1
	v20070921-0000:1.32.2.1
	v20070915-0000:1.32.2.1
	v20070903-0000:1.32
	v20070809-0000:1.32
	R2_0_maintenance:1.32.0.2
	R2_0:1.32
	R4_20:1.32
	v20070621-0000:1.32
	RC3_20:1.32
	v20070614-1400:1.32
	v20070608-1300:1.32
	v20070605-1400:1.32
	v20070601-1400:1.32
	v20070525-1500:1.32
	v20070520-1200:1.32
	v20070518-1300:1.32
	v20070504-1000:1.32
	v20070427-0600:1.32
	v20070420-1000:1.32
	v20070413-1300:1.32
	v20070405-1100:1.32
	v20070403-1500:1.32
	v20070330-1300:1.32
	v20060330-1300:1.32
	v20070322-1100:1.32
	v20060316-0600:1.32
	v20070307-0700:1.31
	v20070301-1200:1.31
	v20070228-2000:1.31
	v20070221-1500:1.31
	v20070208-1800:1.31
	v20070202-0200:1.26
	v20070103-0300:1.31
	M4_20:1.31
	v20061222-1800:1.31
	v20061218-1200:1.31
	v20061214-0000:1.30
	v20061120-1300:1.27
	M3_20:1.27
	v20061117-0800:1.27
	v20061027-1200:1.26
	v20061020-1000:1.26
	v20061013-1330:1.27
	v20060919-0800:1.26
	v20060907-1100:1.26
	M1_20:1.26
	v20060904-1500:1.26
	v20060824-1600:1.26
	v20060817-1500:1.26
	v20060728-0500:1.26
	v20060713-1700:1.26
	R1_0_maintenance:1.26.0.2
	R1_0:1.26
	v20060627-1200:1.26
	v20060626-1420:1.26
	v20060620-0400:1.26
	v20060616-1400:1.26
	v20060616-1200:1.26
	v20060609-1400:1.26
	v20060531-1730:1.23
	v20060530-1930:1.23
	v20060526-1200:1.23
	v20060519-1300:1.23
	v20060519-0800:1.23
	v20060512-1000:1.21
	I20060512-1000:1.21
	I20060505-1400:1.20
	I20060428-1300:1.20
	I20060424-0500:1.20
	I20060424-0300:1.20
	M6_10:1.20
	I20060407-1200:1.19
	I20060331-1000:1.18
	I20060324-0300:1.18
	I20060317-1300:1.17
	I20060317-1200:1.17
	I20060316-1300:1.17
	I20060309-1300:1.17
	M5_10:1.17
	S20060303-1600:1.17
	I20060227-1730:1.17
	I20060216-1945:1.17
	I20060210-1715:1.17
	I20060209-1815:1.17
	I20060203-0830:1.17
	I20060202-1415:1.17
	I20060129-1145:1.17
	I20060127-0900:1.17
	I20060120-1530:1.17
	I20060113-1700:1.15
	M4_10:1.15
	I20060107-1100:1.14
	I20060105-1630:1.14
	I20051230-1230:1.14
	I20051223-1100:1.14
	I20051217-0925:1.13
	I20051208-2000:1.13
	I20051201-1800:1.13
	I20051124-2000:1.12
	M3_10:1.10
	I20051118-1245:1.10
	I20051111-1800:1.10
	I20051106-0900:1.10
	v20051030:1.10
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.34
date	2008.08.22.15.20.16;	author atikhomirov;	state Exp;
branches;
next	1.33;
commitid	1abb48aed9234567;

1.33
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.32;
commitid	5d1f46e195874567;

1.32
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches
	1.32.2.1;
next	1.31;
commitid	444245f8090b4567;

1.31
date	2006.12.15.15.48.22;	author dstadnik;	state Exp;
branches;
next	1.30;
commitid	5de44582c3b54567;

1.30
date	2006.12.12.12.00.00;	author dstadnik;	state Exp;
branches;
next	1.29;
commitid	2d28457e99bb4567;

1.29
date	2006.12.11.19.33.23;	author dstadnik;	state Exp;
branches;
next	1.28;
commitid	457e457db27f4567;

1.28
date	2006.12.11.18.42.43;	author ashatalin;	state Exp;
branches;
next	1.27;
commitid	34a457da6a14567;

1.27
date	2006.09.26.15.41.04;	author atikhomirov;	state Exp;
branches;
next	1.26;

1.26
date	2006.06.09.09.02.46;	author dstadnik;	state Exp;
branches;
next	1.25;

1.25
date	2006.06.07.13.52.17;	author dstadnik;	state Exp;
branches;
next	1.24;

1.24
date	2006.06.05.11.23.48;	author dstadnik;	state Exp;
branches;
next	1.23;

1.23
date	2006.05.18.12.38.57;	author dstadnik;	state Exp;
branches;
next	1.22;

1.22
date	2006.05.17.10.21.11;	author radvorak;	state Exp;
branches;
next	1.21;

1.21
date	2006.05.10.11.13.14;	author dstadnik;	state Exp;
branches;
next	1.20;

1.20
date	2006.04.12.08.48.33;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.04.03.12.52.47;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.03.23.17.04.22;	author atikhomirov;	state Exp;
branches;
next	1.17;

1.17
date	2006.01.19.00.10.44;	author ashatalin;	state Exp;
branches;
next	1.16;

1.16
date	2006.01.17.10.55.00;	author atikhomirov;	state Exp;
branches;
next	1.15;

1.15
date	2006.01.10.16.16.58;	author ashatalin;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.21.14.20.10;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2005.11.28.16.09.46;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2005.11.24.08.51.26;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2005.11.21.09.35.37;	author dstadnik;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.27.16.12.20;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.26.18.43.48;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.24.13.32.02;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.11.12.25.35;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.10.12.57.39;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.04.13.36.40;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.09.15;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.28;	author atikhomirov;	state Exp;
branches;
next	;

1.32.2.1
date	2007.09.07.18.10.37;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.34
log
@[243151] mgolubev - explicit source/target for links
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Node</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * EClass mapped to Node
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getModelFacet <em>Model Facet</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getLabels <em>Labels</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getCompartments <em>Compartments</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getPrimaryDragEditPolicyQualifiedClassName <em>Primary Drag Edit Policy Qualified Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getGraphicalNodeEditPolicyClassName <em>Graphical Node Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getCreateCommandClassName <em>Create Command Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getReorientedIncomingLinks <em>Reoriented Incoming Links</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode()
 * @@model abstract="true"
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='diagramRunTimeClass.ecoreClass.eAllSuperTypes->including(diagramRunTimeClass.ecoreClass)->one(ePackage.name = \'notation\' and name = \'Node\')' description='Node \'Diagram Runtime Class\' must be a notation::Node or sub-class'"
 * @@generated
 */
public interface GenNode extends GenChildContainer, GenLinkEnd {

	public static final String CLASS_NAME_PREFIX = "Node"; //$NON-NLS-1$

	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Domain Meta Class</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Delegates to modelFacet
	 * <!-- end-model-doc -->
	 * @@model kind="operation" required="true"
	 * @@generated
	 */
	GenClass getDomainMetaClass();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * valid only when there are compartments
	 * <!-- end-model-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getGraphicalNodeEditPolicyQualifiedClassName();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getCreateCommandQualifiedClassName();

	/**
	 * Returns the value of the '<em><b>Labels</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenNodeLabel}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenNodeLabel#getNode <em>Node</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Labels</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Labels</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_Labels()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNodeLabel#getNode
	 * @@model opposite="node" containment="true"
	 * @@generated
	 */
	EList<GenNodeLabel> getLabels();

	/**
	 * Returns the value of the '<em><b>Compartments</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment#getNode <em>Node</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Compartments</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Compartments</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_Compartments()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenCompartment#getNode
	 * @@model opposite="node"
	 * @@generated
	 */
	EList<GenCompartment> getCompartments();

	/**
	 * Returns the value of the '<em><b>Primary Drag Edit Policy Qualified Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Custom primary drag edit policy
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Primary Drag Edit Policy Qualified Class Name</em>' attribute.
	 * @@see #setPrimaryDragEditPolicyQualifiedClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_PrimaryDragEditPolicyQualifiedClassName()
	 * @@model
	 * @@generated
	 */
	String getPrimaryDragEditPolicyQualifiedClassName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getPrimaryDragEditPolicyQualifiedClassName <em>Primary Drag Edit Policy Qualified Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Primary Drag Edit Policy Qualified Class Name</em>' attribute.
	 * @@see #getPrimaryDragEditPolicyQualifiedClassName()
	 * @@generated
	 */
	void setPrimaryDragEditPolicyQualifiedClassName(String value);

	/**
	 * Returns the value of the '<em><b>Graphical Node Edit Policy Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Graphical Node Edit Policy Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Graphical Node Edit Policy Class Name</em>' attribute.
	 * @@see #setGraphicalNodeEditPolicyClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_GraphicalNodeEditPolicyClassName()
	 * @@model
	 * @@generated
	 */
	String getGraphicalNodeEditPolicyClassName();

	public static final String GRAPHICAL_NODE_EDIT_POLICY_SUFFIX = "GraphicalNodeEditPolicy"; //$NON-NLS-1$

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getGraphicalNodeEditPolicyClassName <em>Graphical Node Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Graphical Node Edit Policy Class Name</em>' attribute.
	 * @@see #getGraphicalNodeEditPolicyClassName()
	 * @@generated
	 */
	void setGraphicalNodeEditPolicyClassName(String value);

	/**
	 * Returns the value of the '<em><b>Create Command Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Create Command Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Create Command Class Name</em>' attribute.
	 * @@see #setCreateCommandClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_CreateCommandClassName()
	 * @@model
	 * @@generated
	 */
	String getCreateCommandClassName();

	String CREATE_COMMAND_SUFFIX = "CreateCommand"; //$NON-NLS-1$

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getCreateCommandClassName <em>Create Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Create Command Class Name</em>' attribute.
	 * @@see #getCreateCommandClassName()
	 * @@generated
	 */
	void setCreateCommandClassName(String value);

	/**
	 * Returns the value of the '<em><b>Reoriented Incoming Links</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenLink}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Reoriented Incoming Links</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Reoriented Incoming Links</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ReorientedIncomingLinks()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
	 * @@generated
	 */
	EList<GenLink> getReorientedIncomingLinks();

	/**
	 * Returns the value of the '<em><b>Model Facet</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Model Facet</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Model Facet</em>' containment reference.
	 * @@see #setModelFacet(TypeModelFacet)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ModelFacet()
	 * @@model containment="true"
	 * @@generated
	 */
	TypeModelFacet getModelFacet();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getModelFacet <em>Model Facet</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Model Facet</em>' containment reference.
	 * @@see #getModelFacet()
	 * @@generated
	 */
	void setModelFacet(TypeModelFacet value);

} // GenNode
@


1.33
log
@regenerate; add java expr accessor to the model
@
text
@d39 1
a39 1
public interface GenNode extends GenChildContainer {
@


1.32
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d90 1
a90 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenNodeLabel" opposite="node" containment="true"
d108 1
a108 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenCompartment" opposite="node"
d205 1
a205 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenLink" transient="true" changeable="false" volatile="true" derived="true"
@


1.32.2.1
log
@regenerate; add java expr getter to model
@
text
@d90 1
a90 1
	 * @@model opposite="node" containment="true"
d108 1
a108 1
	 * @@model opposite="node"
d205 1
a205 1
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
@


1.31
log
@remove unused edit policy name; add custom primary drag edit policy name
@
text
@d93 1
a93 1
	EList getLabels();
d111 1
a111 1
	EList getCompartments();
d208 1
a208 1
	EList getReorientedIncomingLinks();
@


1.30
log
@change getRevertedIncomingLinks() method to property for xpand templates
@
text
@d27 1
d114 25
@


1.29
log
@expose getReorientedIncomingGenLinks() in model
@
text
@d29 1
a76 8
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenLink"
	 * @@generated
	 */
	EList getReorientedIncomingGenLinks();

	/**
d169 16
a209 1
	boolean needsGraphicalNodeEditPolicy();
@


1.28
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@a8 2
import java.util.List;

d76 8
d162 1
a162 1
	
a201 1
	List<GenLink> getReorientedIncomingGenLinks();
@


1.27
log
@do not generate GraphicalNodeEditPolicy unless there's smth for it to do
@
text
@d30 1
d70 8
d142 28
@


1.26
log
@#146199 There should be no exceptions when child nodes are defined in pure design diagrams
@
text
@d9 2
d158 2
@


1.25
log
@#145502 Naming strategy and gmfgen model objects should generate consistent class names
@
text
@a33 1
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='childNodes->forAll(n|n.modelFacet.containmentMetaFeature.genClass.ecoreClass.isSuperTypeOf(self.getDomainMetaClass().ecoreClass))' description='Node contains child nodes with \'Containment Feature\' not available in the node \'Domain Element\''"
@


1.24
log
@#144679 Do not use visual ids in edit helper names
@
text
@d38 3
@


1.23
log
@#114175 Allow a diagram definition to be mapped to zero or more domain models.
@
text
@d116 1
a116 1
	public static final String GRAPHICAL_NODE_EDIT_POLICY_SUFFIX = "GraphicalNodeEditPolicy";
@


1.22
log
@#136865 Validation of gmfgen fails for the notation model elements
@
text
@d139 1
a139 1
	 * @@model containment="true" required="true"
@


1.21
log
@#133836 Creating a child node without a label causes error
@
text
@d33 1
a33 1
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='notation::Node.oclAsType(ecore::EClass).isSuperTypeOf(diagramRunTimeClass.ecoreClass)' description='Node \'Diagram Runtime Class\' must be a notation::Node or sub-class'"
@


1.20
log
@#126200 register element types in xml
@
text
@a64 8
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	boolean isListContainerEntry();

	/**
@


1.19
log
@#126200 register element types in xml
@
text
@d37 1
a37 1
public interface GenNode extends GenChildContainer, ElementType {
@


1.18
log
@[rdvorak] #131546 Update constraint annotations in gmfgen meta-model to the latest changes
@
text
@d37 1
a37 1
public interface GenNode extends GenChildContainer {
@


1.17
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d33 2
a34 2
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='let c: ecore::EClass = diagramRunTimeClass.ecoreClass.oclAsType(ecore::EClass) in c = notation::Node or c.eAllSuperTypes->includes(notation::Node)'"
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='containers->forAll(n|n.listLayout) or containers->forAll(n|not n.listLayout)'"
@


1.16
log
@#123411 Support diagram without palette
cleanup (deprecated attribute removed, as well as incorrect javadoc)
@
text
@a23 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getDiagram <em>Diagram</em>}</li>
a26 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getChildContainersPlacement <em>Child Containers Placement</em>}</li>
d32 3
a34 1
 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='let c: ecore::EClass = diagramRunTimeClass.ecoreClass.oclAsType(ecore::EClass) in c = notation::Node or c.eAllSuperTypes->includes(notation::Node)'"
a38 2
	 * Returns the value of the '<em><b>Diagram</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagram#getNodes <em>Nodes</em>}'.
d41 1
a41 1
	 * If the meaning of the '<em>Diagram</em>' container reference isn't clear,
d45 4
a48 4
	 * @@return the value of the '<em>Diagram</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_Diagram()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagram#getNodes
	 * @@model opposite="nodes" required="true" changeable="false"
d51 1
a51 1
	GenDiagram getDiagram();
a54 4
	 * <p>
	 * If the meaning of the '<em>Domain Meta Class</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
d57 1
a57 1
	 * Delegates to modelFacet
d59 1
a59 1
	 * @@model kind="operation" required="true"
d62 1
a62 1
	GenClass getDomainMetaClass();
d70 1
a70 1
	String getGraphicalNodeEditPolicyQualifiedClassName();
d91 1
a91 1
	 * Returns the value of the '<em><b>Compartments</b></em>' containment reference list.
d100 1
a100 1
	 * @@return the value of the '<em>Compartments</em>' containment reference list.
d103 1
a103 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenCompartment" opposite="node" containment="true"
a108 29
	 * Returns the value of the '<em><b>Child Containers Placement</b></em>' attribute.
	 * The default value is <code>"TOOLBAR"</code>.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.CompartmentPlacementKind}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * valid only when there are compartments
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Child Containers Placement</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompartmentPlacementKind
	 * @@see #setChildContainersPlacement(CompartmentPlacementKind)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ChildContainersPlacement()
	 * @@model default="TOOLBAR"
	 * @@generated
	 */
	CompartmentPlacementKind getChildContainersPlacement();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getChildContainersPlacement <em>Child Containers Placement</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Child Containers Placement</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.CompartmentPlacementKind
	 * @@see #getChildContainersPlacement()
	 * @@generated
	 */
	void setChildContainersPlacement(CompartmentPlacementKind value);

	/**
@


1.15
log
@As a part of implementstion
#114178,114179
"Shortcutting" diagram elements.
@
text
@a28 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#isExplicitContentPane <em>Explicit Content Pane</em>}</li>
a143 25
	 * Returns the value of the '<em><b>Explicit Content Pane</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Add distinct figure to the node shape that will be used as a content pane
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Explicit Content Pane</em>' attribute.
	 * @@see #setExplicitContentPane(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ExplicitContentPane()
	 * @@model annotation="http://www.eclipse.org/gmf/2006/deprecated documentation='Obsolete with new gmfgraph. Should be removed form the model.'"
	 * @@generated
	 */
	boolean isExplicitContentPane();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#isExplicitContentPane <em>Explicit Content Pane</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Explicit Content Pane</em>' attribute.
	 * @@see #isExplicitContentPane()
	 * @@generated
	 */
	void setExplicitContentPane(boolean value);

	/**
@


1.14
log
@[rdvorak] #121602 constraint annotations
@
text
@d38 1
a38 1
public interface GenNode extends GenChildContainer{
d154 1
a154 1
	 * @@model
@


1.13
log
@#117749 & #118040 generate unique names for the shared elements in mapping model
@
text
@d35 1
a35 2
 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='super.domainNameFeature.eClass == domainMetaClass'"
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='diagramRunTimeClass.eCoreClass.eAllSuperTypes->includes(diagramrt.DiagramNode)'"
@


1.12
log
@#112318 Do not overwrite paintFigure() method in node edit part when specific figure class is specified
@
text
@d186 2
@


1.11
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@d29 1
d146 25
@


1.10
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@d29 1
d72 8
d145 26
@


1.9
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@d27 1
a27 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getChildContainers <em>Child Containers</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getChildNodes <em>Child Nodes</em>}</li>
d37 1
a37 1
public interface GenNode extends GenCommonBase {
d89 3
a91 3
	 * Returns the value of the '<em><b>Child Containers</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getParentNode <em>Parent Node</em>}'.
d94 1
a94 1
	 * If the meaning of the '<em>Child Containers</em>' containment reference list isn't clear,
d98 4
a101 4
	 * @@return the value of the '<em>Child Containers</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ChildContainers()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildContainer#getParentNode
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenChildContainer" opposite="parentNode" containment="true"
d104 1
a104 19
	EList getChildContainers();

	/**
	 * Returns the value of the '<em><b>Child Nodes</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode#getParentNode <em>Parent Node</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Child Nodes</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Child Nodes</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ChildNodes()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenChildNode#getParentNode
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenChildNode" opposite="parentNode" containment="true"
	 * @@generated
	 */
	EList getChildNodes();
d113 1
a113 1
	 * valid only when there are childContainers
@


1.8
log
@#112196 model facets in use for GenNode
@
text
@d38 1
a38 1
public interface GenNode extends GenBaseElement{
@


1.7
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d25 1
a25 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getDomainMetaClass <em>Domain Meta Class</em>}</li>
a29 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getModelFacet <em>Model Facet</em>}</li>
a56 1
	 * Returns the value of the '<em><b>Domain Meta Class</b></em>' reference.
d63 4
a66 4
	 * @@return the value of the '<em>Domain Meta Class</em>' reference.
	 * @@see #setDomainMetaClass(GenClass)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_DomainMetaClass()
	 * @@model required="true"
a71 10
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getDomainMetaClass <em>Domain Meta Class</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Meta Class</em>' reference.
	 * @@see #getDomainMetaClass()
	 * @@generated
	 */
	void setDomainMetaClass(GenClass value);

	/**
d165 1
a165 1
	 * @@model containment="true"
@


1.6
log
@#112191 colors as Viewmap's Attributes
@
text
@d26 1
d30 1
d84 18
d166 26
@


1.5
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@a25 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getBackgroundColor <em>Background Color</em>}</li>
a81 26
	 * Returns the value of the '<em><b>Background Color</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Background Color</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Background Color</em>' attribute.
	 * @@see #setBackgroundColor(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_BackgroundColor()
	 * @@model
	 * @@generated
	 */
	String getBackgroundColor();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getBackgroundColor <em>Background Color</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Background Color</em>' attribute.
	 * @@see #getBackgroundColor()
	 * @@generated
	 */
	void setBackgroundColor(String value);

	/**
@


1.4
log
@removed unused property 'affixedStereotypes'
@
text
@d111 1
d120 2
a121 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenChildContainer" containment="true"
@


1.3
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@a25 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getAffixedStereotypes <em>Affixed Stereotypes</em>}</li>
a82 16
	 * Returns the value of the '<em><b>Affixed Stereotypes</b></em>' attribute list.
	 * The list contents are of type {@@link java.lang.String}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Affixed Stereotypes</em>' attribute list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Affixed Stereotypes</em>' attribute list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_AffixedStereotypes()
	 * @@model type="java.lang.String"
	 * @@generated
	 */
	EList getAffixedStereotypes();

	/**
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d9 1
a10 1
import org.eclipse.emf.ecore.EClass;
d66 1
a66 1
	 * @@see #setDomainMetaClass(EClass)
d71 1
a71 1
	EClass getDomainMetaClass();
d81 1
a81 1
	void setDomainMetaClass(EClass value);
a187 8
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	void initialize(EClass eClass);

@


1.1
log
@*** empty log message ***
@
text
@a25 3
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getViewmapURI <em>Viewmap URI</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getNodeVisualizationKind <em>Node Visualization Kind</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getViewmapClass <em>Viewmap Class</em>}</li>
d39 1
a39 1
public interface GenNode extends GenBaseElement {
a83 79
	 * Returns the value of the '<em><b>Viewmap URI</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * e.g. platform:/proj1/images/file.svg#fig1
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Viewmap URI</em>' attribute.
	 * @@see #setViewmapURI(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ViewmapURI()
	 * @@model
	 * @@generated
	 */
	String getViewmapURI();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getViewmapURI <em>Viewmap URI</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Viewmap URI</em>' attribute.
	 * @@see #getViewmapURI()
	 * @@generated
	 */
	void setViewmapURI(String value);

	/**
	 * Returns the value of the '<em><b>Node Visualization Kind</b></em>' attribute.
	 * The default value is <code>"1"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Node Visualization Kind</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Node Visualization Kind</em>' attribute.
	 * @@see #setNodeVisualizationKind(int)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_NodeVisualizationKind()
	 * @@model default="1"
	 * @@generated
	 */
	int getNodeVisualizationKind();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getNodeVisualizationKind <em>Node Visualization Kind</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Node Visualization Kind</em>' attribute.
	 * @@see #getNodeVisualizationKind()
	 * @@generated
	 */
	void setNodeVisualizationKind(int value);

	/**
	 * Returns the value of the '<em><b>Viewmap Class</b></em>' attribute.
	 * The default value is <code>"org.eclipse.gmf.editor.viewmaps.SVGViewMap"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Viewmap Class</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Viewmap Class</em>' attribute.
	 * @@see #setViewmapClass(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNode_ViewmapClass()
	 * @@model default="org.eclipse.gmf.editor.viewmaps.SVGViewMap"
	 * @@generated
	 */
	String getViewmapClass();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenNode#getViewmapClass <em>Viewmap Class</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Viewmap Class</em>' attribute.
	 * @@see #getViewmapClass()
	 * @@generated
	 */
	void setViewmapClass(String value);

	/**
@

