head	1.13;
access;
symbols
	v20081022-1925:1.13
	v20081015-1925:1.13
	v20081008-1925:1.13
	v20081001-1925:1.13
	v20080930-1130:1.13
	v20080926-1245:1.13
	v20080924-1925:1.13
	v20080917-1925:1.13
	v20080911-1728:1.13
	v20080910-1520:1.13
	v20080903-1520:1.13
	v20080827-1520:1.13
	v20080813-1520:1.13
	v20080806-1520:1.13
	v20080722-1827:1.13
	v20080718-1731:1.13
	v20080716-1600:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.2
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080610-1132:1.13
	v20080603-1553:1.13
	v20080528-1052:1.13
	v20080521:1.13
	v20080516-1543:1.13
	v20080516-1143:1.13
	v20080512-1200:1.13
	v20080508-2000:1.13
	v20080507-1326:1.13
	v20080503-1740:1.12
	v20080501-1739:1.12
	v20080425-1959:1.12
	v20080417-1610:1.11
	v20080411-0411:1.11
	v20080404-1111:1.11
	v20080322-0000:1.11
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080207-0207:1.8.2.1
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.8.2.1
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070928-0000:1.8.2.1
	v20070921-0000:1.8.2.1
	v20070915-0000:1.8.2.1
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070520-1200:1.7
	v20070518-1300:1.7
	v20070504-1000:1.7
	v20070427-0600:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070405-1100:1.6
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-1300:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;


1.13
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	39124821b4de4567;

1.12
date	2008.04.18.14.43.20;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	2e1d4808b3814567;

1.11
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	5e5047cd7dd64567;

1.10
date	2008.02.29.21.19.52;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	45a447c876f24567;

1.9
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	5d1f46e195874567;

1.8
date	2007.05.22.17.27.35;	author atikhomirov;	state Exp;
branches
	1.8.2.1;
next	1.7;
commitid	694b465327fe4567;

1.7
date	2007.05.01.13.28.04;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	143a463740554567;

1.6
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	444245f8090b4567;

1.5
date	2007.01.25.16.57.54;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	271945b8e1904567;

1.4
date	2006.06.06.16.22.23;	author radvorak;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.24.16.22.37;	author radvorak;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.27.12.04.52;	author radvorak;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.15.41.17;	author radvorak;	state Exp;
branches;
next	;

1.8.2.1
date	2007.09.07.18.10.36;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.13
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id: GenExpressionProviderBase.java,v 1.12 2008/04/18 14:43:20 atikhomirov Exp $
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Expression Provider Base</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase#getExpressions <em>Expressions</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase#getContainer <em>Container</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderBase()
 * @@model abstract="true"
 * @@generated
 */
public interface GenExpressionProviderBase extends EObject {
	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Language</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@model kind="operation" required="true"
	 * @@generated
	 */
	GenLanguage getLanguage();

	/**
	 * Returns the value of the '<em><b>Expressions</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression#getProvider <em>Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Expressions</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Expressions</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderBase_Expressions()
	 * @@see org.eclipse.gmf.codegen.gmfgen.ValueExpression#getProvider
	 * @@model opposite="provider" containment="true" required="true"
	 * @@generated
	 */
	EList<ValueExpression> getExpressions();

	/**
	 * Returns the value of the '<em><b>Container</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getProviders <em>Providers</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Container</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Container</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderBase_Container()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getProviders
	 * @@model opposite="providers" resolveProxies="false" required="true" transient="false" changeable="false"
	 * @@generated
	 */
	GenExpressionProviderContainer getContainer();

} // GenExpressionProviderBase
@


1.12
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.11 2008/03/04 16:50:38 atikhomirov Exp $
d43 1
a43 1
	 * Returns the value of the '<em><b>Expressions</b></em>' reference list.
d45 1
d52 1
a52 1
	 * @@return the value of the '<em>Expressions</em>' reference list.
d54 2
a55 1
	 * @@model
@


1.11
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.10 2008/02/29 21:19:52 atikhomirov Exp $
d70 1
a70 1
	 * @@model opposite="providers" resolveProxies="false" required="true" transient="false" suppressedSetVisibility="true"
@


1.10
log
@[150177] phase IV, fix last use of qualified class names in ElementInitializers (via GMFGen genmodel java methods). Cleaned genmodel of methods no longer in use, few methods moved to ElementInitializer.ext (pending removal/refactoring)
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.9 2007/09/07 18:16:49 dstadnik Exp $
d70 1
a70 1
	 * @@model opposite="providers" required="true" transient="false" changeable="false"
@


1.9
log
@regenerate; add java expr accessor to the model
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.8 2007/05/22 17:27:35 atikhomirov Exp $
a8 3
import org.eclipse.emf.codegen.ecore.genmodel.GenClassifier;

import org.eclipse.emf.codegen.ecore.genmodel.GenTypedElement;
a42 16
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	String getQualifiedInstanceClassName(GenClassifier genClassifier);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	String getQualifiedTypeInstanceClassName(GenTypedElement genTypedElement);

	/**
@


1.8
log
@[123240] clean gmfgen uses of required plugins
@
text
@d5 1
a5 1
 * $Id$
d72 1
a72 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.ValueExpression"
d89 1
a89 1
	 * @@model opposite="providers" required="true" changeable="false"
@


1.8.2.1
log
@regenerate; add java expr getter to model
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.8 2007/05/22 17:27:35 atikhomirov Exp $
d72 1
a72 1
	 * @@model
d89 1
a89 1
	 * @@model opposite="providers" required="true" transient="false" changeable="false"
@


1.7
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.6 2007/03/14 14:39:35 atikhomirov Exp $
a93 8
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation" type="java.lang.String"
	 * @@generated
	 */
	EList<String> getRequiredPluginIDs();

@


1.6
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d5 1
a5 1
 * $Id$
a86 1
	 * @@see #setContainer(GenExpressionProviderContainer)
d89 1
a89 1
	 * @@model opposite="providers" required="true"
a94 10
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase#getContainer <em>Container</em>}' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Container</em>' container reference.
	 * @@see #getContainer()
	 * @@generated
	 */
	void setContainer(GenExpressionProviderContainer value);

	/**
@


1.5
log
@Revriting BaseItemSemanticEditPolicy to xpand
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.4 2006/06/06 16:22:23 radvorak Exp $
d75 1
a75 1
	EList getExpressions();
d111 1
a111 1
	EList getRequiredPluginIDs();
@


1.4
log
@#145042 Introduce expression Language enumeration into gmfmap, gfmgen models  instead of plain text attribute
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.3 2006/05/24 16:22:37 radvorak Exp $
d10 1
d46 16
a112 4
	String getQualifiedInstanceClassName(GenClassifier genClassifier);

	String getQualifiedInstanceClassName(GenTypedElement genTypedElement);	

@


1.3
log
@#143278 FeatureSequenceInitializer should ensure fault isolation of individual feature value setting
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.2 2006/04/27 12:04:52 radvorak Exp $
d42 1
a42 1
	String getLanguage();
@


1.2
log
@#138884  Expression accessors templates handle GenEnum classifier incorretly
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderBase.java,v 1.1 2006/04/13 15:41:17 radvorak Exp $
d10 1
d98 2
@


1.1
log
@[#134511] common access to expressions of different languages
@
text
@d5 1
a5 1
 * $Id$
d9 1
a10 1

d95 2
@

