head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081015-1925:1.3
	v20081008-1925:1.3
	v20081001-1925:1.3
	v20080930-1130:1.3
	v20080926-1245:1.3
	v20080924-1925:1.3
	v20080917-1925:1.3
	v20080911-1728:1.3
	v20080910-1520:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20080722-1827:1.3
	v20080718-1731:1.3
	v20080716-1600:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.2
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080610-1132:1.3
	v20080603-1553:1.3
	v20080528-1052:1.3
	v20080521:1.3
	v20080516-1543:1.3
	v20080516-1143:1.3
	v20080512-1200:1.3
	v20080508-2000:1.3
	v20080507-1326:1.3
	v20080503-1740:1.3
	v20080501-1739:1.3
	v20080425-1959:1.3
	v20080417-1610:1.2
	v20080411-0411:1.2
	v20080404-1111:1.2
	v20080322-0000:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2008.04.18.14.43.21;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	2e1d4808b3814567;

1.2
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	5e5047cd7dd64567;

1.1
date	2008.02.27.17.30.21;	author atikhomirov;	state Exp;
branches;
next	;
commitid	22cf47c59e244567;


desc
@@


1.3
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Dynamic Model Access</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess#getEditorGen <em>Editor Gen</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess#getPackageName <em>Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess#getClassName <em>Class Name</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getDynamicModelAccess()
 * @@model
 * @@generated
 */
public interface DynamicModelAccess extends EObject {
	/**
	 * Returns the value of the '<em><b>Editor Gen</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getModelAccess <em>Model Access</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Editor Gen</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Editor Gen</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getDynamicModelAccess_EditorGen()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getModelAccess
	 * @@model opposite="modelAccess" resolveProxies="false" transient="false" changeable="false"
	 * @@generated
	 */
	GenEditorGenerator getEditorGen();

	/**
	 * Returns the value of the '<em><b>Package Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Package Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Package Name</em>' attribute.
	 * @@see #setPackageName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getDynamicModelAccess_PackageName()
	 * @@model
	 * @@generated
	 */
	String getPackageName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess#getPackageName <em>Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Package Name</em>' attribute.
	 * @@see #getPackageName()
	 * @@generated
	 */
	void setPackageName(String value);

	/**
	 * Returns the value of the '<em><b>Class Name</b></em>' attribute.
	 * The default value is <code>"MetaModelFacility"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Class Name</em>' attribute.
	 * @@see #setClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getDynamicModelAccess_ClassName()
	 * @@model default="MetaModelFacility"
	 * @@generated
	 */
	String getClassName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess#getClassName <em>Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Class Name</em>' attribute.
	 * @@see #getClassName()
	 * @@generated
	 */
	void setClassName(String value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getQualifiedClassName();

} // DynamicModelAccess
@


1.2
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d42 1
a42 1
	 * @@model opposite="modelAccess" resolveProxies="false" transient="false" suppressedSetVisibility="true"
@


1.1
log
@[150177] phase II, generated facility to perform metamodel operations (like instanceof or metaclass accessors) with dynamic models, new gmfgen options to parameterize codegen.
@
text
@d42 1
a42 1
	 * @@model opposite="modelAccess" transient="false" suppressedSetVisibility="true"
@

