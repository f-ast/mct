head	1.8;
access;
symbols
	v20081022-1925:1.8
	v20081015-1925:1.8
	v20081008-1925:1.8
	v20081001-1925:1.8
	v20080930-1130:1.8
	v20080926-1245:1.8
	v20080924-1925:1.8
	v20080917-1925:1.8
	v20080911-1728:1.8
	v20080910-1520:1.8
	v20080903-1520:1.8
	v20080827-1520:1.8
	v20080813-1520:1.8
	v20080806-1520:1.8
	v20080722-1827:1.8
	v20080718-1731:1.8
	v20080716-1600:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.4
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080528-1052:1.8
	v20080521:1.8
	v20080516-1543:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080508-2000:1.8
	v20080507-1326:1.8
	v20080503-1740:1.8
	v20080501-1739:1.8
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080411-0411:1.8
	v20080404-1111:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070928-0000:1.8
	v20070921-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070520-1200:1.8
	v20070518-1300:1.8
	v20070504-1000:1.8
	v20070427-0600:1.8
	v20070420-1000:1.8
	v20070413-1300:1.8
	v20070405-1100:1.7
	v20070403-1500:1.7
	v20070330-1300:1.7
	v20060330-1300:1.7
	v20070322-1100:1.7
	v20060316-0600:1.7
	v20070307-0700:1.6
	v20070301-1200:1.6
	v20070228-2000:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070202-0200:1.6
	v20070103-0300:1.6
	M4_20:1.6
	v20061222-1800:1.6
	v20061218-1200:1.6
	v20061214-0000:1.6
	v20061120-1300:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.6
	v20061020-1000:1.6
	v20061013-1330:1.6
	v20060919-0800:1.6
	v20060907-1100:1.6
	M1_20:1.6
	v20060904-1500:1.6
	v20060824-1600:1.6
	v20060817-1500:1.6
	v20060728-0500:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060620-0400:1.6
	v20060616-1400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-1300:1.6
	v20060519-0800:1.6
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	725b461c97d64567;

1.7
date	2007.03.14.14.39.34;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	444245f8090b4567;

1.6
date	2006.05.17.12.39.15;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.20.16.27.28;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.05.17.30.29;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.11.12.25.35;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.03.19.09.14;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[181778] Generate standalone creation commands for reference based links
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;
import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EDataTypeUniqueEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.Attributes;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.Viewmap;

import org.eclipse.gmf.codegen.gmfgen.ViewmapLayoutType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Viewmap</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.ViewmapImpl#getAttributes <em>Attributes</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.ViewmapImpl#getRequiredPluginIDs <em>Required Plugin IDs</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.ViewmapImpl#getLayoutType <em>Layout Type</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public abstract class ViewmapImpl extends EObjectImpl implements Viewmap {
	/**
	 * The cached value of the '{@@link #getAttributes() <em>Attributes</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAttributes()
	 * @@generated
	 * @@ordered
	 */
	protected EList<Attributes> attributes;

	/**
	 * The cached value of the '{@@link #getRequiredPluginIDs() <em>Required Plugin IDs</em>}' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getRequiredPluginIDs()
	 * @@generated
	 * @@ordered
	 */
	protected EList<String> requiredPluginIDs;

	/**
	 * The default value of the '{@@link #getLayoutType() <em>Layout Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLayoutType()
	 * @@generated
	 * @@ordered
	 */
	protected static final ViewmapLayoutType LAYOUT_TYPE_EDEFAULT = ViewmapLayoutType.UNKNOWN_LITERAL;

	/**
	 * The cached value of the '{@@link #getLayoutType() <em>Layout Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLayoutType()
	 * @@generated
	 * @@ordered
	 */
	protected ViewmapLayoutType layoutType = LAYOUT_TYPE_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ViewmapImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getViewmap();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<String> getRequiredPluginIDs() {
		if (requiredPluginIDs == null) {
			requiredPluginIDs = new EDataTypeUniqueEList<String>(String.class, this, GMFGenPackage.VIEWMAP__REQUIRED_PLUGIN_IDS);
		}
		return requiredPluginIDs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ViewmapLayoutType getLayoutType() {
		return layoutType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLayoutType(ViewmapLayoutType newLayoutType) {
		ViewmapLayoutType oldLayoutType = layoutType;
		layoutType = newLayoutType == null ? LAYOUT_TYPE_EDEFAULT : newLayoutType;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.VIEWMAP__LAYOUT_TYPE, oldLayoutType, layoutType));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<Attributes> getAttributes() {
		if (attributes == null) {
			attributes = new EObjectContainmentEList<Attributes>(Attributes.class, this, GMFGenPackage.VIEWMAP__ATTRIBUTES);
		}
		return attributes;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public Attributes find(Class attributesClass) {
		for (Attributes next : getAttributes()) {
			if (attributesClass.isInstance(next)) {
				return next;
			}
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.VIEWMAP__ATTRIBUTES:
				return ((InternalEList<?>)getAttributes()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.VIEWMAP__ATTRIBUTES:
				return getAttributes();
			case GMFGenPackage.VIEWMAP__REQUIRED_PLUGIN_IDS:
				return getRequiredPluginIDs();
			case GMFGenPackage.VIEWMAP__LAYOUT_TYPE:
				return getLayoutType();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.VIEWMAP__ATTRIBUTES:
				getAttributes().clear();
				getAttributes().addAll((Collection<? extends Attributes>)newValue);
				return;
			case GMFGenPackage.VIEWMAP__REQUIRED_PLUGIN_IDS:
				getRequiredPluginIDs().clear();
				getRequiredPluginIDs().addAll((Collection<? extends String>)newValue);
				return;
			case GMFGenPackage.VIEWMAP__LAYOUT_TYPE:
				setLayoutType((ViewmapLayoutType)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.VIEWMAP__ATTRIBUTES:
				getAttributes().clear();
				return;
			case GMFGenPackage.VIEWMAP__REQUIRED_PLUGIN_IDS:
				getRequiredPluginIDs().clear();
				return;
			case GMFGenPackage.VIEWMAP__LAYOUT_TYPE:
				setLayoutType(LAYOUT_TYPE_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.VIEWMAP__ATTRIBUTES:
				return attributes != null && !attributes.isEmpty();
			case GMFGenPackage.VIEWMAP__REQUIRED_PLUGIN_IDS:
				return requiredPluginIDs != null && !requiredPluginIDs.isEmpty();
			case GMFGenPackage.VIEWMAP__LAYOUT_TYPE:
				return layoutType != LAYOUT_TYPE_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (requiredPluginIDs: ");
		result.append(requiredPluginIDs);
		result.append(", layoutType: ");
		result.append(layoutType);
		result.append(')');
		return result.toString();
	}

} //ViewmapImpl
@


1.7
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d51 1
a51 1
	protected EList<Attributes> attributes = null;
d61 1
a61 1
	protected EList<String> requiredPluginIDs = null;
@


1.6
log
@[mgolubev] #140186 XYLayoutEditPolicy should not be installed for editparts that have figure with non-XYLayout in the gmfgraph model
@
text
@a10 1
import java.util.Iterator;
d51 1
a51 1
	protected EList attributes = null;
d61 1
a61 1
	protected EList requiredPluginIDs = null;
d97 1
d107 1
a107 1
	public EList getRequiredPluginIDs() {
d109 1
a109 1
			requiredPluginIDs = new EDataTypeUniqueEList(String.class, this, GMFGenPackage.VIEWMAP__REQUIRED_PLUGIN_IDS);
d140 1
a140 1
	public EList getAttributes() {
d142 1
a142 1
			attributes = new EObjectContainmentEList(Attributes.class, this, GMFGenPackage.VIEWMAP__ATTRIBUTES);
d153 1
a153 2
		for (Iterator it = getAttributes().iterator(); it.hasNext(); ) {
			Attributes next = (Attributes) it.next();
d166 1
d170 1
a170 1
				return ((InternalEList)getAttributes()).basicRemove(otherEnd, msgs);
d180 1
d198 2
d204 1
a204 1
				getAttributes().addAll((Collection)newValue);
d208 1
a208 1
				getRequiredPluginIDs().addAll((Collection)newValue);
d222 1
d243 1
d261 1
@


1.5
log
@[mgolubev] #129362 Respect plug-in dependencies imposed on figure code - fix missing support for inner-class case
@
text
@d10 1
d17 1
d26 2
d37 1
d45 10
d65 11
a75 1
	 * The cached value of the '{@@link #getAttributes() <em>Attributes</em>}' containment reference list.
d78 1
a78 1
	 * @@see #getAttributes()
d82 1
a82 1
	protected EList attributes = null;
d119 21
d186 2
d207 3
d227 3
d245 2
d262 2
@


1.4
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d17 1
d32 1
d40 10
d82 12
d138 2
d155 4
d173 3
d189 2
d195 15
@


1.3
log
@#112191 colors as Viewmap's Attributes
@
text
@a14 1
import org.eclipse.emf.ecore.EStructuralFeature;
d97 4
a100 8
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.VIEWMAP__ATTRIBUTES:
					return ((InternalEList)getAttributes()).basicRemove(otherEnd, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d102 1
a102 1
		return eBasicSetContainer(null, featureID, msgs);
d110 2
a111 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d115 1
a115 1
		return eDynamicGet(eFeature, resolve);
d123 2
a124 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d130 1
a130 1
		eDynamicSet(eFeature, newValue);
d138 2
a139 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d144 1
a144 1
		eDynamicUnset(eFeature);
d152 2
a153 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d157 1
a157 1
		return eDynamicIsSet(eFeature);
@


1.2
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@d10 1
d81 15
@


1.1
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@a11 1

a12 1

a15 1

a16 1

a18 1

@

