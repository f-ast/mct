head	1.7;
access;
symbols
	v20081022-1925:1.7
	v20081015-1925:1.7
	v20081008-1925:1.7
	v20081001-1925:1.7
	v20080930-1130:1.7
	v20080926-1245:1.7
	v20080924-1925:1.7
	v20080917-1925:1.7
	v20080911-1728:1.7
	v20080910-1520:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080806-1520:1.7
	v20080722-1827:1.7
	v20080718-1731:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080603-1553:1.7
	v20080528-1052:1.7
	v20080521:1.7
	v20080516-1543:1.7
	v20080516-1143:1.7
	v20080512-1200:1.7
	v20080508-2000:1.7
	v20080507-1326:1.7
	v20080503-1740:1.7
	v20080501-1739:1.7
	v20080425-1959:1.7
	v20080417-1610:1.7
	v20080411-0411:1.6
	v20080404-1111:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20080215-1500:1.6
	v20080207-0207:1.6
	v20071222-1111:1.6
	v20071214-1111:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071112-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070928-0000:1.6
	v20070921-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.6
	v20070518-1300:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070405-1100:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070307-0700:1.4
	v20070301-1200:1.4
	v20070228-2000:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.04.14.08.38.03;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	1b0e480317df4567;

1.6
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	725b461c97d64567;

1.5
date	2007.03.14.14.39.34;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	444245f8090b4567;

1.4
date	2006.05.29.20.07.49;	author radvorak;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.09.13.28.19;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.03.18.32.30;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.24.20.23.26;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[226149] Refactor Validation/Constraints: explicit context groupings instead of ID matching, unused IClientSelectors implementations are no longer generated, less custom code in the model, odd approach with map (semanticCtxIdMap) replaced with in-place VisualID check.
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.codegen.ecore.genmodel.GenClassifier;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
import org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Diagram Element Target</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramElementTargetImpl#getElement <em>Element</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
	/**
	 * The cached value of the '{@@link #getElement() <em>Element</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getElement()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenCommonBase> element;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDiagramElementTargetImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenDiagramElementTarget();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenCommonBase> getElement() {
		if (element == null) {
			element = new EObjectResolvingEList<GenCommonBase>(GenCommonBase.class, this, GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT);
		}
		return element;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public GenClassifier getContext() {
		if(getElement().isEmpty()) {
			return null;
		}
		return getElement().get(0).getDiagramRunTimeClass();
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT:
				return getElement();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT:
				getElement().clear();
				getElement().addAll((Collection<? extends GenCommonBase>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT:
				getElement().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT:
				return element != null && !element.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //GenDiagramElementTargetImpl
@


1.6
log
@[181778] Generate standalone creation commands for reference based links
@
text
@a88 18
	 * @@generated NOT
	 */
	public String getClientContextID() {	
		StringBuilder buf = new StringBuilder("Ctx"); //$NON-NLS-1$
		for (GenCommonBase nextElement : getElement()) {
			buf.append('_');
			int id = nextElement.getVisualID();
			if(id < 0) {
				buf.append('n');
			}
			buf.append(id);			
		}
		return buf.toString();
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
@


1.5
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d41 1
a41 1
	protected EList<GenCommonBase> element = null;
@


1.4
log
@#136701 [GMFGen] GenDiagramElementTarget should allow to target more then one element
@
text
@a9 1
import java.util.Iterator;
d41 1
a41 1
	protected EList element = null;
d57 1
d67 1
a67 1
	public EList getElement() {
d69 1
a69 1
			element = new EObjectResolvingEList(GenCommonBase.class, this, GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT);
d83 1
a83 1
		return ((GenCommonBase)getElement().get(0)).getDiagramRunTimeClass();
d92 2
a93 3
		StringBuffer buf = new StringBuffer("Ctx"); //$NON-NLS-1$
		for (Iterator it = getElement().iterator(); it.hasNext();) {
			GenCommonBase nextElement = (GenCommonBase) it.next();			
d109 1
d123 2
d129 1
a129 1
				getElement().addAll((Collection)newValue);
d140 1
d155 1
@


1.3
log
@remove stale imports
@
text
@d9 3
d13 1
a13 2

import org.eclipse.emf.common.notify.Notification;
d15 1
a15 3
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;

d35 1
a35 1
	 * The cached value of the '{@@link #getElement() <em>Element</em>}' reference.
d42 1
a42 1
	protected GenCommonBase element = null;
d67 3
a69 8
	public GenCommonBase getElement() {
		if (element != null && element.eIsProxy()) {
			InternalEObject oldElement = (InternalEObject)element;
			element = (GenCommonBase)eResolveProxy(oldElement);
			if (element != oldElement) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT, oldElement, element));
			}
a76 21
	 * @@generated
	 */
	public GenCommonBase basicGetElement() {
		return element;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setElement(GenCommonBase newElement) {
		GenCommonBase oldElement = element;
		element = newElement;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT, oldElement, element));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
d80 1
a80 1
		if(getElement() == null) {
d83 1
a83 1
		return getElement().getDiagramRunTimeClass();
d92 11
a102 2
		int id = getElement() != null ? getElement().getVisualID() : -1;
		return "Ctx" + (id < 0 ? "_" : Integer.toString(id)); //$NON-NLS-1$ //$NON-NLS-2$
d113 1
a113 2
				if (resolve) return getElement();
				return basicGetElement();
d126 2
a127 1
				setElement((GenCommonBase)newValue);
d141 1
a141 1
				setElement((GenCommonBase)null);
d155 1
a155 1
				return element != null;
@


1.2
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@a10 1
import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
a14 1
import org.eclipse.emf.ecore.impl.EObjectImpl;
@


1.1
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@d9 2
d16 2
d35 1
a35 1
public class GenDiagramElementTargetImpl extends GenRuleTargetImpl implements GenDiagramElementTarget {
d107 1
a107 1
	public GenClass getContext() {
@

