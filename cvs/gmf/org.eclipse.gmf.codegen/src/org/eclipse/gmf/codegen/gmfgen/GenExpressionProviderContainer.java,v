head	1.10;
access;
symbols
	v20081022-1925:1.10
	v20081015-1925:1.10
	v20081008-1925:1.10
	v20081001-1925:1.10
	v20080930-1130:1.10
	v20080926-1245:1.10
	v20080924-1925:1.10
	v20080917-1925:1.10
	v20080911-1728:1.10
	v20080910-1520:1.10
	v20080903-1520:1.10
	v20080827-1520:1.10
	v20080813-1520:1.10
	v20080806-1520:1.10
	v20080722-1827:1.10
	v20080718-1731:1.10
	v20080716-1600:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.2
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080610-1132:1.10
	v20080603-1553:1.10
	v20080528-1052:1.10
	v20080521:1.10
	v20080516-1543:1.10
	v20080516-1143:1.10
	v20080512-1200:1.10
	v20080508-2000:1.10
	v20080507-1326:1.10
	v20080503-1740:1.8
	v20080501-1739:1.8
	v20080425-1959:1.8
	v20080417-1610:1.7
	v20080411-0411:1.7
	v20080404-1111:1.7
	v20080322-0000:1.7
	v20080222-1200:1.6
	v20080215-1500:1.6
	v20080207-0207:1.5.2.1
	v20071222-1111:1.6
	v20071214-1111:1.6
	v20071130-1111:1.6
	v20071124-0000:1.5.2.1
	v20071112-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070928-0000:1.5.2.1
	v20070921-0000:1.5.2.1
	v20070915-0000:1.5.2.1
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070405-1100:1.4
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070307-0700:1.3
	v20070301-1200:1.3
	v20070228-2000:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070202-0200:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061218-1200:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.3
	v20061020-1000:1.3
	v20061013-1330:1.3
	v20060919-0800:1.3
	v20060907-1100:1.3
	M1_20:1.3
	v20060904-1500:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060728-0500:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060626-1420:1.3
	v20060620-0400:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.2
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;


1.10
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	39124821b4de4567;

1.9
date	2008.05.05.21.06.41;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	4186481f76b14567;

1.8
date	2008.04.18.14.43.21;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	2e1d4808b3814567;

1.7
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	5e5047cd7dd64567;

1.6
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	5d1f46e195874567;

1.5
date	2007.05.15.18.34.13;	author ashatalin;	state Exp;
branches
	1.5.2.1;
next	1.4;
commitid	25434649fd1f4567;

1.4
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	444245f8090b4567;

1.3
date	2006.05.31.19.53.02;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.30.15.28.05;	author radvorak;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.15.41.17;	author radvorak;	state Exp;
branches;
next	;

1.5.2.1
date	2007.09.07.18.10.38;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.10
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id: GenExpressionProviderContainer.java,v 1.9 2008/05/05 21:06:41 atikhomirov Exp $
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Expression Provider Container</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getExpressionsPackageName <em>Expressions Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getAbstractExpressionClassName <em>Abstract Expression Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getProviders <em>Providers</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getEditorGen <em>Editor Gen</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderContainer()
 * @@model
 * @@generated
 */
public interface GenExpressionProviderContainer extends EObject {
	/**
	 * Returns the value of the '<em><b>Expressions Package Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Expressions Package Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Expressions Package Name</em>' attribute.
	 * @@see #setExpressionsPackageName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderContainer_ExpressionsPackageName()
	 * @@model
	 * @@generated
	 */
	String getExpressionsPackageName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getExpressionsPackageName <em>Expressions Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Expressions Package Name</em>' attribute.
	 * @@see #getExpressionsPackageName()
	 * @@generated
	 */
	void setExpressionsPackageName(String value);

	/**
	 * Returns the value of the '<em><b>Abstract Expression Class Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Base Expression Class Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Abstract Expression Class Name</em>' attribute.
	 * @@see #setAbstractExpressionClassName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderContainer_AbstractExpressionClassName()
	 * @@model
	 * @@generated
	 */
	String getAbstractExpressionClassName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getAbstractExpressionClassName <em>Abstract Expression Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Abstract Expression Class Name</em>' attribute.
	 * @@see #getAbstractExpressionClassName()
	 * @@generated
	 */
	void setAbstractExpressionClassName(String value);

	/**
	 * Returns the value of the '<em><b>Providers</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase#getContainer <em>Container</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Providers</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Providers</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderContainer_Providers()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase#getContainer
	 * @@model opposite="container" containment="true"
	 * @@generated
	 */
	EList<GenExpressionProviderBase> getProviders();

	/**
	 * Returns the value of the '<em><b>Editor Gen</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getExpressionProviders <em>Expression Providers</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Editor Gen</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Editor Gen</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenExpressionProviderContainer_EditorGen()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getExpressionProviders
	 * @@model opposite="expressionProviders" resolveProxies="false" required="true" transient="false" changeable="false"
	 * @@generated
	 */
	GenEditorGenerator getEditorGen();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model kind="operation" required="true"
	 * @@generated
	 */
	String getAbstractExpressionQualifiedClassName();

} // GenExpressionProviderContainer
@


1.9
log
@[228913] cleaned isCopy and java provider's getOperationName that are not in use any more; introduced fine-tuning options: use expressions body for java methods and whether to throw exception or fail silently (using reasonable/appropriate for the context default value), latter change obsoleted NoImplException and respective debug options
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderContainer.java,v 1.8 2008/04/18 14:43:21 atikhomirov Exp $
a121 8
	 * @@model expressionRequired="true"
	 * @@generated
	 */
	GenExpressionProviderBase getProvider(ValueExpression expression);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
@


1.8
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderContainer.java,v 1.7 2008/03/04 16:50:38 atikhomirov Exp $
a134 8
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model expressionRequired="true"
	 * @@generated
	 */
	boolean isCopy(ValueExpression expression);

@


1.7
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderContainer.java,v 1.6 2007/09/07 18:16:49 dstadnik Exp $
d114 1
a114 1
	 * @@model opposite="expressionProviders" resolveProxies="false" required="true" transient="false" suppressedSetVisibility="true"
@


1.6
log
@regenerate; add java expr accessor to the model
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderContainer.java,v 1.5 2007/05/15 18:34:13 ashatalin Exp $
a111 1
	 * @@see #setEditorGen(GenEditorGenerator)
d114 1
a114 1
	 * @@model opposite="expressionProviders" required="true" transient="false"
a119 10
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getEditorGen <em>Editor Gen</em>}' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Editor Gen</em>' container reference.
	 * @@see #getEditorGen()
	 * @@generated
	 */
	void setEditorGen(GenEditorGenerator value);

	/**
@


1.5
log
@Generating VisualIDRegistry using XPAND.
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderContainer.java,v 1.4 2007/03/14 14:39:36 atikhomirov Exp $
d97 1
a97 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase" opposite="container" containment="true"
d115 1
a115 1
	 * @@model opposite="expressionProviders" required="true"
@


1.5.2.1
log
@regenerate; add java expr getter to model
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderContainer.java,v 1.5 2007/05/15 18:34:13 ashatalin Exp $
d97 1
a97 1
	 * @@model opposite="container" containment="true"
d115 1
a115 1
	 * @@model opposite="expressionProviders" required="true" transient="false"
@


1.4
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d5 1
a5 1
 * $Id$
d146 7
a152 1
	boolean isCopy(ValueExpression expression); // Indicates whether the 'expression' represents a copy resulting from transformation of a reused mapping to gmfgen model 	
@


1.3
log
@#144251 Example ecore diagram editor creates invalid ecore file

Should be possible to remove reference-only links.
@
text
@d100 1
a100 1
	EList getProviders();
@


1.2
log
@#144305 VisualIDRegistry.javajet should check for java expression duplicates in case of reused NodeMapping
1) provide a cleaner detection of expression copies for use in templates
@
text
@d5 1
a5 1
 * $Id: GenExpressionProviderContainer.java,v 1.1 2006/04/13 15:41:17 radvorak Exp $
d145 1
a145 1
	
@


1.1
log
@[#134511] common access to expressions of different languages
@
text
@d5 1
a5 1
 * $Id$
a9 1

d145 2
@

