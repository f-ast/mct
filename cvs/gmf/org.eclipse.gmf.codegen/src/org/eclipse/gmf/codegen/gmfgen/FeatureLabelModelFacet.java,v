head	1.12;
access;
symbols
	v20081022-1925:1.12
	v20081015-1925:1.12
	v20081008-1925:1.12
	v20081001-1925:1.12
	v20080930-1130:1.12
	v20080926-1245:1.12
	v20080924-1925:1.12
	v20080917-1925:1.12
	v20080911-1728:1.12
	v20080910-1520:1.12
	v20080903-1520:1.12
	v20080827-1520:1.11
	v20080813-1520:1.10
	v20080806-1520:1.9
	v20080722-1827:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080528-1052:1.9
	v20080521:1.9
	v20080516-1543:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080508-2000:1.9
	v20080507-1326:1.9
	v20080503-1740:1.9
	v20080501-1739:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080411-0411:1.9
	v20080404-1111:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080207-0207:1.8.2.1
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.8.2.1
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070928-0000:1.8.2.1
	v20070921-0000:1.8.2.1
	v20070915-0000:1.8.2.1
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070520-1200:1.8
	v20070518-1300:1.8
	v20070504-1000:1.8
	v20070427-0600:1.6
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070405-1100:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070307-0700:1.4
	v20070301-1200:1.4
	v20070228-2000:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070202-0200:1.3
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.3
	v20061020-1000:1.3
	v20061013-1330:1.3
	v20060919-0800:1.3
	v20060907-1100:1.3
	M1_20:1.3
	v20060904-1500:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060728-0500:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060626-1420:1.3
	v20060620-0400:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.08.29.16.10.03;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	4a1948b81f524567;

1.11
date	2008.08.25.16.53.20;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	21e48b2e3764567;

1.10
date	2008.08.13.13.50.34;	author dstadnik;	state Exp;
branches;
next	1.9;
commitid	440348a2e6584567;

1.9
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	5d1f46e195874567;

1.8
date	2007.05.03.09.58.55;	author dstadnik;	state Exp;
branches
	1.8.2.1;
next	1.7;
commitid	518a4639b24f4567;

1.7
date	2007.04.27.11.23.38;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	10694631dd364567;

1.6
date	2007.04.26.14.11.52;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	4c4f4630b3194567;

1.5
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	444245f8090b4567;

1.4
date	2006.10.18.14.21.45;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.07.14.09.19;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.06.14.31.00;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.03.12.38.15;	author dstadnik;	state Exp;
branches;
next	;

1.8.2.1
date	2007.09.07.18.10.37;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.12
log
@[244419] Support for custom parser - finalize parsers/labelmodelfacet relationship
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;


import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Feature Label Model Facet</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Model facet of label based on domain model attribute(s)
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getMetaFeatures <em>Meta Features</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditableMetaFeatures <em>Editable Meta Features</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getViewPattern <em>View Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditorPattern <em>Editor Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditPattern <em>Edit Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getViewMethod <em>View Method</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditMethod <em>Edit Method</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet()
 * @@model
 * @@generated
 */
public interface FeatureLabelModelFacet extends LabelModelFacet {
	/**
	 * Returns the value of the '<em><b>Meta Features</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.codegen.ecore.genmodel.GenFeature}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Meta Features</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Meta Features</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_MetaFeatures()
	 * @@model required="true"
	 * @@generated
	 */
	EList<GenFeature> getMetaFeatures();

	/**
	 * Returns the value of the '<em><b>Editable Meta Features</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.codegen.ecore.genmodel.GenFeature}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Editable Meta Features</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Editable Meta Features</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_EditableMetaFeatures()
	 * @@model
	 * @@generated
	 */
	EList<GenFeature> getEditableMetaFeatures();

	/**
	 * Returns the value of the '<em><b>View Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern to produce label on diagram, depends on view method
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>View Pattern</em>' attribute.
	 * @@see #setViewPattern(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_ViewPattern()
	 * @@model
	 * @@generated
	 */
	String getViewPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getViewPattern <em>View Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>View Pattern</em>' attribute.
	 * @@see #getViewPattern()
	 * @@generated
	 */
	void setViewPattern(String value);

	/**
	 * Returns the value of the '<em><b>Editor Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern to produce text for inplace editor, depends on view method; if not specified then viewPattern should be used
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Editor Pattern</em>' attribute.
	 * @@see #setEditorPattern(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_EditorPattern()
	 * @@model
	 * @@generated
	 */
	String getEditorPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditorPattern <em>Editor Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Editor Pattern</em>' attribute.
	 * @@see #getEditorPattern()
	 * @@generated
	 */
	void setEditorPattern(String value);

	/**
	 * Returns the value of the '<em><b>View Method</b></em>' attribute.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.LabelTextAccessMethod}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>View Method</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>View Method</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelTextAccessMethod
	 * @@see #setViewMethod(LabelTextAccessMethod)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_ViewMethod()
	 * @@model annotation="http://www.eclipse.org/gmf/2006/deprecated documentation='Replaced with GenParsers and PredefinedParser'"
	 * @@generated
	 */
	LabelTextAccessMethod getViewMethod();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getViewMethod <em>View Method</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>View Method</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelTextAccessMethod
	 * @@see #getViewMethod()
	 * @@generated
	 */
	void setViewMethod(LabelTextAccessMethod value);

	/**
	 * Returns the value of the '<em><b>Edit Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern to extract values from input text, depends on edit method; if not specified then viewPattern should be used
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #setEditPattern(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_EditPattern()
	 * @@model
	 * @@generated
	 */
	String getEditPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditPattern <em>Edit Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #getEditPattern()
	 * @@generated
	 */
	void setEditPattern(String value);

	/**
	 * Returns the value of the '<em><b>Edit Method</b></em>' attribute.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.LabelTextAccessMethod}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Edit Method</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Edit Method</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelTextAccessMethod
	 * @@see #setEditMethod(LabelTextAccessMethod)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_EditMethod()
	 * @@model annotation="http://www.eclipse.org/gmf/2006/deprecated documentation='Replaced with GenParsers and PredefinedParser'"
	 * @@generated
	 */
	LabelTextAccessMethod getEditMethod();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditMethod <em>Edit Method</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Method</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelTextAccessMethod
	 * @@see #getEditMethod()
	 * @@generated
	 */
	void setEditMethod(LabelTextAccessMethod value);

} // FeatureLabelModelFacet
@


1.11
log
@[235113] alternative parser access, step 1: introduce separate entity into genmodel to keep track of attributes related to parsing
@
text
@a31 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getParser <em>Parser</em>}</li>
a204 26
	/**
	 * Returns the value of the '<em><b>Parser</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Parser</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Parser</em>' reference.
	 * @@see #setParser(GenParserImplementation)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_Parser()
	 * @@model required="true"
	 * @@generated
	 */
	GenParserImplementation getParser();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getParser <em>Parser</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Parser</em>' reference.
	 * @@see #getParser()
	 * @@generated
	 */
	void setParser(GenParserImplementation value);

@


1.10
log
@[231322] allow to specify editable features
@
text
@d32 1
d136 1
a136 1
	 * @@model
d190 1
a190 1
	 * @@model
d206 26
@


1.9
log
@regenerate; add java expr accessor to the model
@
text
@d26 1
d57 16
@


1.8
log
@refactor message format parser; introduce editor pattern
@
text
@d50 1
a50 1
	 * @@model type="org.eclipse.emf.codegen.ecore.genmodel.GenFeature" required="true"
@


1.8.2.1
log
@regenerate; add java expr getter to model
@
text
@d50 1
a50 1
	 * @@model required="true"
@


1.7
log
@combine label text access methods
@
text
@d27 2
a29 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getEditPattern <em>Edit Pattern</em>}</li>
d81 25
d139 1
a139 1
	 * Pattern to produce text for inplace editor, depends on edit method; if not specified then viewPattern should be used
@


1.6
log
@additional methods to produce label text and parse user input
@
text
@d81 1
a81 1
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.LabelViewMethod}.
d89 2
a90 2
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelViewMethod
	 * @@see #setViewMethod(LabelViewMethod)
d95 1
a95 1
	LabelViewMethod getViewMethod();
d102 1
a102 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelViewMethod
d106 1
a106 1
	void setViewMethod(LabelViewMethod value);
d135 1
a135 1
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.LabelEditMethod}.
d143 2
a144 2
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelEditMethod
	 * @@see #setEditMethod(LabelEditMethod)
d149 1
a149 1
	LabelEditMethod getEditMethod();
d156 1
a156 1
	 * @@see org.eclipse.gmf.codegen.gmfgen.LabelEditMethod
d160 1
a160 1
	void setEditMethod(LabelEditMethod value);
@


1.5
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d27 1
d29 1
d59 1
a59 1
	 * Pattern for java.text.MessageFormat to produce label on diagram
d80 29
d113 1
a113 1
	 * Pattern for java.text.MessageFormat to produce text for inplace editor; if not specified then viewPattern should be used
d133 29
@


1.4
log
@#161380 simplify feature model facets
@
text
@d10 1
d50 1
a50 1
	EList getMetaFeatures();
@


1.3
log
@#130715 Use default label text defined in gmfgraph model
@
text
@d10 2
d18 1
a18 1
 * Model facet of label based on an EStructuralFeature
d24 1
d34 17
a50 1
public interface FeatureLabelModelFacet extends FeatureModelFacet, LabelModelFacet {
@


1.2
log
@#111949 Provide a possibility to invoke inplace for inner elements with empty name
@
text
@a21 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getDefaultText <em>Default Text</em>}</li>
a32 25
	 * Returns the value of the '<em><b>Default Text</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Default text that should be displayed when produced text is an empty string
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Default Text</em>' attribute.
	 * @@see #setDefaultText(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getFeatureLabelModelFacet_DefaultText()
	 * @@model
	 * @@generated
	 */
	String getDefaultText();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet#getDefaultText <em>Default Text</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Default Text</em>' attribute.
	 * @@see #getDefaultText()
	 * @@generated
	 */
	void setDefaultText(String value);

	/**
@


1.1
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@d22 1
d34 25
@

