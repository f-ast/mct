head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081015-1925:1.3
	v20081008-1925:1.3
	v20081001-1925:1.3
	v20080924-1925:1.3
	v20080917-1925:1.3
	v20080911-1728:1.3
	v20080910-1520:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20070202-0200:1.2
	v20061027-1200:1.2
	v20061020-1000:1.2
	v20061013-1330:1.2
	v20060919-0800:1.2
	v20060907-1100:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060824-1600:1.2
	v20060817-1500:1.2
	v20060728-0500:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060620-0400:1.2
	v20060616-1400:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-1300:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.10.18.14.21.41;	author dstadnik;	state dead;
branches;
next	1.2;

1.2
date	2006.02.03.12.38.15;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.30.18.26.46;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.3
log
@#161380 simplify feature model facets
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Composite Feature Model Facet</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.CompositeFeatureModelFacetImpl#getMetaFeatures <em>Meta Features</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class CompositeFeatureModelFacetImpl extends EObjectImpl implements CompositeFeatureModelFacet {
	/**
	 * The cached value of the '{@@link #getMetaFeatures() <em>Meta Features</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetaFeatures()
	 * @@generated
	 * @@ordered
	 */
	protected EList metaFeatures = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CompositeFeatureModelFacetImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getCompositeFeatureModelFacet();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList getMetaFeatures() {
		if (metaFeatures == null) {
			metaFeatures = new EObjectResolvingEList(GenFeature.class, this, GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__META_FEATURES);
		}
		return metaFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__META_FEATURES:
				return getMetaFeatures();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__META_FEATURES:
				getMetaFeatures().clear();
				getMetaFeatures().addAll((Collection)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__META_FEATURES:
				getMetaFeatures().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__META_FEATURES:
				return metaFeatures != null && !metaFeatures.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //CompositeFeatureModelFacetImpl
@


1.2
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@@


1.1
log
@#125729 Support labels based on multiple structural features
@
text
@a11 3

import org.eclipse.emf.common.notify.Notification;

a12 1

a13 2

import org.eclipse.emf.ecore.impl.ENotificationImpl;
a14 1

a15 1

a17 1
import org.eclipse.gmf.codegen.gmfgen.LabelModelFacet;
a25 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.CompositeFeatureModelFacetImpl#getViewPattern <em>View Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.CompositeFeatureModelFacetImpl#getEditPattern <em>Edit Pattern</em>}</li>
a33 40
	 * The default value of the '{@@link #getViewPattern() <em>View Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getViewPattern()
	 * @@generated
	 * @@ordered
	 */
	protected static final String VIEW_PATTERN_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getViewPattern() <em>View Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getViewPattern()
	 * @@generated
	 * @@ordered
	 */
	protected String viewPattern = VIEW_PATTERN_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditPattern() <em>Edit Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPattern()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_PATTERN_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditPattern() <em>Edit Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPattern()
	 * @@generated
	 * @@ordered
	 */
	protected String editPattern = EDIT_PATTERN_EDEFAULT;

	/**
a65 42
	public String getViewPattern() {
		return viewPattern;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setViewPattern(String newViewPattern) {
		String oldViewPattern = viewPattern;
		viewPattern = newViewPattern;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN, oldViewPattern, viewPattern));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditPattern() {
		return editPattern;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditPattern(String newEditPattern) {
		String oldEditPattern = editPattern;
		editPattern = newEditPattern;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN, oldEditPattern, editPattern));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a79 4
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN:
				return getViewPattern();
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN:
				return getEditPattern();
a92 6
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN:
				setViewPattern((String)newValue);
				return;
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN:
				setEditPattern((String)newValue);
				return;
a107 6
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN:
				setViewPattern(VIEW_PATTERN_EDEFAULT);
				return;
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN:
				setEditPattern(EDIT_PATTERN_EDEFAULT);
				return;
a121 4
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN:
				return VIEW_PATTERN_EDEFAULT == null ? viewPattern != null : !VIEW_PATTERN_EDEFAULT.equals(viewPattern);
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN:
				return EDIT_PATTERN_EDEFAULT == null ? editPattern != null : !EDIT_PATTERN_EDEFAULT.equals(editPattern);
a127 49
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
		if (baseClass == LabelModelFacet.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN: return GMFGenPackage.LABEL_MODEL_FACET__VIEW_PATTERN;
				case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN: return GMFGenPackage.LABEL_MODEL_FACET__EDIT_PATTERN;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
		if (baseClass == LabelModelFacet.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.LABEL_MODEL_FACET__VIEW_PATTERN: return GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN;
				case GMFGenPackage.LABEL_MODEL_FACET__EDIT_PATTERN: return GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (viewPattern: ");
		result.append(viewPattern);
		result.append(", editPattern: ");
		result.append(editPattern);
		result.append(')');
		return result.toString();
	}

@

