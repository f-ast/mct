head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081015-1925:1.3
	v20081008-1925:1.3
	v20081001-1925:1.3
	v20080924-1925:1.3
	v20080917-1925:1.3
	v20080911-1728:1.3
	v20080910-1520:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080806-1520:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060202-1415:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.04.11.12.51.52;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.02.15.18.59.31;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.10.16.16.58;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Move GIFEmitter to common plug-in to reuse in pure-gef codegen
@
text
@/**
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    vano - initial API and implementation
 */
package org.eclipse.gmf.codegen.util;

import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;

import org.eclipse.emf.codegen.jet.JETCompiler;
import org.eclipse.emf.codegen.jet.JETException;


public class GIFEmitter {
	
	private String myLocation;

	public GIFEmitter(String location) {
		myLocation = location;
	}
	
	public byte[] generateGif() throws JETException {
		ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
		try {
			InputStream is = new BufferedInputStream(JETCompiler.openStream(myLocation));
			for (int next = is.read(); next != -1; next = is.read()) {
				outputStream.write(next);
			}
			is.close();
		} catch (IOException e) {
			throw new JETException(e);
		}
		return outputStream.toByteArray();
	}

}
@


1.2
log
@#125175 Allow toolsmith to use different (sub)set of templates for editor code generation
@
text
@@


1.1
log
@As a part of implementstion
#114178,114179
"Shortcutting" diagram elements.
@
text
@a17 1
import java.net.URL;
d19 2
a20 1
import org.osgi.framework.Bundle;
d25 1
a25 2
	private String myInputFile;
	private Bundle myTemplatesBundle;
d27 2
a28 3
	public GIFEmitter(String fileName, Bundle templatesBundle) {
		myInputFile = fileName;
		myTemplatesBundle = templatesBundle;
d31 1
a31 1
	public byte[] generateGif() {
d34 1
a34 2
			URL url = myTemplatesBundle.getEntry(myInputFile);
			InputStream is = new BufferedInputStream(url.openStream());
d40 2
a41 2
			e.printStackTrace();
		}			
@

