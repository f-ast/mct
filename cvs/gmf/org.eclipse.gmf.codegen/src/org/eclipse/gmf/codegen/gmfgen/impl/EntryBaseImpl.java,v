head	1.9;
access;
symbols
	v20081022-1925:1.9
	v20081015-1925:1.9
	v20081008-1925:1.9
	v20081001-1925:1.9
	v20080930-1130:1.9
	v20080926-1245:1.9
	v20080924-1925:1.9
	v20080917-1925:1.9
	v20080911-1728:1.9
	v20080910-1520:1.9
	v20080903-1520:1.9
	v20080827-1520:1.9
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080722-1827:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.4
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080528-1052:1.9
	v20080521:1.9
	v20080516-1543:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080508-2000:1.9
	v20080507-1326:1.9
	v20080503-1740:1.9
	v20080501-1739:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080411-0411:1.9
	v20080404-1111:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080207-0207:1.9
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070928-0000:1.9
	v20070921-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070405-1100:1.9
	v20070403-1500:1.9
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070307-0700:1.8
	v20070301-1200:1.8
	v20070228-2000:1.8
	v20070221-1500:1.8
	v20070208-1800:1.8
	v20070202-0200:1.6
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	v20061120-1300:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061027-1200:1.6
	v20061020-1000:1.6
	v20061013-1330:1.6
	v20060919-0800:1.6
	v20060907-1100:1.6
	M1_20:1.6
	v20060904-1500:1.6
	v20060824-1600:1.6
	v20060817-1500:1.6
	v20060728-0500:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060620-0400:1.6
	v20060616-1400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-1300:1.6
	v20060519-0800:1.6
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2007.03.14.14.39.34;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	444245f8090b4567;

1.8
date	2007.01.09.19.40.37;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	4c2945a3efaf4567;

1.7
date	2006.11.16.13.31.32;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	5510455c68334567;

1.6
date	2006.04.19.19.42.26;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.19.14.59.29;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.18.18.35.10;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.05.17.30.29;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.13.17.11.22;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.28;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.gmf.codegen.gmfgen.EntryBase;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entry Base</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getTitle <em>Title</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getDescription <em>Description</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getLargeIconPath <em>Large Icon Path</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getSmallIconPath <em>Small Icon Path</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getCreateMethodName <em>Create Method Name</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public abstract class EntryBaseImpl extends EObjectImpl implements EntryBase {
	/**
	 * The default value of the '{@@link #getTitle() <em>Title</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTitle()
	 * @@generated
	 * @@ordered
	 */
	protected static final String TITLE_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getTitle() <em>Title</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTitle()
	 * @@generated
	 * @@ordered
	 */
	protected String title = TITLE_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDescription() <em>Description</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDescription()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DESCRIPTION_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDescription() <em>Description</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDescription()
	 * @@generated
	 * @@ordered
	 */
	protected String description = DESCRIPTION_EDEFAULT;

	/**
	 * The default value of the '{@@link #getLargeIconPath() <em>Large Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLargeIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LARGE_ICON_PATH_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getLargeIconPath() <em>Large Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLargeIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected String largeIconPath = LARGE_ICON_PATH_EDEFAULT;

	/**
	 * The default value of the '{@@link #getSmallIconPath() <em>Small Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSmallIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SMALL_ICON_PATH_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getSmallIconPath() <em>Small Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSmallIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected String smallIconPath = SMALL_ICON_PATH_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreateMethodName() <em>Create Method Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateMethodName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATE_METHOD_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreateMethodName() <em>Create Method Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateMethodName()
	 * @@generated
	 * @@ordered
	 */
	protected String createMethodName = CREATE_METHOD_NAME_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EntryBaseImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getEntryBase();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getTitle() {
		return title;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTitle(String newTitle) {
		String oldTitle = title;
		title = newTitle;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__TITLE, oldTitle, title));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDescription(String newDescription) {
		String oldDescription = description;
		description = newDescription;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__DESCRIPTION, oldDescription, description));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLargeIconPath() {
		return largeIconPath;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLargeIconPath(String newLargeIconPath) {
		String oldLargeIconPath = largeIconPath;
		largeIconPath = newLargeIconPath;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__LARGE_ICON_PATH, oldLargeIconPath, largeIconPath));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getSmallIconPath() {
		return smallIconPath;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSmallIconPath(String newSmallIconPath) {
		String oldSmallIconPath = smallIconPath;
		smallIconPath = newSmallIconPath;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__SMALL_ICON_PATH, oldSmallIconPath, smallIconPath));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreateMethodNameGen() {
		return createMethodName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreateMethodName(String newCreateMethodName) {
		String oldCreateMethodName = createMethodName;
		createMethodName = newCreateMethodName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__CREATE_METHOD_NAME, oldCreateMethodName, createMethodName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.ENTRY_BASE__TITLE:
				return getTitle();
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION:
				return getDescription();
			case GMFGenPackage.ENTRY_BASE__LARGE_ICON_PATH:
				return getLargeIconPath();
			case GMFGenPackage.ENTRY_BASE__SMALL_ICON_PATH:
				return getSmallIconPath();
			case GMFGenPackage.ENTRY_BASE__CREATE_METHOD_NAME:
				return getCreateMethodName();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.ENTRY_BASE__TITLE:
				setTitle((String)newValue);
				return;
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION:
				setDescription((String)newValue);
				return;
			case GMFGenPackage.ENTRY_BASE__LARGE_ICON_PATH:
				setLargeIconPath((String)newValue);
				return;
			case GMFGenPackage.ENTRY_BASE__SMALL_ICON_PATH:
				setSmallIconPath((String)newValue);
				return;
			case GMFGenPackage.ENTRY_BASE__CREATE_METHOD_NAME:
				setCreateMethodName((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.ENTRY_BASE__TITLE:
				setTitle(TITLE_EDEFAULT);
				return;
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION:
				setDescription(DESCRIPTION_EDEFAULT);
				return;
			case GMFGenPackage.ENTRY_BASE__LARGE_ICON_PATH:
				setLargeIconPath(LARGE_ICON_PATH_EDEFAULT);
				return;
			case GMFGenPackage.ENTRY_BASE__SMALL_ICON_PATH:
				setSmallIconPath(SMALL_ICON_PATH_EDEFAULT);
				return;
			case GMFGenPackage.ENTRY_BASE__CREATE_METHOD_NAME:
				setCreateMethodName(CREATE_METHOD_NAME_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.ENTRY_BASE__TITLE:
				return TITLE_EDEFAULT == null ? title != null : !TITLE_EDEFAULT.equals(title);
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION:
				return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
			case GMFGenPackage.ENTRY_BASE__LARGE_ICON_PATH:
				return LARGE_ICON_PATH_EDEFAULT == null ? largeIconPath != null : !LARGE_ICON_PATH_EDEFAULT.equals(largeIconPath);
			case GMFGenPackage.ENTRY_BASE__SMALL_ICON_PATH:
				return SMALL_ICON_PATH_EDEFAULT == null ? smallIconPath != null : !SMALL_ICON_PATH_EDEFAULT.equals(smallIconPath);
			case GMFGenPackage.ENTRY_BASE__CREATE_METHOD_NAME:
				return CREATE_METHOD_NAME_EDEFAULT == null ? createMethodName != null : !CREATE_METHOD_NAME_EDEFAULT.equals(createMethodName);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (title: ");
		result.append(title);
		result.append(", description: ");
		result.append(description);
		result.append(", largeIconPath: ");
		result.append(largeIconPath);
		result.append(", smallIconPath: ");
		result.append(smallIconPath);
		result.append(", createMethodName: ");
		result.append(createMethodName);
		result.append(')');
		return result.toString();
	}

	/**
	 * @@return index of this entry in the parent container
	 */
	protected final int getEntryID() {
		EReference r = eContainmentFeature();
		if (r != null) {
			if (eContainer().eGet(r) instanceof EList) {
				return 1 + ((EList<?>) eContainer().eGet(r)).indexOf(this);
			}
			return 1;
		}
		return hashCode();
	}
} //EntryBaseImpl
@


1.8
log
@getIntKey operation is implemented as an extension now
@
text
@d150 1
d265 1
d287 1
d314 1
d341 1
d363 1
d389 1
a389 1
				return 1 + ((EList) eContainer().eGet(r)).indexOf(this);
@


1.7
log
@[162552] - Tool descriptions that contain special characters yield uncompilable code
Refactored to use externalized strings instead (for now from plugin.xml, may later switch to new nls bundles)
@
text
@a388 14

	public String getIntKey() {
		String createMethodName = getCreateMethodName();
		createMethodName = stripPrefix("create", createMethodName);
		createMethodName = stripPrefix("get", createMethodName);
		return createMethodName;
	}

	private static String stripPrefix(String prefix, String from) {
		if (from.startsWith(prefix) && from.length() > prefix.length()) {
			return from.substring(prefix.length());
		}
		return from;
	}
@


1.6
log
@#131270 Duplicated tool entries when same tool definition is referenced from gmfmap.
@
text
@d389 14
@


1.5
log
@#124466
entryID attribute introduced to avoid duplicate names generation
@
text
@d10 1
d12 1
d25 2
a26 3
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getOrder <em>Order</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getTitleKey <em>Title Key</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getDescriptionKey <em>Description Key</em>}</li>
a29 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.EntryBaseImpl#getEntryID <em>Entry ID</em>}</li>
d37 1
a37 1
	 * The default value of the '{@@link #getOrder() <em>Order</em>}' attribute.
d40 1
a40 1
	 * @@see #getOrder()
d44 1
a44 1
	protected static final int ORDER_EDEFAULT = 0;
d47 1
a47 1
	 * The cached value of the '{@@link #getOrder() <em>Order</em>}' attribute.
d50 1
a50 1
	 * @@see #getOrder()
d54 1
a54 1
	protected int order = ORDER_EDEFAULT;
d57 1
a57 1
	 * The default value of the '{@@link #getTitleKey() <em>Title Key</em>}' attribute.
d60 1
a60 1
	 * @@see #getTitleKey()
d64 1
a64 1
	protected static final String TITLE_KEY_EDEFAULT = null;
d67 1
a67 1
	 * The cached value of the '{@@link #getTitleKey() <em>Title Key</em>}' attribute.
d70 1
a70 1
	 * @@see #getTitleKey()
d74 1
a74 21
	protected String titleKey = TITLE_KEY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDescriptionKey() <em>Description Key</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDescriptionKey()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DESCRIPTION_KEY_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDescriptionKey() <em>Description Key</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDescriptionKey()
	 * @@generated
	 * @@ordered
	 */
	protected String descriptionKey = DESCRIPTION_KEY_EDEFAULT;
a136 20
	 * The default value of the '{@@link #getEntryID() <em>Entry ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEntryID()
	 * @@generated
	 * @@ordered
	 */
	protected static final int ENTRY_ID_EDEFAULT = 0;

	/**
	 * The cached value of the '{@@link #getEntryID() <em>Entry ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEntryID()
	 * @@generated
	 * @@ordered
	 */
	protected int entryID = ENTRY_ID_EDEFAULT;

	/**
d159 2
a160 14
	public int getOrder() {
		return order;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setOrder(int newOrder) {
		int oldOrder = order;
		order = newOrder;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__ORDER, oldOrder, order));
d168 3
a170 12
	public String getTitleKey() {
		return titleKey;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTitleKey(String newTitleKey) {
		String oldTitleKey = titleKey;
		titleKey = newTitleKey;
d172 1
a172 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__TITLE_KEY, oldTitleKey, titleKey));
d180 2
a181 2
	public String getDescriptionKey() {
		return descriptionKey;
d189 3
a191 3
	public void setDescriptionKey(String newDescriptionKey) {
		String oldDescriptionKey = descriptionKey;
		descriptionKey = newDescriptionKey;
d193 1
a193 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__DESCRIPTION_KEY, oldDescriptionKey, descriptionKey));
a263 21
	public int getEntryID() {
		return entryID;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEntryID(int newEntryID) {
		int oldEntryID = entryID;
		entryID = newEntryID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.ENTRY_BASE__ENTRY_ID, oldEntryID, entryID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d266 4
a269 6
			case GMFGenPackage.ENTRY_BASE__ORDER:
				return new Integer(getOrder());
			case GMFGenPackage.ENTRY_BASE__TITLE_KEY:
				return getTitleKey();
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION_KEY:
				return getDescriptionKey();
a275 2
			case GMFGenPackage.ENTRY_BASE__ENTRY_ID:
				return new Integer(getEntryID());
d287 2
a288 2
			case GMFGenPackage.ENTRY_BASE__ORDER:
				setOrder(((Integer)newValue).intValue());
d290 2
a291 5
			case GMFGenPackage.ENTRY_BASE__TITLE_KEY:
				setTitleKey((String)newValue);
				return;
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION_KEY:
				setDescriptionKey((String)newValue);
a301 3
			case GMFGenPackage.ENTRY_BASE__ENTRY_ID:
				setEntryID(((Integer)newValue).intValue());
				return;
d313 2
a314 2
			case GMFGenPackage.ENTRY_BASE__ORDER:
				setOrder(ORDER_EDEFAULT);
d316 2
a317 5
			case GMFGenPackage.ENTRY_BASE__TITLE_KEY:
				setTitleKey(TITLE_KEY_EDEFAULT);
				return;
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION_KEY:
				setDescriptionKey(DESCRIPTION_KEY_EDEFAULT);
a327 3
			case GMFGenPackage.ENTRY_BASE__ENTRY_ID:
				setEntryID(ENTRY_ID_EDEFAULT);
				return;
d339 4
a342 6
			case GMFGenPackage.ENTRY_BASE__ORDER:
				return order != ORDER_EDEFAULT;
			case GMFGenPackage.ENTRY_BASE__TITLE_KEY:
				return TITLE_KEY_EDEFAULT == null ? titleKey != null : !TITLE_KEY_EDEFAULT.equals(titleKey);
			case GMFGenPackage.ENTRY_BASE__DESCRIPTION_KEY:
				return DESCRIPTION_KEY_EDEFAULT == null ? descriptionKey != null : !DESCRIPTION_KEY_EDEFAULT.equals(descriptionKey);
a348 2
			case GMFGenPackage.ENTRY_BASE__ENTRY_ID:
				return entryID != ENTRY_ID_EDEFAULT;
d362 4
a365 6
		result.append(" (order: ");
		result.append(order);
		result.append(", titleKey: ");
		result.append(titleKey);
		result.append(", descriptionKey: ");
		result.append(descriptionKey);
a371 2
		result.append(", entryID: ");
		result.append(entryID);
d376 13
@


1.4
log
@simplify naming strategy - it's sufficient to generate method names on the fly
@
text
@d29 1
d157 20
d325 21
d360 2
d391 3
d423 3
d449 2
d476 2
@


1.3
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d283 1
a283 1
	public String getCreateMethodName() {
@


1.2
log
@#120553
- Adding accessors for the palette entries factory methods into genmodel
- Refreshing unit-tests
- Fixing some old problems found by this refreshment.
@
text
@a10 1
import org.eclipse.emf.ecore.EStructuralFeature;
d304 2
a305 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d319 1
a319 1
		return eDynamicGet(eFeature, resolve);
d327 2
a328 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d348 1
a348 1
		eDynamicSet(eFeature, newValue);
d356 2
a357 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d377 1
a377 1
		eDynamicUnset(eFeature);
d385 2
a386 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d400 1
a400 1
		return eDynamicIsSet(eFeature);
@


1.1
log
@*** empty log message ***
@
text
@d29 1
d137 20
d284 21
d317 2
d345 3
d374 3
d398 2
d423 2
@

