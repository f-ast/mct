head	1.9;
access;
symbols
	v20081022-1925:1.9
	v20081015-1925:1.9
	v20081008-1925:1.9
	v20081001-1925:1.9
	v20080930-1130:1.9
	v20080926-1245:1.9
	v20080924-1925:1.9
	v20080917-1925:1.9
	v20080911-1728:1.9
	v20080910-1520:1.9
	v20080903-1520:1.9
	v20080827-1520:1.9
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080722-1827:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080528-1052:1.9
	v20080521:1.9
	v20080516-1543:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080508-2000:1.9
	v20080507-1326:1.9
	v20080503-1740:1.9
	v20080501-1739:1.9
	v20080425-1959:1.9
	v20080417-1610:1.8
	v20080411-0411:1.8
	v20080404-1111:1.8
	v20080322-0000:1.8
	v20080222-1200:1.7
	v20080215-1500:1.7
	v20080207-0207:1.6.2.1
	v20071222-1111:1.7
	v20071214-1111:1.7
	v20071130-1111:1.7
	v20071124-0000:1.6.2.1
	v20071112-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.7
	v20070928-0000:1.6.2.1
	v20070921-0000:1.6.2.1
	v20070915-0000:1.6.2.1
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.6
	v20070518-1300:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070405-1100:1.6
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-1300:1.4
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2008.04.18.14.43.20;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	2e1d4808b3814567;

1.8
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	5e5047cd7dd64567;

1.7
date	2007.09.07.18.16.49;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	5d1f46e195874567;

1.6
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches
	1.6.2.1;
next	1.5;
commitid	444245f8090b4567;

1.5
date	2007.02.08.18.06.49;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	56b45cb66aa4567;

1.4
date	2006.04.20.19.36.27;	author radvorak;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.24.20.23.26;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.20.53.19;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.10.12.51.22;	author atikhomirov;	state Exp;
branches;
next	;

1.6.2.1
date	2007.09.07.18.10.36;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.9
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Audit Container</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Represents constraint category of emft.validation framework
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getRoot <em>Root</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getId <em>Id</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getName <em>Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getDescription <em>Description</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getPath <em>Path</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getAudits <em>Audits</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer()
 * @@model
 * @@generated
 */
public interface GenAuditContainer extends EObject {
	/**
	 * Returns the value of the '<em><b>Root</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getCategories <em>Categories</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Root</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Root</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Root()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getCategories
	 * @@model opposite="categories" resolveProxies="false" required="true" transient="false" changeable="false"
	 * @@generated
	 */
	GenAuditRoot getRoot();

	/**
	 * Returns the value of the '<em><b>Id</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Id</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Identifier which is unique within the scope of its parent container.
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Id</em>' attribute.
	 * @@see #setId(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Id()
	 * @@model required="true"
	 * @@generated
	 */
	String getId();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getId <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Id</em>' attribute.
	 * @@see #getId()
	 * @@generated
	 */
	void setId(String value);

	/**
	 * Returns the value of the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * A human readable name for the category of audits organized in this container
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Name</em>' attribute.
	 * @@see #setName(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Name()
	 * @@model
	 * @@generated
	 */
	String getName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getName <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Name</em>' attribute.
	 * @@see #getName()
	 * @@generated
	 */
	void setName(String value);

	/**
	 * Returns the value of the '<em><b>Description</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * The detailed description of this audit container
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Description</em>' attribute.
	 * @@see #setDescription(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Description()
	 * @@model
	 * @@generated
	 */
	String getDescription();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getDescription <em>Description</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Description</em>' attribute.
	 * @@see #getDescription()
	 * @@generated
	 */
	void setDescription(String value);

	/**
	 * Returns the value of the '<em><b>Path</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Hierarchical path of this audit container as ordered list of containers beginning with the root and ended with this container
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Path</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Path()
	 * @@model required="true"
	 * @@generated
	 */
	EList<GenAuditContainer> getPath();

	/**
	 * Returns the value of the '<em><b>Audits</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory <em>Category</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Audits</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Audits</em>' reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Audits()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory
	 * @@model opposite="category"
	 * @@generated
	 */
	EList<GenAuditRule> getAudits();

} // GenAuditContainer
@


1.8
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d51 1
a51 1
	 * @@model opposite="categories" resolveProxies="false" required="true" transient="false" suppressedSetVisibility="true"
@


1.7
log
@regenerate; add java expr accessor to the model
@
text
@d51 1
a51 1
	 * @@model opposite="categories" required="true" transient="false" changeable="false"
@


1.6
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d51 1
a51 1
	 * @@model opposite="categories" required="true" changeable="false"
d149 1
a149 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" required="true"
d167 1
a167 1
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule" opposite="category"
@


1.6.2.1
log
@regenerate; add java expr getter to model
@
text
@d51 1
a51 1
	 * @@model opposite="categories" required="true" transient="false" changeable="false"
d149 1
a149 1
	 * @@model required="true"
d167 1
a167 1
	 * @@model opposite="category"
@


1.5
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d152 1
a152 1
	EList getPath();
d170 1
a170 1
	EList getAudits();
@


1.4
log
@#136672 use common expression accessor with audits
@
text
@d9 1
a9 2
import java.util.List;
import java.util.Map;
d11 1
a11 1
import org.eclipse.emf.common.util.EList;
d19 1
a19 1
 * Container for audit rules representing a hierarchical organization of audits in the constraint category hierarchy of emft.validation framework
d25 1
d29 1
a29 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}</li>
a30 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers <em>Child Containers</em>}</li>
d38 1
a38 1
public interface GenAuditContainer extends GenRuleContainerBase {
d40 2
a41 3
	 * Returns the value of the '<em><b>Audits</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer <em>Container</em>}'.
d44 1
a44 1
	 * If the meaning of the '<em>Audits</em>' container reference list isn't clear,
d48 4
a51 7
	 * <!-- begin-model-doc -->
	 * The audit rules organized in this container
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Audits</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Audits()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule" opposite="container" containment="true"
d54 1
a54 19
	EList getAudits();

	/**
	 * Returns the value of the '<em><b>Child Containers</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Child Containers</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Child Containers</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_ChildContainers()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer
	 * @@model type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" opposite="parentContainer" containment="true"
	 * @@generated
	 */
	EList getChildContainers();
d140 2
a141 39
	 * Returns the value of the '<em><b>Parent Container</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers <em>Child Containers</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Parent Container</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Parent Container</em>' container reference.
	 * @@see #setParentContainer(GenAuditContainer)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_ParentContainer()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers
	 * @@model opposite="childContainers"
	 * @@generated
	 */
	GenAuditContainer getParentContainer();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Parent Container</em>' container reference.
	 * @@see #getParentContainer()
	 * @@generated
	 */
	void setParentContainer(GenAuditContainer value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Gets all audit rules from this audit container hierarchy recursively
	 * <!-- end-model-doc -->
	 * @@model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule"
	 * @@generated
	 */
	EList getAllAuditRules();

	/**
d145 1
a145 1
	 * Gets all audit containers from this audit container hierarchy recursively
d147 3
a149 12
	 * @@model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer"
	 * @@generated
	 */
	EList getAllAuditContainers();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Gets hierarchical path of this audit container as ordered list of containers beginning with the root and ended with this container
	 * <!-- end-model-doc -->
	 * @@model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" required="true"
d155 3
d159 4
d164 4
a167 4
	 * <!-- begin-model-doc -->
	 * Maps all rules in the container hierarchy to client context IDs of their target contexts. key: (context ID of rule target) value: (EList<GenAuditRule>)
	 * <!-- end-model-doc -->
	 * @@model kind="operation" required="true"
d170 1
a170 23
	Map getAllRulesToTargetContextMap();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Gets all model packages to which rules in this container hierarchy are targeted. Checks rules recursively.
	 * <!-- end-model-doc -->
	 * @@model kind="operation" type="org.eclipse.emf.codegen.ecore.genmodel.GenPackage"
	 * @@generated
	 */
	EList getAllTargetedModelPackages();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Indicates whether this container hierarchy contains at least 1 rule targeted on notation elements. Checks recursively.
	 * <!-- end-model-doc -->
	 * @@model
	 * @@generated
	 */
	boolean hasDiagramElementRule();
a171 3
	List/*String*/ getAllContextSelectorsLocalClassNames();
	List/*String*/ getAllRequiredConstraintAdaptersLocalClassNames();
	List/*GenAuditRule*/ getAllJavaLangAudits();
@


1.3
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@d9 1
d256 3
@


1.2
log
@[rdvorak] #123656 Added message and description to audit rule
@
text
@d9 2
a12 2
import org.eclipse.emf.ecore.EObject;

d38 1
a38 1
public interface GenAuditContainer extends EObject {
d222 33
@


1.1
log
@[rdvorak] #123232 audits (ocl constraints) definition in genmodel
@
text
@d27 1
d137 25
@

