head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080930-1130:1.4
	v20080926-1245:1.4
	v20080924-1925:1.4
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	v20080722-1827:1.2
	v20080718-1731:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.2
	v20080528-1052:1.2
	v20080521:1.2
	v20080516-1543:1.2
	v20080516-1143:1.2
	v20080512-1200:1.2
	v20080508-2000:1.2
	v20080507-1326:1.2
	v20080503-1740:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080411-0411:1.2
	v20080404-1111:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20080207-0207:1.2
	v20071222-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071112-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070928-0000:1.2
	v20070921-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070614-1400:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070520-1200:1.2
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.1
	v20070301-1200:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2008.09.23.15.25.23;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	2807248d90a634567;

1.3
date	2008.09.23.14.54.39;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	2569e48d903244567;

1.2
date	2007.03.14.14.39.34;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	444245f8090b4567;

1.1
date	2006.12.21.17.14.28;	author dstadnik;	state Exp;
branches;
next	;
commitid	710b458ac0ed4567;


desc
@@


1.4
log
@[174961] Code generation support for custom actions, test passed
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenApplication;
import org.eclipse.gmf.codegen.gmfgen.GenContributionItem;
import org.eclipse.gmf.codegen.gmfgen.GenContributionManager;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
import org.eclipse.gmf.codegen.gmfgen.GenToolBarManager;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Tool Bar Manager</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenToolBarManagerImpl#getOwner <em>Owner</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenToolBarManagerImpl extends GenContributionManagerImpl implements GenToolBarManager {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenToolBarManagerImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenToolBarManager();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenContributionManager getOwner() {
		if (eContainerFeatureID != GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER) return null;
		return (GenContributionManager)eContainer();
	}

	@@Override
	public GenEditorGenerator getEditorGen() {
		if (getOwner() != null) {
			return getOwner().getEditorGen();
		}
		if (eContainer() instanceof GenEditorGenerator) {
			return (GenEditorGenerator) eContainer();
		}
		if (eContainer() instanceof GenApplication) {
			return ((GenApplication) eContainer()).getEditorGen();
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
				return eBasicSetContainer(null, GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS, GenContributionManager.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
				return getOwner();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
				return getOwner() != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == GenContributionItem.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER: return GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == GenContributionItem.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER: return GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

} //GenToolBarManagerImpl
@


1.3
log
@[174961] Code generation support for custom actions
@
text
@d13 1
d64 10
a73 1
		return getOwner() != null ? getOwner().getEditorGen() : (eContainer() instanceof GenEditorGenerator ? (GenEditorGenerator) eContainer() : null);
@


1.2
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d9 1
d11 1
a11 1

d13 3
d23 4
d51 119
@


1.1
log
@allow to specify ui contributions for rcp application in genmodel
@
text
@d38 1
@

