head	1.15;
access;
symbols
	v20081022-1925:1.15
	v20081015-1925:1.15
	v20081008-1925:1.15
	v20081001-1925:1.15
	v20080924-1925:1.15
	v20080917-1925:1.15
	v20080911-1728:1.15
	v20080910-1520:1.15
	v20080903-1520:1.15
	v20080827-1520:1.15
	v20080813-1520:1.15
	v20080806-1520:1.15
	R1_0_maintenance:1.15.0.2
	R1_0:1.15
	v20050828:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.15
date	2005.10.24.14.58.46;	author atikhomirov;	state dead;
branches;
next	1.14;

1.14
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.20.16.04.34;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.13.14.21.40;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.13.12.45.56;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.11.16.43.53;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.11.12.25.35;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.10.12.57.39;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.07.13.01.34;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.04.15.40.37;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.03.19.09.14;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.29.09.49.40;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.14.20.18.49;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.29;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.15
log
@[dstadnik] #113525 Get rid of LinkWithClass/LinkWithReference, use parallel hierarchy of modelFacet instead
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;
import org.eclipse.gmf.codegen.gmfgen.GenLinkWithClass;
import org.eclipse.gmf.codegen.gmfgen.ModelElementSelector;
import org.eclipse.gmf.codegen.gmfgen.Viewmap;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Link With Class</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkWithClassImpl#getDomainMetaClass <em>Domain Meta Class</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenLinkWithClassImpl extends GenLinkImpl implements GenLinkWithClass {
	/**
	 * The cached value of the '{@@link #getDomainMetaClass() <em>Domain Meta Class</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainMetaClass()
	 * @@generated
	 * @@ordered
	 */
	protected GenClass domainMetaClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLinkWithClassImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenLinkWithClass();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenClass getDomainMetaClass() {
		if (domainMetaClass != null && domainMetaClass.eIsProxy()) {
			GenClass oldDomainMetaClass = domainMetaClass;
			domainMetaClass = (GenClass)eResolveProxy((InternalEObject)domainMetaClass);
			if (domainMetaClass != oldDomainMetaClass) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_META_CLASS, oldDomainMetaClass, domainMetaClass));
			}
		}
		return domainMetaClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenClass basicGetDomainMetaClass() {
		return domainMetaClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainMetaClass(GenClass newDomainMetaClass) {
		GenClass oldDomainMetaClass = domainMetaClass;
		domainMetaClass = newDomainMetaClass;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_META_CLASS, oldDomainMetaClass, domainMetaClass));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_INITIALIZER:
					if (modelElementInitializer != null)
						msgs = ((InternalEObject)modelElementInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_INITIALIZER, null, msgs);
					return basicSetModelElementInitializer((GenElementInitializer)otherEnd, msgs);
				case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM, msgs);
				case GMFGenPackage.GEN_LINK_WITH_CLASS__LABELS:
					return ((InternalEList)getLabels()).basicAdd(otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
		}
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_LINK_WITH_CLASS__VIEWMAP:
					return basicSetViewmap(null, msgs);
				case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_SELECTOR:
					return basicSetModelElementSelector(null, msgs);
				case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_INITIALIZER:
					return basicSetModelElementInitializer(null, msgs);
				case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM:
					return eBasicSetContainer(null, GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM, msgs);
				case GMFGenPackage.GEN_LINK_WITH_CLASS__LABELS:
					return ((InternalEList)getLabels()).basicRemove(otherEnd, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
		}
		return eBasicSetContainer(null, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM:
					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__LINKS, GenDiagram.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
		}
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM_RUN_TIME_CLASS:
				if (resolve) return getDiagramRunTimeClass();
				return basicGetDiagramRunTimeClass();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VISUAL_ID:
				return new Integer(getVisualID());
			case GMFGenPackage.GEN_LINK_WITH_CLASS__EDIT_PART_CLASS_NAME:
				return getEditPartClassName();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return getNotationViewFactoryClassName();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VIEWMAP:
				return getViewmap();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_SELECTOR:
				return getModelElementSelector();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_INITIALIZER:
				return getModelElementInitializer();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM:
				return getDiagram();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_LINK_TARGET_FEATURE:
				if (resolve) return getDomainLinkTargetFeature();
				return basicGetDomainLinkTargetFeature();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LABELS:
				return getLabels();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_META_CLASS:
				if (resolve) return getDomainMetaClass();
				return basicGetDomainMetaClass();
		}
		return eDynamicGet(eFeature, resolve);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM_RUN_TIME_CLASS:
				setDiagramRunTimeClass((GenClass)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VISUAL_ID:
				setVisualID(((Integer)newValue).intValue());
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__EDIT_PART_CLASS_NAME:
				setEditPartClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VIEWMAP:
				setViewmap((Viewmap)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_SELECTOR:
				setModelElementSelector((ModelElementSelector)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_INITIALIZER:
				setModelElementInitializer((GenElementInitializer)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_LINK_TARGET_FEATURE:
				setDomainLinkTargetFeature((GenFeature)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LABELS:
				getLabels().clear();
				getLabels().addAll((Collection)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_META_CLASS:
				setDomainMetaClass((GenClass)newValue);
				return;
		}
		eDynamicSet(eFeature, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM_RUN_TIME_CLASS:
				setDiagramRunTimeClass((GenClass)null);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VISUAL_ID:
				setVisualID(VISUAL_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__EDIT_PART_CLASS_NAME:
				setEditPartClassName(EDIT_PART_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VIEWMAP:
				setViewmap((Viewmap)null);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_SELECTOR:
				setModelElementSelector((ModelElementSelector)null);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_INITIALIZER:
				setModelElementInitializer((GenElementInitializer)null);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_LINK_TARGET_FEATURE:
				setDomainLinkTargetFeature((GenFeature)null);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LABELS:
				getLabels().clear();
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_META_CLASS:
				setDomainMetaClass((GenClass)null);
				return;
		}
		eDynamicUnset(eFeature);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM_RUN_TIME_CLASS:
				return diagramRunTimeClass != null;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VISUAL_ID:
				return visualID != VISUAL_ID_EDEFAULT;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__EDIT_PART_CLASS_NAME:
				return EDIT_PART_CLASS_NAME_EDEFAULT == null ? editPartClassName != null : !EDIT_PART_CLASS_NAME_EDEFAULT.equals(editPartClassName);
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : !NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals(notationViewFactoryClassName);
			case GMFGenPackage.GEN_LINK_WITH_CLASS__VIEWMAP:
				return viewmap != null;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_SELECTOR:
				return modelElementSelector != null;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__MODEL_ELEMENT_INITIALIZER:
				return modelElementInitializer != null;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DIAGRAM:
				return getDiagram() != null;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_LINK_TARGET_FEATURE:
				return domainLinkTargetFeature != null;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LABELS:
				return labels != null && !labels.isEmpty();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_META_CLASS:
				return domainMetaClass != null;
		}
		return eDynamicIsSet(eFeature);
	}

	public String getClassNamePrefix() {
		return getDomainMetaClass() == null ? "GenLink$" + hashCode() : getDomainMetaClass().getName();
	}

	public String getClassNameSuffux() {
		return "Link";
	}
	
	public String getUniqueIdentifier() {
		return getDomainMetaClass().getInterfaceName() + "_" + getVisualID();
	}
	
} //GenLinkWithClassImpl
@


1.14
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@@


1.13
log
@[rdvorak] #113224 Generate custom initialization code for domain model elements
@
text
@a19 1

a191 6
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_NAME_FEATURE:
				if (resolve) return getDomainNameFeature();
				return basicGetDomainNameFeature();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__CONTAINMENT_META_FEATURE:
				if (resolve) return getContainmentMetaFeature();
				return basicGetContainmentMetaFeature();
a230 6
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_NAME_FEATURE:
				setDomainNameFeature((GenFeature)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__CONTAINMENT_META_FEATURE:
				setContainmentMetaFeature((GenFeature)newValue);
				return;
a272 6
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_NAME_FEATURE:
				setDomainNameFeature((GenFeature)null);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__CONTAINMENT_META_FEATURE:
				setContainmentMetaFeature((GenFeature)null);
				return;
a309 4
			case GMFGenPackage.GEN_LINK_WITH_CLASS__DOMAIN_NAME_FEATURE:
				return domainNameFeature != null;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__CONTAINMENT_META_FEATURE:
				return containmentMetaFeature != null;
@


1.12
log
@[ashatalin] #112122 Action to initialize diagram for domain model.
 unique id introduced, refactoring to use it throughout the code
@
text
@d23 1
d116 4
d147 2
d203 2
d250 3
d298 3
d337 2
@


1.11
log
@[rdvorak] #112097 genmodel support to use expression evaluation to choose editpart (visual representation)
@
text
@d341 5
@


1.10
log
@#111775 cleanup in gmfgen - unused attributes gone
@
text
@d24 1
d140 2
d194 2
d238 3
d283 3
d320 2
@


1.9
log
@#112191 colors as Viewmap's Attributes
@
text
@d181 2
a188 2
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return getNotationViewFactoryClassName();
d221 3
a229 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName((String)newValue);
				return;
d263 3
a271 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
				return;
d301 2
a306 2
			case GMFGenPackage.GEN_LINK_WITH_CLASS__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : !NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals(notationViewFactoryClassName);
@


1.8
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@a183 2
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FOREGROUND_COLOR:
				return getForegroundColor();
a223 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FOREGROUND_COLOR:
				setForegroundColor((String)newValue);
				return;
a265 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FOREGROUND_COLOR:
				setForegroundColor(FOREGROUND_COLOR_EDEFAULT);
				return;
a302 2
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FOREGROUND_COLOR:
				return FOREGROUND_COLOR_EDEFAULT == null ? foregroundColor != null : !FOREGROUND_COLOR_EDEFAULT.equals(foregroundColor);
@


1.7
log
@#111775 stale properties in gmfgen
#111784 GenChildContainer extends GenCommonBase
@
text
@d9 2
d19 2
d118 2
d141 2
d198 2
d241 4
d286 3
d323 2
@


1.6
log
@[dstadnik]
#111455 Generate consistent names for notation view factories
#111461 Do not use 'final' keyword in method parameters
#111460 Generate dedicated edit part for the node label
#111457 Use model labels in palette factory
@
text
@a172 2
			case GMFGenPackage.GEN_LINK_WITH_CLASS__META_INFO_PROVIDER_CLASS_NAME:
				return getMetaInfoProviderClassName();
a212 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__META_INFO_PROVIDER_CLASS_NAME:
				setMetaInfoProviderClassName((String)newValue);
				return;
a253 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__META_INFO_PROVIDER_CLASS_NAME:
				setMetaInfoProviderClassName(META_INFO_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
a291 2
			case GMFGenPackage.GEN_LINK_WITH_CLASS__META_INFO_PROVIDER_CLASS_NAME:
				return META_INFO_PROVIDER_CLASS_NAME_EDEFAULT == null ? metaInfoProviderClassName != null : !META_INFO_PROVIDER_CLASS_NAME_EDEFAULT.equals(metaInfoProviderClassName);
@


1.5
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@a101 4
	protected String getDefaultNotationViewFactoryClassName() {
		return getDomainMetaClass().getName() + "ViewFactory"; //$NON-NLS-1$
	}

@


1.4
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d10 1
a12 1
import org.eclipse.emf.ecore.EAttribute;
a13 1
import org.eclipse.emf.ecore.EReference;
a19 1

d44 1
a44 1
	protected EClass domainMetaClass = null;
d69 1
a69 1
	public EClass getDomainMetaClass() {
d71 2
a72 2
			EClass oldDomainMetaClass = domainMetaClass;
			domainMetaClass = (EClass)eResolveProxy((InternalEObject)domainMetaClass);
d86 1
a86 1
	public EClass basicGetDomainMetaClass() {
d95 2
a96 2
	public void setDomainMetaClass(EClass newDomainMetaClass) {
		EClass oldDomainMetaClass = domainMetaClass;
a101 9
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public void initialize(EClass eClass) {
		setDomainMetaClass(eClass);
	}

d223 1
a223 1
				setDomainNameFeature((EAttribute)newValue);
d229 1
a229 1
				setContainmentMetaFeature((EReference)newValue);
d238 1
a238 1
				setDomainLinkTargetFeature((EStructuralFeature)newValue);
d241 1
a241 1
				setDomainMetaClass((EClass)newValue);
d267 1
a267 1
				setDomainNameFeature((EAttribute)null);
d273 1
a273 1
				setContainmentMetaFeature((EReference)null);
d282 1
a282 1
				setDomainLinkTargetFeature((EStructuralFeature)null);
d285 1
a285 1
				setDomainMetaClass((EClass)null);
@


1.3
log
@[dstadnik] Use Notation Model as runtime model
@
text
@d22 2
d146 2
d200 2
a206 8
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINE_STYLE:
				return getLineStyle();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FIGURE_QUALIFIED_CLASS_NAME:
				return getFigureQualifiedClassName();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return getSourceDecorationFigureQualifiedClassName();
			case GMFGenPackage.GEN_LINK_WITH_CLASS__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return getTargetDecorationFigureQualifiedClassName();
d245 3
a250 12
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINE_STYLE:
				setLineStyle((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FIGURE_QUALIFIED_CLASS_NAME:
				setFigureQualifiedClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setSourceDecorationFigureQualifiedClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setTargetDecorationFigureQualifiedClassName((String)newValue);
				return;
d289 3
a294 12
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINE_STYLE:
				setLineStyle(LINE_STYLE_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FIGURE_QUALIFIED_CLASS_NAME:
				setFigureQualifiedClassName(FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setSourceDecorationFigureQualifiedClassName(SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK_WITH_CLASS__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setTargetDecorationFigureQualifiedClassName(TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT);
				return;
d325 2
a330 8
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINE_STYLE:
				return LINE_STYLE_EDEFAULT == null ? lineStyle != null : !LINE_STYLE_EDEFAULT.equals(lineStyle);
			case GMFGenPackage.GEN_LINK_WITH_CLASS__FIGURE_QUALIFIED_CLASS_NAME:
				return FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT == null ? figureQualifiedClassName != null : !FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT.equals(figureQualifiedClassName);
			case GMFGenPackage.GEN_LINK_WITH_CLASS__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT == null ? sourceDecorationFigureQualifiedClassName != null : !SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT.equals(sourceDecorationFigureQualifiedClassName);
			case GMFGenPackage.GEN_LINK_WITH_CLASS__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT == null ? targetDecorationFigureQualifiedClassName != null : !TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT.equals(targetDecorationFigureQualifiedClassName);
@


1.2
log
@duplicated containment meta feature in genLink was removed
@
text
@d111 4
d194 2
d244 3
d297 3
d343 2
@


1.1
log
@*** empty log message ***
@
text
@a29 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkWithClassImpl#getLinkContainerFeature <em>Link Container Feature</em>}</li>
a46 10
	 * The cached value of the '{@@link #getLinkContainerFeature() <em>Link Container Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkContainerFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EStructuralFeature linkContainerFeature = null;

	/**
a104 38
	 * @@generated
	 */
	public EStructuralFeature getLinkContainerFeature() {
		if (linkContainerFeature != null && linkContainerFeature.eIsProxy()) {
			EStructuralFeature oldLinkContainerFeature = linkContainerFeature;
			linkContainerFeature = (EStructuralFeature)eResolveProxy((InternalEObject)linkContainerFeature);
			if (linkContainerFeature != oldLinkContainerFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_LINK_WITH_CLASS__LINK_CONTAINER_FEATURE, oldLinkContainerFeature, linkContainerFeature));
			}
		}
		return linkContainerFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EStructuralFeature basicGetLinkContainerFeature() {
		return linkContainerFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLinkContainerFeature(EStructuralFeature newLinkContainerFeature) {
		EStructuralFeature oldLinkContainerFeature = linkContainerFeature;
		linkContainerFeature = newLinkContainerFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_WITH_CLASS__LINK_CONTAINER_FEATURE, oldLinkContainerFeature, linkContainerFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
a205 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINK_CONTAINER_FEATURE:
				if (resolve) return getLinkContainerFeature();
				return basicGetLinkContainerFeature();
a255 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINK_CONTAINER_FEATURE:
				setLinkContainerFeature((EStructuralFeature)newValue);
				return;
a305 3
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINK_CONTAINER_FEATURE:
				setLinkContainerFeature((EStructuralFeature)null);
				return;
a344 2
			case GMFGenPackage.GEN_LINK_WITH_CLASS__LINK_CONTAINER_FEATURE:
				return linkContainerFeature != null;
@

