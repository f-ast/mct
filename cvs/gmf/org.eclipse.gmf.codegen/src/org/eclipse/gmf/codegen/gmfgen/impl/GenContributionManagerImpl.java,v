head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20080722-1827:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080528-1052:1.4
	v20080521:1.4
	v20080516-1543:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080508-2000:1.4
	v20080507-1326:1.4
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080411-0411:1.4
	v20080404-1111:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.4
	v20071222-1111:1.4
	v20071214-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071112-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070928-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2008.09.23.14.54.39;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	2569e48d903244567;

1.4
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	725b461c97d64567;

1.3
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	444245f8090b4567;

1.2
date	2007.01.24.21.05.02;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	6c1945b7c9f34567;

1.1
date	2006.12.21.17.14.28;	author dstadnik;	state Exp;
branches;
next	;
commitid	710b458ac0ed4567;


desc
@@


1.5
log
@[174961] Code generation support for custom actions
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenContributionItem;
import org.eclipse.gmf.codegen.gmfgen.GenContributionManager;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Contribution Manager</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenContributionManagerImpl#getID <em>ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenContributionManagerImpl#getItems <em>Items</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenContributionManagerImpl#getEditorGen <em>Editor Gen</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public abstract class GenContributionManagerImpl extends EObjectImpl implements GenContributionManager {
	/**
	 * The default value of the '{@@link #getID() <em>ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getID() <em>ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getID()
	 * @@generated
	 * @@ordered
	 */
	protected String iD = ID_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getItems() <em>Items</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getItems()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenContributionItem> items;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenContributionManagerImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenContributionManager();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getID() {
		return iD;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setID(String newID) {
		String oldID = iD;
		iD = newID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ID, oldID, iD));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenContributionItem> getItems() {
		if (items == null) {
			items = new EObjectContainmentWithInverseEList<GenContributionItem>(GenContributionItem.class, this, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER);
		}
		return items;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public abstract GenEditorGenerator getEditorGen();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getItems()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS:
				return ((InternalEList<?>)getItems()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ID:
				return getID();
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS:
				return getItems();
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__EDITOR_GEN:
				return getEditorGen();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ID:
				setID((String)newValue);
				return;
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS:
				getItems().clear();
				getItems().addAll((Collection<? extends GenContributionItem>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ID:
				setID(ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS:
				getItems().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ID:
				return ID_EDEFAULT == null ? iD != null : !ID_EDEFAULT.equals(iD);
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS:
				return items != null && !items.isEmpty();
			case GMFGenPackage.GEN_CONTRIBUTION_MANAGER__EDITOR_GEN:
				return getEditorGen() != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (iD: ");
		result.append(iD);
		result.append(')');
		return result.toString();
	}

} //GenContributionManagerImpl
@


1.4
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d17 1
d23 1
d34 1
d40 1
a40 1
public abstract class GenContributionManagerImpl extends GenContributionItemImpl implements GenContributionManager {
d126 7
d171 2
d227 2
@


1.3
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d66 1
a66 1
	protected EList<GenContributionItem> items = null;
@


1.2
log
@need access to GenEditorGenerator from contribution items (i18n, #139733)
@
text
@d66 1
a66 1
	protected EList items = null;
d82 1
d113 1
a113 1
	public EList getItems() {
d115 1
a115 1
			items = new EObjectContainmentWithInverseEList(GenContributionItem.class, this, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER);
d125 2
d130 1
a130 1
				return ((InternalEList)getItems()).basicAdd(otherEnd, msgs);
d140 1
d144 1
a144 1
				return ((InternalEList)getItems()).basicRemove(otherEnd, msgs);
d154 1
d170 2
d179 1
a179 1
				getItems().addAll((Collection)newValue);
d190 1
d208 1
d224 1
@


1.1
log
@allow to specify ui contributions for rcp application in genmodel
@
text
@a12 1

a13 1

a15 1

d17 1
a17 2

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
a18 1

d114 1
a114 1
			items = new EObjectContainmentEList(GenContributionItem.class, this, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS);
d124 13
@

