head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.1
	v20070301-1200:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.04.06.14.37.41;	author ashatalin;	state dead;
branches;
next	1.3;
commitid	5df46165b334567;

1.3
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	444245f8090b4567;

1.2
date	2007.03.13.14.10.32;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	82445f6b0d84567;

1.1
date	2007.03.01.12.52.26;	author ashatalin;	state Exp;
branches;
next	;
commitid	5f8145e6cc8a4567;


desc
@@


1.4
log
@Moving non-open API classes from org.eclipse.gmf.codegen.util to org.eclipse.gmf.internal.codegen.util package.
@
text
@/**
 * Copyright (c) 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
package org.eclipse.gmf.codegen.util;

import java.util.Collection;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.EStructuralFeature.Setting;
import org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer;

public class EmfUtils {
	
	public static final List<EObject> getReferencingObjects(EObject target) {
		LinkedList<EObject> result = new LinkedList<EObject>(); 
		Collection<EStructuralFeature.Setting> settings = CrossReferencer.find(target.eResource().getContents()).get(target);
        if (settings == null) {
        	return Collections.emptyList();
        }
        for (Setting setting : settings) {
            result.add(setting.getEObject());
        }
		return result;
	}
}
@


1.3
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@@


1.2
log
@[177127] akarjakina - NPE in EMFUtils.getReferencingObjects
@
text
@d26 1
a26 1
	public static final List getReferencingObjects(EObject target) {
@


1.1
log
@Utinily method added.
@
text
@a13 1
import java.util.ArrayList;
d15 2
d27 1
a27 1
		List result = new ArrayList(); 
d29 6
a34 3
		for (Setting setting : settings) {
			result.add(setting.getEObject());
		}
a36 1

@

