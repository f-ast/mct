head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080930-1130:1.6
	v20080926-1245:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20080722-1827:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080528-1052:1.6
	v20080521:1.6
	v20080516-1543:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080508-2000:1.6
	v20080507-1326:1.6
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080411-0411:1.5
	v20080404-1111:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070928-0000:1.5
	v20070921-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070504-1000:1.5
	v20070427-0600:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070405-1100:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	39124821b4de4567;

1.5
date	2007.01.25.16.57.54;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	271945b8e1904567;

1.4
date	2006.06.06.16.22.23;	author radvorak;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.20.19.36.27;	author radvorak;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.21.14.20.10;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.13.12.45.56;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Value Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Expression as a is textual statement which results in a value when evaluated in a context
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression#getBody <em>Body</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression#getLangName <em>Lang Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression#getProvider <em>Provider</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getValueExpression()
 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='ValueSpec'"
 * @@generated
 */
public interface ValueExpression extends EObject {
	/**
	 * Returns the value of the '<em><b>Body</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Body</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * The text of the expression
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Body</em>' attribute.
	 * @@see #setBody(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getValueExpression_Body()
	 * @@model required="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='body'"
	 * @@generated
	 */
	String getBody();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression#getBody <em>Body</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Body</em>' attribute.
	 * @@see #getBody()
	 * @@generated
	 */
	void setBody(String value);

	/**
	 * Returns the value of the '<em><b>Lang Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Lang Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Lang Name</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getValueExpression_LangName()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='lang'"
	 * @@generated
	 */
	String getLangName();

	/**
	 * Returns the value of the '<em><b>Provider</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase#getExpressions <em>Expressions</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Provider</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Provider</em>' container reference.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getValueExpression_Provider()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase#getExpressions
	 * @@model opposite="expressions" resolveProxies="false" required="true" transient="false" changeable="false"
	 * @@generated
	 */
	GenExpressionProviderBase getProvider();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Returns valid String literal for the given <code>String</code> as it should appear in java source code.
	 * <!-- end-model-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	String getBodyString();
} // ValueExpression
@


1.5
log
@Revriting BaseItemSemanticEditPolicy to xpand
@
text
@a23 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression#getLanguage <em>Language</em>}</li>
d25 1
d65 1
a65 3
	 * Returns the value of the '<em><b>Language</b></em>' attribute.
	 * The default value is <code>"ocl"</code>.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.codegen.gmfgen.GenLanguage}.
d68 1
a68 1
	 * If the meaning of the '<em>Language</em>' attribute isn't clear,
d72 4
a75 8
	 * <!-- begin-model-doc -->
	 * Specifies the language in which the expression is stated
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Language</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLanguage
	 * @@see #setLanguage(GenLanguage)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getValueExpression_Language()
	 * @@model default="ocl" required="true"
d78 1
a78 1
	GenLanguage getLanguage();
d81 2
a82 12
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression#getLanguage <em>Language</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Language</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenLanguage
	 * @@see #getLanguage()
	 * @@generated
	 */
	void setLanguage(GenLanguage value);

	/**
	 * Returns the value of the '<em><b>Lang Name</b></em>' attribute.
d85 1
a85 1
	 * If the meaning of the '<em>Lang Name</em>' attribute isn't clear,
d89 4
a92 4
	 * @@return the value of the '<em>Lang Name</em>' attribute.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getValueExpression_LangName()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='lang'"
d95 1
a95 1
	String getLangName();
a106 3

	boolean isOCLExpression();
		
@


1.4
log
@#145042 Introduce expression Language enumeration into gmfmap, gfmgen models  instead of plain text attribute
@
text
@d113 11
@


1.3
log
@#136672 use common expression accessor with audits
@
text
@d25 1
d33 1
a33 1
public interface ValueExpression extends EObject{
d67 1
d78 2
a79 1
	 * @@see #setLanguage(String)
d81 1
a81 2
	 * @@model default="ocl"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='lang'"
d84 1
a84 1
	String getLanguage();
d91 1
d95 17
a111 1
	void setLanguage(String value);
@


1.2
log
@[rdvorak] #121602 constraint annotations
@
text
@d94 2
@


1.1
log
@[rdvorak] #112097 genmodel support to use expression evaluation to choose editpart (visual representation)
@
text
@d29 1
a29 1
 * @@model
d48 1
d79 1
@

