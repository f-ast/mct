head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081015-1925:1.3
	v20081008-1925:1.3
	v20081001-1925:1.3
	v20080930-1130:1.3
	v20080926-1245:1.3
	v20080924-1925:1.3
	v20080917-1925:1.3
	v20080911-1728:1.3
	v20080910-1520:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20080722-1827:1.3
	v20080718-1731:1.3
	v20080716-1600:1.2
	v20080716-1642:1.3
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.2
	v20080528-1052:1.2
	v20080521:1.2
	v20080516-1543:1.2
	v20080516-1143:1.2
	v20080512-1200:1.2
	v20080508-2000:1.2
	v20080507-1326:1.2
	v20080503-1740:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080411-0411:1.2
	v20080404-1111:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20080207-0207:1.2
	v20071222-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071112-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070928-0000:1.2
	v20070921-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070614-1400:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070520-1200:1.2
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.1
	v20070301-1200:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1
	v20070202-0200:1.1
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061027-1200:1.1
	v20061020-1000:1.1
	v20061013-1330:1.1
	v20060919-0800:1.1
	v20060907-1100:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060824-1600:1.1
	v20060817-1500:1.1
	v20060728-0500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.07.01.11.40.16;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	7b70486a179a4567;

1.2
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	444245f8090b4567;

1.1
date	2006.06.06.16.22.23;	author radvorak;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[227127] support literal values for feature initializers. step 1: models updated to specify new possible values
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id: GenLanguage.java,v 1.2 2007/03/14 14:39:36 atikhomirov Exp $
 */
package org.eclipse.gmf.codegen.gmfgen;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Gen Language</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenLanguage()
 * @@model
 * @@generated
 */
public enum GenLanguage implements Enumerator
{
	/**
	 * The '<em><b>Ocl</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #OCL
	 * @@generated
	 * @@ordered
	 */
	OCL_LITERAL(0, "ocl", "ocl"),
	/**
	 * The '<em><b>Java</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #JAVA
	 * @@generated
	 * @@ordered
	 */
	JAVA_LITERAL(1, "java", "java"),
	/**
	 * The '<em><b>Regexp</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #REGEXP
	 * @@generated
	 * @@ordered
	 */
	REGEXP_LITERAL(2, "regexp", "regexp"),
	/**
	 * The '<em><b>Nregexp</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #NREGEXP
	 * @@generated
	 * @@ordered
	 */
	NREGEXP_LITERAL(3, "nregexp", "nregexp"), /**
	 * The '<em><b>Literal</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #LITERAL
	 * @@generated
	 * @@ordered
	 */
	LITERAL_LITERAL(4, "literal", "literal");
	/**
	 * The '<em><b>Ocl</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Ocl</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #OCL_LITERAL
	 * @@model name="ocl"
	 * @@generated
	 * @@ordered
	 */
	public static final int OCL = 0;

	/**
	 * The '<em><b>Java</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Java</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #JAVA_LITERAL
	 * @@model name="java"
	 * @@generated
	 * @@ordered
	 */
	public static final int JAVA = 1;

	/**
	 * The '<em><b>Regexp</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Regexp</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #REGEXP_LITERAL
	 * @@model name="regexp"
	 * @@generated
	 * @@ordered
	 */
	public static final int REGEXP = 2;

	/**
	 * The '<em><b>Nregexp</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Nregexp</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #NREGEXP_LITERAL
	 * @@model name="nregexp"
	 * @@generated
	 * @@ordered
	 */
	public static final int NREGEXP = 3;

	/**
	 * The '<em><b>Literal</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Literal</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #LITERAL_LITERAL
	 * @@model name="literal"
	 * @@generated
	 * @@ordered
	 */
	public static final int LITERAL = 4;

	/**
	 * An array of all the '<em><b>Gen Language</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private static final GenLanguage[] VALUES_ARRAY =
		new GenLanguage[] {
			OCL_LITERAL,
			JAVA_LITERAL,
			REGEXP_LITERAL,
			NREGEXP_LITERAL,
			LITERAL_LITERAL,
		};

	/**
	 * A public read-only list of all the '<em><b>Gen Language</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static final List<GenLanguage> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Gen Language</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static GenLanguage get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			GenLanguage result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Gen Language</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static GenLanguage getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			GenLanguage result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Gen Language</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static GenLanguage get(int value) {
		switch (value) {
			case OCL: return OCL_LITERAL;
			case JAVA: return JAVA_LITERAL;
			case REGEXP: return REGEXP_LITERAL;
			case NREGEXP: return NREGEXP_LITERAL;
			case LITERAL: return LITERAL_LITERAL;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private GenLanguage(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		return literal;
	}
}
@


1.2
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d5 1
a5 1
 * $Id: GenLanguage.java,v 1.1 2006/06/06 16:22:23 radvorak Exp $
d61 9
a69 1
	NREGEXP_LITERAL(3, "nregexp", "nregexp");
d131 15
d157 1
d212 1
@


1.1
log
@#145042 Introduce expression Language enumeration into gmfmap, gfmgen models  instead of plain text attribute
@
text
@d5 1
a5 1
 * $Id$
d13 1
a13 1
import org.eclipse.emf.common.util.AbstractEnumerator;
d24 38
a61 1
public final class GenLanguage extends AbstractEnumerator {
a122 40
	 * The '<em><b>Ocl</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #OCL
	 * @@generated
	 * @@ordered
	 */
	public static final GenLanguage OCL_LITERAL = new GenLanguage(OCL, "ocl", "ocl");

	/**
	 * The '<em><b>Java</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #JAVA
	 * @@generated
	 * @@ordered
	 */
	public static final GenLanguage JAVA_LITERAL = new GenLanguage(JAVA, "java", "java");

	/**
	 * The '<em><b>Regexp</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #REGEXP
	 * @@generated
	 * @@ordered
	 */
	public static final GenLanguage REGEXP_LITERAL = new GenLanguage(REGEXP, "regexp", "regexp");

	/**
	 * The '<em><b>Nregexp</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #NREGEXP
	 * @@generated
	 * @@ordered
	 */
	public static final GenLanguage NREGEXP_LITERAL = new GenLanguage(NREGEXP, "nregexp", "nregexp");

	/**
d142 1
a142 1
	public static final List VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));
d189 1
a189 1
		return null;	
d193 21
d220 30
a249 1
		super(value, name, literal);
d252 11
a262 1
} //GenLanguage
@

