head	1.13;
access;
symbols
	v20081022-1925:1.13
	v20081015-1925:1.13
	v20081008-1925:1.13
	v20081001-1925:1.13
	v20080930-1130:1.13
	v20080926-1245:1.13
	v20080924-1925:1.13
	v20080917-1925:1.13
	v20080911-1728:1.13
	v20080910-1520:1.13
	v20080903-1520:1.13
	v20080827-1520:1.13
	v20080813-1520:1.13
	v20080806-1520:1.13
	v20080722-1827:1.13
	v20080718-1731:1.13
	v20080716-1600:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.2
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080610-1132:1.13
	v20080603-1553:1.13
	v20080528-1052:1.13
	v20080521:1.13
	v20080516-1543:1.13
	v20080516-1143:1.13
	v20080512-1200:1.13
	v20080508-2000:1.13
	v20080507-1326:1.13
	v20080503-1740:1.13
	v20080501-1739:1.13
	v20080425-1959:1.13
	v20080417-1610:1.12
	v20080411-0411:1.12
	v20080404-1111:1.12
	v20080322-0000:1.12
	v20080222-1200:1.11
	v20080215-1500:1.11
	v20080207-0207:1.11
	v20071222-1111:1.11
	v20071214-1111:1.11
	v20071130-1111:1.11
	v20071124-0000:1.11
	v20071112-0000:1.11
	v20071108-0000:1.11
	v20071003-0000:1.11
	v20070928-0000:1.11
	v20070921-0000:1.11
	v20070915-0000:1.11
	v20070903-0000:1.11
	v20070809-0000:1.11
	R2_0_maintenance:1.11.0.2
	R2_0:1.11
	R4_20:1.11
	v20070621-0000:1.11
	RC3_20:1.11
	v20070614-1400:1.11
	v20070608-1300:1.11
	v20070605-1400:1.11
	v20070601-1400:1.11
	v20070525-1500:1.11
	v20070520-1200:1.11
	v20070518-1300:1.11
	v20070504-1000:1.11
	v20070427-0600:1.11
	v20070420-1000:1.11
	v20070413-1300:1.11
	v20070405-1100:1.10
	v20070403-1500:1.10
	v20070330-1300:1.10
	v20060330-1300:1.10
	v20070322-1100:1.10
	v20060316-0600:1.10
	v20070307-0700:1.9
	v20070301-1200:1.9
	v20070228-2000:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070103-0300:1.8
	M4_20:1.8
	v20061222-1800:1.8
	v20061218-1200:1.6
	v20061214-0000:1.6
	v20061120-1300:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061013-1330:1.6;
locks; strict;
comment	@# @;
expand	@k@;


1.13
date	2008.04.18.14.43.23;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	2e1d4808b3814567;

1.12
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	5e5047cd7dd64567;

1.11
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.10;
commitid	725b461c97d64567;

1.10
date	2007.03.14.14.39.34;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	444245f8090b4567;

1.9
date	2007.01.24.20.59.52;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	2b045b7c8c84567;

1.8
date	2006.12.21.17.14.28;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	710b458ac0ed4567;

1.7
date	2006.12.18.18.20.51;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	7d774586dbfa4567;

1.6
date	2006.10.09.17.59.20;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.03.08.16.50;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.03.08.05.55;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.02.17.30.21;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.02.16.54.54;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.27.10.04.42;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.13
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenApplication;
import org.eclipse.gmf.codegen.gmfgen.GenContributionItem;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
import org.eclipse.gmf.codegen.gmfgen.GenMenuManager;
import org.eclipse.gmf.codegen.gmfgen.GenToolBarManager;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Application</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getEditorGen <em>Editor Gen</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getID <em>ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getTitle <em>Title</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getPackageName <em>Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getClassName <em>Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getWorkbenchAdvisorClassName <em>Workbench Advisor Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getWorkbenchWindowAdvisorClassName <em>Workbench Window Advisor Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getActionBarAdvisorClassName <em>Action Bar Advisor Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getPerspectiveClassName <em>Perspective Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getPerspectiveId <em>Perspective Id</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#isSupportFiles <em>Support Files</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getSharedContributionItems <em>Shared Contribution Items</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getMainMenu <em>Main Menu</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getMainToolBar <em>Main Tool Bar</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
	/**
	 * The default value of the '{@@link #getID() <em>ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getID() <em>ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getID()
	 * @@generated
	 * @@ordered
	 */
	protected String iD = ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getTitle() <em>Title</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTitle()
	 * @@generated
	 * @@ordered
	 */
	protected static final String TITLE_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getTitle() <em>Title</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTitle()
	 * @@generated
	 * @@ordered
	 */
	protected String title = TITLE_EDEFAULT;

	/**
	 * The default value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String packageName = PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getClassName() <em>Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getClassName() <em>Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String className = CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getWorkbenchAdvisorClassName() <em>Workbench Advisor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWorkbenchAdvisorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The default value of the '{@@link #getWorkbenchWindowAdvisorClassName() <em>Workbench Window Advisor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWorkbenchWindowAdvisorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The default value of the '{@@link #getActionBarAdvisorClassName() <em>Action Bar Advisor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionBarAdvisorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The default value of the '{@@link #getPerspectiveClassName() <em>Perspective Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPerspectiveClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PERSPECTIVE_CLASS_NAME_EDEFAULT = null;

	/**
	 * The default value of the '{@@link #getPerspectiveId() <em>Perspective Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPerspectiveId()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PERSPECTIVE_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPerspectiveId() <em>Perspective Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPerspectiveId()
	 * @@generated
	 * @@ordered
	 */
	protected String perspectiveId = PERSPECTIVE_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #isSupportFiles() <em>Support Files</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSupportFiles()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean SUPPORT_FILES_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isSupportFiles() <em>Support Files</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSupportFiles()
	 * @@generated
	 * @@ordered
	 */
	protected boolean supportFiles = SUPPORT_FILES_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getSharedContributionItems() <em>Shared Contribution Items</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSharedContributionItems()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenContributionItem> sharedContributionItems;

	/**
	 * The cached value of the '{@@link #getMainMenu() <em>Main Menu</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMainMenu()
	 * @@generated
	 * @@ordered
	 */
	protected GenMenuManager mainMenu;

	/**
	 * The cached value of the '{@@link #getMainToolBar() <em>Main Tool Bar</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMainToolBar()
	 * @@generated
	 * @@ordered
	 */
	protected GenToolBarManager mainToolBar;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenApplicationImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenApplication();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenEditorGenerator getEditorGen() {
		if (eContainerFeatureID != GMFGenPackage.GEN_APPLICATION__EDITOR_GEN) return null;
		return (GenEditorGenerator)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getIDGen() {
		return iD;
	}

	public String getID() {
		String value = getIDGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getEditorGen().getModelID().replace(" ", "") + "Application"; //$NON-NLS-1$ //$NON-NLS-2$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setID(String newID) {
		String oldID = iD;
		iD = newID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__ID, oldID, iD));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getTitleGen() {
		return title;
	}

	public String getTitle() {
		String value = getTitleGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getEditorGen().getModelID() + " Application";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTitle(String newTitle) {
		String oldTitle = title;
		title = newTitle;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__TITLE, oldTitle, title));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPackageNameGen() {
		return packageName;
	}

	public String getPackageName() {
		String value = getPackageNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".application"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPackageName(String newPackageName) {
		String oldPackageName = packageName;
		packageName = newPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME, oldPackageName, packageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getClassNameGen() {
		return className;
	}

	public String getClassName() {
		String value = getClassNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDomainPackageCapName() + "Application"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setClassName(String newClassName) {
		String oldClassName = className;
		className = newClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__CLASS_NAME, oldClassName, className));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getWorkbenchAdvisorClassName() {
		return "DiagramEditorWorkbenchAdvisor";
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getWorkbenchWindowAdvisorClassName() {
		return "DiagramEditorWorkbenchWindowAdvisor";
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getActionBarAdvisorClassName() {
		return "DiagramEditorActionBarAdvisor";
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getPerspectiveClassName() {
		return "DiagramEditorPerspective";
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPerspectiveIdGen() {
		return perspectiveId;
	}

	public String getPerspectiveId() {
		String value = getPerspectiveIdGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + '.' + getEditorGen().getModelID() + "Perspective"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPerspectiveId(String newPerspectiveId) {
		String oldPerspectiveId = perspectiveId;
		perspectiveId = newPerspectiveId;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID, oldPerspectiveId, perspectiveId));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isSupportFiles() {
		return supportFiles;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSupportFiles(boolean newSupportFiles) {
		boolean oldSupportFiles = supportFiles;
		supportFiles = newSupportFiles;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES, oldSupportFiles, supportFiles));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenContributionItem> getSharedContributionItems() {
		if (sharedContributionItems == null) {
			sharedContributionItems = new EObjectContainmentEList<GenContributionItem>(GenContributionItem.class, this, GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS);
		}
		return sharedContributionItems;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenMenuManager getMainMenu() {
		return mainMenu;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetMainMenu(GenMenuManager newMainMenu, NotificationChain msgs) {
		GenMenuManager oldMainMenu = mainMenu;
		mainMenu = newMainMenu;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__MAIN_MENU, oldMainMenu, newMainMenu);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMainMenu(GenMenuManager newMainMenu) {
		if (newMainMenu != mainMenu) {
			NotificationChain msgs = null;
			if (mainMenu != null)
				msgs = ((InternalEObject)mainMenu).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_APPLICATION__MAIN_MENU, null, msgs);
			if (newMainMenu != null)
				msgs = ((InternalEObject)newMainMenu).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_APPLICATION__MAIN_MENU, null, msgs);
			msgs = basicSetMainMenu(newMainMenu, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__MAIN_MENU, newMainMenu, newMainMenu));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenToolBarManager getMainToolBar() {
		return mainToolBar;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetMainToolBar(GenToolBarManager newMainToolBar, NotificationChain msgs) {
		GenToolBarManager oldMainToolBar = mainToolBar;
		mainToolBar = newMainToolBar;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR, oldMainToolBar, newMainToolBar);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMainToolBar(GenToolBarManager newMainToolBar) {
		if (newMainToolBar != mainToolBar) {
			NotificationChain msgs = null;
			if (mainToolBar != null)
				msgs = ((InternalEObject)mainToolBar).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR, null, msgs);
			if (newMainToolBar != null)
				msgs = ((InternalEObject)newMainToolBar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR, null, msgs);
			msgs = basicSetMainToolBar(newMainToolBar, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR, newMainToolBar, newMainToolBar));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getQualifiedClassName() {
		return getPackageName() + '.' + getClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getWorkbenchAdvisorQualifiedClassName() {
		return getPackageName() + '.' + getWorkbenchAdvisorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getWorkbenchWindowAdvisorQualifiedClassName() {
		return getPackageName() + '.' + getWorkbenchWindowAdvisorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getActionBarAdvisorQualifiedClassName() {
		return getPackageName() + '.' + getActionBarAdvisorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getPerspectiveQualifiedClassName() {
		return getPackageName() + '.' + getPerspectiveClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN:
				return eBasicSetContainer(null, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
			case GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS:
				return ((InternalEList<?>)getSharedContributionItems()).basicRemove(otherEnd, msgs);
			case GMFGenPackage.GEN_APPLICATION__MAIN_MENU:
				return basicSetMainMenu(null, msgs);
			case GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR:
				return basicSetMainToolBar(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION, GenEditorGenerator.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN:
				return getEditorGen();
			case GMFGenPackage.GEN_APPLICATION__ID:
				return getID();
			case GMFGenPackage.GEN_APPLICATION__TITLE:
				return getTitle();
			case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME:
				return getPackageName();
			case GMFGenPackage.GEN_APPLICATION__CLASS_NAME:
				return getClassName();
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME:
				return getWorkbenchAdvisorClassName();
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME:
				return getWorkbenchWindowAdvisorClassName();
			case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME:
				return getActionBarAdvisorClassName();
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME:
				return getPerspectiveClassName();
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID:
				return getPerspectiveId();
			case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES:
				return isSupportFiles() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS:
				return getSharedContributionItems();
			case GMFGenPackage.GEN_APPLICATION__MAIN_MENU:
				return getMainMenu();
			case GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR:
				return getMainToolBar();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_APPLICATION__ID:
				setID((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__TITLE:
				setTitle((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME:
				setPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__CLASS_NAME:
				setClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID:
				setPerspectiveId((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES:
				setSupportFiles(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS:
				getSharedContributionItems().clear();
				getSharedContributionItems().addAll((Collection<? extends GenContributionItem>)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__MAIN_MENU:
				setMainMenu((GenMenuManager)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR:
				setMainToolBar((GenToolBarManager)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_APPLICATION__ID:
				setID(ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__TITLE:
				setTitle(TITLE_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME:
				setPackageName(PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__CLASS_NAME:
				setClassName(CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID:
				setPerspectiveId(PERSPECTIVE_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES:
				setSupportFiles(SUPPORT_FILES_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS:
				getSharedContributionItems().clear();
				return;
			case GMFGenPackage.GEN_APPLICATION__MAIN_MENU:
				setMainMenu((GenMenuManager)null);
				return;
			case GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR:
				setMainToolBar((GenToolBarManager)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN:
				return getEditorGen() != null;
			case GMFGenPackage.GEN_APPLICATION__ID:
				return ID_EDEFAULT == null ? iD != null : !ID_EDEFAULT.equals(iD);
			case GMFGenPackage.GEN_APPLICATION__TITLE:
				return TITLE_EDEFAULT == null ? title != null : !TITLE_EDEFAULT.equals(title);
			case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME:
				return PACKAGE_NAME_EDEFAULT == null ? packageName != null : !PACKAGE_NAME_EDEFAULT.equals(packageName);
			case GMFGenPackage.GEN_APPLICATION__CLASS_NAME:
				return CLASS_NAME_EDEFAULT == null ? className != null : !CLASS_NAME_EDEFAULT.equals(className);
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME:
				return WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT == null ? getWorkbenchAdvisorClassName() != null : !WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT.equals(getWorkbenchAdvisorClassName());
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME:
				return WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT == null ? getWorkbenchWindowAdvisorClassName() != null : !WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT.equals(getWorkbenchWindowAdvisorClassName());
			case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME:
				return ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT == null ? getActionBarAdvisorClassName() != null : !ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT.equals(getActionBarAdvisorClassName());
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME:
				return PERSPECTIVE_CLASS_NAME_EDEFAULT == null ? getPerspectiveClassName() != null : !PERSPECTIVE_CLASS_NAME_EDEFAULT.equals(getPerspectiveClassName());
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID:
				return PERSPECTIVE_ID_EDEFAULT == null ? perspectiveId != null : !PERSPECTIVE_ID_EDEFAULT.equals(perspectiveId);
			case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES:
				return supportFiles != SUPPORT_FILES_EDEFAULT;
			case GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS:
				return sharedContributionItems != null && !sharedContributionItems.isEmpty();
			case GMFGenPackage.GEN_APPLICATION__MAIN_MENU:
				return mainMenu != null;
			case GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR:
				return mainToolBar != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (iD: ");
		result.append(iD);
		result.append(", title: ");
		result.append(title);
		result.append(", packageName: ");
		result.append(packageName);
		result.append(", className: ");
		result.append(className);
		result.append(", perspectiveId: ");
		result.append(perspectiveId);
		result.append(", supportFiles: ");
		result.append(supportFiles);
		result.append(')');
		return result.toString();
	}

	String getDomainPackageCapName() {
		return ((GenEditorGeneratorImpl) getEditorGen()).getDomainModelCapName();
	}
} //GenApplicationImpl@


1.12
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a18 1
import org.eclipse.emf.ecore.util.EcoreUtil;
a277 31
	public NotificationChain basicSetEditorGen(GenEditorGenerator newEditorGen, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newEditorGen, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditorGen(GenEditorGenerator newEditorGen) {
		if (newEditorGen != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_APPLICATION__EDITOR_GEN && newEditorGen != null)) {
			if (EcoreUtil.isAncestor(this, newEditorGen))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newEditorGen != null)
				msgs = ((InternalEObject)newEditorGen).eInverseAdd(this, GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION, GenEditorGenerator.class, msgs);
			msgs = basicSetEditorGen(newEditorGen, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, newEditorGen, newEditorGen));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d629 1
a629 1
				return basicSetEditorGen((GenEditorGenerator)otherEnd, msgs);
d643 1
a643 1
				return basicSetEditorGen(null, msgs);
a716 3
			case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)newValue);
				return;
a756 3
			case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)null);
				return;
@


1.11
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d19 1
d279 31
d661 1
a661 1
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
d675 1
a675 1
				return eBasicSetContainer(null, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
d749 3
d792 3
@


1.10
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d222 1
a222 1
	protected EList<GenContributionItem> sharedContributionItems = null;
d232 1
a232 1
	protected GenMenuManager mainMenu = null;
d242 1
a242 1
	protected GenToolBarManager mainToolBar = null;
@


1.9
log
@organized imports
@
text
@d222 1
a222 1
	protected EList sharedContributionItems = null;
d258 1
d480 1
a480 1
	public EList getSharedContributionItems() {
d482 1
a482 1
			sharedContributionItems = new EObjectContainmentEList(GenContributionItem.class, this, GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS);
d623 1
d639 1
d645 1
a645 1
				return ((InternalEList)getSharedContributionItems()).basicRemove(otherEnd, msgs);
d659 1
d673 1
d713 2
d737 1
a737 1
				getSharedContributionItems().addAll((Collection)newValue);
d754 1
d793 1
d833 1
@


1.8
log
@allow to specify ui contributions for rcp application in genmodel
@
text
@a10 1
import org.eclipse.emf.codegen.util.CodeGenUtil;
a12 1

a13 1

a15 1

a17 1

a19 1

a23 1

@


1.7
log
@rewrite application templates in xpand; simplify genmodel
@
text
@d9 2
d15 2
d23 3
d28 1
d31 3
d52 3
d222 30
d484 98
d648 6
d700 6
d735 10
d774 9
d816 6
@


1.6
log
@#114200 add application id property
@
text
@d9 1
d33 2
a34 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getApplicationPackageName <em>Application Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenApplicationImpl#getApplicationClassName <em>Application Class Name</em>}</li>
d40 1
d88 1
a88 1
	 * The default value of the '{@@link #getApplicationPackageName() <em>Application Package Name</em>}' attribute.
d91 1
a91 1
	 * @@see #getApplicationPackageName()
d95 1
a95 1
	protected static final String APPLICATION_PACKAGE_NAME_EDEFAULT = null;
d98 1
a98 1
	 * The cached value of the '{@@link #getApplicationPackageName() <em>Application Package Name</em>}' attribute.
d101 1
a101 1
	 * @@see #getApplicationPackageName()
d105 1
a105 1
	protected String applicationPackageName = APPLICATION_PACKAGE_NAME_EDEFAULT;
d108 1
a108 1
	 * The default value of the '{@@link #getApplicationClassName() <em>Application Class Name</em>}' attribute.
d111 1
a111 1
	 * @@see #getApplicationClassName()
d115 1
a115 1
	protected static final String APPLICATION_CLASS_NAME_EDEFAULT = null;
d118 1
a118 1
	 * The cached value of the '{@@link #getApplicationClassName() <em>Application Class Name</em>}' attribute.
d121 1
a121 1
	 * @@see #getApplicationClassName()
d125 1
a125 1
	protected String applicationClassName = APPLICATION_CLASS_NAME_EDEFAULT;
a137 10
	 * The cached value of the '{@@link #getWorkbenchAdvisorClassName() <em>Workbench Advisor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWorkbenchAdvisorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String workbenchAdvisorClassName = WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT;

	/**
a147 10
	 * The cached value of the '{@@link #getWorkbenchWindowAdvisorClassName() <em>Workbench Window Advisor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWorkbenchWindowAdvisorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String workbenchWindowAdvisorClassName = WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT;

	/**
d158 1
a158 1
	 * The cached value of the '{@@link #getActionBarAdvisorClassName() <em>Action Bar Advisor Class Name</em>}' attribute.
d161 1
a161 1
	 * @@see #getActionBarAdvisorClassName()
d165 1
a165 1
	protected String actionBarAdvisorClassName = ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT;
d168 1
a168 1
	 * The default value of the '{@@link #getPerspectiveClassName() <em>Perspective Class Name</em>}' attribute.
d171 1
a171 1
	 * @@see #getPerspectiveClassName()
d175 1
a175 1
	protected static final String PERSPECTIVE_CLASS_NAME_EDEFAULT = null;
d178 1
a178 1
	 * The cached value of the '{@@link #getPerspectiveClassName() <em>Perspective Class Name</em>}' attribute.
d181 1
a181 1
	 * @@see #getPerspectiveClassName()
d185 1
a185 1
	protected String perspectiveClassName = PERSPECTIVE_CLASS_NAME_EDEFAULT;
d188 1
a188 1
	 * The default value of the '{@@link #getPerspectiveId() <em>Perspective Id</em>}' attribute.
d191 1
a191 1
	 * @@see #getPerspectiveId()
d195 1
a195 1
	protected static final String PERSPECTIVE_ID_EDEFAULT = null;
d198 1
a198 1
	 * The cached value of the '{@@link #getPerspectiveId() <em>Perspective Id</em>}' attribute.
d201 1
a201 1
	 * @@see #getPerspectiveId()
d205 1
a205 1
	protected String perspectiveId = PERSPECTIVE_ID_EDEFAULT;
d298 2
a299 2
	public String getApplicationPackageNameGen() {
		return applicationPackageName;
d302 2
a303 2
	public String getApplicationPackageName() {
		String value = getApplicationPackageNameGen();
d315 3
a317 3
	public void setApplicationPackageName(String newApplicationPackageName) {
		String oldApplicationPackageName = applicationPackageName;
		applicationPackageName = newApplicationPackageName;
d319 1
a319 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__APPLICATION_PACKAGE_NAME, oldApplicationPackageName, applicationPackageName));
d327 2
a328 2
	public String getApplicationClassNameGen() {
		return applicationClassName;
d331 2
a332 2
	public String getApplicationClassName() {
		String value = getApplicationClassNameGen();
d344 3
a346 3
	public void setApplicationClassName(String newApplicationClassName) {
		String oldApplicationClassName = applicationClassName;
		applicationClassName = newApplicationClassName;
d348 1
a348 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__APPLICATION_CLASS_NAME, oldApplicationClassName, applicationClassName));
d354 1
a354 1
	 * @@generated
a355 4
	public String getWorkbenchAdvisorClassNameGen() {
		return workbenchAdvisorClassName;
	}

d357 1
a357 5
		String value = getWorkbenchAdvisorClassNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDomainPackageCapName() + "WorkbenchAdvisor"; //$NON-NLS-1$
		}
		return value;
d363 1
a363 13
	 * @@generated
	 */
	public void setWorkbenchAdvisorClassName(String newWorkbenchAdvisorClassName) {
		String oldWorkbenchAdvisorClassName = workbenchAdvisorClassName;
		workbenchAdvisorClassName = newWorkbenchAdvisorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME, oldWorkbenchAdvisorClassName, workbenchAdvisorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
a364 4
	public String getWorkbenchWindowAdvisorClassNameGen() {
		return workbenchWindowAdvisorClassName;
	}

d366 1
a366 5
		String value = getWorkbenchWindowAdvisorClassNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDomainPackageCapName() + "WorkbenchWindowAdvisor"; //$NON-NLS-1$
		}
		return value;
d372 1
a372 1
	 * @@generated
a373 16
	public void setWorkbenchWindowAdvisorClassName(String newWorkbenchWindowAdvisorClassName) {
		String oldWorkbenchWindowAdvisorClassName = workbenchWindowAdvisorClassName;
		workbenchWindowAdvisorClassName = newWorkbenchWindowAdvisorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME, oldWorkbenchWindowAdvisorClassName, workbenchWindowAdvisorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getActionBarAdvisorClassNameGen() {
		return actionBarAdvisorClassName;
	}

d375 1
a375 5
		String value = getActionBarAdvisorClassNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDomainPackageCapName() + "ActionBarAdvisor"; //$NON-NLS-1$
		}
		return value;
d381 1
a381 1
	 * @@generated
d383 2
a384 5
	public void setActionBarAdvisorClassName(String newActionBarAdvisorClassName) {
		String oldActionBarAdvisorClassName = actionBarAdvisorClassName;
		actionBarAdvisorClassName = newActionBarAdvisorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME, oldActionBarAdvisorClassName, actionBarAdvisorClassName));
d392 2
a393 2
	public String getPerspectiveClassNameGen() {
		return perspectiveClassName;
d396 2
a397 2
	public String getPerspectiveClassName() {
		String value = getPerspectiveClassNameGen();
d399 1
a399 1
			value = getDomainPackageCapName() + "Perspective"; //$NON-NLS-1$
d409 3
a411 3
	public void setPerspectiveClassName(String newPerspectiveClassName) {
		String oldPerspectiveClassName = perspectiveClassName;
		perspectiveClassName = newPerspectiveClassName;
d413 1
a413 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME, oldPerspectiveClassName, perspectiveClassName));
d421 2
a422 10
	public String getPerspectiveIdGen() {
		return perspectiveId;
	}

	public String getPerspectiveId() {
		String value = getPerspectiveIdGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + '.' + getEditorGen().getModelID() + "Perspective"; //$NON-NLS-1$
		}
		return value;
d430 3
a432 3
	public void setPerspectiveId(String newPerspectiveId) {
		String oldPerspectiveId = perspectiveId;
		perspectiveId = newPerspectiveId;
d434 1
a434 5
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID, oldPerspectiveId, perspectiveId));
	}

	protected String getQualifiedClassName(String className) {
		return getApplicationPackageName() + '.' + className;
d442 2
a443 2
	public String getApplicationQualifiedClassName() {
		return getQualifiedClassName(getApplicationClassName());
d452 1
a452 1
		return getQualifiedClassName(getWorkbenchAdvisorClassName());
d461 1
a461 1
		return getQualifiedClassName(getWorkbenchWindowAdvisorClassName());
d470 1
a470 1
		return getQualifiedClassName(getActionBarAdvisorClassName());
d479 1
a479 1
		return getQualifiedClassName(getPerspectiveClassName());
d536 4
a539 4
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_PACKAGE_NAME:
				return getApplicationPackageName();
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_CLASS_NAME:
				return getApplicationClassName();
d550 2
d569 2
a570 14
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_PACKAGE_NAME:
				setApplicationPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_CLASS_NAME:
				setApplicationClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME:
				setWorkbenchAdvisorClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME:
				setWorkbenchWindowAdvisorClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME:
				setActionBarAdvisorClassName((String)newValue);
d572 2
a573 2
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME:
				setPerspectiveClassName((String)newValue);
d578 3
d598 2
a599 2
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_PACKAGE_NAME:
				setApplicationPackageName(APPLICATION_PACKAGE_NAME_EDEFAULT);
d601 2
a602 14
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_CLASS_NAME:
				setApplicationClassName(APPLICATION_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME:
				setWorkbenchAdvisorClassName(WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME:
				setWorkbenchWindowAdvisorClassName(WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME:
				setActionBarAdvisorClassName(ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME:
				setPerspectiveClassName(PERSPECTIVE_CLASS_NAME_EDEFAULT);
d607 3
d627 4
a630 4
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_PACKAGE_NAME:
				return APPLICATION_PACKAGE_NAME_EDEFAULT == null ? applicationPackageName != null : !APPLICATION_PACKAGE_NAME_EDEFAULT.equals(applicationPackageName);
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_CLASS_NAME:
				return APPLICATION_CLASS_NAME_EDEFAULT == null ? applicationClassName != null : !APPLICATION_CLASS_NAME_EDEFAULT.equals(applicationClassName);
d632 1
a632 1
				return WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT == null ? workbenchAdvisorClassName != null : !WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT.equals(workbenchAdvisorClassName);
d634 1
a634 1
				return WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT == null ? workbenchWindowAdvisorClassName != null : !WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT.equals(workbenchWindowAdvisorClassName);
d636 1
a636 1
				return ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT == null ? actionBarAdvisorClassName != null : !ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT.equals(actionBarAdvisorClassName);
d638 1
a638 1
				return PERSPECTIVE_CLASS_NAME_EDEFAULT == null ? perspectiveClassName != null : !PERSPECTIVE_CLASS_NAME_EDEFAULT.equals(perspectiveClassName);
d641 2
d660 4
a663 12
		result.append(", applicationPackageName: ");
		result.append(applicationPackageName);
		result.append(", applicationClassName: ");
		result.append(applicationClassName);
		result.append(", workbenchAdvisorClassName: ");
		result.append(workbenchAdvisorClassName);
		result.append(", workbenchWindowAdvisorClassName: ");
		result.append(workbenchWindowAdvisorClassName);
		result.append(", actionBarAdvisorClassName: ");
		result.append(actionBarAdvisorClassName);
		result.append(", perspectiveClassName: ");
		result.append(perspectiveClassName);
d666 2
@


1.5
log
@#114200 add 'title' property for the RCP application
@
text
@d30 1
d46 20
d258 29
d613 2
d642 3
d680 3
d720 2
d751 3
a753 1
		result.append(" (title: ");
@


1.4
log
@#114200 generate RCP specific classes
@
text
@d30 1
d45 20
d237 29
d563 2
d590 3
d625 3
d662 2
d691 3
a693 1
		result.append(" (applicationPackageName: ");
@


1.3
log
@#114200 add RCP application perspective id
@
text
@d414 4
d424 1
a424 1
		return getApplicationPackageName() + getApplicationClassName();
d433 1
a433 1
		return getApplicationPackageName() + getWorkbenchAdvisorClassName();
d442 1
a442 1
		return getApplicationPackageName() + getWorkbenchWindowAdvisorClassName();
d451 1
a451 1
		return getApplicationPackageName() + getActionBarAdvisorClassName();
d460 1
a460 1
		return getApplicationPackageName() + getPerspectiveClassName();
@


1.2
log
@#114200 add class names for RCP application in genmodel
@
text
@d36 1
d164 20
d388 29
d521 2
d552 3
d584 3
d612 2
d639 2
@


1.1
log
@#114200 Provide an option to generate RCP application
@
text
@d9 1
d15 1
d30 6
d43 120
d195 219
d459 12
d480 58
d542 12
d558 28
@

