head	1.1;
access;
symbols
	v20081022-1925:1.1
	v20081015-1925:1.1
	v20081008-1925:1.1
	v20081001-1925:1.1
	v20080930-1130:1.1
	v20080926-1245:1.1
	v20080924-1925:1.1
	v20080917-1925:1.1
	v20080911-1728:1.1
	v20080910-1520:1.1
	v20080903-1520:1.1
	v20080827-1520:1.1
	v20080813-1520:1.1
	v20080806-1520:1.1
	v20080722-1827:1.1
	v20080718-1731:1.1
	v20080716-1600:1.1
	v20080716-1642:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080610-1132:1.1
	v20080603-1553:1.1
	v20080528-1052:1.1
	v20080521:1.1
	v20080516-1543:1.1
	v20080516-1143:1.1
	v20080512-1200:1.1
	v20080508-2000:1.1
	v20080507-1326:1.1
	v20080503-1740:1.1
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080417-1610:1.1
	v20080411-0411:1.1
	v20080404-1111:1.1
	v20080322-0000:1.1
	v20080222-1200:1.1
	v20080215-1500:1.1
	v20080207-0207:1.1
	v20071222-1111:1.1
	v20071214-1111:1.1
	v20071130-1111:1.1
	v20071124-0000:1.1
	v20071112-0000:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070928-0000:1.1
	v20070921-0000:1.1
	v20070915-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070614-1400:1.1
	v20070608-1300:1.1
	v20070605-1400:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070520-1200:1.1
	v20070518-1300:1.1
	v20070504-1000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2007.04.27.11.23.38;	author dstadnik;	state Exp;
branches;
next	;
commitid	10694631dd364567;


desc
@@


1.1
log
@combine label text access methods
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Label Text Access Method</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getLabelTextAccessMethod()
 * @@model
 * @@generated
 */
public enum LabelTextAccessMethod implements Enumerator {
	/**
	 * The '<em><b>MESSAGE FORMAT</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #MESSAGE_FORMAT_VALUE
	 * @@generated
	 * @@ordered
	 */
	MESSAGE_FORMAT(0, "MESSAGE_FORMAT", "MESSAGE_FORMAT"),

	/**
	 * The '<em><b>NATIVE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #NATIVE_VALUE
	 * @@generated
	 * @@ordered
	 */
	NATIVE(1, "NATIVE", "NATIVE"),

	/**
	 * The '<em><b>REGEXP</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #REGEXP_VALUE
	 * @@generated
	 * @@ordered
	 */
	REGEXP(2, "REGEXP", "REGEXP"),

	/**
	 * The '<em><b>PRINTF</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #PRINTF_VALUE
	 * @@generated
	 * @@ordered
	 */
	PRINTF(3, "PRINTF", "PRINTF");

	/**
	 * The '<em><b>MESSAGE FORMAT</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>MESSAGE FORMAT</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #MESSAGE_FORMAT
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int MESSAGE_FORMAT_VALUE = 0;

	/**
	 * The '<em><b>NATIVE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>NATIVE</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #NATIVE
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int NATIVE_VALUE = 1;

	/**
	 * The '<em><b>REGEXP</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>REGEXP</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #REGEXP
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int REGEXP_VALUE = 2;

	/**
	 * The '<em><b>PRINTF</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>PRINTF</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #PRINTF
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int PRINTF_VALUE = 3;

	/**
	 * An array of all the '<em><b>Label Text Access Method</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private static final LabelTextAccessMethod[] VALUES_ARRAY =
		new LabelTextAccessMethod[] {
			MESSAGE_FORMAT,
			NATIVE,
			REGEXP,
			PRINTF,
		};

	/**
	 * A public read-only list of all the '<em><b>Label Text Access Method</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static final List<LabelTextAccessMethod> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Label Text Access Method</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static LabelTextAccessMethod get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			LabelTextAccessMethod result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Label Text Access Method</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static LabelTextAccessMethod getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			LabelTextAccessMethod result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Label Text Access Method</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static LabelTextAccessMethod get(int value) {
		switch (value) {
			case MESSAGE_FORMAT_VALUE: return MESSAGE_FORMAT;
			case NATIVE_VALUE: return NATIVE;
			case REGEXP_VALUE: return REGEXP;
			case PRINTF_VALUE: return PRINTF;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private LabelTextAccessMethod(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		return literal;
	}
	
} //LabelTextAccessMethod
@
