head	1.7;
access;
symbols
	v20081022-1925:1.7
	v20081015-1925:1.7
	v20081008-1925:1.7
	v20081001-1925:1.7
	v20080930-1130:1.7
	v20080926-1245:1.7
	v20080924-1925:1.7
	v20080917-1925:1.7
	v20080911-1728:1.7
	v20080910-1520:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080806-1520:1.7
	v20080722-1827:1.7
	v20080718-1731:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080603-1553:1.7
	v20080528-1052:1.7
	v20080521:1.7
	v20080516-1543:1.7
	v20080516-1143:1.7
	v20080512-1200:1.7
	v20080508-2000:1.7
	v20080507-1326:1.7
	v20080503-1740:1.6
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080411-0411:1.6
	v20080404-1111:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20080215-1500:1.6
	v20080207-0207:1.6
	v20071222-1111:1.6
	v20071214-1111:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071112-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070928-0000:1.6
	v20070921-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.6
	v20070518-1300:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070405-1100:1.6
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	39124821b4de4567;

1.6
date	2007.03.14.14.39.34;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	444245f8090b4567;

1.5
date	2007.01.25.16.57.54;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	271945b8e1904567;

1.4
date	2006.06.06.16.22.23;	author radvorak;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.20.19.36.27;	author radvorak;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.05.17.30.30;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.13.12.45.56;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase;
import org.eclipse.gmf.codegen.gmfgen.GenLanguage;
import org.eclipse.gmf.codegen.gmfgen.ValueExpression;
import org.eclipse.gmf.internal.common.codegen.Conversions;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Value Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.ValueExpressionImpl#getBody <em>Body</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.ValueExpressionImpl#getLangName <em>Lang Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.ValueExpressionImpl#getProvider <em>Provider</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
	/**
	 * The default value of the '{@@link #getBody() <em>Body</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBody()
	 * @@generated
	 * @@ordered
	 */
	protected static final String BODY_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getBody() <em>Body</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBody()
	 * @@generated
	 * @@ordered
	 */
	protected String body = BODY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getLangName() <em>Lang Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLangName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LANG_NAME_EDEFAULT = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ValueExpressionImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getValueExpression();
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getBody() {
		return body;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBody(String newBody) {
		String oldBody = body;
		body = newBody;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.VALUE_EXPRESSION__BODY, oldBody, body));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLangName() {
		GenLanguage langEnum = getProvider() == null ? null : getProvider().getLanguage();
		return (langEnum != null) ? langEnum.getName() : ""; //$NON-NLS-1$
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenExpressionProviderBase getProvider() {
		if (eContainerFeatureID != GMFGenPackage.VALUE_EXPRESSION__PROVIDER) return null;
		return (GenExpressionProviderBase)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getBodyString() {
		return Conversions.toStringLiteral(getBody());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.VALUE_EXPRESSION__PROVIDER:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.VALUE_EXPRESSION__PROVIDER, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.VALUE_EXPRESSION__PROVIDER:
				return eBasicSetContainer(null, GMFGenPackage.VALUE_EXPRESSION__PROVIDER, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.VALUE_EXPRESSION__PROVIDER:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__EXPRESSIONS, GenExpressionProviderBase.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.VALUE_EXPRESSION__BODY:
				return getBody();
			case GMFGenPackage.VALUE_EXPRESSION__LANG_NAME:
				return getLangName();
			case GMFGenPackage.VALUE_EXPRESSION__PROVIDER:
				return getProvider();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.VALUE_EXPRESSION__BODY:
				setBody((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.VALUE_EXPRESSION__BODY:
				setBody(BODY_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.VALUE_EXPRESSION__BODY:
				return BODY_EDEFAULT == null ? body != null : !BODY_EDEFAULT.equals(body);
			case GMFGenPackage.VALUE_EXPRESSION__LANG_NAME:
				return LANG_NAME_EDEFAULT == null ? getLangName() != null : !LANG_NAME_EDEFAULT.equals(getLangName());
			case GMFGenPackage.VALUE_EXPRESSION__PROVIDER:
				return getProvider() != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (body: ");
		result.append(body);
		result.append(')');
		return result.toString();
	}

} //ValueExpressionImpl
@


1.6
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d10 1
d12 1
d16 1
a28 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.ValueExpressionImpl#getLanguage <em>Language</em>}</li>
d30 1
a57 20
	 * The default value of the '{@@link #getLanguage() <em>Language</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLanguage()
	 * @@generated
	 * @@ordered
	 */
	protected static final GenLanguage LANGUAGE_EDEFAULT = GenLanguage.OCL_LITERAL;

	/**
	 * The cached value of the '{@@link #getLanguage() <em>Language</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLanguage()
	 * @@generated
	 * @@ordered
	 */
	protected GenLanguage language = LANGUAGE_EDEFAULT;

	/**
a84 9

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public boolean isOCLExpression() {
		return GenLanguage.OCL_LITERAL.equals(getLanguage());
	}
d110 10
d122 12
a133 2
	public GenLanguage getLanguage() {
		return language;
d141 9
a149 5
	public void setLanguage(GenLanguage newLanguage) {
		GenLanguage oldLanguage = language;
		language = newLanguage == null ? LANGUAGE_EDEFAULT : newLanguage;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.VALUE_EXPRESSION__LANGUAGE, oldLanguage, language));
d155 1
a155 1
	 * @@generated NOT
d157 7
a163 3
	public String getLangName() {
		GenLanguage langEnum = getLanguage();
		return (langEnum != null) ? langEnum.getName() : ""; //$NON-NLS-1$
d169 1
a169 1
	 * @@generated NOT
d171 7
a177 2
	public String getBodyString() {
		return Conversions.toStringLiteral(getBody());
a189 2
			case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE:
				return getLanguage();
d192 2
a208 3
			case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE:
				setLanguage((GenLanguage)newValue);
				return;
a223 3
			case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE:
				setLanguage(LANGUAGE_EDEFAULT);
				return;
a237 2
			case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE:
				return language != LANGUAGE_EDEFAULT;
d240 2
a257 2
		result.append(", language: ");
		result.append(language);
@


1.5
log
@Revriting BaseItemSemanticEditPolicy to xpand
@
text
@d98 1
d178 1
d196 1
d214 1
d232 1
d250 1
@


1.4
log
@#145042 Introduce expression Language enumeration into gmfmap, gfmgen models  instead of plain text attribute
@
text
@d16 1
d166 9
@


1.3
log
@#136672 use common expression accessor with audits
@
text
@d14 1
d26 1
d61 1
a61 1
	protected static final String LANGUAGE_EDEFAULT = "ocl";
d71 11
a81 1
	protected String language = LANGUAGE_EDEFAULT;
d107 1
a107 1
		return "ocl".equals(getLanguage()); //$NON-NLS-1$
d136 1
a136 1
	public String getLanguage() {
d145 3
a147 3
	public void setLanguage(String newLanguage) {
		String oldLanguage = language;
		language = newLanguage;
d155 10
d173 2
d190 1
a190 1
				setLanguage((String)newValue);
d223 3
a225 1
				return LANGUAGE_EDEFAULT == null ? language != null : !LANGUAGE_EDEFAULT.equals(language);
@


1.2
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d92 9
@


1.1
log
@[rdvorak] #112097 genmodel support to use expression evaluation to choose editpart (visual representation)
@
text
@a9 1

a10 2
import org.eclipse.emf.ecore.EStructuralFeature;

a12 1

d136 2
a137 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d143 1
a143 1
		return eDynamicGet(eFeature, resolve);
d151 2
a152 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d160 1
a160 1
		eDynamicSet(eFeature, newValue);
d168 2
a169 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d177 1
a177 1
		eDynamicUnset(eFeature);
d185 2
a186 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d192 1
a192 1
		return eDynamicIsSet(eFeature);
@

