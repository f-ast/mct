head	1.25;
access;
symbols
	v20081022-1925:1.25
	v20081015-1925:1.25
	v20081008-1925:1.25
	v20081001-1925:1.25
	v20080930-1130:1.25
	v20080926-1245:1.25
	v20080924-1925:1.25
	v20080917-1925:1.24
	v20080911-1728:1.24
	v20080910-1520:1.24
	v20080903-1520:1.24
	v20080827-1520:1.23
	v20080813-1520:1.22
	v20080806-1520:1.22
	v20080722-1827:1.22
	v20080718-1731:1.22
	v20080716-1600:1.22
	v20080716-1642:1.22
	R2_1_maintenance:1.22.0.2
	Root_R2_1_maintenance:1.22
	R2_1_0:1.22
	v20080610-1132:1.22
	v20080603-1553:1.22
	v20080528-1052:1.22
	v20080521:1.22
	v20080516-1543:1.22
	v20080516-1143:1.22
	v20080512-1200:1.22
	v20080508-2000:1.22
	v20080507-1326:1.22
	v20080503-1740:1.22
	v20080501-1739:1.22
	v20080425-1959:1.22
	v20080417-1610:1.22
	v20080411-0411:1.22
	v20080404-1111:1.22
	v20080322-0000:1.22
	v20080222-1200:1.21
	v20080215-1500:1.21
	v20080207-0207:1.20.2.1
	v20071222-1111:1.21
	v20071214-1111:1.21
	v20071130-1111:1.21
	v20071124-0000:1.20.2.1
	v20071112-0000:1.21
	v20071108-0000:1.21
	v20071003-0000:1.21
	v20070928-0000:1.20.2.1
	v20070921-0000:1.20.2.1
	v20070915-0000:1.20.2.1
	v20070903-0000:1.20
	v20070809-0000:1.20
	R2_0_maintenance:1.20.0.2
	R2_0:1.20
	R4_20:1.20
	v20070621-0000:1.20
	RC3_20:1.20
	v20070614-1400:1.20
	v20070608-1300:1.20
	v20070605-1400:1.20
	v20070601-1400:1.20
	v20070525-1500:1.20
	v20070520-1200:1.20
	v20070518-1300:1.20
	v20070504-1000:1.19
	v20070427-0600:1.18
	v20070420-1000:1.18
	v20070413-1300:1.18
	v20070405-1100:1.18
	v20070403-1500:1.18
	v20070330-1300:1.18
	v20060330-1300:1.18
	v20070322-1100:1.18
	v20060316-0600:1.18
	v20070307-0700:1.17
	v20070301-1200:1.17
	v20070228-2000:1.17
	v20070221-1500:1.17
	v20070208-1800:1.17
	v20070202-0200:1.11
	v20070103-0300:1.15
	M4_20:1.15
	v20061222-1800:1.15
	v20061218-1200:1.15
	v20061214-0000:1.15
	v20061120-1300:1.15
	M3_20:1.15
	v20061117-0800:1.15
	v20061027-1200:1.11
	v20061020-1000:1.11
	v20061013-1330:1.15
	v20060919-0800:1.11
	v20060907-1100:1.11
	M1_20:1.11
	v20060904-1500:1.11
	v20060824-1600:1.11
	v20060817-1500:1.11
	v20060728-0500:1.11
	v20060713-1700:1.11
	R1_0_maintenance:1.11.0.2
	R1_0:1.11
	v20060627-1200:1.11
	v20060626-1420:1.11
	v20060620-0400:1.11
	v20060616-1400:1.11
	v20060616-1200:1.11
	v20060609-1400:1.10
	v20060531-1730:1.10
	v20060530-1930:1.10
	v20060526-1200:1.10
	v20060519-1300:1.9
	v20060519-0800:1.9
	v20060512-1000:1.9
	I20060512-1000:1.9
	I20060505-1400:1.9
	I20060428-1300:1.9
	I20060424-0500:1.9
	I20060424-0300:1.9
	M6_10:1.9
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.6
	I20060216-1945:1.5
	I20060210-1715:1.4
	I20060209-1815:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.25
date	2008.09.23.14.54.39;	author atikhomirov;	state Exp;
branches;
next	1.24;
commitid	2569e48d903244567;

1.24
date	2008.08.29.16.10.03;	author atikhomirov;	state Exp;
branches;
next	1.23;
commitid	4a1948b81f524567;

1.23
date	2008.08.25.16.53.20;	author atikhomirov;	state Exp;
branches;
next	1.22;
commitid	21e48b2e3764567;

1.22
date	2008.02.27.17.30.21;	author atikhomirov;	state Exp;
branches;
next	1.21;
commitid	22cf47c59e244567;

1.21
date	2007.09.07.18.16.50;	author dstadnik;	state Exp;
branches;
next	1.20;
commitid	5d1f46e195874567;

1.20
date	2007.05.11.16.01.31;	author ashatalin;	state Exp;
branches
	1.20.2.1;
next	1.19;
commitid	44f84644934f4567;

1.19
date	2007.05.04.11.55.25;	author dstadnik;	state Exp;
branches;
next	1.18;
commitid	64c2463b1f274567;

1.18
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.17;
commitid	444245f8090b4567;

1.17
date	2007.02.08.19.31.57;	author atikhomirov;	state Exp;
branches;
next	1.16;
commitid	2f8045cb7a9f4567;

1.16
date	2007.02.08.18.06.49;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	56b45cb66aa4567;

1.15
date	2006.09.27.10.04.42;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.09.15.20.44.31;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.09.12.12.08.03;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.09.11.18.21.36;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.09.19.39.00;	author radvorak;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.26.14.16.24;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2006.04.13.15.41.17;	author radvorak;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.07.15.45.28;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.03.18.32.30;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.17.12.02.07;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.15.18.59.31;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.16.06.20;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.08.13.05.28;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.08.12.28.12;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.08.00.17.46;	author atikhomirov;	state Exp;
branches;
next	;

1.20.2.1
date	2007.09.07.18.10.38;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.25
log
@[174961] Code generation support for custom actions
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Gen Editor Generator</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getAudits <em>Audits</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getMetrics <em>Metrics</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDiagram <em>Diagram</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getPlugin <em>Plugin</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getEditor <em>Editor</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getNavigator <em>Navigator</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDiagramUpdater <em>Diagram Updater</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getPropertySheet <em>Property Sheet</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getApplication <em>Application</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDomainGenModel <em>Domain Gen Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getPackageNamePrefix <em>Package Name Prefix</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getModelID <em>Model ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#isSameFileForDiagramAndModel <em>Same File For Diagram And Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDiagramFileExtension <em>Diagram File Extension</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDomainFileExtension <em>Domain File Extension</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#isDynamicTemplates <em>Dynamic Templates</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getTemplateDirectory <em>Template Directory</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getCopyrightText <em>Copyright Text</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getExpressionProviders <em>Expression Providers</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getModelAccess <em>Model Access</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getLabelParsers <em>Label Parsers</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getContextMenus <em>Context Menus</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator()
 * @@model
 * @@generated
 */
public interface GenEditorGenerator extends EObject {
	/**
	 * Returns the value of the '<em><b>Audits</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Audits</em>' containment reference.
	 * @@see #setAudits(GenAuditRoot)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_Audits()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 * @@generated
	 */
	GenAuditRoot getAudits();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getAudits <em>Audits</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Audits</em>' containment reference.
	 * @@see #getAudits()
	 * @@generated
	 */
	void setAudits(GenAuditRoot value);

	/**
	 * Returns the value of the '<em><b>Metrics</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenMetricContainer#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Metrics</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Metrics</em>' containment reference.
	 * @@see #setMetrics(GenMetricContainer)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_Metrics()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenMetricContainer#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 * @@generated
	 */
	GenMetricContainer getMetrics();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getMetrics <em>Metrics</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Metrics</em>' containment reference.
	 * @@see #getMetrics()
	 * @@generated
	 */
	void setMetrics(GenMetricContainer value);

	/**
	 * Returns the value of the '<em><b>Diagram</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagram#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram</em>' containment reference.
	 * @@see #setDiagram(GenDiagram)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_Diagram()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagram#getEditorGen
	 * @@model opposite="editorGen" containment="true" required="true"
	 * @@generated
	 */
	GenDiagram getDiagram();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDiagram <em>Diagram</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram</em>' containment reference.
	 * @@see #getDiagram()
	 * @@generated
	 */
	void setDiagram(GenDiagram value);

	/**
	 * Returns the value of the '<em><b>Plugin</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenPlugin#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Plugin</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Plugin</em>' containment reference.
	 * @@see #setPlugin(GenPlugin)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_Plugin()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPlugin#getEditorGen
	 * @@model opposite="editorGen" containment="true" required="true"
	 * @@generated
	 */
	GenPlugin getPlugin();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getPlugin <em>Plugin</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Plugin</em>' containment reference.
	 * @@see #getPlugin()
	 * @@generated
	 */
	void setPlugin(GenPlugin value);

	/**
	 * Returns the value of the '<em><b>Editor</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorView#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Editor</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Editor</em>' containment reference.
	 * @@see #setEditor(GenEditorView)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_Editor()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenEditorView#getEditorGen
	 * @@model opposite="editorGen" containment="true" required="true"
	 * @@generated
	 */
	GenEditorView getEditor();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getEditor <em>Editor</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Editor</em>' containment reference.
	 * @@see #getEditor()
	 * @@generated
	 */
	void setEditor(GenEditorView value);

	/**
	 * Returns the value of the '<em><b>Navigator</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenNavigator#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Navigator</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Navigator</em>' containment reference.
	 * @@see #setNavigator(GenNavigator)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_Navigator()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenNavigator#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 * @@generated
	 */
	GenNavigator getNavigator();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getNavigator <em>Navigator</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Navigator</em>' containment reference.
	 * @@see #getNavigator()
	 * @@generated
	 */
	void setNavigator(GenNavigator value);

	/**
	 * Returns the value of the '<em><b>Diagram Updater</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramUpdater#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Updater</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Updater</em>' containment reference.
	 * @@see #setDiagramUpdater(GenDiagramUpdater)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_DiagramUpdater()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenDiagramUpdater#getEditorGen
	 * @@model opposite="editorGen" containment="true" required="true"
	 * @@generated
	 */
	GenDiagramUpdater getDiagramUpdater();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDiagramUpdater <em>Diagram Updater</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Updater</em>' containment reference.
	 * @@see #getDiagramUpdater()
	 * @@generated
	 */
	void setDiagramUpdater(GenDiagramUpdater value);

	/**
	 * Returns the value of the '<em><b>Property Sheet</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenPropertySheet#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Property Sheet</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Property Sheet</em>' containment reference.
	 * @@see #setPropertySheet(GenPropertySheet)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_PropertySheet()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenPropertySheet#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 * @@generated
	 */
	GenPropertySheet getPropertySheet();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getPropertySheet <em>Property Sheet</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Property Sheet</em>' containment reference.
	 * @@see #getPropertySheet()
	 * @@generated
	 */
	void setPropertySheet(GenPropertySheet value);

	/**
	 * Returns the value of the '<em><b>Application</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenApplication#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * If application is defined within the model then generator should target RCP
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Application</em>' containment reference.
	 * @@see #setApplication(GenApplication)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_Application()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenApplication#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 * @@generated
	 */
	GenApplication getApplication();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getApplication <em>Application</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Application</em>' containment reference.
	 * @@see #getApplication()
	 * @@generated
	 */
	void setApplication(GenApplication value);

	/**
	 * Returns the value of the '<em><b>Domain Gen Model</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * This is primary EMF genmodel for user's domain model
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Domain Gen Model</em>' reference.
	 * @@see #setDomainGenModel(GenModel)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_DomainGenModel()
	 * @@model
	 * @@generated
	 */
	GenModel getDomainGenModel();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDomainGenModel <em>Domain Gen Model</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Gen Model</em>' reference.
	 * @@see #getDomainGenModel()
	 * @@generated
	 */
	void setDomainGenModel(GenModel value);

	/**
	 * Returns the value of the '<em><b>Package Name Prefix</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Derived from genModel.genPackage[0].getBasePackage() by default
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Package Name Prefix</em>' attribute.
	 * @@see #setPackageNamePrefix(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_PackageNamePrefix()
	 * @@model
	 * @@generated
	 */
	String getPackageNamePrefix();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getPackageNamePrefix <em>Package Name Prefix</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Package Name Prefix</em>' attribute.
	 * @@see #getPackageNamePrefix()
	 * @@generated
	 */
	void setPackageNamePrefix(String value);

	/**
	 * Returns the value of the '<em><b>Model ID</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Model ID</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Model ID</em>' attribute.
	 * @@see #setModelID(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_ModelID()
	 * @@model id="true" required="true"
	 * @@generated
	 */
	String getModelID();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getModelID <em>Model ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Model ID</em>' attribute.
	 * @@see #getModelID()
	 * @@generated
	 */
	void setModelID(String value);

	/**
	 * Returns the value of the '<em><b>Same File For Diagram And Model</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Specified whether editor should create separate file for domain elements if diagram file references no domain model
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Same File For Diagram And Model</em>' attribute.
	 * @@see #setSameFileForDiagramAndModel(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_SameFileForDiagramAndModel()
	 * @@model
	 * @@generated
	 */
	boolean isSameFileForDiagramAndModel();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#isSameFileForDiagramAndModel <em>Same File For Diagram And Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Same File For Diagram And Model</em>' attribute.
	 * @@see #isSameFileForDiagramAndModel()
	 * @@generated
	 */
	void setSameFileForDiagramAndModel(boolean value);

	/**
	 * Returns the value of the '<em><b>Diagram File Extension</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram File Extension</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Distinct even when sameFileForDiagramAndModel is true. On init diagram, we just copy domain model element to new file with that extension. I won't try to set this equal to domainFileExtension
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Diagram File Extension</em>' attribute.
	 * @@see #setDiagramFileExtension(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_DiagramFileExtension()
	 * @@model
	 * @@generated
	 */
	String getDiagramFileExtension();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDiagramFileExtension <em>Diagram File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram File Extension</em>' attribute.
	 * @@see #getDiagramFileExtension()
	 * @@generated
	 */
	void setDiagramFileExtension(String value);

	/**
	 * Returns the value of the '<em><b>Domain File Extension</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * By default, genModel.genPackage[0].getPrefix().toLowerCase(), as in emf/templates/editor/pluign.xmljet
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Domain File Extension</em>' attribute.
	 * @@see #setDomainFileExtension(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_DomainFileExtension()
	 * @@model
	 * @@generated
	 */
	String getDomainFileExtension();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getDomainFileExtension <em>Domain File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain File Extension</em>' attribute.
	 * @@see #getDomainFileExtension()
	 * @@generated
	 */
	void setDomainFileExtension(String value);

	/**
	 * Returns the value of the '<em><b>Dynamic Templates</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Dynamic Templates</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Dynamic Templates</em>' attribute.
	 * @@see #setDynamicTemplates(boolean)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_DynamicTemplates()
	 * @@model default="false"
	 * @@generated
	 */
	boolean isDynamicTemplates();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#isDynamicTemplates <em>Dynamic Templates</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Dynamic Templates</em>' attribute.
	 * @@see #isDynamicTemplates()
	 * @@generated
	 */
	void setDynamicTemplates(boolean value);

	/**
	 * Returns the value of the '<em><b>Template Directory</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Template Directory</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Template Directory</em>' attribute.
	 * @@see #setTemplateDirectory(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_TemplateDirectory()
	 * @@model
	 * @@generated
	 */
	String getTemplateDirectory();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getTemplateDirectory <em>Template Directory</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Template Directory</em>' attribute.
	 * @@see #getTemplateDirectory()
	 * @@generated
	 */
	void setTemplateDirectory(String value);

	/**
	 * Returns the value of the '<em><b>Copyright Text</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Copyright Text</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Copyright Text</em>' attribute.
	 * @@see #setCopyrightText(String)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_CopyrightText()
	 * @@model
	 * @@generated
	 */
	String getCopyrightText();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getCopyrightText <em>Copyright Text</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Copyright Text</em>' attribute.
	 * @@see #getCopyrightText()
	 * @@generated
	 */
	void setCopyrightText(String value);

	/**
	 * Returns the value of the '<em><b>Expression Providers</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Expression Providers</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Expression Providers</em>' containment reference.
	 * @@see #setExpressionProviders(GenExpressionProviderContainer)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_ExpressionProviders()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 * @@generated
	 */
	GenExpressionProviderContainer getExpressionProviders();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getExpressionProviders <em>Expression Providers</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Expression Providers</em>' containment reference.
	 * @@see #getExpressionProviders()
	 * @@generated
	 */
	void setExpressionProviders(GenExpressionProviderContainer value);

	/**
	 * Returns the value of the '<em><b>Model Access</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * If present, specifies dynamic access to domain model(s), without using generated Java code
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Model Access</em>' containment reference.
	 * @@see #setModelAccess(DynamicModelAccess)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_ModelAccess()
	 * @@see org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 * @@generated
	 */
	DynamicModelAccess getModelAccess();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getModelAccess <em>Model Access</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Model Access</em>' containment reference.
	 * @@see #getModelAccess()
	 * @@generated
	 */
	void setModelAccess(DynamicModelAccess value);

	/**
	 * Returns the value of the '<em><b>Label Parsers</b></em>' containment reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.codegen.gmfgen.GenParsers#getEditorGen <em>Editor Gen</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Label Parsers</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * If present, describes access to and types of parser implementations
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Label Parsers</em>' containment reference.
	 * @@see #setLabelParsers(GenParsers)
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_LabelParsers()
	 * @@see org.eclipse.gmf.codegen.gmfgen.GenParsers#getEditorGen
	 * @@model opposite="editorGen" containment="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='labelParsers.oclIsUndefined() implies (diagram.getAllNodes()->forAll(labels->size()=0) and diagram.links->forAll(labels->size()=0) and not diagram.childNodes->exists(oclIsKindOf(GenChildLabelNode)))' description='No label may be declared without a parser'"
	 * @@generated
	 */
	GenParsers getLabelParsers();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator#getLabelParsers <em>Label Parsers</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Label Parsers</em>' containment reference.
	 * @@see #getLabelParsers()
	 * @@generated
	 */
	void setLabelParsers(GenParsers value);

	/**
	 * Returns the value of the '<em><b>Context Menus</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.codegen.gmfgen.GenContextMenu}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Context Menus</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Context Menus</em>' containment reference list.
	 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenEditorGenerator_ContextMenus()
	 * @@model containment="true"
	 * @@generated
	 */
	EList<GenContextMenu> getContextMenus();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Returns all genpackages from domain genmodel
	 * <!-- end-model-doc -->
	 * @@model
	 * @@generated
	 */
	EList<GenPackage> getAllDomainGenPackages(boolean withUsed);

	boolean hasAudits(); // Indicates whether this generator defines at least one AuditRule
} // GenEditorGenerator
@


1.24
log
@[244419] Support for custom parser - finalize parsers/labelmodelfacet relationship
@
text
@d44 1
d622 16
@


1.23
log
@[235113] alternative parser access, step 1: introduce separate entity into genmodel to keep track of attributes related to parsing
@
text
@d597 3
d604 2
a605 1
	 * @@model opposite="editorGen" containment="true" required="true"
a630 11
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Returns true if parser for the specified method is used by diagram editor
	 * <!-- end-model-doc -->
	 * @@model annotation="http://www.eclipse.org/gmf/2006/deprecated documentation='Replaced with GenParsers'"
	 * @@generated
	 */
	boolean requiresParser(LabelTextAccessMethod method);

@


1.22
log
@[150177] phase II, generated facility to perform metamodel operations (like instanceof or metaclass accessors) with dynamic models, new gmfgen options to parameterize codegen.
@
text
@d43 1
d589 28
d633 1
a633 1
	 * @@model
@


1.21
log
@regenerate; add java expr accessor to the model
@
text
@d42 1
d561 27
@


1.20
log
@GenDiagramUpdater created in .gmfgen model
@
text
@d565 1
a565 1
	 * @@model type="org.eclipse.emf.codegen.ecore.genmodel.GenPackage"
@


1.20.2.1
log
@regenerate; add java expr getter to model
@
text
@d565 1
a565 1
	 * @@model
@


1.19
log
@use java 5 if printf parser is used
@
text
@d29 1
d215 28
@


1.18
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d541 11
@


1.17
log
@get rid of GenRuleContainerBase
@
text
@d10 1
d539 1
a539 1
	EList getAllDomainGenPackages(boolean withUsed);
@


1.16
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d74 1
d84 2
a85 1
	 * @@model containment="true"
@


1.15
log
@#114200 Provide an option to generate RCP application
@
text
@d50 1
d54 1
a54 1
	 * @@see #setAudits(GenAuditContainer)
d56 2
a57 1
	 * @@model containment="true"
d60 1
a60 1
	GenAuditContainer getAudits();
d70 1
a70 1
	void setAudits(GenAuditContainer value);
@


1.14
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d29 1
d237 27
@


1.13
log
@GenNavigator is optional.
@
text
@d28 1
d208 28
@


1.12
log
@Model navigator, initial version.
@
text
@d191 1
a191 1
	 * @@model opposite="editorGen" containment="true" required="true"
@


1.11
log
@#144485 Do not generate "o.e.e.v.constraintBindings" extension in plugin.xml if !genDiagram.isValidationEnabled
@
text
@d27 1
d179 28
@


1.10
log
@#114175 allow to create diagram editor without domain model
@
text
@d450 1
@


1.9
log
@[#134511] common access to expressions of different languages
@
text
@d187 1
a187 1
	 * @@model required="true"
@


1.8
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d36 1
d412 28
@


1.7
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d35 1
d385 26
@


1.6
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@d23 1
a46 3
	 * <!-- begin-model-doc -->
	 * Domain meta-model  audit rules definitions
	 * <!-- end-model-doc -->
d66 26
@


1.5
log
@#125175 Allow toolsmith to use different (sub)set of templates for editor code generation
@
text
@d10 2
d359 11
@


1.4
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d30 2
d304 53
@


1.3
log
@file extensions moved out from genDiagram. Distinct property captures extension of domain model file now
@
text
@d23 1
d120 28
d256 3
@


1.2
log
@constant used throughout templates to identify diagram (genModel.getModelName) was extracted as explicit attribute
packagePrefix added
@
text
@d26 3
d194 76
@


1.1
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d24 2
d140 51
@

