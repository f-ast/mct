head	1.16;
access;
symbols
	v20081022-1925:1.16
	v20081015-1925:1.16
	v20081008-1925:1.16
	v20081001-1925:1.16
	v20080930-1130:1.16
	v20080926-1245:1.16
	v20080924-1925:1.16
	v20080917-1925:1.16
	v20080911-1728:1.16
	v20080910-1520:1.16
	v20080903-1520:1.16
	v20080827-1520:1.16
	v20080813-1520:1.16
	v20080806-1520:1.16
	v20080722-1827:1.16
	v20080718-1731:1.16
	v20080716-1600:1.16
	v20080716-1642:1.16
	R2_1_maintenance:1.16.0.2
	Root_R2_1_maintenance:1.16
	R2_1_0:1.16
	v20080610-1132:1.16
	v20080603-1553:1.16
	v20080528-1052:1.16
	v20080521:1.16
	v20080516-1543:1.16
	v20080516-1143:1.16
	v20080512-1200:1.16
	v20080508-2000:1.16
	v20080507-1326:1.16
	v20080503-1740:1.16
	v20080501-1739:1.16
	v20080425-1959:1.16
	v20080417-1610:1.15
	v20080411-0411:1.15
	v20080404-1111:1.15
	v20080322-0000:1.15
	v20080222-1200:1.14
	v20080215-1500:1.14
	v20080207-0207:1.14
	v20071222-1111:1.14
	v20071214-1111:1.14
	v20071130-1111:1.14
	v20071124-0000:1.14
	v20071112-0000:1.14
	v20071108-0000:1.14
	v20071003-0000:1.14
	v20070928-0000:1.14
	v20070921-0000:1.14
	v20070915-0000:1.14
	v20070903-0000:1.14
	v20070809-0000:1.14
	R2_0_maintenance:1.14.0.2
	R2_0:1.14
	R4_20:1.14
	v20070621-0000:1.14
	RC3_20:1.14
	v20070614-1400:1.14
	v20070608-1300:1.13
	v20070605-1400:1.13
	v20070601-1400:1.13
	v20070525-1500:1.13
	v20070520-1200:1.13
	v20070518-1300:1.13
	v20070504-1000:1.13
	v20070427-0600:1.13
	v20070420-1000:1.13
	v20070413-1300:1.13
	v20070405-1100:1.12
	v20070403-1500:1.12
	v20070330-1300:1.12
	v20060330-1300:1.12
	v20070322-1100:1.11
	v20060316-0600:1.9
	v20070307-0700:1.8
	v20070301-1200:1.8
	v20070228-2000:1.8
	v20070221-1500:1.8
	v20070208-1800:1.8
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.6
	v20061218-1200:1.6
	v20061214-0000:1.6
	v20061120-1300:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061013-1330:1.5;
locks; strict;
comment	@# @;
expand	@k@;


1.16
date	2008.04.18.14.43.22;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	2e1d4808b3814567;

1.15
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.14;
commitid	5e5047cd7dd64567;

1.14
date	2007.06.12.15.32.00;	author ashatalin;	state Exp;
branches;
next	1.13;
commitid	7c11466ebc6e4567;

1.13
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.12;
commitid	725b461c97d64567;

1.12
date	2007.03.28.19.33.36;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	6e6d460ac2e04567;

1.11
date	2007.03.20.20.15.02;	author ashatalin;	state Exp;
branches;
next	1.10;
commitid	1c03460040bd4567;

1.10
date	2007.03.16.16.09.53;	author ashatalin;	state Exp;
branches;
next	1.9;
commitid	565445fac1444567;

1.9
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	444245f8090b4567;

1.8
date	2007.01.04.17.37.14;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	40bd459d3b4a4567;

1.7
date	2006.12.28.19.45.51;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	13f545941eec4567;

1.6
date	2006.10.17.19.19.54;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.13.16.30.03;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.06.11.47.59;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.22.13.21.24;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.13.16.11.04;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.11.18.21.36;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.16
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
import org.eclipse.gmf.codegen.gmfgen.GenNavigator;
import org.eclipse.gmf.codegen.gmfgen.GenNavigatorChildReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Navigator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#isGenerateDomainModelNavigator <em>Generate Domain Model Navigator</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getDomainContentExtensionID <em>Domain Content Extension ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getDomainContentExtensionName <em>Domain Content Extension Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getDomainContentExtensionPriority <em>Domain Content Extension Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getDomainContentProviderClassName <em>Domain Content Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getDomainLabelProviderClassName <em>Domain Label Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getDomainModelElementTesterClassName <em>Domain Model Element Tester Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getDomainNavigatorItemClassName <em>Domain Navigator Item Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getEditorGen <em>Editor Gen</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getContentExtensionID <em>Content Extension ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getContentExtensionName <em>Content Extension Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getContentExtensionPriority <em>Content Extension Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getLinkHelperExtensionID <em>Link Helper Extension ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getSorterExtensionID <em>Sorter Extension ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getActionProviderID <em>Action Provider ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getContentProviderClassName <em>Content Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getLabelProviderClassName <em>Label Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getLinkHelperClassName <em>Link Helper Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getSorterClassName <em>Sorter Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getActionProviderClassName <em>Action Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getAbstractNavigatorItemClassName <em>Abstract Navigator Item Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getNavigatorGroupClassName <em>Navigator Group Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getNavigatorItemClassName <em>Navigator Item Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getUriInputTesterClassName <em>Uri Input Tester Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getPackageName <em>Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getChildReferences <em>Child References</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
	/**
	 * The default value of the '{@@link #isGenerateDomainModelNavigator() <em>Generate Domain Model Navigator</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isGenerateDomainModelNavigator()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isGenerateDomainModelNavigator() <em>Generate Domain Model Navigator</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isGenerateDomainModelNavigator()
	 * @@generated
	 * @@ordered
	 */
	protected boolean generateDomainModelNavigator = GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainContentExtensionID() <em>Domain Content Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainContentExtensionID() <em>Domain Content Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected String domainContentExtensionID = DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainContentExtensionName() <em>Domain Content Extension Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentExtensionName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainContentExtensionName() <em>Domain Content Extension Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentExtensionName()
	 * @@generated
	 * @@ordered
	 */
	protected String domainContentExtensionName = DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainContentExtensionPriority() <em>Domain Content Extension Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentExtensionPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainContentExtensionPriority() <em>Domain Content Extension Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentExtensionPriority()
	 * @@generated
	 * @@ordered
	 */
	protected String domainContentExtensionPriority = DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainContentProviderClassName() <em>Domain Content Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainContentProviderClassName() <em>Domain Content Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainContentProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String domainContentProviderClassName = DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainLabelProviderClassName() <em>Domain Label Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainLabelProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainLabelProviderClassName() <em>Domain Label Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainLabelProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String domainLabelProviderClassName = DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainModelElementTesterClassName() <em>Domain Model Element Tester Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainModelElementTesterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainModelElementTesterClassName() <em>Domain Model Element Tester Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainModelElementTesterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String domainModelElementTesterClassName = DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDomainNavigatorItemClassName() <em>Domain Navigator Item Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainNavigatorItemClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDomainNavigatorItemClassName() <em>Domain Navigator Item Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainNavigatorItemClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String domainNavigatorItemClassName = DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContentExtensionID() <em>Content Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTENT_EXTENSION_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getContentExtensionID() <em>Content Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected String contentExtensionID = CONTENT_EXTENSION_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContentExtensionName() <em>Content Extension Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTENT_EXTENSION_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getContentExtensionName() <em>Content Extension Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionName()
	 * @@generated
	 * @@ordered
	 */
	protected String contentExtensionName = CONTENT_EXTENSION_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContentExtensionPriority() <em>Content Extension Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTENT_EXTENSION_PRIORITY_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getContentExtensionPriority() <em>Content Extension Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionPriority()
	 * @@generated
	 * @@ordered
	 */
	protected String contentExtensionPriority = CONTENT_EXTENSION_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getLinkHelperExtensionID() <em>Link Helper Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkHelperExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LINK_HELPER_EXTENSION_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getLinkHelperExtensionID() <em>Link Helper Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkHelperExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected String linkHelperExtensionID = LINK_HELPER_EXTENSION_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getSorterExtensionID() <em>Sorter Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSorterExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SORTER_EXTENSION_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getSorterExtensionID() <em>Sorter Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSorterExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected String sorterExtensionID = SORTER_EXTENSION_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getActionProviderID() <em>Action Provider ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionProviderID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ACTION_PROVIDER_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getActionProviderID() <em>Action Provider ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionProviderID()
	 * @@generated
	 * @@ordered
	 */
	protected String actionProviderID = ACTION_PROVIDER_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContentProviderClassName() <em>Content Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTENT_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getContentProviderClassName() <em>Content Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String contentProviderClassName = CONTENT_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getLabelProviderClassName() <em>Label Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LABEL_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getLabelProviderClassName() <em>Label Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String labelProviderClassName = LABEL_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getLinkHelperClassName() <em>Link Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LINK_HELPER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getLinkHelperClassName() <em>Link Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String linkHelperClassName = LINK_HELPER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getSorterClassName() <em>Sorter Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSorterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SORTER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getSorterClassName() <em>Sorter Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSorterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String sorterClassName = SORTER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getActionProviderClassName() <em>Action Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ACTION_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getActionProviderClassName() <em>Action Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String actionProviderClassName = ACTION_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getAbstractNavigatorItemClassName() <em>Abstract Navigator Item Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAbstractNavigatorItemClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getAbstractNavigatorItemClassName() <em>Abstract Navigator Item Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAbstractNavigatorItemClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String abstractNavigatorItemClassName = ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNavigatorGroupClassName() <em>Navigator Group Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNavigatorGroupClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getNavigatorGroupClassName() <em>Navigator Group Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNavigatorGroupClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String navigatorGroupClassName = NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNavigatorItemClassName() <em>Navigator Item Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNavigatorItemClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getNavigatorItemClassName() <em>Navigator Item Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNavigatorItemClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String navigatorItemClassName = NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getUriInputTesterClassName() <em>Uri Input Tester Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getUriInputTesterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String URI_INPUT_TESTER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getUriInputTesterClassName() <em>Uri Input Tester Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getUriInputTesterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String uriInputTesterClassName = URI_INPUT_TESTER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String packageName = PACKAGE_NAME_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getChildReferences() <em>Child References</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getChildReferences()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenNavigatorChildReference> childReferences;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenNavigatorImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenNavigator();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenEditorGenerator getEditorGen() {
		if (eContainerFeatureID != GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN) return null;
		return (GenEditorGenerator)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getContentExtensionIDGen() {
		return contentExtensionID;
	}

	public String getContentExtensionID() {
		String value = getContentExtensionIDGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPlugin().getID() + ".resourceContent";
		}
		return value;
	}


	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContentExtensionID(String newContentExtensionID) {
		String oldContentExtensionID = contentExtensionID;
		contentExtensionID = newContentExtensionID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_ID, oldContentExtensionID, contentExtensionID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getContentExtensionNameGen() {
		return contentExtensionName;
	}

	public String getContentExtensionName() {
		String value = getContentExtensionNameGen();
		if (isEmpty(value)) {
			value = "%navigatorContentName";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContentExtensionName(String newContentExtensionName) {
		String oldContentExtensionName = contentExtensionName;
		contentExtensionName = newContentExtensionName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_NAME, oldContentExtensionName, contentExtensionName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getContentExtensionPriorityGen() {
		return contentExtensionPriority;
	}

	public String getContentExtensionPriority() {
		String value = getContentExtensionPriorityGen();
		if (isEmpty(value)) {
			value = "normal"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContentExtensionPriority(String newContentExtensionPriority) {
		String oldContentExtensionPriority = contentExtensionPriority;
		contentExtensionPriority = newContentExtensionPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_PRIORITY, oldContentExtensionPriority, contentExtensionPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLinkHelperExtensionIDGen() {
		return linkHelperExtensionID;
	}

	public String getLinkHelperExtensionID() {
		String value = getLinkHelperExtensionIDGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPlugin().getID() + ".navigatorLinkHelper";
		}
		return value;
	}


	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLinkHelperExtensionID(String newLinkHelperExtensionID) {
		String oldLinkHelperExtensionID = linkHelperExtensionID;
		linkHelperExtensionID = newLinkHelperExtensionID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_EXTENSION_ID, oldLinkHelperExtensionID, linkHelperExtensionID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getSorterExtensionIDGen() {
		return sorterExtensionID;
	}

	public String getSorterExtensionID() {
		String value = getSorterExtensionIDGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPlugin().getID() + ".navigatorSorter";
		}
		return value;
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSorterExtensionID(String newSorterExtensionID) {
		String oldSorterExtensionID = sorterExtensionID;
		sorterExtensionID = newSorterExtensionID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__SORTER_EXTENSION_ID, oldSorterExtensionID, sorterExtensionID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getActionProviderIDGen() {
		return actionProviderID;
	}

	public String getActionProviderID() {
		String value = getActionProviderIDGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPlugin().getID() + ".navigatorActionProvider";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setActionProviderID(String newActionProviderID) {
		String oldActionProviderID = actionProviderID;
		actionProviderID = newActionProviderID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_ID, oldActionProviderID, actionProviderID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getContentProviderClassNameGen() {
		return contentProviderClassName;
	}

	public String getContentProviderClassName() {
		String value = getContentProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NavigatorContentProvider"; //$NON-NLS-1$
		}
		return value;
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContentProviderClassName(String newContentProviderClassName) {
		String oldContentProviderClassName = contentProviderClassName;
		contentProviderClassName = newContentProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__CONTENT_PROVIDER_CLASS_NAME, oldContentProviderClassName, contentProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLabelProviderClassNameGen() {
		return labelProviderClassName;
	}

	public String getLabelProviderClassName() {
		String value = getLabelProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NavigatorLabelProvider"; //$NON-NLS-1$
		}
		return value;
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLabelProviderClassName(String newLabelProviderClassName) {
		String oldLabelProviderClassName = labelProviderClassName;
		labelProviderClassName = newLabelProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__LABEL_PROVIDER_CLASS_NAME, oldLabelProviderClassName, labelProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLinkHelperClassNameGen() {
		return linkHelperClassName;
	}

	public String getLinkHelperClassName() {
		String value = getLinkHelperClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NavigatorLinkHelper"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLinkHelperClassName(String newLinkHelperClassName) {
		String oldLinkHelperClassName = linkHelperClassName;
		linkHelperClassName = newLinkHelperClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_CLASS_NAME, oldLinkHelperClassName, linkHelperClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getSorterClassNameGen() {
		return sorterClassName;
	}

	public String getSorterClassName() {
		String value = getSorterClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NavigatorSorter"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSorterClassName(String newSorterClassName) {
		String oldSorterClassName = sorterClassName;
		sorterClassName = newSorterClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__SORTER_CLASS_NAME, oldSorterClassName, sorterClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getActionProviderClassNameGen() {
		return actionProviderClassName;
	}

	public String getActionProviderClassName() {
		String value = getActionProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NavigatorActionProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setActionProviderClassName(String newActionProviderClassName) {
		String oldActionProviderClassName = actionProviderClassName;
		actionProviderClassName = newActionProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_CLASS_NAME, oldActionProviderClassName, actionProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getAbstractNavigatorItemClassNameGen() {
		return abstractNavigatorItemClassName;
	}

	public String getAbstractNavigatorItemClassName() {
		String value = getAbstractNavigatorItemClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "AbstractNavigatorItem"; //$NON-NLS-1$
		}
		return value;

	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setAbstractNavigatorItemClassName(String newAbstractNavigatorItemClassName) {
		String oldAbstractNavigatorItemClassName = abstractNavigatorItemClassName;
		abstractNavigatorItemClassName = newAbstractNavigatorItemClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME, oldAbstractNavigatorItemClassName, abstractNavigatorItemClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getNavigatorGroupClassNameGen() {
		return navigatorGroupClassName;
	}

	public String getNavigatorGroupClassName() {
		String value = getNavigatorGroupClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NavigatorGroup"; //$NON-NLS-1$
		}
		return value;	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNavigatorGroupClassName(String newNavigatorGroupClassName) {
		String oldNavigatorGroupClassName = navigatorGroupClassName;
		navigatorGroupClassName = newNavigatorGroupClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_GROUP_CLASS_NAME, oldNavigatorGroupClassName, navigatorGroupClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getNavigatorItemClassNameGen() {
		return navigatorItemClassName;
	}

	public String getNavigatorItemClassName() {
		String value = getNavigatorItemClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NavigatorItem"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNavigatorItemClassName(String newNavigatorItemClassName) {
		String oldNavigatorItemClassName = navigatorItemClassName;
		navigatorItemClassName = newNavigatorItemClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_ITEM_CLASS_NAME, oldNavigatorItemClassName, navigatorItemClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getUriInputTesterClassNameGen() {
		return uriInputTesterClassName;
	}
	
	public String getUriInputTesterClassName() {
		String value = getUriInputTesterClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "UriEditorInputTester"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setUriInputTesterClassName(String newUriInputTesterClassName) {
		String oldUriInputTesterClassName = uriInputTesterClassName;
		uriInputTesterClassName = newUriInputTesterClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__URI_INPUT_TESTER_CLASS_NAME, oldUriInputTesterClassName, uriInputTesterClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPackageNameGen() {
		return packageName;
	}

	public String getPackageName() {
		String value = getPackageNameGen();
		if (value == null) {
			value = getEditorGen().getPackageNamePrefix() + ".navigator";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPackageName(String newPackageName) {
		String oldPackageName = packageName;
		packageName = newPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__PACKAGE_NAME, oldPackageName, packageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isGenerateDomainModelNavigator() {
		return generateDomainModelNavigator;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setGenerateDomainModelNavigator(boolean newGenerateDomainModelNavigator) {
		boolean oldGenerateDomainModelNavigator = generateDomainModelNavigator;
		generateDomainModelNavigator = newGenerateDomainModelNavigator;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR, oldGenerateDomainModelNavigator, generateDomainModelNavigator));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainContentExtensionIDGen() {
		return domainContentExtensionID;
	}
	
	public String getDomainContentExtensionID() {
		String value = getDomainContentExtensionIDGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPlugin().getID() + ".domainResourceContent";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainContentExtensionID(String newDomainContentExtensionID) {
		String oldDomainContentExtensionID = domainContentExtensionID;
		domainContentExtensionID = newDomainContentExtensionID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID, oldDomainContentExtensionID, domainContentExtensionID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainContentExtensionNameGen() {
		return domainContentExtensionName;
	}
	
	public String getDomainContentExtensionName() {
		String value = getDomainContentExtensionNameGen();
		if (isEmpty(value)) {
			value = "%domainNavigatorContentName";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainContentExtensionName(String newDomainContentExtensionName) {
		String oldDomainContentExtensionName = domainContentExtensionName;
		domainContentExtensionName = newDomainContentExtensionName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME, oldDomainContentExtensionName, domainContentExtensionName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainContentExtensionPriorityGen() {
		return domainContentExtensionPriority;
	}
	
	public String getDomainContentExtensionPriority() {
		String value = getDomainContentExtensionPriorityGen();
		if (isEmpty(value)) {
			value = "normal"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainContentExtensionPriority(String newDomainContentExtensionPriority) {
		String oldDomainContentExtensionPriority = domainContentExtensionPriority;
		domainContentExtensionPriority = newDomainContentExtensionPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY, oldDomainContentExtensionPriority, domainContentExtensionPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainContentProviderClassNameGen() {
		return domainContentProviderClassName;
	}
	
	public String getDomainContentProviderClassName() {
		String value = getDomainContentProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DomainNavigatorContentProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainContentProviderClassName(String newDomainContentProviderClassName) {
		String oldDomainContentProviderClassName = domainContentProviderClassName;
		domainContentProviderClassName = newDomainContentProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME, oldDomainContentProviderClassName, domainContentProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainLabelProviderClassNameGen() {
		return domainLabelProviderClassName;
	}
	
	public String getDomainLabelProviderClassName() {
		String value = getDomainLabelProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DomainNavigatorLabelProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainLabelProviderClassName(String newDomainLabelProviderClassName) {
		String oldDomainLabelProviderClassName = domainLabelProviderClassName;
		domainLabelProviderClassName = newDomainLabelProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME, oldDomainLabelProviderClassName, domainLabelProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainModelElementTesterClassNameGen() {
		return domainModelElementTesterClassName;
	}
	
	public String getDomainModelElementTesterClassName() {
		String value = getDomainModelElementTesterClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DomainModelElementTester"; //$NON-NLS-1$
		}
		return value;
	}	

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainModelElementTesterClassName(String newDomainModelElementTesterClassName) {
		String oldDomainModelElementTesterClassName = domainModelElementTesterClassName;
		domainModelElementTesterClassName = newDomainModelElementTesterClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME, oldDomainModelElementTesterClassName, domainModelElementTesterClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDomainNavigatorItemClassNameGen() {
		return domainNavigatorItemClassName;
	}
	
	public String getDomainNavigatorItemClassName() {
		String value = getDomainNavigatorItemClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DomainNavigatorItem"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainNavigatorItemClassName(String newDomainNavigatorItemClassName) {
		String oldDomainNavigatorItemClassName = domainNavigatorItemClassName;
		domainNavigatorItemClassName = newDomainNavigatorItemClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_NAVIGATOR_ITEM_CLASS_NAME, oldDomainNavigatorItemClassName, domainNavigatorItemClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenNavigatorChildReference> getChildReferences() {
		if (childReferences == null) {
			childReferences = new EObjectContainmentWithInverseEList<GenNavigatorChildReference>(GenNavigatorChildReference.class, this, GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR);
		}
		return childReferences;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getContentProviderQualifiedClassName() {
		return getPackageName() + '.' + getContentProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLabelProviderQualifiedClassName() {
		return getPackageName() + '.' + getLabelProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLinkHelperQualifiedClassName() {
		return getPackageName() + '.' + getLinkHelperClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getSorterQualifiedClassName() {
		return getPackageName() + '.' + getSorterClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getActionProviderQualifiedClassName() {
		return getPackageName() + '.' + getActionProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getAbstractNavigatorItemQualifiedClassName() {
		return getPackageName() + '.' + getAbstractNavigatorItemClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getNavigatorGroupQualifiedClassName() {
		return getPackageName() + '.' + getNavigatorGroupClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getNavigatorItemQualifiedClassName() {
		return getPackageName() + '.' + getNavigatorItemClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getUriInputTesterQualifiedClassName() {
		return getEditorGen().getEditor().getPackageName() + '.' + getUriInputTesterClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDomainContentProviderQualifiedClassName() {
		return getPackageName() + '.' + getDomainContentProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDomainLabelProviderQualifiedClassName() {
		return getPackageName() + '.' + getDomainLabelProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDomainModelElementTesterQualifiedClassName() {
		return getEditorGen().getEditor().getPackageName() + '.' + getDomainModelElementTesterClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDomainNavigatorItemQualifiedClassName() {
		return getPackageName() + '.' + getDomainNavigatorItemClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, msgs);
			case GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getChildReferences()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN:
				return eBasicSetContainer(null, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, msgs);
			case GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES:
				return ((InternalEList<?>)getChildReferences()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR, GenEditorGenerator.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR:
				return isGenerateDomainModelNavigator() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID:
				return getDomainContentExtensionID();
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME:
				return getDomainContentExtensionName();
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY:
				return getDomainContentExtensionPriority();
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME:
				return getDomainContentProviderClassName();
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME:
				return getDomainLabelProviderClassName();
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME:
				return getDomainModelElementTesterClassName();
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_NAVIGATOR_ITEM_CLASS_NAME:
				return getDomainNavigatorItemClassName();
			case GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN:
				return getEditorGen();
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_ID:
				return getContentExtensionID();
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_NAME:
				return getContentExtensionName();
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_PRIORITY:
				return getContentExtensionPriority();
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_EXTENSION_ID:
				return getLinkHelperExtensionID();
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_EXTENSION_ID:
				return getSorterExtensionID();
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_ID:
				return getActionProviderID();
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_PROVIDER_CLASS_NAME:
				return getContentProviderClassName();
			case GMFGenPackage.GEN_NAVIGATOR__LABEL_PROVIDER_CLASS_NAME:
				return getLabelProviderClassName();
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_CLASS_NAME:
				return getLinkHelperClassName();
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_CLASS_NAME:
				return getSorterClassName();
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_CLASS_NAME:
				return getActionProviderClassName();
			case GMFGenPackage.GEN_NAVIGATOR__ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME:
				return getAbstractNavigatorItemClassName();
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_GROUP_CLASS_NAME:
				return getNavigatorGroupClassName();
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_ITEM_CLASS_NAME:
				return getNavigatorItemClassName();
			case GMFGenPackage.GEN_NAVIGATOR__URI_INPUT_TESTER_CLASS_NAME:
				return getUriInputTesterClassName();
			case GMFGenPackage.GEN_NAVIGATOR__PACKAGE_NAME:
				return getPackageName();
			case GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES:
				return getChildReferences();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR:
				setGenerateDomainModelNavigator(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID:
				setDomainContentExtensionID((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME:
				setDomainContentExtensionName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY:
				setDomainContentExtensionPriority((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME:
				setDomainContentProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME:
				setDomainLabelProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME:
				setDomainModelElementTesterClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_NAVIGATOR_ITEM_CLASS_NAME:
				setDomainNavigatorItemClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_ID:
				setContentExtensionID((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_NAME:
				setContentExtensionName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_PRIORITY:
				setContentExtensionPriority((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_EXTENSION_ID:
				setLinkHelperExtensionID((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_EXTENSION_ID:
				setSorterExtensionID((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_ID:
				setActionProviderID((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_PROVIDER_CLASS_NAME:
				setContentProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__LABEL_PROVIDER_CLASS_NAME:
				setLabelProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_CLASS_NAME:
				setLinkHelperClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_CLASS_NAME:
				setSorterClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_CLASS_NAME:
				setActionProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME:
				setAbstractNavigatorItemClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_GROUP_CLASS_NAME:
				setNavigatorGroupClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_ITEM_CLASS_NAME:
				setNavigatorItemClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__URI_INPUT_TESTER_CLASS_NAME:
				setUriInputTesterClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__PACKAGE_NAME:
				setPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES:
				getChildReferences().clear();
				getChildReferences().addAll((Collection<? extends GenNavigatorChildReference>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR:
				setGenerateDomainModelNavigator(GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID:
				setDomainContentExtensionID(DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME:
				setDomainContentExtensionName(DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY:
				setDomainContentExtensionPriority(DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME:
				setDomainContentProviderClassName(DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME:
				setDomainLabelProviderClassName(DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME:
				setDomainModelElementTesterClassName(DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_NAVIGATOR_ITEM_CLASS_NAME:
				setDomainNavigatorItemClassName(DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_ID:
				setContentExtensionID(CONTENT_EXTENSION_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_NAME:
				setContentExtensionName(CONTENT_EXTENSION_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_PRIORITY:
				setContentExtensionPriority(CONTENT_EXTENSION_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_EXTENSION_ID:
				setLinkHelperExtensionID(LINK_HELPER_EXTENSION_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_EXTENSION_ID:
				setSorterExtensionID(SORTER_EXTENSION_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_ID:
				setActionProviderID(ACTION_PROVIDER_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_PROVIDER_CLASS_NAME:
				setContentProviderClassName(CONTENT_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__LABEL_PROVIDER_CLASS_NAME:
				setLabelProviderClassName(LABEL_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_CLASS_NAME:
				setLinkHelperClassName(LINK_HELPER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_CLASS_NAME:
				setSorterClassName(SORTER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_CLASS_NAME:
				setActionProviderClassName(ACTION_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME:
				setAbstractNavigatorItemClassName(ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_GROUP_CLASS_NAME:
				setNavigatorGroupClassName(NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_ITEM_CLASS_NAME:
				setNavigatorItemClassName(NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__URI_INPUT_TESTER_CLASS_NAME:
				setUriInputTesterClassName(URI_INPUT_TESTER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__PACKAGE_NAME:
				setPackageName(PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES:
				getChildReferences().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR:
				return generateDomainModelNavigator != GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT;
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID:
				return DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT == null ? domainContentExtensionID != null : !DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT.equals(domainContentExtensionID);
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME:
				return DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT == null ? domainContentExtensionName != null : !DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT.equals(domainContentExtensionName);
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY:
				return DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT == null ? domainContentExtensionPriority != null : !DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT.equals(domainContentExtensionPriority);
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME:
				return DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT == null ? domainContentProviderClassName != null : !DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT.equals(domainContentProviderClassName);
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME:
				return DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT == null ? domainLabelProviderClassName != null : !DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT.equals(domainLabelProviderClassName);
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME:
				return DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT == null ? domainModelElementTesterClassName != null : !DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT.equals(domainModelElementTesterClassName);
			case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_NAVIGATOR_ITEM_CLASS_NAME:
				return DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT == null ? domainNavigatorItemClassName != null : !DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT.equals(domainNavigatorItemClassName);
			case GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN:
				return getEditorGen() != null;
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_ID:
				return CONTENT_EXTENSION_ID_EDEFAULT == null ? contentExtensionID != null : !CONTENT_EXTENSION_ID_EDEFAULT.equals(contentExtensionID);
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_NAME:
				return CONTENT_EXTENSION_NAME_EDEFAULT == null ? contentExtensionName != null : !CONTENT_EXTENSION_NAME_EDEFAULT.equals(contentExtensionName);
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_EXTENSION_PRIORITY:
				return CONTENT_EXTENSION_PRIORITY_EDEFAULT == null ? contentExtensionPriority != null : !CONTENT_EXTENSION_PRIORITY_EDEFAULT.equals(contentExtensionPriority);
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_EXTENSION_ID:
				return LINK_HELPER_EXTENSION_ID_EDEFAULT == null ? linkHelperExtensionID != null : !LINK_HELPER_EXTENSION_ID_EDEFAULT.equals(linkHelperExtensionID);
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_EXTENSION_ID:
				return SORTER_EXTENSION_ID_EDEFAULT == null ? sorterExtensionID != null : !SORTER_EXTENSION_ID_EDEFAULT.equals(sorterExtensionID);
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_ID:
				return ACTION_PROVIDER_ID_EDEFAULT == null ? actionProviderID != null : !ACTION_PROVIDER_ID_EDEFAULT.equals(actionProviderID);
			case GMFGenPackage.GEN_NAVIGATOR__CONTENT_PROVIDER_CLASS_NAME:
				return CONTENT_PROVIDER_CLASS_NAME_EDEFAULT == null ? contentProviderClassName != null : !CONTENT_PROVIDER_CLASS_NAME_EDEFAULT.equals(contentProviderClassName);
			case GMFGenPackage.GEN_NAVIGATOR__LABEL_PROVIDER_CLASS_NAME:
				return LABEL_PROVIDER_CLASS_NAME_EDEFAULT == null ? labelProviderClassName != null : !LABEL_PROVIDER_CLASS_NAME_EDEFAULT.equals(labelProviderClassName);
			case GMFGenPackage.GEN_NAVIGATOR__LINK_HELPER_CLASS_NAME:
				return LINK_HELPER_CLASS_NAME_EDEFAULT == null ? linkHelperClassName != null : !LINK_HELPER_CLASS_NAME_EDEFAULT.equals(linkHelperClassName);
			case GMFGenPackage.GEN_NAVIGATOR__SORTER_CLASS_NAME:
				return SORTER_CLASS_NAME_EDEFAULT == null ? sorterClassName != null : !SORTER_CLASS_NAME_EDEFAULT.equals(sorterClassName);
			case GMFGenPackage.GEN_NAVIGATOR__ACTION_PROVIDER_CLASS_NAME:
				return ACTION_PROVIDER_CLASS_NAME_EDEFAULT == null ? actionProviderClassName != null : !ACTION_PROVIDER_CLASS_NAME_EDEFAULT.equals(actionProviderClassName);
			case GMFGenPackage.GEN_NAVIGATOR__ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME:
				return ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT == null ? abstractNavigatorItemClassName != null : !ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT.equals(abstractNavigatorItemClassName);
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_GROUP_CLASS_NAME:
				return NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT == null ? navigatorGroupClassName != null : !NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT.equals(navigatorGroupClassName);
			case GMFGenPackage.GEN_NAVIGATOR__NAVIGATOR_ITEM_CLASS_NAME:
				return NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT == null ? navigatorItemClassName != null : !NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT.equals(navigatorItemClassName);
			case GMFGenPackage.GEN_NAVIGATOR__URI_INPUT_TESTER_CLASS_NAME:
				return URI_INPUT_TESTER_CLASS_NAME_EDEFAULT == null ? uriInputTesterClassName != null : !URI_INPUT_TESTER_CLASS_NAME_EDEFAULT.equals(uriInputTesterClassName);
			case GMFGenPackage.GEN_NAVIGATOR__PACKAGE_NAME:
				return PACKAGE_NAME_EDEFAULT == null ? packageName != null : !PACKAGE_NAME_EDEFAULT.equals(packageName);
			case GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES:
				return childReferences != null && !childReferences.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (generateDomainModelNavigator: ");
		result.append(generateDomainModelNavigator);
		result.append(", domainContentExtensionID: ");
		result.append(domainContentExtensionID);
		result.append(", domainContentExtensionName: ");
		result.append(domainContentExtensionName);
		result.append(", domainContentExtensionPriority: ");
		result.append(domainContentExtensionPriority);
		result.append(", domainContentProviderClassName: ");
		result.append(domainContentProviderClassName);
		result.append(", domainLabelProviderClassName: ");
		result.append(domainLabelProviderClassName);
		result.append(", domainModelElementTesterClassName: ");
		result.append(domainModelElementTesterClassName);
		result.append(", domainNavigatorItemClassName: ");
		result.append(domainNavigatorItemClassName);
		result.append(", contentExtensionID: ");
		result.append(contentExtensionID);
		result.append(", contentExtensionName: ");
		result.append(contentExtensionName);
		result.append(", contentExtensionPriority: ");
		result.append(contentExtensionPriority);
		result.append(", linkHelperExtensionID: ");
		result.append(linkHelperExtensionID);
		result.append(", sorterExtensionID: ");
		result.append(sorterExtensionID);
		result.append(", actionProviderID: ");
		result.append(actionProviderID);
		result.append(", contentProviderClassName: ");
		result.append(contentProviderClassName);
		result.append(", labelProviderClassName: ");
		result.append(labelProviderClassName);
		result.append(", linkHelperClassName: ");
		result.append(linkHelperClassName);
		result.append(", sorterClassName: ");
		result.append(sorterClassName);
		result.append(", actionProviderClassName: ");
		result.append(actionProviderClassName);
		result.append(", abstractNavigatorItemClassName: ");
		result.append(abstractNavigatorItemClassName);
		result.append(", navigatorGroupClassName: ");
		result.append(navigatorGroupClassName);
		result.append(", navigatorItemClassName: ");
		result.append(navigatorItemClassName);
		result.append(", uriInputTesterClassName: ");
		result.append(uriInputTesterClassName);
		result.append(", packageName: ");
		result.append(packageName);
		result.append(')');
		return result.toString();
	}

	private String getDomainPackageCapName() {
		return ((GenEditorGeneratorImpl) getEditorGen()).getDomainModelCapName();
	}

	static boolean isEmpty(String s) {
		return s == null || s.trim().length() == 0;
	}
	
} //GenNavigatorImpl@


1.15
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a8 1
import java.util.ArrayList;
a12 2

import org.eclipse.emf.common.util.BasicEList;
a13 1

a15 1

a17 1

a18 1
import org.eclipse.emf.ecore.util.EcoreUtil;
a19 1

a20 1
import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
a587 31
	public NotificationChain basicSetEditorGen(GenEditorGenerator newEditorGen, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newEditorGen, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditorGen(GenEditorGenerator newEditorGen) {
		if (newEditorGen != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN && newEditorGen != null)) {
			if (EcoreUtil.isAncestor(this, newEditorGen))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newEditorGen != null)
				msgs = ((InternalEObject)newEditorGen).eInverseAdd(this, GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR, GenEditorGenerator.class, msgs);
			msgs = basicSetEditorGen(newEditorGen, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, newEditorGen, newEditorGen));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d1414 1
a1414 1
				return basicSetEditorGen((GenEditorGenerator)otherEnd, msgs);
d1430 1
a1430 1
				return basicSetEditorGen(null, msgs);
a1547 3
			case GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)newValue);
				return;
a1635 3
			case GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)null);
				return;
@


1.14
log
@[191924] - Adopt lite generator to use newly created /navigator/NavigatorLabelProvider.xpt
@
text
@d25 1
d597 31
d1454 1
a1454 1
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, msgs);
d1470 1
a1470 1
				return eBasicSetContainer(null, GMFGenPackage.GEN_NAVIGATOR__EDITOR_GEN, msgs);
d1588 3
d1679 3
@


1.13
log
@[181778] Generate standalone creation commands for reference based links
@
text
@a1412 15
	 * @@generated NOT
	 */
	public EList<GenNavigatorChildReference> getChildReferencesTo(GenCommonBase child) {
		ArrayList<GenNavigatorChildReference> result = new ArrayList<GenNavigatorChildReference>();
		for (GenNavigatorChildReference nextReference : getChildReferences()) {
			if (child == nextReference.getChild()) {
				result.add(nextReference);
			}
		}
		return new BasicEList.UnmodifiableEList<GenNavigatorChildReference>(result.size(), result.toArray());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
@


1.12
log
@Implementing "link with editor" for URI editor input
@
text
@d73 1
a73 1
	 * The default value of the '{@@link #getLinkHelperExtensionID() <em>Link Helper Extension ID</em>}' attribute.
d76 1
a76 1
	 * @@see #getLinkHelperExtensionID()
d80 1
a80 1
	protected static final String LINK_HELPER_EXTENSION_ID_EDEFAULT = null;
d83 1
a83 1
	 * The cached value of the '{@@link #getLinkHelperExtensionID() <em>Link Helper Extension ID</em>}' attribute.
d86 1
a86 1
	 * @@see #getLinkHelperExtensionID()
d90 1
a90 1
	protected String linkHelperExtensionID = LINK_HELPER_EXTENSION_ID_EDEFAULT;
d93 1
a93 1
	 * The default value of the '{@@link #getSorterExtensionID() <em>Sorter Extension ID</em>}' attribute.
d96 1
a96 1
	 * @@see #getSorterExtensionID()
d100 1
a100 1
	protected static final String SORTER_EXTENSION_ID_EDEFAULT = null;
d103 1
a103 1
	 * The cached value of the '{@@link #getSorterExtensionID() <em>Sorter Extension ID</em>}' attribute.
d106 1
a106 1
	 * @@see #getSorterExtensionID()
d110 1
a110 1
	protected String sorterExtensionID = SORTER_EXTENSION_ID_EDEFAULT;
d113 1
a113 1
	 * The default value of the '{@@link #getActionProviderID() <em>Action Provider ID</em>}' attribute.
d116 1
a116 1
	 * @@see #getActionProviderID()
d120 1
a120 1
	protected static final String ACTION_PROVIDER_ID_EDEFAULT = null;
d123 1
a123 1
	 * The cached value of the '{@@link #getActionProviderID() <em>Action Provider ID</em>}' attribute.
d126 1
a126 1
	 * @@see #getActionProviderID()
d130 1
a130 1
	protected String actionProviderID = ACTION_PROVIDER_ID_EDEFAULT;
d133 1
a133 1
	 * The default value of the '{@@link #getContentProviderClassName() <em>Content Provider Class Name</em>}' attribute.
d136 1
a136 1
	 * @@see #getContentProviderClassName()
d140 1
a140 1
	protected static final String CONTENT_PROVIDER_CLASS_NAME_EDEFAULT = null;
d143 1
a143 1
	 * The cached value of the '{@@link #getContentProviderClassName() <em>Content Provider Class Name</em>}' attribute.
d146 1
a146 1
	 * @@see #getContentProviderClassName()
d150 1
a150 1
	protected String contentProviderClassName = CONTENT_PROVIDER_CLASS_NAME_EDEFAULT;
d153 1
a153 1
	 * The default value of the '{@@link #getLabelProviderClassName() <em>Label Provider Class Name</em>}' attribute.
d156 1
a156 1
	 * @@see #getLabelProviderClassName()
d160 1
a160 1
	protected static final String LABEL_PROVIDER_CLASS_NAME_EDEFAULT = null;
d163 1
a163 1
	 * The cached value of the '{@@link #getLabelProviderClassName() <em>Label Provider Class Name</em>}' attribute.
d166 1
a166 1
	 * @@see #getLabelProviderClassName()
d170 1
a170 1
	protected String labelProviderClassName = LABEL_PROVIDER_CLASS_NAME_EDEFAULT;
d173 1
a173 1
	 * The default value of the '{@@link #getLinkHelperClassName() <em>Link Helper Class Name</em>}' attribute.
d176 1
a176 1
	 * @@see #getLinkHelperClassName()
d180 1
a180 1
	protected static final String LINK_HELPER_CLASS_NAME_EDEFAULT = null;
d183 1
a183 1
	 * The cached value of the '{@@link #getLinkHelperClassName() <em>Link Helper Class Name</em>}' attribute.
d186 1
a186 1
	 * @@see #getLinkHelperClassName()
d190 1
a190 1
	protected String linkHelperClassName = LINK_HELPER_CLASS_NAME_EDEFAULT;
d193 1
a193 1
	 * The default value of the '{@@link #getSorterClassName() <em>Sorter Class Name</em>}' attribute.
d196 1
a196 1
	 * @@see #getSorterClassName()
d200 1
a200 1
	protected static final String SORTER_CLASS_NAME_EDEFAULT = null;
d203 1
a203 1
	 * The cached value of the '{@@link #getSorterClassName() <em>Sorter Class Name</em>}' attribute.
d206 1
a206 1
	 * @@see #getSorterClassName()
d210 1
a210 1
	protected String sorterClassName = SORTER_CLASS_NAME_EDEFAULT;
d213 1
a213 1
	 * The default value of the '{@@link #getActionProviderClassName() <em>Action Provider Class Name</em>}' attribute.
d216 1
a216 1
	 * @@see #getActionProviderClassName()
d220 1
a220 1
	protected static final String ACTION_PROVIDER_CLASS_NAME_EDEFAULT = null;
d223 1
a223 1
	 * The cached value of the '{@@link #getActionProviderClassName() <em>Action Provider Class Name</em>}' attribute.
d226 1
a226 1
	 * @@see #getActionProviderClassName()
d230 1
a230 1
	protected String actionProviderClassName = ACTION_PROVIDER_CLASS_NAME_EDEFAULT;
d233 1
a233 1
	 * The default value of the '{@@link #getAbstractNavigatorItemClassName() <em>Abstract Navigator Item Class Name</em>}' attribute.
d236 1
a236 1
	 * @@see #getAbstractNavigatorItemClassName()
d240 1
a240 1
	protected static final String ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;
d243 1
a243 1
	 * The cached value of the '{@@link #getAbstractNavigatorItemClassName() <em>Abstract Navigator Item Class Name</em>}' attribute.
d246 1
a246 1
	 * @@see #getAbstractNavigatorItemClassName()
d250 1
a250 1
	protected String abstractNavigatorItemClassName = ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;
d253 1
a253 1
	 * The default value of the '{@@link #getNavigatorGroupClassName() <em>Navigator Group Class Name</em>}' attribute.
d256 1
a256 1
	 * @@see #getNavigatorGroupClassName()
d260 1
a260 1
	protected static final String NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT = null;
d263 1
a263 1
	 * The cached value of the '{@@link #getNavigatorGroupClassName() <em>Navigator Group Class Name</em>}' attribute.
d266 1
a266 1
	 * @@see #getNavigatorGroupClassName()
d270 1
a270 1
	protected String navigatorGroupClassName = NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT;
d273 1
a273 1
	 * The default value of the '{@@link #getNavigatorItemClassName() <em>Navigator Item Class Name</em>}' attribute.
d276 1
a276 1
	 * @@see #getNavigatorItemClassName()
d280 1
a280 1
	protected static final String NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;
d283 1
a283 1
	 * The cached value of the '{@@link #getNavigatorItemClassName() <em>Navigator Item Class Name</em>}' attribute.
d286 1
a286 1
	 * @@see #getNavigatorItemClassName()
d290 1
a290 1
	protected String navigatorItemClassName = NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;
d293 1
a293 1
	 * The default value of the '{@@link #getUriInputTesterClassName() <em>Uri Input Tester Class Name</em>}' attribute.
d296 1
a296 1
	 * @@see #getUriInputTesterClassName()
d300 1
a300 1
	protected static final String URI_INPUT_TESTER_CLASS_NAME_EDEFAULT = null;
d303 1
a303 1
	 * The cached value of the '{@@link #getUriInputTesterClassName() <em>Uri Input Tester Class Name</em>}' attribute.
d306 1
a306 1
	 * @@see #getUriInputTesterClassName()
d310 1
a310 1
	protected String uriInputTesterClassName = URI_INPUT_TESTER_CLASS_NAME_EDEFAULT;
d313 1
a313 1
	 * The default value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
d316 1
a316 1
	 * @@see #getPackageName()
d320 1
a320 1
	protected static final String PACKAGE_NAME_EDEFAULT = null;
d323 1
a323 1
	 * The cached value of the '{@@link #getPackageName() <em>Package Name</em>}' attribute.
d326 1
a326 1
	 * @@see #getPackageName()
d330 1
a330 1
	protected String packageName = PACKAGE_NAME_EDEFAULT;
d333 1
a333 1
	 * The default value of the '{@@link #isGenerateDomainModelNavigator() <em>Generate Domain Model Navigator</em>}' attribute.
d336 1
a336 1
	 * @@see #isGenerateDomainModelNavigator()
d340 1
a340 1
	protected static final boolean GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT = true;
d343 1
a343 1
	 * The cached value of the '{@@link #isGenerateDomainModelNavigator() <em>Generate Domain Model Navigator</em>}' attribute.
d346 1
a346 1
	 * @@see #isGenerateDomainModelNavigator()
d350 1
a350 1
	protected boolean generateDomainModelNavigator = GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT;
d353 1
a353 1
	 * The default value of the '{@@link #getDomainContentExtensionID() <em>Domain Content Extension ID</em>}' attribute.
d356 1
a356 1
	 * @@see #getDomainContentExtensionID()
d360 1
a360 1
	protected static final String DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT = null;
d363 1
a363 1
	 * The cached value of the '{@@link #getDomainContentExtensionID() <em>Domain Content Extension ID</em>}' attribute.
d366 1
a366 1
	 * @@see #getDomainContentExtensionID()
d370 1
a370 1
	protected String domainContentExtensionID = DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT;
d373 1
a373 1
	 * The default value of the '{@@link #getDomainContentExtensionName() <em>Domain Content Extension Name</em>}' attribute.
d376 1
a376 1
	 * @@see #getDomainContentExtensionName()
d380 1
a380 1
	protected static final String DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT = null;
d383 1
a383 1
	 * The cached value of the '{@@link #getDomainContentExtensionName() <em>Domain Content Extension Name</em>}' attribute.
d386 1
a386 1
	 * @@see #getDomainContentExtensionName()
d390 1
a390 1
	protected String domainContentExtensionName = DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT;
d393 1
a393 1
	 * The default value of the '{@@link #getDomainContentExtensionPriority() <em>Domain Content Extension Priority</em>}' attribute.
d396 1
a396 1
	 * @@see #getDomainContentExtensionPriority()
d400 1
a400 1
	protected static final String DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT = null;
d403 1
a403 1
	 * The cached value of the '{@@link #getDomainContentExtensionPriority() <em>Domain Content Extension Priority</em>}' attribute.
d406 1
a406 1
	 * @@see #getDomainContentExtensionPriority()
d410 1
a410 1
	protected String domainContentExtensionPriority = DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT;
d413 1
a413 1
	 * The default value of the '{@@link #getDomainContentProviderClassName() <em>Domain Content Provider Class Name</em>}' attribute.
d416 1
a416 1
	 * @@see #getDomainContentProviderClassName()
d420 1
a420 1
	protected static final String DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT = null;
d423 1
a423 1
	 * The cached value of the '{@@link #getDomainContentProviderClassName() <em>Domain Content Provider Class Name</em>}' attribute.
d426 1
a426 1
	 * @@see #getDomainContentProviderClassName()
d430 1
a430 1
	protected String domainContentProviderClassName = DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT;
d433 1
a433 1
	 * The default value of the '{@@link #getDomainLabelProviderClassName() <em>Domain Label Provider Class Name</em>}' attribute.
d436 1
a436 1
	 * @@see #getDomainLabelProviderClassName()
d440 1
a440 1
	protected static final String DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT = null;
d443 1
a443 1
	 * The cached value of the '{@@link #getDomainLabelProviderClassName() <em>Domain Label Provider Class Name</em>}' attribute.
d446 1
a446 1
	 * @@see #getDomainLabelProviderClassName()
d450 1
a450 1
	protected String domainLabelProviderClassName = DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT;
d453 1
a453 1
	 * The default value of the '{@@link #getDomainModelElementTesterClassName() <em>Domain Model Element Tester Class Name</em>}' attribute.
d456 1
a456 1
	 * @@see #getDomainModelElementTesterClassName()
d460 1
a460 1
	protected static final String DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT = null;
d463 1
a463 1
	 * The cached value of the '{@@link #getDomainModelElementTesterClassName() <em>Domain Model Element Tester Class Name</em>}' attribute.
d466 1
a466 1
	 * @@see #getDomainModelElementTesterClassName()
d470 1
a470 1
	protected String domainModelElementTesterClassName = DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT;
d473 1
a473 1
	 * The default value of the '{@@link #getDomainNavigatorItemClassName() <em>Domain Navigator Item Class Name</em>}' attribute.
d476 1
a476 1
	 * @@see #getDomainNavigatorItemClassName()
d480 1
a480 1
	protected static final String DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;
d483 1
a483 1
	 * The cached value of the '{@@link #getDomainNavigatorItemClassName() <em>Domain Navigator Item Class Name</em>}' attribute.
d486 1
a486 1
	 * @@see #getDomainNavigatorItemClassName()
d490 1
a490 1
	protected String domainNavigatorItemClassName = DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;
d493 1
a493 1
	 * The default value of the '{@@link #getContentExtensionID() <em>Content Extension ID</em>}' attribute.
d496 1
a496 1
	 * @@see #getContentExtensionID()
d500 1
a500 1
	protected static final String CONTENT_EXTENSION_ID_EDEFAULT = null;
d503 1
a503 1
	 * The cached value of the '{@@link #getContentExtensionID() <em>Content Extension ID</em>}' attribute.
d506 1
a506 1
	 * @@see #getContentExtensionID()
d510 1
a510 1
	protected String contentExtensionID = CONTENT_EXTENSION_ID_EDEFAULT;
d513 1
a513 1
	 * The default value of the '{@@link #getContentExtensionName() <em>Content Extension Name</em>}' attribute.
d516 1
a516 1
	 * @@see #getContentExtensionName()
d520 1
a520 1
	protected static final String CONTENT_EXTENSION_NAME_EDEFAULT = null;
d523 1
a523 1
	 * The cached value of the '{@@link #getContentExtensionName() <em>Content Extension Name</em>}' attribute.
d526 1
a526 1
	 * @@see #getContentExtensionName()
d530 1
a530 1
	protected String contentExtensionName = CONTENT_EXTENSION_NAME_EDEFAULT;
d533 1
a533 1
	 * The default value of the '{@@link #getContentExtensionPriority() <em>Content Extension Priority</em>}' attribute.
d536 1
a536 1
	 * @@see #getContentExtensionPriority()
d540 1
a540 1
	protected static final String CONTENT_EXTENSION_PRIORITY_EDEFAULT = null;
d543 1
a543 1
	 * The cached value of the '{@@link #getContentExtensionPriority() <em>Content Extension Priority</em>}' attribute.
d546 1
a546 1
	 * @@see #getContentExtensionPriority()
d550 1
a550 1
	protected String contentExtensionPriority = CONTENT_EXTENSION_PRIORITY_EDEFAULT;
d560 1
a560 1
	protected EList<GenNavigatorChildReference> childReferences = null;
@


1.11
log
@NavigatorReference type constant name corrected.
Generating wrapper for domain model navigator nodes to preserve navigator tree selection/expansion on model files reload.
@
text
@d63 1
a72 10
	 * The cached value of the '{@@link #getContentExtensionPriority() <em>Content Extension Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionPriority()
	 * @@generated
	 * @@ordered
	 */
	protected String contentExtensionPriority = CONTENT_EXTENSION_PRIORITY_EDEFAULT;

	/**
d293 20
d543 10
d1004 29
d1370 9
d1528 2
d1613 3
d1701 3
d1768 2
d1832 2
@


1.10
log
@Generating generic navigator providers for domain model.
@
text
@d47 1
a71 40
	 * The cached value of the '{@@link #getContentExtensionID() <em>Content Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected String contentExtensionID = CONTENT_EXTENSION_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContentExtensionName() <em>Content Extension Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTENT_EXTENSION_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getContentExtensionName() <em>Content Extension Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionName()
	 * @@generated
	 * @@ordered
	 */
	protected String contentExtensionName = CONTENT_EXTENSION_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContentExtensionPriority() <em>Content Extension Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTENT_EXTENSION_PRIORITY_EDEFAULT = null;

	/**
d462 20
d492 40
d1207 29
d1347 9
d1437 2
d1507 3
d1592 3
d1669 2
d1733 2
@


1.9
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d40 7
a70 10
	 * The default value of the '{@@link #getContentExtensionID() <em>Content Extension ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContentExtensionID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTENT_EXTENSION_ID_EDEFAULT = null;

	/**
d361 150
d991 195
d1270 27
d1364 14
d1425 21
d1507 21
d1588 14
d1650 15
a1664 1
		result.append(" (contentExtensionID: ");
@


1.8
log
@Removing unnecessary operation.
@
text
@a10 1
import java.util.Iterator;
d371 1
a371 1
	protected EList childReferences = null;
d387 1
d844 1
a844 1
	public EList getChildReferences() {
d846 1
a846 1
			childReferences = new EObjectContainmentWithInverseEList(GenNavigatorChildReference.class, this, GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR);
d928 3
a930 4
	public EList getChildReferencesTo(GenCommonBase child) {
		Collection result = new ArrayList();
		for (Iterator it = getChildReferences().iterator(); it.hasNext();) {
			GenNavigatorChildReference nextReference = (GenNavigatorChildReference) it.next();
d935 1
a935 1
		return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
d943 2
d952 1
a952 1
				return ((InternalEList)getChildReferences()).basicAdd(otherEnd, msgs);
d962 1
d968 1
a968 1
				return ((InternalEList)getChildReferences()).basicRemove(otherEnd, msgs);
d978 1
d992 1
d1038 2
d1089 1
a1089 1
				getChildReferences().addAll((Collection)newValue);
d1100 1
d1160 1
d1206 1
@


1.7
log
@NavigatorContentProvider template reimplemented on xpand
@
text
@a927 16
	public EList getChildReferencesFrom(GenCommonBase parent) {
		Collection result = new ArrayList();
		for (Iterator it = getChildReferences().iterator(); it.hasNext();) {
			GenNavigatorChildReference nextReference = (GenNavigatorChildReference) it.next();
			if (parent == nextReference.getParent()) {
				result.add(nextReference);
			}
		}
		return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
@


1.6
log
@Open action for diagram nodes in Navigator added.
@
text
@d25 1
a25 1
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
d846 1
a846 1
			childReferences = new EObjectContainmentEList(GenNavigatorChildReference.class, this, GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES);
d966 2
@


1.5
log
@Navigator Sorter added.
@
text
@d47 1
d52 1
d165 20
d265 20
d554 29
d699 29
d892 9
d1017 2
d1027 2
d1065 3
d1080 3
d1125 3
d1140 3
d1181 2
d1191 2
d1226 2
d1236 2
@


1.4
log
@LinkHelper generated for Project Explorer view.
@
text
@d46 1
d50 1
d143 20
d223 20
d483 29
d599 29
d783 9
d906 2
d914 2
d949 3
d961 3
d1003 3
d1015 3
d1054 2
d1062 2
d1095 2
d1103 2
@


1.3
log
@Read-only properties provided into the navigator.
@
text
@d45 1
d48 1
d121 20
d181 20
d411 30
d499 29
d674 9
d795 2
d801 2
d833 3
d842 3
d881 3
d890 3
d927 2
d933 2
d964 2
d970 2
@


1.2
log
@getParent() method generated for NavigatorContentProvider.
@
text
@d47 4
a50 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenNavigatorImpl#getGroupWrapperClassName <em>Group Wrapper Class Name</em>}</li>
d159 1
a159 1
	 * The default value of the '{@@link #getGroupWrapperClassName() <em>Group Wrapper Class Name</em>}' attribute.
d162 1
a162 1
	 * @@see #getGroupWrapperClassName()
d166 1
a166 1
	protected static final String GROUP_WRAPPER_CLASS_NAME_EDEFAULT = null;
d169 1
a169 1
	 * The cached value of the '{@@link #getGroupWrapperClassName() <em>Group Wrapper Class Name</em>}' attribute.
d172 1
a172 1
	 * @@see #getGroupWrapperClassName()
d176 61
a236 1
	protected String groupWrapperClassName = GROUP_WRAPPER_CLASS_NAME_EDEFAULT;
d427 32
a458 2
	public String getGroupWrapperClassNameGen() {
		return groupWrapperClassName;
d461 2
a462 2
	public String getGroupWrapperClassName() {
		String value = getGroupWrapperClassNameGen();
d466 28
d502 3
a504 3
	public void setGroupWrapperClassName(String newGroupWrapperClassName) {
		String oldGroupWrapperClassName = groupWrapperClassName;
		groupWrapperClassName = newGroupWrapperClassName;
d506 30
a535 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__GROUP_WRAPPER_CLASS_NAME, oldGroupWrapperClassName, groupWrapperClassName));
d556 1
a556 1
		return getEditorPackageName() + '.' + getContentProviderClassName();
d565 10
a574 1
		return getEditorPackageName() + '.' + getLabelProviderClassName();
d582 11
a592 2
	public String getGroupWrapperQualifiedClassName() {
		return getEditorPackageName() + '.' + getGroupWrapperClassName();
d689 8
a696 2
			case GMFGenPackage.GEN_NAVIGATOR__GROUP_WRAPPER_CLASS_NAME:
				return getGroupWrapperClassName();
d725 11
a735 2
			case GMFGenPackage.GEN_NAVIGATOR__GROUP_WRAPPER_CLASS_NAME:
				setGroupWrapperClassName((String)newValue);
d767 11
a777 2
			case GMFGenPackage.GEN_NAVIGATOR__GROUP_WRAPPER_CLASS_NAME:
				setGroupWrapperClassName(GROUP_WRAPPER_CLASS_NAME_EDEFAULT);
d805 8
a812 2
			case GMFGenPackage.GEN_NAVIGATOR__GROUP_WRAPPER_CLASS_NAME:
				return GROUP_WRAPPER_CLASS_NAME_EDEFAULT == null ? groupWrapperClassName != null : !GROUP_WRAPPER_CLASS_NAME_EDEFAULT.equals(groupWrapperClassName);
d838 8
a845 2
		result.append(", groupWrapperClassName: ");
		result.append(groupWrapperClassName);
a853 4
	private String getEditorPackageName() {
		return getEditorGen().getEditor().getPackageName();
	}

@


1.1
log
@Model navigator, initial version.
@
text
@d432 1
a432 1
	public EList getChildReferencesFor(GenCommonBase parent) {
d446 16
@

