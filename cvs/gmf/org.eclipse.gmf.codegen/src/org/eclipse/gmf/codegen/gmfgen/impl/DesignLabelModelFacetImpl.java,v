head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080930-1130:1.6
	v20080926-1245:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080722-1827:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.5
	v20080521:1.5
	v20080516-1543:1.5
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080411-0411:1.5
	v20080404-1111:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070928-0000:1.5
	v20070921-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070504-1000:1.5
	v20070427-0600:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070405-1100:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070307-0700:1.4
	v20070301-1200:1.4
	v20070228-2000:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070202-0200:1.1
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.1
	v20061020-1000:1.1
	v20061013-1330:1.1
	v20060919-0800:1.1
	v20060907-1100:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060824-1600:1.1
	v20060817-1500:1.1
	v20060728-0500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2008.08.29.16.10.04;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	4a1948b81f524567;

1.5
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	444245f8090b4567;

1.4
date	2006.11.17.16.13.15;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	4b15455ddf9b4567;

1.3
date	2006.10.18.09.56.50;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.17.13.08.11;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.09.12.31.18;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[244419] Support for custom parser - finalize parsers/labelmodelfacet relationship
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Design Label Model Facet</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * </p>
 *
 * @@generated
 */
public class DesignLabelModelFacetImpl extends LabelModelFacetImpl implements DesignLabelModelFacet {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DesignLabelModelFacetImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getDesignLabelModelFacet();
	}

} //DesignLabelModelFacetImpl@


1.5
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a9 1
import org.eclipse.emf.ecore.impl.EObjectImpl;
d22 1
a22 1
public class DesignLabelModelFacetImpl extends EObjectImpl implements DesignLabelModelFacet {
@


1.4
log
@organized imports
@
text
@d38 1
@


1.3
log
@#161380 move readOnly back to GenLabel
@
text
@a8 2
import org.eclipse.emf.common.notify.Notification;

a9 2

import org.eclipse.emf.ecore.impl.ENotificationImpl;
a10 1

@


1.2
log
@#160894 Move readOnly property from GenLabel to LabelFeatureModelFacet
@
text
@a23 4
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.DesignLabelModelFacetImpl#isReadOnly <em>Read Only</em>}</li>
 * </ul>
a29 20
	 * The default value of the '{@@link #isReadOnly() <em>Read Only</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isReadOnly()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean READ_ONLY_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isReadOnly() <em>Read Only</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isReadOnly()
	 * @@generated
	 * @@ordered
	 */
	protected boolean readOnly = READ_ONLY_EDEFAULT;

	/**
a46 90
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isReadOnly() {
		return readOnly;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setReadOnly(boolean newReadOnly) {
		boolean oldReadOnly = readOnly;
		readOnly = newReadOnly;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.DESIGN_LABEL_MODEL_FACET__READ_ONLY, oldReadOnly, readOnly));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.DESIGN_LABEL_MODEL_FACET__READ_ONLY:
				return isReadOnly() ? Boolean.TRUE : Boolean.FALSE;
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.DESIGN_LABEL_MODEL_FACET__READ_ONLY:
				setReadOnly(((Boolean)newValue).booleanValue());
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.DESIGN_LABEL_MODEL_FACET__READ_ONLY:
				setReadOnly(READ_ONLY_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.DESIGN_LABEL_MODEL_FACET__READ_ONLY:
				return readOnly != READ_ONLY_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (readOnly: ");
		result.append(readOnly);
		result.append(')');
		return result.toString();
	}

@


1.1
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d9 2
d13 1
d24 4
d34 20
d71 90
@

