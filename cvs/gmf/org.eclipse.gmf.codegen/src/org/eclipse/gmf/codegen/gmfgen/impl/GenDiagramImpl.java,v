head	1.118;
access;
symbols
	v20081022-1925:1.118
	v20081015-1925:1.118
	v20081008-1925:1.118
	v20081001-1925:1.118
	v20080930-1130:1.118
	v20080926-1245:1.118
	v20080924-1925:1.118
	v20080917-1925:1.118
	v20080911-1728:1.118
	v20080910-1520:1.118
	v20080903-1520:1.118
	v20080827-1520:1.118
	v20080813-1520:1.118
	v20080806-1520:1.118
	v20080722-1827:1.118
	v20080718-1731:1.118
	v20080716-1600:1.118
	v20080716-1642:1.118
	R2_1_maintenance:1.118.0.2
	Root_R2_1_maintenance:1.118
	R2_1_0:1.118
	v20080610-1132:1.118
	v20080603-1553:1.118
	v20080528-1052:1.118
	v20080521:1.118
	v20080516-1543:1.118
	v20080516-1143:1.118
	v20080512-1200:1.118
	v20080508-2000:1.118
	v20080507-1326:1.118
	v20080503-1740:1.118
	v20080501-1739:1.118
	v20080425-1959:1.118
	v20080417-1610:1.117
	v20080411-0411:1.117
	v20080404-1111:1.117
	v20080322-0000:1.117
	v20080222-1200:1.116
	v20080215-1500:1.116
	v20080207-0207:1.115.2.1
	v20071222-1111:1.116
	v20071214-1111:1.116
	v20071130-1111:1.116
	v20071124-0000:1.115.2.1
	v20071112-0000:1.116
	v20071108-0000:1.116
	v20071003-0000:1.116
	v20070928-0000:1.115.2.1
	v20070921-0000:1.115.2.1
	v20070915-0000:1.115.2.1
	v20070903-0000:1.115
	v20070809-0000:1.115
	R2_0_maintenance:1.115.0.2
	R2_0:1.115
	R4_20:1.115
	v20070621-0000:1.115
	RC3_20:1.115
	v20070614-1400:1.115
	v20070608-1300:1.113
	v20070605-1400:1.113
	v20070601-1400:1.113
	v20070525-1500:1.113
	v20070520-1200:1.113
	v20070518-1300:1.113
	v20070504-1000:1.110
	v20070427-0600:1.107
	v20070420-1000:1.107
	v20070413-1300:1.107
	v20070405-1100:1.106
	v20070403-1500:1.106
	v20070330-1300:1.106
	v20060330-1300:1.106
	v20070322-1100:1.106
	v20060316-0600:1.106
	v20070307-0700:1.105
	v20070301-1200:1.105
	v20070228-2000:1.104
	v20070221-1500:1.104
	v20070208-1800:1.104
	v20070202-0200:1.84
	v20070103-0300:1.100
	M4_20:1.100
	v20061222-1800:1.96
	v20061218-1200:1.96
	v20061214-0000:1.95
	v20061120-1300:1.93
	M3_20:1.92
	v20061117-0800:1.92
	v20061027-1200:1.84
	v20061020-1000:1.84
	v20061013-1330:1.87
	v20060919-0800:1.84
	v20060907-1100:1.84
	M1_20:1.84
	v20060904-1500:1.84
	v20060824-1600:1.84
	v20060817-1500:1.84
	v20060728-0500:1.84
	v20060713-1700:1.84
	R1_0_maintenance:1.84.0.2
	R1_0:1.84
	v20060627-1200:1.84
	v20060626-1420:1.84
	v20060620-0400:1.83
	v20060616-1400:1.83
	v20060616-1200:1.83
	v20060609-1400:1.82
	v20060531-1730:1.72
	v20060530-1930:1.71
	v20060526-1200:1.69
	v20060519-1300:1.68
	v20060519-0800:1.68
	v20060512-1000:1.67
	I20060512-1000:1.67
	I20060505-1400:1.66
	I20060428-1300:1.66
	I20060424-0500:1.66
	I20060424-0300:1.66
	M6_10:1.65
	I20060407-1200:1.62
	I20060331-1000:1.60
	I20060324-0300:1.59
	I20060317-1300:1.59
	I20060317-1200:1.59
	I20060316-1300:1.59
	I20060309-1300:1.55
	M5_10:1.55
	S20060303-1600:1.55
	I20060227-1730:1.55
	I20060216-1945:1.54
	I20060210-1715:1.51
	I20060209-1815:1.51
	I20060203-0830:1.47
	I20060202-1415:1.47
	I20060129-1145:1.45
	I20060127-0900:1.44
	I20060120-1530:1.40
	I20060113-1700:1.38
	M4_10:1.38
	I20060107-1100:1.33
	I20060105-1630:1.33
	I20051230-1230:1.32
	I20051223-1100:1.32
	I20051217-0925:1.31
	I20051208-2000:1.30
	I20051201-1800:1.30
	I20051124-2000:1.28
	M3_10:1.26
	I20051118-1245:1.26
	I20051111-1800:1.22
	I20051106-0900:1.19
	v20051030:1.19
	v20050828:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.118
date	2008.04.18.14.43.22;	author atikhomirov;	state Exp;
branches;
next	1.117;
commitid	2e1d4808b3814567;

1.117
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.116;
commitid	5e5047cd7dd64567;

1.116
date	2007.09.07.18.16.50;	author dstadnik;	state Exp;
branches;
next	1.115;
commitid	5d1f46e195874567;

1.115
date	2007.06.12.18.05.31;	author dstadnik;	state Exp;
branches
	1.115.2.1;
next	1.114;
commitid	5e91466ee0674567;

1.114
date	2007.06.12.11.56.29;	author dstadnik;	state Exp;
branches;
next	1.113;
commitid	7fc6466e89e84567;

1.113
date	2007.05.11.16.01.30;	author ashatalin;	state Exp;
branches;
next	1.112;
commitid	44f84644934f4567;

1.112
date	2007.05.11.13.50.54;	author ashatalin;	state Exp;
branches;
next	1.111;
commitid	6340464474b24567;

1.111
date	2007.05.04.15.27.50;	author ashatalin;	state Exp;
branches;
next	1.110;
commitid	6ef6463b50ec4567;

1.110
date	2007.05.03.09.58.55;	author dstadnik;	state Exp;
branches;
next	1.109;
commitid	518a4639b24f4567;

1.109
date	2007.05.01.17.56.31;	author ashatalin;	state Exp;
branches;
next	1.108;
commitid	58c746377f464567;

1.108
date	2007.05.01.13.28.04;	author ashatalin;	state Exp;
branches;
next	1.107;
commitid	143a463740554567;

1.107
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.106;
commitid	725b461c97d64567;

1.106
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.105;
commitid	444245f8090b4567;

1.105
date	2007.03.01.12.51.39;	author ashatalin;	state Exp;
branches;
next	1.104;
commitid	5cf545e6cc594567;

1.104
date	2007.01.29.19.30.15;	author ashatalin;	state Exp;
branches;
next	1.103;
commitid	7ac145be4b464567;

1.103
date	2007.01.29.18.09.13;	author ashatalin;	state Exp;
branches;
next	1.102;
commitid	21cf45be38464567;

1.102
date	2007.01.03.21.36.24;	author dstadnik;	state Exp;
branches;
next	1.101;
commitid	61d0459c21c94567;

1.101
date	2007.01.03.20.34.48;	author dstadnik;	state Exp;
branches;
next	1.100;
commitid	58fc459c135f4567;

1.100
date	2006.12.28.13.40.13;	author dstadnik;	state Exp;
branches;
next	1.99;
commitid	422a4593c9344567;

1.99
date	2006.12.27.18.38.46;	author dstadnik;	state Exp;
branches;
next	1.98;
commitid	64234592bdb54567;

1.98
date	2006.12.27.17.37.09;	author dstadnik;	state Exp;
branches;
next	1.97;
commitid	45374592af3d4567;

1.97
date	2006.12.27.12.43.26;	author dstadnik;	state Exp;
branches;
next	1.96;
commitid	5bbc45926a654567;

1.96
date	2006.12.15.15.48.27;	author dstadnik;	state Exp;
branches;
next	1.95;
commitid	5de44582c3b54567;

1.95
date	2006.11.24.18.11.34;	author radvorak;	state Exp;
branches;
next	1.94;
commitid	3760456735c34567;

1.94
date	2006.11.22.10.21.46;	author ashatalin;	state Exp;
branches;
next	1.93;
commitid	7860456424b04567;

1.93
date	2006.11.17.16.52.18;	author atikhomirov;	state Exp;
branches;
next	1.92;
commitid	4282455de8ba4567;

1.92
date	2006.11.03.20.43.48;	author ashatalin;	state Exp;
branches;
next	1.91;

1.91
date	2006.10.27.17.36.35;	author ashatalin;	state Exp;
branches;
next	1.90;

1.90
date	2006.10.24.17.35.35;	author dstadnik;	state Exp;
branches;
next	1.89;

1.89
date	2006.10.24.14.49.09;	author ashatalin;	state Exp;
branches;
next	1.88;

1.88
date	2006.10.18.14.21.41;	author dstadnik;	state Exp;
branches;
next	1.87;

1.87
date	2006.10.06.13.28.48;	author atikhomirov;	state Exp;
branches;
next	1.86;

1.86
date	2006.10.06.12.15.31;	author atikhomirov;	state Exp;
branches;
next	1.85;

1.85
date	2006.09.26.17.55.56;	author radvorak;	state Exp;
branches;
next	1.84;

1.84
date	2006.06.23.12.26.15;	author dstadnik;	state Exp;
branches;
next	1.83;

1.83
date	2006.06.13.15.10.43;	author ashatalin;	state Exp;
branches;
next	1.82;

1.82
date	2006.06.09.12.31.18;	author dstadnik;	state Exp;
branches;
next	1.81;

1.81
date	2006.06.09.10.15.51;	author ashatalin;	state Exp;
branches;
next	1.80;

1.80
date	2006.06.09.09.02.47;	author dstadnik;	state Exp;
branches;
next	1.79;

1.79
date	2006.06.08.14.32.25;	author ashatalin;	state Exp;
branches;
next	1.78;

1.78
date	2006.06.07.13.52.17;	author dstadnik;	state Exp;
branches;
next	1.77;

1.77
date	2006.06.07.09.29.00;	author dstadnik;	state Exp;
branches;
next	1.76;

1.76
date	2006.06.06.17.13.17;	author radvorak;	state Exp;
branches;
next	1.75;

1.75
date	2006.06.06.14.43.47;	author radvorak;	state Exp;
branches;
next	1.74;

1.74
date	2006.06.06.12.02.13;	author dstadnik;	state Exp;
branches;
next	1.73;

1.73
date	2006.06.06.10.52.00;	author dstadnik;	state Exp;
branches;
next	1.72;

1.72
date	2006.05.31.19.53.02;	author ashatalin;	state Exp;
branches;
next	1.71;

1.71
date	2006.05.29.17.17.18;	author atikhomirov;	state Exp;
branches;
next	1.70;

1.70
date	2006.05.29.12.45.39;	author dstadnik;	state Exp;
branches;
next	1.69;

1.69
date	2006.05.26.14.16.24;	author dstadnik;	state Exp;
branches;
next	1.68;

1.68
date	2006.05.15.17.18.17;	author ashatalin;	state Exp;
branches;
next	1.67;

1.67
date	2006.05.09.12.41.31;	author radvorak;	state Exp;
branches;
next	1.66;

1.66
date	2006.04.18.12.19.27;	author dstadnik;	state Exp;
branches;
next	1.65;

1.65
date	2006.04.14.07.21.22;	author dstadnik;	state Exp;
branches;
next	1.64;

1.64
date	2006.04.13.12.39.59;	author ashatalin;	state Exp;
branches;
next	1.63;

1.63
date	2006.04.12.08.48.32;	author dstadnik;	state Exp;
branches;
next	1.62;

1.62
date	2006.04.06.14.16.01;	author dstadnik;	state Exp;
branches;
next	1.61;

1.61
date	2006.04.03.12.52.47;	author dstadnik;	state Exp;
branches;
next	1.60;

1.60
date	2006.03.29.12.12.26;	author ashatalin;	state Exp;
branches;
next	1.59;

1.59
date	2006.03.14.15.31.58;	author dstadnik;	state Exp;
branches;
next	1.58;

1.58
date	2006.03.14.14.18.23;	author ashatalin;	state Exp;
branches;
next	1.57;

1.57
date	2006.03.14.13.14.55;	author dstadnik;	state Exp;
branches;
next	1.56;

1.56
date	2006.03.10.14.47.54;	author atikhomirov;	state Exp;
branches;
next	1.55;

1.55
date	2006.02.17.07.33.19;	author dstadnik;	state Exp;
branches;
next	1.54;

1.54
date	2006.02.16.10.30.35;	author ashatalin;	state Exp;
branches;
next	1.53;

1.53
date	2006.02.15.18.11.24;	author dstadnik;	state Exp;
branches;
next	1.52;

1.52
date	2006.02.15.15.09.49;	author dstadnik;	state Exp;
branches;
next	1.51;

1.51
date	2006.02.08.16.06.19;	author atikhomirov;	state Exp;
branches;
next	1.50;

1.50
date	2006.02.08.14.14.20;	author atikhomirov;	state Exp;
branches;
next	1.49;

1.49
date	2006.02.08.13.05.28;	author atikhomirov;	state Exp;
branches;
next	1.48;

1.48
date	2006.02.08.00.17.46;	author atikhomirov;	state Exp;
branches;
next	1.47;

1.47
date	2006.02.02.15.58.54;	author dstadnik;	state Exp;
branches;
next	1.46;

1.46
date	2006.01.30.18.26.46;	author dstadnik;	state Exp;
branches;
next	1.45;

1.45
date	2006.01.27.20.54.21;	author ashatalin;	state Exp;
branches;
next	1.44;

1.44
date	2006.01.26.13.36.43;	author atikhomirov;	state Exp;
branches;
next	1.43;

1.43
date	2006.01.25.19.52.35;	author atikhomirov;	state Exp;
branches;
next	1.42;

1.42
date	2006.01.25.14.27.29;	author atikhomirov;	state Exp;
branches;
next	1.41;

1.41
date	2006.01.24.12.01.20;	author dstadnik;	state Exp;
branches;
next	1.40;

1.40
date	2006.01.19.17.33.05;	author ashatalin;	state Exp;
branches;
next	1.39;

1.39
date	2006.01.19.00.10.43;	author ashatalin;	state Exp;
branches;
next	1.38;

1.38
date	2006.01.12.17.19.23;	author ashatalin;	state Exp;
branches;
next	1.37;

1.37
date	2006.01.12.11.43.59;	author dstadnik;	state Exp;
branches;
next	1.36;

1.36
date	2006.01.10.16.16.58;	author ashatalin;	state Exp;
branches;
next	1.35;

1.35
date	2006.01.10.13.49.37;	author atikhomirov;	state Exp;
branches;
next	1.34;

1.34
date	2006.01.10.12.51.22;	author atikhomirov;	state Exp;
branches;
next	1.33;

1.33
date	2006.01.05.17.30.29;	author atikhomirov;	state Exp;
branches;
next	1.32;

1.32
date	2005.12.22.17.25.27;	author atikhomirov;	state Exp;
branches;
next	1.31;

1.31
date	2005.12.13.17.11.22;	author ashatalin;	state Exp;
branches;
next	1.30;

1.30
date	2005.11.29.18.33.26;	author atikhomirov;	state Exp;
branches;
next	1.29;

1.29
date	2005.11.28.16.09.46;	author dstadnik;	state Exp;
branches;
next	1.28;

1.28
date	2005.11.23.10.11.52;	author dstadnik;	state Exp;
branches;
next	1.27;

1.27
date	2005.11.21.09.35.37;	author dstadnik;	state Exp;
branches;
next	1.26;

1.26
date	2005.11.17.11.56.03;	author dstadnik;	state Exp;
branches;
next	1.25;

1.25
date	2005.11.17.09.14.15;	author dstadnik;	state Exp;
branches;
next	1.24;

1.24
date	2005.11.16.13.30.03;	author dstadnik;	state Exp;
branches;
next	1.23;

1.23
date	2005.11.16.07.42.24;	author dstadnik;	state Exp;
branches;
next	1.22;

1.22
date	2005.11.11.13.47.43;	author dstadnik;	state Exp;
branches;
next	1.21;

1.21
date	2005.11.11.09.17.26;	author dstadnik;	state Exp;
branches;
next	1.20;

1.20
date	2005.11.08.15.36.53;	author atikhomirov;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.26.18.43.48;	author atikhomirov;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.20.16.04.34;	author atikhomirov;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.20.11.21.57;	author atikhomirov;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.19.17.56.08;	author atikhomirov;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.19.15.36.38;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.19.13.51.49;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.19.13.19.22;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.13.14.21.40;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.13.11.42.21;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.11.16.43.53;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.11.12.50.57;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.07.13.01.35;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.03.19.09.14;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.29.09.49.40;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.26.15.15.45;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.11.16.37.34;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.28;	author atikhomirov;	state Exp;
branches;
next	;

1.115.2.1
date	2007.09.07.18.10.38;	author dstadnik;	state Exp;
branches;
next	;
commitid	58d446e194134567;


desc
@@


1.118
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.BasicEList;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.util.EDataTypeUniqueEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.EcoreEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.BatchValidation;
import org.eclipse.gmf.codegen.gmfgen.EditPartCandies;
import org.eclipse.gmf.codegen.gmfgen.EditorCandies;
import org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;
import org.eclipse.gmf.codegen.gmfgen.GenChildNode;
import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
import org.eclipse.gmf.codegen.gmfgen.GenCompartment;
import org.eclipse.gmf.codegen.gmfgen.GenContainerBase;
import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
import org.eclipse.gmf.codegen.gmfgen.GenDiagramPreferences;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
import org.eclipse.gmf.codegen.gmfgen.GenLink;
import org.eclipse.gmf.codegen.gmfgen.GenNode;
import org.eclipse.gmf.codegen.gmfgen.GenPreferencePage;
import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;
import org.eclipse.gmf.codegen.gmfgen.LinkConstraints;
import org.eclipse.gmf.codegen.gmfgen.MeasurementUnit;
import org.eclipse.gmf.codegen.gmfgen.PackageNames;
import org.eclipse.gmf.codegen.gmfgen.Palette;
import org.eclipse.gmf.codegen.gmfgen.ProviderClassNames;
import org.eclipse.gmf.codegen.gmfgen.ProviderPriority;
import org.eclipse.gmf.codegen.gmfgen.Shortcuts;
import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;
import org.eclipse.gmf.common.codegen.ImportAssistant;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Diagram</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getContainedNodes <em>Contained Nodes</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCanonicalEditPolicyClassName <em>Canonical Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditCommandsPackageName <em>Edit Commands Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditHelpersPackageName <em>Edit Helpers Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditPartsPackageName <em>Edit Parts Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditPoliciesPackageName <em>Edit Policies Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPreferencesPackageName <em>Preferences Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getProvidersPackageName <em>Providers Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getParsersPackageName <em>Parsers Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNotationViewFactoriesPackageName <em>Notation View Factories Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getElementTypesClassName <em>Element Types Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNotationViewProviderClassName <em>Notation View Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNotationViewProviderPriority <em>Notation View Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditPartProviderClassName <em>Edit Part Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditPartProviderPriority <em>Edit Part Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getModelingAssistantProviderClassName <em>Modeling Assistant Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getModelingAssistantProviderPriority <em>Modeling Assistant Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getIconProviderClassName <em>Icon Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getIconProviderPriority <em>Icon Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getParserProviderClassName <em>Parser Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getParserProviderPriority <em>Parser Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getContributionItemProviderClassName <em>Contribution Item Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getReorientConnectionViewCommandClassName <em>Reorient Connection View Command Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getBaseEditHelperClassName <em>Base Edit Helper Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditPartFactoryClassName <em>Edit Part Factory Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getBaseExternalNodeLabelEditPartClassName <em>Base External Node Label Edit Part Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getBaseItemSemanticEditPolicyClassName <em>Base Item Semantic Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getBaseGraphicalNodeEditPolicyClassName <em>Base Graphical Node Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getTextSelectionEditPolicyClassName <em>Text Selection Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getTextNonResizableEditPolicyClassName <em>Text Non Resizable Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCreationWizardClassName <em>Creation Wizard Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCreationWizardPageClassName <em>Creation Wizard Page Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCreationWizardIconPath <em>Creation Wizard Icon Path</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCreationWizardIconPathX <em>Creation Wizard Icon Path X</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCreationWizardCategoryID <em>Creation Wizard Category ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDiagramEditorUtilClassName <em>Diagram Editor Util Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDocumentProviderClassName <em>Document Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getInitDiagramFileActionClassName <em>Init Diagram File Action Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNewDiagramFileWizardClassName <em>New Diagram File Wizard Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDiagramContentInitializerClassName <em>Diagram Content Initializer Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMatchingStrategyClassName <em>Matching Strategy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getVisualIDRegistryClassName <em>Visual ID Registry Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getElementChooserClassName <em>Element Chooser Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getLoadResourceActionClassName <em>Load Resource Action Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditingDomainID <em>Editing Domain ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getShortcutsDecoratorProviderClassName <em>Shortcuts Decorator Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getShortcutsDecoratorProviderPriority <em>Shortcuts Decorator Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCreateShortcutActionClassName <em>Create Shortcut Action Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCreateShortcutDecorationsCommandClassName <em>Create Shortcut Decorations Command Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getShortcutPropertyTesterClassName <em>Shortcut Property Tester Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getContainsShortcutsTo <em>Contains Shortcuts To</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getShortcutsProvidedFor <em>Shortcuts Provided For</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getValidationProviderClassName <em>Validation Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getValidationProviderPriority <em>Validation Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMarkerNavigationProviderClassName <em>Marker Navigation Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMarkerNavigationProviderPriority <em>Marker Navigation Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isValidationEnabled <em>Validation Enabled</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMetricProviderClassName <em>Metric Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMetricProviderPriority <em>Metric Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getValidationDecoratorProviderClassName <em>Validation Decorator Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isValidationDecorators <em>Validation Decorators</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getValidationDecoratorProviderPriority <em>Validation Decorator Provider Priority</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isLiveValidationUIFeedback <em>Live Validation UI Feedback</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getUnits <em>Units</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditorGen <em>Editor Gen</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDomainDiagramElement <em>Domain Diagram Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getChildNodes <em>Child Nodes</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getTopLevelNodes <em>Top Level Nodes</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getLinks <em>Links</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCompartments <em>Compartments</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPalette <em>Palette</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isSynchronized <em>Synchronized</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPreferences <em>Preferences</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPreferencePages <em>Preference Pages</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {

	/**
	 * The default value of the '{@@link #getCanonicalEditPolicyClassName() <em>Canonical Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCanonicalEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCanonicalEditPolicyClassName() <em>Canonical Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCanonicalEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String canonicalEditPolicyClassName = CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditCommandsPackageName() <em>Edit Commands Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditCommandsPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditCommandsPackageName() <em>Edit Commands Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditCommandsPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String editCommandsPackageName = EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditHelpersPackageName() <em>Edit Helpers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelpersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_HELPERS_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditHelpersPackageName() <em>Edit Helpers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelpersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String editHelpersPackageName = EDIT_HELPERS_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditPartsPackageName() <em>Edit Parts Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartsPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_PARTS_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditPartsPackageName() <em>Edit Parts Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartsPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String editPartsPackageName = EDIT_PARTS_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditPoliciesPackageName() <em>Edit Policies Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPoliciesPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_POLICIES_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditPoliciesPackageName() <em>Edit Policies Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPoliciesPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String editPoliciesPackageName = EDIT_POLICIES_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getPreferencesPackageName() <em>Preferences Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPreferencesPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PREFERENCES_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPreferencesPackageName() <em>Preferences Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPreferencesPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String preferencesPackageName = PREFERENCES_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getProvidersPackageName() <em>Providers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getProvidersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PROVIDERS_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getProvidersPackageName() <em>Providers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getProvidersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String providersPackageName = PROVIDERS_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getParsersPackageName() <em>Parsers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getParsersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PARSERS_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getParsersPackageName() <em>Parsers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getParsersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String parsersPackageName = PARSERS_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNotationViewFactoriesPackageName() <em>Notation View Factories Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewFactoriesPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getNotationViewFactoriesPackageName() <em>Notation View Factories Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewFactoriesPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String notationViewFactoriesPackageName = NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getElementTypesClassName() <em>Element Types Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getElementTypesClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ELEMENT_TYPES_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getElementTypesClassName() <em>Element Types Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getElementTypesClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String elementTypesClassName = ELEMENT_TYPES_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNotationViewProviderClassName() <em>Notation View Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getNotationViewProviderClassName() <em>Notation View Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String notationViewProviderClassName = NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNotationViewProviderPriority() <em>Notation View Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority NOTATION_VIEW_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getNotationViewProviderPriority() <em>Notation View Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority notationViewProviderPriority = NOTATION_VIEW_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditPartProviderClassName() <em>Edit Part Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditPartProviderClassName() <em>Edit Part Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String editPartProviderClassName = EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditPartProviderPriority() <em>Edit Part Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority EDIT_PART_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getEditPartProviderPriority() <em>Edit Part Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority editPartProviderPriority = EDIT_PART_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getModelingAssistantProviderClassName() <em>Modeling Assistant Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelingAssistantProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getModelingAssistantProviderClassName() <em>Modeling Assistant Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelingAssistantProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String modelingAssistantProviderClassName = MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getModelingAssistantProviderPriority() <em>Modeling Assistant Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelingAssistantProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority MODELING_ASSISTANT_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getModelingAssistantProviderPriority() <em>Modeling Assistant Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelingAssistantProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority modelingAssistantProviderPriority = MODELING_ASSISTANT_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getIconProviderClassName() <em>Icon Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ICON_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getIconProviderClassName() <em>Icon Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String iconProviderClassName = ICON_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getIconProviderPriority() <em>Icon Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority ICON_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getIconProviderPriority() <em>Icon Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority iconProviderPriority = ICON_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getParserProviderClassName() <em>Parser Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getParserProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PARSER_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getParserProviderClassName() <em>Parser Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getParserProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String parserProviderClassName = PARSER_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getParserProviderPriority() <em>Parser Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getParserProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority PARSER_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getParserProviderPriority() <em>Parser Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getParserProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority parserProviderPriority = PARSER_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getContributionItemProviderClassName() <em>Contribution Item Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContributionItemProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getContributionItemProviderClassName() <em>Contribution Item Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContributionItemProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String contributionItemProviderClassName = CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getReorientConnectionViewCommandClassName() <em>Reorient Connection View Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReorientConnectionViewCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getReorientConnectionViewCommandClassName() <em>Reorient Connection View Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReorientConnectionViewCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String reorientConnectionViewCommandClassName = REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getBaseEditHelperClassName() <em>Base Edit Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseEditHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String BASE_EDIT_HELPER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getBaseEditHelperClassName() <em>Base Edit Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseEditHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String baseEditHelperClassName = BASE_EDIT_HELPER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditPartFactoryClassName() <em>Edit Part Factory Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartFactoryClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditPartFactoryClassName() <em>Edit Part Factory Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartFactoryClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String editPartFactoryClassName = EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getBaseExternalNodeLabelEditPartClassName() <em>Base External Node Label Edit Part Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseExternalNodeLabelEditPartClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getBaseExternalNodeLabelEditPartClassName() <em>Base External Node Label Edit Part Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseExternalNodeLabelEditPartClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String baseExternalNodeLabelEditPartClassName = BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getBaseItemSemanticEditPolicyClassName() <em>Base Item Semantic Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseItemSemanticEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getBaseItemSemanticEditPolicyClassName() <em>Base Item Semantic Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseItemSemanticEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String baseItemSemanticEditPolicyClassName = BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getBaseGraphicalNodeEditPolicyClassName() <em>Base Graphical Node Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseGraphicalNodeEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getBaseGraphicalNodeEditPolicyClassName() <em>Base Graphical Node Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBaseGraphicalNodeEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String baseGraphicalNodeEditPolicyClassName = BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getTextSelectionEditPolicyClassName() <em>Text Selection Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTextSelectionEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String TEXT_SELECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getTextSelectionEditPolicyClassName() <em>Text Selection Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTextSelectionEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String textSelectionEditPolicyClassName = TEXT_SELECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getTextNonResizableEditPolicyClassName() <em>Text Non Resizable Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTextNonResizableEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getTextNonResizableEditPolicyClassName() <em>Text Non Resizable Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTextNonResizableEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String textNonResizableEditPolicyClassName = TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreationWizardClassName() <em>Creation Wizard Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATION_WIZARD_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreationWizardClassName() <em>Creation Wizard Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String creationWizardClassName = CREATION_WIZARD_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreationWizardPageClassName() <em>Creation Wizard Page Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardPageClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATION_WIZARD_PAGE_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreationWizardPageClassName() <em>Creation Wizard Page Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardPageClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String creationWizardPageClassName = CREATION_WIZARD_PAGE_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreationWizardIconPath() <em>Creation Wizard Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATION_WIZARD_ICON_PATH_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreationWizardIconPath() <em>Creation Wizard Icon Path</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardIconPath()
	 * @@generated
	 * @@ordered
	 */
	protected String creationWizardIconPath = CREATION_WIZARD_ICON_PATH_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreationWizardIconPathX() <em>Creation Wizard Icon Path X</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardIconPathX()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATION_WIZARD_ICON_PATH_X_EDEFAULT = null;

	/**
	 * The default value of the '{@@link #getCreationWizardCategoryID() <em>Creation Wizard Category ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardCategoryID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATION_WIZARD_CATEGORY_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreationWizardCategoryID() <em>Creation Wizard Category ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationWizardCategoryID()
	 * @@generated
	 * @@ordered
	 */
	protected String creationWizardCategoryID = CREATION_WIZARD_CATEGORY_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDiagramEditorUtilClassName() <em>Diagram Editor Util Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramEditorUtilClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DIAGRAM_EDITOR_UTIL_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDiagramEditorUtilClassName() <em>Diagram Editor Util Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramEditorUtilClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String diagramEditorUtilClassName = DIAGRAM_EDITOR_UTIL_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDocumentProviderClassName() <em>Document Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDocumentProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDocumentProviderClassName() <em>Document Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDocumentProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String documentProviderClassName = DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getInitDiagramFileActionClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getInitDiagramFileActionClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String initDiagramFileActionClassName = INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNewDiagramFileWizardClassName() <em>New Diagram File Wizard Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNewDiagramFileWizardClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getNewDiagramFileWizardClassName() <em>New Diagram File Wizard Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNewDiagramFileWizardClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String newDiagramFileWizardClassName = NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDiagramContentInitializerClassName() <em>Diagram Content Initializer Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramContentInitializerClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDiagramContentInitializerClassName() <em>Diagram Content Initializer Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramContentInitializerClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String diagramContentInitializerClassName = DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMatchingStrategyClassName() <em>Matching Strategy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMatchingStrategyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String MATCHING_STRATEGY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getMatchingStrategyClassName() <em>Matching Strategy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMatchingStrategyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String matchingStrategyClassName = MATCHING_STRATEGY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getVisualIDRegistryClassName() <em>Visual ID Registry Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getVisualIDRegistryClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String VISUAL_ID_REGISTRY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getVisualIDRegistryClassName() <em>Visual ID Registry Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getVisualIDRegistryClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String visualIDRegistryClassName = VISUAL_ID_REGISTRY_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getElementChooserClassName() <em>Element Chooser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getElementChooserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getElementChooserClassName() <em>Element Chooser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getElementChooserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String elementChooserClassName = ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getLoadResourceActionClassName() <em>Load Resource Action Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLoadResourceActionClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LOAD_RESOURCE_ACTION_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getLoadResourceActionClassName() <em>Load Resource Action Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLoadResourceActionClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String loadResourceActionClassName = LOAD_RESOURCE_ACTION_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditingDomainID() <em>Editing Domain ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditingDomainID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDITING_DOMAIN_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditingDomainID() <em>Editing Domain ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditingDomainID()
	 * @@generated
	 * @@ordered
	 */
	protected String editingDomainID = EDITING_DOMAIN_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getShortcutsDecoratorProviderClassName() <em>Shortcuts Decorator Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getShortcutsDecoratorProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getShortcutsDecoratorProviderClassName() <em>Shortcuts Decorator Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getShortcutsDecoratorProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String shortcutsDecoratorProviderClassName = SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getShortcutsDecoratorProviderPriority() <em>Shortcuts Decorator Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getShortcutsDecoratorProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority SHORTCUTS_DECORATOR_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getShortcutsDecoratorProviderPriority() <em>Shortcuts Decorator Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getShortcutsDecoratorProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority shortcutsDecoratorProviderPriority = SHORTCUTS_DECORATOR_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreateShortcutActionClassName() <em>Create Shortcut Action Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateShortcutActionClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreateShortcutActionClassName() <em>Create Shortcut Action Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateShortcutActionClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String createShortcutActionClassName = CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreateShortcutDecorationsCommandClassName() <em>Create Shortcut Decorations Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateShortcutDecorationsCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreateShortcutDecorationsCommandClassName() <em>Create Shortcut Decorations Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateShortcutDecorationsCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String createShortcutDecorationsCommandClassName = CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getShortcutPropertyTesterClassName() <em>Shortcut Property Tester Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getShortcutPropertyTesterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getShortcutPropertyTesterClassName() <em>Shortcut Property Tester Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getShortcutPropertyTesterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String shortcutPropertyTesterClassName = SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getContainsShortcutsTo() <em>Contains Shortcuts To</em>}' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContainsShortcutsTo()
	 * @@generated
	 * @@ordered
	 */
	protected EList<String> containsShortcutsTo;

	/**
	 * The cached value of the '{@@link #getShortcutsProvidedFor() <em>Shortcuts Provided For</em>}' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getShortcutsProvidedFor()
	 * @@generated
	 * @@ordered
	 */
	protected EList<String> shortcutsProvidedFor;

	/**
	 * The default value of the '{@@link #getValidationProviderClassName() <em>Validation Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String VALIDATION_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getValidationProviderClassName() <em>Validation Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String validationProviderClassName = VALIDATION_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getValidationProviderPriority() <em>Validation Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority VALIDATION_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getValidationProviderPriority() <em>Validation Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority validationProviderPriority = VALIDATION_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMarkerNavigationProviderClassName() <em>Marker Navigation Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMarkerNavigationProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String MARKER_NAVIGATION_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getMarkerNavigationProviderClassName() <em>Marker Navigation Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMarkerNavigationProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String markerNavigationProviderClassName = MARKER_NAVIGATION_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMarkerNavigationProviderPriority() <em>Marker Navigation Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMarkerNavigationProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority MARKER_NAVIGATION_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getMarkerNavigationProviderPriority() <em>Marker Navigation Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMarkerNavigationProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority markerNavigationProviderPriority = MARKER_NAVIGATION_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #isValidationEnabled() <em>Validation Enabled</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isValidationEnabled()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean VALIDATION_ENABLED_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isValidationEnabled() <em>Validation Enabled</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isValidationEnabled()
	 * @@generated
	 * @@ordered
	 */
	protected boolean validationEnabled = VALIDATION_ENABLED_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMetricProviderClassName() <em>Metric Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetricProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String METRIC_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getMetricProviderClassName() <em>Metric Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetricProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String metricProviderClassName = METRIC_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMetricProviderPriority() <em>Metric Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetricProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority METRIC_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getMetricProviderPriority() <em>Metric Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetricProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority metricProviderPriority = METRIC_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #getValidationDecoratorProviderClassName() <em>Validation Decorator Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationDecoratorProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String VALIDATION_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getValidationDecoratorProviderClassName() <em>Validation Decorator Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationDecoratorProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String validationDecoratorProviderClassName = VALIDATION_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #isValidationDecorators() <em>Validation Decorators</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isValidationDecorators()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean VALIDATION_DECORATORS_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isValidationDecorators() <em>Validation Decorators</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isValidationDecorators()
	 * @@generated
	 * @@ordered
	 */
	protected boolean validationDecorators = VALIDATION_DECORATORS_EDEFAULT;

	/**
	 * The default value of the '{@@link #getValidationDecoratorProviderPriority() <em>Validation Decorator Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationDecoratorProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority VALIDATION_DECORATOR_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getValidationDecoratorProviderPriority() <em>Validation Decorator Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValidationDecoratorProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority validationDecoratorProviderPriority = VALIDATION_DECORATOR_PROVIDER_PRIORITY_EDEFAULT;

	/**
	 * The default value of the '{@@link #isLiveValidationUIFeedback() <em>Live Validation UI Feedback</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isLiveValidationUIFeedback()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean LIVE_VALIDATION_UI_FEEDBACK_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isLiveValidationUIFeedback() <em>Live Validation UI Feedback</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isLiveValidationUIFeedback()
	 * @@generated
	 * @@ordered
	 */
	protected boolean liveValidationUIFeedback = LIVE_VALIDATION_UI_FEEDBACK_EDEFAULT;

	/**
	 * The default value of the '{@@link #getUnits() <em>Units</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getUnits()
	 * @@generated
	 * @@ordered
	 */
	protected static final String UNITS_EDEFAULT = "Pixel";

	/**
	 * The cached value of the '{@@link #getUnits() <em>Units</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getUnits()
	 * @@generated
	 * @@ordered
	 */
	protected String units = UNITS_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getDomainDiagramElement() <em>Domain Diagram Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainDiagramElement()
	 * @@generated
	 * @@ordered
	 */
	protected GenClass domainDiagramElement;

	/**
	 * The cached value of the '{@@link #getChildNodes() <em>Child Nodes</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getChildNodes()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenChildNode> childNodes;

	/**
	 * The cached value of the '{@@link #getTopLevelNodes() <em>Top Level Nodes</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTopLevelNodes()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenTopLevelNode> topLevelNodes;

	/**
	 * The cached value of the '{@@link #getLinks() <em>Links</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinks()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenLink> links;

	/**
	 * The cached value of the '{@@link #getCompartments() <em>Compartments</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCompartments()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenCompartment> compartments;

	/**
	 * The cached value of the '{@@link #getPalette() <em>Palette</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPalette()
	 * @@generated
	 * @@ordered
	 */
	protected Palette palette;

	/**
	 * The default value of the '{@@link #isSynchronized() <em>Synchronized</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSynchronized()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean SYNCHRONIZED_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isSynchronized() <em>Synchronized</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSynchronized()
	 * @@generated
	 * @@ordered
	 */
	protected boolean synchronized_ = SYNCHRONIZED_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getPreferences() <em>Preferences</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPreferences()
	 * @@generated
	 * @@ordered
	 */
	protected GenDiagramPreferences preferences;

	/**
	 * The cached value of the '{@@link #getPreferencePages() <em>Preference Pages</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPreferencePages()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenPreferencePage> preferencePages;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDiagramImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenDiagram();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenNode> getContainedNodes() {
		List<GenTopLevelNode> topLevelNodes = getTopLevelNodes();
		return new EcoreEList.UnmodifiableEList<GenNode>(this, GMFGenPackage.eINSTANCE.getGenContainerBase_ContainedNodes(), topLevelNodes.size(), topLevelNodes.toArray());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenClass getDomainDiagramElement() {
		if (domainDiagramElement != null && domainDiagramElement.eIsProxy()) {
			InternalEObject oldDomainDiagramElement = (InternalEObject)domainDiagramElement;
			domainDiagramElement = (GenClass)eResolveProxy(oldDomainDiagramElement);
			if (domainDiagramElement != oldDomainDiagramElement) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT, oldDomainDiagramElement, domainDiagramElement));
			}
		}
		return domainDiagramElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenClass basicGetDomainDiagramElement() {
		return domainDiagramElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainDiagramElement(GenClass newDomainDiagramElement) {
		GenClass oldDomainDiagramElement = domainDiagramElement;
		domainDiagramElement = newDomainDiagramElement;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT, oldDomainDiagramElement, domainDiagramElement));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenChildNode> getChildNodes() {
		if (childNodes == null) {
			childNodes = new EObjectContainmentWithInverseEList<GenChildNode>(GenChildNode.class, this, GMFGenPackage.GEN_DIAGRAM__CHILD_NODES, GMFGenPackage.GEN_CHILD_NODE__DIAGRAM);
		}
		return childNodes;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenTopLevelNode> getTopLevelNodes() {
		if (topLevelNodes == null) {
			topLevelNodes = new EObjectContainmentWithInverseEList<GenTopLevelNode>(GenTopLevelNode.class, this, GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES, GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM);
		}
		return topLevelNodes;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenLink> getLinks() {
		if (links == null) {
			links = new EObjectContainmentWithInverseEList<GenLink>(GenLink.class, this, GMFGenPackage.GEN_DIAGRAM__LINKS, GMFGenPackage.GEN_LINK__DIAGRAM);
		}
		return links;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenCompartment> getCompartments() {
		if (compartments == null) {
			compartments = new EObjectContainmentWithInverseEList<GenCompartment>(GenCompartment.class, this, GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS, GMFGenPackage.GEN_COMPARTMENT__DIAGRAM);
		}
		return compartments;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Palette getPalette() {
		return palette;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetPalette(Palette newPalette, NotificationChain msgs) {
		Palette oldPalette = palette;
		palette = newPalette;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PALETTE, oldPalette, newPalette);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPalette(Palette newPalette) {
		if (newPalette != palette) {
			NotificationChain msgs = null;
			if (palette != null)
				msgs = ((InternalEObject)palette).eInverseRemove(this, GMFGenPackage.PALETTE__DIAGRAM, Palette.class, msgs);
			if (newPalette != null)
				msgs = ((InternalEObject)newPalette).eInverseAdd(this, GMFGenPackage.PALETTE__DIAGRAM, Palette.class, msgs);
			msgs = basicSetPalette(newPalette, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PALETTE, newPalette, newPalette));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isSynchronized() {
		return synchronized_;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSynchronized(boolean newSynchronized) {
		boolean oldSynchronized = synchronized_;
		synchronized_ = newSynchronized;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__SYNCHRONIZED, oldSynchronized, synchronized_));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenDiagramPreferences getPreferences() {
		return preferences;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetPreferences(GenDiagramPreferences newPreferences, NotificationChain msgs) {
		GenDiagramPreferences oldPreferences = preferences;
		preferences = newPreferences;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PREFERENCES, oldPreferences, newPreferences);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPreferences(GenDiagramPreferences newPreferences) {
		if (newPreferences != preferences) {
			NotificationChain msgs = null;
			if (preferences != null)
				msgs = ((InternalEObject)preferences).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__PREFERENCES, null, msgs);
			if (newPreferences != null)
				msgs = ((InternalEObject)newPreferences).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__PREFERENCES, null, msgs);
			msgs = basicSetPreferences(newPreferences, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PREFERENCES, newPreferences, newPreferences));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenPreferencePage> getPreferencePages() {
		if (preferencePages == null) {
			preferencePages = new EObjectContainmentEList<GenPreferencePage>(GenPreferencePage.class, this, GMFGenPackage.GEN_DIAGRAM__PREFERENCE_PAGES);
		}
		return preferencePages;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditCommandsPackageNameGen() {
		return editCommandsPackageName;
	}

	public String getEditCommandsPackageName() {
		String value = getEditCommandsPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".edit.commands";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditCommandsPackageName(String newEditCommandsPackageName) {
		String oldEditCommandsPackageName = editCommandsPackageName;
		editCommandsPackageName = newEditCommandsPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME, oldEditCommandsPackageName, editCommandsPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditHelpersPackageNameGen() {
		return editHelpersPackageName;
	}

	public String getEditHelpersPackageName() {
		String value = getEditHelpersPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".edit.helpers";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditHelpersPackageName(String newEditHelpersPackageName) {
		String oldEditHelpersPackageName = editHelpersPackageName;
		editHelpersPackageName = newEditHelpersPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_HELPERS_PACKAGE_NAME, oldEditHelpersPackageName, editHelpersPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditPartsPackageNameGen() {
		return editPartsPackageName;
	}

	public String getEditPartsPackageName() {
		String value = getEditPartsPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".edit.parts";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditPartsPackageName(String newEditPartsPackageName) {
		String oldEditPartsPackageName = editPartsPackageName;
		editPartsPackageName = newEditPartsPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME, oldEditPartsPackageName, editPartsPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditPoliciesPackageNameGen() {
		return editPoliciesPackageName;
	}

	public String getEditPoliciesPackageName() {
		String value = getEditPoliciesPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".edit.policies";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditPoliciesPackageName(String newEditPoliciesPackageName) {
		String oldEditPoliciesPackageName = editPoliciesPackageName;
		editPoliciesPackageName = newEditPoliciesPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME, oldEditPoliciesPackageName, editPoliciesPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPreferencesPackageNameGen() {
		return preferencesPackageName;
	}

	public String getPreferencesPackageName() {
		String value = getPreferencesPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".preferences";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPreferencesPackageName(String newPreferencesPackageName) {
		String oldPreferencesPackageName = preferencesPackageName;
		preferencesPackageName = newPreferencesPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PREFERENCES_PACKAGE_NAME, oldPreferencesPackageName, preferencesPackageName));
	}

	public String getClassNamePrefix() {
		// should be consistent with ClassNamingStrategy
		if (getDomainDiagramElement() != null) {
			String name = getDomainDiagramElement().getName();
			if (!isEmpty(name)) {
				return getValidClassName(name);
			}
		}
		return CLASS_NAME_PREFIX;
	}

	public GenDiagram getDiagram() {
		return this;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getVisualIDRegistryClassNameGen() {
		return visualIDRegistryClassName;
	}

	public String getVisualIDRegistryClassName() {
		String value = getVisualIDRegistryClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "VisualIDRegistry"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setVisualIDRegistryClassName(String newVisualIDRegistryClassName) {
		String oldVisualIDRegistryClassName = visualIDRegistryClassName;
		visualIDRegistryClassName = newVisualIDRegistryClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME, oldVisualIDRegistryClassName, visualIDRegistryClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreateShortcutActionClassNameGen() {
		return createShortcutActionClassName;
	}

	public String getCreateShortcutActionClassName() {
		String value = getCreateShortcutActionClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "CreateShortcutAction"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreateShortcutActionClassName(String newCreateShortcutActionClassName) {
		String oldCreateShortcutActionClassName = createShortcutActionClassName;
		createShortcutActionClassName = newCreateShortcutActionClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME, oldCreateShortcutActionClassName, createShortcutActionClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreateShortcutDecorationsCommandClassNameGen() {
		return createShortcutDecorationsCommandClassName;
	}

	public String getCreateShortcutDecorationsCommandClassName() {
		String value = getCreateShortcutDecorationsCommandClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "CreateShortcutDecorationsCommand"; //$NON-NLS-1$
		}
		return value;
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreateShortcutDecorationsCommandClassName(String newCreateShortcutDecorationsCommandClassName) {
		String oldCreateShortcutDecorationsCommandClassName = createShortcutDecorationsCommandClassName;
		createShortcutDecorationsCommandClassName = newCreateShortcutDecorationsCommandClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME, oldCreateShortcutDecorationsCommandClassName, createShortcutDecorationsCommandClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getShortcutPropertyTesterClassNameGen() {
		return shortcutPropertyTesterClassName;
	}

	public String getShortcutPropertyTesterClassName() {
		String value = getShortcutPropertyTesterClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ShortcutPropertyTester"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setShortcutPropertyTesterClassName(String newShortcutPropertyTesterClassName) {
		String oldShortcutPropertyTesterClassName = shortcutPropertyTesterClassName;
		shortcutPropertyTesterClassName = newShortcutPropertyTesterClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME, oldShortcutPropertyTesterClassName, shortcutPropertyTesterClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getElementChooserClassNameGen() {
		return elementChooserClassName;
	}

	public String getElementChooserClassName() {
		String value = getElementChooserClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ElementChooserDialog"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setElementChooserClassName(String newElementChooserClassName) {
		String oldElementChooserClassName = elementChooserClassName;
		elementChooserClassName = newElementChooserClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME, oldElementChooserClassName, elementChooserClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLoadResourceActionClassNameGen() {
		return loadResourceActionClassName;
	}

	public String getLoadResourceActionClassName() {
		String value = getLoadResourceActionClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "LoadResourceAction"; //$NON-NLS-1$
		}
		return value;
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLoadResourceActionClassName(String newLoadResourceActionClassName) {
		String oldLoadResourceActionClassName = loadResourceActionClassName;
		loadResourceActionClassName = newLoadResourceActionClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__LOAD_RESOURCE_ACTION_CLASS_NAME, oldLoadResourceActionClassName, loadResourceActionClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditingDomainIDGen() {
		return editingDomainID;
	}

	public String getEditingDomainID() {
		String value = getEditingDomainIDGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPlugin().getID() + ".EditingDomain"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditingDomainID(String newEditingDomainID) {
		String oldEditingDomainID = editingDomainID;
		editingDomainID = newEditingDomainID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDITING_DOMAIN_ID, oldEditingDomainID, editingDomainID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getShortcutsDecoratorProviderClassNameGen() {
		return shortcutsDecoratorProviderClassName;
	}

	public String getShortcutsDecoratorProviderClassName() {
		String value = getShortcutsDecoratorProviderClassNameGen();
		if(isEmpty(value)) {
			value = getDomainPackageCapName() + "ShortcutsDecoratorProvider"; //$NON-NLS-1$						
		}
		return value;		
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setShortcutsDecoratorProviderClassName(String newShortcutsDecoratorProviderClassName) {
		String oldShortcutsDecoratorProviderClassName = shortcutsDecoratorProviderClassName;
		shortcutsDecoratorProviderClassName = newShortcutsDecoratorProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME, oldShortcutsDecoratorProviderClassName, shortcutsDecoratorProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getShortcutsDecoratorProviderPriority() {
		return shortcutsDecoratorProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setShortcutsDecoratorProviderPriority(ProviderPriority newShortcutsDecoratorProviderPriority) {
		ProviderPriority oldShortcutsDecoratorProviderPriority = shortcutsDecoratorProviderPriority;
		shortcutsDecoratorProviderPriority = newShortcutsDecoratorProviderPriority == null ? SHORTCUTS_DECORATOR_PROVIDER_PRIORITY_EDEFAULT : newShortcutsDecoratorProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY, oldShortcutsDecoratorProviderPriority, shortcutsDecoratorProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getValidationProviderClassNameGen() {
		return validationProviderClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getValidationProviderClassName() {
		String value = getValidationProviderClassNameGen();
		if(isEmpty(value)) {
			value = getDomainPackageCapName() + "ValidationProvider"; //$NON-NLS-1$						
		}
		return value;		
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setValidationProviderClassName(String newValidationProviderClassName) {
		String oldValidationProviderClassName = validationProviderClassName;
		validationProviderClassName = newValidationProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_CLASS_NAME, oldValidationProviderClassName, validationProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getValidationProviderPriority() {
		return validationProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setValidationProviderPriority(ProviderPriority newValidationProviderPriority) {
		ProviderPriority oldValidationProviderPriority = validationProviderPriority;
		validationProviderPriority = newValidationProviderPriority == null ? VALIDATION_PROVIDER_PRIORITY_EDEFAULT : newValidationProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_PRIORITY, oldValidationProviderPriority, validationProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getMarkerNavigationProviderClassNameGen() {
		return markerNavigationProviderClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMarkerNavigationProviderClassName() {
		String value = getMarkerNavigationProviderClassNameGen();
		if(isEmpty(value)) {
			value = getDomainPackageCapName() + "MarkerNavigationProvider"; //$NON-NLS-1$						
		}
		return value;
	}	

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMarkerNavigationProviderQualifiedClassName() {
		return getProvidersPackageName() + "." + getMarkerNavigationProviderClassName(); //$NON-NLS-1$
	}	
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMetricProviderQualifiedClassName() {
		return getProvidersPackageName() + "." + getMetricProviderClassName(); //$NON-NLS-1$		
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMetricViewID() {
		return getEditorGen().getPackageNamePrefix() + ".metricView"; //$NON-NLS-1$
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getValidationDecoratorProviderQualifiedClassName() {
		return getProvidersPackageName() + "." + getValidationDecoratorProviderClassName(); //$NON-NLS-1$
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<String> getContainsShortcutsTo() {
		if (containsShortcutsTo == null) {
			containsShortcutsTo = new EDataTypeUniqueEList<String>(String.class, this, GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO);
		}
		return containsShortcutsTo;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<String> getShortcutsProvidedFor() {
		if (shortcutsProvidedFor == null) {
			shortcutsProvidedFor = new EDataTypeUniqueEList<String>(String.class, this, GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR);
		}
		return shortcutsProvidedFor;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isValidationEnabled() {
		return validationEnabled;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setValidationEnabled(boolean newValidationEnabled) {
		boolean oldValidationEnabled = validationEnabled;
		validationEnabled = newValidationEnabled;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VALIDATION_ENABLED, oldValidationEnabled, validationEnabled));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getMetricProviderClassNameGen() {
		return metricProviderClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMetricProviderClassName() {
		String value = getMetricProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "MetricProvider"; //$NON-NLS-1$
		}
		return value;
	}	

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMetricProviderClassName(String newMetricProviderClassName) {
		String oldMetricProviderClassName = metricProviderClassName;
		metricProviderClassName = newMetricProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_CLASS_NAME, oldMetricProviderClassName, metricProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getMetricProviderPriority() {
		return metricProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMetricProviderPriority(ProviderPriority newMetricProviderPriority) {
		ProviderPriority oldMetricProviderPriority = metricProviderPriority;
		metricProviderPriority = newMetricProviderPriority == null ? METRIC_PROVIDER_PRIORITY_EDEFAULT : newMetricProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_PRIORITY, oldMetricProviderPriority, metricProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getValidationDecoratorProviderClassNameGen() {
		return validationDecoratorProviderClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getValidationDecoratorProviderClassName() {
		String value = getValidationDecoratorProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ValidationDecoratorProvider"; //$NON-NLS-1$
		}
		return value;
	}
	

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setValidationDecoratorProviderClassName(String newValidationDecoratorProviderClassName) {
		String oldValidationDecoratorProviderClassName = validationDecoratorProviderClassName;
		validationDecoratorProviderClassName = newValidationDecoratorProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME, oldValidationDecoratorProviderClassName, validationDecoratorProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isValidationDecorators() {
		return validationDecorators;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setValidationDecorators(boolean newValidationDecorators) {
		boolean oldValidationDecorators = validationDecorators;
		validationDecorators = newValidationDecorators;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATORS, oldValidationDecorators, validationDecorators));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getValidationDecoratorProviderPriority() {
		return validationDecoratorProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setValidationDecoratorProviderPriority(ProviderPriority newValidationDecoratorProviderPriority) {
		ProviderPriority oldValidationDecoratorProviderPriority = validationDecoratorProviderPriority;
		validationDecoratorProviderPriority = newValidationDecoratorProviderPriority == null ? VALIDATION_DECORATOR_PROVIDER_PRIORITY_EDEFAULT : newValidationDecoratorProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_PRIORITY, oldValidationDecoratorProviderPriority, validationDecoratorProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isLiveValidationUIFeedback() {
		return liveValidationUIFeedback;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLiveValidationUIFeedback(boolean newLiveValidationUIFeedback) {
		boolean oldLiveValidationUIFeedback = liveValidationUIFeedback;
		liveValidationUIFeedback = newLiveValidationUIFeedback;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__LIVE_VALIDATION_UI_FEEDBACK, oldLiveValidationUIFeedback, liveValidationUIFeedback));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getUnits() {
		return units;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setUnits(String newUnits) {
		String oldUnits = units;
		units = newUnits;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__UNITS, oldUnits, units));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenEditorGenerator getEditorGen() {
		if (eContainerFeatureID != GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN) return null;
		return (GenEditorGenerator)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getProvidersPackageNameGen() {
		return providersPackageName;
	}

	public String getProvidersPackageName() {
		String value = getProvidersPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".providers";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setProvidersPackageName(String newProvidersPackageName) {
		String oldProvidersPackageName = providersPackageName;
		providersPackageName = newProvidersPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME, oldProvidersPackageName, providersPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getParsersPackageNameGen() {
		return parsersPackageName;
	}

	public String getParsersPackageName() {
		String value = getParsersPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".parsers";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setParsersPackageName(String newParsersPackageName) {
		String oldParsersPackageName = parsersPackageName;
		parsersPackageName = newParsersPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PARSERS_PACKAGE_NAME, oldParsersPackageName, parsersPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getNotationViewFactoriesPackageNameGen() {
		return notationViewFactoriesPackageName;
	}

	public String getNotationViewFactoriesPackageName() {
		String value = getNotationViewFactoriesPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".view.factories";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNotationViewFactoriesPackageName(String newNotationViewFactoriesPackageName) {
		String oldNotationViewFactoriesPackageName = notationViewFactoriesPackageName;
		notationViewFactoriesPackageName = newNotationViewFactoriesPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME, oldNotationViewFactoriesPackageName, notationViewFactoriesPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDocumentProviderClassNameGen() {
		return documentProviderClassName;
	}

	public String getDocumentProviderClassName() {
		String value = getDocumentProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DocumentProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDocumentProviderClassName(String newDocumentProviderClassName) {
		String oldDocumentProviderClassName = documentProviderClassName;
		documentProviderClassName = newDocumentProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME, oldDocumentProviderClassName, documentProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditPartFactoryClassNameGen() {
		return editPartFactoryClassName;
	}

	public String getEditPartFactoryClassName() {
		String value = getEditPartFactoryClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "EditPartFactory"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditPartFactoryClassName(String newEditPartFactoryClassName) {
		String oldEditPartFactoryClassName = editPartFactoryClassName;
		editPartFactoryClassName = newEditPartFactoryClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME, oldEditPartFactoryClassName, editPartFactoryClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getBaseExternalNodeLabelEditPartClassNameGen() {
		return baseExternalNodeLabelEditPartClassName;
	}

	public String getBaseExternalNodeLabelEditPartClassName() {
		String value = getBaseExternalNodeLabelEditPartClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ExtNodeLabelEditPart"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBaseExternalNodeLabelEditPartClassName(String newBaseExternalNodeLabelEditPartClassName) {
		String oldBaseExternalNodeLabelEditPartClassName = baseExternalNodeLabelEditPartClassName;
		baseExternalNodeLabelEditPartClassName = newBaseExternalNodeLabelEditPartClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME, oldBaseExternalNodeLabelEditPartClassName, baseExternalNodeLabelEditPartClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getBaseItemSemanticEditPolicyClassNameGen() {
		return baseItemSemanticEditPolicyClassName;
	}

	public String getBaseItemSemanticEditPolicyClassName() {
		String value = getBaseItemSemanticEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "BaseItemSemanticEditPolicy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBaseItemSemanticEditPolicyClassName(String newBaseItemSemanticEditPolicyClassName) {
		String oldBaseItemSemanticEditPolicyClassName = baseItemSemanticEditPolicyClassName;
		baseItemSemanticEditPolicyClassName = newBaseItemSemanticEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME, oldBaseItemSemanticEditPolicyClassName, baseItemSemanticEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getBaseGraphicalNodeEditPolicyClassNameGen() {
		return baseGraphicalNodeEditPolicyClassName;
	}

	public String getBaseGraphicalNodeEditPolicyClassName() {
		String value = getBaseGraphicalNodeEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "GraphicalNodeEditPolicy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBaseGraphicalNodeEditPolicyClassName(String newBaseGraphicalNodeEditPolicyClassName) {
		String oldBaseGraphicalNodeEditPolicyClassName = baseGraphicalNodeEditPolicyClassName;
		baseGraphicalNodeEditPolicyClassName = newBaseGraphicalNodeEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME, oldBaseGraphicalNodeEditPolicyClassName, baseGraphicalNodeEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCanonicalEditPolicyClassNameGen() {
		return canonicalEditPolicyClassName;
	}

	public String getCanonicalEditPolicyClassName() {
		return getValidClassName(getCanonicalEditPolicyClassNameGen(), this, CANONICAL_EDIT_POLICY_SUFFIX);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCanonicalEditPolicyClassName(String newCanonicalEditPolicyClassName) {
		String oldCanonicalEditPolicyClassName = canonicalEditPolicyClassName;
		canonicalEditPolicyClassName = newCanonicalEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME, oldCanonicalEditPolicyClassName, canonicalEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getTextSelectionEditPolicyClassNameGen() {
		return textSelectionEditPolicyClassName;
	}

	public String getTextSelectionEditPolicyClassName() {
		String value = getTextSelectionEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "TextSelectionEditPolicy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTextSelectionEditPolicyClassName(String newTextSelectionEditPolicyClassName) {
		String oldTextSelectionEditPolicyClassName = textSelectionEditPolicyClassName;
		textSelectionEditPolicyClassName = newTextSelectionEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME, oldTextSelectionEditPolicyClassName, textSelectionEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getTextNonResizableEditPolicyClassNameGen() {
		return textNonResizableEditPolicyClassName;
	}

	public String getTextNonResizableEditPolicyClassName() {
		String value = getTextNonResizableEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "TextNonResizableEditPolicy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTextNonResizableEditPolicyClassName(String newTextNonResizableEditPolicyClassName) {
		String oldTextNonResizableEditPolicyClassName = textNonResizableEditPolicyClassName;
		textNonResizableEditPolicyClassName = newTextNonResizableEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME, oldTextNonResizableEditPolicyClassName, textNonResizableEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getElementTypesClassNameGen() {
		return elementTypesClassName;
	}

	public String getElementTypesClassName() {
		String value = getElementTypesClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ElementTypes"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setElementTypesClassName(String newElementTypesClassName) {
		String oldElementTypesClassName = elementTypesClassName;
		elementTypesClassName = newElementTypesClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME, oldElementTypesClassName, elementTypesClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getNotationViewProviderClassNameGen() {
		return notationViewProviderClassName;
	}

	public String getNotationViewProviderClassName() {
		String value = getNotationViewProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ViewProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNotationViewProviderClassName(String newNotationViewProviderClassName) {
		String oldNotationViewProviderClassName = notationViewProviderClassName;
		notationViewProviderClassName = newNotationViewProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME, oldNotationViewProviderClassName, notationViewProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getNotationViewProviderPriority() {
		return notationViewProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNotationViewProviderPriority(ProviderPriority newNotationViewProviderPriority) {
		ProviderPriority oldNotationViewProviderPriority = notationViewProviderPriority;
		notationViewProviderPriority = newNotationViewProviderPriority == null ? NOTATION_VIEW_PROVIDER_PRIORITY_EDEFAULT : newNotationViewProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_PRIORITY, oldNotationViewProviderPriority, notationViewProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getReorientConnectionViewCommandClassNameGen() {
		return reorientConnectionViewCommandClassName;
	}

	public String getReorientConnectionViewCommandClassName() {
		String value = getReorientConnectionViewCommandClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ReorientConnectionViewCommand"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setReorientConnectionViewCommandClassName(String newReorientConnectionViewCommandClassName) {
		String oldReorientConnectionViewCommandClassName = reorientConnectionViewCommandClassName;
		reorientConnectionViewCommandClassName = newReorientConnectionViewCommandClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME, oldReorientConnectionViewCommandClassName, reorientConnectionViewCommandClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getBaseEditHelperClassNameGen() {
		return baseEditHelperClassName;
	}

	public String getBaseEditHelperClassName() {
		String value = getBaseEditHelperClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "BaseEditHelper"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBaseEditHelperClassName(String newBaseEditHelperClassName) {
		String oldBaseEditHelperClassName = baseEditHelperClassName;
		baseEditHelperClassName = newBaseEditHelperClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__BASE_EDIT_HELPER_CLASS_NAME, oldBaseEditHelperClassName, baseEditHelperClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getInitDiagramFileActionClassNameGen() {
		return initDiagramFileActionClassName;
	}

	public String getInitDiagramFileActionClassName() {
		String value = getInitDiagramFileActionClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "InitDiagramFileAction"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setInitDiagramFileActionClassName(String newInitDiagramFileActionClassName) {
		String oldInitDiagramFileActionClassName = initDiagramFileActionClassName;
		initDiagramFileActionClassName = newInitDiagramFileActionClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME, oldInitDiagramFileActionClassName, initDiagramFileActionClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getNewDiagramFileWizardClassNameGen() {
		return newDiagramFileWizardClassName;
	}

	public String getNewDiagramFileWizardClassName() {
		String value = getNewDiagramFileWizardClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "NewDiagramFileWizard"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNewDiagramFileWizardClassName(String newNewDiagramFileWizardClassName) {
		String oldNewDiagramFileWizardClassName = newDiagramFileWizardClassName;
		newDiagramFileWizardClassName = newNewDiagramFileWizardClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME, oldNewDiagramFileWizardClassName, newDiagramFileWizardClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDiagramContentInitializerClassNameGen() {
		return diagramContentInitializerClassName;
	}

	public String getDiagramContentInitializerClassName() {
		String value = getDiagramContentInitializerClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramContentInitializer"; //$NON-NLS-1$
		}
		return value;
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramContentInitializerClassName(String newDiagramContentInitializerClassName) {
		String oldDiagramContentInitializerClassName = diagramContentInitializerClassName;
		diagramContentInitializerClassName = newDiagramContentInitializerClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME, oldDiagramContentInitializerClassName, diagramContentInitializerClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreationWizardClassNameGen() {
		return creationWizardClassName;
	}

	public String getCreationWizardClassName() {
		String value = getCreationWizardClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "CreationWizard"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreationWizardClassName(String newCreationWizardClassName) {
		String oldCreationWizardClassName = creationWizardClassName;
		creationWizardClassName = newCreationWizardClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME, oldCreationWizardClassName, creationWizardClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreationWizardPageClassNameGen() {
		return creationWizardPageClassName;
	}

	public String getCreationWizardPageClassName() {
		String value = getCreationWizardPageClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "CreationWizardPage"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreationWizardPageClassName(String newCreationWizardPageClassName) {
		String oldCreationWizardPageClassName = creationWizardPageClassName;
		creationWizardPageClassName = newCreationWizardPageClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME, oldCreationWizardPageClassName, creationWizardPageClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreationWizardIconPathGen() {
		return creationWizardIconPath;
	}

	public String getCreationWizardIconPath() {
		String value = getCreationWizardIconPathGen();
		if (isEmpty(value)) {
			return createDefaultIconPath();
		}
		return value;
	}

	static final String REUSE_ICON_VALUE = "{reuseEMFIcon}";

	public String getCreationWizardIconPathX() {
		String value = getCreationWizardIconPath();
		if (!REUSE_ICON_VALUE.equalsIgnoreCase(value)) {
			return value;
		}
		if (getDomainDiagramElement() != null) {
			GenPackage domainMetaModel = getDomainDiagramElement().getGenPackage();
			return "../" + getEditorGen().getDomainGenModel().getEditorPluginID() + "/icons/full/obj16/" + domainMetaModel.getPrefix() + "ModelFile.gif";
		} else {
			// no much sense to return value of REUSE_ICON_VALUE constant
			return createDefaultIconPath();
		}
	}

	private String createDefaultIconPath() {
		final String stem = getDomainDiagramElement() == null ? "" : getDomainDiagramElement().getGenPackage().getPrefix();
		return "icons/obj16/" + stem +"DiagramFile.gif";
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreationWizardIconPath(String newCreationWizardIconPath) {
		String oldCreationWizardIconPath = creationWizardIconPath;
		creationWizardIconPath = newCreationWizardIconPath;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH, oldCreationWizardIconPath, creationWizardIconPath));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreationWizardCategoryIDGen() {
		return creationWizardCategoryID;
	}

	public String getCreationWizardCategoryID() {
		String value = getCreationWizardCategoryIDGen();
		if (isEmpty(value)) {
			value = "org.eclipse.ui.Examples"; //$NON-NLS-1$
		}
		return value;
	}

	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreationWizardCategoryID(String newCreationWizardCategoryID) {
		String oldCreationWizardCategoryID = creationWizardCategoryID;
		creationWizardCategoryID = newCreationWizardCategoryID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CATEGORY_ID, oldCreationWizardCategoryID, creationWizardCategoryID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getDiagramEditorUtilClassNameGen() {
		return diagramEditorUtilClassName;
	}

	public String getDiagramEditorUtilClassName() {
		String value = getDiagramEditorUtilClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramEditorUtil"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramEditorUtilClassName(String newDiagramEditorUtilClassName) {
		String oldDiagramEditorUtilClassName = diagramEditorUtilClassName;
		diagramEditorUtilClassName = newDiagramEditorUtilClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME, oldDiagramEditorUtilClassName, diagramEditorUtilClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getMatchingStrategyClassNameGen() {
		return matchingStrategyClassName;
	}

	public String getMatchingStrategyClassName() {
		String value = getMatchingStrategyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "MatchingStrategy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMatchingStrategyClassName(String newMatchingStrategyClassName) {
		String oldMatchingStrategyClassName = matchingStrategyClassName;
		matchingStrategyClassName = newMatchingStrategyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME, oldMatchingStrategyClassName, matchingStrategyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditPartProviderClassNameGen() {
		return editPartProviderClassName;
	}

	public String getEditPartProviderClassName() {
		String value = getEditPartProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "EditPartProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditPartProviderClassName(String newEditPartProviderClassName) {
		String oldEditPartProviderClassName = editPartProviderClassName;
		editPartProviderClassName = newEditPartProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME, oldEditPartProviderClassName, editPartProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getEditPartProviderPriority() {
		return editPartProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditPartProviderPriority(ProviderPriority newEditPartProviderPriority) {
		ProviderPriority oldEditPartProviderPriority = editPartProviderPriority;
		editPartProviderPriority = newEditPartProviderPriority == null ? EDIT_PART_PROVIDER_PRIORITY_EDEFAULT : newEditPartProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_PRIORITY, oldEditPartProviderPriority, editPartProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getModelingAssistantProviderClassNameGen() {
		return modelingAssistantProviderClassName;
	}

	public String getModelingAssistantProviderClassName() {
		String value = getModelingAssistantProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ModelingAssistantProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setModelingAssistantProviderClassName(String newModelingAssistantProviderClassName) {
		String oldModelingAssistantProviderClassName = modelingAssistantProviderClassName;
		modelingAssistantProviderClassName = newModelingAssistantProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME, oldModelingAssistantProviderClassName, modelingAssistantProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getModelingAssistantProviderPriority() {
		return modelingAssistantProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setModelingAssistantProviderPriority(ProviderPriority newModelingAssistantProviderPriority) {
		ProviderPriority oldModelingAssistantProviderPriority = modelingAssistantProviderPriority;
		modelingAssistantProviderPriority = newModelingAssistantProviderPriority == null ? MODELING_ASSISTANT_PROVIDER_PRIORITY_EDEFAULT : newModelingAssistantProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_PRIORITY, oldModelingAssistantProviderPriority, modelingAssistantProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getIconProviderClassNameGen() {
		return iconProviderClassName;
	}

	public String getIconProviderClassName() {
		String value = getIconProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "IconProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setIconProviderClassName(String newIconProviderClassName) {
		String oldIconProviderClassName = iconProviderClassName;
		iconProviderClassName = newIconProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME, oldIconProviderClassName, iconProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getIconProviderPriority() {
		return iconProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setIconProviderPriority(ProviderPriority newIconProviderPriority) {
		ProviderPriority oldIconProviderPriority = iconProviderPriority;
		iconProviderPriority = newIconProviderPriority == null ? ICON_PROVIDER_PRIORITY_EDEFAULT : newIconProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_PRIORITY, oldIconProviderPriority, iconProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getParserProviderClassNameGen() {
		return parserProviderClassName;
	}

	public String getParserProviderClassName() {
		String value = getParserProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ParserProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setParserProviderClassName(String newParserProviderClassName) {
		String oldParserProviderClassName = parserProviderClassName;
		parserProviderClassName = newParserProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_CLASS_NAME, oldParserProviderClassName, parserProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getParserProviderPriority() {
		return parserProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setParserProviderPriority(ProviderPriority newParserProviderPriority) {
		ProviderPriority oldParserProviderPriority = parserProviderPriority;
		parserProviderPriority = newParserProviderPriority == null ? PARSER_PROVIDER_PRIORITY_EDEFAULT : newParserProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_PRIORITY, oldParserProviderPriority, parserProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getContributionItemProviderClassNameGen() {
		return contributionItemProviderClassName;
	}

	public String getContributionItemProviderClassName() {
		String value = getContributionItemProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ContributionItemProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContributionItemProviderClassName(String newContributionItemProviderClassName) {
		String oldContributionItemProviderClassName = contributionItemProviderClassName;
		contributionItemProviderClassName = newContributionItemProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME, oldContributionItemProviderClassName, contributionItemProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getContributionItemProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getContributionItemProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenNode> getAssistantNodes() {
		return getContainedNodes();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public boolean needsCanonicalEditPolicy() {
		return !isSansDomain() && isSynchronized() && !getContainedNodes().isEmpty();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenNode> getAllNodes() {
		BasicEList<GenNode> result = new BasicEList<GenNode>();
		result.addAll(getTopLevelNodes());
		result.addAll(getChildNodes());
		return new BasicEList.UnmodifiableEList<GenNode>(result.size(), result.toArray());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenChildContainer> getAllChildContainers() {
		BasicEList<GenChildContainer> result = new BasicEList<GenChildContainer>();
		result.addAll(getAllNodes());
		result.addAll(getCompartments());
		return new BasicEList.UnmodifiableEList<GenChildContainer>(result.size(), result.toArray());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenContainerBase> getAllContainers() {
		BasicEList<GenContainerBase> result = new BasicEList<GenContainerBase>();
		result.addAll(getAllChildContainers());
		result.add(this);
		return new BasicEList.UnmodifiableEList<GenContainerBase>(result.size(), result.toArray());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getVisualIDRegistryQualifiedClassName() {
		return getEditorPackageName() + '.' + getVisualIDRegistryClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreateShortcutActionQualifiedClassName() {
		return getEditorPackageName() + '.' + getCreateShortcutActionClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreateShortcutDecorationsCommandQualifiedClassName() {
		return getEditCommandsPackageName() + '.' + getCreateShortcutDecorationsCommandClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getShortcutPropertyTesterQualifiedClassName() {
		return getEditorPackageName() + '.' + getShortcutPropertyTesterClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getElementChooserQualifiedClassName() {
		return getEditorPackageName() + '.' + getElementChooserClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLoadResourceActionQualifiedClassName() {
		return getEditorPackageName() + '.' + getLoadResourceActionClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public boolean generateInitDiagramAction() {
		return getDomainDiagramElement() != null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getShortcutsDecoratorProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getShortcutsDecoratorProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getValidationProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getValidationProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getValidationDiagnosticMarkerType() {
		return "diagnostic"; //$NON-NLS-1$
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMarkerNavigationProviderClassName(String newMarkerNavigationProviderClassName) {
		String oldMarkerNavigationProviderClassName = markerNavigationProviderClassName;
		markerNavigationProviderClassName = newMarkerNavigationProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_CLASS_NAME, oldMarkerNavigationProviderClassName, markerNavigationProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getMarkerNavigationProviderPriority() {
		return markerNavigationProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMarkerNavigationProviderPriority(ProviderPriority newMarkerNavigationProviderPriority) {
		ProviderPriority oldMarkerNavigationProviderPriority = markerNavigationProviderPriority;
		markerNavigationProviderPriority = newMarkerNavigationProviderPriority == null ? MARKER_NAVIGATION_PROVIDER_PRIORITY_EDEFAULT : newMarkerNavigationProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_PRIORITY, oldMarkerNavigationProviderPriority, markerNavigationProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public boolean generateCreateShortcutAction() {
		return getContainsShortcutsTo().size() > 0;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public boolean generateShortcutIcon() {
		return getShortcutsProvidedFor().size() > 0;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, msgs);
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getChildNodes()).basicAdd(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getTopLevelNodes()).basicAdd(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getLinks()).basicAdd(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getCompartments()).basicAdd(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				if (palette != null)
					msgs = ((InternalEObject)palette).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__PALETTE, null, msgs);
				return basicSetPalette((Palette)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN:
				return eBasicSetContainer(null, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, msgs);
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				return ((InternalEList<?>)getChildNodes()).basicRemove(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				return ((InternalEList<?>)getTopLevelNodes()).basicRemove(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				return ((InternalEList<?>)getLinks()).basicRemove(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				return ((InternalEList<?>)getCompartments()).basicRemove(otherEnd, msgs);
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				return basicSetPalette(null, msgs);
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES:
				return basicSetPreferences(null, msgs);
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_PAGES:
				return ((InternalEList<?>)getPreferencePages()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM, GenEditorGenerator.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
				return getContainedNodes();
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				return getCanonicalEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME:
				return getEditCommandsPackageName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPERS_PACKAGE_NAME:
				return getEditHelpersPackageName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME:
				return getEditPartsPackageName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME:
				return getEditPoliciesPackageName();
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES_PACKAGE_NAME:
				return getPreferencesPackageName();
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				return getProvidersPackageName();
			case GMFGenPackage.GEN_DIAGRAM__PARSERS_PACKAGE_NAME:
				return getParsersPackageName();
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME:
				return getNotationViewFactoriesPackageName();
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME:
				return getElementTypesClassName();
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME:
				return getNotationViewProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_PRIORITY:
				return getNotationViewProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME:
				return getEditPartProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_PRIORITY:
				return getEditPartProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME:
				return getModelingAssistantProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_PRIORITY:
				return getModelingAssistantProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME:
				return getIconProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_PRIORITY:
				return getIconProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_CLASS_NAME:
				return getParserProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_PRIORITY:
				return getParserProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME:
				return getContributionItemProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				return getReorientConnectionViewCommandClassName();
			case GMFGenPackage.GEN_DIAGRAM__BASE_EDIT_HELPER_CLASS_NAME:
				return getBaseEditHelperClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				return getEditPartFactoryClassName();
			case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME:
				return getBaseExternalNodeLabelEditPartClassName();
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return getBaseItemSemanticEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				return getBaseGraphicalNodeEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME:
				return getTextSelectionEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME:
				return getTextNonResizableEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME:
				return getCreationWizardClassName();
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME:
				return getCreationWizardPageClassName();
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH:
				return getCreationWizardIconPath();
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH_X:
				return getCreationWizardIconPathX();
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CATEGORY_ID:
				return getCreationWizardCategoryID();
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME:
				return getDiagramEditorUtilClassName();
			case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME:
				return getDocumentProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				return getInitDiagramFileActionClassName();
			case GMFGenPackage.GEN_DIAGRAM__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME:
				return getNewDiagramFileWizardClassName();
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME:
				return getDiagramContentInitializerClassName();
			case GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME:
				return getMatchingStrategyClassName();
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME:
				return getVisualIDRegistryClassName();
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				return getElementChooserClassName();
			case GMFGenPackage.GEN_DIAGRAM__LOAD_RESOURCE_ACTION_CLASS_NAME:
				return getLoadResourceActionClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDITING_DOMAIN_ID:
				return getEditingDomainID();
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME:
				return getShortcutsDecoratorProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY:
				return getShortcutsDecoratorProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME:
				return getCreateShortcutActionClassName();
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME:
				return getCreateShortcutDecorationsCommandClassName();
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
				return getShortcutPropertyTesterClassName();
			case GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO:
				return getContainsShortcutsTo();
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR:
				return getShortcutsProvidedFor();
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_CLASS_NAME:
				return getValidationProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_PRIORITY:
				return getValidationProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_CLASS_NAME:
				return getMarkerNavigationProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_PRIORITY:
				return getMarkerNavigationProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_ENABLED:
				return isValidationEnabled() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_CLASS_NAME:
				return getMetricProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_PRIORITY:
				return getMetricProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME:
				return getValidationDecoratorProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATORS:
				return isValidationDecorators() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_PRIORITY:
				return getValidationDecoratorProviderPriority();
			case GMFGenPackage.GEN_DIAGRAM__LIVE_VALIDATION_UI_FEEDBACK:
				return isLiveValidationUIFeedback() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_DIAGRAM__UNITS:
				return getUnits();
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN:
				return getEditorGen();
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				if (resolve) return getDomainDiagramElement();
				return basicGetDomainDiagramElement();
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				return getChildNodes();
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				return getTopLevelNodes();
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				return getLinks();
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				return getCompartments();
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				return getPalette();
			case GMFGenPackage.GEN_DIAGRAM__SYNCHRONIZED:
				return isSynchronized() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES:
				return getPreferences();
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_PAGES:
				return getPreferencePages();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				setCanonicalEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME:
				setEditCommandsPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPERS_PACKAGE_NAME:
				setEditHelpersPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME:
				setEditPartsPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME:
				setEditPoliciesPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES_PACKAGE_NAME:
				setPreferencesPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				setProvidersPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PARSERS_PACKAGE_NAME:
				setParsersPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME:
				setNotationViewFactoriesPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME:
				setElementTypesClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME:
				setNotationViewProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_PRIORITY:
				setNotationViewProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME:
				setEditPartProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_PRIORITY:
				setEditPartProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME:
				setModelingAssistantProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_PRIORITY:
				setModelingAssistantProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME:
				setIconProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_PRIORITY:
				setIconProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_CLASS_NAME:
				setParserProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_PRIORITY:
				setParserProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME:
				setContributionItemProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				setReorientConnectionViewCommandClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_EDIT_HELPER_CLASS_NAME:
				setBaseEditHelperClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				setEditPartFactoryClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME:
				setBaseExternalNodeLabelEditPartClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setBaseItemSemanticEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				setBaseGraphicalNodeEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME:
				setTextSelectionEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME:
				setTextNonResizableEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME:
				setCreationWizardClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME:
				setCreationWizardPageClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH:
				setCreationWizardIconPath((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CATEGORY_ID:
				setCreationWizardCategoryID((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME:
				setDiagramEditorUtilClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME:
				setDocumentProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				setInitDiagramFileActionClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME:
				setNewDiagramFileWizardClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME:
				setDiagramContentInitializerClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME:
				setMatchingStrategyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME:
				setVisualIDRegistryClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				setElementChooserClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LOAD_RESOURCE_ACTION_CLASS_NAME:
				setLoadResourceActionClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDITING_DOMAIN_ID:
				setEditingDomainID((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME:
				setShortcutsDecoratorProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY:
				setShortcutsDecoratorProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME:
				setCreateShortcutActionClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME:
				setCreateShortcutDecorationsCommandClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
				setShortcutPropertyTesterClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO:
				getContainsShortcutsTo().clear();
				getContainsShortcutsTo().addAll((Collection<? extends String>)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR:
				getShortcutsProvidedFor().clear();
				getShortcutsProvidedFor().addAll((Collection<? extends String>)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_CLASS_NAME:
				setValidationProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_PRIORITY:
				setValidationProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_CLASS_NAME:
				setMarkerNavigationProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_PRIORITY:
				setMarkerNavigationProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_ENABLED:
				setValidationEnabled(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_CLASS_NAME:
				setMetricProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_PRIORITY:
				setMetricProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME:
				setValidationDecoratorProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATORS:
				setValidationDecorators(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_PRIORITY:
				setValidationDecoratorProviderPriority((ProviderPriority)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LIVE_VALIDATION_UI_FEEDBACK:
				setLiveValidationUIFeedback(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__UNITS:
				setUnits((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				setDomainDiagramElement((GenClass)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				getChildNodes().clear();
				getChildNodes().addAll((Collection<? extends GenChildNode>)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				getTopLevelNodes().clear();
				getTopLevelNodes().addAll((Collection<? extends GenTopLevelNode>)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				getLinks().clear();
				getLinks().addAll((Collection<? extends GenLink>)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				getCompartments().clear();
				getCompartments().addAll((Collection<? extends GenCompartment>)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				setPalette((Palette)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SYNCHRONIZED:
				setSynchronized(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES:
				setPreferences((GenDiagramPreferences)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_PAGES:
				getPreferencePages().clear();
				getPreferencePages().addAll((Collection<? extends GenPreferencePage>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				setCanonicalEditPolicyClassName(CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME:
				setEditCommandsPackageName(EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPERS_PACKAGE_NAME:
				setEditHelpersPackageName(EDIT_HELPERS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME:
				setEditPartsPackageName(EDIT_PARTS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME:
				setEditPoliciesPackageName(EDIT_POLICIES_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES_PACKAGE_NAME:
				setPreferencesPackageName(PREFERENCES_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				setProvidersPackageName(PROVIDERS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PARSERS_PACKAGE_NAME:
				setParsersPackageName(PARSERS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME:
				setNotationViewFactoriesPackageName(NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME:
				setElementTypesClassName(ELEMENT_TYPES_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME:
				setNotationViewProviderClassName(NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_PRIORITY:
				setNotationViewProviderPriority(NOTATION_VIEW_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME:
				setEditPartProviderClassName(EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_PRIORITY:
				setEditPartProviderPriority(EDIT_PART_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME:
				setModelingAssistantProviderClassName(MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_PRIORITY:
				setModelingAssistantProviderPriority(MODELING_ASSISTANT_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME:
				setIconProviderClassName(ICON_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_PRIORITY:
				setIconProviderPriority(ICON_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_CLASS_NAME:
				setParserProviderClassName(PARSER_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_PRIORITY:
				setParserProviderPriority(PARSER_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME:
				setContributionItemProviderClassName(CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				setReorientConnectionViewCommandClassName(REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_EDIT_HELPER_CLASS_NAME:
				setBaseEditHelperClassName(BASE_EDIT_HELPER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				setEditPartFactoryClassName(EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME:
				setBaseExternalNodeLabelEditPartClassName(BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setBaseItemSemanticEditPolicyClassName(BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				setBaseGraphicalNodeEditPolicyClassName(BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME:
				setTextSelectionEditPolicyClassName(TEXT_SELECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME:
				setTextNonResizableEditPolicyClassName(TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME:
				setCreationWizardClassName(CREATION_WIZARD_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME:
				setCreationWizardPageClassName(CREATION_WIZARD_PAGE_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH:
				setCreationWizardIconPath(CREATION_WIZARD_ICON_PATH_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CATEGORY_ID:
				setCreationWizardCategoryID(CREATION_WIZARD_CATEGORY_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME:
				setDiagramEditorUtilClassName(DIAGRAM_EDITOR_UTIL_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME:
				setDocumentProviderClassName(DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				setInitDiagramFileActionClassName(INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME:
				setNewDiagramFileWizardClassName(NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME:
				setDiagramContentInitializerClassName(DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME:
				setMatchingStrategyClassName(MATCHING_STRATEGY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME:
				setVisualIDRegistryClassName(VISUAL_ID_REGISTRY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				setElementChooserClassName(ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LOAD_RESOURCE_ACTION_CLASS_NAME:
				setLoadResourceActionClassName(LOAD_RESOURCE_ACTION_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDITING_DOMAIN_ID:
				setEditingDomainID(EDITING_DOMAIN_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME:
				setShortcutsDecoratorProviderClassName(SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY:
				setShortcutsDecoratorProviderPriority(SHORTCUTS_DECORATOR_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME:
				setCreateShortcutActionClassName(CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME:
				setCreateShortcutDecorationsCommandClassName(CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
				setShortcutPropertyTesterClassName(SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO:
				getContainsShortcutsTo().clear();
				return;
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR:
				getShortcutsProvidedFor().clear();
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_CLASS_NAME:
				setValidationProviderClassName(VALIDATION_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_PRIORITY:
				setValidationProviderPriority(VALIDATION_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_CLASS_NAME:
				setMarkerNavigationProviderClassName(MARKER_NAVIGATION_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_PRIORITY:
				setMarkerNavigationProviderPriority(MARKER_NAVIGATION_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_ENABLED:
				setValidationEnabled(VALIDATION_ENABLED_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_CLASS_NAME:
				setMetricProviderClassName(METRIC_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_PRIORITY:
				setMetricProviderPriority(METRIC_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME:
				setValidationDecoratorProviderClassName(VALIDATION_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATORS:
				setValidationDecorators(VALIDATION_DECORATORS_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_PRIORITY:
				setValidationDecoratorProviderPriority(VALIDATION_DECORATOR_PROVIDER_PRIORITY_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LIVE_VALIDATION_UI_FEEDBACK:
				setLiveValidationUIFeedback(LIVE_VALIDATION_UI_FEEDBACK_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__UNITS:
				setUnits(UNITS_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				setDomainDiagramElement((GenClass)null);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				getChildNodes().clear();
				return;
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				getTopLevelNodes().clear();
				return;
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				getLinks().clear();
				return;
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				getCompartments().clear();
				return;
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				setPalette((Palette)null);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SYNCHRONIZED:
				setSynchronized(SYNCHRONIZED_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES:
				setPreferences((GenDiagramPreferences)null);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_PAGES:
				getPreferencePages().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
				return !getContainedNodes().isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				return CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? canonicalEditPolicyClassName != null : !CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(canonicalEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME:
				return EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT == null ? editCommandsPackageName != null : !EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT.equals(editCommandsPackageName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPERS_PACKAGE_NAME:
				return EDIT_HELPERS_PACKAGE_NAME_EDEFAULT == null ? editHelpersPackageName != null : !EDIT_HELPERS_PACKAGE_NAME_EDEFAULT.equals(editHelpersPackageName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME:
				return EDIT_PARTS_PACKAGE_NAME_EDEFAULT == null ? editPartsPackageName != null : !EDIT_PARTS_PACKAGE_NAME_EDEFAULT.equals(editPartsPackageName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME:
				return EDIT_POLICIES_PACKAGE_NAME_EDEFAULT == null ? editPoliciesPackageName != null : !EDIT_POLICIES_PACKAGE_NAME_EDEFAULT.equals(editPoliciesPackageName);
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES_PACKAGE_NAME:
				return PREFERENCES_PACKAGE_NAME_EDEFAULT == null ? preferencesPackageName != null : !PREFERENCES_PACKAGE_NAME_EDEFAULT.equals(preferencesPackageName);
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				return PROVIDERS_PACKAGE_NAME_EDEFAULT == null ? providersPackageName != null : !PROVIDERS_PACKAGE_NAME_EDEFAULT.equals(providersPackageName);
			case GMFGenPackage.GEN_DIAGRAM__PARSERS_PACKAGE_NAME:
				return PARSERS_PACKAGE_NAME_EDEFAULT == null ? parsersPackageName != null : !PARSERS_PACKAGE_NAME_EDEFAULT.equals(parsersPackageName);
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME:
				return NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT == null ? notationViewFactoriesPackageName != null : !NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT.equals(notationViewFactoriesPackageName);
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME:
				return ELEMENT_TYPES_CLASS_NAME_EDEFAULT == null ? elementTypesClassName != null : !ELEMENT_TYPES_CLASS_NAME_EDEFAULT.equals(elementTypesClassName);
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME:
				return NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT == null ? notationViewProviderClassName != null : !NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT.equals(notationViewProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_PRIORITY:
				return notationViewProviderPriority != NOTATION_VIEW_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME:
				return EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT == null ? editPartProviderClassName != null : !EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT.equals(editPartProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_PRIORITY:
				return editPartProviderPriority != EDIT_PART_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME:
				return MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT == null ? modelingAssistantProviderClassName != null : !MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT.equals(modelingAssistantProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_PRIORITY:
				return modelingAssistantProviderPriority != MODELING_ASSISTANT_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME:
				return ICON_PROVIDER_CLASS_NAME_EDEFAULT == null ? iconProviderClassName != null : !ICON_PROVIDER_CLASS_NAME_EDEFAULT.equals(iconProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_PRIORITY:
				return iconProviderPriority != ICON_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_CLASS_NAME:
				return PARSER_PROVIDER_CLASS_NAME_EDEFAULT == null ? parserProviderClassName != null : !PARSER_PROVIDER_CLASS_NAME_EDEFAULT.equals(parserProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_PRIORITY:
				return parserProviderPriority != PARSER_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME:
				return CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME_EDEFAULT == null ? contributionItemProviderClassName != null : !CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME_EDEFAULT.equals(contributionItemProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				return REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT == null ? reorientConnectionViewCommandClassName != null : !REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT.equals(reorientConnectionViewCommandClassName);
			case GMFGenPackage.GEN_DIAGRAM__BASE_EDIT_HELPER_CLASS_NAME:
				return BASE_EDIT_HELPER_CLASS_NAME_EDEFAULT == null ? baseEditHelperClassName != null : !BASE_EDIT_HELPER_CLASS_NAME_EDEFAULT.equals(baseEditHelperClassName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				return EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT == null ? editPartFactoryClassName != null : !EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT.equals(editPartFactoryClassName);
			case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME:
				return BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT == null ? baseExternalNodeLabelEditPartClassName != null : !BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT.equals(baseExternalNodeLabelEditPartClassName);
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? baseItemSemanticEditPolicyClassName != null : !BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(baseItemSemanticEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				return BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? baseGraphicalNodeEditPolicyClassName != null : !BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(baseGraphicalNodeEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME:
				return TEXT_SELECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? textSelectionEditPolicyClassName != null : !TEXT_SELECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(textSelectionEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME:
				return TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? textNonResizableEditPolicyClassName != null : !TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(textNonResizableEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME:
				return CREATION_WIZARD_CLASS_NAME_EDEFAULT == null ? creationWizardClassName != null : !CREATION_WIZARD_CLASS_NAME_EDEFAULT.equals(creationWizardClassName);
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME:
				return CREATION_WIZARD_PAGE_CLASS_NAME_EDEFAULT == null ? creationWizardPageClassName != null : !CREATION_WIZARD_PAGE_CLASS_NAME_EDEFAULT.equals(creationWizardPageClassName);
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH:
				return CREATION_WIZARD_ICON_PATH_EDEFAULT == null ? creationWizardIconPath != null : !CREATION_WIZARD_ICON_PATH_EDEFAULT.equals(creationWizardIconPath);
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH_X:
				return CREATION_WIZARD_ICON_PATH_X_EDEFAULT == null ? getCreationWizardIconPathX() != null : !CREATION_WIZARD_ICON_PATH_X_EDEFAULT.equals(getCreationWizardIconPathX());
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CATEGORY_ID:
				return CREATION_WIZARD_CATEGORY_ID_EDEFAULT == null ? creationWizardCategoryID != null : !CREATION_WIZARD_CATEGORY_ID_EDEFAULT.equals(creationWizardCategoryID);
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME:
				return DIAGRAM_EDITOR_UTIL_CLASS_NAME_EDEFAULT == null ? diagramEditorUtilClassName != null : !DIAGRAM_EDITOR_UTIL_CLASS_NAME_EDEFAULT.equals(diagramEditorUtilClassName);
			case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME:
				return DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT == null ? documentProviderClassName != null : !DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT.equals(documentProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				return INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT == null ? initDiagramFileActionClassName != null : !INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT.equals(initDiagramFileActionClassName);
			case GMFGenPackage.GEN_DIAGRAM__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME:
				return NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME_EDEFAULT == null ? newDiagramFileWizardClassName != null : !NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME_EDEFAULT.equals(newDiagramFileWizardClassName);
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME:
				return DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME_EDEFAULT == null ? diagramContentInitializerClassName != null : !DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME_EDEFAULT.equals(diagramContentInitializerClassName);
			case GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME:
				return MATCHING_STRATEGY_CLASS_NAME_EDEFAULT == null ? matchingStrategyClassName != null : !MATCHING_STRATEGY_CLASS_NAME_EDEFAULT.equals(matchingStrategyClassName);
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME:
				return VISUAL_ID_REGISTRY_CLASS_NAME_EDEFAULT == null ? visualIDRegistryClassName != null : !VISUAL_ID_REGISTRY_CLASS_NAME_EDEFAULT.equals(visualIDRegistryClassName);
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				return ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT == null ? elementChooserClassName != null : !ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT.equals(elementChooserClassName);
			case GMFGenPackage.GEN_DIAGRAM__LOAD_RESOURCE_ACTION_CLASS_NAME:
				return LOAD_RESOURCE_ACTION_CLASS_NAME_EDEFAULT == null ? loadResourceActionClassName != null : !LOAD_RESOURCE_ACTION_CLASS_NAME_EDEFAULT.equals(loadResourceActionClassName);
			case GMFGenPackage.GEN_DIAGRAM__EDITING_DOMAIN_ID:
				return EDITING_DOMAIN_ID_EDEFAULT == null ? editingDomainID != null : !EDITING_DOMAIN_ID_EDEFAULT.equals(editingDomainID);
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME:
				return SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT == null ? shortcutsDecoratorProviderClassName != null : !SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT.equals(shortcutsDecoratorProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY:
				return shortcutsDecoratorProviderPriority != SHORTCUTS_DECORATOR_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME:
				return CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT == null ? createShortcutActionClassName != null : !CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT.equals(createShortcutActionClassName);
			case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME:
				return CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME_EDEFAULT == null ? createShortcutDecorationsCommandClassName != null : !CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME_EDEFAULT.equals(createShortcutDecorationsCommandClassName);
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
				return SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT == null ? shortcutPropertyTesterClassName != null : !SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT.equals(shortcutPropertyTesterClassName);
			case GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO:
				return containsShortcutsTo != null && !containsShortcutsTo.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR:
				return shortcutsProvidedFor != null && !shortcutsProvidedFor.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_CLASS_NAME:
				return VALIDATION_PROVIDER_CLASS_NAME_EDEFAULT == null ? validationProviderClassName != null : !VALIDATION_PROVIDER_CLASS_NAME_EDEFAULT.equals(validationProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_PRIORITY:
				return validationProviderPriority != VALIDATION_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_CLASS_NAME:
				return MARKER_NAVIGATION_PROVIDER_CLASS_NAME_EDEFAULT == null ? markerNavigationProviderClassName != null : !MARKER_NAVIGATION_PROVIDER_CLASS_NAME_EDEFAULT.equals(markerNavigationProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_PRIORITY:
				return markerNavigationProviderPriority != MARKER_NAVIGATION_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_ENABLED:
				return validationEnabled != VALIDATION_ENABLED_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_CLASS_NAME:
				return METRIC_PROVIDER_CLASS_NAME_EDEFAULT == null ? metricProviderClassName != null : !METRIC_PROVIDER_CLASS_NAME_EDEFAULT.equals(metricProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_PRIORITY:
				return metricProviderPriority != METRIC_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME:
				return VALIDATION_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT == null ? validationDecoratorProviderClassName != null : !VALIDATION_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT.equals(validationDecoratorProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATORS:
				return validationDecorators != VALIDATION_DECORATORS_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_PRIORITY:
				return validationDecoratorProviderPriority != VALIDATION_DECORATOR_PROVIDER_PRIORITY_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__LIVE_VALIDATION_UI_FEEDBACK:
				return liveValidationUIFeedback != LIVE_VALIDATION_UI_FEEDBACK_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__UNITS:
				return UNITS_EDEFAULT == null ? units != null : !UNITS_EDEFAULT.equals(units);
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN:
				return getEditorGen() != null;
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				return domainDiagramElement != null;
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				return childNodes != null && !childNodes.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				return topLevelNodes != null && !topLevelNodes.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				return links != null && !links.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				return compartments != null && !compartments.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				return palette != null;
			case GMFGenPackage.GEN_DIAGRAM__SYNCHRONIZED:
				return synchronized_ != SYNCHRONIZED_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCES:
				return preferences != null;
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_PAGES:
				return preferencePages != null && !preferencePages.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == PackageNames.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__EDIT_COMMANDS_PACKAGE_NAME;
				case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPERS_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__EDIT_HELPERS_PACKAGE_NAME;
				case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__EDIT_PARTS_PACKAGE_NAME;
				case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__EDIT_POLICIES_PACKAGE_NAME;
				case GMFGenPackage.GEN_DIAGRAM__PREFERENCES_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__PREFERENCES_PACKAGE_NAME;
				case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__PROVIDERS_PACKAGE_NAME;
				case GMFGenPackage.GEN_DIAGRAM__PARSERS_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__PARSERS_PACKAGE_NAME;
				case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__NOTATION_VIEW_FACTORIES_PACKAGE_NAME;
				default: return -1;
			}
		}
		if (baseClass == ProviderClassNames.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__ELEMENT_TYPES_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__NOTATION_VIEW_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__NOTATION_VIEW_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__EDIT_PART_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__EDIT_PART_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__MODELING_ASSISTANT_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__MODELING_ASSISTANT_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__ICON_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__ICON_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__PARSER_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__PARSER_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME;
				default: return -1;
			}
		}
		if (baseClass == LinkConstraints.class) {
			switch (derivedFeatureID) {
				default: return -1;
			}
		}
		if (baseClass == EditPartCandies.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__BASE_EDIT_HELPER_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__BASE_EDIT_HELPER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__EDIT_PART_FACTORY_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME;
				default: return -1;
			}
		}
		if (baseClass == EditorCandies.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_PAGE_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH: return GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_ICON_PATH;
				case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH_X: return GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_ICON_PATH_X;
				case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CATEGORY_ID: return GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_CATEGORY_ID;
				case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__DIAGRAM_EDITOR_UTIL_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__DOCUMENT_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__MATCHING_STRATEGY_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__VISUAL_ID_REGISTRY_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__ELEMENT_CHOOSER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__LOAD_RESOURCE_ACTION_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__LOAD_RESOURCE_ACTION_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__EDITING_DOMAIN_ID: return GMFGenPackage.EDITOR_CANDIES__EDITING_DOMAIN_ID;
				default: return -1;
			}
		}
		if (baseClass == Shortcuts.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME: return GMFGenPackage.SHORTCUTS__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY: return GMFGenPackage.SHORTCUTS__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME: return GMFGenPackage.SHORTCUTS__CREATE_SHORTCUT_ACTION_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME: return GMFGenPackage.SHORTCUTS__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME: return GMFGenPackage.SHORTCUTS__SHORTCUT_PROPERTY_TESTER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO: return GMFGenPackage.SHORTCUTS__CONTAINS_SHORTCUTS_TO;
				case GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR: return GMFGenPackage.SHORTCUTS__SHORTCUTS_PROVIDED_FOR;
				default: return -1;
			}
		}
		if (baseClass == BatchValidation.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_CLASS_NAME: return GMFGenPackage.BATCH_VALIDATION__VALIDATION_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_PRIORITY: return GMFGenPackage.BATCH_VALIDATION__VALIDATION_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_CLASS_NAME: return GMFGenPackage.BATCH_VALIDATION__MARKER_NAVIGATION_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_PRIORITY: return GMFGenPackage.BATCH_VALIDATION__MARKER_NAVIGATION_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__VALIDATION_ENABLED: return GMFGenPackage.BATCH_VALIDATION__VALIDATION_ENABLED;
				case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_CLASS_NAME: return GMFGenPackage.BATCH_VALIDATION__METRIC_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_PRIORITY: return GMFGenPackage.BATCH_VALIDATION__METRIC_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME: return GMFGenPackage.BATCH_VALIDATION__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATORS: return GMFGenPackage.BATCH_VALIDATION__VALIDATION_DECORATORS;
				case GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_PRIORITY: return GMFGenPackage.BATCH_VALIDATION__VALIDATION_DECORATOR_PROVIDER_PRIORITY;
				case GMFGenPackage.GEN_DIAGRAM__LIVE_VALIDATION_UI_FEEDBACK: return GMFGenPackage.BATCH_VALIDATION__LIVE_VALIDATION_UI_FEEDBACK;
				default: return -1;
			}
		}
		if (baseClass == MeasurementUnit.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__UNITS: return GMFGenPackage.MEASUREMENT_UNIT__UNITS;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == PackageNames.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.PACKAGE_NAMES__EDIT_COMMANDS_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME;
				case GMFGenPackage.PACKAGE_NAMES__EDIT_HELPERS_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__EDIT_HELPERS_PACKAGE_NAME;
				case GMFGenPackage.PACKAGE_NAMES__EDIT_PARTS_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME;
				case GMFGenPackage.PACKAGE_NAMES__EDIT_POLICIES_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME;
				case GMFGenPackage.PACKAGE_NAMES__PREFERENCES_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__PREFERENCES_PACKAGE_NAME;
				case GMFGenPackage.PACKAGE_NAMES__PROVIDERS_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME;
				case GMFGenPackage.PACKAGE_NAMES__PARSERS_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__PARSERS_PACKAGE_NAME;
				case GMFGenPackage.PACKAGE_NAMES__NOTATION_VIEW_FACTORIES_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME;
				default: return -1;
			}
		}
		if (baseClass == ProviderClassNames.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.PROVIDER_CLASS_NAMES__ELEMENT_TYPES_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__NOTATION_VIEW_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__NOTATION_VIEW_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_PRIORITY;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__EDIT_PART_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__EDIT_PART_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_PRIORITY;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__MODELING_ASSISTANT_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__MODELING_ASSISTANT_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_PRIORITY;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__ICON_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__ICON_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_PRIORITY;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__PARSER_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__PARSER_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__PARSER_PROVIDER_PRIORITY;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME;
				default: return -1;
			}
		}
		if (baseClass == LinkConstraints.class) {
			switch (baseFeatureID) {
				default: return -1;
			}
		}
		if (baseClass == EditPartCandies.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.EDIT_PART_CANDIES__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME;
				case GMFGenPackage.EDIT_PART_CANDIES__BASE_EDIT_HELPER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__BASE_EDIT_HELPER_CLASS_NAME;
				case GMFGenPackage.EDIT_PART_CANDIES__EDIT_PART_FACTORY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME;
				case GMFGenPackage.EDIT_PART_CANDIES__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME;
				case GMFGenPackage.EDIT_PART_CANDIES__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME;
				case GMFGenPackage.EDIT_PART_CANDIES__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME;
				case GMFGenPackage.EDIT_PART_CANDIES__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__TEXT_SELECTION_EDIT_POLICY_CLASS_NAME;
				case GMFGenPackage.EDIT_PART_CANDIES__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME;
				default: return -1;
			}
		}
		if (baseClass == EditorCandies.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_PAGE_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_ICON_PATH: return GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH;
				case GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_ICON_PATH_X: return GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_ICON_PATH_X;
				case GMFGenPackage.EDITOR_CANDIES__CREATION_WIZARD_CATEGORY_ID: return GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CATEGORY_ID;
				case GMFGenPackage.EDITOR_CANDIES__DIAGRAM_EDITOR_UTIL_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__DOCUMENT_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__MATCHING_STRATEGY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__VISUAL_ID_REGISTRY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__ELEMENT_CHOOSER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__LOAD_RESOURCE_ACTION_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__LOAD_RESOURCE_ACTION_CLASS_NAME;
				case GMFGenPackage.EDITOR_CANDIES__EDITING_DOMAIN_ID: return GMFGenPackage.GEN_DIAGRAM__EDITING_DOMAIN_ID;
				default: return -1;
			}
		}
		if (baseClass == Shortcuts.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.SHORTCUTS__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME;
				case GMFGenPackage.SHORTCUTS__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_DECORATOR_PROVIDER_PRIORITY;
				case GMFGenPackage.SHORTCUTS__CREATE_SHORTCUT_ACTION_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME;
				case GMFGenPackage.SHORTCUTS__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME;
				case GMFGenPackage.SHORTCUTS__SHORTCUT_PROPERTY_TESTER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME;
				case GMFGenPackage.SHORTCUTS__CONTAINS_SHORTCUTS_TO: return GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO;
				case GMFGenPackage.SHORTCUTS__SHORTCUTS_PROVIDED_FOR: return GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR;
				default: return -1;
			}
		}
		if (baseClass == BatchValidation.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.BATCH_VALIDATION__VALIDATION_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_CLASS_NAME;
				case GMFGenPackage.BATCH_VALIDATION__VALIDATION_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__VALIDATION_PROVIDER_PRIORITY;
				case GMFGenPackage.BATCH_VALIDATION__MARKER_NAVIGATION_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_CLASS_NAME;
				case GMFGenPackage.BATCH_VALIDATION__MARKER_NAVIGATION_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__MARKER_NAVIGATION_PROVIDER_PRIORITY;
				case GMFGenPackage.BATCH_VALIDATION__VALIDATION_ENABLED: return GMFGenPackage.GEN_DIAGRAM__VALIDATION_ENABLED;
				case GMFGenPackage.BATCH_VALIDATION__METRIC_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_CLASS_NAME;
				case GMFGenPackage.BATCH_VALIDATION__METRIC_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__METRIC_PROVIDER_PRIORITY;
				case GMFGenPackage.BATCH_VALIDATION__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_CLASS_NAME;
				case GMFGenPackage.BATCH_VALIDATION__VALIDATION_DECORATORS: return GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATORS;
				case GMFGenPackage.BATCH_VALIDATION__VALIDATION_DECORATOR_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__VALIDATION_DECORATOR_PROVIDER_PRIORITY;
				case GMFGenPackage.BATCH_VALIDATION__LIVE_VALIDATION_UI_FEEDBACK: return GMFGenPackage.GEN_DIAGRAM__LIVE_VALIDATION_UI_FEEDBACK;
				default: return -1;
			}
		}
		if (baseClass == MeasurementUnit.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.MEASUREMENT_UNIT__UNITS: return GMFGenPackage.GEN_DIAGRAM__UNITS;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public boolean hasLinkCreationConstraints() {
		for (GenLink nextLink : getLinks()) {
			if(nextLink.getCreationConstraints() != null) {
				return true;
			}
		}
		return false;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLinkCreationConstraintsClassName() {
		return "LinkConstraints"; //$NON-NLS-1$		
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLinkCreationConstraintsQualifiedClassName() {
		String owningClass = getBaseItemSemanticEditPolicyQualifiedClassName();
		if(owningClass != null) {
			return owningClass + "." + getLinkCreationConstraintsClassName(); //$NON-NLS-1$
		}
		return getLinkCreationConstraintsClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getReorientConnectionViewCommandQualifiedClassName() {
		return getEditCommandsPackageName() + '.' + getReorientConnectionViewCommandClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getBaseEditHelperQualifiedClassName() {
		return getEditHelpersPackageName() + '.' + getBaseEditHelperClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getEditPartFactoryQualifiedClassName() {
		return getEditPartsPackageName() + '.' + getEditPartFactoryClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getBaseExternalNodeLabelEditPartQualifiedClassName() {
		return getEditPartsPackageName() + '.' + getBaseExternalNodeLabelEditPartClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getBaseItemSemanticEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getBaseItemSemanticEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getBaseGraphicalNodeEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getBaseGraphicalNodeEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCanonicalEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getCanonicalEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getTextSelectionEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getTextSelectionEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getTextNonResizableEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getTextNonResizableEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getElementTypesQualifiedClassName() {
		return getProvidersPackageName() + '.' + getElementTypesClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getNotationViewProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getNotationViewProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getInitDiagramFileActionQualifiedClassName() {
		return getEditorPackageName() + '.' + getInitDiagramFileActionClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getNewDiagramFileWizardQualifiedClassName() {
		return getEditorPackageName() + '.' + getNewDiagramFileWizardClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDiagramContentInitializerQualifiedClassName() {
		return getEditorPackageName() + '.' + getDiagramContentInitializerClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getEditPartProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getEditPartProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getModelingAssistantProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getModelingAssistantProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getIconProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getIconProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getParserProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getParserProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreationWizardQualifiedClassName() {
		return getEditorPackageName() + '.' + getCreationWizardClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreationWizardPageQualifiedClassName() {
		return getEditorPackageName() + '.' + getCreationWizardPageClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDiagramEditorUtilQualifiedClassName() {
		return getEditorPackageName() + '.' + getDiagramEditorUtilClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDocumentProviderQualifiedClassName() {
		return getEditorPackageName() + '.' + getDocumentProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMatchingStrategyQualifiedClassName() {
		return getEditorPackageName() + '.' + getMatchingStrategyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getElementInitializersClassName() {
		return "ElementInitializers"; //$NON-NLS-1$
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getElementInitializersPackageName() {
		return getProvidersPackageName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (canonicalEditPolicyClassName: ");
		result.append(canonicalEditPolicyClassName);
		result.append(", editCommandsPackageName: ");
		result.append(editCommandsPackageName);
		result.append(", editHelpersPackageName: ");
		result.append(editHelpersPackageName);
		result.append(", editPartsPackageName: ");
		result.append(editPartsPackageName);
		result.append(", editPoliciesPackageName: ");
		result.append(editPoliciesPackageName);
		result.append(", preferencesPackageName: ");
		result.append(preferencesPackageName);
		result.append(", providersPackageName: ");
		result.append(providersPackageName);
		result.append(", parsersPackageName: ");
		result.append(parsersPackageName);
		result.append(", notationViewFactoriesPackageName: ");
		result.append(notationViewFactoriesPackageName);
		result.append(", elementTypesClassName: ");
		result.append(elementTypesClassName);
		result.append(", notationViewProviderClassName: ");
		result.append(notationViewProviderClassName);
		result.append(", notationViewProviderPriority: ");
		result.append(notationViewProviderPriority);
		result.append(", editPartProviderClassName: ");
		result.append(editPartProviderClassName);
		result.append(", editPartProviderPriority: ");
		result.append(editPartProviderPriority);
		result.append(", modelingAssistantProviderClassName: ");
		result.append(modelingAssistantProviderClassName);
		result.append(", modelingAssistantProviderPriority: ");
		result.append(modelingAssistantProviderPriority);
		result.append(", iconProviderClassName: ");
		result.append(iconProviderClassName);
		result.append(", iconProviderPriority: ");
		result.append(iconProviderPriority);
		result.append(", parserProviderClassName: ");
		result.append(parserProviderClassName);
		result.append(", parserProviderPriority: ");
		result.append(parserProviderPriority);
		result.append(", contributionItemProviderClassName: ");
		result.append(contributionItemProviderClassName);
		result.append(", reorientConnectionViewCommandClassName: ");
		result.append(reorientConnectionViewCommandClassName);
		result.append(", baseEditHelperClassName: ");
		result.append(baseEditHelperClassName);
		result.append(", editPartFactoryClassName: ");
		result.append(editPartFactoryClassName);
		result.append(", baseExternalNodeLabelEditPartClassName: ");
		result.append(baseExternalNodeLabelEditPartClassName);
		result.append(", baseItemSemanticEditPolicyClassName: ");
		result.append(baseItemSemanticEditPolicyClassName);
		result.append(", baseGraphicalNodeEditPolicyClassName: ");
		result.append(baseGraphicalNodeEditPolicyClassName);
		result.append(", textSelectionEditPolicyClassName: ");
		result.append(textSelectionEditPolicyClassName);
		result.append(", textNonResizableEditPolicyClassName: ");
		result.append(textNonResizableEditPolicyClassName);
		result.append(", creationWizardClassName: ");
		result.append(creationWizardClassName);
		result.append(", creationWizardPageClassName: ");
		result.append(creationWizardPageClassName);
		result.append(", creationWizardIconPath: ");
		result.append(creationWizardIconPath);
		result.append(", creationWizardCategoryID: ");
		result.append(creationWizardCategoryID);
		result.append(", diagramEditorUtilClassName: ");
		result.append(diagramEditorUtilClassName);
		result.append(", documentProviderClassName: ");
		result.append(documentProviderClassName);
		result.append(", initDiagramFileActionClassName: ");
		result.append(initDiagramFileActionClassName);
		result.append(", newDiagramFileWizardClassName: ");
		result.append(newDiagramFileWizardClassName);
		result.append(", diagramContentInitializerClassName: ");
		result.append(diagramContentInitializerClassName);
		result.append(", matchingStrategyClassName: ");
		result.append(matchingStrategyClassName);
		result.append(", visualIDRegistryClassName: ");
		result.append(visualIDRegistryClassName);
		result.append(", elementChooserClassName: ");
		result.append(elementChooserClassName);
		result.append(", loadResourceActionClassName: ");
		result.append(loadResourceActionClassName);
		result.append(", editingDomainID: ");
		result.append(editingDomainID);
		result.append(", shortcutsDecoratorProviderClassName: ");
		result.append(shortcutsDecoratorProviderClassName);
		result.append(", shortcutsDecoratorProviderPriority: ");
		result.append(shortcutsDecoratorProviderPriority);
		result.append(", createShortcutActionClassName: ");
		result.append(createShortcutActionClassName);
		result.append(", createShortcutDecorationsCommandClassName: ");
		result.append(createShortcutDecorationsCommandClassName);
		result.append(", shortcutPropertyTesterClassName: ");
		result.append(shortcutPropertyTesterClassName);
		result.append(", containsShortcutsTo: ");
		result.append(containsShortcutsTo);
		result.append(", shortcutsProvidedFor: ");
		result.append(shortcutsProvidedFor);
		result.append(", validationProviderClassName: ");
		result.append(validationProviderClassName);
		result.append(", validationProviderPriority: ");
		result.append(validationProviderPriority);
		result.append(", markerNavigationProviderClassName: ");
		result.append(markerNavigationProviderClassName);
		result.append(", markerNavigationProviderPriority: ");
		result.append(markerNavigationProviderPriority);
		result.append(", validationEnabled: ");
		result.append(validationEnabled);
		result.append(", metricProviderClassName: ");
		result.append(metricProviderClassName);
		result.append(", metricProviderPriority: ");
		result.append(metricProviderPriority);
		result.append(", validationDecoratorProviderClassName: ");
		result.append(validationDecoratorProviderClassName);
		result.append(", validationDecorators: ");
		result.append(validationDecorators);
		result.append(", validationDecoratorProviderPriority: ");
		result.append(validationDecoratorProviderPriority);
		result.append(", liveValidationUIFeedback: ");
		result.append(liveValidationUIFeedback);
		result.append(", units: ");
		result.append(units);
		result.append(", synchronized: ");
		result.append(synchronized_);
		result.append(')');
		return result.toString();
	}

	String getDomainPackageCapName() {
		return ((GenEditorGeneratorImpl) getEditorGen()).getDomainModelCapName();
	}

	private String getEditorPackageName() {
		return getEditorGen().getEditor().getPackageName();
	}

	/**
	 * @@deprecated
	 */
	public String getMetaPackageName(ImportAssistant importManager) {
		return importManager.getImportedName(getDomainDiagramElement().getGenPackage().getQualifiedPackageInterfaceName());
	}
	
	/**
	 * @@deprecated
	 */
	public Map<TypeModelFacet, GenCommonBase> getTypeModelFacet2GenBaseMap() {
		Map<TypeModelFacet, GenCommonBase> resultMap = new LinkedHashMap<TypeModelFacet, GenCommonBase>();
		for (GenNode next : getAllNodes()) {
			TypeModelFacet modelFacet = null;
			modelFacet = next.getModelFacet();
			if(modelFacet != null) {
				resultMap.put(modelFacet, next);					
			}
		}
		for (GenLink next : getLinks()) {
			if (next.getModelFacet() instanceof TypeLinkModelFacet) {
				TypeLinkModelFacet modelFacet = (TypeLinkModelFacet) next.getModelFacet();
				if(modelFacet != null) {
					resultMap.put(modelFacet, next);
				}
			}
		}
		return resultMap;
	}

	public Map<GenClass, GenTopLevelNode> getGenClass2PhantomMap() {
		LinkedHashMap<GenClass, GenTopLevelNode> genClass2Phantom = new LinkedHashMap<GenClass, GenTopLevelNode>();
		for (GenTopLevelNode nextTopLevelNode : getTopLevelNodes()) {
			TypeModelFacet nextModelFacet = nextTopLevelNode.getModelFacet();
			if (nextModelFacet == null || !nextModelFacet.isPhantomElement()) {
				continue;
			}
			genClass2Phantom.put(nextModelFacet.getMetaClass(), nextTopLevelNode);
		}
		return genClass2Phantom;
	}

	public List<GenLink> getPhantomLinks() {
		LinkedList<GenLink> phantomLinks = new LinkedList<GenLink>();
		for (GenLink nextLink : getLinks()) {
			if (nextLink.getModelFacet() instanceof FeatureLinkModelFacet) {
				FeatureLinkModelFacet nextModelFacet = (FeatureLinkModelFacet) nextLink.getModelFacet();
				if (nextModelFacet.getMetaFeature().isContains()) {
					phantomLinks.add(nextLink);
				}
			}
		}
		return phantomLinks;
	}
	
	public boolean isSansDomain() {
		return getDomainDiagramElement() == null;
	}
} //GenDiagramImpl
@


1.117
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a26 1
import org.eclipse.emf.ecore.util.EcoreUtil;
d43 1
a44 1
import org.eclipse.gmf.codegen.gmfgen.GenNode;
a2468 31
	public NotificationChain basicSetEditorGen(GenEditorGenerator newEditorGen, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newEditorGen, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditorGen(GenEditorGenerator newEditorGen) {
		if (newEditorGen != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN && newEditorGen != null)) {
			if (EcoreUtil.isAncestor(this, newEditorGen))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newEditorGen != null)
				msgs = ((InternalEObject)newEditorGen).eInverseAdd(this, GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM, GenEditorGenerator.class, msgs);
			msgs = basicSetEditorGen(newEditorGen, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, newEditorGen, newEditorGen));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d3644 1
a3644 1
				return basicSetEditorGen((GenEditorGenerator)otherEnd, msgs);
d3670 1
a3670 1
				return basicSetEditorGen(null, msgs);
a4060 3
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)newValue);
				return;
a4290 3
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN:
				setEditorGen((GenEditorGenerator)null);
				return;
@


1.116
log
@regenerate; add java expr accessor to the model
@
text
@d27 1
d2470 31
d3676 1
a3676 1
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, msgs);
d3702 1
a3702 1
				return eBasicSetContainer(null, GMFGenPackage.GEN_DIAGRAM__EDITOR_GEN, msgs);
d4093 3
d4326 3
@


1.115
log
@add method to find modeling assistant child nodes
@
text
@d5115 3
d5122 3
@


1.115.2.1
log
@regenerate; add java expr getter to model
@
text
@a5114 3
	/**
	 * @@deprecated
	 */
a5118 3
	/**
	 * @@deprecated
	 */
@


1.114
log
@fix provider qname accessor name
@
text
@d3442 9
@


1.113
log
@GenDiagramUpdater created in .gmfgen model
@
text
@d2231 1
a2231 1
	public String getValidationDecoratorProviderQualifedClassName() {
@


1.112
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@a52 1
import org.eclipse.gmf.codegen.gmfgen.Updater;
a127 3
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDiagramUpdaterClassName <em>Diagram Updater Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNodeDescriptorClassName <em>Node Descriptor Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getLinkDescriptorClassName <em>Link Descriptor Class Name</em>}</li>
a1375 60
	 * The default value of the '{@@link #getDiagramUpdaterClassName() <em>Diagram Updater Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramUpdaterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDiagramUpdaterClassName() <em>Diagram Updater Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramUpdaterClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String diagramUpdaterClassName = DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNodeDescriptorClassName() <em>Node Descriptor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNodeDescriptorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getNodeDescriptorClassName() <em>Node Descriptor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNodeDescriptorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String nodeDescriptorClassName = NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getLinkDescriptorClassName() <em>Link Descriptor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkDescriptorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getLinkDescriptorClassName() <em>Link Descriptor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkDescriptorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String linkDescriptorClassName = LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT;

	/**
a2458 87
	public String getDiagramUpdaterClassNameGen() {
		return diagramUpdaterClassName;
	}

	public String getDiagramUpdaterClassName() {
		String value = getDiagramUpdaterClassNameGen();
		if(isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramUpdater"; //$NON-NLS-1$						
		}
		return value;		
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramUpdaterClassName(String newDiagramUpdaterClassName) {
		String oldDiagramUpdaterClassName = diagramUpdaterClassName;
		diagramUpdaterClassName = newDiagramUpdaterClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME, oldDiagramUpdaterClassName, diagramUpdaterClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getNodeDescriptorClassNameGen() {
		return nodeDescriptorClassName;
	}
	
	public String getNodeDescriptorClassName() {
		String value = getNodeDescriptorClassNameGen();
		if(isEmpty(value)) {
			value = getDomainPackageCapName() + "NodeDescriptor"; //$NON-NLS-1$						
		}
		return value;		
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNodeDescriptorClassName(String newNodeDescriptorClassName) {
		String oldNodeDescriptorClassName = nodeDescriptorClassName;
		nodeDescriptorClassName = newNodeDescriptorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME, oldNodeDescriptorClassName, nodeDescriptorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLinkDescriptorClassNameGen() {
		return linkDescriptorClassName;
	}
	
	public String getLinkDescriptorClassName() {
		String value = getLinkDescriptorClassNameGen();
		if(isEmpty(value)) {
			value = getDomainPackageCapName() + "LinkDescriptor"; //$NON-NLS-1$						
		}
		return value;		
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLinkDescriptorClassName(String newLinkDescriptorClassName) {
		String oldLinkDescriptorClassName = linkDescriptorClassName;
		linkDescriptorClassName = newLinkDescriptorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME, oldLinkDescriptorClassName, linkDescriptorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3829 6
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
				return getDiagramUpdaterClassName();
			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
				return getNodeDescriptorClassName();
			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
				return getLinkDescriptorClassName();
a4051 9
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
				setDiagramUpdaterClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
				setNodeDescriptorClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
				setLinkDescriptorClassName((String)newValue);
				return;
a4281 9
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
				setDiagramUpdaterClassName(DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
				setNodeDescriptorClassName(NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
				setLinkDescriptorClassName(LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT);
				return;
a4448 6
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
				return DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT == null ? diagramUpdaterClassName != null : !DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT.equals(diagramUpdaterClassName);
			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
				return NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT == null ? nodeDescriptorClassName != null : !NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT.equals(nodeDescriptorClassName);
			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
				return LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT == null ? linkDescriptorClassName != null : !LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT.equals(linkDescriptorClassName);
a4581 8
		if (baseClass == Updater.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME: return GMFGenPackage.UPDATER__DIAGRAM_UPDATER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.UPDATER__NODE_DESCRIPTOR_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.UPDATER__LINK_DESCRIPTOR_CLASS_NAME;
				default: return -1;
			}
		}
a4693 8
		if (baseClass == Updater.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.UPDATER__DIAGRAM_UPDATER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME;
				case GMFGenPackage.UPDATER__NODE_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME;
				case GMFGenPackage.UPDATER__LINK_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME;
				default: return -1;
			}
		}
a4960 27
	 * @@generated NOT
	 */
	public String getDiagramUpdaterQualifiedClassName() {
		return getEditorPackageName() + '.' + getDiagramUpdaterClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getNodeDescriptorQualifiedClassName() {
		return getEditorPackageName() + '.' + getNodeDescriptorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLinkDescriptorQualifiedClassName() {
		return getEditorPackageName() + '.' + getLinkDescriptorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
a5091 6
		result.append(", diagramUpdaterClassName: ");
		result.append(diagramUpdaterClassName);
		result.append(", nodeDescriptorClassName: ");
		result.append(nodeDescriptorClassName);
		result.append(", linkDescriptorClassName: ");
		result.append(linkDescriptorClassName);
@


1.111
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d104 1
d900 20
d3130 29
d3931 2
d4132 3
d4373 3
d4574 2
d4720 1
d4840 1
d5052 9
d5266 2
@


1.110
log
@refactor message format parser; introduce editor pattern
@
text
@d130 1
d1399 20
d2560 29
d3933 2
d4160 3
d4396 3
d4568 2
d4706 1
d4825 1
d5105 9
d5247 2
@


1.109
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d73 1
a85 3
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getAbstractParserClassName <em>Abstract Parser Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getStructuralFeatureParserClassName <em>Structural Feature Parser Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getStructuralFeaturesParserClassName <em>Structural Features Parser Class Name</em>}</li>
d288 20
a547 60
	 * The default value of the '{@@link #getAbstractParserClassName() <em>Abstract Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAbstractParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ABSTRACT_PARSER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getAbstractParserClassName() <em>Abstract Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAbstractParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String abstractParserClassName = ABSTRACT_PARSER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getStructuralFeatureParserClassName() <em>Structural Feature Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getStructuralFeatureParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getStructuralFeatureParserClassName() <em>Structural Feature Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getStructuralFeatureParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String structuralFeatureParserClassName = STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getStructuralFeaturesParserClassName() <em>Structural Features Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getStructuralFeaturesParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getStructuralFeaturesParserClassName() <em>Structural Features Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getStructuralFeaturesParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String structuralFeaturesParserClassName = STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT;

	/**
d2578 29
a3454 87
	public String getAbstractParserClassNameGen() {
		return abstractParserClassName;
	}

	public String getAbstractParserClassName() {
		String value = getAbstractParserClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "AbstractParser"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setAbstractParserClassName(String newAbstractParserClassName) {
		String oldAbstractParserClassName = abstractParserClassName;
		abstractParserClassName = newAbstractParserClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ABSTRACT_PARSER_CLASS_NAME, oldAbstractParserClassName, abstractParserClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getStructuralFeatureParserClassNameGen() {
		return structuralFeatureParserClassName;
	}

	public String getStructuralFeatureParserClassName() {
		String value = getStructuralFeatureParserClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "StructuralFeatureParser"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setStructuralFeatureParserClassName(String newStructuralFeatureParserClassName) {
		String oldStructuralFeatureParserClassName = structuralFeatureParserClassName;
		structuralFeatureParserClassName = newStructuralFeatureParserClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME, oldStructuralFeatureParserClassName, structuralFeatureParserClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getStructuralFeaturesParserClassNameGen() {
		return structuralFeaturesParserClassName;
	}

	public String getStructuralFeaturesParserClassName() {
		String value = getStructuralFeaturesParserClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "StructuralFeaturesParser"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setStructuralFeaturesParserClassName(String newStructuralFeaturesParserClassName) {
		String oldStructuralFeaturesParserClassName = structuralFeaturesParserClassName;
		structuralFeaturesParserClassName = newStructuralFeaturesParserClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURES_PARSER_CLASS_NAME, oldStructuralFeaturesParserClassName, structuralFeaturesParserClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d3769 2
a3794 6
			case GMFGenPackage.GEN_DIAGRAM__ABSTRACT_PARSER_CLASS_NAME:
				return getAbstractParserClassName();
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME:
				return getStructuralFeatureParserClassName();
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURES_PARSER_CLASS_NAME:
				return getStructuralFeaturesParserClassName();
d3938 3
a3976 9
			case GMFGenPackage.GEN_DIAGRAM__ABSTRACT_PARSER_CLASS_NAME:
				setAbstractParserClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME:
				setStructuralFeatureParserClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURES_PARSER_CLASS_NAME:
				setStructuralFeaturesParserClassName((String)newValue);
				return;
d4173 3
a4211 9
			case GMFGenPackage.GEN_DIAGRAM__ABSTRACT_PARSER_CLASS_NAME:
				setAbstractParserClassName(ABSTRACT_PARSER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME:
				setStructuralFeatureParserClassName(STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURES_PARSER_CLASS_NAME:
				setStructuralFeaturesParserClassName(STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT);
				return;
d4396 2
a4421 6
			case GMFGenPackage.GEN_DIAGRAM__ABSTRACT_PARSER_CLASS_NAME:
				return ABSTRACT_PARSER_CLASS_NAME_EDEFAULT == null ? abstractParserClassName != null : !ABSTRACT_PARSER_CLASS_NAME_EDEFAULT.equals(abstractParserClassName);
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME:
				return STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT == null ? structuralFeatureParserClassName != null : !STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT.equals(structuralFeatureParserClassName);
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURES_PARSER_CLASS_NAME:
				return STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT == null ? structuralFeaturesParserClassName != null : !STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT.equals(structuralFeaturesParserClassName);
d4549 1
a4566 3
				case GMFGenPackage.GEN_DIAGRAM__ABSTRACT_PARSER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__ABSTRACT_PARSER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__STRUCTURAL_FEATURE_PARSER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURES_PARSER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__STRUCTURAL_FEATURES_PARSER_CLASS_NAME;
d4667 1
a4684 3
				case GMFGenPackage.PROVIDER_CLASS_NAMES__ABSTRACT_PARSER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__ABSTRACT_PARSER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__STRUCTURAL_FEATURE_PARSER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__STRUCTURAL_FEATURES_PARSER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURES_PARSER_CLASS_NAME;
a4963 27
	public String getAbstractParserQualifiedClassName() {
		return getProvidersPackageName() + '.' + getAbstractParserClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getStructuralFeatureParserQualifiedClassName() {
		return getProvidersPackageName() + '.' + getStructuralFeatureParserClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getStructuralFeaturesParserQualifiedClassName() {
		return getProvidersPackageName() + '.' + getStructuralFeaturesParserClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
d5064 2
a5089 6
		result.append(", abstractParserClassName: ");
		result.append(abstractParserClassName);
		result.append(", structuralFeatureParserClassName: ");
		result.append(structuralFeatureParserClassName);
		result.append(", structuralFeaturesParserClassName: ");
		result.append(structuralFeaturesParserClassName);
@


1.108
log
@[181167] - Separate sycnhronization logic from CanonicalEditPolicy / DiagramContentsInitializer
@
text
@d131 1
d1420 20
d2552 29
d3985 2
d4215 3
d4454 3
d4628 2
d4767 1
d4887 1
d5185 9
d5329 2
@


1.107
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d53 1
d130 1
d1399 20
d2502 29
d3544 1
a3544 1
		return !isSansDomain() && isSynchronized();
d3933 2
d4160 3
d4396 3
d4568 2
d4704 6
d4823 6
d5114 9
d5256 2
@


1.106
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d1144 1
a1144 1
	protected EList<String> containsShortcutsTo = null;
d1154 1
a1154 1
	protected EList<String> shortcutsProvidedFor = null;
d1404 1
a1404 1
	protected GenClass domainDiagramElement = null;
d1414 1
a1414 1
	protected EList<GenChildNode> childNodes = null;
d1424 1
a1424 1
	protected EList<GenTopLevelNode> topLevelNodes = null;
d1434 1
a1434 1
	protected EList<GenLink> links = null;
d1444 1
a1444 1
	protected EList<GenCompartment> compartments = null;
d1454 1
a1454 1
	protected Palette palette = null;
d1484 1
a1484 1
	protected GenDiagramPreferences preferences = null;
d1494 1
a1494 1
	protected EList<GenPreferencePage> preferencePages = null;
@


1.105
log
@Modifying genmodel to avoid classcast exceptions from CrossReferences.
@
text
@a9 1
import java.util.Iterator;
d34 1
d38 1
d1144 1
a1144 1
	protected EList containsShortcutsTo = null;
d1154 1
a1154 1
	protected EList shortcutsProvidedFor = null;
d1414 1
a1414 1
	protected EList childNodes = null;
d1424 1
a1424 1
	protected EList topLevelNodes = null;
d1434 1
a1434 1
	protected EList links = null;
d1444 1
a1444 1
	protected EList compartments = null;
d1494 1
a1494 1
	protected EList preferencePages = null;
d1510 1
d1520 3
a1522 3
	public EList getContainedNodes() {
		List topLevelNodes = getTopLevelNodes();
		return new EcoreEList.UnmodifiableEList(this, GMFGenPackage.eINSTANCE.getGenContainerBase_ContainedNodes(), topLevelNodes.size(), topLevelNodes.toArray());
d1568 1
a1568 1
	public EList getChildNodes() {
d1570 1
a1570 1
			childNodes = new EObjectContainmentWithInverseEList(GenChildNode.class, this, GMFGenPackage.GEN_DIAGRAM__CHILD_NODES, GMFGenPackage.GEN_CHILD_NODE__DIAGRAM);
d1580 1
a1580 1
	public EList getTopLevelNodes() {
d1582 1
a1582 1
			topLevelNodes = new EObjectContainmentWithInverseEList(GenTopLevelNode.class, this, GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES, GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM);
d1592 1
a1592 1
	public EList getLinks() {
d1594 1
a1594 1
			links = new EObjectContainmentWithInverseEList(GenLink.class, this, GMFGenPackage.GEN_DIAGRAM__LINKS, GMFGenPackage.GEN_LINK__DIAGRAM);
d1604 1
a1604 1
	public EList getCompartments() {
d1606 1
a1606 1
			compartments = new EObjectContainmentWithInverseEList(GenCompartment.class, this, GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS, GMFGenPackage.GEN_COMPARTMENT__DIAGRAM);
d1723 1
a1723 1
	public EList getPreferencePages() {
d1725 1
a1725 1
			preferencePages = new EObjectContainmentEList(GenPreferencePage.class, this, GMFGenPackage.GEN_DIAGRAM__PREFERENCE_PAGES);
d2261 1
a2261 1
	public EList getContainsShortcutsTo() {
d2263 1
a2263 1
			containsShortcutsTo = new EDataTypeUniqueEList(String.class, this, GMFGenPackage.GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO);
d2273 1
a2273 1
	public EList getShortcutsProvidedFor() {
d2275 1
a2275 1
			shortcutsProvidedFor = new EDataTypeUniqueEList(String.class, this, GMFGenPackage.GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR);
d3501 2
a3502 2
	public EList getAllNodes() {
		EList result = new BasicEList();
d3505 1
a3505 1
		return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
d3513 2
a3514 2
	public EList getAllChildContainers() {
		EList result = new BasicEList();
d3517 1
a3517 1
		return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
d3525 2
a3526 2
	public EList getAllContainers() {
		EList result = new BasicEList();
d3529 1
a3529 1
		return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
d3678 2
d3687 1
a3687 1
				return ((InternalEList)getChildNodes()).basicAdd(otherEnd, msgs);
d3689 1
a3689 1
				return ((InternalEList)getTopLevelNodes()).basicAdd(otherEnd, msgs);
d3691 1
a3691 1
				return ((InternalEList)getLinks()).basicAdd(otherEnd, msgs);
d3693 1
a3693 1
				return ((InternalEList)getCompartments()).basicAdd(otherEnd, msgs);
d3707 1
d3713 1
a3713 1
				return ((InternalEList)getChildNodes()).basicRemove(otherEnd, msgs);
d3715 1
a3715 1
				return ((InternalEList)getTopLevelNodes()).basicRemove(otherEnd, msgs);
d3717 1
a3717 1
				return ((InternalEList)getLinks()).basicRemove(otherEnd, msgs);
d3719 1
a3719 1
				return ((InternalEList)getCompartments()).basicRemove(otherEnd, msgs);
d3725 1
a3725 1
				return ((InternalEList)getPreferencePages()).basicRemove(otherEnd, msgs);
d3735 1
d3749 1
d3912 2
d4065 1
a4065 1
				getContainsShortcutsTo().addAll((Collection)newValue);
d4069 1
a4069 1
				getShortcutsProvidedFor().addAll((Collection)newValue);
d4112 1
a4112 1
				getChildNodes().addAll((Collection)newValue);
d4116 1
a4116 1
				getTopLevelNodes().addAll((Collection)newValue);
d4120 1
a4120 1
				getLinks().addAll((Collection)newValue);
d4124 1
a4124 1
				getCompartments().addAll((Collection)newValue);
d4137 1
a4137 1
				getPreferencePages().addAll((Collection)newValue);
d4148 1
d4376 1
d4538 2
a4539 1
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
d4651 2
a4652 1
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
d4765 1
a4765 2
		for (Iterator it = getLinks().iterator(); it.hasNext();) {
			GenLink nextLink = (GenLink) it.next();
d5043 1
d5194 1
a5194 2
		for (Iterator it = getAllNodes().iterator(); it.hasNext(); ) {
			GenNode next = (GenNode) it.next();
d5201 1
a5201 2
		for (Iterator it = getLinks().iterator(); it.hasNext();) {
			GenLink next = (GenLink) it.next();
d5214 1
a5214 2
		for (Iterator topLevelNodes = getTopLevelNodes().iterator(); topLevelNodes.hasNext();) {
			GenTopLevelNode nextTopLevelNode = (GenTopLevelNode) topLevelNodes.next();
d5226 1
a5226 2
		for (Iterator it = getLinks().iterator(); it.hasNext();) {
			GenLink nextLink = (GenLink) it.next();
@


1.104
log
@[172032] - Do not generate ??CanonicalEditPolicy for pure-design elements
@
text
@d28 1
d1520 1
a1520 1
		return new BasicEList.UnmodifiableEList(topLevelNodes.size(), topLevelNodes.toArray());
@


1.103
log
@[167466] - Do not generate ??ItemSemanticEditPolicy for pure-design elements
@
text
@d3490 1
a3490 1
		return isSynchronized();
@


1.102
log
@add getCreationWizardIconX() property to the model
@
text
@d5226 4
@


1.101
log
@[134107] add entities for preference pages
@
text
@d97 1
d825 10
d3814 2
d4437 2
d4582 1
d4694 1
@


1.100
log
@define pref initializer class name and qualified class name in template
@
text
@d26 1
d41 1
d135 1
d1474 10
d1709 12
d3707 2
d3880 2
d4112 4
d4340 3
d4500 2
@


1.99
log
@[134107] Provide preferences for the generated diagram editors
@
text
@a100 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPreferenceInitializerClassName <em>Preference Initializer Class Name</em>}</li>
a940 20
	 * The default value of the '{@@link #getPreferenceInitializerClassName() <em>Preference Initializer Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPreferenceInitializerClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPreferenceInitializerClassName() <em>Preference Initializer Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPreferenceInitializerClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String preferenceInitializerClassName = PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT;

	/**
a1855 29
	public String getPreferenceInitializerClassNameGen() {
		return preferenceInitializerClassName;
	}

	public String getPreferenceInitializerClassName() {
		String value = getPreferenceInitializerClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramPreferenceInitializer"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPreferenceInitializerClassName(String newPreferenceInitializerClassName) {
		String oldPreferenceInitializerClassName = preferenceInitializerClassName;
		preferenceInitializerClassName = newPreferenceInitializerClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME, oldPreferenceInitializerClassName, preferenceInitializerClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3497 9
	public String getPreferenceInitializerQualifiedClassName() {
		return getPreferencesPackageName() + '.' + getPreferenceInitializerClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a3787 2
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME:
				return getPreferenceInitializerClassName();
a3983 3
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME:
				setPreferenceInitializerClassName((String)newValue);
				return;
a4213 3
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME:
				setPreferenceInitializerClassName(PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT);
				return;
a4399 2
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME:
				return PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT == null ? preferenceInitializerClassName != null : !PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT.equals(preferenceInitializerClassName);
a4534 1
				case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__PREFERENCE_INITIALIZER_CLASS_NAME;
a4645 1
				case GMFGenPackage.EDITOR_CANDIES__PREFERENCE_INITIALIZER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME;
a5058 2
		result.append(", preferenceInitializerClassName: ");
		result.append(preferenceInitializerClassName);
@


1.98
log
@[134107] Provide preferences for the generated diagram editors
@
text
@d3549 1
a3549 1
		return getEditorPackageName() + '.' + getPreferenceInitializerClassName();
@


1.97
log
@[134107] Provide preferences for the generated diagram editors
@
text
@d66 1
d242 20
d1828 29
d3777 2
d3940 3
d4173 3
d4397 2
d4549 1
d4661 1
d5060 2
@


1.96
log
@remove unused edit policy name; add custom primary drag edit policy name
@
text
@d37 1
d132 1
d1461 10
d1653 43
d3689 2
d3860 2
d4089 3
d4313 3
d4471 2
@


1.95
log
@[165474] [Validation] LIVE mode audits violation should provide UI feedback
@
text
@a89 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getExternalNodeLabelHostLayoutEditPolicyClassName <em>External Node Label Host Layout Edit Policy Class Name</em>}</li>
a738 20
	 * The default value of the '{@@link #getExternalNodeLabelHostLayoutEditPolicyClassName() <em>External Node Label Host Layout Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getExternalNodeLabelHostLayoutEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getExternalNodeLabelHostLayoutEditPolicyClassName() <em>External Node Label Host Layout Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getExternalNodeLabelHostLayoutEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String externalNodeLabelHostLayoutEditPolicyClassName = EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
a2681 29
	public String getExternalNodeLabelHostLayoutEditPolicyClassNameGen() {
		return externalNodeLabelHostLayoutEditPolicyClassName;
	}

	public String getExternalNodeLabelHostLayoutEditPolicyClassName() {
		String value = getExternalNodeLabelHostLayoutEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ExtNodeLabelHostLayoutEditPolicy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setExternalNodeLabelHostLayoutEditPolicyClassName(String newExternalNodeLabelHostLayoutEditPolicyClassName) {
		String oldExternalNodeLabelHostLayoutEditPolicyClassName = externalNodeLabelHostLayoutEditPolicyClassName;
		externalNodeLabelHostLayoutEditPolicyClassName = newExternalNodeLabelHostLayoutEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME, oldExternalNodeLabelHostLayoutEditPolicyClassName, externalNodeLabelHostLayoutEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3719 2
			case GMFGenPackage.GEN_DIAGRAM__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME:
				return getExternalNodeLabelHostLayoutEditPolicyClassName();
a3903 3
			case GMFGenPackage.GEN_DIAGRAM__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME:
				setExternalNodeLabelHostLayoutEditPolicyClassName((String)newValue);
				return;
a4130 3
			case GMFGenPackage.GEN_DIAGRAM__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME:
				setExternalNodeLabelHostLayoutEditPolicyClassName(EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
a4323 2
			case GMFGenPackage.GEN_DIAGRAM__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME:
				return EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? externalNodeLabelHostLayoutEditPolicyClassName != null : !EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(externalNodeLabelHostLayoutEditPolicyClassName);
a4461 1
				case GMFGenPackage.GEN_DIAGRAM__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME;
a4572 1
				case GMFGenPackage.EDIT_PART_CANDIES__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME;
a4754 9
	public String getExternalNodeLabelHostLayoutEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getExternalNodeLabelHostLayoutEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a4980 2
		result.append(", externalNodeLabelHostLayoutEditPolicyClassName: ");
		result.append(externalNodeLabelHostLayoutEditPolicyClassName);
@


1.94
log
@[152717] - Do not generate *ReferenceConnectionEditPolicy
@
text
@d122 1
d1360 20
d2365 21
d3834 2
d4054 3
d4282 3
d4446 2
d4569 1
d4681 1
d5116 2
@


1.93
log
@removed stale attributes from gmfgen model.
migration resource eagerly treats any resource with newest nsURI as potential candidate for missed attributes
@
text
@a87 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getReferenceConnectionEditPolicyClassName <em>Reference Connection Edit Policy Class Name</em>}</li>
a698 20
	 * The default value of the '{@@link #getReferenceConnectionEditPolicyClassName() <em>Reference Connection Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReferenceConnectionEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getReferenceConnectionEditPolicyClassName() <em>Reference Connection Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReferenceConnectionEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String referenceConnectionEditPolicyClassName = REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
a2577 29
	public String getReferenceConnectionEditPolicyClassNameGen() {
		return referenceConnectionEditPolicyClassName;
	}

	public String getReferenceConnectionEditPolicyClassName() {
		String value = getReferenceConnectionEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ReferenceConnectionEditPolicy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setReferenceConnectionEditPolicyClassName(String newReferenceConnectionEditPolicyClassName) {
		String oldReferenceConnectionEditPolicyClassName = referenceConnectionEditPolicyClassName;
		referenceConnectionEditPolicyClassName = newReferenceConnectionEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME, oldReferenceConnectionEditPolicyClassName, referenceConnectionEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3723 2
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				return getReferenceConnectionEditPolicyClassName();
a3905 3
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				setReferenceConnectionEditPolicyClassName((String)newValue);
				return;
a4132 3
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				setReferenceConnectionEditPolicyClassName(REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
a4327 2
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				return REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? referenceConnectionEditPolicyClassName != null : !REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(referenceConnectionEditPolicyClassName);
a4467 1
				case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME;
a4578 1
				case GMFGenPackage.EDIT_PART_CANDIES__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME;
a4730 10

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getReferenceConnectionEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getReferenceConnectionEditPolicyClassName();
	}

a4993 2
		result.append(", referenceConnectionEditPolicyClassName: ");
		result.append(referenceConnectionEditPolicyClassName);
@


1.92
log
@Refactoring navigator to support cross-diagram shortcuts.
@
text
@a71 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPaletteProviderClassName <em>Palette Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPaletteProviderPriority <em>Palette Provider Priority</em>}</li>
a73 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPropertyProviderClassName <em>Property Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPropertyProviderPriority <em>Property Provider Priority</em>}</li>
a379 40
	 * The default value of the '{@@link #getPaletteProviderClassName() <em>Palette Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPaletteProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PALETTE_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPaletteProviderClassName() <em>Palette Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPaletteProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String paletteProviderClassName = PALETTE_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getPaletteProviderPriority() <em>Palette Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPaletteProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority PALETTE_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getPaletteProviderPriority() <em>Palette Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPaletteProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority paletteProviderPriority = PALETTE_PROVIDER_PRIORITY_EDEFAULT;

	/**
a419 40
	 * The default value of the '{@@link #getPropertyProviderClassName() <em>Property Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPropertyProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPropertyProviderClassName() <em>Property Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPropertyProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String propertyProviderClassName = PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getPropertyProviderPriority() <em>Property Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPropertyProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority PROPERTY_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getPropertyProviderPriority() <em>Property Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPropertyProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority propertyProviderPriority = PROPERTY_PROVIDER_PRIORITY_EDEFAULT;

	/**
d1912 1
a1912 1
	
a3180 50
	public String getPaletteProviderClassNameGen() {
		return paletteProviderClassName;
	}

	public String getPaletteProviderClassName() {
		String value = getPaletteProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "PaletteProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPaletteProviderClassName(String newPaletteProviderClassName) {
		String oldPaletteProviderClassName = paletteProviderClassName;
		paletteProviderClassName = newPaletteProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_CLASS_NAME, oldPaletteProviderClassName, paletteProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getPaletteProviderPriority() {
		return paletteProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPaletteProviderPriority(ProviderPriority newPaletteProviderPriority) {
		ProviderPriority oldPaletteProviderPriority = paletteProviderPriority;
		paletteProviderPriority = newPaletteProviderPriority == null ? PALETTE_PROVIDER_PRIORITY_EDEFAULT : newPaletteProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_PRIORITY, oldPaletteProviderPriority, paletteProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3230 50
	public String getPropertyProviderClassNameGen() {
		return propertyProviderClassName;
	}

	public String getPropertyProviderClassName() {
		String value = getPropertyProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "PropertyProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPropertyProviderClassName(String newPropertyProviderClassName) {
		String oldPropertyProviderClassName = propertyProviderClassName;
		propertyProviderClassName = newPropertyProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME, oldPropertyProviderClassName, propertyProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getPropertyProviderPriority() {
		return propertyProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPropertyProviderPriority(ProviderPriority newPropertyProviderPriority) {
		ProviderPriority oldPropertyProviderPriority = propertyProviderPriority;
		propertyProviderPriority = newPropertyProviderPriority == null ? PROPERTY_PROVIDER_PRIORITY_EDEFAULT : newPropertyProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_PRIORITY, oldPropertyProviderPriority, propertyProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3741 4
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_CLASS_NAME:
				return getPaletteProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_PRIORITY:
				return getPaletteProviderPriority();
a3745 4
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME:
				return getPropertyProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_PRIORITY:
				return getPropertyProviderPriority();
a3909 6
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_CLASS_NAME:
				setPaletteProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_PRIORITY:
				setPaletteProviderPriority((ProviderPriority)newValue);
				return;
a3915 6
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME:
				setPropertyProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_PRIORITY:
				setPropertyProviderPriority((ProviderPriority)newValue);
				return;
a4139 6
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_CLASS_NAME:
				setPaletteProviderClassName(PALETTE_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_PRIORITY:
				setPaletteProviderPriority(PALETTE_PROVIDER_PRIORITY_EDEFAULT);
				return;
a4145 6
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME:
				setPropertyProviderClassName(PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_PRIORITY:
				setPropertyProviderPriority(PROPERTY_PROVIDER_PRIORITY_EDEFAULT);
				return;
a4353 4
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_CLASS_NAME:
				return PALETTE_PROVIDER_CLASS_NAME_EDEFAULT == null ? paletteProviderClassName != null : !PALETTE_PROVIDER_CLASS_NAME_EDEFAULT.equals(paletteProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_PRIORITY:
				return paletteProviderPriority != PALETTE_PROVIDER_PRIORITY_EDEFAULT;
a4357 4
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME:
				return PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT == null ? propertyProviderClassName != null : !PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT.equals(propertyProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_PRIORITY:
				return propertyProviderPriority != PROPERTY_PROVIDER_PRIORITY_EDEFAULT;
a4501 2
				case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__PALETTE_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__PALETTE_PROVIDER_PRIORITY;
a4503 2
				case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__PROPERTY_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__PROPERTY_PROVIDER_PRIORITY;
a4613 2
				case GMFGenPackage.PROVIDER_CLASS_NAMES__PALETTE_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__PALETTE_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__PALETTE_PROVIDER_PRIORITY;
a4615 2
				case GMFGenPackage.PROVIDER_CLASS_NAMES__PROPERTY_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__PROPERTY_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_PRIORITY;
a4888 9
	public String getPaletteProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getPaletteProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a4897 9
	public String getPropertyProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getPropertyProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a5033 4
		result.append(", paletteProviderClassName: ");
		result.append(paletteProviderClassName);
		result.append(", paletteProviderPriority: ");
		result.append(paletteProviderPriority);
a5037 4
		result.append(", propertyProviderClassName: ");
		result.append(propertyProviderClassName);
		result.append(", propertyProviderPriority: ");
		result.append(propertyProviderPriority);
@


1.91
log
@GenContainerBase.containedNodes should be readonly
@
text
@d114 1
d1224 20
d1993 29
d3721 9
d4010 2
d4228 3
d4470 3
d4654 2
d4788 1
d4904 1
d5368 2
@


1.90
log
@remove unused diagram file creator class name attribute
@
text
@d1566 2
a1567 1
		return getTopLevelNodes();
a4004 4
			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
				getContainedNodes().clear();
				getContainedNodes().addAll((Collection)newValue);
				return;
a4243 3
			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
				getContainedNodes().clear();
				return;
@


1.89
log
@D&D from diagram content navigator to Diagram surface.
@
text
@a100 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDiagramFileCreatorClassName <em>Diagram File Creator Class Name</em>}</li>
a962 20
	 * The default value of the '{@@link #getDiagramFileCreatorClassName() <em>Diagram File Creator Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileCreatorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDiagramFileCreatorClassName() <em>Diagram File Creator Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileCreatorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String diagramFileCreatorClassName = DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT;

	/**
a3134 29
	public String getDiagramFileCreatorClassNameGen() {
		return diagramFileCreatorClassName;
	}

	public String getDiagramFileCreatorClassName() {
		String value = getDiagramFileCreatorClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramFileCreator"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramFileCreatorClassName(String newDiagramFileCreatorClassName) {
		String oldDiagramFileCreatorClassName = diagramFileCreatorClassName;
		diagramFileCreatorClassName = newDiagramFileCreatorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME, oldDiagramFileCreatorClassName, diagramFileCreatorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3923 2
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME:
				return getDiagramFileCreatorClassName();
a4130 3
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME:
				setDiagramFileCreatorClassName((String)newValue);
				return;
a4372 3
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME:
				setDiagramFileCreatorClassName(DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT);
				return;
a4566 2
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME:
				return DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT == null ? diagramFileCreatorClassName != null : !DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT.equals(diagramFileCreatorClassName);
a4706 1
				case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__DIAGRAM_FILE_CREATOR_CLASS_NAME;
a4821 1
				case GMFGenPackage.EDITOR_CANDIES__DIAGRAM_FILE_CREATOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME;
a5154 9
	public String getDiagramFileCreatorQualifiedClassName() {
		return getEditorPackageName() + '.' + getDiagramFileCreatorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a5276 2
		result.append(", diagramFileCreatorClassName: ");
		result.append(diagramFileCreatorClassName);
@


1.88
log
@#161380 simplify feature model facets
@
text
@d114 1
d1224 20
d1963 29
d3711 9
d4000 2
d4222 3
d4467 3
d4651 2
d4785 1
d4901 1
d5374 2
@


1.87
log
@moved code-only parts from templates to model impl classes
@
text
@d31 1
a31 1
import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;
d5386 2
a5387 2
			if (nextLink.getModelFacet() instanceof FeatureModelFacet) {
				FeatureModelFacet nextModelFacet = (FeatureModelFacet) nextLink.getModelFacet();
@


1.86
log
@refactor common attribute (canonical ep name) into shared superclass, get ready to avoid generation of useless canonicalep classes
@
text
@d12 2
d31 1
d5349 14
a5362 14
		if(getEditorGen() != null && getEditorGen().getDiagram() != null) {
			for (Iterator it = getEditorGen().getDiagram().eAllContents(); it.hasNext(); ) {
				Object next = it.next();
				TypeModelFacet modelFacet = null;
				if (next instanceof GenNode) {
					modelFacet = ((GenNode) next).getModelFacet();
					if(modelFacet != null) {
						resultMap.put(modelFacet, (GenNode)next);					
					}
				} else if (next instanceof GenLink && ((GenLink) next).getModelFacet() instanceof TypeLinkModelFacet) {
					modelFacet = (TypeLinkModelFacet) ((GenLink) next).getModelFacet();
					if(modelFacet != null) { 
						resultMap.put(modelFacet, (GenLink) next);
					}
d5367 28
a5394 1
	}	
@


1.85
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
- updating ElementTypes template
@
text
@a29 1
import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;
d57 1
a89 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCanonicalEditPolicyClassName <em>Canonical Edit Policy Class Name</em>}</li>
d140 20
a799 20
	 * The default value of the '{@@link #getCanonicalEditPolicyClassName() <em>Canonical Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCanonicalEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCanonicalEditPolicyClassName() <em>Canonical Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCanonicalEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String canonicalEditPolicyClassName = CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
d2634 1
a2634 1
		return getValidClassName(getCanonicalEditPolicyClassNameGen(), this, GenChildContainer.CANONICAL_EDIT_POLICY_SUFFIX);
d3586 9
d3830 2
a3895 2
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				return getCanonicalEditPolicyClassName();
d3996 3
a4094 3
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				setCanonicalEditPolicyClassName((String)newValue);
				return;
d4238 3
a4336 3
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				setCanonicalEditPolicyClassName(CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
d4473 2
a4538 2
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				return CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? canonicalEditPolicyClassName != null : !CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(canonicalEditPolicyClassName);
a4681 1
				case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__CANONICAL_EDIT_POLICY_CLASS_NAME;
a4796 1
				case GMFGenPackage.EDIT_PART_CANDIES__CANONICAL_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME;
d5192 3
a5194 1
		result.append(" (editCommandsPackageName: ");
a5257 2
		result.append(", canonicalEditPolicyClassName: ");
		result.append(canonicalEditPolicyClassName);
@


1.84
log
@#144885 CCE while moving external node label on diagram
@
text
@d11 2
d32 1
d37 1
d46 2
d5337 22
@


1.83
log
@#144884 Suppress InitDiagramFileAction generation if canvas mapping has no domain model element
@
text
@d87 1
d835 20
d2515 1
a2515 1
			value = getDomainPackageCapName() + "ExternalNodeLabelEditPart"; //$NON-NLS-1$
d2707 29
d3886 2
d4087 3
d4329 3
d4529 2
d4671 1
d4787 1
d4978 9
d5250 2
@


1.82
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d3612 9
@


1.81
log
@#143541 Add property to gmfgen to hold editing domain id
#144205 Add property to gmfgen model to hold diagram creation wizard category id
@
text
@d1974 1
a1974 1
	
@


1.80
log
@#146199 There should be no exceptions when child nodes are defined in pure design diagrams
@
text
@d90 1
d101 1
d894 20
d1114 20
d1971 29
d2989 30
d3833 2
d3855 2
d4035 3
d4068 3
d4274 3
d4307 3
d4468 2
d4490 2
d4610 1
d4621 1
d4725 1
d4736 1
d5176 2
d5198 2
@


1.79
log
@#126249 Generate PrintPreview action for the diagram
@
text
@d3395 1
a3395 1
	
@


1.78
log
@#145502 Naming strategy and gmfgen model objects should generate consistent class names
@
text
@d76 1
d612 20
d3390 38
d3704 2
d3888 3
d4121 3
d4323 2
d4460 1
d4573 1
d5023 2
@


1.77
log
@provide Node/Link/Label/Diagram class prefix instead of Unknown for elements without model facet; add extra empty values checks
@
text
@d1744 1
d1746 4
a1749 3
			return getDomainDiagramElement().getName();
		} else if (getEditorGen().getDomainGenModel() != null) {
			return getEditorGen().getDomainGenModel().getModelName();
d1751 1
a1751 1
		return "Diagram";
@


1.76
log
@#144720 Add provider <Priority> attribute in gmfgen model for Validation Decorator provider
@
text
@a1747 2
		} else {
			return "Unknown";
d1749 1
d2514 1
a2514 5
		String value = getCanonicalEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getClassNamePrefix() + GenChildContainer.CANONICAL_EDIT_POLICY_SUFFIX;
		}
		return value;
@


1.75
log
@Re-generated with EMF RC6a
@
text
@d113 1
d1331 20
d2226 21
d3722 2
d3943 3
d4171 3
d4333 2
d4456 1
d4568 1
d5029 2
@


1.74
log
@refactor getUniqueIdentifier() : all GenCommonBase implementations use the same logic so move it in GenCommonBaseImpl
@
text
@d2442 1
a2442 1
	
@


1.73
log
@#145502 deprecate getClassNameSuffix()
@
text
@d1724 1
a1724 1
			return  getDomainDiagramElement().getName();
a4982 10
	public String getUniqueIdentifier() {
		String prefix;
		if (getDomainDiagramElement() != null) {
			prefix = getDomainDiagramElement().getInterfaceName();
		} else {
			prefix = "Diagram";
		}
		return prefix + "_" + getVisualID();
	}

@


1.72
log
@#144251 Example ecore diagram editor creates invalid ecore file

Should be possible to remove reference-only links.
@
text
@a1731 4
	public String getClassNameSuffux() {
		return "Diagram";
	}

d2475 1
a2475 1
			value = getClassNamePart() + GenChildContainer.CANONICAL_EDIT_POLICY_SUFFIX;
@


1.71
log
@#141865 Icon not displayed for the wizard banner
Wizard banner image and wizard/editor icon are generated now with EMF facility for coloured .gifs
Keyword added to iconPath values to allow reference icons from EMF editor
@
text
@d82 1
d730 20
d2443 29
d3622 2
d3808 3
d4035 3
d4225 2
d4362 1
d4473 1
d4622 10
d4917 2
@


1.70
log
@ensure that obligatory icons are specified; provide reasonable defaults for design diagrams
@
text
@d2769 1
a2769 1
			value = getModelIconPath();
d2774 7
a2780 1
	String getModelIconPath() {
d2785 2
a2786 1
			return "icons/full/obj16/ModelFile.gif";
d2790 5
@


1.69
log
@#114175 allow to create diagram editor without domain model
@
text
@d2768 8
a2775 1
		if (isEmpty(value) && getDomainDiagramElement() != null) {
d2777 3
a2779 1
			value = "../" + getEditorGen().getDomainGenModel().getEditorPluginID() + "/icons/full/obj16/" + domainMetaModel.getPrefix() + "ModelFile.gif";
a2780 1
		return value;
@


1.68
log
@#131543 Obsolete code should be eliminated
@
text
@d1704 2
d1707 1
a1707 1
			return getEditorGen().getDomainGenModel().getModelName();
a1708 1
		// XXX NPE in gmfgen editor when neither domainGenModel nor domainDiagramElement has been set?
@


1.67
log
@#136803 Support decorator provider for validated elements in generated diagram editors
@
text
@d120 1
d1389 20
d1569 21
d3628 2
d3852 3
d4070 3
d4222 2
d4886 2
@


1.66
log
@remove ref connection edit policy - not required anymore
@
text
@d110 2
d1268 40
d1978 9
d2089 56
d3565 4
d3777 6
d3996 6
d4152 4
d4272 2
d4382 2
d4828 4
@


1.65
log
@#135693 Use decoration service to provide shortcut image
@
text
@a81 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getReferenceConnectionEditPolicyClassName <em>Reference Connection Edit Policy Class Name</em>}</li>
a725 20
	 * The default value of the '{@@link #getReferenceConnectionEditPolicyClassName() <em>Reference Connection Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReferenceConnectionEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getReferenceConnectionEditPolicyClassName() <em>Reference Connection Edit Policy Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReferenceConnectionEditPolicyClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String referenceConnectionEditPolicyClassName = REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;

	/**
a2271 29
	public String getReferenceConnectionEditPolicyClassNameGen() {
		return referenceConnectionEditPolicyClassName;
	}

	public String getReferenceConnectionEditPolicyClassName() {
		String value = getReferenceConnectionEditPolicyClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "ReferenceConnectionEditPolicy"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setReferenceConnectionEditPolicyClassName(String newReferenceConnectionEditPolicyClassName) {
		String oldReferenceConnectionEditPolicyClassName = referenceConnectionEditPolicyClassName;
		referenceConnectionEditPolicyClassName = newReferenceConnectionEditPolicyClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME, oldReferenceConnectionEditPolicyClassName, referenceConnectionEditPolicyClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3401 2
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				return getReferenceConnectionEditPolicyClassName();
a3579 3
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				setReferenceConnectionEditPolicyClassName((String)newValue);
				return;
a3794 3
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				setReferenceConnectionEditPolicyClassName(REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
a3972 2
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				return REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? referenceConnectionEditPolicyClassName != null : !REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(referenceConnectionEditPolicyClassName);
a4101 1
				case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.EDIT_PART_CANDIES__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME;
a4209 1
				case GMFGenPackage.EDIT_PART_CANDIES__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME;
a4360 9
	public String getReferenceConnectionEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getReferenceConnectionEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a4640 2
		result.append(", referenceConnectionEditPolicyClassName: ");
		result.append(referenceConnectionEditPolicyClassName);
@


1.64
log
@#125900 Redundant annotations added to View in generated view factory

semantic hint class name plroperty removed from the model.
@
text
@d99 2
d1067 40
d1805 50
d3247 9
d3257 1
a3257 1
		return getProvidersPackageName() + "." + getValidationProviderClassName(); //$NON-NLS-1$
d3486 4
d3683 6
d3901 6
d4065 4
d4189 2
d4298 2
d4746 4
@


1.63
log
@#126200 register element types in xml
@
text
@a58 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getSemanticHintsClassName <em>Semantic Hints Class Name</em>}</li>
a264 20
	 * The default value of the '{@@link #getSemanticHintsClassName() <em>Semantic Hints Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSemanticHintsClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SEMANTIC_HINTS_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getSemanticHintsClassName() <em>Semantic Hints Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSemanticHintsClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String semanticHintsClassName = SEMANTIC_HINTS_CLASS_NAME_EDEFAULT;

	/**
a2345 29
	public String getSemanticHintsClassNameGen() {
		return semanticHintsClassName;
	}

	public String getSemanticHintsClassName() {
		String value = getSemanticHintsClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "SemanticHints"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSemanticHintsClassName(String newSemanticHintsClassName) {
		String oldSemanticHintsClassName = semanticHintsClassName;
		semanticHintsClassName = newSemanticHintsClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME, oldSemanticHintsClassName, semanticHintsClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a3304 2
			case GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME:
				return getSemanticHintsClassName();
a3457 3
			case GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME:
				setSemanticHintsClassName((String)newValue);
				return;
a3669 3
			case GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME:
				setSemanticHintsClassName(SEMANTIC_HINTS_CLASS_NAME_EDEFAULT);
				return;
a3867 2
			case GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME:
				return SEMANTIC_HINTS_CLASS_NAME_EDEFAULT == null ? semanticHintsClassName != null : !SEMANTIC_HINTS_CLASS_NAME_EDEFAULT.equals(semanticHintsClassName);
a4007 1
				case GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__SEMANTIC_HINTS_CLASS_NAME;
a4114 1
				case GMFGenPackage.PROVIDER_CLASS_NAMES__SEMANTIC_HINTS_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME;
a4342 9
	public String getSemanticHintsQualifiedClassName() {
		return getProvidersPackageName() + '.' + getSemanticHintsClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a4540 2
		result.append(", semanticHintsClassName: ");
		result.append(semanticHintsClassName);
@


1.62
log
@#135194 add @@generated NOT
@
text
@a26 1
import org.eclipse.gmf.codegen.gmfgen.ElementType;
a51 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditHelperClassName <em>Edit Helper Class Name</em>}</li>
d78 1
a125 20
	 * The default value of the '{@@link #getEditHelperClassName() <em>Edit Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditHelperClassName() <em>Edit Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;

	/**
d646 20
a1376 29
	public String getEditHelperClassNameGen() {
		return editHelperClassName;
	}

	public String getEditHelperClassName() {
		String value = getEditHelperClassNameGen();
		if (isEmpty(value)) {
			value = getClassNamePart() + ElementType.EDIT_HELPER_SUFFIX;
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditHelperClassName(String newEditHelperClassName) {
		String oldEditHelperClassName = editHelperClassName;
		editHelperClassName = newEditHelperClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_HELPER_CLASS_NAME, oldEditHelperClassName, editHelperClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1503 9
	 * @@generated NOT
	 */
	public String getEditHelperQualifiedClassName() {
		return getDiagram().getEditHelpersPackageName() + '.' + getEditHelperClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
d2475 29
a3340 2
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPER_CLASS_NAME:
				return getEditHelperClassName();
d3393 2
a3488 3
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPER_CLASS_NAME:
				setEditHelperClassName((String)newValue);
				return;
d3567 3
a3703 3
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPER_CLASS_NAME:
				setEditHelperClassName(EDIT_HELPER_CLASS_NAME_EDEFAULT);
				return;
d3782 3
a3911 2
			case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPER_CLASS_NAME:
				return EDIT_HELPER_CLASS_NAME_EDEFAULT == null ? editHelperClassName != null : !EDIT_HELPER_CLASS_NAME_EDEFAULT.equals(editHelperClassName);
d3964 2
a4053 6
		if (baseClass == ElementType.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_DIAGRAM__EDIT_HELPER_CLASS_NAME: return GMFGenPackage.ELEMENT_TYPE__EDIT_HELPER_CLASS_NAME;
				default: return -1;
			}
		}
d4097 1
a4161 6
		if (baseClass == ElementType.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.ELEMENT_TYPE__EDIT_HELPER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__EDIT_HELPER_CLASS_NAME;
				default: return -1;
			}
		}
d4205 1
d4315 9
d4598 1
a4598 3
		result.append(" (editHelperClassName: ");
		result.append(editHelperClassName);
		result.append(", editCommandsPackageName: ");
d4650 2
@


1.61
log
@#126200 register element types in xml
@
text
@d1534 1
a1534 1
	 * @@generated
@


1.60
log
@[rdvorak] #133369 Generate code for metric evaluation and result visualization
@
text
@d27 1
d53 1
d55 1
d127 20
d167 20
d1378 29
d1536 9
d1574 29
d3351 2
d3355 2
d3499 3
d3505 3
d3714 3
d3720 3
d3922 2
d3926 2
d4064 6
d4073 1
d4177 6
d4186 1
d4609 3
a4611 1
		result.append(" (editCommandsPackageName: ");
d4613 2
@


1.59
log
@provide selection for the child nodes
@
text
@d106 2
d1184 40
d1797 18
d1862 55
d3349 4
d3549 6
d3756 6
d3904 4
d4020 2
d4126 2
d4573 4
@


1.58
log
@#131543 Code reconstructing the diagram contents separated from the init diagram file action.
@
text
@d84 1
d762 20
d2123 29
d3190 2
d3362 3
d3565 3
d3729 2
d3848 1
d3952 1
d4115 9
d4390 2
@


1.57
log
@provide custom text selection edit policy
@
text
@d91 1
d901 20
d2268 29
d3154 2
d3331 3
d3531 3
d3685 2
d3800 1
d3903 1
d4089 9
d4333 2
@


1.56
log
@added attribute to match measurement unit setting of notation diagram
@
text
@d83 1
d740 20
d2052 29
d3088 2
d3255 3
d3452 3
d3611 2
d3727 1
d3829 1
d3982 9
d4246 2
@


1.55
log
@make diagram editor and creation wizard icons configurable
@
text
@d36 1
d103 1
d1119 20
d1739 21
d3078 2
d3265 3
d3457 3
d3593 2
d3705 6
d3806 6
d4215 2
@


1.54
log
@#127696
Templates should use new transaction API
(not finished)
@
text
@d13 1
d84 1
d777 20
d2212 30
d2999 2
d3164 3
d3355 3
d3506 2
d3621 1
d3716 1
d4114 2
d4155 7
a4161 1
		return getDomainDiagramElement().getInterfaceName() + "_" + getVisualID();
@


1.53
log
@#126199 add palette provider
@
text
@a62 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMetamodelSupportProviderClassName <em>Metamodel Support Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMetamodelSupportProviderPriority <em>Metamodel Support Provider Priority</em>}</li>
a374 40
	 * The default value of the '{@@link #getMetamodelSupportProviderClassName() <em>Metamodel Support Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetamodelSupportProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getMetamodelSupportProviderClassName() <em>Metamodel Support Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetamodelSupportProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String metamodelSupportProviderClassName = METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMetamodelSupportProviderPriority() <em>Metamodel Support Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetamodelSupportProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected static final ProviderPriority METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;

	/**
	 * The cached value of the '{@@link #getMetamodelSupportProviderPriority() <em>Metamodel Support Provider Priority</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetamodelSupportProviderPriority()
	 * @@generated
	 * @@ordered
	 */
	protected ProviderPriority metamodelSupportProviderPriority = METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT;

	/**
a2376 50
	public String getMetamodelSupportProviderClassNameGen() {
		return metamodelSupportProviderClassName;
	}

	public String getMetamodelSupportProviderClassName() {
		String value = getMetamodelSupportProviderClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "MetaModelSupportProvider"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMetamodelSupportProviderClassName(String newMetamodelSupportProviderClassName) {
		String oldMetamodelSupportProviderClassName = metamodelSupportProviderClassName;
		metamodelSupportProviderClassName = newMetamodelSupportProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME, oldMetamodelSupportProviderClassName, metamodelSupportProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ProviderPriority getMetamodelSupportProviderPriority() {
		return metamodelSupportProviderPriority;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMetamodelSupportProviderPriority(ProviderPriority newMetamodelSupportProviderPriority) {
		ProviderPriority oldMetamodelSupportProviderPriority = metamodelSupportProviderPriority;
		metamodelSupportProviderPriority = newMetamodelSupportProviderPriority == null ? METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT : newMetamodelSupportProviderPriority;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_PRIORITY, oldMetamodelSupportProviderPriority, metamodelSupportProviderPriority));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a2906 4
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME:
				return getMetamodelSupportProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_PRIORITY:
				return getMetamodelSupportProviderPriority();
a3049 6
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME:
				setMetamodelSupportProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_PRIORITY:
				setMetamodelSupportProviderPriority((ProviderPriority)newValue);
				return;
a3237 6
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME:
				setMetamodelSupportProviderClassName(METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_PRIORITY:
				setMetamodelSupportProviderPriority(METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT);
				return;
a3405 4
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME:
				return METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT == null ? metamodelSupportProviderClassName != null : !METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT.equals(metamodelSupportProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_PRIORITY:
				return metamodelSupportProviderPriority != METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT;
a3523 2
				case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME: return GMFGenPackage.PROVIDER_CLASS_NAMES__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME;
				case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_PRIORITY: return GMFGenPackage.PROVIDER_CLASS_NAMES__METAMODEL_SUPPORT_PROVIDER_PRIORITY;
a3617 2
				case GMFGenPackage.PROVIDER_CLASS_NAMES__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME;
				case GMFGenPackage.PROVIDER_CLASS_NAMES__METAMODEL_SUPPORT_PROVIDER_PRIORITY: return GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_PRIORITY;
a3844 9
	public String getMetamodelSupportProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getMetamodelSupportProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a4009 4
		result.append(", metamodelSupportProviderClassName: ");
		result.append(metamodelSupportProviderClassName);
		result.append(", metamodelSupportProviderPriority: ");
		result.append(metamodelSupportProviderPriority);
@


1.52
log
@#126245 configurable priorities
@
text
@d61 2
d337 40
d2369 50
d2995 4
d3140 6
d3334 6
d3510 4
d3634 2
d3730 2
d3952 9
d4131 4
@


1.51
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d38 1
d58 1
d60 1
d62 1
d64 1
d66 1
d68 1
d70 1
d96 1
d98 1
d275 20
d315 20
d355 20
d395 20
d435 20
d475 20
d515 20
d1015 20
d1055 20
d1598 21
d2053 21
d2306 21
d2356 21
d2406 21
d2456 21
d2506 21
d2556 21
d2773 21
d2897 2
d2901 2
d2905 2
d2909 2
d2913 2
d2917 2
d2921 2
d2973 2
d2977 2
d3035 3
d3041 3
d3047 3
d3053 3
d3059 3
d3065 3
d3071 3
d3151 3
d3157 3
d3223 3
d3229 3
d3235 3
d3241 3
d3247 3
d3253 3
d3259 3
d3337 3
d3343 3
d3396 2
d3400 2
d3404 2
d3408 2
d3412 2
d3416 2
d3420 2
d3472 2
d3476 2
d3519 1
d3521 1
d3523 1
d3525 1
d3527 1
d3529 1
d3531 1
d3582 1
d3584 1
d3613 1
d3615 1
d3617 1
d3619 1
d3621 1
d3623 1
d3625 1
d3676 1
d3678 1
d4000 2
d4004 2
d4008 2
d4012 2
d4016 2
d4020 2
d4024 2
d4076 2
d4080 2
@


1.50
log
@make use of public packageNamePrefix
@
text
@a12 1
import org.eclipse.emf.codegen.util.CodeGenUtil;
a51 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditorPackageName <em>Editor Package Name</em>}</li>
a72 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getActionBarContributorClassName <em>Action Bar Contributor Class Name</em>}</li>
a77 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditorClassName <em>Editor Class Name</em>}</li>
a164 20
	 * The default value of the '{@@link #getEditorPackageName() <em>Editor Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditorPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDITOR_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditorPackageName() <em>Editor Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditorPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String editorPackageName = EDITOR_PACKAGE_NAME_EDEFAULT;

	/**
a584 20
	 * The default value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionBarContributorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionBarContributorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String actionBarContributorClassName = ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT;

	/**
a684 20
	 * The default value of the '{@@link #getEditorClassName() <em>Editor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDITOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditorClassName() <em>Editor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String editorClassName = EDITOR_CLASS_NAME_EDEFAULT;

	/**
a1493 29
	public String getEditorPackageNameGen() {
		return editorPackageName;
	}

	public String getEditorPackageName() {
		String value = getEditorPackageNameGen();
		if (isEmpty(value)) {
			value = getEditorGen().getPackageNamePrefix() + ".part";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditorPackageName(String newEditorPackageName) {
		String oldEditorPackageName = editorPackageName;
		editorPackageName = newEditorPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME, oldEditorPackageName, editorPackageName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1551 29
	public String getEditorClassNameGen() {
		return editorClassName;
	}

	public String getEditorClassName() {
		String value = getEditorClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramEditor"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditorClassName(String newEditorClassName) {
		String oldEditorClassName = editorClassName;
		editorClassName = newEditorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME, oldEditorClassName, editorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1899 29
	public String getActionBarContributorClassNameGen() {
		return actionBarContributorClassName;
	}

	public String getActionBarContributorClassName() {
		String value = getActionBarContributorClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramActionBarContributor"; //$NON-NLS-1$
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setActionBarContributorClassName(String newActionBarContributorClassName) {
		String oldActionBarContributorClassName = actionBarContributorClassName;
		actionBarContributorClassName = newActionBarContributorClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME, oldActionBarContributorClassName, actionBarContributorClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a2507 2
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				return getEditorPackageName();
a2549 2
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				return getActionBarContributorClassName();
a2559 2
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				return getEditorClassName();
a2622 3
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				setEditorPackageName((String)newValue);
				return;
a2685 3
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				setActionBarContributorClassName((String)newValue);
				return;
a2700 3
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				setEditorClassName((String)newValue);
				return;
a2783 3
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				setEditorPackageName(EDITOR_PACKAGE_NAME_EDEFAULT);
				return;
a2846 3
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				setActionBarContributorClassName(ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT);
				return;
a2861 3
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				setEditorClassName(EDITOR_CLASS_NAME_EDEFAULT);
				return;
a2934 2
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				return EDITOR_PACKAGE_NAME_EDEFAULT == null ? editorPackageName != null : !EDITOR_PACKAGE_NAME_EDEFAULT.equals(editorPackageName);
a2976 2
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				return ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT == null ? actionBarContributorClassName != null : !ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT.equals(actionBarContributorClassName);
a2986 2
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				return EDITOR_CLASS_NAME_EDEFAULT == null ? editorClassName != null : !EDITOR_CLASS_NAME_EDEFAULT.equals(editorClassName);
a3039 1
				case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME: return GMFGenPackage.PACKAGE_NAMES__EDITOR_PACKAGE_NAME;
a3080 1
				case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__ACTION_BAR_CONTRIBUTOR_CLASS_NAME;
a3085 1
				case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__EDITOR_CLASS_NAME;
a3124 1
				case GMFGenPackage.PACKAGE_NAMES__EDITOR_PACKAGE_NAME: return GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME;
a3165 1
				case GMFGenPackage.EDITOR_CANDIES__ACTION_BAR_CONTRIBUTOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME;
a3170 1
				case GMFGenPackage.EDITOR_CANDIES__EDITOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME;
a3240 9
	public String getEditorQualifiedClassName() {
		return getEditorPackageName() + '.' + getEditorClassName();
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a3420 9
	public String getActionBarContributorQualifiedClassName() {
		return getEditorPackageName() + '.' + getActionBarContributorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a3502 2
		result.append(", editorPackageName: ");
		result.append(editorPackageName);
a3544 2
		result.append(", actionBarContributorClassName: ");
		result.append(actionBarContributorClassName);
a3554 2
		result.append(", editorClassName: ");
		result.append(editorClassName);
d3588 5
a3592 5
		String name = CodeGenUtil.validJavaIdentifier(getEditorGen().getDomainGenModel().getModelName());
		if (name.length() < 2) {
			return name.toUpperCase();
		}
		return Character.toUpperCase(name.charAt(0)) + name.substring(1);
@


1.49
log
@file extensions moved out from genDiagram. Distinct property captures extension of domain model file now
@
text
@a12 1
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
a1027 2
	static final String DIAGRAM_EDITOR_TOKEN = "gmf.editor";

d1196 1
a1196 1
			value = getPackageNamePrefix() + ".edit.commands";
d1225 1
a1225 1
			value = getPackageNamePrefix() + ".edit.parts";
d1254 1
a1254 1
			value = getPackageNamePrefix() + ".edit.policies";
d1565 1
a1565 1
			value = getPackageNamePrefix() + ".part";
d1594 1
a1594 1
			value = getPackageNamePrefix() + ".providers";
d1623 1
a1623 1
			value = getPackageNamePrefix() + ".view.factories";
a3797 13
	/**
	 * @@see org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl#getQualifiedPackageName()
	 */
	private String getPackageNamePrefix() {
		GenPackage primaryPackage = (GenPackage) getEditorGen().getDomainGenModel().getGenPackages().get(0);
		String prefix = CodeGenUtil.safeName(primaryPackage.getPackageName());
		String basePackage = primaryPackage.getBasePackage();
		if (basePackage != null && basePackage.length() > 0) {
			prefix = basePackage + '.' + prefix;
		}
		return prefix + '.' + DIAGRAM_EDITOR_TOKEN;
	}

@


1.48
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@a101 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isSameFileForDiagramAndModel <em>Same File For Diagram And Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDiagramFileExtension <em>Diagram File Extension</em>}</li>
a1028 40
	/**
	 * The default value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSameFileForDiagramAndModel()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSameFileForDiagramAndModel()
	 * @@generated
	 * @@ordered
	 */
	protected boolean sameFileForDiagramAndModel = SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DIAGRAM_FILE_EXTENSION_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected String diagramFileExtension = DIAGRAM_FILE_EXTENSION_EDEFAULT;

a1966 29
	public String getDiagramFileExtensionGen() {
		return diagramFileExtension;
	}

	public String getDiagramFileExtension() {
		String value = getDiagramFileExtensionGen();
		if (value == null || value.length() == 0) {
			return getEditorGen().getDomainGenModel().getModelName().toLowerCase() + "_diagram";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramFileExtension(String newDiagramFileExtension) {
		String oldDiagramFileExtension = diagramFileExtension;
		diagramFileExtension = newDiagramFileExtension;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION, oldDiagramFileExtension, diagramFileExtension));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1995 21
	public boolean isSameFileForDiagramAndModel() {
		return sameFileForDiagramAndModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSameFileForDiagramAndModel(boolean newSameFileForDiagramAndModel) {
		boolean oldSameFileForDiagramAndModel = sameFileForDiagramAndModel;
		sameFileForDiagramAndModel = newSameFileForDiagramAndModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL, oldSameFileForDiagramAndModel, sameFileForDiagramAndModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a2758 4
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return isSameFileForDiagramAndModel() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				return getDiagramFileExtension();
a2929 6
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				setDiagramFileExtension((String)newValue);
				return;
a3093 6
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				setDiagramFileExtension(DIAGRAM_FILE_EXTENSION_EDEFAULT);
				return;
a3208 4
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return sameFileForDiagramAndModel != SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				return DIAGRAM_FILE_EXTENSION_EDEFAULT == null ? diagramFileExtension != null : !DIAGRAM_FILE_EXTENSION_EDEFAULT.equals(diagramFileExtension);
a3792 4
		result.append(", sameFileForDiagramAndModel: ");
		result.append(sameFileForDiagramAndModel);
		result.append(", diagramFileExtension: ");
		result.append(diagramFileExtension);
@


1.47
log
@#125828 Generated code is bypassing parser service...
@
text
@a12 1
import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
a28 1
import org.eclipse.gmf.codegen.gmfgen.GenAuditContainer;
d33 1
a34 1
import org.eclipse.gmf.codegen.gmfgen.GenPlugin;
d41 1
d95 1
a95 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDomainMetaModel <em>Domain Meta Model</em>}</li>
a100 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getAudits <em>Audits</em>}</li>
a101 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPlugin <em>Plugin</em>}</li>
a971 10
	 * The cached value of the '{@@link #getDomainMetaModel() <em>Domain Meta Model</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainMetaModel()
	 * @@generated
	 * @@ordered
	 */
	protected GenPackage domainMetaModel = null;

	/**
a1021 10
	 * The cached value of the '{@@link #getAudits() <em>Audits</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAudits()
	 * @@generated
	 * @@ordered
	 */
	protected GenAuditContainer audits = null;

	/**
a1031 10
	 * The cached value of the '{@@link #getPlugin() <em>Plugin</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPlugin()
	 * @@generated
	 * @@ordered
	 */
	protected GenPlugin plugin = null;

	/**
a1104 38
	public GenPackage getDomainMetaModel() {
		if (domainMetaModel != null && domainMetaModel.eIsProxy()) {
			InternalEObject oldDomainMetaModel = (InternalEObject)domainMetaModel;
			domainMetaModel = (GenPackage)eResolveProxy(oldDomainMetaModel);
			if (domainMetaModel != oldDomainMetaModel) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL, oldDomainMetaModel, domainMetaModel));
			}
		}
		return domainMetaModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenPackage basicGetDomainMetaModel() {
		return domainMetaModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainMetaModel(GenPackage newDomainMetaModel) {
		GenPackage oldDomainMetaModel = domainMetaModel;
		domainMetaModel = newDomainMetaModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL, oldDomainMetaModel, domainMetaModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1190 43
	public GenAuditContainer getAudits() {
		return audits;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetAudits(GenAuditContainer newAudits, NotificationChain msgs) {
		GenAuditContainer oldAudits = audits;
		audits = newAudits;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__AUDITS, oldAudits, newAudits);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setAudits(GenAuditContainer newAudits) {
		if (newAudits != audits) {
			NotificationChain msgs = null;
			if (audits != null)
				msgs = ((InternalEObject)audits).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__AUDITS, null, msgs);
			if (newAudits != null)
				msgs = ((InternalEObject)newAudits).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__AUDITS, null, msgs);
			msgs = basicSetAudits(newAudits, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__AUDITS, newAudits, newAudits));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1233 43
	public GenPlugin getPlugin() {
		return plugin;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetPlugin(GenPlugin newPlugin, NotificationChain msgs) {
		GenPlugin oldPlugin = plugin;
		plugin = newPlugin;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN, oldPlugin, newPlugin);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPlugin(GenPlugin newPlugin) {
		if (newPlugin != plugin) {
			NotificationChain msgs = null;
			if (plugin != null)
				msgs = ((InternalEObject)plugin).eInverseRemove(this, GMFGenPackage.GEN_PLUGIN__DIAGRAM, GenPlugin.class, msgs);
			if (newPlugin != null)
				msgs = ((InternalEObject)newPlugin).eInverseAdd(this, GMFGenPackage.GEN_PLUGIN__DIAGRAM, GenPlugin.class, msgs);
			msgs = basicSetPlugin(newPlugin, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN, newPlugin, newPlugin));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1316 1
		String prefix;
d1318 1
a1318 1
			prefix = getDomainDiagramElement().getName();
d1320 1
a1320 3
			char[] v = getDomainMetaModel().getEcorePackage().getName().toCharArray();
			v[0] = Character.toUpperCase(v[0]);
			prefix = new String(v);
d1322 1
a1322 1
		return prefix;
d1593 10
d2016 1
a2016 1
			return getEMFGenModel().getModelName().toLowerCase() + "_diagram";
a2551 9
	public GenModel getEMFGenModel() {
		return getDomainMetaModel().getGenModel();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
d2683 4
a2698 4
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN:
				if (plugin != null)
					msgs = ((InternalEObject)plugin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__PLUGIN, null, msgs);
				return basicSetPlugin((GenPlugin)otherEnd, msgs);
d2710 2
a2719 2
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				return basicSetAudits(null, msgs);
a2721 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN:
				return basicSetPlugin(null, msgs);
d2731 13
d2836 2
a2837 3
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				if (resolve) return getDomainMetaModel();
				return basicGetDomainMetaModel();
a2848 2
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				return getAudits();
a2850 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN:
				return getPlugin();
a3003 3
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				setDomainMetaModel((GenPackage)newValue);
				return;
a3022 3
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				setAudits((GenAuditContainer)newValue);
				return;
a3025 3
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN:
				setPlugin((GenPlugin)newValue);
				return;
a3177 3
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				setDomainMetaModel((GenPackage)null);
				return;
a3192 3
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				setAudits((GenAuditContainer)null);
				return;
a3195 3
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN:
				setPlugin((GenPlugin)null);
				return;
d3303 2
a3304 2
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				return domainMetaModel != null;
a3314 2
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				return audits != null;
a3316 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN:
				return plugin != null;
d3921 3
a3923 2
		String prefix = CodeGenUtil.safeName(getDomainMetaModel().getPackageName());
		String basePackage = getDomainMetaModel().getBasePackage();
d3931 1
a3931 1
		String name = CodeGenUtil.validJavaIdentifier(getEMFGenModel().getModelName());
d3937 4
@


1.46
log
@#125729 Support labels based on multiple structural features
@
text
@d66 1
d395 20
d2586 29
d2924 2
d3065 3
d3250 3
d3414 2
d3527 1
d3615 1
d3871 9
d4020 2
@


1.45
log
@#124806
Loading Resource action added into the Diagram Editor popup menu.
@
text
@d66 1
d68 1
d394 20
d434 20
d2565 29
d2621 29
d2874 2
d2878 2
d3013 3
d3019 3
d3195 3
d3201 3
d3356 2
d3360 2
d3467 1
d3469 1
d3554 1
d3556 1
d3809 9
d3827 9
d3949 2
d3953 2
@


1.44
log
@GenDiagram "slicing" goes on and this time attributes related to plugin activator class were moved into separate entity
@
text
@d86 1
d792 20
d1551 29
d2633 9
d2814 2
d2969 3
d3145 3
d3280 2
d3382 1
d3467 1
d3847 2
@


1.43
log
@split that eyeball teaser, GenDiagram, into smaller parts, aiming to hack it further later on
@
text
@a9 2
import java.util.Collections;
import java.util.HashSet;
a10 2
import java.util.LinkedHashSet;
import java.util.Set;
d36 1
a36 1
import org.eclipse.gmf.codegen.gmfgen.GenNode;
a39 1
import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;
a43 3
import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

a82 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPluginClassName <em>Plugin Class Name</em>}</li>
d100 1
a100 3
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPluginID <em>Plugin ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPluginName <em>Plugin Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getProviderName <em>Provider Name</em>}</li>
a101 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isPrintingEnabled <em>Printing Enabled</em>}</li>
a730 20
	 * The default value of the '{@@link #getPluginClassName() <em>Plugin Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPluginClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PLUGIN_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPluginClassName() <em>Plugin Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPluginClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String pluginClassName = PLUGIN_CLASS_NAME_EDEFAULT;

	/**
d971 1
a971 11
	 * The default value of the '{@@link #getPluginID() <em>Plugin ID</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPluginID()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PLUGIN_ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPluginID() <em>Plugin ID</em>}' attribute.
d974 1
a974 1
	 * @@see #getPluginID()
d978 1
a978 41
	protected String pluginID = PLUGIN_ID_EDEFAULT;

	/**
	 * The default value of the '{@@link #getPluginName() <em>Plugin Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPluginName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PLUGIN_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPluginName() <em>Plugin Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPluginName()
	 * @@generated
	 * @@ordered
	 */
	protected String pluginName = PLUGIN_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getProviderName() <em>Provider Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getProviderName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PROVIDER_NAME_EDEFAULT = "Sample Plugin Provider, Inc";

	/**
	 * The cached value of the '{@@link #getProviderName() <em>Provider Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getProviderName()
	 * @@generated
	 * @@ordered
	 */
	protected String providerName = PROVIDER_NAME_EDEFAULT;
a1000 20
	 * The default value of the '{@@link #isPrintingEnabled() <em>Printing Enabled</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isPrintingEnabled()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean PRINTING_ENABLED_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isPrintingEnabled() <em>Printing Enabled</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isPrintingEnabled()
	 * @@generated
	 * @@ordered
	 */
	protected boolean printingEnabled = PRINTING_ENABLED_EDEFAULT;

	/**
d1020 1
a1020 1
	private static final String DIAGRAM_EDITOR_TOKEN = "gmf.editor";
d1264 43
a1413 100
	public String getPluginName() {
		return pluginName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPluginName(String newPluginName) {
		String oldPluginName = pluginName;
		pluginName = newPluginName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME, oldPluginName, pluginName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getProviderName() {
		return providerName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setProviderName(String newProviderName) {
		String oldProviderName = providerName;
		providerName = newProviderName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME, oldProviderName, providerName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPluginIDGen() {
		return pluginID;
	}

	public String getPluginID() {
		String value = getPluginIDGen();
		if (value == null || value.length() == 0) {
			return getEMFGenModel().getModelPluginID() + '.' + DIAGRAM_EDITOR_TOKEN;
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPluginID(String newPluginID) {
		String oldPluginID = pluginID;
		pluginID = newPluginID;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID, oldPluginID, pluginID));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getPluginClassNameGen() {
		return pluginClassName;
	}

	public String getPluginClassName() {
		String value = getPluginClassNameGen();
		if (isEmpty(value)) {
			value = getDomainPackageCapName() + "DiagramEditorPlugin";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPluginClassName(String newPluginClassName) {
		String oldPluginClassName = pluginClassName;
		pluginClassName = newPluginClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME, oldPluginClassName, pluginClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a2124 21
	public boolean isPrintingEnabled() {
		return printingEnabled;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPrintingEnabled(boolean newPrintingEnabled) {
		boolean oldPrintingEnabled = printingEnabled;
		printingEnabled = newPrintingEnabled;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED, oldPrintingEnabled, printingEnabled));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a2546 9
	public String getPluginQualifiedClassName() {
		return getEditorPackageName() + '.' + getPluginClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
d2645 4
d2672 2
a2748 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				return getPluginClassName();
d2785 2
a2786 6
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				return getPluginID();
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				return getPluginName();
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				return getProviderName();
a2788 2
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				return isPrintingEnabled() ? Boolean.TRUE : Boolean.FALSE;
a2898 3
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				setPluginClassName((String)newValue);
				return;
d2956 2
a2957 8
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				setPluginID((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				setPluginName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				setProviderName((String)newValue);
a2961 3
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				setPrintingEnabled(((Boolean)newValue).booleanValue());
				return;
a3071 3
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				setPluginClassName(PLUGIN_CLASS_NAME_EDEFAULT);
				return;
d3123 2
a3124 8
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				setPluginID(PLUGIN_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				setPluginName(PLUGIN_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				setProviderName(PROVIDER_NAME_EDEFAULT);
a3128 3
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				setPrintingEnabled(PRINTING_ENABLED_EDEFAULT);
				return;
a3206 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				return PLUGIN_CLASS_NAME_EDEFAULT == null ? pluginClassName != null : !PLUGIN_CLASS_NAME_EDEFAULT.equals(pluginClassName);
d3241 2
a3242 6
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				return PLUGIN_ID_EDEFAULT == null ? pluginID != null : !PLUGIN_ID_EDEFAULT.equals(pluginID);
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				return PLUGIN_NAME_EDEFAULT == null ? pluginName != null : !PLUGIN_NAME_EDEFAULT.equals(pluginName);
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				return PROVIDER_NAME_EDEFAULT == null ? providerName != null : !PROVIDER_NAME_EDEFAULT.equals(providerName);
a3244 2
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				return printingEnabled != PRINTING_ENABLED_EDEFAULT;
a3309 1
				case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME: return GMFGenPackage.EDITOR_CANDIES__PLUGIN_CLASS_NAME;
a3393 1
				case GMFGenPackage.EDITOR_CANDIES__PLUGIN_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME;
a3559 16
	public EList getRequiredPluginIDs() {
		Collection requiredPlugins = new LinkedHashSet();
		if (usesSVGShapes()) {
			requiredPlugins.add("org.eclipse.gmf.diagramrt.gefsvg");
		}
		
		requiredPlugins.addAll(getExpressionsRequiredPluginIDs());
		requiredPlugins.addAll(getValidationRequiredPluginIDs());
		return new BasicEList(requiredPlugins);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
a3698 11
	private boolean usesSVGShapes() {
/* couldn't tell now
		for (Iterator it = getNodes().iterator(); it.hasNext();) {
			if (((GenNode) it.next()).getViewmapURI() != null) {
				return true;
			}
		}
*/
		return false;
	}

a3769 2
		result.append(", pluginClassName: ");
		result.append(pluginClassName);
a3787 6
		result.append(", pluginID: ");
		result.append(pluginID);
		result.append(", pluginName: ");
		result.append(pluginName);
		result.append(", providerName: ");
		result.append(providerName);
a3789 2
		result.append(", printingEnabled: ");
		result.append(printingEnabled);
a3818 40

	private Set getExpressionsRequiredPluginIDs() {
		Set requiredIDs = new HashSet();
		for (Iterator it = getAllNodes().iterator(); it.hasNext();) {
			GenNode nextNode = (GenNode) it.next();
			TypeModelFacet modelFacet = nextNode.getModelFacet();
			if(modelFacet.getModelElementInitializer() != null) {
				requiredIDs.addAll(modelFacet.getModelElementInitializer().getRequiredPluginIDs());
			}
			if(modelFacet.getModelElementSelector() != null) {
				requiredIDs.addAll(modelFacet.getModelElementSelector().getRequiredPluginIDs());				
			}
		}
		
		for (Iterator it = getLinks().iterator(); it.hasNext();) {
			GenLink nextLink = (GenLink) it.next();
			LinkModelFacet modelFacet = nextLink.getModelFacet();
			if(modelFacet instanceof TypeLinkModelFacet) {
				TypeLinkModelFacet  typeModelFacet = (TypeLinkModelFacet)modelFacet;
				if(typeModelFacet.getModelElementInitializer() != null) {
					requiredIDs.addAll(typeModelFacet.getModelElementInitializer().getRequiredPluginIDs());
				}
				if(typeModelFacet.getModelElementSelector() != null) {
					requiredIDs.addAll(typeModelFacet.getModelElementSelector().getRequiredPluginIDs());
				}
			}
		}		
		if(hasLinkCreationConstraints()) {
			requiredIDs.add("org.eclipse.emf.ocl"); //$NON-NLS-1$			
			requiredIDs.add("org.eclipse.emf.query.ocl"); //$NON-NLS-1$			
		}
		return requiredIDs;
	}
	
	private Set getValidationRequiredPluginIDs() {
		if(isValidationEnabled() || (getAudits() != null && !getAudits().getAllAuditRules().isEmpty())) {
			return Collections.singleton("org.eclipse.emf.validation"); //$NON-NLS-1$ 
		}
		return Collections.EMPTY_SET;
	}
@


1.42
log
@[rdvorak] #114189 Provide support for batch validation
@
text
@d30 3
d42 2
d46 3
a59 8
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDomainMetaModel <em>Domain Meta Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDomainDiagramElement <em>Domain Diagram Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getChildNodes <em>Child Nodes</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getTopLevelNodes <em>Top Level Nodes</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getLinks <em>Links</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCompartments <em>Compartments</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getAudits <em>Audits</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPalette <em>Palette</em>}</li>
a65 13
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPluginID <em>Plugin ID</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPluginName <em>Plugin Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getProviderName <em>Provider Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isSameFileForDiagramAndModel <em>Same File For Diagram And Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isPrintingEnabled <em>Printing Enabled</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDiagramFileExtension <em>Diagram File Extension</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getReorientConnectionViewCommandClassName <em>Reorient Connection View Command Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditPartFactoryClassName <em>Edit Part Factory Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getBaseExternalNodeLabelEditPartClassName <em>Base External Node Label Edit Part Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getBaseItemSemanticEditPolicyClassName <em>Base Item Semantic Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getBaseGraphicalNodeEditPolicyClassName <em>Base Graphical Node Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getReferenceConnectionEditPolicyClassName <em>Reference Connection Edit Policy Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCanonicalEditPolicyClassName <em>Canonical Edit Policy Class Name</em>}</li>
d75 7
d94 1
a95 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getElementChooserClassName <em>Element Chooser Class Name</em>}</li>
d101 14
d123 1
a123 1
	 * The cached value of the '{@@link #getDomainMetaModel() <em>Domain Meta Model</em>}' reference.
d126 1
a126 1
	 * @@see #getDomainMetaModel()
d130 1
a130 1
	protected GenPackage domainMetaModel = null;
d133 1
a133 1
	 * The cached value of the '{@@link #getDomainDiagramElement() <em>Domain Diagram Element</em>}' reference.
d136 1
a136 1
	 * @@see #getDomainDiagramElement()
d140 1
a140 1
	protected GenClass domainDiagramElement = null;
d143 1
a143 1
	 * The cached value of the '{@@link #getChildNodes() <em>Child Nodes</em>}' containment reference list.
d146 1
a146 1
	 * @@see #getChildNodes()
d150 1
a150 1
	protected EList childNodes = null;
d153 1
a153 1
	 * The cached value of the '{@@link #getTopLevelNodes() <em>Top Level Nodes</em>}' containment reference list.
d156 1
a156 1
	 * @@see #getTopLevelNodes()
d160 1
a160 1
	protected EList topLevelNodes = null;
d163 1
a163 1
	 * The cached value of the '{@@link #getLinks() <em>Links</em>}' containment reference list.
d166 1
a166 1
	 * @@see #getLinks()
d170 1
a170 1
	protected EList links = null;
d173 1
a173 1
	 * The cached value of the '{@@link #getCompartments() <em>Compartments</em>}' containment reference list.
d176 1
a176 1
	 * @@see #getCompartments()
d180 1
a180 1
	protected EList compartments = null;
d183 1
a183 1
	 * The cached value of the '{@@link #getAudits() <em>Audits</em>}' containment reference.
d186 1
a186 1
	 * @@see #getAudits()
d190 1
a190 1
	protected GenAuditContainer audits = null;
d193 1
a193 1
	 * The cached value of the '{@@link #getPalette() <em>Palette</em>}' containment reference.
d196 1
a196 1
	 * @@see #getPalette()
d200 1
a200 1
	protected Palette palette = null;
d203 1
a203 1
	 * The default value of the '{@@link #getEditCommandsPackageName() <em>Edit Commands Package Name</em>}' attribute.
d206 1
a206 1
	 * @@see #getEditCommandsPackageName()
d210 1
a210 1
	protected static final String EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT = null;
d213 1
a213 1
	 * The cached value of the '{@@link #getEditCommandsPackageName() <em>Edit Commands Package Name</em>}' attribute.
d216 1
a216 1
	 * @@see #getEditCommandsPackageName()
d220 1
a220 1
	protected String editCommandsPackageName = EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT;
d223 1
a223 1
	 * The default value of the '{@@link #getEditPartsPackageName() <em>Edit Parts Package Name</em>}' attribute.
d226 1
a226 1
	 * @@see #getEditPartsPackageName()
d230 1
a230 1
	protected static final String EDIT_PARTS_PACKAGE_NAME_EDEFAULT = null;
d233 1
a233 1
	 * The cached value of the '{@@link #getEditPartsPackageName() <em>Edit Parts Package Name</em>}' attribute.
d236 1
a236 1
	 * @@see #getEditPartsPackageName()
d240 1
a240 1
	protected String editPartsPackageName = EDIT_PARTS_PACKAGE_NAME_EDEFAULT;
d243 1
a243 1
	 * The default value of the '{@@link #getEditPoliciesPackageName() <em>Edit Policies Package Name</em>}' attribute.
d246 1
a246 1
	 * @@see #getEditPoliciesPackageName()
d250 1
a250 1
	protected static final String EDIT_POLICIES_PACKAGE_NAME_EDEFAULT = null;
d253 1
a253 1
	 * The cached value of the '{@@link #getEditPoliciesPackageName() <em>Edit Policies Package Name</em>}' attribute.
d256 1
a256 1
	 * @@see #getEditPoliciesPackageName()
d260 1
a260 1
	protected String editPoliciesPackageName = EDIT_POLICIES_PACKAGE_NAME_EDEFAULT;
d263 1
a263 1
	 * The default value of the '{@@link #getEditorPackageName() <em>Editor Package Name</em>}' attribute.
d266 1
a266 1
	 * @@see #getEditorPackageName()
d270 1
a270 1
	protected static final String EDITOR_PACKAGE_NAME_EDEFAULT = null;
d273 1
a273 1
	 * The cached value of the '{@@link #getEditorPackageName() <em>Editor Package Name</em>}' attribute.
d276 1
a276 1
	 * @@see #getEditorPackageName()
d280 1
a280 1
	protected String editorPackageName = EDITOR_PACKAGE_NAME_EDEFAULT;
d283 1
a283 1
	 * The default value of the '{@@link #getProvidersPackageName() <em>Providers Package Name</em>}' attribute.
d286 1
a286 1
	 * @@see #getProvidersPackageName()
d290 1
a290 1
	protected static final String PROVIDERS_PACKAGE_NAME_EDEFAULT = null;
d293 1
a293 1
	 * The cached value of the '{@@link #getProvidersPackageName() <em>Providers Package Name</em>}' attribute.
d296 1
a296 1
	 * @@see #getProvidersPackageName()
d300 1
a300 1
	protected String providersPackageName = PROVIDERS_PACKAGE_NAME_EDEFAULT;
d303 1
a303 1
	 * The default value of the '{@@link #getNotationViewFactoriesPackageName() <em>Notation View Factories Package Name</em>}' attribute.
d306 1
a306 1
	 * @@see #getNotationViewFactoriesPackageName()
d310 1
a310 1
	protected static final String NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT = null;
d313 1
a313 1
	 * The cached value of the '{@@link #getNotationViewFactoriesPackageName() <em>Notation View Factories Package Name</em>}' attribute.
d316 1
a316 1
	 * @@see #getNotationViewFactoriesPackageName()
d320 1
a320 1
	protected String notationViewFactoriesPackageName = NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT;
d323 1
a323 1
	 * The default value of the '{@@link #getPluginID() <em>Plugin ID</em>}' attribute.
d326 1
a326 1
	 * @@see #getPluginID()
d330 1
a330 1
	protected static final String PLUGIN_ID_EDEFAULT = null;
d333 1
a333 1
	 * The cached value of the '{@@link #getPluginID() <em>Plugin ID</em>}' attribute.
d336 1
a336 1
	 * @@see #getPluginID()
d340 1
a340 1
	protected String pluginID = PLUGIN_ID_EDEFAULT;
d343 1
a343 1
	 * The default value of the '{@@link #getPluginName() <em>Plugin Name</em>}' attribute.
d346 1
a346 1
	 * @@see #getPluginName()
d350 1
a350 1
	protected static final String PLUGIN_NAME_EDEFAULT = null;
d353 1
a353 1
	 * The cached value of the '{@@link #getPluginName() <em>Plugin Name</em>}' attribute.
d356 1
a356 1
	 * @@see #getPluginName()
d360 1
a360 1
	protected String pluginName = PLUGIN_NAME_EDEFAULT;
d363 1
a363 1
	 * The default value of the '{@@link #getProviderName() <em>Provider Name</em>}' attribute.
d366 1
a366 1
	 * @@see #getProviderName()
d370 1
a370 1
	protected static final String PROVIDER_NAME_EDEFAULT = "Sample Plugin Provider, Inc";
d373 1
a373 1
	 * The cached value of the '{@@link #getProviderName() <em>Provider Name</em>}' attribute.
d376 1
a376 1
	 * @@see #getProviderName()
d380 1
a380 1
	protected String providerName = PROVIDER_NAME_EDEFAULT;
d383 1
a383 1
	 * The default value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
d386 1
a386 1
	 * @@see #isSameFileForDiagramAndModel()
d390 1
a390 1
	protected static final boolean SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT = false;
d393 1
a393 1
	 * The cached value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
d396 1
a396 1
	 * @@see #isSameFileForDiagramAndModel()
d400 1
a400 1
	protected boolean sameFileForDiagramAndModel = SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
d403 1
a403 1
	 * The default value of the '{@@link #isPrintingEnabled() <em>Printing Enabled</em>}' attribute.
d406 1
a406 1
	 * @@see #isPrintingEnabled()
d410 1
a410 1
	protected static final boolean PRINTING_ENABLED_EDEFAULT = false;
d413 1
a413 1
	 * The cached value of the '{@@link #isPrintingEnabled() <em>Printing Enabled</em>}' attribute.
d416 1
a416 1
	 * @@see #isPrintingEnabled()
d420 1
a420 21
	protected boolean printingEnabled = PRINTING_ENABLED_EDEFAULT;

	/**
	 * The default value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected static final String DIAGRAM_FILE_EXTENSION_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramFileExtension()
	 * @@generated
	 * @@ordered
	 */
	protected String diagramFileExtension = DIAGRAM_FILE_EXTENSION_EDEFAULT;
d563 1
a563 1
	 * The default value of the '{@@link #getElementTypesClassName() <em>Element Types Class Name</em>}' attribute.
d566 1
a566 1
	 * @@see #getElementTypesClassName()
d570 1
a570 1
	protected static final String ELEMENT_TYPES_CLASS_NAME_EDEFAULT = null;
d573 1
a573 1
	 * The cached value of the '{@@link #getElementTypesClassName() <em>Element Types Class Name</em>}' attribute.
d576 1
a576 1
	 * @@see #getElementTypesClassName()
d580 1
a580 181
	protected String elementTypesClassName = ELEMENT_TYPES_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getSemanticHintsClassName() <em>Semantic Hints Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSemanticHintsClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SEMANTIC_HINTS_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getSemanticHintsClassName() <em>Semantic Hints Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSemanticHintsClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String semanticHintsClassName = SEMANTIC_HINTS_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getNotationViewProviderClassName() <em>Notation View Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getNotationViewProviderClassName() <em>Notation View Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNotationViewProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String notationViewProviderClassName = NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getEditPartProviderClassName() <em>Edit Part Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditPartProviderClassName() <em>Edit Part Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditPartProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String editPartProviderClassName = EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMetamodelSupportProviderClassName() <em>Metamodel Support Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetamodelSupportProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getMetamodelSupportProviderClassName() <em>Metamodel Support Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetamodelSupportProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String metamodelSupportProviderClassName = METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getModelingAssistantProviderClassName() <em>Modeling Assistant Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelingAssistantProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getModelingAssistantProviderClassName() <em>Modeling Assistant Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelingAssistantProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String modelingAssistantProviderClassName = MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getPropertyProviderClassName() <em>Property Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPropertyProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getPropertyProviderClassName() <em>Property Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPropertyProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String propertyProviderClassName = PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getIconProviderClassName() <em>Icon Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ICON_PROVIDER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getIconProviderClassName() <em>Icon Provider Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getIconProviderClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String iconProviderClassName = ICON_PROVIDER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getStructuralFeatureParserClassName() <em>Structural Feature Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getStructuralFeatureParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getStructuralFeatureParserClassName() <em>Structural Feature Parser Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getStructuralFeatureParserClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String structuralFeatureParserClassName = STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionBarContributorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getActionBarContributorClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String actionBarContributorClassName = ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT;
d803 1
a803 1
	 * The default value of the '{@@link #getCreateShortcutActionClassName() <em>Create Shortcut Action Class Name</em>}' attribute.
d806 1
a806 1
	 * @@see #getCreateShortcutActionClassName()
d810 1
a810 1
	protected static final String CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT = null;
d813 1
a813 1
	 * The cached value of the '{@@link #getCreateShortcutActionClassName() <em>Create Shortcut Action Class Name</em>}' attribute.
d816 1
a816 1
	 * @@see #getCreateShortcutActionClassName()
d820 1
a820 1
	protected String createShortcutActionClassName = CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT;
d823 1
a823 1
	 * The default value of the '{@@link #getElementChooserClassName() <em>Element Chooser Class Name</em>}' attribute.
d826 1
a826 1
	 * @@see #getElementChooserClassName()
d830 1
a830 1
	protected static final String ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT = null;
d833 1
a833 1
	 * The cached value of the '{@@link #getElementChooserClassName() <em>Element Chooser Class Name</em>}' attribute.
d836 1
a836 1
	 * @@see #getElementChooserClassName()
d840 1
a840 1
	protected String elementChooserClassName = ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT;
a921 2
	private static final String DIAGRAM_EDITOR_TOKEN = "gmf.editor";

d923 1
d926 1
d928 1
d930 1
a930 3
	protected GenDiagramImpl() {
		super();
	}
d933 1
d936 1
d938 1
d940 1
a940 3
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenDiagram();
	}
d943 1
d946 3
a948 1
	 * @@generated NOT
d950 1
a950 3
	public EList getContainedNodes() {
		return getTopLevelNodes();
	}
d953 1
d956 1
d958 1
d960 1
a960 11
	public GenPackage getDomainMetaModel() {
		if (domainMetaModel != null && domainMetaModel.eIsProxy()) {
			InternalEObject oldDomainMetaModel = (InternalEObject)domainMetaModel;
			domainMetaModel = (GenPackage)eResolveProxy(oldDomainMetaModel);
			if (domainMetaModel != oldDomainMetaModel) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL, oldDomainMetaModel, domainMetaModel));
			}
		}
		return domainMetaModel;
	}
d963 1
d966 1
d968 1
d970 206
a1175 3
	public GenPackage basicGetDomainMetaModel() {
		return domainMetaModel;
	}
a2869 18
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				if (resolve) return getDomainMetaModel();
				return basicGetDomainMetaModel();
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				if (resolve) return getDomainDiagramElement();
				return basicGetDomainDiagramElement();
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				return getChildNodes();
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				return getTopLevelNodes();
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				return getLinks();
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				return getCompartments();
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				return getAudits();
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				return getPalette();
a2881 26
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				return getPluginID();
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				return getPluginName();
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				return getProviderName();
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return isSameFileForDiagramAndModel() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				return isPrintingEnabled() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				return getDiagramFileExtension();
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				return getReorientConnectionViewCommandClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				return getEditPartFactoryClassName();
			case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME:
				return getBaseExternalNodeLabelEditPartClassName();
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return getBaseItemSemanticEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				return getBaseGraphicalNodeEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				return getReferenceConnectionEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				return getCanonicalEditPolicyClassName();
d2900 14
d2938 2
a2941 2
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				return getElementChooserClassName();
d2952 30
a2996 28
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				setDomainMetaModel((GenPackage)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				setDomainDiagramElement((GenClass)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				getChildNodes().clear();
				getChildNodes().addAll((Collection)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				getTopLevelNodes().clear();
				getTopLevelNodes().addAll((Collection)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				getLinks().clear();
				getLinks().addAll((Collection)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				getCompartments().clear();
				getCompartments().addAll((Collection)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				setAudits((GenAuditContainer)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				setPalette((Palette)newValue);
				return;
d3015 11
a3025 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				setPluginID((String)newValue);
d3027 2
a3028 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				setPluginName((String)newValue);
d3030 2
a3031 2
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				setProviderName((String)newValue);
d3033 2
a3034 2
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(((Boolean)newValue).booleanValue());
d3036 2
a3037 2
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				setPrintingEnabled(((Boolean)newValue).booleanValue());
d3039 2
a3040 2
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				setDiagramFileExtension((String)newValue);
a3062 27
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME:
				setElementTypesClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME:
				setSemanticHintsClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME:
				setNotationViewProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME:
				setEditPartProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME:
				setMetamodelSupportProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME:
				setModelingAssistantProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME:
				setPropertyProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME:
				setIconProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME:
				setStructuralFeatureParserClassName((String)newValue);
				return;
d3099 3
a3104 3
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				setElementChooserClassName((String)newValue);
				return;
a3121 14
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
				getContainedNodes().clear();
				return;
d3123 1
a3123 1
				setDomainMetaModel((GenPackage)null);
d3126 1
a3126 1
				setDomainDiagramElement((GenClass)null);
d3130 1
d3134 1
d3138 1
d3142 1
d3145 1
a3145 1
				setAudits((GenAuditContainer)null);
d3148 1
a3148 19
				setPalette((Palette)null);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME:
				setEditCommandsPackageName(EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME:
				setEditPartsPackageName(EDIT_PARTS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME:
				setEditPoliciesPackageName(EDIT_POLICIES_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				setEditorPackageName(EDITOR_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				setProvidersPackageName(PROVIDERS_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME:
				setNotationViewFactoriesPackageName(NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT);
d3151 1
a3151 1
				setPluginID(PLUGIN_ID_EDEFAULT);
d3154 1
a3154 1
				setPluginName(PLUGIN_NAME_EDEFAULT);
d3157 1
a3157 1
				setProviderName(PROVIDER_NAME_EDEFAULT);
d3160 1
a3160 1
				setSameFileForDiagramAndModel(SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT);
d3163 1
a3163 1
				setPrintingEnabled(PRINTING_ENABLED_EDEFAULT);
d3166 1
a3166 1
				setDiagramFileExtension(DIAGRAM_FILE_EXTENSION_EDEFAULT);
d3168 13
a3180 2
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				setReorientConnectionViewCommandClassName(REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT);
d3182 2
a3183 2
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				setEditPartFactoryClassName(EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT);
d3185 2
a3186 2
			case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME:
				setBaseExternalNodeLabelEditPartClassName(BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT);
d3188 2
a3189 2
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setBaseItemSemanticEditPolicyClassName(BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
d3191 2
a3192 2
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				setBaseGraphicalNodeEditPolicyClassName(BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT);
d3194 2
a3195 2
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				setReferenceConnectionEditPolicyClassName(REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT);
d3197 2
a3198 2
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				setCanonicalEditPolicyClassName(CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT);
d3227 21
d3284 3
a3289 3
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				setElementChooserClassName(ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT);
				return;
d3305 42
a3359 16
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				return domainMetaModel != null;
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				return domainDiagramElement != null;
			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
				return childNodes != null && !childNodes.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
				return topLevelNodes != null && !topLevelNodes.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				return links != null && !links.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
				return compartments != null && !compartments.isEmpty();
			case GMFGenPackage.GEN_DIAGRAM__AUDITS:
				return audits != null;
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				return palette != null;
a3371 26
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				return PLUGIN_ID_EDEFAULT == null ? pluginID != null : !PLUGIN_ID_EDEFAULT.equals(pluginID);
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				return PLUGIN_NAME_EDEFAULT == null ? pluginName != null : !PLUGIN_NAME_EDEFAULT.equals(pluginName);
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				return PROVIDER_NAME_EDEFAULT == null ? providerName != null : !PROVIDER_NAME_EDEFAULT.equals(providerName);
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return sameFileForDiagramAndModel != SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				return printingEnabled != PRINTING_ENABLED_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				return DIAGRAM_FILE_EXTENSION_EDEFAULT == null ? diagramFileExtension != null : !DIAGRAM_FILE_EXTENSION_EDEFAULT.equals(diagramFileExtension);
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				return REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT == null ? reorientConnectionViewCommandClassName != null : !REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT.equals(reorientConnectionViewCommandClassName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				return EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT == null ? editPartFactoryClassName != null : !EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT.equals(editPartFactoryClassName);
			case GMFGenPackage.GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME:
				return BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT == null ? baseExternalNodeLabelEditPartClassName != null : !BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT.equals(baseExternalNodeLabelEditPartClassName);
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? baseItemSemanticEditPolicyClassName != null : !BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(baseItemSemanticEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				return BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? baseGraphicalNodeEditPolicyClassName != null : !BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(baseGraphicalNodeEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				return REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? referenceConnectionEditPolicyClassName != null : !REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(referenceConnectionEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				return CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? canonicalEditPolicyClassName != null : !CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(canonicalEditPolicyClassName);
d3390 14
d3428 2
a3431 2
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME:
				return ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT == null ? elementChooserClassName != null : !ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT.equals(elementChooserClassName);
d3442 28
d3477 170
a3971 26
		result.append(", pluginID: ");
		result.append(pluginID);
		result.append(", pluginName: ");
		result.append(pluginName);
		result.append(", providerName: ");
		result.append(providerName);
		result.append(", sameFileForDiagramAndModel: ");
		result.append(sameFileForDiagramAndModel);
		result.append(", printingEnabled: ");
		result.append(printingEnabled);
		result.append(", diagramFileExtension: ");
		result.append(diagramFileExtension);
		result.append(", reorientConnectionViewCommandClassName: ");
		result.append(reorientConnectionViewCommandClassName);
		result.append(", editPartFactoryClassName: ");
		result.append(editPartFactoryClassName);
		result.append(", baseExternalNodeLabelEditPartClassName: ");
		result.append(baseExternalNodeLabelEditPartClassName);
		result.append(", baseItemSemanticEditPolicyClassName: ");
		result.append(baseItemSemanticEditPolicyClassName);
		result.append(", baseGraphicalNodeEditPolicyClassName: ");
		result.append(baseGraphicalNodeEditPolicyClassName);
		result.append(", referenceConnectionEditPolicyClassName: ");
		result.append(referenceConnectionEditPolicyClassName);
		result.append(", canonicalEditPolicyClassName: ");
		result.append(canonicalEditPolicyClassName);
d3990 14
d4028 2
a4031 2
		result.append(", elementChooserClassName: ");
		result.append(elementChooserClassName);
d4042 12
@


1.41
log
@rename GenContainerEditPart -> GenContainerBase
@
text
@d104 3
d1054 60
d1681 65
d1770 21
d2764 30
d2968 6
d3151 9
d3330 9
d3456 6
d3614 1
a3614 1
		requiredPlugins.addAll(getAuditRequiredPluginIDs());
d3870 6
d3937 2
a3938 2
	private Set getAuditRequiredPluginIDs() {
		if(getAudits() != null && getAudits().getAllAuditRules().size() > 0) {
@


1.40
log
@#124413
Cleaning up the gmfgen model
@
text
@d2558 1
a2558 1
	public EList getAllContainerEditParts() {
@


1.39
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d2534 13
a2546 1
	public EList getAllContainers() {
d2558 1
a2558 1
	public EList getAllNodes() {
d2560 2
a2561 2
		result.addAll(getTopLevelNodes());
		result.addAll(getChildNodes());
@


1.38
log
@#114178
Create shortcut functionality added
@
text
@d34 1
d38 1
d51 1
d54 2
a55 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNodes <em>Nodes</em>}</li>
d57 1
d132 1
a132 1
	 * The cached value of the '{@@link #getNodes() <em>Nodes</em>}' containment reference list.
d135 1
a135 1
	 * @@see #getNodes()
d139 11
a149 1
	protected EList nodes = null;
d162 10
d1074 9
d1161 3
a1163 3
	public EList getNodes() {
		if (nodes == null) {
			nodes = new EObjectContainmentWithInverseEList(GenNode.class, this, GMFGenPackage.GEN_DIAGRAM__NODES, GMFGenPackage.GEN_NODE__DIAGRAM);
d1165 13
a1177 1
		return nodes;
d1197 12
d2534 24
d2623 4
a2626 2
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				return ((InternalEList)getNodes()).basicAdd(otherEnd, msgs);
d2629 2
d2646 4
a2649 2
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				return ((InternalEList)getNodes()).basicRemove(otherEnd, msgs);
d2652 2
d2669 2
d2677 4
a2680 2
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				return getNodes();
d2683 2
d2788 4
d2798 7
a2804 3
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				getNodes().clear();
				getNodes().addAll((Collection)newValue);
d2810 4
d2965 3
d2974 5
a2978 2
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				getNodes().clear();
d2983 3
d3135 2
d3141 4
a3144 2
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				return nodes != null && !nodes.isEmpty();
d3147 2
d3679 1
a3679 1
		for (Iterator it = getNodes().iterator(); it.hasNext();) {
a3687 11
			
			for (Iterator childIt = nextNode.getChildNodes().iterator(); childIt.hasNext();) {
				GenChildNode nextChild = (GenChildNode) childIt.next();
				TypeModelFacet childModelFacet = nextChild.getModelFacet();
				if(childModelFacet.getModelElementInitializer() != null) {
					requiredIDs.addAll(childModelFacet.getModelElementInitializer().getRequiredPluginIDs());
				}
				if(childModelFacet.getModelElementSelector() != null) {
					requiredIDs.addAll(childModelFacet.getModelElementSelector().getRequiredPluginIDs());				
				}				
			}
@


1.37
log
@#122054 support external node labels
@
text
@d27 1
d97 2
d1006 20
d1560 24
d2519 18
d2677 4
d2838 8
d3001 6
d3114 4
d3522 4
@


1.36
log
@As a part of implementstion
#114178,114179
"Shortcutting" diagram elements.
@
text
@d68 1
d444 20
d1711 29
d2556 2
d2685 3
d2840 3
d2975 2
d3104 9
d3379 2
@


1.35
log
@#123240, part 1 - get rid of StringArray datatype
@
text
@d93 2
d942 40
d1458 58
d2404 18
d2556 4
d2708 6
d2860 6
d2967 4
d3360 4
@


1.34
log
@[rdvorak] #123232 audits (ocl constraints) definition in genmodel
@
text
@a8 1
import java.util.Arrays;
d22 1
d2969 1
a2969 1
	public String[] getRequiredPluginIDs() {
d2977 1
a2977 1
		return (String[]) requiredPlugins.toArray(new String[requiredPlugins.size()]);
d3256 1
a3256 1
				requiredIDs.addAll(Arrays.asList(modelFacet.getModelElementInitializer().getRequiredPluginIDs()));
d3259 1
a3259 1
				requiredIDs.addAll(Arrays.asList(modelFacet.getModelElementSelector().getRequiredPluginIDs()));				
d3266 1
a3266 1
					requiredIDs.addAll(Arrays.asList(childModelFacet.getModelElementInitializer().getRequiredPluginIDs()));
d3269 1
a3269 1
					requiredIDs.addAll(Arrays.asList(childModelFacet.getModelElementSelector().getRequiredPluginIDs()));				
d3280 1
a3280 1
					requiredIDs.addAll(Arrays.asList(typeModelFacet.getModelElementInitializer().getRequiredPluginIDs()));
d3283 1
a3283 1
					requiredIDs.addAll(Arrays.asList(typeModelFacet.getModelElementSelector().getRequiredPluginIDs()));
@


1.33
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@a8 1
import java.util.ArrayList;
d11 1
d14 1
d30 1
d52 1
d141 10
d1065 43
d2331 2
d2356 2
d2463 3
d2609 3
d2751 2
d2970 1
a2970 1
		ArrayList requiredPlugins = new ArrayList();
d2976 1
d3293 7
@


1.32
log
@minor cleanup. no need to specify transient !resolve for containment opposites
@
text
@a23 1
import org.eclipse.emf.ecore.EStructuralFeature;
a38 2
import org.eclipse.gmf.codegen.gmfgen.Viewmap;

d954 2
a955 2
			GenPackage oldDomainMetaModel = domainMetaModel;
			domainMetaModel = (GenPackage)eResolveProxy((InternalEObject)domainMetaModel);
d992 2
a993 2
			GenClass oldDomainDiagramElement = domainDiagramElement;
			domainDiagramElement = (GenClass)eResolveProxy((InternalEObject)domainDiagramElement);
d2248 1
a2248 1
	 * @@generated NOT
d2250 10
a2259 6
	public boolean hasLinkCreationConstraints() {
		for (Iterator it = getLinks().iterator(); it.hasNext();) {
			GenLink nextLink = (GenLink) it.next();
			if(nextLink.getCreationConstraints() != null) {
				return true;
			}
d2261 1
a2261 1
		return false;
d2267 1
a2267 1
	 * @@generated NOT
d2269 8
a2276 13
	public String getLinkCreationConstraintsClassName() {
		return "LinkConstraints"; //$NON-NLS-1$		
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getLinkCreationConstraintsQualifiedClassName() {
		String owningClass = getBaseItemSemanticEditPolicyQualifiedClassName();
		if(owningClass != null) {
			return owningClass + "." + getLinkCreationConstraintsClassName(); //$NON-NLS-1$
d2278 1
a2278 1
		return getLinkCreationConstraintsClassName();
d2284 1
a2284 1
	 * @@generated NOT
d2286 92
a2377 94
	public String getEditorQualifiedClassName() {
		return getEditorPackageName() + '.' + getEditorClassName();
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getReorientConnectionViewCommandQualifiedClassName() {
		return getEditCommandsPackageName() + '.' + getReorientConnectionViewCommandClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getEditPartFactoryQualifiedClassName() {
		return getEditPartsPackageName() + '.' + getEditPartFactoryClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getBaseItemSemanticEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getBaseItemSemanticEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getBaseGraphicalNodeEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getBaseGraphicalNodeEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getReferenceConnectionEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getReferenceConnectionEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCanonicalEditPolicyQualifiedClassName() {
		return getEditPoliciesPackageName() + '.' + getCanonicalEditPolicyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getElementTypesQualifiedClassName() {
		return getProvidersPackageName() + '.' + getElementTypesClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getSemanticHintsQualifiedClassName() {
		return getProvidersPackageName() + '.' + getSemanticHintsClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getNotationViewProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getNotationViewProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String[] getRequiredPluginIDs() {
		ArrayList requiredPlugins = new ArrayList();
		if (usesSVGShapes()) {
			requiredPlugins.add("org.eclipse.gmf.diagramrt.gefsvg");
d2379 1
a2379 3
		
		requiredPlugins.addAll(getExpressionsRequiredPluginIDs());
		return (String[]) requiredPlugins.toArray(new String[requiredPlugins.size()]);
d2385 1
a2385 1
	 * @@generated NOT
d2387 37
a2423 242
	public String getInitDiagramFileActionQualifiedClassName() {
		return getEditorPackageName() + '.' + getInitDiagramFileActionClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getEditPartProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getEditPartProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMetamodelSupportProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getMetamodelSupportProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getModelingAssistantProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getModelingAssistantProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getPropertyProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getPropertyProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getIconProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getIconProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getStructuralFeatureParserQualifiedClassName() {
		return getProvidersPackageName() + '.' + getStructuralFeatureParserClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getActionBarContributorQualifiedClassName() {
		return getEditorPackageName() + '.' + getActionBarContributorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreationWizardQualifiedClassName() {
		return getEditorPackageName() + '.' + getCreationWizardClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreationWizardPageQualifiedClassName() {
		return getEditorPackageName() + '.' + getCreationWizardPageClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDiagramEditorUtilQualifiedClassName() {
		return getEditorPackageName() + '.' + getDiagramEditorUtilClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDiagramFileCreatorQualifiedClassName() {
		return getEditorPackageName() + '.' + getDiagramFileCreatorClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getDocumentProviderQualifiedClassName() {
		return getEditorPackageName() + '.' + getDocumentProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getMatchingStrategyQualifiedClassName() {
		return getEditorPackageName() + '.' + getMatchingStrategyClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getElementInitializersClassName() {
		return "ElementInitializers"; //$NON-NLS-1$
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getElementInitializersPackageName() {
		return getProvidersPackageName();
	}

	private boolean usesSVGShapes() {
/* couldn't tell now
		for (Iterator it = getNodes().iterator(); it.hasNext();) {
			if (((GenNode) it.next()).getViewmapURI() != null) {
				return true;
			}
		}
*/
		return false;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_DIAGRAM__NODES:
					return ((InternalEList)getNodes()).basicAdd(otherEnd, msgs);
				case GMFGenPackage.GEN_DIAGRAM__LINKS:
					return ((InternalEList)getLinks()).basicAdd(otherEnd, msgs);
				case GMFGenPackage.GEN_DIAGRAM__PALETTE:
					if (palette != null)
						msgs = ((InternalEObject)palette).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_DIAGRAM__PALETTE, null, msgs);
					return basicSetPalette((Palette)otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
		}
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_DIAGRAM__VIEWMAP:
					return basicSetViewmap(null, msgs);
				case GMFGenPackage.GEN_DIAGRAM__NODES:
					return ((InternalEList)getNodes()).basicRemove(otherEnd, msgs);
				case GMFGenPackage.GEN_DIAGRAM__LINKS:
					return ((InternalEList)getLinks()).basicRemove(otherEnd, msgs);
				case GMFGenPackage.GEN_DIAGRAM__PALETTE:
					return basicSetPalette(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
		}
		return eBasicSetContainer(null, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_RUN_TIME_CLASS:
				if (resolve) return getDiagramRunTimeClass();
				return basicGetDiagramRunTimeClass();
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID:
				return new Integer(getVisualID());
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_CLASS_NAME:
				return getEditPartClassName();
			case GMFGenPackage.GEN_DIAGRAM__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return getItemSemanticEditPolicyClassName();
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return getNotationViewFactoryClassName();
			case GMFGenPackage.GEN_DIAGRAM__VIEWMAP:
				return getViewmap();
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				if (resolve) return getDomainMetaModel();
				return basicGetDomainMetaModel();
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				if (resolve) return getDomainDiagramElement();
				return basicGetDomainDiagramElement();
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				return getNodes();
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				return getLinks();
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				return getPalette();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME:
				return getEditCommandsPackageName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME:
				return getEditPartsPackageName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME:
				return getEditPoliciesPackageName();
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				return getEditorPackageName();
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				return getProvidersPackageName();
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME:
				return getNotationViewFactoriesPackageName();
d2425 2
a2426 1
				return getPluginID();
d2428 2
a2429 1
				return getPluginName();
d2431 2
a2432 1
				return getProviderName();
d2434 2
a2435 1
				return isSameFileForDiagramAndModel() ? Boolean.TRUE : Boolean.FALSE;
d2437 2
a2438 1
				return isPrintingEnabled() ? Boolean.TRUE : Boolean.FALSE;
d2440 2
a2441 1
				return getDiagramFileExtension();
d2443 2
a2444 1
				return getReorientConnectionViewCommandClassName();
d2446 2
a2447 1
				return getEditPartFactoryClassName();
d2449 2
a2450 1
				return getBaseItemSemanticEditPolicyClassName();
d2452 2
a2453 1
				return getBaseGraphicalNodeEditPolicyClassName();
d2455 2
a2456 1
				return getReferenceConnectionEditPolicyClassName();
d2458 2
a2459 1
				return getCanonicalEditPolicyClassName();
d2461 2
a2462 1
				return getElementTypesClassName();
d2464 2
a2465 1
				return getSemanticHintsClassName();
d2467 2
a2468 1
				return getNotationViewProviderClassName();
d2470 2
a2471 1
				return getEditPartProviderClassName();
d2473 2
a2474 1
				return getMetamodelSupportProviderClassName();
d2476 2
a2477 1
				return getModelingAssistantProviderClassName();
d2479 2
a2480 150
				return getPropertyProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME:
				return getIconProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME:
				return getStructuralFeatureParserClassName();
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				return getActionBarContributorClassName();
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME:
				return getCreationWizardClassName();
			case GMFGenPackage.GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME:
				return getCreationWizardPageClassName();
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME:
				return getDiagramEditorUtilClassName();
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME:
				return getDiagramFileCreatorClassName();
			case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME:
				return getDocumentProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				return getEditorClassName();
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				return getInitDiagramFileActionClassName();
			case GMFGenPackage.GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME:
				return getMatchingStrategyClassName();
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				return getPluginClassName();
			case GMFGenPackage.GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME:
				return getPreferenceInitializerClassName();
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME:
				return getVisualIDRegistryClassName();
		}
		return eDynamicGet(eFeature, resolve);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_RUN_TIME_CLASS:
				setDiagramRunTimeClass((GenClass)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID:
				setVisualID(((Integer)newValue).intValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_CLASS_NAME:
				setEditPartClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setItemSemanticEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VIEWMAP:
				setViewmap((Viewmap)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_META_MODEL:
				setDomainMetaModel((GenPackage)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT:
				setDomainDiagramElement((GenClass)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NODES:
				getNodes().clear();
				getNodes().addAll((Collection)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__LINKS:
				getLinks().clear();
				getLinks().addAll((Collection)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PALETTE:
				setPalette((Palette)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME:
				setEditCommandsPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME:
				setEditPartsPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME:
				setEditPoliciesPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				setEditorPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				setProvidersPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME:
				setNotationViewFactoriesPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				setPluginID((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_NAME:
				setPluginName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDER_NAME:
				setProviderName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__PRINTING_ENABLED:
				setPrintingEnabled(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION:
				setDiagramFileExtension((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME:
				setReorientConnectionViewCommandClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				setEditPartFactoryClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setBaseItemSemanticEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
				setBaseGraphicalNodeEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME:
				setReferenceConnectionEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME:
				setCanonicalEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME:
				setElementTypesClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME:
				setSemanticHintsClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME:
				setNotationViewProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME:
				setEditPartProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME:
				setMetamodelSupportProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME:
				setModelingAssistantProviderClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME:
				setPropertyProviderClassName((String)newValue);
				return;
d2524 1
a2524 1
		eDynamicSet(eFeature, newValue);
d2532 2
a2533 20
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_RUN_TIME_CLASS:
				setDiagramRunTimeClass((GenClass)null);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID:
				setVisualID(VISUAL_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_CLASS_NAME:
				setEditPartClassName(EDIT_PART_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setItemSemanticEditPolicyClassName(ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__VIEWMAP:
				setViewmap((Viewmap)null);
				return;
d2667 1
a2667 1
		eDynamicUnset(eFeature);
d2675 2
a2676 14
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_RUN_TIME_CLASS:
				return diagramRunTimeClass != null;
			case GMFGenPackage.GEN_DIAGRAM__VISUAL_ID:
				return visualID != VISUAL_ID_EDEFAULT;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_CLASS_NAME:
				return EDIT_PART_CLASS_NAME_EDEFAULT == null ? editPartClassName != null : !EDIT_PART_CLASS_NAME_EDEFAULT.equals(editPartClassName);
			case GMFGenPackage.GEN_DIAGRAM__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? itemSemanticEditPolicyClassName != null : !ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(itemSemanticEditPolicyClassName);
			case GMFGenPackage.GEN_DIAGRAM__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : !NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals(notationViewFactoryClassName);
			case GMFGenPackage.GEN_DIAGRAM__VIEWMAP:
				return viewmap != null;
d2766 298
a3063 1
		return eDynamicIsSet(eFeature);
@


1.31
log
@#120553
- Adding accessors for the palette entries factory methods into genmodel
- Refreshing unit-tests
- Fixing some old problems found by this refreshment.
@
text
@a64 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isHasDomainModel <em>Has Domain Model</em>}</li>
a370 20
	 * The default value of the '{@@link #isHasDomainModel() <em>Has Domain Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isHasDomainModel()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean HAS_DOMAIN_MODEL_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isHasDomainModel() <em>Has Domain Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isHasDomainModel()
	 * @@generated
	 * @@ordered
	 */
	protected boolean hasDomainModel = HAS_DOMAIN_MODEL_EDEFAULT;

	/**
a1739 21
	public boolean isHasDomainModel() {
		return hasDomainModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setHasDomainModel(boolean newHasDomainModel) {
		boolean oldHasDomainModel = hasDomainModel;
		hasDomainModel = newHasDomainModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__HAS_DOMAIN_MODEL, oldHasDomainModel, hasDomainModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a2646 2
			case GMFGenPackage.GEN_DIAGRAM__HAS_DOMAIN_MODEL:
				return isHasDomainModel() ? Boolean.TRUE : Boolean.FALSE;
a2781 3
			case GMFGenPackage.GEN_DIAGRAM__HAS_DOMAIN_MODEL:
				setHasDomainModel(((Boolean)newValue).booleanValue());
				return;
a2942 3
			case GMFGenPackage.GEN_DIAGRAM__HAS_DOMAIN_MODEL:
				setHasDomainModel(HAS_DOMAIN_MODEL_EDEFAULT);
				return;
a3081 2
			case GMFGenPackage.GEN_DIAGRAM__HAS_DOMAIN_MODEL:
				return hasDomainModel != HAS_DOMAIN_MODEL_EDEFAULT;
a3172 2
		result.append(", hasDomainModel: ");
		result.append(hasDomainModel);
@


1.30
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d1565 1
a1565 1
			value = getDomainPackageCapName() + "ItemSemanticEditPolicy"; //$NON-NLS-1$
@


1.29
log
@#117749 & #118040 generate unique names for the shared elements in mapping model
@
text
@d2295 37
d3348 4
@


1.28
log
@#117660 move canonical edit policy into separate class to shorten it's file name
@
text
@d30 1
d1125 2
a1126 2
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".edit.commands";
d1154 2
a1155 2
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".edit.parts";
d1183 2
a1184 2
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".edit.policies";
d1303 2
a1304 2
		if (value == null || value.length() == 0) {
			return getDomainPackageCapName() + "DiagramEditorPlugin";
d1331 3
a1333 3
		String name = getPreferenceInitializerClassNameGen();
		if (name == null) {
			return getDomainPackageCapName() + "DiagramPreferenceInitializer"; //$NON-NLS-1$
d1335 1
a1335 1
		return name;
d1360 3
a1362 3
		String name = getVisualIDRegistryClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "VisualIDRegistry"; //$NON-NLS-1$
d1364 1
a1364 1
		return name;
d1390 2
a1391 2
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".part";
d1419 2
a1420 2
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".providers";
d1448 2
a1449 2
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".view.factories";
d1476 3
a1478 3
		String name = getEditorClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "DiagramEditor"; //$NON-NLS-1$
d1480 1
a1480 1
		return name;
d1505 3
a1507 3
		String name = getDocumentProviderClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "DocumentProvider"; //$NON-NLS-1$
d1509 1
a1509 1
		return name;
d1534 3
a1536 3
		String name = getEditPartFactoryClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "EditPartFactory"; //$NON-NLS-1$
d1538 1
a1538 1
		return name;
d1563 3
a1565 3
		String name = getBaseItemSemanticEditPolicyClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "ItemSemanticEditPolicy"; //$NON-NLS-1$
d1567 1
a1567 1
		return name;
d1592 3
a1594 3
		String name = getBaseGraphicalNodeEditPolicyClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "GraphicalNodeEditPolicy"; //$NON-NLS-1$
d1596 1
a1596 1
		return name;
d1621 3
a1623 3
		String name = getReferenceConnectionEditPolicyClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "ReferenceConnectionEditPolicy"; //$NON-NLS-1$
d1625 1
a1625 1
		return name;
d1650 3
a1652 3
		String name = getCanonicalEditPolicyClassNameGen();
		if (name == null || name.length() == 0) {
			return getClassNamePrefix() + getClassNameSuffux() + "CanonicalEditPolicy"; //$NON-NLS-1$
d1654 1
a1654 1
		return name;
d1679 3
a1681 3
		String name = getElementTypesClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "ElementTypes"; //$NON-NLS-1$
d1683 1
a1683 1
		return name;
d1708 3
a1710 3
		String name = getSemanticHintsClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "SemanticHints"; //$NON-NLS-1$
d1712 1
a1712 1
		return name;
d1737 3
a1739 3
		String name = getNotationViewProviderClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "ViewProvider"; //$NON-NLS-1$
d1741 1
a1741 1
		return name;
d1816 3
a1818 3
		String name = getReorientConnectionViewCommandClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "ReorientConnectionViewCommand"; //$NON-NLS-1$
d1820 1
a1820 1
		return name;
d1887 3
a1889 3
		String name = getInitDiagramFileActionClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "InitDiagramFileAction"; //$NON-NLS-1$
d1891 1
a1891 1
		return name;
d1916 3
a1918 3
		String name = getActionBarContributorClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "DiagramActionBarContributor"; //$NON-NLS-1$
d1920 1
a1920 1
		return name;
d1945 3
a1947 3
		String name = getCreationWizardClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "CreationWizard"; //$NON-NLS-1$
d1949 1
a1949 1
		return name;
d1974 3
a1976 3
		String name = getCreationWizardPageClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "CreationWizardPage"; //$NON-NLS-1$
d1978 1
a1978 1
		return name;
d2003 3
a2005 3
		String name = getDiagramEditorUtilClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "DiagramEditorUtil"; //$NON-NLS-1$
d2007 1
a2007 1
		return name;
d2032 3
a2034 3
		String name = getDiagramFileCreatorClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "DiagramFileCreator"; //$NON-NLS-1$
d2036 1
a2036 1
		return name;
d2061 3
a2063 3
		String name = getMatchingStrategyClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "MatchingStrategy"; //$NON-NLS-1$
d2065 1
a2065 1
		return name;
d2090 3
a2092 3
		String name = getEditPartProviderClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "EditPartProvider"; //$NON-NLS-1$
d2094 1
a2094 1
		return name;
d2119 3
a2121 3
		String name = getMetamodelSupportProviderClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "MetaModelSupportProvider"; //$NON-NLS-1$
d2123 1
a2123 1
		return name;
d2148 3
a2150 3
		String name = getModelingAssistantProviderClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "ModelingAssistantProvider"; //$NON-NLS-1$
d2152 1
a2152 1
		return name;
d2177 3
a2179 3
		String name = getPropertyProviderClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "PropertyProvider"; //$NON-NLS-1$
d2181 1
a2181 1
		return name;
d2206 3
a2208 3
		String name = getIconProviderClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "IconProvider"; //$NON-NLS-1$
d2210 1
a2210 1
		return name;
d2235 3
a2237 3
		String name = getStructuralFeatureParserClassNameGen();
		if (name == null || name.length() == 0) {
			return getDomainPackageCapName() + "StructuralFeatureParser"; //$NON-NLS-1$
d2239 1
a2239 1
		return name;
@


1.27
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@d71 1
d511 20
d1644 29
d2348 9
d2665 2
d2809 3
d2973 3
d3108 2
d3201 2
@


1.26
log
@#116857 use genmodel name as a prefix for the common diagram editor classes
@
text
@d53 1
d66 1
d69 1
d150 20
d410 20
d470 20
d1097 29
d1339 1
a1339 1
		if (name == null) {
d1455 1
a1455 1
		if (name == null) {
d1484 1
a1484 1
		if (name == null) {
d1513 1
a1513 1
		if (name == null) {
d1542 1
a1542 1
		if (name == null) {
d1565 29
d1600 1
a1600 1
		if (name == null) {
d1629 1
a1629 1
		if (name == null) {
d1658 1
a1658 1
		if (name == null) {
d1687 1
a1687 1
		if (name == null) {
d1737 1
a1737 1
		if (value == null || value.trim().length() == 0) {
d1760 29
d1837 1
a1837 1
		if (name == null) {
d1866 1
a1866 1
		if (name == null) {
d1895 1
a1895 1
		if (name == null) {
d1924 1
a1924 1
		if (name == null) {
d1953 1
a1953 1
		if (name == null) {
d1982 1
a1982 1
		if (name == null) {
d2011 1
a2011 1
		if (name == null) {
d2040 1
a2040 1
		if (name == null) {
d2069 1
a2069 1
		if (name == null) {
d2098 1
a2098 1
		if (name == null) {
d2127 1
a2127 1
		if (name == null) {
d2156 1
a2156 1
		if (name == null) {
d2185 1
a2185 1
		if (name == null) {
d2247 9
d2280 9
d2478 1
a2478 1
	
d2570 2
d2596 2
d2602 2
d2694 3
d2733 3
d2742 3
d2855 3
d2894 3
d2903 3
d3005 2
d3031 2
d3037 2
d3096 3
a3098 1
		result.append(" (editPartsPackageName: ");
d3122 2
d3128 2
@


1.25
log
@#116798 create distinct package for the view factories
@
text
@d1190 1
a1190 1
			return CodeGenUtil.validJavaIdentifier(getEMFGenModel().getModelName()) + "DiagramEditorPlugin";
d2991 1
a2991 1
		String name = getDomainMetaModel().getEcorePackage().getName();
@


1.24
log
@#116399 Expose user-defined features of domain elements in property sheet
@
text
@d57 1
d70 1
a70 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getViewProviderClassName <em>View Provider Class Name</em>}</li>
d227 20
d487 1
a487 1
	 * The default value of the '{@@link #getViewProviderClassName() <em>View Provider Class Name</em>}' attribute.
d490 1
a490 1
	 * @@see #getViewProviderClassName()
d494 1
a494 1
	protected static final String VIEW_PROVIDER_CLASS_NAME_EDEFAULT = null;
d497 1
a497 1
	 * The cached value of the '{@@link #getViewProviderClassName() <em>View Provider Class Name</em>}' attribute.
d500 1
a500 1
	 * @@see #getViewProviderClassName()
d504 1
a504 1
	protected String viewProviderClassName = VIEW_PROVIDER_CLASS_NAME_EDEFAULT;
d1328 29
d1560 29
a1883 29
	public String getViewProviderClassNameGen() {
		return viewProviderClassName;
	}

	public String getViewProviderClassName() {
		String name = getViewProviderClassNameGen();
		if (name == null) {
			return getDomainPackageCapName() + "ViewProvider"; //$NON-NLS-1$
		}
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setViewProviderClassName(String newViewProviderClassName) {
		String oldViewProviderClassName = viewProviderClassName;
		viewProviderClassName = newViewProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VIEW_PROVIDER_CLASS_NAME, oldViewProviderClassName, viewProviderClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d2148 9
a2180 9
	public String getViewProviderQualifiedClassName() {
		return getProvidersPackageName() + '.' + getViewProviderClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
d2410 2
d2436 2
a2437 2
			case GMFGenPackage.GEN_DIAGRAM__VIEW_PROVIDER_CLASS_NAME:
				return getViewProviderClassName();
d2532 3
d2571 2
a2572 2
			case GMFGenPackage.GEN_DIAGRAM__VIEW_PROVIDER_CLASS_NAME:
				setViewProviderClassName((String)newValue);
d2684 3
d2723 2
a2724 2
			case GMFGenPackage.GEN_DIAGRAM__VIEW_PROVIDER_CLASS_NAME:
				setViewProviderClassName(VIEW_PROVIDER_CLASS_NAME_EDEFAULT);
d2821 2
d2847 2
a2848 2
			case GMFGenPackage.GEN_DIAGRAM__VIEW_PROVIDER_CLASS_NAME:
				return VIEW_PROVIDER_CLASS_NAME_EDEFAULT == null ? viewProviderClassName != null : !VIEW_PROVIDER_CLASS_NAME_EDEFAULT.equals(viewProviderClassName);
d2906 2
d2932 2
a2933 2
		result.append(", viewProviderClassName: ");
		result.append(viewProviderClassName);
@


1.23
log
@#116031 avoid hardcoded class names in templates
@
text
@d73 1
d546 20
d1921 29
d2158 9
d2392 2
d2528 3
d2677 3
d2795 2
d2878 2
@


1.22
log
@#115972 generate single class with semantic hints
@
text
@d65 4
d74 8
a82 3
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditorClassName <em>Editor Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDocumentProviderClassName <em>Document Provider Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getActionBarContributorClassName <em>Action Bar Contributor Class Name</em>}</li>
d85 2
d93 1
d372 1
a372 1
	protected static final String EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT = "EditPartFactoryImpl";
d385 80
d565 81
a645 1
	 * The default value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
d648 1
a648 1
	 * @@see #getInitDiagramFileActionClassName()
d652 1
a652 1
	protected static final String INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT = "InitDiagramFileAction";
d655 1
a655 1
	 * The cached value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
d658 1
a658 1
	 * @@see #getInitDiagramFileActionClassName()
d662 1
a662 1
	protected String initDiagramFileActionClassName = INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT;
d665 1
a665 1
	 * The default value of the '{@@link #getEditorClassName() <em>Editor Class Name</em>}' attribute.
d668 1
a668 1
	 * @@see #getEditorClassName()
d672 1
a672 1
	protected static final String EDITOR_CLASS_NAME_EDEFAULT = "DiagramEditor";
d675 1
a675 1
	 * The cached value of the '{@@link #getEditorClassName() <em>Editor Class Name</em>}' attribute.
d678 1
a678 1
	 * @@see #getEditorClassName()
d682 1
a682 1
	protected String editorClassName = EDITOR_CLASS_NAME_EDEFAULT;
d692 1
a692 1
	protected static final String DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT = "DocumentProvider";
d705 21
a725 1
	 * The default value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
d728 1
a728 1
	 * @@see #getActionBarContributorClassName()
d732 1
a732 1
	protected static final String ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT = null;
d735 1
a735 1
	 * The cached value of the '{@@link #getActionBarContributorClassName() <em>Action Bar Contributor Class Name</em>}' attribute.
d738 1
a738 1
	 * @@see #getActionBarContributorClassName()
d742 1
a742 1
	protected String actionBarContributorClassName = ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT;
d784 40
d1170 58
d1286 4
d1291 5
a1295 1
		return editorClassName;
d1315 4
d1320 5
a1324 1
		return documentProviderClassName;
d1344 4
d1349 5
a1353 1
		return editPartFactoryClassName;
d1373 118
a1490 2
	public boolean isHasDomainModel() {
		return hasDomainModel;
d1581 4
d1586 5
a1590 1
		return initDiagramFileActionClassName;
d1605 9
d1617 30
a1646 1
			return getDomainPackageCapName() + "ActionBarContributor"; //$NON-NLS-1$
d1656 51
a1706 2
	public String getActionBarContributorClassNameGen() {
		return actionBarContributorClassName;
d1714 3
a1716 3
	public void setActionBarContributorClassName(String newActionBarContributorClassName) {
		String oldActionBarContributorClassName = actionBarContributorClassName;
		actionBarContributorClassName = newActionBarContributorClassName;
d1718 10
a1727 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME, oldActionBarContributorClassName, actionBarContributorClassName));
d1730 2
a1731 2
	public String getMatchingStrategyClassName() {
		String name = getMatchingStrategyClassNameGen();
d1733 1
a1733 1
			return getDomainPackageCapName() + "MatchingStrategy"; //$NON-NLS-1$
d1743 12
d1759 8
d1779 9
d1801 5
a1805 2
	public String getViewProviderClassNameGen() {
		return viewProviderClassName;
d1813 2
a1814 5
	public void setViewProviderClassName(String newViewProviderClassName) {
		String oldViewProviderClassName = viewProviderClassName;
		viewProviderClassName = newViewProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__VIEW_PROVIDER_CLASS_NAME, oldViewProviderClassName, viewProviderClassName));
d1830 5
a1834 2
	public String getEditPartProviderClassNameGen() {
		return editPartProviderClassName;
d1842 2
a1843 5
	public void setEditPartProviderClassName(String newEditPartProviderClassName) {
		String oldEditPartProviderClassName = editPartProviderClassName;
		editPartProviderClassName = newEditPartProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME, oldEditPartProviderClassName, editPartProviderClassName));
d1859 5
a1863 2
	public String getMetamodelSupportProviderClassNameGen() {
		return metamodelSupportProviderClassName;
d1871 2
a1872 5
	public void setMetamodelSupportProviderClassName(String newMetamodelSupportProviderClassName) {
		String oldMetamodelSupportProviderClassName = metamodelSupportProviderClassName;
		metamodelSupportProviderClassName = newMetamodelSupportProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME, oldMetamodelSupportProviderClassName, metamodelSupportProviderClassName));
d1888 5
a1892 2
	public String getModelingAssistantProviderClassNameGen() {
		return modelingAssistantProviderClassName;
d1900 2
a1901 5
	public void setModelingAssistantProviderClassName(String newModelingAssistantProviderClassName) {
		String oldModelingAssistantProviderClassName = modelingAssistantProviderClassName;
		modelingAssistantProviderClassName = newModelingAssistantProviderClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME, oldModelingAssistantProviderClassName, modelingAssistantProviderClassName));
d1917 22
a1938 2
	public String getIconProviderClassNameGen() {
		return iconProviderClassName;
d1946 3
a1948 3
	public void setIconProviderClassName(String newIconProviderClassName) {
		String oldIconProviderClassName = iconProviderClassName;
		iconProviderClassName = newIconProviderClassName;
d1950 1
a1950 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME, oldIconProviderClassName, iconProviderClassName));
d1976 18
d2013 1
a2013 1
		return getEditPoliciesPackageName() + '.' + "ItemSemanticEditPolicy";
d2022 10
a2031 1
		return getEditPoliciesPackageName() + '.' + "ReferenceConnectionEditPolicy";
d2040 1
a2040 1
		return getProvidersPackageName() + '.' + "SemanticHints";
d2117 9
d2135 45
d2317 8
d2335 16
a2352 6
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				return getEditorClassName();
			case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME:
				return getDocumentProviderClassName();
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				return getActionBarContributorClassName();
d2357 4
d2443 12
d2470 14
a2483 2
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				setInitDiagramFileActionClassName((String)newValue);
d2485 2
a2486 2
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				setEditorClassName((String)newValue);
d2491 5
a2495 2
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				setActionBarContributorClassName((String)newValue);
d2503 6
d2589 12
d2616 14
a2629 2
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				setInitDiagramFileActionClassName(INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT);
d2631 2
a2632 2
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				setEditorClassName(EDITOR_CLASS_NAME_EDEFAULT);
d2637 5
a2641 2
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				setActionBarContributorClassName(ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT);
d2649 6
d2712 8
d2730 16
a2747 6
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				return EDITOR_CLASS_NAME_EDEFAULT == null ? editorClassName != null : !EDITOR_CLASS_NAME_EDEFAULT.equals(editorClassName);
			case GMFGenPackage.GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME:
				return DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT == null ? documentProviderClassName != null : !DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT.equals(documentProviderClassName);
			case GMFGenPackage.GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME:
				return ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT == null ? actionBarContributorClassName != null : !ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT.equals(actionBarContributorClassName);
d2752 4
d2793 8
d2811 16
a2828 6
		result.append(", editorClassName: ");
		result.append(editorClassName);
		result.append(", documentProviderClassName: ");
		result.append(documentProviderClassName);
		result.append(", actionBarContributorClassName: ");
		result.append(actionBarContributorClassName);
d2833 4
d2857 1
a2857 1
	private String getDomainPackageCapName() {
@


1.21
log
@#115970 prepend base package; remove stale methods
@
text
@d1429 9
@


1.20
log
@[dstadnik] #115466 custom semantic edit policies to control link creation
@
text
@d592 2
d887 1
a887 1
			return getEMFGenModel().getModelPluginID() + ".gmf.editor";
d945 1
a945 1
			return getPackageNamePrefix() + ".editor";
d2040 3
d2044 6
a2049 1
		return toLowerCase(getDomainMetaModel().getEcorePackage().getName());
a2059 7
	private static String toLowerCase(String s) {
		if (s == null) {
			return "";
		}
		return s.toLowerCase();
	}
	
@


1.19
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@d54 1
d153 20
d782 29
d1409 18
d1600 2
d1620 2
d1684 3
d1713 3
d1799 3
d1826 3
d1909 2
d1927 2
d1986 2
@


1.18
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d34 1
d36 2
d1971 3
a1973 2
			if(nextNode.getModelElementInitializer() != null) {
				requiredIDs.addAll(Arrays.asList(nextNode.getModelElementInitializer().getRequiredPluginIDs()));
d1975 2
a1976 2
			if(nextNode.getModelElementSelector() != null) {
				requiredIDs.addAll(Arrays.asList(nextNode.getModelElementSelector().getRequiredPluginIDs()));				
d1980 4
a1983 3
				GenChildNode nextChild = (GenChildNode) childIt.next();			
				if(nextChild.getModelElementInitializer() != null) {
					requiredIDs.addAll(Arrays.asList(nextChild.getModelElementInitializer().getRequiredPluginIDs()));
d1985 2
a1986 2
				if(nextChild.getModelElementSelector() != null) {
					requiredIDs.addAll(Arrays.asList(nextChild.getModelElementSelector().getRequiredPluginIDs()));				
d1993 9
a2001 2
			if(nextLink.getModelElementInitializer() != null) {
				requiredIDs.addAll(Arrays.asList(nextLink.getModelElementInitializer().getRequiredPluginIDs()));
a2002 3
			if(nextLink.getModelElementSelector() != null) {
				requiredIDs.addAll(Arrays.asList(nextLink.getModelElementSelector().getRequiredPluginIDs()));
			}			
@


1.17
log
@[rdvorak] #113224 Generate custom initialization code for domain model elements
@
text
@d36 2
d1500 2
d1531 2
d1612 3
d1721 3
d1824 2
@


1.16
log
@[dstadnik] #113213 common actions added
@
text
@d10 1
d12 3
d30 1
d1359 2
d1436 18
d1949 34
@


1.15
log
@[ashatalin] #112988 use either same as diagram or separate file to persist domain model
@
text
@d50 1
d262 20
d1068 21
d1528 2
d1619 3
d1723 3
d1811 2
d1868 2
@


1.14
log
@[dstadnik] #113074  diagram action bar contributor
@
text
@d60 1
d461 20
d934 21
d1506 2
d1605 3
d1706 3
d1781 2
d1836 2
@


1.13
log
@[dstadnik] #112901 modeling assistant provider
@
text
@a48 3
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPluginClassName <em>Plugin Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditorClassName <em>Editor Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditPartFactoryClassName <em>Edit Part Factory Class Name</em>}</li>
d52 1
a52 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getInitDiagramFileActionClassName <em>Init Diagram File Action Class Name</em>}</li>
d58 5
d240 21
a260 1
	 * The default value of the '{@@link #getPluginClassName() <em>Plugin Class Name</em>}' attribute.
d263 1
a263 1
	 * @@see #getPluginClassName()
d267 1
a267 1
	protected static final String PLUGIN_CLASS_NAME_EDEFAULT = null;
d270 1
a270 1
	 * The cached value of the '{@@link #getPluginClassName() <em>Plugin Class Name</em>}' attribute.
d273 1
a273 1
	 * @@see #getPluginClassName()
d277 1
a277 1
	protected String pluginClassName = PLUGIN_CLASS_NAME_EDEFAULT;
d280 1
a280 1
	 * The default value of the '{@@link #getEditorClassName() <em>Editor Class Name</em>}' attribute.
d283 1
a283 1
	 * @@see #getEditorClassName()
d287 1
a287 1
	protected static final String EDITOR_CLASS_NAME_EDEFAULT = "DiagramEditor";
d290 1
a290 1
	 * The cached value of the '{@@link #getEditorClassName() <em>Editor Class Name</em>}' attribute.
d293 1
a293 1
	 * @@see #getEditorClassName()
d297 1
a297 1
	protected String editorClassName = EDITOR_CLASS_NAME_EDEFAULT;
d320 21
a340 1
	 * The default value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
d343 1
a343 1
	 * @@see #isSameFileForDiagramAndModel()
d347 1
a347 1
	protected static final boolean SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT = false;
d350 1
a350 1
	 * The cached value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
d353 1
a353 1
	 * @@see #isSameFileForDiagramAndModel()
d357 1
a357 1
	protected boolean sameFileForDiagramAndModel = SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
d360 1
a360 1
	 * The default value of the '{@@link #isHasDomainModel() <em>Has Domain Model</em>}' attribute.
d363 1
a363 1
	 * @@see #isHasDomainModel()
d367 1
a367 1
	protected static final boolean HAS_DOMAIN_MODEL_EDEFAULT = false;
d370 1
a370 1
	 * The cached value of the '{@@link #isHasDomainModel() <em>Has Domain Model</em>}' attribute.
d373 1
a373 1
	 * @@see #isHasDomainModel()
d377 1
a377 1
	protected boolean hasDomainModel = HAS_DOMAIN_MODEL_EDEFAULT;
d380 1
a380 1
	 * The default value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
d383 1
a383 1
	 * @@see #getDiagramFileExtension()
d387 1
a387 1
	protected static final String DIAGRAM_FILE_EXTENSION_EDEFAULT = null;
d390 1
a390 1
	 * The cached value of the '{@@link #getDiagramFileExtension() <em>Diagram File Extension</em>}' attribute.
d393 1
a393 1
	 * @@see #getDiagramFileExtension()
d397 1
a397 1
	protected String diagramFileExtension = DIAGRAM_FILE_EXTENSION_EDEFAULT;
d400 1
a400 1
	 * The default value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
d403 1
a403 1
	 * @@see #getInitDiagramFileActionClassName()
d407 1
a407 1
	protected static final String INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT = "InitDiagramFileAction";
d410 1
a410 1
	 * The cached value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
d413 1
a413 1
	 * @@see #getInitDiagramFileActionClassName()
d417 1
a417 1
	protected String initDiagramFileActionClassName = INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT;
d420 1
a420 1
	 * The default value of the '{@@link #getViewProviderClassName() <em>View Provider Class Name</em>}' attribute.
d423 1
a423 1
	 * @@see #getViewProviderClassName()
d427 1
a427 1
	protected static final String VIEW_PROVIDER_CLASS_NAME_EDEFAULT = null;
d430 1
a430 1
	 * The cached value of the '{@@link #getViewProviderClassName() <em>View Provider Class Name</em>}' attribute.
d433 1
a433 1
	 * @@see #getViewProviderClassName()
d437 1
a437 1
	protected String viewProviderClassName = VIEW_PROVIDER_CLASS_NAME_EDEFAULT;
d440 1
a440 1
	 * The default value of the '{@@link #getEditPartProviderClassName() <em>Edit Part Provider Class Name</em>}' attribute.
d443 1
a443 1
	 * @@see #getEditPartProviderClassName()
d447 1
a447 1
	protected static final String EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT = null;
d450 1
a450 1
	 * The cached value of the '{@@link #getEditPartProviderClassName() <em>Edit Part Provider Class Name</em>}' attribute.
d453 1
a453 1
	 * @@see #getEditPartProviderClassName()
d457 1
a457 1
	protected String editPartProviderClassName = EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT;
d460 1
a460 1
	 * The default value of the '{@@link #getMetamodelSupportProviderClassName() <em>Metamodel Support Provider Class Name</em>}' attribute.
d463 1
a463 1
	 * @@see #getMetamodelSupportProviderClassName()
d467 1
a467 1
	protected static final String METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT = null;
d470 1
a470 1
	 * The cached value of the '{@@link #getMetamodelSupportProviderClassName() <em>Metamodel Support Provider Class Name</em>}' attribute.
d473 1
a473 1
	 * @@see #getMetamodelSupportProviderClassName()
d477 1
a477 1
	protected String metamodelSupportProviderClassName = METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT;
d480 1
a480 1
	 * The default value of the '{@@link #getModelingAssistantProviderClassName() <em>Modeling Assistant Provider Class Name</em>}' attribute.
d483 1
a483 1
	 * @@see #getModelingAssistantProviderClassName()
d487 1
a487 1
	protected static final String MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT = null;
d490 1
a490 1
	 * The cached value of the '{@@link #getModelingAssistantProviderClassName() <em>Modeling Assistant Provider Class Name</em>}' attribute.
d493 1
a493 1
	 * @@see #getModelingAssistantProviderClassName()
d497 1
a497 1
	protected String modelingAssistantProviderClassName = MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT;
d500 1
a500 1
	 * The default value of the '{@@link #getIconProviderClassName() <em>Icon Provider Class Name</em>}' attribute.
d503 1
a503 1
	 * @@see #getIconProviderClassName()
d507 1
a507 1
	protected static final String ICON_PROVIDER_CLASS_NAME_EDEFAULT = null;
d510 1
a510 1
	 * The cached value of the '{@@link #getIconProviderClassName() <em>Icon Provider Class Name</em>}' attribute.
d513 1
a513 1
	 * @@see #getIconProviderClassName()
d517 1
a517 1
	protected String iconProviderClassName = ICON_PROVIDER_CLASS_NAME_EDEFAULT;
d1021 58
d1327 18
a1441 6
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				return getPluginClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				return getEditorClassName();
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				return getEditPartFactoryClassName();
d1448 2
a1449 2
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				return getInitDiagramFileActionClassName();
d1460 10
a1527 9
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				setPluginClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				setEditorClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				setEditPartFactoryClassName((String)newValue);
				return;
d1537 2
a1538 2
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				setInitDiagramFileActionClassName((String)newValue);
d1555 15
a1625 9
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				setPluginClassName(PLUGIN_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				setEditorClassName(EDITOR_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				setEditPartFactoryClassName(EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT);
				return;
d1635 2
a1636 2
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				setInitDiagramFileActionClassName(INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT);
d1653 15
a1708 6
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_CLASS_NAME:
				return PLUGIN_CLASS_NAME_EDEFAULT == null ? pluginClassName != null : !PLUGIN_CLASS_NAME_EDEFAULT.equals(pluginClassName);
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_CLASS_NAME:
				return EDITOR_CLASS_NAME_EDEFAULT == null ? editorClassName != null : !EDITOR_CLASS_NAME_EDEFAULT.equals(editorClassName);
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME:
				return EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT == null ? editPartFactoryClassName != null : !EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT.equals(editPartFactoryClassName);
d1715 2
a1716 2
			case GMFGenPackage.GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME:
				return INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT == null ? initDiagramFileActionClassName != null : !INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT.equals(initDiagramFileActionClassName);
d1727 10
a1761 6
		result.append(", pluginClassName: ");
		result.append(pluginClassName);
		result.append(", editorClassName: ");
		result.append(editorClassName);
		result.append(", editPartFactoryClassName: ");
		result.append(editPartFactoryClassName);
d1768 2
a1769 2
		result.append(", initDiagramFileActionClassName: ");
		result.append(initDiagramFileActionClassName);
d1780 10
@


1.12
log
@[dstadnik] #112900 metamodel support
@
text
@d59 2
d438 40
d1066 58
d1209 18
d1344 4
d1436 6
d1528 6
d1595 4
d1644 4
@


1.11
log
@[ashatalin] #112122 Action to initialize diagram for domain model.
 unique id introduced, refactoring to use it throughout the code
@
text
@d52 1
a54 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#isSameFileForDiagramAndModel <em>Same File For Diagram And Model</em>}</li>
d56 3
d296 20
d356 41
a396 1
	 * The default value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
d399 1
a399 1
	 * @@see #isSameFileForDiagramAndModel()
d403 1
a403 1
	protected static final boolean SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT = false;
d406 1
a406 1
	 * The cached value of the '{@@link #isSameFileForDiagramAndModel() <em>Same File For Diagram And Model</em>}' attribute.
d409 1
a409 1
	 * @@see #isSameFileForDiagramAndModel()
d413 1
a413 1
	protected boolean sameFileForDiagramAndModel = SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
d416 1
a416 1
	 * The default value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
d419 1
a419 1
	 * @@see #getInitDiagramFileActionClassName()
d423 1
a423 1
	protected static final String INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT = "InitDiagramFileAction";
d426 1
a426 1
	 * The cached value of the '{@@link #getInitDiagramFileActionClassName() <em>Init Diagram File Action Class Name</em>}' attribute.
d429 1
a429 1
	 * @@see #getInitDiagramFileActionClassName()
d433 1
a433 1
	protected String initDiagramFileActionClassName = INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT;
d937 87
d1082 27
d1212 2
a1217 2
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return isSameFileForDiagramAndModel() ? Boolean.TRUE : Boolean.FALSE;
d1220 6
d1293 3
a1301 3
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(((Boolean)newValue).booleanValue());
				return;
d1305 9
d1379 3
a1387 3
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				setSameFileForDiagramAndModel(SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT);
				return;
d1391 9
d1447 2
a1452 2
			case GMFGenPackage.GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
				return sameFileForDiagramAndModel != SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
d1455 6
d1492 2
a1497 2
		result.append(", sameFileForDiagramAndModel: ");
		result.append(sameFileForDiagramAndModel);
d1500 6
d1518 8
@


1.10
log
@[dstadnik] #112194 Link label should be positioned on the link accordingly to it's weight defined
in gmfgen model
@
text
@d1297 4
@


1.9
log
@#111775 cleanup in gmfgen - unused attributes gone
@
text
@d44 3
a48 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getPluginID <em>Plugin ID</em>}</li>
a49 2
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditorPackageName <em>Editor Package Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getProvidersPackageName <em>Providers Package Name</em>}</li>
d133 1
a133 1
	 * The default value of the '{@@link #getPluginName() <em>Plugin Name</em>}' attribute.
d136 1
a136 1
	 * @@see #getPluginName()
d140 1
a140 1
	protected static final String PLUGIN_NAME_EDEFAULT = null;
d143 1
a143 1
	 * The cached value of the '{@@link #getPluginName() <em>Plugin Name</em>}' attribute.
d146 1
a146 1
	 * @@see #getPluginName()
d150 1
a150 1
	protected String pluginName = PLUGIN_NAME_EDEFAULT;
d153 1
a153 1
	 * The default value of the '{@@link #getProviderName() <em>Provider Name</em>}' attribute.
d156 1
a156 1
	 * @@see #getProviderName()
d160 1
a160 1
	protected static final String PROVIDER_NAME_EDEFAULT = "Sample Plugin Provider, Inc";
d163 1
a163 1
	 * The cached value of the '{@@link #getProviderName() <em>Provider Name</em>}' attribute.
d166 1
a166 1
	 * @@see #getProviderName()
d170 1
a170 1
	protected String providerName = PROVIDER_NAME_EDEFAULT;
d193 1
a193 1
	 * The default value of the '{@@link #getPluginClassName() <em>Plugin Class Name</em>}' attribute.
d196 1
a196 1
	 * @@see #getPluginClassName()
d200 1
a200 1
	protected static final String PLUGIN_CLASS_NAME_EDEFAULT = null;
d203 1
a203 1
	 * The cached value of the '{@@link #getPluginClassName() <em>Plugin Class Name</em>}' attribute.
d206 1
a206 1
	 * @@see #getPluginClassName()
d210 1
a210 1
	protected String pluginClassName = PLUGIN_CLASS_NAME_EDEFAULT;
d213 1
a213 1
	 * The default value of the '{@@link #getEditorPackageName() <em>Editor Package Name</em>}' attribute.
d216 1
a216 1
	 * @@see #getEditorPackageName()
d220 1
a220 1
	protected static final String EDITOR_PACKAGE_NAME_EDEFAULT = null;
d223 1
a223 1
	 * The cached value of the '{@@link #getEditorPackageName() <em>Editor Package Name</em>}' attribute.
d226 1
a226 1
	 * @@see #getEditorPackageName()
d230 1
a230 1
	protected String editorPackageName = EDITOR_PACKAGE_NAME_EDEFAULT;
d233 1
a233 1
	 * The default value of the '{@@link #getProvidersPackageName() <em>Providers Package Name</em>}' attribute.
d236 1
a236 1
	 * @@see #getProvidersPackageName()
d240 1
a240 1
	protected static final String PROVIDERS_PACKAGE_NAME_EDEFAULT = null;
d243 1
a243 1
	 * The cached value of the '{@@link #getProvidersPackageName() <em>Providers Package Name</em>}' attribute.
d246 1
a246 1
	 * @@see #getProvidersPackageName()
d250 1
a250 1
	protected String providersPackageName = PROVIDERS_PACKAGE_NAME_EDEFAULT;
d1019 6
a1028 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				return getPluginID();
a1030 4
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				return getEditorPackageName();
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				return getProvidersPackageName();
d1086 9
a1100 3
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				setPluginID((String)newValue);
				return;
a1103 6
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				setEditorPackageName((String)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				setProvidersPackageName((String)newValue);
				return;
d1163 9
a1177 3
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				setPluginID(PLUGIN_ID_EDEFAULT);
				return;
a1180 6
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				setEditorPackageName(EDITOR_PACKAGE_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				setProvidersPackageName(PROVIDERS_PACKAGE_NAME_EDEFAULT);
				return;
d1230 6
a1239 2
			case GMFGenPackage.GEN_DIAGRAM__PLUGIN_ID:
				return PLUGIN_ID_EDEFAULT == null ? pluginID != null : !PLUGIN_ID_EDEFAULT.equals(pluginID);
a1241 4
			case GMFGenPackage.GEN_DIAGRAM__EDITOR_PACKAGE_NAME:
				return EDITOR_PACKAGE_NAME_EDEFAULT == null ? editorPackageName != null : !EDITOR_PACKAGE_NAME_EDEFAULT.equals(editorPackageName);
			case GMFGenPackage.GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME:
				return PROVIDERS_PACKAGE_NAME_EDEFAULT == null ? providersPackageName != null : !PROVIDERS_PACKAGE_NAME_EDEFAULT.equals(providersPackageName);
d1269 6
a1278 2
		result.append(", pluginID: ");
		result.append(pluginID);
a1280 4
		result.append(", editorPackageName: ");
		result.append(editorPackageName);
		result.append(", providersPackageName: ");
		result.append(providersPackageName);
@


1.8
log
@[dstadnik] #112189 remove editProviders package attribute from genmodel
@
text
@a12 1
import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
a43 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCommandsPackageName <em>Commands Package Name</em>}</li>
a132 20
	 * The default value of the '{@@link #getCommandsPackageName() <em>Commands Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCommandsPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String COMMANDS_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCommandsPackageName() <em>Commands Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCommandsPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String commandsPackageName = COMMANDS_PACKAGE_NAME_EDEFAULT;

	/**
a561 29
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCommandsPackageNameGen() {
		return commandsPackageName;
	}

	public String getCommandsPackageName() {
		String value = getCommandsPackageNameGen();
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".edit.commands";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCommandsPackageName(String newCommandsPackageName) {
		String oldCommandsPackageName = commandsPackageName;
		commandsPackageName = newCommandsPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__COMMANDS_PACKAGE_NAME, oldCommandsPackageName, commandsPackageName));
	}

a912 22
	 * @@generated
	 */
	public GenClass findGenClass(EClass domainMetaClass) {
		// TODO: implement this method
		// Ensure that you remove @@generated or mark it @@generated NOT
		throw new UnsupportedOperationException();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenFeature findGenFeature(EStructuralFeature domainMetaFeature) {
		// TODO: implement this method
		// Ensure that you remove @@generated or mark it @@generated NOT
		throw new UnsupportedOperationException();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
d1003 2
a1018 2
			case GMFGenPackage.GEN_DIAGRAM__COMMANDS_PACKAGE_NAME:
				return getCommandsPackageName();
d1063 3
a1085 3
			case GMFGenPackage.GEN_DIAGRAM__COMMANDS_PACKAGE_NAME:
				setCommandsPackageName((String)newValue);
				return;
d1142 3
a1162 3
			case GMFGenPackage.GEN_DIAGRAM__COMMANDS_PACKAGE_NAME:
				setCommandsPackageName(COMMANDS_PACKAGE_NAME_EDEFAULT);
				return;
d1216 2
a1229 2
			case GMFGenPackage.GEN_DIAGRAM__COMMANDS_PACKAGE_NAME:
				return COMMANDS_PACKAGE_NAME_EDEFAULT == null ? commandsPackageName != null : !COMMANDS_PACKAGE_NAME_EDEFAULT.equals(commandsPackageName);
a1268 2
		result.append(", commandsPackageName: ");
		result.append(commandsPackageName);
@


1.7
log
@#111775 stale properties in gmfgen
#111784 GenChildContainer extends GenCommonBase
@
text
@a45 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEditProvidersPackageName <em>Edit Providers Package Name</em>}</li>
a154 20
	 * The default value of the '{@@link #getEditProvidersPackageName() <em>Edit Providers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditProvidersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_PROVIDERS_PACKAGE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditProvidersPackageName() <em>Edit Providers Package Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditProvidersPackageName()
	 * @@generated
	 * @@ordered
	 */
	protected String editProvidersPackageName = EDIT_PROVIDERS_PACKAGE_NAME_EDEFAULT;

	/**
a612 29
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditProvidersPackageNameGen() {
		return editProvidersPackageName;
	}

	public String getEditProvidersPackageName() {
		String value = getEditProvidersPackageNameGen();
		if (value == null || value.length() == 0) {
			return getPackageNamePrefix() + ".providers";
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditProvidersPackageName(String newEditProvidersPackageName) {
		String oldEditProvidersPackageName = editProvidersPackageName;
		editProvidersPackageName = newEditProvidersPackageName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EDIT_PROVIDERS_PACKAGE_NAME, oldEditProvidersPackageName, editProvidersPackageName));
	}

d774 1
a774 1
			return getPackageNamePrefix() + ".edit.providers";
a1091 2
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PROVIDERS_PACKAGE_NAME:
				return getEditProvidersPackageName();
a1158 3
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PROVIDERS_PACKAGE_NAME:
				setEditProvidersPackageName((String)newValue);
				return;
a1235 3
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PROVIDERS_PACKAGE_NAME:
				setEditProvidersPackageName(EDIT_PROVIDERS_PACKAGE_NAME_EDEFAULT);
				return;
a1302 2
			case GMFGenPackage.GEN_DIAGRAM__EDIT_PROVIDERS_PACKAGE_NAME:
				return EDIT_PROVIDERS_PACKAGE_NAME_EDEFAULT == null ? editProvidersPackageName != null : !EDIT_PROVIDERS_PACKAGE_NAME_EDEFAULT.equals(editProvidersPackageName);
a1343 2
		result.append(", editProvidersPackageName: ");
		result.append(editProvidersPackageName);
@


1.6
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@a54 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getMetaInfoFactoryClassName <em>Meta Info Factory Class Name</em>}</li>
a335 20
	 * The default value of the '{@@link #getMetaInfoFactoryClassName() <em>Meta Info Factory Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetaInfoFactoryClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String META_INFO_FACTORY_CLASS_NAME_EDEFAULT = "MetaInfoProviderAdapterFactory";

	/**
	 * The cached value of the '{@@link #getMetaInfoFactoryClassName() <em>Meta Info Factory Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetaInfoFactoryClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String metaInfoFactoryClassName = META_INFO_FACTORY_CLASS_NAME_EDEFAULT;

	/**
a887 21
	public String getMetaInfoFactoryClassName() {
		return metaInfoFactoryClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMetaInfoFactoryClassName(String newMetaInfoFactoryClassName) {
		String oldMetaInfoFactoryClassName = metaInfoFactoryClassName;
		metaInfoFactoryClassName = newMetaInfoFactoryClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__META_INFO_FACTORY_CLASS_NAME, oldMetaInfoFactoryClassName, metaInfoFactoryClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a1013 9
	 * @@generated NOT
	 */
	public String getMetaInfoFactoryQualifiedClassName() {
		return getEditProvidersPackageName() + '.' + getMetaInfoFactoryClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
a1125 2
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_PROVIDER_CLASS_NAME:
				return getMetaInfoProviderClassName();
a1159 2
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_FACTORY_CLASS_NAME:
				return getMetaInfoFactoryClassName();
a1187 3
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_PROVIDER_CLASS_NAME:
				setMetaInfoProviderClassName((String)newValue);
				return;
a1237 3
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_FACTORY_CLASS_NAME:
				setMetaInfoFactoryClassName((String)newValue);
				return;
a1269 3
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_PROVIDER_CLASS_NAME:
				setMetaInfoProviderClassName(META_INFO_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
a1317 3
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_FACTORY_CLASS_NAME:
				setMetaInfoFactoryClassName(META_INFO_FACTORY_CLASS_NAME_EDEFAULT);
				return;
a1346 2
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_PROVIDER_CLASS_NAME:
				return META_INFO_PROVIDER_CLASS_NAME_EDEFAULT == null ? metaInfoProviderClassName != null : !META_INFO_PROVIDER_CLASS_NAME_EDEFAULT.equals(metaInfoProviderClassName);
a1378 2
			case GMFGenPackage.GEN_DIAGRAM__META_INFO_FACTORY_CLASS_NAME:
				return META_INFO_FACTORY_CLASS_NAME_EDEFAULT == null ? metaInfoFactoryClassName != null : !META_INFO_FACTORY_CLASS_NAME_EDEFAULT.equals(metaInfoFactoryClassName);
a1421 2
		result.append(", metaInfoFactoryClassName: ");
		result.append(metaInfoFactoryClassName);
@


1.5
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@a10 1
import java.util.Iterator;
a20 1
import org.eclipse.emf.ecore.EPackage;
a39 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getEmfGenModel <em>Emf Gen Model</em>}</li>
d74 1
a74 11
	protected EPackage domainMetaModel = null;

	/**
	 * The cached value of the '{@@link #getEmfGenModel() <em>Emf Gen Model</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEmfGenModel()
	 * @@generated
	 * @@ordered
	 */
	protected GenModel emfGenModel = null;
d84 1
a84 1
	protected EClass domainDiagramElement = null;
d459 1
a459 1
	public EPackage getDomainMetaModel() {
d461 2
a462 2
			EPackage oldDomainMetaModel = domainMetaModel;
			domainMetaModel = (EPackage)eResolveProxy((InternalEObject)domainMetaModel);
d476 1
a476 1
	public EPackage basicGetDomainMetaModel() {
d485 2
a486 2
	public void setDomainMetaModel(EPackage newDomainMetaModel) {
		EPackage oldDomainMetaModel = domainMetaModel;
d497 1
a497 39
	public GenModel getEmfGenModel() {
		if (emfGenModel != null && emfGenModel.eIsProxy()) {
			GenModel oldEmfGenModel = emfGenModel;
			emfGenModel = (GenModel)eResolveProxy((InternalEObject)emfGenModel);
			if (emfGenModel != oldEmfGenModel) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_DIAGRAM__EMF_GEN_MODEL, oldEmfGenModel, emfGenModel));
			}
		}
		return emfGenModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenModel basicGetEmfGenModel() {
		return emfGenModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEmfGenModel(GenModel newEmfGenModel) {
		GenModel oldEmfGenModel = emfGenModel;
		emfGenModel = newEmfGenModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__EMF_GEN_MODEL, oldEmfGenModel, emfGenModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDomainDiagramElement() {
d499 2
a500 2
			EClass oldDomainDiagramElement = domainDiagramElement;
			domainDiagramElement = (EClass)eResolveProxy((InternalEObject)domainDiagramElement);
d514 1
a514 1
	public EClass basicGetDomainDiagramElement() {
d523 2
a524 2
	public void setDomainDiagramElement(EClass newDomainDiagramElement) {
		EClass oldDomainDiagramElement = domainDiagramElement;
d609 1
a609 1
			return toLowerCase(getDomainMetaModel().getName()) + ".edit.parts";
d638 1
a638 1
			return toLowerCase(getDomainMetaModel().getName()) + ".edit.commands";
d667 1
a667 1
			return toLowerCase(getDomainMetaModel().getName()) + ".providers";
d689 1
a689 1
			char[] v = getDomainMetaModel().getName().toCharArray();
d758 1
a758 1
			return getEmfGenModel().getModelPluginID() + ".gmf.editor";
d787 1
a787 1
			return CodeGenUtil.validJavaIdentifier(getEmfGenModel().getModelName()) + "DiagramEditorPlugin";
d816 1
a816 1
			return toLowerCase(getDomainMetaModel().getName()) + ".editor";
d845 1
a845 1
			return toLowerCase(getDomainMetaModel().getName()) + ".edit.providers";
d958 1
a958 1
			return getEmfGenModel().getModelName().toLowerCase() + "_diagram";
d1022 9
d1065 1
a1065 1
	 * @@generated NOT
d1068 3
a1070 8
		GenPackage gp = getEmfGenModel().findGenPackage(domainMetaClass.getEPackage());
		for (Iterator it = gp.getGenClasses().iterator(); it.hasNext();) {
			GenClass genClass = (GenClass) it.next();
			if (genClass.getEcoreClass().equals(domainMetaClass)) {
				return genClass;
			}
		}
		throw new IllegalStateException("Can't find genClass for class '" + domainMetaClass.getName() + "' in package " + gp.getPackageName());
d1076 1
a1076 1
	 * @@generated NOT
d1079 3
a1081 8
		GenClass genClass = findGenClass(domainMetaFeature.getEContainingClass());
		for (Iterator it = genClass.getGenFeatures().iterator(); it.hasNext();) {
			GenFeature next = (GenFeature) it.next();
			if (next.getEcoreFeature().equals(domainMetaFeature)) {
				return next;
			}
		}
		throw new IllegalStateException("Can't find genFeature for feature '" + domainMetaFeature.getName() + "' in class " + genClass.getName());
a1181 3
			case GMFGenPackage.GEN_DIAGRAM__EMF_GEN_MODEL:
				if (resolve) return getEmfGenModel();
				return basicGetEmfGenModel();
d1247 1
a1247 4
				setDomainMetaModel((EPackage)newValue);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EMF_GEN_MODEL:
				setEmfGenModel((GenModel)newValue);
d1250 1
a1250 1
				setDomainDiagramElement((EClass)newValue);
d1335 1
a1335 4
				setDomainMetaModel((EPackage)null);
				return;
			case GMFGenPackage.GEN_DIAGRAM__EMF_GEN_MODEL:
				setEmfGenModel((GenModel)null);
d1338 1
a1338 1
				setDomainDiagramElement((EClass)null);
a1417 2
			case GMFGenPackage.GEN_DIAGRAM__EMF_GEN_MODEL:
				return emfGenModel != null;
d1507 4
@


1.4
log
@[dstadnik] Use Notation Model as runtime model
@
text
@d1159 1
d1165 1
@


1.3
log
@[ashatalin] Action to initialize diagram from existing domain model gets generated.
@
text
@d55 1
d290 20
d889 29
d1260 2
d1343 3
d1432 3
d1503 2
d1548 2
@


1.2
log
@nicer default package name
@
text
@d61 1
d409 20
d1000 21
d1099 9
d1222 2
d1309 3
d1395 3
d1457 2
d1500 2
@


1.1
log
@*** empty log message ***
@
text
@d618 1
a618 1
			return getDomainMetaModel().getName() + ".edit.parts";
d647 1
a647 1
			return getDomainMetaModel().getName() + ".edit.commands";
d676 1
a676 1
			return getDomainMetaModel().getName() + ".providers";
d825 1
a825 1
			return getDomainMetaModel().getName() + ".editor";
d1443 6
@

