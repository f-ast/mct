head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080930-1130:1.4
	v20080926-1245:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20080722-1827:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080528-1052:1.4
	v20080521:1.4
	v20080516-1543:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080508-2000:1.4
	v20080507-1326:1.4
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080411-0411:1.4
	v20080404-1111:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.4
	v20071222-1111:1.4
	v20071214-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071112-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070928-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070405-1100:1.4
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.3
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070103-0300:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.03.20.20.15.02;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	1c03460040bd4567;

1.3
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	444245f8090b4567;

1.2
date	2006.11.02.14.12.22;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.11.18.21.36;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@NavigatorReference type constant name corrected.
Generating wrapper for domain model navigator nodes to preserve navigator tree selection/expansion on model files reload.
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Gen Navigator Reference Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenNavigatorReferenceType()
 * @@model
 * @@generated
 */
public enum GenNavigatorReferenceType implements Enumerator
{
	/**
	 * The '<em><b>Children</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #CHILDREN
	 * @@generated
	 * @@ordered
	 */
	CHILDREN_LITERAL(0, "children", "children"),
	/**
	 * The '<em><b>Out target</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #OUT_TARGET
	 * @@generated
	 * @@ordered
	 */
	OUT_TARGET_LITERAL(1, "out_target", "out_target"), /**
	 * The '<em><b>In source</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #IN_SOURCE
	 * @@generated
	 * @@ordered
	 */
	IN_SOURCE_LITERAL(2, "in_source", "in_source");
	/**
	 * The '<em><b>Children</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Children</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #CHILDREN_LITERAL
	 * @@model name="children"
	 * @@generated
	 * @@ordered
	 */
	public static final int CHILDREN = 0;

	/**
	 * The '<em><b>Out target</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Out target</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #OUT_TARGET_LITERAL
	 * @@model name="out_target"
	 * @@generated
	 * @@ordered
	 */
	public static final int OUT_TARGET = 1;

	/**
	 * The '<em><b>In source</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>In source</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #IN_SOURCE_LITERAL
	 * @@model name="in_source"
	 * @@generated
	 * @@ordered
	 */
	public static final int IN_SOURCE = 2;

	/**
	 * An array of all the '<em><b>Gen Navigator Reference Type</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private static final GenNavigatorReferenceType[] VALUES_ARRAY =
		new GenNavigatorReferenceType[] {
			CHILDREN_LITERAL,
			OUT_TARGET_LITERAL,
			IN_SOURCE_LITERAL,
		};

	/**
	 * A public read-only list of all the '<em><b>Gen Navigator Reference Type</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static final List<GenNavigatorReferenceType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Gen Navigator Reference Type</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static GenNavigatorReferenceType get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			GenNavigatorReferenceType result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Gen Navigator Reference Type</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static GenNavigatorReferenceType getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			GenNavigatorReferenceType result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Gen Navigator Reference Type</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static GenNavigatorReferenceType get(int value) {
		switch (value) {
			case CHILDREN: return CHILDREN_LITERAL;
			case OUT_TARGET: return OUT_TARGET_LITERAL;
			case IN_SOURCE: return IN_SOURCE_LITERAL;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private GenNavigatorReferenceType(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		return literal;
	}
}
@


1.3
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d36 1
a36 1
	 * The '<em><b>Out taget</b></em>' literal object.
d39 1
a39 1
	 * @@see #OUT_TAGET
d43 1
a43 2
	OUT_TAGET_LITERAL(1, "out_taget", "out_taget"),
	/**
d68 1
a68 1
	 * The '<em><b>Out taget</b></em>' literal value.
d71 1
a71 1
	 * If the meaning of '<em><b>Out taget</b></em>' literal object isn't clear,
d75 2
a76 2
	 * @@see #OUT_TAGET_LITERAL
	 * @@model name="out_taget"
d80 1
a80 1
	public static final int OUT_TAGET = 1;
d106 1
a106 1
			OUT_TAGET_LITERAL,
d159 1
a159 1
			case OUT_TAGET: return OUT_TAGET_LITERAL;
@


1.2
log
@Linked elements are leafs by default.
@
text
@d13 1
a13 1
import org.eclipse.emf.common.util.AbstractEnumerator;
d24 29
a52 1
public final class GenNavigatorReferenceType extends AbstractEnumerator {
a98 30
	 * The '<em><b>Children</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #CHILDREN
	 * @@generated
	 * @@ordered
	 */
	public static final GenNavigatorReferenceType CHILDREN_LITERAL = new GenNavigatorReferenceType(CHILDREN, "children", "children");

	/**
	 * The '<em><b>Out taget</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #OUT_TAGET
	 * @@generated
	 * @@ordered
	 */
	public static final GenNavigatorReferenceType OUT_TAGET_LITERAL = new GenNavigatorReferenceType(OUT_TAGET, "out_taget", "out_taget");

	/**
	 * The '<em><b>In source</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #IN_SOURCE
	 * @@generated
	 * @@ordered
	 */
	public static final GenNavigatorReferenceType IN_SOURCE_LITERAL = new GenNavigatorReferenceType(IN_SOURCE, "in_source", "in_source");

	/**
d117 1
a117 1
	public static final List VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));
d163 1
a163 1
		return null;	
d167 21
d194 30
a223 1
		super(value, name, literal);
d226 11
a236 1
} //GenNavigatorReferenceType
@


1.1
log
@Model navigator, initial version.
@
text
@a70 15
	 * The '<em><b>Default</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Default</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #DEFAULT_LITERAL
	 * @@model name="default"
	 * @@generated
	 * @@ordered
	 */
	public static final int DEFAULT = 3;

	/**
a100 10
	 * The '<em><b>Default</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #DEFAULT
	 * @@generated
	 * @@ordered
	 */
	public static final GenNavigatorReferenceType DEFAULT_LITERAL = new GenNavigatorReferenceType(DEFAULT, "default", "default");

	/**
a110 1
			DEFAULT_LITERAL,
a163 1
			case DEFAULT: return DEFAULT_LITERAL;
@

