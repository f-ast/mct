head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080722-1827:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.5
	v20080521:1.5
	v20080516-1543:1.5
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080411-0411:1.5
	v20080404-1111:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070928-0000:1.5
	v20070921-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070504-1000:1.5
	v20070427-0600:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070405-1100:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070307-0700:1.4
	v20070301-1200:1.4
	v20070228-2000:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-1300:1.4
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.03.14.14.39.36;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	444245f8090b4567;

1.4
date	2006.01.05.17.30.30;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.21.09.35.37;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.18.13.55.34;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.13.11.42.21;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Link Label Alignment</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * <!-- begin-model-doc -->
 * Constants from {@@link org.eclipse.draw2d.ConnectionLocator}
 * <!-- end-model-doc -->
 * @@see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getLinkLabelAlignment()
 * @@model
 * @@generated
 */
public enum LinkLabelAlignment implements Enumerator
{
	/**
	 * The '<em><b>MIDDLE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #MIDDLE
	 * @@generated
	 * @@ordered
	 */
	MIDDLE_LITERAL(4, "MIDDLE", "MIDDLE"),
	/**
	 * The '<em><b>TARGET</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #TARGET
	 * @@generated
	 * @@ordered
	 */
	TARGET_LITERAL(3, "TARGET", "TARGET"),
	/**
	 * The '<em><b>SOURCE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #SOURCE
	 * @@generated
	 * @@ordered
	 */
	SOURCE_LITERAL(2, "SOURCE", "SOURCE");
	/**
	 * The '<em><b>MIDDLE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>MIDDLE</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #MIDDLE_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int MIDDLE = 4;

	/**
	 * The '<em><b>TARGET</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>TARGET</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #TARGET_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int TARGET = 3;

	/**
	 * The '<em><b>SOURCE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>SOURCE</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #SOURCE_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int SOURCE = 2;

	/**
	 * An array of all the '<em><b>Link Label Alignment</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private static final LinkLabelAlignment[] VALUES_ARRAY =
		new LinkLabelAlignment[] {
			MIDDLE_LITERAL,
			TARGET_LITERAL,
			SOURCE_LITERAL,
		};

	/**
	 * A public read-only list of all the '<em><b>Link Label Alignment</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static final List<LinkLabelAlignment> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Link Label Alignment</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static LinkLabelAlignment get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			LinkLabelAlignment result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Link Label Alignment</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static LinkLabelAlignment getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			LinkLabelAlignment result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Link Label Alignment</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static LinkLabelAlignment get(int value) {
		switch (value) {
			case MIDDLE: return MIDDLE_LITERAL;
			case TARGET: return TARGET_LITERAL;
			case SOURCE: return SOURCE_LITERAL;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private LinkLabelAlignment(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		return literal;
	}
}
@


1.4
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d13 1
a13 1
import org.eclipse.emf.common.util.AbstractEnumerator;
d27 29
a55 1
public final class LinkLabelAlignment extends AbstractEnumerator {
a101 30
	 * The '<em><b>MIDDLE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #MIDDLE
	 * @@generated
	 * @@ordered
	 */
	public static final LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment(MIDDLE, "MIDDLE", "MIDDLE");

	/**
	 * The '<em><b>TARGET</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #TARGET
	 * @@generated
	 * @@ordered
	 */
	public static final LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment(TARGET, "TARGET", "TARGET");

	/**
	 * The '<em><b>SOURCE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #SOURCE
	 * @@generated
	 * @@ordered
	 */
	public static final LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment(SOURCE, "SOURCE", "SOURCE");

	/**
d120 1
a120 1
	public static final List VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));
d166 1
a166 1
		return null;	
d170 21
d197 30
a226 1
		super(value, name, literal);
d229 11
a239 1
} //LinkLabelAlignment
@


1.3
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@d81 1
a81 1
	public static final LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment(MIDDLE, "MIDDLE");
d91 1
a91 1
	public static final LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment(TARGET, "TARGET");
d101 1
a101 1
	public static final LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment(SOURCE, "SOURCE");
d125 16
d146 1
a146 1
	public static LinkLabelAlignment get(String name) {
d149 1
a149 1
			if (result.toString().equals(name)) {
d157 1
a157 1
	 * Returns the '<em><b>Link Label Alignment</b></em>' literal with the specified value.
d177 2
a178 2
	private LinkLabelAlignment(int value, String name) {
		super(value, name);
@


1.2
log
@#117026
Generating Shape edit parts for inner elements if necessary.
@
text
@d81 1
a81 1
	public static final LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment(MIDDLE, "MIDDLE", "MIDDLE");
d91 1
a91 1
	public static final LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment(TARGET, "TARGET", "TARGET");
d101 1
a101 1
	public static final LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment(SOURCE, "SOURCE", "SOURCE");
a124 16
	 * Returns the '<em><b>Link Label Alignment</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static LinkLabelAlignment get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			LinkLabelAlignment result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
d130 1
a130 1
	public static LinkLabelAlignment getByName(String name) {
d133 1
a133 1
			if (result.getName().equals(name)) {
d141 1
a141 1
	 * Returns the '<em><b>Link Label Alignment</b></em>' literal with the specified integer value.
d161 2
a162 2
	private LinkLabelAlignment(int value, String name, String literal) {
		super(value, name, literal);
@


1.1
log
@[dstadnik] #112194 Link label should be positioned on the link accordingly to it's weight defined
in gmfgen model
@
text
@d81 1
a81 1
	public static final LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment(MIDDLE, "MIDDLE");
d91 1
a91 1
	public static final LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment(TARGET, "TARGET");
d101 1
a101 1
	public static final LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment(SOURCE, "SOURCE");
d125 16
d146 1
a146 1
	public static LinkLabelAlignment get(String name) {
d149 1
a149 1
			if (result.toString().equals(name)) {
d157 1
a157 1
	 * Returns the '<em><b>Link Label Alignment</b></em>' literal with the specified value.
d177 2
a178 2
	private LinkLabelAlignment(int value, String name) {
		super(value, name);
@

