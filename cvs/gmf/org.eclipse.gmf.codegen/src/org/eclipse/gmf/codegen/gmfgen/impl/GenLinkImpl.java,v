head	1.43;
access;
symbols
	v20081022-1925:1.43
	v20081015-1925:1.43
	v20081008-1925:1.43
	v20081001-1925:1.43
	v20080930-1130:1.43
	v20080926-1245:1.43
	v20080924-1925:1.43
	v20080917-1925:1.43
	v20080911-1728:1.43
	v20080910-1520:1.43
	v20080903-1520:1.43
	v20080827-1520:1.42
	v20080813-1520:1.39
	v20080806-1520:1.39
	v20080722-1827:1.39
	v20080718-1731:1.39
	v20080716-1600:1.39
	v20080716-1642:1.39
	R2_1_maintenance:1.39.0.2
	Root_R2_1_maintenance:1.39
	R2_1_0:1.39
	v20080610-1132:1.39
	v20080603-1553:1.38
	v20080528-1052:1.38
	v20080521:1.38
	v20080516-1543:1.38
	v20080516-1143:1.38
	v20080512-1200:1.38
	v20080508-2000:1.38
	v20080507-1326:1.38
	v20080503-1740:1.38
	v20080501-1739:1.38
	v20080425-1959:1.38
	v20080417-1610:1.37
	v20080411-0411:1.37
	v20080404-1111:1.37
	v20080322-0000:1.37
	v20080222-1200:1.36
	v20080215-1500:1.36
	v20080207-0207:1.35.2.1
	v20071222-1111:1.36
	v20071214-1111:1.36
	v20071130-1111:1.36
	v20071124-0000:1.35.2.1
	v20071112-0000:1.35
	v20071108-0000:1.35
	v20071003-0000:1.35
	v20070928-0000:1.35
	v20070921-0000:1.35
	v20070915-0000:1.35
	v20070903-0000:1.35
	v20070809-0000:1.35
	R2_0_maintenance:1.35.0.2
	R2_0:1.35
	R4_20:1.35
	v20070621-0000:1.35
	RC3_20:1.35
	v20070614-1400:1.35
	v20070608-1300:1.35
	v20070605-1400:1.35
	v20070601-1400:1.35
	v20070525-1500:1.35
	v20070520-1200:1.35
	v20070518-1300:1.35
	v20070504-1000:1.35
	v20070427-0600:1.35
	v20070420-1000:1.35
	v20070413-1300:1.35
	v20070405-1100:1.34
	v20070403-1500:1.34
	v20070330-1300:1.34
	v20060330-1300:1.34
	v20070322-1100:1.34
	v20060316-0600:1.34
	v20070307-0700:1.32
	v20070301-1200:1.32
	v20070228-2000:1.32
	v20070221-1500:1.32
	v20070208-1800:1.32
	v20070202-0200:1.30
	v20070103-0300:1.30
	M4_20:1.30
	v20061222-1800:1.30
	v20061218-1200:1.30
	v20061214-0000:1.30
	v20061120-1300:1.30
	M3_20:1.30
	v20061117-0800:1.30
	v20061027-1200:1.30
	v20061020-1000:1.30
	v20061013-1330:1.30
	v20060919-0800:1.30
	v20060907-1100:1.30
	M1_20:1.30
	v20060904-1500:1.30
	v20060824-1600:1.30
	v20060817-1500:1.30
	v20060728-0500:1.30
	v20060713-1700:1.30
	R1_0_maintenance:1.30.0.2
	R1_0:1.30
	v20060627-1200:1.30
	v20060626-1420:1.30
	v20060620-0400:1.30
	v20060616-1400:1.30
	v20060616-1200:1.30
	v20060609-1400:1.30
	v20060531-1730:1.26
	v20060530-1930:1.26
	v20060526-1200:1.26
	v20060519-1300:1.26
	v20060519-0800:1.26
	v20060512-1000:1.26
	I20060512-1000:1.26
	I20060505-1400:1.26
	I20060428-1300:1.26
	I20060424-0500:1.26
	I20060424-0300:1.26
	M6_10:1.26
	I20060407-1200:1.25
	I20060331-1000:1.23
	I20060324-0300:1.23
	I20060317-1300:1.23
	I20060317-1200:1.23
	I20060316-1300:1.23
	I20060309-1300:1.23
	M5_10:1.23
	S20060303-1600:1.23
	I20060227-1730:1.22
	I20060216-1945:1.22
	I20060210-1715:1.22
	I20060209-1815:1.22
	I20060203-0830:1.21
	I20060202-1415:1.20
	I20060129-1145:1.20
	I20060127-0900:1.20
	I20060120-1530:1.19
	I20060113-1700:1.19
	M4_10:1.19
	I20060107-1100:1.19
	I20060105-1630:1.19
	I20051230-1230:1.18
	I20051223-1100:1.18
	I20051217-0925:1.18
	I20051208-2000:1.18
	I20051201-1800:1.17
	I20051124-2000:1.16
	M3_10:1.15
	I20051118-1245:1.15
	I20051111-1800:1.14
	I20051106-0900:1.13
	v20051030:1.13
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.43
date	2008.08.29.11.42.44;	author dstadnik;	state Exp;
branches;
next	1.42;
commitid	693e48b7e0ae4567;

1.42
date	2008.08.27.12.27.19;	author ashatalin;	state Exp;
branches;
next	1.41;
commitid	e6d48b548264567;

1.41
date	2008.08.22.15.20.16;	author atikhomirov;	state Exp;
branches;
next	1.40;
commitid	1abb48aed9234567;

1.40
date	2008.08.19.12.47.53;	author dstadnik;	state Exp;
branches;
next	1.39;
commitid	24f848aac0f34567;

1.39
date	2008.06.05.18.26.24;	author dstadnik;	state Exp;
branches;
next	1.38;
commitid	484148482f664567;

1.38
date	2008.04.18.14.43.23;	author atikhomirov;	state Exp;
branches;
next	1.37;
commitid	2e1d4808b3814567;

1.37
date	2008.03.04.16.50.38;	author atikhomirov;	state Exp;
branches;
next	1.36;
commitid	5e5047cd7dd64567;

1.36
date	2007.11.19.18.59.09;	author dstadnik;	state Exp;
branches;
next	1.35;
commitid	55764741dcf24567;

1.35
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches
	1.35.2.1;
next	1.34;
commitid	725b461c97d64567;

1.34
date	2007.03.15.16.11.54;	author dstadnik;	state Exp;
branches;
next	1.33;
commitid	620045f9703f4567;

1.33
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.32;
commitid	444245f8090b4567;

1.32
date	2007.01.29.18.09.13;	author ashatalin;	state Exp;
branches;
next	1.31;
commitid	21cf45be38464567;

1.31
date	2007.01.17.13.12.34;	author ashatalin;	state Exp;
branches;
next	1.30;
commitid	3d0045ae20c04567;

1.30
date	2006.06.07.13.52.17;	author dstadnik;	state Exp;
branches;
next	1.29;

1.29
date	2006.06.07.09.29.01;	author dstadnik;	state Exp;
branches;
next	1.28;

1.28
date	2006.06.06.12.02.13;	author dstadnik;	state Exp;
branches;
next	1.27;

1.27
date	2006.06.06.10.52.00;	author dstadnik;	state Exp;
branches;
next	1.26;

1.26
date	2006.04.12.08.48.33;	author dstadnik;	state Exp;
branches;
next	1.25;

1.25
date	2006.04.06.14.16.01;	author dstadnik;	state Exp;
branches;
next	1.24;

1.24
date	2006.04.03.12.52.48;	author dstadnik;	state Exp;
branches;
next	1.23;

1.23
date	2006.03.03.13.22.36;	author dstadnik;	state Exp;
branches;
next	1.22;

1.22
date	2006.02.03.14.04.47;	author dstadnik;	state Exp;
branches;
next	1.21;

1.21
date	2006.02.03.12.38.15;	author dstadnik;	state Exp;
branches;
next	1.20;

1.20
date	2006.01.25.16.43.38;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.01.05.17.30.30;	author atikhomirov;	state Exp;
branches;
next	1.18;

1.18
date	2005.12.05.19.45.05;	author ashatalin;	state Exp;
branches;
next	1.17;

1.17
date	2005.11.29.18.33.26;	author atikhomirov;	state Exp;
branches;
next	1.16;

1.16
date	2005.11.21.09.35.37;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2005.11.18.08.35.38;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2005.11.08.15.36.54;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.26.18.43.48;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.24.14.58.46;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.20.16.04.34;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.13.12.45.56;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.11.16.43.53;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.11.12.25.35;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.10.12.57.39;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.07.13.01.35;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.03.19.09.14;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.29.09.49.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.29;	author atikhomirov;	state Exp;
branches;
next	;

1.35.2.1
date	2007.11.20.13.03.23;	author dstadnik;	state Exp;
branches;
next	;
commitid	6b764742db134567;


desc
@@


1.43
log
@[245681] allow to specify whether link is reroutable
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;
import java.util.LinkedList;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.BasicEList;
import org.eclipse.emf.common.util.ECollections;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenChildLabelNode;
import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
import org.eclipse.gmf.codegen.gmfgen.GenLink;
import org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints;
import org.eclipse.gmf.codegen.gmfgen.GenLinkEnd;
import org.eclipse.gmf.codegen.gmfgen.GenLinkLabel;
import org.eclipse.gmf.codegen.gmfgen.GenNode;
import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Link</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getGenOutgoingLinks <em>Gen Outgoing Links</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getGenIncomingLinks <em>Gen Incoming Links</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getDiagram <em>Diagram</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getModelFacet <em>Model Facet</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getLabels <em>Labels</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isOutgoingCreationAllowed <em>Outgoing Creation Allowed</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isIncomingCreationAllowed <em>Incoming Creation Allowed</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isViewDirectionAlignedWithModel <em>View Direction Aligned With Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getCreationConstraints <em>Creation Constraints</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isTargetReorientingAllowed <em>Target Reorienting Allowed</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isSourceReorientingAllowed <em>Source Reorienting Allowed</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getCreateCommandClassName <em>Create Command Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getReorientCommandClassName <em>Reorient Command Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isTreeBranch <em>Tree Branch</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getSources <em>Sources</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getTargets <em>Targets</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
	/**
	 * The cached value of the '{@@link #getModelFacet() <em>Model Facet</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getModelFacet()
	 * @@generated
	 * @@ordered
	 */
	protected LinkModelFacet modelFacet;

	/**
	 * The cached value of the '{@@link #getLabels() <em>Labels</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabels()
	 * @@generated
	 * @@ordered
	 */
	protected EList<GenLinkLabel> labels;

	/**
	 * The default value of the '{@@link #isOutgoingCreationAllowed() <em>Outgoing Creation Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isOutgoingCreationAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean OUTGOING_CREATION_ALLOWED_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isOutgoingCreationAllowed() <em>Outgoing Creation Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isOutgoingCreationAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected boolean outgoingCreationAllowed = OUTGOING_CREATION_ALLOWED_EDEFAULT;

	/**
	 * The default value of the '{@@link #isIncomingCreationAllowed() <em>Incoming Creation Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isIncomingCreationAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean INCOMING_CREATION_ALLOWED_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isIncomingCreationAllowed() <em>Incoming Creation Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isIncomingCreationAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected boolean incomingCreationAllowed = INCOMING_CREATION_ALLOWED_EDEFAULT;

	/**
	 * The default value of the '{@@link #isViewDirectionAlignedWithModel() <em>View Direction Aligned With Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isViewDirectionAlignedWithModel()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean VIEW_DIRECTION_ALIGNED_WITH_MODEL_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isViewDirectionAlignedWithModel() <em>View Direction Aligned With Model</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isViewDirectionAlignedWithModel()
	 * @@generated
	 * @@ordered
	 */
	protected boolean viewDirectionAlignedWithModel = VIEW_DIRECTION_ALIGNED_WITH_MODEL_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getCreationConstraints() <em>Creation Constraints</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationConstraints()
	 * @@generated
	 * @@ordered
	 */
	protected GenLinkConstraints creationConstraints;

	/**
	 * The default value of the '{@@link #isTargetReorientingAllowed() <em>Target Reorienting Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isTargetReorientingAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean TARGET_REORIENTING_ALLOWED_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isTargetReorientingAllowed() <em>Target Reorienting Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isTargetReorientingAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected boolean targetReorientingAllowed = TARGET_REORIENTING_ALLOWED_EDEFAULT;

	/**
	 * The default value of the '{@@link #isSourceReorientingAllowed() <em>Source Reorienting Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSourceReorientingAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean SOURCE_REORIENTING_ALLOWED_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isSourceReorientingAllowed() <em>Source Reorienting Allowed</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSourceReorientingAllowed()
	 * @@generated
	 * @@ordered
	 */
	protected boolean sourceReorientingAllowed = SOURCE_REORIENTING_ALLOWED_EDEFAULT;

	/**
	 * The default value of the '{@@link #getCreateCommandClassName() <em>Create Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreateCommandClassName() <em>Create Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getReorientCommandClassName() <em>Reorient Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReorientCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String REORIENT_COMMAND_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getReorientCommandClassName() <em>Reorient Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReorientCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String reorientCommandClassName = REORIENT_COMMAND_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #isTreeBranch() <em>Tree Branch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isTreeBranch()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean TREE_BRANCH_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isTreeBranch() <em>Tree Branch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isTreeBranch()
	 * @@generated
	 * @@ordered
	 */
	protected boolean treeBranch = TREE_BRANCH_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLinkImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenLink();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenLink> getGenOutgoingLinks() {
		return GenLinkEndOperations.getGenOutgoingLinks(this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenLink> getGenIncomingLinks() {
		return GenLinkEndOperations.getGenIncomingLinks(this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenDiagram getDiagram() {
		if (eContainerFeatureID != GMFGenPackage.GEN_LINK__DIAGRAM) return null;
		return (GenDiagram)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public LinkModelFacet getModelFacet() {
		return modelFacet;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetModelFacet(LinkModelFacet newModelFacet, NotificationChain msgs) {
		LinkModelFacet oldModelFacet = modelFacet;
		modelFacet = newModelFacet;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__MODEL_FACET, oldModelFacet, newModelFacet);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setModelFacet(LinkModelFacet newModelFacet) {
		if (newModelFacet != modelFacet) {
			NotificationChain msgs = null;
			if (modelFacet != null)
				msgs = ((InternalEObject)modelFacet).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK__MODEL_FACET, null, msgs);
			if (newModelFacet != null)
				msgs = ((InternalEObject)newModelFacet).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK__MODEL_FACET, null, msgs);
			msgs = basicSetModelFacet(newModelFacet, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__MODEL_FACET, newModelFacet, newModelFacet));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<GenLinkLabel> getLabels() {
		if (labels == null) {
			labels = new EObjectContainmentWithInverseEList<GenLinkLabel>(GenLinkLabel.class, this, GMFGenPackage.GEN_LINK__LABELS, GMFGenPackage.GEN_LINK_LABEL__LINK);
		}
		return labels;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isOutgoingCreationAllowed() {
		return outgoingCreationAllowed;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setOutgoingCreationAllowed(boolean newOutgoingCreationAllowed) {
		boolean oldOutgoingCreationAllowed = outgoingCreationAllowed;
		outgoingCreationAllowed = newOutgoingCreationAllowed;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__OUTGOING_CREATION_ALLOWED, oldOutgoingCreationAllowed, outgoingCreationAllowed));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isIncomingCreationAllowed() {
		return incomingCreationAllowed;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setIncomingCreationAllowed(boolean newIncomingCreationAllowed) {
		boolean oldIncomingCreationAllowed = incomingCreationAllowed;
		incomingCreationAllowed = newIncomingCreationAllowed;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__INCOMING_CREATION_ALLOWED, oldIncomingCreationAllowed, incomingCreationAllowed));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isViewDirectionAlignedWithModel() {
		return viewDirectionAlignedWithModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setViewDirectionAlignedWithModel(boolean newViewDirectionAlignedWithModel) {
		boolean oldViewDirectionAlignedWithModel = viewDirectionAlignedWithModel;
		viewDirectionAlignedWithModel = newViewDirectionAlignedWithModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL, oldViewDirectionAlignedWithModel, viewDirectionAlignedWithModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenLinkConstraints getCreationConstraints() {
		return creationConstraints;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetCreationConstraints(GenLinkConstraints newCreationConstraints, NotificationChain msgs) {
		GenLinkConstraints oldCreationConstraints = creationConstraints;
		creationConstraints = newCreationConstraints;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS, oldCreationConstraints, newCreationConstraints);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreationConstraints(GenLinkConstraints newCreationConstraints) {
		if (newCreationConstraints != creationConstraints) {
			NotificationChain msgs = null;
			if (creationConstraints != null)
				msgs = ((InternalEObject)creationConstraints).eInverseRemove(this, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, GenLinkConstraints.class, msgs);
			if (newCreationConstraints != null)
				msgs = ((InternalEObject)newCreationConstraints).eInverseAdd(this, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, GenLinkConstraints.class, msgs);
			msgs = basicSetCreationConstraints(newCreationConstraints, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS, newCreationConstraints, newCreationConstraints));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isTargetReorientingAllowed() {
		return targetReorientingAllowed;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTargetReorientingAllowed(boolean newTargetReorientingAllowed) {
		boolean oldTargetReorientingAllowed = targetReorientingAllowed;
		targetReorientingAllowed = newTargetReorientingAllowed;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED, oldTargetReorientingAllowed, targetReorientingAllowed));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isSourceReorientingAllowed() {
		return sourceReorientingAllowed;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSourceReorientingAllowed(boolean newSourceReorientingAllowed) {
		boolean oldSourceReorientingAllowed = sourceReorientingAllowed;
		sourceReorientingAllowed = newSourceReorientingAllowed;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED, oldSourceReorientingAllowed, sourceReorientingAllowed));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getCreateCommandClassNameGen() {
		return createCommandClassName;
	}

	public String getCreateCommandClassName() {
		return GenCommonBaseImpl.getValidClassName(getCreateCommandClassNameGen(), this, CREATE_COMMAND_SUFFIX);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreateCommandClassName(String newCreateCommandClassName) {
		String oldCreateCommandClassName = createCommandClassName;
		createCommandClassName = newCreateCommandClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__CREATE_COMMAND_CLASS_NAME, oldCreateCommandClassName, createCommandClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getReorientCommandClassNameGen() {
		return reorientCommandClassName;
	}

	public String getReorientCommandClassName() {
		return GenCommonBaseImpl.getValidClassName(getReorientCommandClassNameGen(), this, REORIENT_COMMAND_SUFFIX);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setReorientCommandClassName(String newReorientCommandClassName) {
		String oldReorientCommandClassName = reorientCommandClassName;
		reorientCommandClassName = newReorientCommandClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__REORIENT_COMMAND_CLASS_NAME, oldReorientCommandClassName, reorientCommandClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isTreeBranch() {
		return treeBranch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTreeBranch(boolean newTreeBranch) {
		boolean oldTreeBranch = treeBranch;
		treeBranch = newTreeBranch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__TREE_BRANCH, oldTreeBranch, treeBranch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenLinkEnd> getSources() {
		if (getModelFacet() == null){
			return ECollections.emptyEList();
		}
		return getCompatibleLinkEnds(getModelFacet().getSourceType());
	}
	
	private EList<GenLinkEnd> getCompatibleLinkEnds(GenClass desiredType){
		if (desiredType == null){
			return ECollections.emptyEList();
		}
		BasicEList<GenLinkEnd> result = new BasicEList<GenLinkEnd>();
		for (GenNode nextNode : getDiagram().getAllNodes()){
			if (nextNode instanceof GenChildLabelNode){
				continue;
			}
			if (canBeLinkEnd(desiredType, nextNode.getModelFacet())){
				result.add(nextNode);
			}
		}
		for (GenLink nextLink : getDiagram().getLinks()){
			if (nextLink.getModelFacet() instanceof TypeModelFacet && canBeLinkEnd(desiredType, (TypeModelFacet)nextLink.getModelFacet())){
				result.add(nextLink);
			}
		}
		return result;
	}
	
	private static boolean canBeLinkEnd(GenClass desiredEndType, TypeModelFacet actualModelFacet){
		if (desiredEndType == null || actualModelFacet == null){
			return false;
		}
		
		GenClass actualMetaclass = actualModelFacet.getMetaClass();
		return actualMetaclass != null && desiredEndType.getEcoreClass().isSuperTypeOf(actualMetaclass.getEcoreClass());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenLinkEnd> getTargets() {
		if (getModelFacet() == null){
			return ECollections.emptyEList();
		}
		return getCompatibleLinkEnds(getModelFacet().getTargetType());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenCommonBase> getAssistantSources() {
		if (getModelFacet() == null) {
			return ECollections.emptyEList();
		}
		return getParticipants(getModelFacet().getAssistantSourceTypes());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenCommonBase> getAssistantTargets() {
		if (getModelFacet() == null) {
			return ECollections.emptyEList();
		}
		return getParticipants(getModelFacet().getAssistantTargetTypes());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreateCommandQualifiedClassName() {
		return getDiagram().getEditCommandsPackageName() + '.' + getCreateCommandClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getReorientCommandQualifiedClassName() {
		return getDiagram().getEditCommandsPackageName() + '.' + getReorientCommandClassName();
	}

	/**
	 * Finds nodes that are based on the specified types.
	 */
	protected EList<GenCommonBase> getParticipants(EList<GenClass> participantTypes) {
		LinkedList<GenNode> participants = new LinkedList<GenNode>();
		for (GenNode node : getDiagram().getAllNodes()) {
			if (node.getModelFacet() != null) {
				GenClass nodeType = node.getModelFacet().getMetaClass();
				if (nodeType != null && nodeType.getEcoreClass() != null) {
					for (GenClass participantType : participantTypes) {
						if (participantType.getEcoreClass() != null
								&& participantType.getEcoreClass().isSuperTypeOf(nodeType.getEcoreClass())) {
							participants.add(node);
						}
					}
				}
			}
		}
		return new BasicEList.UnmodifiableEList<GenCommonBase>(participants.size(), participants.toArray());
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK__DIAGRAM:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_LINK__DIAGRAM, msgs);
			case GMFGenPackage.GEN_LINK__LABELS:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getLabels()).basicAdd(otherEnd, msgs);
			case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
				if (creationConstraints != null)
					msgs = ((InternalEObject)creationConstraints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS, null, msgs);
				return basicSetCreationConstraints((GenLinkConstraints)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK__DIAGRAM:
				return eBasicSetContainer(null, GMFGenPackage.GEN_LINK__DIAGRAM, msgs);
			case GMFGenPackage.GEN_LINK__MODEL_FACET:
				return basicSetModelFacet(null, msgs);
			case GMFGenPackage.GEN_LINK__LABELS:
				return ((InternalEList<?>)getLabels()).basicRemove(otherEnd, msgs);
			case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
				return basicSetCreationConstraints(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_LINK__DIAGRAM:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__LINKS, GenDiagram.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS:
				return getGenOutgoingLinks();
			case GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS:
				return getGenIncomingLinks();
			case GMFGenPackage.GEN_LINK__DIAGRAM:
				return getDiagram();
			case GMFGenPackage.GEN_LINK__MODEL_FACET:
				return getModelFacet();
			case GMFGenPackage.GEN_LINK__LABELS:
				return getLabels();
			case GMFGenPackage.GEN_LINK__OUTGOING_CREATION_ALLOWED:
				return isOutgoingCreationAllowed() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_LINK__INCOMING_CREATION_ALLOWED:
				return isIncomingCreationAllowed() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL:
				return isViewDirectionAlignedWithModel() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
				return getCreationConstraints();
			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
				return isTargetReorientingAllowed() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
				return isSourceReorientingAllowed() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_LINK__CREATE_COMMAND_CLASS_NAME:
				return getCreateCommandClassName();
			case GMFGenPackage.GEN_LINK__REORIENT_COMMAND_CLASS_NAME:
				return getReorientCommandClassName();
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				return isTreeBranch() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGenPackage.GEN_LINK__SOURCES:
				return getSources();
			case GMFGenPackage.GEN_LINK__TARGETS:
				return getTargets();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK__MODEL_FACET:
				setModelFacet((LinkModelFacet)newValue);
				return;
			case GMFGenPackage.GEN_LINK__LABELS:
				getLabels().clear();
				getLabels().addAll((Collection<? extends GenLinkLabel>)newValue);
				return;
			case GMFGenPackage.GEN_LINK__OUTGOING_CREATION_ALLOWED:
				setOutgoingCreationAllowed(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_LINK__INCOMING_CREATION_ALLOWED:
				setIncomingCreationAllowed(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL:
				setViewDirectionAlignedWithModel(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
				setCreationConstraints((GenLinkConstraints)newValue);
				return;
			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
				setTargetReorientingAllowed(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
				setSourceReorientingAllowed(((Boolean)newValue).booleanValue());
				return;
			case GMFGenPackage.GEN_LINK__CREATE_COMMAND_CLASS_NAME:
				setCreateCommandClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__REORIENT_COMMAND_CLASS_NAME:
				setReorientCommandClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				setTreeBranch(((Boolean)newValue).booleanValue());
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK__MODEL_FACET:
				setModelFacet((LinkModelFacet)null);
				return;
			case GMFGenPackage.GEN_LINK__LABELS:
				getLabels().clear();
				return;
			case GMFGenPackage.GEN_LINK__OUTGOING_CREATION_ALLOWED:
				setOutgoingCreationAllowed(OUTGOING_CREATION_ALLOWED_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__INCOMING_CREATION_ALLOWED:
				setIncomingCreationAllowed(INCOMING_CREATION_ALLOWED_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL:
				setViewDirectionAlignedWithModel(VIEW_DIRECTION_ALIGNED_WITH_MODEL_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
				setCreationConstraints((GenLinkConstraints)null);
				return;
			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
				setTargetReorientingAllowed(TARGET_REORIENTING_ALLOWED_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
				setSourceReorientingAllowed(SOURCE_REORIENTING_ALLOWED_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__CREATE_COMMAND_CLASS_NAME:
				setCreateCommandClassName(CREATE_COMMAND_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__REORIENT_COMMAND_CLASS_NAME:
				setReorientCommandClassName(REORIENT_COMMAND_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				setTreeBranch(TREE_BRANCH_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS:
				return !getGenOutgoingLinks().isEmpty();
			case GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS:
				return !getGenIncomingLinks().isEmpty();
			case GMFGenPackage.GEN_LINK__DIAGRAM:
				return getDiagram() != null;
			case GMFGenPackage.GEN_LINK__MODEL_FACET:
				return modelFacet != null;
			case GMFGenPackage.GEN_LINK__LABELS:
				return labels != null && !labels.isEmpty();
			case GMFGenPackage.GEN_LINK__OUTGOING_CREATION_ALLOWED:
				return outgoingCreationAllowed != OUTGOING_CREATION_ALLOWED_EDEFAULT;
			case GMFGenPackage.GEN_LINK__INCOMING_CREATION_ALLOWED:
				return incomingCreationAllowed != INCOMING_CREATION_ALLOWED_EDEFAULT;
			case GMFGenPackage.GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL:
				return viewDirectionAlignedWithModel != VIEW_DIRECTION_ALIGNED_WITH_MODEL_EDEFAULT;
			case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
				return creationConstraints != null;
			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
				return targetReorientingAllowed != TARGET_REORIENTING_ALLOWED_EDEFAULT;
			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
				return sourceReorientingAllowed != SOURCE_REORIENTING_ALLOWED_EDEFAULT;
			case GMFGenPackage.GEN_LINK__CREATE_COMMAND_CLASS_NAME:
				return CREATE_COMMAND_CLASS_NAME_EDEFAULT == null ? createCommandClassName != null : !CREATE_COMMAND_CLASS_NAME_EDEFAULT.equals(createCommandClassName);
			case GMFGenPackage.GEN_LINK__REORIENT_COMMAND_CLASS_NAME:
				return REORIENT_COMMAND_CLASS_NAME_EDEFAULT == null ? reorientCommandClassName != null : !REORIENT_COMMAND_CLASS_NAME_EDEFAULT.equals(reorientCommandClassName);
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				return treeBranch != TREE_BRANCH_EDEFAULT;
			case GMFGenPackage.GEN_LINK__SOURCES:
				return !getSources().isEmpty();
			case GMFGenPackage.GEN_LINK__TARGETS:
				return !getTargets().isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == GenLinkEnd.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS: return GMFGenPackage.GEN_LINK_END__GEN_OUTGOING_LINKS;
				case GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS: return GMFGenPackage.GEN_LINK_END__GEN_INCOMING_LINKS;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == GenLinkEnd.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.GEN_LINK_END__GEN_OUTGOING_LINKS: return GMFGenPackage.GEN_LINK__GEN_OUTGOING_LINKS;
				case GMFGenPackage.GEN_LINK_END__GEN_INCOMING_LINKS: return GMFGenPackage.GEN_LINK__GEN_INCOMING_LINKS;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (outgoingCreationAllowed: ");
		result.append(outgoingCreationAllowed);
		result.append(", incomingCreationAllowed: ");
		result.append(incomingCreationAllowed);
		result.append(", viewDirectionAlignedWithModel: ");
		result.append(viewDirectionAlignedWithModel);
		result.append(", targetReorientingAllowed: ");
		result.append(targetReorientingAllowed);
		result.append(", sourceReorientingAllowed: ");
		result.append(sourceReorientingAllowed);
		result.append(", createCommandClassName: ");
		result.append(createCommandClassName);
		result.append(", reorientCommandClassName: ");
		result.append(reorientCommandClassName);
		result.append(", treeBranch: ");
		result.append(treeBranch);
		result.append(')');
		return result.toString();
	}

	public String getClassNamePrefix() {
		// should be consistent with ClassNamingStrategy
		LinkModelFacet aModelFacet = getModelFacet();
		if (aModelFacet instanceof TypeLinkModelFacet) {
			GenClass metaClass = ((TypeLinkModelFacet) aModelFacet).getMetaClass();
			String name = metaClass.getName();
			if (!isEmpty(name)) {
				return getValidClassName(name);
			}
		} else if (aModelFacet instanceof FeatureLinkModelFacet) {
			GenFeature metaFeature = ((FeatureLinkModelFacet) aModelFacet).getMetaFeature();
			String name = metaFeature.getCapName();
			if (!isEmpty(name)) {
				return getValidClassName(metaFeature.getGenClass().getName() + name);
			}
		}
		return CLASS_NAME_PREFIX;
	}
	
	public boolean isSansDomain() {
		return getModelFacet() == null;
	}
} //GenLinkImpl
@


1.42
log
@[244970] - Don't generate supporting code (updater/editpolicies/model-assistant) for links to/from pure label based elements
@
text
@d54 2
d158 40
d470 42
d778 4
d824 6
d869 6
d914 4
d982 4
@


1.41
log
@[243151] mgolubev - explicit source/target for links
@
text
@d26 1
d512 3
@


1.40
log
@[175305] consider derived classes in modeling assistant
@
text
@d30 1
d35 1
d44 2
d56 2
d236 18
d498 51
d672 4
d696 4
d792 4
d816 4
d830 34
@


1.39
log
@[206348] tree branch option is true by default
@
text
@d511 3
d519 7
a525 2
				if (participantTypes.contains(nodeType)) {
					participants.add(node);
@


1.38
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@d196 1
a196 1
	protected static final boolean TREE_BRANCH_EDEFAULT = false;
@


1.37
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a22 1
import org.eclipse.emf.ecore.util.EcoreUtil;
a241 31
	public NotificationChain basicSetDiagram(GenDiagram newDiagram, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newDiagram, GMFGenPackage.GEN_LINK__DIAGRAM, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagram(GenDiagram newDiagram) {
		if (newDiagram != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_LINK__DIAGRAM && newDiagram != null)) {
			if (EcoreUtil.isAncestor(this, newDiagram))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newDiagram != null)
				msgs = ((InternalEObject)newDiagram).eInverseAdd(this, GMFGenPackage.GEN_DIAGRAM__LINKS, GenDiagram.class, msgs);
			msgs = basicSetDiagram(newDiagram, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__DIAGRAM, newDiagram, newDiagram));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d536 1
a536 1
				return basicSetDiagram((GenDiagram)otherEnd, msgs);
d556 1
a556 1
				return basicSetDiagram(null, msgs);
a621 3
			case GMFGenPackage.GEN_LINK__DIAGRAM:
				setDiagram((GenDiagram)newValue);
				return;
a661 3
			case GMFGenPackage.GEN_LINK__DIAGRAM:
				setDiagram((GenDiagram)null);
				return;
@


1.36
log
@[206348] support tree routing
@
text
@d23 1
d243 31
d568 1
a568 1
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_LINK__DIAGRAM, msgs);
d588 1
a588 1
				return eBasicSetContainer(null, GMFGenPackage.GEN_LINK__DIAGRAM, msgs);
d654 3
d697 3
@


1.35
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d51 1
d189 20
d451 21
d607 2
d647 3
d686 3
d719 2
d745 2
@


1.35.2.1
log
@[206348] support tree routing style
@
text
@a50 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isTreeBranch <em>Tree Branch</em>}</li>
a187 20
	 * The default value of the '{@@link #isTreeBranch() <em>Tree Branch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isTreeBranch()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean TREE_BRANCH_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isTreeBranch() <em>Tree Branch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isTreeBranch()
	 * @@generated
	 * @@ordered
	 */
	protected boolean treeBranch = TREE_BRANCH_EDEFAULT;

	/**
a429 21
	 * @@generated
	 */
	public boolean isTreeBranch() {
		return treeBranch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTreeBranch(boolean newTreeBranch) {
		boolean oldTreeBranch = treeBranch;
		treeBranch = newTreeBranch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__TREE_BRANCH, oldTreeBranch, treeBranch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
a564 2
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				return isTreeBranch() ? Boolean.TRUE : Boolean.FALSE;
a602 3
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				setTreeBranch(((Boolean)newValue).booleanValue());
				return;
a638 3
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				setTreeBranch(TREE_BRANCH_EDEFAULT);
				return;
a668 2
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				return treeBranch != TREE_BRANCH_EDEFAULT;
a692 2
		result.append(", treeBranch: ");
		result.append(treeBranch);
@


1.34
log
@[114348] Generate command to reorient link
@
text
@d49 1
d65 1
a65 1
	protected LinkModelFacet modelFacet = null;
d75 1
a75 1
	protected EList<GenLinkLabel> labels = null;
d145 21
a165 1
	protected GenLinkConstraints creationConstraints = null;
d382 25
d456 9
d561 2
d597 3
d633 3
d665 2
d689 2
@


1.33
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d49 1
d147 20
d359 25
d405 9
d506 2
d540 3
d573 3
d602 2
d624 2
@


1.32
log
@[167466] - Do not generate ??ItemSemanticEditPolicy for pure-design elements
@
text
@d10 1
a10 1
import java.util.Iterator;
d17 1
d26 1
d73 1
a73 1
	protected EList labels = null;
d159 1
d222 1
a222 1
	public EList getLabels() {
d224 1
a224 1
			labels = new EObjectContainmentWithInverseEList(GenLinkLabel.class, this, GMFGenPackage.GEN_LINK__LABELS, GMFGenPackage.GEN_LINK_LABEL__LINK);
d340 1
a340 1
	public EList getAssistantSources() {
d342 1
a342 1
			return new BasicEList();
d352 1
a352 1
	public EList getAssistantTargets() {
d354 1
a354 1
			return new BasicEList();
d359 3
a361 4
	protected EList getParticipants(EList participantTypes) {
		BasicEList participants = new BasicEList();
		for (Iterator nodes = getDiagram().getAllNodes().iterator(); nodes.hasNext();) {
			GenNode node = (GenNode) nodes.next();
d369 1
a369 1
		return participants;
d377 2
d386 1
a386 1
				return ((InternalEList)getLabels()).basicAdd(otherEnd, msgs);
d400 1
d408 1
a408 1
				return ((InternalEList)getLabels()).basicRemove(otherEnd, msgs);
d420 1
d434 1
d460 2
d469 1
a469 1
				getLabels().addAll((Collection)newValue);
d492 1
d522 1
d548 1
@


1.31
log
@NodeItemSemanticEditPolicy template reimplemented using xpand.
@
text
@d569 4
@


1.30
log
@#145502 Naming strategy and gmfgen model objects should generate consistent class names
@
text
@a331 14
	protected EList getParticipants(EList participantTypes) {
		BasicEList participants = new BasicEList();
		for (Iterator nodes = getDiagram().getAllNodes().iterator(); nodes.hasNext();) {
			GenNode node = (GenNode) nodes.next();
			if (node.getModelFacet() != null) {
				GenClass nodeType = node.getModelFacet().getMetaClass();
				if (participantTypes.contains(nodeType)) {
					participants.add(node);
				}
			}
		}
		return participants;
	}

d337 1
a337 1
	public EList getSources() {
d341 1
a341 1
		return getParticipants(getModelFacet().getSourceTypes());
d349 1
a349 1
	public EList getTargets() {
d353 15
a367 1
		return getParticipants(getModelFacet().getTargetTypes());
@


1.29
log
@provide Node/Link/Label/Diagram class prefix instead of Unknown for elements without model facet; add extra empty values checks
@
text
@d552 1
d554 7
a560 1
		if (aModelFacet instanceof FeatureLinkModelFacet) {
d562 4
a565 4
			return metaFeature.getGenClass().getName() + metaFeature.getCapName();
		} else if (aModelFacet instanceof TypeLinkModelFacet) {
			GenClass metaClass = ((TypeLinkModelFacet) aModelFacet).getMetaClass();
			return metaClass.getName();
d567 1
a567 1
		return "Link";
@


1.28
log
@refactor getUniqueIdentifier() : all GenCommonBase implementations use the same logic so move it in GenCommonBaseImpl
@
text
@d560 1
a560 1
		return "Unknown";
@


1.27
log
@#145502 deprecate getClassNameSuffix()
@
text
@a561 5

	public String getUniqueIdentifier() {
		return getClassNamePrefix() + "_" + getVisualID();
	}

@


1.26
log
@#126200 register element types in xml
@
text
@a562 4
	public String getClassNameSuffux() {
		return "Link";
	}

@


1.25
log
@#135194 add @@generated NOT
@
text
@a22 1
import org.eclipse.gmf.codegen.gmfgen.ElementType;
a39 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getEditHelperClassName <em>Edit Helper Class Name</em>}</li>
a53 20
	 * The default value of the '{@@link #getEditHelperClassName() <em>Edit Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditHelperClassName() <em>Edit Helper Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelperClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;

	/**
a165 29
	public String getEditHelperClassNameGen() {
		return editHelperClassName;
	}

	public String getEditHelperClassName() {
		String value = getEditHelperClassNameGen();
		if (isEmpty(value)) {
			value = getClassNamePart() + ElementType.EDIT_HELPER_SUFFIX;
		}
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditHelperClassName(String newEditHelperClassName) {
		String oldEditHelperClassName = editHelperClassName;
		editHelperClassName = newEditHelperClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME, oldEditHelperClassName, editHelperClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a331 9
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getEditHelperQualifiedClassName() {
		return getDiagram().getEditHelpersPackageName() + '.' + getEditHelperClassName();
	}

a429 2
			case GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME:
				return getEditHelperClassName();
a454 3
			case GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME:
				setEditHelperClassName((String)newValue);
				return;
a484 3
			case GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME:
				setEditHelperClassName(EDIT_HELPER_CLASS_NAME_EDEFAULT);
				return;
a513 2
			case GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME:
				return EDIT_HELPER_CLASS_NAME_EDEFAULT == null ? editHelperClassName != null : !EDIT_HELPER_CLASS_NAME_EDEFAULT.equals(editHelperClassName);
a536 30
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
		if (baseClass == ElementType.class) {
			switch (derivedFeatureID) {
				case GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME: return GMFGenPackage.ELEMENT_TYPE__EDIT_HELPER_CLASS_NAME;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
		if (baseClass == ElementType.class) {
			switch (baseFeatureID) {
				case GMFGenPackage.ELEMENT_TYPE__EDIT_HELPER_CLASS_NAME: return GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d541 1
a541 3
		result.append(" (editHelperClassName: ");
		result.append(editHelperClassName);
		result.append(", outgoingCreationAllowed: ");
@


1.24
log
@#126200 register element types in xml
@
text
@d386 1
a386 1
	 * @@generated
@


1.23
log
@#114175 for links
@
text
@d23 1
d41 1
d56 20
d188 29
d383 9
d490 2
d517 3
d550 3
d582 2
d607 30
d641 3
a643 1
		result.append(" (outgoingCreationAllowed: ");
@


1.22
log
@do not use '$' in default class names; they are resolved incorrectly (it's an inner class separator)
@
text
@d560 1
a560 1
		return "Link" + hashCode();
@


1.21
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@d560 1
a560 1
		return "Link$" + hashCode();
@


1.20
log
@#124829 Support links in generated ModelingAssistantProvider
@
text
@d23 1
a23 1
import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;
d553 2
a554 2
		if (aModelFacet instanceof FeatureModelFacet) {
			GenFeature metaFeature = ((FeatureModelFacet) aModelFacet).getMetaFeature();
@


1.19
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d10 1
d16 1
d29 1
d332 38
@


1.18
log
@Switching off incomming link creation by default.
@
text
@a16 1
import org.eclipse.emf.ecore.EStructuralFeature;
a28 1
import org.eclipse.gmf.codegen.gmfgen.Viewmap;
d165 1
a165 1
		return (GenDiagram)eContainer;
d334 12
a345 16
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_LINK__DIAGRAM:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_LINK__DIAGRAM, msgs);
				case GMFGenPackage.GEN_LINK__LABELS:
					return ((InternalEList)getLabels()).basicAdd(otherEnd, msgs);
				case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
					if (creationConstraints != null)
						msgs = ((InternalEObject)creationConstraints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS, null, msgs);
					return basicSetCreationConstraints((GenLinkConstraints)otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d347 1
a347 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d355 10
a364 16
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_LINK__VIEWMAP:
					return basicSetViewmap(null, msgs);
				case GMFGenPackage.GEN_LINK__DIAGRAM:
					return eBasicSetContainer(null, GMFGenPackage.GEN_LINK__DIAGRAM, msgs);
				case GMFGenPackage.GEN_LINK__MODEL_FACET:
					return basicSetModelFacet(null, msgs);
				case GMFGenPackage.GEN_LINK__LABELS:
					return ((InternalEList)getLabels()).basicRemove(otherEnd, msgs);
				case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
					return basicSetCreationConstraints(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d366 1
a366 1
		return eBasicSetContainer(null, featureID, msgs);
d374 4
a377 8
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFGenPackage.GEN_LINK__DIAGRAM:
					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__LINKS, GenDiagram.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
d379 1
a379 1
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
d387 2
a388 15
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK__DIAGRAM_RUN_TIME_CLASS:
				if (resolve) return getDiagramRunTimeClass();
				return basicGetDiagramRunTimeClass();
			case GMFGenPackage.GEN_LINK__VISUAL_ID:
				return new Integer(getVisualID());
			case GMFGenPackage.GEN_LINK__EDIT_PART_CLASS_NAME:
				return getEditPartClassName();
			case GMFGenPackage.GEN_LINK__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return getItemSemanticEditPolicyClassName();
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return getNotationViewFactoryClassName();
			case GMFGenPackage.GEN_LINK__VIEWMAP:
				return getViewmap();
d404 1
a404 1
		return eDynamicGet(eFeature, resolve);
d412 2
a413 20
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK__DIAGRAM_RUN_TIME_CLASS:
				setDiagramRunTimeClass((GenClass)newValue);
				return;
			case GMFGenPackage.GEN_LINK__VISUAL_ID:
				setVisualID(((Integer)newValue).intValue());
				return;
			case GMFGenPackage.GEN_LINK__EDIT_PART_CLASS_NAME:
				setEditPartClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setItemSemanticEditPolicyClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__VIEWMAP:
				setViewmap((Viewmap)newValue);
				return;
d434 1
a434 1
		eDynamicSet(eFeature, newValue);
d442 2
a443 20
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK__DIAGRAM_RUN_TIME_CLASS:
				setDiagramRunTimeClass((GenClass)null);
				return;
			case GMFGenPackage.GEN_LINK__VISUAL_ID:
				setVisualID(VISUAL_ID_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__EDIT_PART_CLASS_NAME:
				setEditPartClassName(EDIT_PART_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				setItemSemanticEditPolicyClassName(ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__VIEWMAP:
				setViewmap((Viewmap)null);
				return;
d463 1
a463 1
		eDynamicUnset(eFeature);
d471 2
a472 14
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.GEN_LINK__DIAGRAM_RUN_TIME_CLASS:
				return diagramRunTimeClass != null;
			case GMFGenPackage.GEN_LINK__VISUAL_ID:
				return visualID != VISUAL_ID_EDEFAULT;
			case GMFGenPackage.GEN_LINK__EDIT_PART_CLASS_NAME:
				return EDIT_PART_CLASS_NAME_EDEFAULT == null ? editPartClassName != null : !EDIT_PART_CLASS_NAME_EDEFAULT.equals(editPartClassName);
			case GMFGenPackage.GEN_LINK__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
				return ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? itemSemanticEditPolicyClassName != null : !ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(itemSemanticEditPolicyClassName);
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : !NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals(notationViewFactoryClassName);
			case GMFGenPackage.GEN_LINK__VIEWMAP:
				return viewmap != null;
d488 1
a488 1
		return eDynamicIsSet(eFeature);
@


1.17
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d100 1
a100 1
	protected static final boolean INCOMING_CREATION_ALLOWED_EDEFAULT = true;
@


1.16
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@d26 1
d45 1
d133 10
d293 43
d345 4
d374 2
d432 2
d479 3
d526 3
d564 2
@


1.15
log
@#115794 allow to specify directions in which link could be created on diagram
@
text
@d43 1
d111 20
d260 21
d369 2
d413 3
d457 3
d493 2
d512 2
@


1.14
log
@[dstadnik] #115466 custom semantic edit policies to control link creation
@
text
@d41 2
d70 40
d197 42
d323 4
d363 6
d404 6
d439 4
d447 17
@


1.13
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@d227 2
d259 3
d295 3
d327 2
@


1.12
log
@[dstadnik] #113525 Get rid of LinkWithClass/LinkWithReference, use parallel hierarchy of modelFacet instead
@
text
@a24 1
import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;
a27 1
import org.eclipse.gmf.codegen.gmfgen.ModelElementSelector;
d46 1
a46 1
public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
a157 4
				case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_INITIALIZER:
					if (modelElementInitializer != null)
						msgs = ((InternalEObject)modelElementInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK__MODEL_ELEMENT_INITIALIZER, null, msgs);
					return basicSetModelElementInitializer((GenElementInitializer)otherEnd, msgs);
a182 4
				case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_SELECTOR:
					return basicSetModelElementSelector(null, msgs);
				case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_INITIALIZER:
					return basicSetModelElementInitializer(null, msgs);
a230 4
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_SELECTOR:
				return getModelElementSelector();
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_INITIALIZER:
				return getModelElementInitializer();
a262 6
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_SELECTOR:
				setModelElementSelector((ModelElementSelector)newValue);
				return;
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_INITIALIZER:
				setModelElementInitializer((GenElementInitializer)newValue);
				return;
a295 6
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_SELECTOR:
				setModelElementSelector((ModelElementSelector)null);
				return;
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_INITIALIZER:
				setModelElementInitializer((GenElementInitializer)null);
				return;
a322 4
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_SELECTOR:
				return modelElementSelector != null;
			case GMFGenPackage.GEN_LINK__MODEL_ELEMENT_INITIALIZER:
				return modelElementInitializer != null;
@


1.11
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d22 1
d28 1
d30 1
d41 1
a41 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getDomainLinkTargetFeature <em>Domain Link Target Feature</em>}</li>
d48 1
a48 1
public abstract class GenLinkImpl extends GenBaseElementImpl implements GenLink {
d50 1
a50 1
	 * The cached value of the '{@@link #getDomainLinkTargetFeature() <em>Domain Link Target Feature</em>}' reference.
d53 1
a53 1
	 * @@see #getDomainLinkTargetFeature()
d57 1
a57 1
	protected GenFeature domainLinkTargetFeature = null;
d102 2
a103 10
	public GenFeature getDomainLinkTargetFeature() {
		if (domainLinkTargetFeature != null && domainLinkTargetFeature.eIsProxy()) {
			GenFeature oldDomainLinkTargetFeature = domainLinkTargetFeature;
			domainLinkTargetFeature = (GenFeature)eResolveProxy((InternalEObject)domainLinkTargetFeature);
			if (domainLinkTargetFeature != oldDomainLinkTargetFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_LINK__DOMAIN_LINK_TARGET_FEATURE, oldDomainLinkTargetFeature, domainLinkTargetFeature));
			}
		}
		return domainLinkTargetFeature;
d111 8
a118 2
	public GenFeature basicGetDomainLinkTargetFeature() {
		return domainLinkTargetFeature;
d126 12
a137 5
	public void setDomainLinkTargetFeature(GenFeature newDomainLinkTargetFeature) {
		GenFeature oldDomainLinkTargetFeature = domainLinkTargetFeature;
		domainLinkTargetFeature = newDomainLinkTargetFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__DOMAIN_LINK_TARGET_FEATURE, oldDomainLinkTargetFeature, domainLinkTargetFeature));
d195 2
d247 2
a248 3
			case GMFGenPackage.GEN_LINK__DOMAIN_LINK_TARGET_FEATURE:
				if (resolve) return getDomainLinkTargetFeature();
				return basicGetDomainLinkTargetFeature();
d283 2
a284 2
			case GMFGenPackage.GEN_LINK__DOMAIN_LINK_TARGET_FEATURE:
				setDomainLinkTargetFeature((GenFeature)newValue);
d322 2
a323 2
			case GMFGenPackage.GEN_LINK__DOMAIN_LINK_TARGET_FEATURE:
				setDomainLinkTargetFeature((GenFeature)null);
d355 2
a356 2
			case GMFGenPackage.GEN_LINK__DOMAIN_LINK_TARGET_FEATURE:
				return domainLinkTargetFeature != null;
d363 20
@


1.10
log
@[rdvorak] #113224 Generate custom initialization code for domain model elements
@
text
@d26 1
a26 1
import org.eclipse.gmf.codegen.gmfgen.LinkLabel;
d139 1
a139 1
			labels = new EObjectContainmentWithInverseEList(LinkLabel.class, this, GMFGenPackage.GEN_LINK__LABELS, GMFGenPackage.LINK_LABEL__LINK);
a228 6
			case GMFGenPackage.GEN_LINK__DOMAIN_NAME_FEATURE:
				if (resolve) return getDomainNameFeature();
				return basicGetDomainNameFeature();
			case GMFGenPackage.GEN_LINK__CONTAINMENT_META_FEATURE:
				if (resolve) return getContainmentMetaFeature();
				return basicGetContainmentMetaFeature();
a264 6
			case GMFGenPackage.GEN_LINK__DOMAIN_NAME_FEATURE:
				setDomainNameFeature((GenFeature)newValue);
				return;
			case GMFGenPackage.GEN_LINK__CONTAINMENT_META_FEATURE:
				setContainmentMetaFeature((GenFeature)newValue);
				return;
a303 6
			case GMFGenPackage.GEN_LINK__DOMAIN_NAME_FEATURE:
				setDomainNameFeature((GenFeature)null);
				return;
			case GMFGenPackage.GEN_LINK__CONTAINMENT_META_FEATURE:
				setContainmentMetaFeature((GenFeature)null);
				return;
a337 4
			case GMFGenPackage.GEN_LINK__DOMAIN_NAME_FEATURE:
				return domainNameFeature != null;
			case GMFGenPackage.GEN_LINK__CONTAINMENT_META_FEATURE:
				return containmentMetaFeature != null;
@


1.9
log
@[rdvorak] #112097 genmodel support to use expression evaluation to choose editpart (visual representation)
@
text
@d24 1
d152 4
d183 2
d239 2
d283 3
d328 3
d364 2
@


1.8
log
@#111775 cleanup in gmfgen - unused attributes gone
@
text
@d26 1
d176 2
d230 2
d271 3
d313 3
d347 2
@


1.7
log
@#112191 colors as Viewmap's Attributes
@
text
@d217 2
a224 2
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return getNotationViewFactoryClassName();
d254 3
a262 3
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName((String)newValue);
				return;
d293 3
a301 3
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
				return;
d328 2
a333 2
			case GMFGenPackage.GEN_LINK__NOTATION_VIEW_FACTORY_CLASS_NAME:
				return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : !NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals(notationViewFactoryClassName);
@


1.6
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@a219 2
			case GMFGenPackage.GEN_LINK__FOREGROUND_COLOR:
				return getForegroundColor();
a256 3
			case GMFGenPackage.GEN_LINK__FOREGROUND_COLOR:
				setForegroundColor((String)newValue);
				return;
a295 3
			case GMFGenPackage.GEN_LINK__FOREGROUND_COLOR:
				setForegroundColor(FOREGROUND_COLOR_EDEFAULT);
				return;
a329 2
			case GMFGenPackage.GEN_LINK__FOREGROUND_COLOR:
				return FOREGROUND_COLOR_EDEFAULT == null ? foregroundColor != null : !FOREGROUND_COLOR_EDEFAULT.equals(foregroundColor);
@


1.5
log
@#111775 stale properties in gmfgen
#111784 GenChildContainer extends GenCommonBase
@
text
@d9 2
d15 1
d20 2
d25 1
d37 1
d55 10
d135 12
d154 2
d177 2
d234 2
d274 4
d316 3
d350 2
@


1.4
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@a183 2
			case GMFGenPackage.GEN_LINK__META_INFO_PROVIDER_CLASS_NAME:
				return getMetaInfoProviderClassName();
a220 3
			case GMFGenPackage.GEN_LINK__META_INFO_PROVIDER_CLASS_NAME:
				setMetaInfoProviderClassName((String)newValue);
				return;
a258 3
			case GMFGenPackage.GEN_LINK__META_INFO_PROVIDER_CLASS_NAME:
				setMetaInfoProviderClassName(META_INFO_PROVIDER_CLASS_NAME_EDEFAULT);
				return;
a293 2
			case GMFGenPackage.GEN_LINK__META_INFO_PROVIDER_CLASS_NAME:
				return META_INFO_PROVIDER_CLASS_NAME_EDEFAULT == null ? metaInfoProviderClassName != null : !META_INFO_PROVIDER_CLASS_NAME_EDEFAULT.equals(metaInfoProviderClassName);
@


1.3
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d10 1
a12 1
import org.eclipse.emf.ecore.EAttribute;
a13 1
import org.eclipse.emf.ecore.EReference;
a19 1

d45 1
a45 1
	protected EStructuralFeature domainLinkTargetFeature = null;
d80 1
a80 1
	public EStructuralFeature getDomainLinkTargetFeature() {
d82 2
a83 2
			EStructuralFeature oldDomainLinkTargetFeature = domainLinkTargetFeature;
			domainLinkTargetFeature = (EStructuralFeature)eResolveProxy((InternalEObject)domainLinkTargetFeature);
d97 1
a97 1
	public EStructuralFeature basicGetDomainLinkTargetFeature() {
d106 2
a107 2
	public void setDomainLinkTargetFeature(EStructuralFeature newDomainLinkTargetFeature) {
		EStructuralFeature oldDomainLinkTargetFeature = domainLinkTargetFeature;
d227 1
a227 1
				setDomainNameFeature((EAttribute)newValue);
d233 1
a233 1
				setContainmentMetaFeature((EReference)newValue);
d242 1
a242 1
				setDomainLinkTargetFeature((EStructuralFeature)newValue);
d268 1
a268 1
				setDomainNameFeature((EAttribute)null);
d274 1
a274 1
				setContainmentMetaFeature((EReference)null);
d283 1
a283 1
				setDomainLinkTargetFeature((EStructuralFeature)null);
@


1.2
log
@[dstadnik] Use Notation Model as runtime model
@
text
@d22 2
a32 4
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getLineStyle <em>Line Style</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getFigureQualifiedClassName <em>Figure Qualified Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getSourceDecorationFigureQualifiedClassName <em>Source Decoration Figure Qualified Class Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#getTargetDecorationFigureQualifiedClassName <em>Target Decoration Figure Qualified Class Name</em>}</li>
a49 80
	 * The default value of the '{@@link #getLineStyle() <em>Line Style</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLineStyle()
	 * @@generated
	 * @@ordered
	 */
	protected static final String LINE_STYLE_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getLineStyle() <em>Line Style</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLineStyle()
	 * @@generated
	 * @@ordered
	 */
	protected String lineStyle = LINE_STYLE_EDEFAULT;

	/**
	 * The default value of the '{@@link #getFigureQualifiedClassName() <em>Figure Qualified Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getFigureQualifiedClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT = "org.eclipse.draw2d.PolylineConnection";

	/**
	 * The cached value of the '{@@link #getFigureQualifiedClassName() <em>Figure Qualified Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getFigureQualifiedClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String figureQualifiedClassName = FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getSourceDecorationFigureQualifiedClassName() <em>Source Decoration Figure Qualified Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceDecorationFigureQualifiedClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getSourceDecorationFigureQualifiedClassName() <em>Source Decoration Figure Qualified Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceDecorationFigureQualifiedClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String sourceDecorationFigureQualifiedClassName = SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT;

	/**
	 * The default value of the '{@@link #getTargetDecorationFigureQualifiedClassName() <em>Target Decoration Figure Qualified Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTargetDecorationFigureQualifiedClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getTargetDecorationFigureQualifiedClassName() <em>Target Decoration Figure Qualified Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTargetDecorationFigureQualifiedClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String targetDecorationFigureQualifiedClassName = TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT;

	/**
a119 84
	public String getLineStyle() {
		return lineStyle;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLineStyle(String newLineStyle) {
		String oldLineStyle = lineStyle;
		lineStyle = newLineStyle;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__LINE_STYLE, oldLineStyle, lineStyle));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getFigureQualifiedClassName() {
		return figureQualifiedClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setFigureQualifiedClassName(String newFigureQualifiedClassName) {
		String oldFigureQualifiedClassName = figureQualifiedClassName;
		figureQualifiedClassName = newFigureQualifiedClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__FIGURE_QUALIFIED_CLASS_NAME, oldFigureQualifiedClassName, figureQualifiedClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getSourceDecorationFigureQualifiedClassName() {
		return sourceDecorationFigureQualifiedClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSourceDecorationFigureQualifiedClassName(String newSourceDecorationFigureQualifiedClassName) {
		String oldSourceDecorationFigureQualifiedClassName = sourceDecorationFigureQualifiedClassName;
		sourceDecorationFigureQualifiedClassName = newSourceDecorationFigureQualifiedClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME, oldSourceDecorationFigureQualifiedClassName, sourceDecorationFigureQualifiedClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getTargetDecorationFigureQualifiedClassName() {
		return targetDecorationFigureQualifiedClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTargetDecorationFigureQualifiedClassName(String newTargetDecorationFigureQualifiedClassName) {
		String oldTargetDecorationFigureQualifiedClassName = targetDecorationFigureQualifiedClassName;
		targetDecorationFigureQualifiedClassName = newTargetDecorationFigureQualifiedClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME, oldTargetDecorationFigureQualifiedClassName, targetDecorationFigureQualifiedClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d144 2
d198 2
a204 8
			case GMFGenPackage.GEN_LINK__LINE_STYLE:
				return getLineStyle();
			case GMFGenPackage.GEN_LINK__FIGURE_QUALIFIED_CLASS_NAME:
				return getFigureQualifiedClassName();
			case GMFGenPackage.GEN_LINK__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return getSourceDecorationFigureQualifiedClassName();
			case GMFGenPackage.GEN_LINK__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return getTargetDecorationFigureQualifiedClassName();
d240 3
a245 12
			case GMFGenPackage.GEN_LINK__LINE_STYLE:
				setLineStyle((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__FIGURE_QUALIFIED_CLASS_NAME:
				setFigureQualifiedClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setSourceDecorationFigureQualifiedClassName((String)newValue);
				return;
			case GMFGenPackage.GEN_LINK__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setTargetDecorationFigureQualifiedClassName((String)newValue);
				return;
d281 3
a286 12
			case GMFGenPackage.GEN_LINK__LINE_STYLE:
				setLineStyle(LINE_STYLE_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__FIGURE_QUALIFIED_CLASS_NAME:
				setFigureQualifiedClassName(FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setSourceDecorationFigureQualifiedClassName(SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT);
				return;
			case GMFGenPackage.GEN_LINK__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				setTargetDecorationFigureQualifiedClassName(TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT);
				return;
d314 2
a319 8
			case GMFGenPackage.GEN_LINK__LINE_STYLE:
				return LINE_STYLE_EDEFAULT == null ? lineStyle != null : !LINE_STYLE_EDEFAULT.equals(lineStyle);
			case GMFGenPackage.GEN_LINK__FIGURE_QUALIFIED_CLASS_NAME:
				return FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT == null ? figureQualifiedClassName != null : !FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT.equals(figureQualifiedClassName);
			case GMFGenPackage.GEN_LINK__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT == null ? sourceDecorationFigureQualifiedClassName != null : !SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT.equals(sourceDecorationFigureQualifiedClassName);
			case GMFGenPackage.GEN_LINK__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				return TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT == null ? targetDecorationFigureQualifiedClassName != null : !TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT.equals(targetDecorationFigureQualifiedClassName);
a323 21
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (lineStyle: ");
		result.append(lineStyle);
		result.append(", figureQualifiedClassName: ");
		result.append(figureQualifiedClassName);
		result.append(", sourceDecorationFigureQualifiedClassName: ");
		result.append(sourceDecorationFigureQualifiedClassName);
		result.append(", targetDecorationFigureQualifiedClassName: ");
		result.append(targetDecorationFigureQualifiedClassName);
		result.append(')');
		return result.toString();
	}

@


1.1
log
@*** empty log message ***
@
text
@d360 2
d407 3
d457 3
d500 2
@

