head	1.10;
access;
symbols
	v20081022-1925:1.10
	v20081015-1925:1.10
	v20081008-1925:1.10
	v20081001-1925:1.10
	v20080930-1130:1.10
	v20080926-1245:1.10
	v20080924-1925:1.10
	v20080917-1925:1.10
	v20080911-1728:1.10
	v20080910-1520:1.10
	v20080903-1520:1.10
	v20080827-1520:1.10
	v20080813-1520:1.10
	v20080806-1520:1.10
	v20080722-1827:1.10
	v20080718-1731:1.10
	v20080716-1600:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.2
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080610-1132:1.10
	v20080603-1553:1.10
	v20080528-1052:1.10
	v20080521:1.10
	v20080516-1543:1.10
	v20080516-1143:1.10
	v20080512-1200:1.10
	v20080508-2000:1.10
	v20080507-1326:1.10
	v20080503-1740:1.9
	v20080501-1739:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080411-0411:1.9
	v20080404-1111:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080207-0207:1.9
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070928-0000:1.9
	v20070921-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070405-1100:1.8
	v20070403-1500:1.8
	v20070330-1300:1.8
	v20060330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070307-0700:1.7
	v20070301-1200:1.7
	v20070228-2000:1.7
	v20070221-1500:1.7
	v20070208-1800:1.7
	v20070202-0200:1.4.2.1
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	v20061120-1300:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.4.2.1
	v20061020-1000:1.4.2.1
	v20061013-1330:1.5
	v20060919-0800:1.4.2.1
	v20060907-1100:1.4.2.1
	M1_20:1.5
	v20060904-1500:1.5
	v20060824-1600:1.4.2.1
	v20060817-1500:1.4.2.1
	v20060728-0500:1.4.2.1
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-1300:1.4
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	39124821b4de4567;

1.9
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	725b461c97d64567;

1.8
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	444245f8090b4567;

1.7
date	2006.11.29.21.08.12;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	29eb456df6ba4567;

1.6
date	2006.10.18.14.21.41;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.27.15.22.22;	author radvorak;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.12.08.48.32;	author dstadnik;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2006.02.14.18.46.22;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.05.17.30.29;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.29.18.33.26;	author atikhomirov;	state Exp;
branches;
next	;

1.4.2.1
date	2006.07.27.15.08.00;	author radvorak;	state Exp;
branches;
next	;


desc
@@


1.10
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenConstraint;
import org.eclipse.gmf.codegen.gmfgen.GenLink;
import org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints;
import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gen Link Constraints</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkConstraintsImpl#getLink <em>Link</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkConstraintsImpl#getSourceEnd <em>Source End</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkConstraintsImpl#getTargetEnd <em>Target End</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
	/**
	 * The cached value of the '{@@link #getSourceEnd() <em>Source End</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceEnd()
	 * @@generated
	 * @@ordered
	 */
	protected GenConstraint sourceEnd;

	/**
	 * The cached value of the '{@@link #getTargetEnd() <em>Target End</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTargetEnd()
	 * @@generated
	 * @@ordered
	 */
	protected GenConstraint targetEnd;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLinkConstraintsImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getGenLinkConstraints();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenLink getLink() {
		if (eContainerFeatureID != GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK) return null;
		return (GenLink)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetLink(GenLink newLink, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newLink, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLink(GenLink newLink) {
		if (newLink != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK && newLink != null)) {
			if (EcoreUtil.isAncestor(this, newLink))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newLink != null)
				msgs = ((InternalEObject)newLink).eInverseAdd(this, GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS, GenLink.class, msgs);
			msgs = basicSetLink(newLink, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, newLink, newLink));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenConstraint getSourceEnd() {
		if (sourceEnd != null && sourceEnd.eIsProxy()) {
			InternalEObject oldSourceEnd = (InternalEObject)sourceEnd;
			sourceEnd = (GenConstraint)eResolveProxy(oldSourceEnd);
			if (sourceEnd != oldSourceEnd) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END, oldSourceEnd, sourceEnd));
			}
		}
		return sourceEnd;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenConstraint basicGetSourceEnd() {
		return sourceEnd;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSourceEnd(GenConstraint newSourceEnd) {
		GenConstraint oldSourceEnd = sourceEnd;
		sourceEnd = newSourceEnd;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END, oldSourceEnd, sourceEnd));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenConstraint getTargetEnd() {
		if (targetEnd != null && targetEnd.eIsProxy()) {
			InternalEObject oldTargetEnd = (InternalEObject)targetEnd;
			targetEnd = (GenConstraint)eResolveProxy(oldTargetEnd);
			if (targetEnd != oldTargetEnd) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END, oldTargetEnd, targetEnd));
			}
		}
		return targetEnd;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenConstraint basicGetTargetEnd() {
		return targetEnd;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTargetEnd(GenConstraint newTargetEnd) {
		GenConstraint oldTargetEnd = targetEnd;
		targetEnd = newTargetEnd;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END, oldTargetEnd, targetEnd));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public GenClass getLinkClass() {
		GenLink owningLink = getLink();
		if(owningLink != null) {
			if(owningLink.getModelFacet() instanceof TypeLinkModelFacet) {
				TypeLinkModelFacet modelFacet = (TypeLinkModelFacet)owningLink.getModelFacet();
				return modelFacet.getMetaClass();
			} 		
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public GenClass getSourceEndContextClass() {
		GenLink owningLink = getLink();
		if(owningLink != null) {
			LinkModelFacet linkFacet = owningLink.getModelFacet();
			if(linkFacet instanceof TypeLinkModelFacet) {
				TypeLinkModelFacet typeLinkModelFacet = (TypeLinkModelFacet)linkFacet;
				if(typeLinkModelFacet.getSourceMetaFeature() != null) {
					return typeLinkModelFacet.getSourceMetaFeature().getTypeGenClass();
				}
				GenFeature metaFeature = ((TypeLinkModelFacet)linkFacet).getContainmentMetaFeature();
				return (metaFeature != null) ? metaFeature.getGenClass() : null;
			} else if(linkFacet instanceof FeatureLinkModelFacet) {
				GenFeature metaFeature = ((FeatureLinkModelFacet)linkFacet).getMetaFeature();
				return (metaFeature != null) ? metaFeature.getGenClass() : null;
			}
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public GenClass getTargetEndContextClass() {
		GenLink owningLink = getLink();
		if(owningLink != null) {
			LinkModelFacet linkFacet = owningLink.getModelFacet();
			if(linkFacet instanceof TypeLinkModelFacet) {
				GenFeature targetFeature = ((TypeLinkModelFacet)linkFacet).getTargetMetaFeature();
				return (targetFeature != null) ? targetFeature.getTypeGenClass() : null;
			} else if(linkFacet instanceof FeatureLinkModelFacet) {
				GenFeature metaFeature = ((FeatureLinkModelFacet)linkFacet).getMetaFeature();
				return (metaFeature != null) ? metaFeature.getTypeGenClass() : null;
			}
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getConstraintsInstanceFieldName() {
		return (getLink() != null) ? getLink().getUniqueIdentifier() : ""; //$NON-NLS-1$ 
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public boolean isValid() {
		return getSourceEndContextClass() != null && getTargetEndContextClass() != null && (getSourceEnd() != null || getTargetEnd() != null);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return basicSetLink((GenLink)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
				return basicSetLink(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS, GenLink.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
				return getLink();
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END:
				if (resolve) return getSourceEnd();
				return basicGetSourceEnd();
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END:
				if (resolve) return getTargetEnd();
				return basicGetTargetEnd();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
				setLink((GenLink)newValue);
				return;
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END:
				setSourceEnd((GenConstraint)newValue);
				return;
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END:
				setTargetEnd((GenConstraint)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
				setLink((GenLink)null);
				return;
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END:
				setSourceEnd((GenConstraint)null);
				return;
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END:
				setTargetEnd((GenConstraint)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
				return getLink() != null;
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END:
				return sourceEnd != null;
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END:
				return targetEnd != null;
		}
		return super.eIsSet(featureID);
	}

} //GenLinkConstraintsImpl
@


1.9
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d43 1
a43 1
	 * The cached value of the '{@@link #getSourceEnd() <em>Source End</em>}' containment reference.
d53 1
a53 1
	 * The cached value of the '{@@link #getTargetEnd() <em>Target End</em>}' containment reference.
d128 8
d144 2
a145 8
	public NotificationChain basicSetSourceEnd(GenConstraint newSourceEnd, NotificationChain msgs) {
		GenConstraint oldSourceEnd = sourceEnd;
		sourceEnd = newSourceEnd;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END, oldSourceEnd, newSourceEnd);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
d154 4
a157 11
		if (newSourceEnd != sourceEnd) {
			NotificationChain msgs = null;
			if (sourceEnd != null)
				msgs = ((InternalEObject)sourceEnd).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END, null, msgs);
			if (newSourceEnd != null)
				msgs = ((InternalEObject)newSourceEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END, null, msgs);
			msgs = basicSetSourceEnd(newSourceEnd, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END, newSourceEnd, newSourceEnd));
d166 8
d182 2
a183 8
	public NotificationChain basicSetTargetEnd(GenConstraint newTargetEnd, NotificationChain msgs) {
		GenConstraint oldTargetEnd = targetEnd;
		targetEnd = newTargetEnd;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END, oldTargetEnd, newTargetEnd);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
d192 4
a195 11
		if (newTargetEnd != targetEnd) {
			NotificationChain msgs = null;
			if (targetEnd != null)
				msgs = ((InternalEObject)targetEnd).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END, null, msgs);
			if (newTargetEnd != null)
				msgs = ((InternalEObject)newTargetEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END, null, msgs);
			msgs = basicSetTargetEnd(newTargetEnd, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END, newTargetEnd, newTargetEnd));
a301 4
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END:
				return basicSetSourceEnd(null, msgs);
			case GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END:
				return basicSetTargetEnd(null, msgs);
d331 2
a332 1
				return getSourceEnd();
d334 2
a335 1
				return getTargetEnd();
@


1.8
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d50 1
a50 1
	protected GenConstraint sourceEnd = null;
d60 1
a60 1
	protected GenConstraint targetEnd = null;
@


1.7
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@d76 1
d291 1
d307 1
d325 1
d339 1
d357 1
d378 1
d399 1
@


1.6
log
@#161380 simplify feature model facets
@
text
@d279 9
@


1.5
log
@#148818 GenLinkConstraints.getSourceEndContextClass() of TypeLinkModelFacet based link should use 'sourceMetaFeature' if defined
@
text
@d18 1
a18 1
import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;
d239 2
a240 2
			} else if(linkFacet instanceof FeatureModelFacet) {
				GenFeature metaFeature = ((FeatureModelFacet)linkFacet).getMetaFeature();
d259 2
a260 2
			} else if(linkFacet instanceof FeatureModelFacet) {
				GenFeature metaFeature = ((FeatureModelFacet)linkFacet).getMetaFeature();
@


1.4
log
@#126200 register element types in xml
@
text
@d233 4
@


1.4.2.1
log
@148818 GenLinkConstraints.getSourceEndContextClass() of TypeLinkModelFacet based link should use 'sourceMetaFeature' if defined
@
text
@a232 4
				TypeLinkModelFacet typeLinkModelFacet = (TypeLinkModelFacet)linkFacet;
				if(typeLinkModelFacet.getSourceMetaFeature() != null) {
					return typeLinkModelFacet.getSourceMetaFeature().getTypeGenClass();
				}
@


1.3
log
@[rdvorak] #127700 Rename genmodel::ModelElementSelector as a generic GenConstraint element
@
text
@d95 10
d114 1
a114 1
			msgs = eBasicSetContainer((InternalEObject)newLink, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, msgs);
d282 1
a282 1
				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, msgs);
d295 1
a295 1
				return eBasicSetContainer(null, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, msgs);
@


1.2
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d20 1
a24 1
import org.eclipse.gmf.codegen.gmfgen.ValueExpression;
d50 1
a50 1
	protected ValueExpression sourceEnd = null;
d60 1
a60 1
	protected ValueExpression targetEnd = null;
d116 1
a116 1
	public ValueExpression getSourceEnd() {
d125 2
a126 2
	public NotificationChain basicSetSourceEnd(ValueExpression newSourceEnd, NotificationChain msgs) {
		ValueExpression oldSourceEnd = sourceEnd;
d140 1
a140 1
	public void setSourceEnd(ValueExpression newSourceEnd) {
d159 1
a159 1
	public ValueExpression getTargetEnd() {
d168 2
a169 2
	public NotificationChain basicSetTargetEnd(ValueExpression newTargetEnd, NotificationChain msgs) {
		ValueExpression oldTargetEnd = targetEnd;
d183 1
a183 1
	public void setTargetEnd(ValueExpression newTargetEnd) {
d335 1
a335 1
				setSourceEnd((ValueExpression)newValue);
d338 1
a338 1
				setTargetEnd((ValueExpression)newValue);
d355 1
a355 1
				setSourceEnd((ValueExpression)null);
d358 1
a358 1
				setTargetEnd((ValueExpression)null);
@


1.1
log
@[rdvorak] #117743 support for link creation constraints
@
text
@a13 1
import org.eclipse.emf.ecore.EStructuralFeature;
d87 1
a87 1
		return (GenLink)eContainer;
d96 1
a96 1
		if (newLink != eContainer || (eContainerFeatureID != GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK && newLink != null)) {
d100 1
a100 1
			if (eContainer != null)
d267 6
a272 10
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d274 1
a274 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d282 8
a289 12
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
					return eBasicSetContainer(null, GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK, msgs);
				case GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END:
					return basicSetSourceEnd(null, msgs);
				case GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END:
					return basicSetTargetEnd(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d291 1
a291 1
		return eBasicSetContainer(null, featureID, msgs);
d299 4
a302 8
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFGenPackage.GEN_LINK_CONSTRAINTS__LINK:
					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS, GenLink.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
d304 1
a304 1
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
d312 2
a313 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d321 1
a321 1
		return eDynamicGet(eFeature, resolve);
d329 2
a330 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d341 1
a341 1
		eDynamicSet(eFeature, newValue);
d349 2
a350 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d361 1
a361 1
		eDynamicUnset(eFeature);
d369 2
a370 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d378 1
a378 1
		return eDynamicIsSet(eFeature);
@

