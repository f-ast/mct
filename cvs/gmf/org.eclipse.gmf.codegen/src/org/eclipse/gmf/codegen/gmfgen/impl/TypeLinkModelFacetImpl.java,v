head	1.16;
access;
symbols
	v20081022-1925:1.16
	v20081015-1925:1.16
	v20081008-1925:1.16
	v20081001-1925:1.16
	v20080930-1130:1.16
	v20080926-1245:1.16
	v20080924-1925:1.16
	v20080917-1925:1.16
	v20080911-1728:1.16
	v20080910-1520:1.16
	v20080903-1520:1.16
	v20080827-1520:1.16
	v20080813-1520:1.16
	v20080806-1520:1.16
	v20080722-1827:1.16
	v20080718-1731:1.16
	v20080716-1600:1.15
	v20080716-1642:1.16
	R2_1_maintenance:1.15.0.4
	Root_R2_1_maintenance:1.15
	R2_1_0:1.15
	v20080610-1132:1.15
	v20080603-1553:1.15
	v20080528-1052:1.15
	v20080521:1.15
	v20080516-1543:1.15
	v20080516-1143:1.15
	v20080512-1200:1.15
	v20080508-2000:1.15
	v20080507-1326:1.15
	v20080503-1740:1.15
	v20080501-1739:1.15
	v20080425-1959:1.15
	v20080417-1610:1.15
	v20080411-0411:1.15
	v20080404-1111:1.15
	v20080322-0000:1.15
	v20080222-1200:1.15
	v20080215-1500:1.15
	v20080207-0207:1.15
	v20071222-1111:1.15
	v20071214-1111:1.15
	v20071130-1111:1.15
	v20071124-0000:1.15
	v20071112-0000:1.15
	v20071108-0000:1.15
	v20071003-0000:1.15
	v20070928-0000:1.15
	v20070921-0000:1.15
	v20070915-0000:1.15
	v20070903-0000:1.15
	v20070809-0000:1.15
	R2_0_maintenance:1.15.0.2
	R2_0:1.15
	R4_20:1.15
	v20070621-0000:1.15
	RC3_20:1.15
	v20070614-1400:1.15
	v20070608-1300:1.15
	v20070605-1400:1.15
	v20070601-1400:1.15
	v20070525-1500:1.15
	v20070520-1200:1.15
	v20070518-1300:1.15
	v20070504-1000:1.14
	v20070427-0600:1.14
	v20070420-1000:1.14
	v20070413-1300:1.14
	v20070405-1100:1.13
	v20070403-1500:1.13
	v20070330-1300:1.13
	v20060330-1300:1.13
	v20070322-1100:1.13
	v20060316-0600:1.13
	v20070307-0700:1.12
	v20070301-1200:1.12
	v20070228-2000:1.12
	v20070221-1500:1.12
	v20070208-1800:1.12
	v20070202-0200:1.8
	v20070103-0300:1.11
	M4_20:1.11
	v20061222-1800:1.11
	v20061218-1200:1.11
	v20061214-0000:1.11
	v20061120-1300:1.10
	M3_20:1.10
	v20061117-0800:1.10
	v20061027-1200:1.8
	v20061020-1000:1.8
	v20061013-1330:1.8
	v20060919-0800:1.8
	v20060907-1100:1.8
	M1_20:1.8
	v20060904-1500:1.8
	v20060824-1600:1.8
	v20060817-1500:1.8
	v20060728-0500:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060626-1420:1.8
	v20060620-0400:1.8
	v20060616-1400:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-1300:1.8
	v20060519-0800:1.8
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.5
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.16
date	2008.06.30.19.46.40;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	7645486938204567;

1.15
date	2007.05.09.16.19.09;	author ashatalin;	state Exp;
branches;
next	1.14;
commitid	714a4641f47d4567;

1.14
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.13;
commitid	725b461c97d64567;

1.13
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	444245f8090b4567;

1.12
date	2007.01.17.13.12.34;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	3d0045ae20c04567;

1.11
date	2006.11.24.22.25.21;	author ashatalin;	state Exp;
branches;
next	1.10;
commitid	5f734567714f4567;

1.10
date	2006.10.30.13.27.32;	author ashatalin;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.19.16.50.23;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.14.20.12.32;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.25.16.43.38;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.05.17.30.30;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.21.09.35.37;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.18.13.55.33;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.26.18.43.48;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.26.17.33.09;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.16
log
@[226882] Support links with childMetaFeature not from container
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.BasicEList;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Type Link Model Facet</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.TypeLinkModelFacetImpl#getSourceMetaFeature <em>Source Meta Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.TypeLinkModelFacetImpl#getTargetMetaFeature <em>Target Meta Feature</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
	/**
	 * The cached value of the '{@@link #getSourceMetaFeature() <em>Source Meta Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceMetaFeature()
	 * @@generated
	 * @@ordered
	 */
	protected GenFeature sourceMetaFeature;

	/**
	 * The cached value of the '{@@link #getTargetMetaFeature() <em>Target Meta Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTargetMetaFeature()
	 * @@generated
	 * @@ordered
	 */
	protected GenFeature targetMetaFeature;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected TypeLinkModelFacetImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getTypeLinkModelFacet();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenFeature getSourceMetaFeature() {
		if (sourceMetaFeature != null && sourceMetaFeature.eIsProxy()) {
			InternalEObject oldSourceMetaFeature = (InternalEObject)sourceMetaFeature;
			sourceMetaFeature = (GenFeature)eResolveProxy(oldSourceMetaFeature);
			if (sourceMetaFeature != oldSourceMetaFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE, oldSourceMetaFeature, sourceMetaFeature));
			}
		}
		return sourceMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenFeature basicGetSourceMetaFeature() {
		return sourceMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSourceMetaFeature(GenFeature newSourceMetaFeature) {
		GenFeature oldSourceMetaFeature = sourceMetaFeature;
		sourceMetaFeature = newSourceMetaFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE, oldSourceMetaFeature, sourceMetaFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenFeature getTargetMetaFeature() {
		if (targetMetaFeature != null && targetMetaFeature.eIsProxy()) {
			InternalEObject oldTargetMetaFeature = (InternalEObject)targetMetaFeature;
			targetMetaFeature = (GenFeature)eResolveProxy(oldTargetMetaFeature);
			if (targetMetaFeature != oldTargetMetaFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE, oldTargetMetaFeature, targetMetaFeature));
			}
		}
		return targetMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenFeature basicGetTargetMetaFeature() {
		return targetMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTargetMetaFeature(GenFeature newTargetMetaFeature) {
		GenFeature oldTargetMetaFeature = targetMetaFeature;
		targetMetaFeature = newTargetMetaFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE, oldTargetMetaFeature, targetMetaFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public GenClass getSourceType() {
		if (getSourceMetaFeature() != null) {
			return getSourceMetaFeature().getTypeGenClass();
		} else if (getChildMetaFeature() != null) {
			return getChildMetaFeature().getGenClass();
		} // child feature defaults to be equal to containment, so if child == null, no reason to check containment
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public GenClass getTargetType() {
		if (getTargetMetaFeature() != null) {
			return getTargetMetaFeature().getTypeGenClass();
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenClass> getAssistantSourceTypes() {
		// TODO: Modify this method in accordance on implementing
		// AssistantProvider.
		BasicEList<GenClass> sources = new BasicEList<GenClass>();
		GenClass sourceType = getSourceType();
		if (sourceType != null) {
			sources.add(sourceType);
		}
		return sources;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EList<GenClass> getAssistantTargetTypes() {
		// TODO: Modify this method in accordance on implementing
		// AssistantProvider.
		BasicEList<GenClass> targets = new BasicEList<GenClass>();
		GenClass targetType = getTargetType();
		if (targetType != null) {
			targets.add(targetType);
		}
		return targets;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE:
				if (resolve) return getSourceMetaFeature();
				return basicGetSourceMetaFeature();
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE:
				if (resolve) return getTargetMetaFeature();
				return basicGetTargetMetaFeature();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE:
				setSourceMetaFeature((GenFeature)newValue);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE:
				setTargetMetaFeature((GenFeature)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE:
				setSourceMetaFeature((GenFeature)null);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE:
				setTargetMetaFeature((GenFeature)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE:
				return sourceMetaFeature != null;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE:
				return targetMetaFeature != null;
		}
		return super.eIsSet(featureID);
	}
	
} //TypeLinkModelFacetImpl
@


1.15
log
@Updater was adopted to return incoming/outgoing links.
@
text
@d158 3
a160 3
		} else if (getContainmentMetaFeature() != null) {
			return getContainmentMetaFeature().getGenClass();
		}
@


1.14
log
@[181778] Generate standalone creation commands for reference based links
@
text
@a17 1
import org.eclipse.gmf.codegen.gmfgen.GenLink;
a276 8

	private GenLink getLink() {
		return (GenLink) eContainer();
	}

	private GenDiagramImpl getDiagramImpl() {
		return ((GenDiagramImpl) getLink().getDiagram());
	}
@


1.13
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a29 1
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.TypeLinkModelFacetImpl#getCreateCommandClassName <em>Create Command Class Name</em>}</li>
d44 1
a44 1
	protected GenFeature sourceMetaFeature = null;
d54 1
a54 21
	protected GenFeature targetMetaFeature = null;

	/**
	 * The default value of the '{@@link #getCreateCommandClassName() <em>Create Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getCreateCommandClassName() <em>Create Command Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreateCommandClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
a153 34
	 * @@generated
	 */
	public String getCreateCommandClassNameGen() {
		return createCommandClassName;
	}

	public String getCreateCommandClassName() {
		return GenCommonBaseImpl.getValidClassName(getCreateCommandClassNameGen(), getLink(), CREATE_COMMAND_SUFFIX);
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreateCommandClassName(String newCreateCommandClassName) {
		String oldCreateCommandClassName = createCommandClassName;
		createCommandClassName = newCreateCommandClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME, oldCreateCommandClassName, createCommandClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getCreateCommandQualifiedClassName() {
		return getDiagramImpl().getEditCommandsPackageName() + '.' + getCreateCommandClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
a222 2
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
				return getCreateCommandClassName();
a240 3
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
				setCreateCommandClassName((String)newValue);
				return;
a258 3
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
				setCreateCommandClassName(CREATE_COMMAND_CLASS_NAME_EDEFAULT);
				return;
a274 2
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
				return CREATE_COMMAND_CLASS_NAME_EDEFAULT == null ? createCommandClassName != null : !CREATE_COMMAND_CLASS_NAME_EDEFAULT.equals(createCommandClassName);
a278 16
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (createCommandClassName: ");
		result.append(createCommandClassName);
		result.append(')');
		return result.toString();
	}

@


1.12
log
@NodeItemSemanticEditPolicy template reimplemented using xpand.
@
text
@d91 1
d237 1
a237 1
	public EList getAssistantSourceTypes() {
d240 1
a240 1
		EList sources = new BasicEList();
d253 1
a253 1
	public EList getAssistantTargetTypes() {
d256 1
a256 1
		EList targets = new BasicEList();
d269 1
d289 1
d310 1
d331 1
d349 1
@


1.11
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@d9 1
d210 29
a238 1
	public EList getSourceTypes() {
d240 3
a242 4
		if (getSourceMetaFeature() != null && getSourceMetaFeature().getTypeGenClass() != null) {
			sources.add(getSourceMetaFeature().getTypeGenClass());
		} else if (getContainmentMetaFeature() != null && getContainmentMetaFeature().getGenClass() != null) {
			sources.add(getContainmentMetaFeature().getGenClass());
d252 7
a258 4
	public EList getTargetTypes() {
		EList sources = new BasicEList();
		if (getTargetMetaFeature() != null && getTargetMetaFeature().getTypeGenClass() != null) {
			sources.add(getTargetMetaFeature().getTypeGenClass());
d260 1
a260 1
		return sources;
@


1.10
log
@[162529] - Creating .gmfgen crashes with "Internal Error..."
@
text
@d17 1
d29 1
d57 20
d173 34
d245 2
d264 3
d284 3
d302 2
d308 23
@


1.9
log
@Correcting code to support other features as a link target meta feature - could be useful for code generation for some specific link targets.
@
text
@d155 1
a155 1
		if (getSourceMetaFeature() != null) {
d157 1
a157 1
		} else if (getContainmentMetaFeature() != null) {
@


1.8
log
@organized imports
@
text
@d170 1
a170 1
		if (getTargetMetaFeature() != null) {
@


1.7
log
@#124829 Support links in generated ModelingAssistantProvider
@
text
@a12 1

@


1.6
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d11 3
d152 28
@


1.5
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@a8 1
import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
a10 2
import org.eclipse.emf.common.notify.NotificationChain;

a11 1
import org.eclipse.emf.ecore.EStructuralFeature;
a14 2
import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;
import org.eclipse.gmf.codegen.gmfgen.ModelElementSelector;
d77 2
a78 2
			GenFeature oldSourceMetaFeature = sourceMetaFeature;
			sourceMetaFeature = (GenFeature)eResolveProxy((InternalEObject)sourceMetaFeature);
d115 2
a116 2
			GenFeature oldTargetMetaFeature = targetMetaFeature;
			targetMetaFeature = (GenFeature)eResolveProxy((InternalEObject)targetMetaFeature);
d151 2
a152 55
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
					if (modelElementInitializer != null)
						msgs = ((InternalEObject)modelElementInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, null, msgs);
					return basicSetModelElementInitializer((GenElementInitializer)otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
		}
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
					return basicSetModelElementSelector(null, msgs);
				case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
					return basicSetModelElementInitializer(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
		}
		return eBasicSetContainer(null, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__META_CLASS:
				if (resolve) return getMetaClass();
				return basicGetMetaClass();
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CONTAINMENT_META_FEATURE:
				if (resolve) return getContainmentMetaFeature();
				return basicGetContainmentMetaFeature();
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CHILD_META_FEATURE:
				if (resolve) return getChildMetaFeature();
				return basicGetChildMetaFeature();
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
				return getModelElementSelector();
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
				return getModelElementInitializer();
d160 1
a160 1
		return eDynamicGet(eFeature, resolve);
d168 2
a169 17
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__META_CLASS:
				setMetaClass((GenClass)newValue);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CONTAINMENT_META_FEATURE:
				setContainmentMetaFeature((GenFeature)newValue);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CHILD_META_FEATURE:
				setChildMetaFeature((GenFeature)newValue);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
				setModelElementSelector((ModelElementSelector)newValue);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
				setModelElementInitializer((GenElementInitializer)newValue);
				return;
d177 1
a177 1
		eDynamicSet(eFeature, newValue);
d185 2
a186 17
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__META_CLASS:
				setMetaClass((GenClass)null);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CONTAINMENT_META_FEATURE:
				setContainmentMetaFeature((GenFeature)null);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CHILD_META_FEATURE:
				setChildMetaFeature((GenFeature)null);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
				setModelElementSelector((ModelElementSelector)null);
				return;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
				setModelElementInitializer((GenElementInitializer)null);
				return;
d194 1
a194 1
		eDynamicUnset(eFeature);
d202 2
a203 12
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__META_CLASS:
				return metaClass != null;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CONTAINMENT_META_FEATURE:
				return containmentMetaFeature != null;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CHILD_META_FEATURE:
				return childMetaFeature != null;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
				return modelElementSelector != null;
			case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
				return modelElementInitializer != null;
d209 1
a209 1
		return eDynamicIsSet(eFeature);
@


1.4
log
@#117026
Generating Shape edit parts for inner elements if necessary.
@
text
@d157 40
@


1.3
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@a156 40
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
					if (modelElementInitializer != null)
						msgs = ((InternalEObject)modelElementInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, null, msgs);
					return basicSetModelElementInitializer((GenElementInitializer)otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
		}
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
					return basicSetModelElementSelector(null, msgs);
				case GMFGenPackage.TYPE_LINK_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
					return basicSetModelElementInitializer(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
		}
		return eBasicSetContainer(null, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
@


1.2
log
@#113823 childMetaFeature moved to TypeModelFacet
@
text
@d12 2
d19 2
d157 40
d208 4
d238 6
d270 6
d299 4
@


1.1
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d161 3
d187 3
d213 3
d237 2
@

