head	1.8;
access;
symbols
	v20081022-1925:1.8
	v20081015-1925:1.8
	v20081008-1925:1.8
	v20081001-1925:1.8
	v20080930-1130:1.8
	v20080926-1245:1.8
	v20080924-1925:1.8
	v20080917-1925:1.8
	v20080911-1728:1.8
	v20080910-1520:1.8
	v20080903-1520:1.8
	v20080827-1520:1.8
	v20080813-1520:1.8
	v20080806-1520:1.8
	v20080722-1827:1.8
	v20080718-1731:1.8
	v20080716-1600:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.4
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080528-1052:1.8
	v20080521:1.8
	v20080516-1543:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080508-2000:1.8
	v20080507-1326:1.8
	v20080503-1740:1.8
	v20080501-1739:1.8
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080411-0411:1.8
	v20080404-1111:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070928-0000:1.8
	v20070921-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070520-1200:1.8
	v20070518-1300:1.8
	v20070504-1000:1.8
	v20070427-0600:1.8
	v20070420-1000:1.8
	v20070413-1300:1.7
	v20070405-1100:1.6
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060728-0500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2007.04.18.17.03.13;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	581546264f514567;

1.7
date	2007.04.11.08.10.23;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	725b461c97d64567;

1.6
date	2007.03.14.14.39.35;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	444245f8090b4567;

1.5
date	2007.01.05.13.29.59;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	281a459e52a64567;

1.4
date	2006.06.07.09.29.00;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.06.10.52.00;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.05.11.23.48;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.12.08.48.32;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.8
log
@no reason to generate empty edithelper advices unless we do generate some meaningful code within. Those willing to get empty classes generated can specify advice class name in the model
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenLink;
import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;
import org.eclipse.gmf.codegen.gmfgen.MetamodelType;
import org.eclipse.gmf.codegen.gmfgen.SpecializationType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Specialization Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.SpecializationTypeImpl#getMetamodelType <em>Metamodel Type</em>}</li>
 *   <li>{@@link org.eclipse.gmf.codegen.gmfgen.impl.SpecializationTypeImpl#getEditHelperAdviceClassName <em>Edit Helper Advice Class Name</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
	/**
	 * The cached value of the '{@@link #getMetamodelType() <em>Metamodel Type</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMetamodelType()
	 * @@generated
	 * @@ordered
	 */
	protected MetamodelType metamodelType;

	/**
	 * The default value of the '{@@link #getEditHelperAdviceClassName() <em>Edit Helper Advice Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelperAdviceClassName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String EDIT_HELPER_ADVICE_CLASS_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getEditHelperAdviceClassName() <em>Edit Helper Advice Class Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditHelperAdviceClassName()
	 * @@generated
	 * @@ordered
	 */
	protected String editHelperAdviceClassName = EDIT_HELPER_ADVICE_CLASS_NAME_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SpecializationTypeImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGenPackage.eINSTANCE.getSpecializationType();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public MetamodelType getMetamodelType() {
		if (metamodelType != null && metamodelType.eIsProxy()) {
			InternalEObject oldMetamodelType = (InternalEObject)metamodelType;
			metamodelType = (MetamodelType)eResolveProxy(oldMetamodelType);
			if (metamodelType != oldMetamodelType) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.SPECIALIZATION_TYPE__METAMODEL_TYPE, oldMetamodelType, metamodelType));
			}
		}
		return metamodelType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public MetamodelType basicGetMetamodelType() {
		return metamodelType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMetamodelType(MetamodelType newMetamodelType) {
		MetamodelType oldMetamodelType = metamodelType;
		metamodelType = newMetamodelType;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.SPECIALIZATION_TYPE__METAMODEL_TYPE, oldMetamodelType, metamodelType));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getEditHelperAdviceClassName() {
		return editHelperAdviceClassName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditHelperAdviceClassName(String newEditHelperAdviceClassName) {
		String oldEditHelperAdviceClassName = editHelperAdviceClassName;
		editHelperAdviceClassName = newEditHelperAdviceClassName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.SPECIALIZATION_TYPE__EDIT_HELPER_ADVICE_CLASS_NAME, oldEditHelperAdviceClassName, editHelperAdviceClassName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public GenClass getMetamodelClass() {
		GenClass metaClass = null;
		if (getMetamodelType() != null) {
			metaClass = getMetamodelType().getMetaClass();
		}
		if (getDiagramElement() instanceof GenLink) {
			LinkModelFacet modelFacet = ((GenLink) getDiagramElement()).getModelFacet();
			if (modelFacet instanceof FeatureLinkModelFacet) {
				GenFeature metaFeature = ((FeatureLinkModelFacet) modelFacet).getMetaFeature();
				metaClass = metaFeature.getGenClass();
			}
		}
		return metaClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getEditHelperAdviceQualifiedClassName() {
		return getDiagramElement().getDiagram().getEditHelpersPackageName() + '.' + getEditHelperAdviceClassName();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGenPackage.SPECIALIZATION_TYPE__METAMODEL_TYPE:
				if (resolve) return getMetamodelType();
				return basicGetMetamodelType();
			case GMFGenPackage.SPECIALIZATION_TYPE__EDIT_HELPER_ADVICE_CLASS_NAME:
				return getEditHelperAdviceClassName();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGenPackage.SPECIALIZATION_TYPE__METAMODEL_TYPE:
				setMetamodelType((MetamodelType)newValue);
				return;
			case GMFGenPackage.SPECIALIZATION_TYPE__EDIT_HELPER_ADVICE_CLASS_NAME:
				setEditHelperAdviceClassName((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGenPackage.SPECIALIZATION_TYPE__METAMODEL_TYPE:
				setMetamodelType((MetamodelType)null);
				return;
			case GMFGenPackage.SPECIALIZATION_TYPE__EDIT_HELPER_ADVICE_CLASS_NAME:
				setEditHelperAdviceClassName(EDIT_HELPER_ADVICE_CLASS_NAME_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGenPackage.SPECIALIZATION_TYPE__METAMODEL_TYPE:
				return metamodelType != null;
			case GMFGenPackage.SPECIALIZATION_TYPE__EDIT_HELPER_ADVICE_CLASS_NAME:
				return EDIT_HELPER_ADVICE_CLASS_NAME_EDEFAULT == null ? editHelperAdviceClassName != null : !EDIT_HELPER_ADVICE_CLASS_NAME_EDEFAULT.equals(editHelperAdviceClassName);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (editHelperAdviceClassName: ");
		result.append(editHelperAdviceClassName);
		result.append(')');
		return result.toString();
	}

} //SpecializationTypeImpl@


1.7
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d130 1
a130 1
	public String getEditHelperAdviceClassNameGen() {
a133 4
	public String getEditHelperAdviceClassName() {
		return GenCommonBaseImpl.getValidClassName(getEditHelperAdviceClassNameGen(), getDiagramElement(), EDIT_HELPER_ADVICE_SUFFIX);
	}

@


1.6
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d46 1
a46 1
	protected MetamodelType metamodelType = null;
@


1.5
log
@add getMetamodelClass() method to specialization type
@
text
@d82 1
d184 1
d201 1
d219 1
d237 1
d253 1
@


1.4
log
@provide Node/Link/Label/Diagram class prefix instead of Unknown for elements without model facet; add extra empty values checks
@
text
@d9 3
d16 1
d18 2
d154 20
@


1.3
log
@#145502 deprecate getClassNameSuffix()
@
text
@d128 1
a128 5
		String value = getEditHelperAdviceClassNameGen();
		if (GenCommonBaseImpl.isEmpty(value)) {
			value = getDiagramElement().getClassNamePrefix() + EDIT_HELPER_ADVICE_SUFFIX;
		}
		return value;
@


1.2
log
@#144679 Do not use visual ids in edit helper names
@
text
@d130 1
a130 1
			value = getDiagramElement().getClassNamePrefix() + getDiagramElement().getClassNameSuffux() + EDIT_HELPER_ADVICE_SUFFIX;
@


1.1
log
@#126200 register element types in xml
@
text
@d130 1
a130 1
			value = getDiagramElement().getUniqueIdentifier() + EDIT_HELPER_ADVICE_SUFFIX;
@

