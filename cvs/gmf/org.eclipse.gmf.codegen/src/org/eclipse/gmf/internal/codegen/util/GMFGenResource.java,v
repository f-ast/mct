head	1.7;
access;
symbols
	v20081022-1925:1.7
	v20081015-1925:1.7
	v20081008-1925:1.7
	v20081001-1925:1.7
	v20080930-1130:1.7
	v20080926-1245:1.7
	v20080924-1925:1.7
	v20080917-1925:1.7
	v20080911-1728:1.7
	v20080910-1520:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080806-1520:1.7
	v20080722-1827:1.7
	v20080718-1731:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080603-1553:1.7
	v20080528-1052:1.7
	v20080521:1.7
	v20080516-1543:1.7
	v20080516-1143:1.7
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.4
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080411-0411:1.4
	v20080404-1111:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.4
	v20071222-1111:1.4
	v20071214-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071112-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070928-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.05.15.17.25.03;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	5cc9482c71ee4567;

1.6
date	2008.05.15.12.55.00;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	7ac6482c32a34567;

1.5
date	2008.05.08.17.26.39;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	37b0482337ce4567;

1.4
date	2007.05.24.09.34.47;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	4fba46555c364567;

1.3
date	2007.05.22.17.38.26;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	147746532a924567;

1.2
date	2007.05.18.21.17.20;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	2591464e17d14567;

1.1
date	2007.05.18.20.39.19;	author atikhomirov;	state Exp;
branches;
next	;
commitid	5935464e0ef44567;


desc
@@


1.7
log
@[232299] refactor CustomCopier (now FilteringCopier)
severe defect with content elements that do not need to be migrated being excluded from resulting resource
minor cleanup
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License v1.0 which
 * accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors: Borland - initial API and implementation
 */
package org.eclipse.gmf.internal.codegen.util;

import java.io.InputStream;
import java.util.LinkedList;
import java.util.Map;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.xmi.XMLResource;
import org.eclipse.emf.ecore.xmi.impl.BasicResourceHandler;
import org.eclipse.gmf.internal.common.ToolingResourceFactory;
import org.eclipse.gmf.internal.common.migrate.Messages;
import org.eclipse.gmf.internal.common.migrate.MigrationResource;

public class GMFGenResource extends MigrationResource {

	/**
	 * Migration from 2005 model to 2006 dynamic model and then once again to 2008 normal model during XML reading 
	 */
	public static class Factory extends ToolingResourceFactory {
		@@Override
		public Resource createResource(URI uri) {
			GMFGenResource r = new GMFGenResource(uri);
			r.getDefaultLoadOptions().put(XMLResource.OPTION_RESOURCE_HANDLER, new X());
			return r;
		}
	}


	/**
	 * Migration from 2006 dynamic model to 2008 normal model
	 */
	public static class Factory2 extends ToolingResourceFactory {
		@@Override
		public Resource createResource(URI uri) {
			ToolResource r = (ToolResource) super.createResource(uri);
			r.getDefaultLoadOptions().put(XMLResource.OPTION_RESOURCE_HANDLER, new X());
			return r;
		}
	}

	private static class X extends BasicResourceHandler {
		@@Override
		public void postLoad(XMLResource resource, InputStream inputStream, Map<?, ?> options) {
			LinkedList<EObject> migrated = new LinkedList<EObject>();
			for (EObject o : resource.getContents()) {
				if (o != null && "GenEditorGenerator".equals(o.eClass().getName()) && MigrationDelegate.get2006GenModelURI().equals(o.eClass().getEPackage().getNsURI())) {
					final Migrate2008 migrate = new Migrate2008();
					EObject m = migrate.go(o);
					if (m != null && migrate.wasMigrationApplied()) { // XXX multiple warnings if there are few GenEditorGenerators in the resource
						resource.getWarnings().add(0, MigrationResource.createMessageDiagnostic(resource, Messages.oldModelVersionLoadedMigrationRequired));
					}
					migrated.add(m != null ? m : o);
				} else {
					migrated.add(o);
				}
			}
			resource.getContents().clear();
			resource.getContents().addAll(migrated);
		}
	}

	private GMFGenResource(URI uri) {
		super(uri);
	}

	@@Override
	protected org.eclipse.gmf.internal.common.migrate.MigrationDelegate createDelegate() {
		MigrationDelegate migrationHelper = new MigrationDelegate();
		migrationHelper.init();
		return migrationHelper;
	}
}
@


1.6
log
@[228913] bring back tests for old migrations, with fixes.
@
text
@a21 1
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
d59 3
a61 2
					EObject m = CustomCopier.go(o, GMFGenPackage.eINSTANCE);
					if (m != null && CustomCopier.wasMigrationApplied()) {
d65 2
@


1.5
log
@[228913] migration support for ValueExpression metamodel changes
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d24 1
d29 3
d41 4
d59 1
a59 1
				if (o != null && "GenEditorGenerator".equals(o.eClass().getName())) {
d61 3
a64 2
				} else {
					migrated.add(o);
@


1.4
log
@[188768] akarjakina - Migration should not rely solely on nsURIs;
MIgrationHelperDelegate was renamed to MigrationDelegate
@
text
@d13 4
d18 1
d20 3
d31 29
a59 1
			return new GMFGenResource(uri);
@


1.3
log
@[187811] akarjakina - migrating gmf 1.0 models to 2.0, refactoring, tests
@
text
@a15 1
import org.eclipse.gmf.internal.common.migrate.MigrationHelperDelegate;
d32 1
a32 1
	protected MigrationHelperDelegate createDelegate() {
@


1.2
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@a12 3
import java.util.Arrays;
import java.util.Collection;

a14 1
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
a19 1
	private Collection<String> myBackwardSupportedURIs;
a37 17

	@@Override
	protected Collection<String> getBackwardSupportedURIs() {
		if (myBackwardSupportedURIs == null) {
			myBackwardSupportedURIs = Arrays.asList(new String[] {
					"http://www.eclipse.org/gmf/2005/GenModel", //$NON-NLS-1$
					"http://www.eclipse.org/gmf/2005/GenModel/2.0" //$NON-NLS-1$
			});
		}
		return myBackwardSupportedURIs;
	}

	@@Override
	protected String getMetamodelNsURI() {
		return GMFGenPackage.eNS_URI;
	}

@


1.1
log
@[187811] akarjakina - Migration support refactored
@
text
@d49 1
@

