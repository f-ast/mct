head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081015-1925:1.2
	v20081008-1925:1.2
	v20081001-1925:1.2
	v20080930-1130:1.2
	v20080926-1245:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	v20080722-1827:1.2
	v20080718-1731:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.2
	v20080528-1052:1.2
	v20080521:1.2
	v20080516-1543:1.2
	v20080516-1143:1.2
	v20080512-1200:1.2
	v20080508-2000:1.2
	v20080507-1326:1.2
	v20080503-1740:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080411-0411:1.2
	v20080404-1111:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20080207-0207:1.2
	v20071222-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071112-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070928-0000:1.2
	v20070921-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070614-1400:1.2
	v20070608-1300:1.2
	v20070605-1400:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070520-1200:1.1
	v20070518-1300:1.1
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.06.07.16.26.10;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	1db7466831a14567;

1.1
date	2007.04.06.14.37.41;	author ashatalin;	state Exp;
branches;
next	;
commitid	5df46165b334567;


desc
@@


1.2
log
@add isDerived() access
@
text
@/**
 * Copyright (c) 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.codegen.util;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenClassifier;
import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
import org.eclipse.emf.ecore.EClassifier;

public class GenModelUtils {
	
	public static final String getGetAccessor(GenFeature feature) {
		return feature.getGetAccessor();
	}
	
	public static final GenClassifier findGenClassifier(GenModel genModel, EClassifier eClassifier) {
		return genModel.findGenClassifier(eClassifier);
	}

	public static GenClass getDocumentRoot(GenPackage genPackage) {
		return genPackage.hasDocumentRoot() ? genPackage.getDocumentRoot() : null;
	}

	public static boolean isListType(GenFeature genFeature) {
		// can't implement in .ext because 
		// XMLTypePackage.eNS_URI.equals(getExtendedMetaData().getNamespace((EStructuralFeature)eTypedElement));
		// part of the check seems to be essential
		return genFeature.isListType();
	}

	public static boolean isDerived(GenFeature genFeature) {
		return genFeature.isDerived();
	}

	public static GenClass getTypeGenClass(GenFeature genFeature) {
		return genFeature.getTypeGenClass();
	}
}
@


1.1
log
@Moving non-open API classes from org.eclipse.gmf.codegen.util to org.eclipse.gmf.internal.codegen.util package.
@
text
@d42 4
@

