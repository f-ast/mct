head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20060316-0600:1.5
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070103-0300:1.5
	M4_20:1.5
	v20061222-1800:1.5
	v20061218-1200:1.5
	v20061214-0000:1.5
	v20061120-1300:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061013-1330:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.03.20.14.49.13;	author ashatalin;	state dead;
branches;
next	1.5;
commitid	761245fff4684567;

1.5
date	2006.11.08.14.06.28;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.03.20.43.48;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.19.13.50.53;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.03.16.47.41;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.22.13.21.23;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Generating diagram file navigator updating code.
@
text
@package org.eclipse.gmf.codegen.templates.navigator;

import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.gmf.common.codegen.*;

public class AbstractNavigatorItemGenerator
{
  protected static String nl;
  public static synchronized AbstractNavigatorItemGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    AbstractNavigatorItemGenerator result = new AbstractNavigatorItemGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "/*" + NL + " *";
  protected final String TEXT_3 = NL + " */";
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public abstract class ";
  protected final String TEXT_6 = " implements ";
  protected final String TEXT_7 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tstatic {" + NL + "\t\tfinal Class[] supportedTypes = new Class[] { ";
  protected final String TEXT_8 = ".class };" + NL + "\t\tfinal ";
  protected final String TEXT_9 = " propertySheetPageContributor = new ";
  protected final String TEXT_10 = "() {" + NL + "\t\t\tpublic String getContributorId() {" + NL + "\t\t\t\treturn \"";
  protected final String TEXT_11 = "\"; //$NON-NLS-1$" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\t";
  protected final String TEXT_12 = ".getAdapterManager().registerAdapters(new ";
  protected final String TEXT_13 = "() {" + NL + "\t\t" + NL + "\t\t\tpublic Object getAdapter(Object adaptableObject, Class adapterType) {" + NL + "\t\t\t\tif (adaptableObject instanceof ";
  protected final String TEXT_14 = " && adapterType == ";
  protected final String TEXT_15 = ".class) {" + NL + "\t\t\t\t\treturn propertySheetPageContributor;\t\t\t\t" + NL + "\t\t\t\t}" + NL + "\t\t\t\treturn null;" + NL + "\t\t\t}" + NL + "" + NL + "\t\t\tpublic Class[] getAdapterList() {" + NL + "\t\t\t\treturn supportedTypes;" + NL + "\t\t\t}" + NL + "\t\t}, ";
  protected final String TEXT_16 = ".class);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tprivate Object myParent;" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tprotected ";
  protected final String TEXT_17 = "(Object parent) {" + NL + "\t\tmyParent = parent;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic Object getParent() {" + NL + "\t\treturn myParent;" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic Object getAdapter(Class adapter) {" + NL + "\t\treturn ";
  protected final String TEXT_18 = ".getAdapterManager().getAdapter(this, adapter);" + NL + "\t}" + NL + "\t" + NL + "}";
  protected final String TEXT_19 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
GenNavigator genNavigator = (GenNavigator) ((Object[]) argument)[0];
GenDiagram genDiagram = genNavigator.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];

    stringBuffer.append(TEXT_1);
    
String copyrightText = genDiagram.getEditorGen().getCopyrightText();
if (copyrightText != null && copyrightText.trim().length() > 0) {

    stringBuffer.append(TEXT_2);
    stringBuffer.append(copyrightText.replaceAll("\n", "\n *"));
    stringBuffer.append(TEXT_3);
    }
    importManager.emitPackageStatement(stringBuffer);
    stringBuffer.append(TEXT_4);
    importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_5);
    stringBuffer.append(genNavigator.getAbstractNavigatorItemClassName());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdaptable"));
    stringBuffer.append(TEXT_7);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.tabbed.ITabbedPropertySheetPageContributor"));
    stringBuffer.append(TEXT_8);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.tabbed.ITabbedPropertySheetPageContributor"));
    stringBuffer.append(TEXT_9);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.tabbed.ITabbedPropertySheetPageContributor"));
    stringBuffer.append(TEXT_10);
    stringBuffer.append(genNavigator.getEditorGen().getPlugin().getID());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Platform"));
    stringBuffer.append(TEXT_12);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdapterFactory"));
    stringBuffer.append(TEXT_13);
    stringBuffer.append(genNavigator.getAbstractNavigatorItemClassName());
    stringBuffer.append(TEXT_14);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.tabbed.ITabbedPropertySheetPageContributor"));
    stringBuffer.append(TEXT_15);
    stringBuffer.append(genNavigator.getAbstractNavigatorItemClassName());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(genNavigator.getAbstractNavigatorItemClassName());
    stringBuffer.append(TEXT_17);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Platform"));
    stringBuffer.append(TEXT_18);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_19);
    return stringBuffer.toString();
  }
}
@


1.5
log
@LinkHelper adopted to work correctly with shortcuts.
@
text
@@


1.4
log
@Refactoring navigator to support cross-diagram shortcuts.
@
text
@d34 1
a34 1
  protected final String TEXT_17 = "(Object parent) {" + NL + "\t\tmyParent = parent;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tabstract public String getModelID();" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic Object getParent() {" + NL + "\t\treturn myParent;" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic Object getAdapter(Class adapter) {" + NL + "\t\treturn ";
@


1.3
log
@Read-onlyness of property view is guaranteed by content provider.
@
text
@d24 13
a36 6
  protected final String TEXT_7 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tprivate Object myParent;" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tprotected ";
  protected final String TEXT_8 = "(Object parent) {" + NL + "\t\tmyParent = parent;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tabstract public String getModelID();" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic Object getParent() {" + NL + "\t\treturn myParent;" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic Object getAdapter(Class adapter) {" + NL + "\t\tif (";
  protected final String TEXT_9 = ".class.isAssignableFrom(adapter)) {" + NL + "\t\t\treturn new ";
  protected final String TEXT_10 = "() {" + NL + "\t\t\t\tpublic String getContributorId() {" + NL + "\t\t\t\t\treturn \"";
  protected final String TEXT_11 = "\";" + NL + "\t\t\t\t}" + NL + "\t\t\t};" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "\t" + NL + "}";
  protected final String TEXT_12 = NL;
d63 1
a63 1
    stringBuffer.append(genNavigator.getAbstractNavigatorItemClassName());
d71 14
d86 1
a86 1
    stringBuffer.append(TEXT_12);
@


1.2
log
@Parent element correctly provided to navigator.
@
text
@d60 1
a60 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.properties.views.IReadOnlyDiagramPropertySheetPageContributor"));
@


1.1
log
@Read-only properties provided into the navigator.
@
text
@d24 6
a29 5
  protected final String TEXT_7 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tabstract public String getModelID();" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic Object getAdapter(Class adapter) {" + NL + "\t\tif (";
  protected final String TEXT_8 = ".class.isAssignableFrom(adapter)) {" + NL + "\t\t\treturn new ";
  protected final String TEXT_9 = "() {" + NL + "\t\t\t\tpublic String getContributorId() {" + NL + "\t\t\t\t\treturn \"";
  protected final String TEXT_10 = "\";" + NL + "\t\t\t\t}" + NL + "\t\t\t};" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "\t" + NL + "}";
  protected final String TEXT_11 = NL;
d56 2
d59 1
a59 1
    stringBuffer.append(TEXT_8);
d61 1
a61 1
    stringBuffer.append(TEXT_9);
d63 1
a63 1
    stringBuffer.append(TEXT_10);
d65 1
a65 1
    stringBuffer.append(TEXT_11);
@

