head	1.10;
access;
symbols
	v20081022-1925:1.10
	v20081015-1925:1.10
	v20081008-1925:1.10
	v20081001-1925:1.10
	v20080924-1925:1.10
	v20080917-1925:1.10
	v20080911-1728:1.10
	v20080910-1520:1.10
	v20080903-1520:1.10
	v20080827-1520:1.10
	v20080813-1520:1.10
	v20080806-1520:1.10
	v20070608-1300:1.9
	v20070605-1400:1.8
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070520-1200:1.7
	v20070518-1300:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070405-1100:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2007.06.11.16.01.14;	author ashatalin;	state dead;
branches;
next	1.9;
commitid	2733466d71c94567;

1.9
date	2007.06.06.12.00.09;	author ashatalin;	state Exp;
branches;
next	1.8;
commitid	d7e4666a1c84567;

1.8
date	2007.06.04.16.20.34;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	17ef46643bcf4567;

1.7
date	2007.05.20.12.56.52;	author mfeldman;	state Exp;
branches;
next	1.6;
commitid	7de14650454a4567;

1.6
date	2007.04.24.08.57.56;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	78b462dc68e4567;

1.5
date	2007.02.22.19.49.50;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	299645ddf3da4567;

1.4
date	2006.11.08.19.03.14;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.03.20.43.48;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.19.13.50.53;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.17.19.19.54;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.10
log
@[191851] - Convert /navigator/NavigatorSorter.javajet template to xpand
@
text
@package org.eclipse.gmf.codegen.templates.navigator;

import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.gmf.common.codegen.*;

public class NavigatorActionProviderGenerator
{
  protected static String nl;
  public static synchronized NavigatorActionProviderGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    NavigatorActionProviderGenerator result = new NavigatorActionProviderGenerator();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * ";
  protected final String TEXT_2 = NL + " */";
  protected final String TEXT_3 = NL;
  protected final String TEXT_4 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_5 = " extends ";
  protected final String TEXT_6 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean myContribute;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate OpenDiagramAction myOpenDiagramAction;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_7 = " aSite) {" + NL + "\t\tsuper.init(aSite);" + NL + "\t\tif (aSite.getViewSite() instanceof ";
  protected final String TEXT_8 = ") {" + NL + "\t\t\tmyContribute = true;" + NL + "\t\t\tmakeActions((";
  protected final String TEXT_9 = ") aSite.getViewSite());" + NL + "\t\t} else {" + NL + "\t\t\tmyContribute = false;" + NL + "\t\t}" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void makeActions(";
  protected final String TEXT_10 = " viewerSite) {" + NL + "\t\tmyOpenDiagramAction = new OpenDiagramAction(viewerSite);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void fillActionBars(";
  protected final String TEXT_11 = " actionBars) {" + NL + "\t\tif (!myContribute) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_12 = " selection = (";
  protected final String TEXT_13 = ") getContext().getSelection();" + NL + "\t\tmyOpenDiagramAction.selectionChanged(selection);" + NL + "\t\tif (myOpenDiagramAction.isEnabled()) {" + NL + "\t\t\tactionBars.setGlobalActionHandler(";
  protected final String TEXT_14 = ".OPEN, myOpenDiagramAction);" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void fillContextMenu(";
  protected final String TEXT_15 = " menu) {";
  protected final String TEXT_16 = "\t\t" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class OpenDiagramAction extends ";
  protected final String TEXT_17 = " {" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_18 = " myDiagram;" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_19 = " myViewerSite;" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic OpenDiagramAction(";
  protected final String TEXT_20 = " viewerSite) {" + NL + "\t\t\tsuper(\"Open Diagram\");" + NL + "\t\t\tmyViewerSite = viewerSite;" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic final void selectionChanged(";
  protected final String TEXT_21 = " selection) {" + NL + "\t\t\tmyDiagram = null;" + NL + "\t\t\tif (selection.size() == 1) {" + NL + "\t\t\t\tObject selectedElement = selection.getFirstElement();" + NL + "\t\t\t\tif (selectedElement instanceof ";
  protected final String TEXT_22 = ") {" + NL + "\t\t\t\t\tselectedElement = ((";
  protected final String TEXT_23 = ") selectedElement).getView();" + NL + "\t\t\t\t} else if (selectedElement instanceof ";
  protected final String TEXT_24 = ") {" + NL + "\t\t\t\t\tselectedElement = ((";
  protected final String TEXT_25 = ") selectedElement).getAdapter(";
  protected final String TEXT_26 = ".class);" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (selectedElement instanceof ";
  protected final String TEXT_27 = ") {" + NL + "\t\t\t\t\t";
  protected final String TEXT_28 = " diagram = (";
  protected final String TEXT_29 = ") selectedElement;" + NL + "\t\t\t\t\tif (";
  protected final String TEXT_30 = ".MODEL_ID.equals(";
  protected final String TEXT_31 = ".getModelID(diagram))) {" + NL + "\t\t\t\t\t\tmyDiagram = diagram;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tsetEnabled(myDiagram != null);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void run() {" + NL + "\t\t\tif (myDiagram == null || myDiagram.eResource() == null) {" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t\t" + NL + "\t\t\t";
  protected final String TEXT_32 = " editorInput = getEditorInput();" + NL + "\t\t\t";
  protected final String TEXT_33 = " page = myViewerSite.getPage();" + NL + "\t\t \ttry {" + NL + "\t\t\t\tpage.openEditor(editorInput, ";
  protected final String TEXT_34 = ".ID);" + NL + "\t\t\t} catch (";
  protected final String TEXT_35 = " e) {" + NL + "\t\t\t\t";
  protected final String TEXT_36 = ".getInstance().logError(\"Exception while openning diagram\", e);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_37 = " getEditorInput() {";
  protected final String TEXT_38 = NL + "\t\t\tfor (";
  protected final String TEXT_39 = " it = myDiagram.eResource().getContents().iterator(); it.hasNext();) {" + NL + "\t\t\t\t";
  protected final String TEXT_40 = " nextEObject = (";
  protected final String TEXT_41 = ") it.next();" + NL + "\t\t\t\tif (nextEObject == myDiagram) {" + NL + "\t\t\t\t\treturn new ";
  protected final String TEXT_42 = "(";
  protected final String TEXT_43 = ".getFile(myDiagram.eResource()));" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (nextEObject instanceof Diagram) {" + NL + "\t\t\t\t\tbreak;" + NL + "\t\t\t\t}" + NL + "\t\t\t}";
  protected final String TEXT_44 = NL + "\t\t\t";
  protected final String TEXT_45 = " uri = ";
  protected final String TEXT_46 = ".getURI(myDiagram);" + NL + "\t\t\tString editorName = uri.lastSegment() + \"#\" + myDiagram.eResource().getContents().indexOf(myDiagram); //$NON-NLS-1$" + NL + "\t\t\treturn new ";
  protected final String TEXT_47 = "(uri, editorName);" + NL + "\t\t}" + NL + "\t\t" + NL + "\t}" + NL + "" + NL + "}";
  protected final String TEXT_48 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
GenNavigator genNavigator = (GenNavigator) ((Object[]) argument)[0];
GenDiagram genDiagram = genNavigator.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
importManager.registerInnerClass("OpenFileAction");

    
String copyrightText = genDiagram.getEditorGen().getCopyrightText();
if (copyrightText != null && copyrightText.trim().length() > 0) {

    stringBuffer.append(TEXT_1);
    stringBuffer.append(copyrightText.replaceAll("\n", "\n * "));
    stringBuffer.append(TEXT_2);
    }
    importManager.emitPackageStatement(stringBuffer);
    stringBuffer.append(TEXT_3);
    importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(genNavigator.getActionProviderClassName());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.CommonActionProvider"));
    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonActionExtensionSite"));
    stringBuffer.append(TEXT_7);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
    stringBuffer.append(TEXT_8);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
    stringBuffer.append(TEXT_9);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
    stringBuffer.append(TEXT_10);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IActionBars"));
    stringBuffer.append(TEXT_11);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
    stringBuffer.append(TEXT_12);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
    stringBuffer.append(TEXT_13);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonActionConstants"));
    stringBuffer.append(TEXT_14);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
    stringBuffer.append(TEXT_15);
    
/*
 * Put following code into the template to generate popup menu
 *
		if (!myContribute || getContext().getSelection().isEmpty()) {
			return;
		}

		< %=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")% > selection = (< %=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")% >) getContext().getSelection();

		myOpenDiagramAction.selectionChanged(selection);
		if (myOpenDiagramAction.isEnabled()) {
			menu.insertAfter(< %=importManager.getImportedName("org.eclipse.ui.navigator.ICommonMenuConstants")% >.GROUP_OPEN, myOpenDiagramAction);
		}*/
    stringBuffer.append(TEXT_16);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Action"));
    stringBuffer.append(TEXT_17);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_18);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
    stringBuffer.append(TEXT_19);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
    stringBuffer.append(TEXT_20);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
    stringBuffer.append(TEXT_21);
    stringBuffer.append(importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName()));
    stringBuffer.append(TEXT_22);
    stringBuffer.append(importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName()));
    stringBuffer.append(TEXT_23);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdaptable"));
    stringBuffer.append(TEXT_24);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdaptable"));
    stringBuffer.append(TEXT_25);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
    stringBuffer.append(TEXT_26);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_27);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_28);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_29);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartQualifiedClassName()));
    stringBuffer.append(TEXT_30);
    stringBuffer.append(importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName()));
    stringBuffer.append(TEXT_31);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_32);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPage"));
    stringBuffer.append(TEXT_33);
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName()));
    stringBuffer.append(TEXT_34);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_35);
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_36);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_37);
    if (genDiagram.getEditorGen().getApplication() == null) {
    stringBuffer.append(TEXT_38);
    stringBuffer.append(importManager.getImportedName("java.util.Iterator"));
    stringBuffer.append(TEXT_39);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_40);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_41);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.part.FileEditorInput"));
    stringBuffer.append(TEXT_42);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.workspace.util.WorkspaceSynchronizer"));
    stringBuffer.append(TEXT_43);
    }
    
	/*
	Same code as in OpenDiagram.xpt
	 */

    stringBuffer.append(TEXT_44);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_45);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.util.EcoreUtil"));
    stringBuffer.append(TEXT_46);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_47);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_48);
    return stringBuffer.toString();
  }
}
@


1.9
log
@[184195] - Make use of new URIEditorInput(String) constructor in generated code
@
text
@@


1.8
log
@regenerated jet emitters with EMF 2.3 RC2
@
text
@d54 12
a65 11
  protected final String TEXT_37 = " getEditorInput() {" + NL + "\t\t\t";
  protected final String TEXT_38 = " diagramResource = myDiagram.eResource();";
  protected final String TEXT_39 = NL + "\t\t\tfor (";
  protected final String TEXT_40 = " it = diagramResource.getContents().iterator(); it.hasNext();) {" + NL + "\t\t\t\t";
  protected final String TEXT_41 = " nextEObject = (";
  protected final String TEXT_42 = ") it.next();" + NL + "\t\t\t\tif (nextEObject == myDiagram) {" + NL + "\t\t\t\t\treturn new ";
  protected final String TEXT_43 = "(";
  protected final String TEXT_44 = ".getFile(diagramResource));" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (nextEObject instanceof Diagram) {" + NL + "\t\t\t\t\tbreak;" + NL + "\t\t\t\t}" + NL + "\t\t\t}";
  protected final String TEXT_45 = NL + "\t\t\treturn new ";
  protected final String TEXT_46 = "(diagramResource.getURI().appendFragment(diagramResource.getURIFragment(myDiagram)));" + NL + "\t\t}" + NL + "\t\t" + NL + "\t}" + NL + "" + NL + "}";
  protected final String TEXT_47 = NL;
d167 1
a167 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
d169 1
a169 1
    if (genDiagram.getEditorGen().getApplication() == null) {
d171 1
a171 1
    stringBuffer.append(importManager.getImportedName("java.util.Iterator"));
d175 1
a175 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
d177 1
a177 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.part.FileEditorInput"));
d179 6
a184 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.workspace.util.WorkspaceSynchronizer"));
d186 1
a186 1
    }
d188 2
d191 1
a191 1
    stringBuffer.append(TEXT_46);
d193 1
a193 1
    stringBuffer.append(TEXT_47);
@


1.7
log
@Anna Karyakina's migration fix
@
text
@d17 1
a17 1
  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
@


1.6
log
@follow consisted spacing policy
@
text
@d18 47
a64 48
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "/*" + NL + " * ";
  protected final String TEXT_3 = NL + " */";
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_6 = " extends ";
  protected final String TEXT_7 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean myContribute;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate OpenDiagramAction myOpenDiagramAction;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_8 = " aSite) {" + NL + "\t\tsuper.init(aSite);" + NL + "\t\tif (aSite.getViewSite() instanceof ";
  protected final String TEXT_9 = ") {" + NL + "\t\t\tmyContribute = true;" + NL + "\t\t\tmakeActions((";
  protected final String TEXT_10 = ") aSite.getViewSite());" + NL + "\t\t} else {" + NL + "\t\t\tmyContribute = false;" + NL + "\t\t}" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void makeActions(";
  protected final String TEXT_11 = " viewerSite) {" + NL + "\t\tmyOpenDiagramAction = new OpenDiagramAction(viewerSite);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void fillActionBars(";
  protected final String TEXT_12 = " actionBars) {" + NL + "\t\tif (!myContribute) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_13 = " selection = (";
  protected final String TEXT_14 = ") getContext().getSelection();" + NL + "\t\tmyOpenDiagramAction.selectionChanged(selection);" + NL + "\t\tif (myOpenDiagramAction.isEnabled()) {" + NL + "\t\t\tactionBars.setGlobalActionHandler(";
  protected final String TEXT_15 = ".OPEN, myOpenDiagramAction);" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void fillContextMenu(";
  protected final String TEXT_16 = " menu) {";
  protected final String TEXT_17 = "\t\t" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class OpenDiagramAction extends ";
  protected final String TEXT_18 = " {" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_19 = " myDiagram;" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_20 = " myViewerSite;" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic OpenDiagramAction(";
  protected final String TEXT_21 = " viewerSite) {" + NL + "\t\t\tsuper(\"Open Diagram\");" + NL + "\t\t\tmyViewerSite = viewerSite;" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic final void selectionChanged(";
  protected final String TEXT_22 = " selection) {" + NL + "\t\t\tmyDiagram = null;" + NL + "\t\t\tif (selection.size() == 1) {" + NL + "\t\t\t\tObject selectedElement = selection.getFirstElement();" + NL + "\t\t\t\tif (selectedElement instanceof ";
  protected final String TEXT_23 = ") {" + NL + "\t\t\t\t\tselectedElement = ((";
  protected final String TEXT_24 = ") selectedElement).getView();" + NL + "\t\t\t\t} else if (selectedElement instanceof ";
  protected final String TEXT_25 = ") {" + NL + "\t\t\t\t\tselectedElement = ((";
  protected final String TEXT_26 = ") selectedElement).getAdapter(";
  protected final String TEXT_27 = ".class);" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (selectedElement instanceof ";
  protected final String TEXT_28 = ") {" + NL + "\t\t\t\t\t";
  protected final String TEXT_29 = " diagram = (";
  protected final String TEXT_30 = ") selectedElement;" + NL + "\t\t\t\t\tif (";
  protected final String TEXT_31 = ".MODEL_ID.equals(";
  protected final String TEXT_32 = ".getModelID(diagram))) {" + NL + "\t\t\t\t\t\tmyDiagram = diagram;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tsetEnabled(myDiagram != null);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void run() {" + NL + "\t\t\tif (myDiagram == null || myDiagram.eResource() == null) {" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t\t" + NL + "\t\t\t";
  protected final String TEXT_33 = " editorInput = getEditorInput();" + NL + "\t\t\t";
  protected final String TEXT_34 = " page = myViewerSite.getPage();" + NL + "\t\t \ttry {" + NL + "\t\t\t\tpage.openEditor(editorInput, ";
  protected final String TEXT_35 = ".ID);" + NL + "\t\t\t} catch (";
  protected final String TEXT_36 = " e) {" + NL + "\t\t\t\t";
  protected final String TEXT_37 = ".getInstance().logError(\"Exception while openning diagram\", e);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_38 = " getEditorInput() {" + NL + "\t\t\t";
  protected final String TEXT_39 = " diagramResource = myDiagram.eResource();";
  protected final String TEXT_40 = NL + "\t\t\tfor (";
  protected final String TEXT_41 = " it = diagramResource.getContents().iterator(); it.hasNext();) {" + NL + "\t\t\t\t";
  protected final String TEXT_42 = " nextEObject = (";
  protected final String TEXT_43 = ") it.next();" + NL + "\t\t\t\tif (nextEObject == myDiagram) {" + NL + "\t\t\t\t\treturn new ";
  protected final String TEXT_44 = "(";
  protected final String TEXT_45 = ".getFile(diagramResource));" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (nextEObject instanceof Diagram) {" + NL + "\t\t\t\t\tbreak;" + NL + "\t\t\t\t}" + NL + "\t\t\t}";
  protected final String TEXT_46 = NL + "\t\t\treturn new ";
  protected final String TEXT_47 = "(diagramResource.getURI().appendFragment(diagramResource.getURIFragment(myDiagram)));" + NL + "\t\t}" + NL + "\t\t" + NL + "\t}" + NL + "" + NL + "}";
  protected final String TEXT_48 = NL;
a74 1
    stringBuffer.append(TEXT_1);
d79 2
a81 2
    stringBuffer.append(copyrightText.replaceAll("\n", "\n * "));
    stringBuffer.append(TEXT_3);
d84 2
d87 1
a87 1
    importManager.markImportLocation(stringBuffer);
d89 1
a89 1
    stringBuffer.append(genNavigator.getActionProviderClassName());
d91 1
a91 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.CommonActionProvider"));
d93 1
a93 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonActionExtensionSite"));
d99 1
a99 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
d101 1
a101 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IActionBars"));
d105 1
a105 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
d107 1
a107 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonActionConstants"));
a108 2
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
    stringBuffer.append(TEXT_16);
d123 2
d126 1
a126 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Action"));
d128 1
a128 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d132 1
a132 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
d134 1
a134 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
d138 1
a138 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName()));
d142 1
a142 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdaptable"));
d144 1
a144 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
d150 1
a150 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d152 1
a152 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartQualifiedClassName()));
d154 1
a154 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName()));
d156 1
a156 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
d158 1
a158 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPage"));
d160 1
a160 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName()));
d162 1
a162 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d164 1
a164 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
d166 1
a166 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
d168 1
a168 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
d170 1
a170 1
    if (genDiagram.getEditorGen().getApplication() == null) {
d172 1
a172 1
    stringBuffer.append(importManager.getImportedName("java.util.Iterator"));
d176 1
a176 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
d178 1
a178 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.part.FileEditorInput"));
d180 1
a180 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.workspace.util.WorkspaceSynchronizer"));
d182 1
a182 1
    }
d184 1
a184 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
a185 2
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_48);
@


1.5
log
@[175169] - Double-click on diagram in Project Explorer should open corresponding diagram editor as before
@
text
@d19 1
a19 1
  protected final String TEXT_2 = NL + "/*" + NL + " *";
d82 1
a82 1
    stringBuffer.append(copyrightText.replaceAll("\n", "\n *"));
@


1.4
log
@Removing commented out code.
@
text
@d49 17
a65 8
  protected final String TEXT_32 = ".getModelID(diagram))) {" + NL + "\t\t\t\t\t\tmyDiagram = diagram;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tsetEnabled(myDiagram != null);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void run() {" + NL + "\t\t\tif (myDiagram == null) {" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t\t";
  protected final String TEXT_33 = " editorInput = new ";
  protected final String TEXT_34 = "(myDiagram);" + NL + "\t\t\t";
  protected final String TEXT_35 = " page = myViewerSite.getPage();" + NL + "\t\t \ttry {" + NL + "\t\t\t\tpage.openEditor(editorInput, ";
  protected final String TEXT_36 = ".ID);" + NL + "\t\t\t} catch (";
  protected final String TEXT_37 = " e) {" + NL + "\t\t\t\t";
  protected final String TEXT_38 = ".getInstance().logError(\"Exception while openning diagram\", e);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t" + NL + "\t}" + NL + "" + NL + "}";
  protected final String TEXT_39 = NL;
d156 1
a156 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput"));
d158 1
a158 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput"));
d160 1
a160 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPage"));
d162 1
a162 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName()));
d164 1
a164 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d166 1
a166 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
d168 18
d187 1
a187 1
    stringBuffer.append(TEXT_39);
@


1.3
log
@Refactoring navigator to support cross-diagram shortcuts.
@
text
@d33 9
a41 9
  protected final String TEXT_16 = " menu) {" + NL + "/*\t\tif (!myContribute || getContext().getSelection().isEmpty()) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "" + NL + "\t\t";
  protected final String TEXT_17 = " selection = (";
  protected final String TEXT_18 = ") getContext().getSelection();" + NL + "" + NL + "\t\tmyOpenDiagramAction.selectionChanged(selection);" + NL + "\t\tif (myOpenDiagramAction.isEnabled()) {" + NL + "\t\t\tmenu.insertAfter(";
  protected final String TEXT_19 = ".GROUP_OPEN, myOpenDiagramAction);" + NL + "\t\t}*/" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class OpenDiagramAction extends ";
  protected final String TEXT_20 = " {" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_21 = " myDiagram;" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_22 = " myViewerSite;" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic OpenDiagramAction(";
  protected final String TEXT_23 = " viewerSite) {" + NL + "\t\t\tsuper(\"Open Diagram\");" + NL + "\t\t\tmyViewerSite = viewerSite;" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic final void selectionChanged(";
  protected final String TEXT_24 = " selection) {" + NL + "\t\t\tmyDiagram = null;" + NL + "\t\t\tif (selection.size() == 1) {" + NL + "\t\t\t\tObject selectedElement = selection.getFirstElement();" + NL + "\t\t\t\tif (selectedElement instanceof ";
d43 14
a56 16
  protected final String TEXT_26 = ") selectedElement).getView();" + NL + "\t\t\t\t} else if (selectedElement instanceof ";
  protected final String TEXT_27 = ") {" + NL + "\t\t\t\t\tselectedElement = ((";
  protected final String TEXT_28 = ") selectedElement).getAdapter(";
  protected final String TEXT_29 = ".class);" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (selectedElement instanceof ";
  protected final String TEXT_30 = ") {" + NL + "\t\t\t\t\t";
  protected final String TEXT_31 = " diagram = (";
  protected final String TEXT_32 = ") selectedElement;" + NL + "\t\t\t\t\tif (";
  protected final String TEXT_33 = ".MODEL_ID.equals(";
  protected final String TEXT_34 = ".getModelID(diagram))) {" + NL + "\t\t\t\t\t\tmyDiagram = diagram;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tsetEnabled(myDiagram != null);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void run() {" + NL + "\t\t\tif (myDiagram == null) {" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t\t";
  protected final String TEXT_35 = " editorInput = new ";
  protected final String TEXT_36 = "(myDiagram);" + NL + "\t\t\t";
  protected final String TEXT_37 = " page = myViewerSite.getPage();" + NL + "\t\t \ttry {" + NL + "\t\t\t\tpage.openEditor(editorInput, ";
  protected final String TEXT_38 = ".ID);" + NL + "\t\t\t} catch (";
  protected final String TEXT_39 = " e) {" + NL + "\t\t\t\t";
  protected final String TEXT_40 = ".getInstance().logError(\"Exception while openning diagram\", e);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t" + NL + "\t}" + NL + "" + NL + "}";
  protected final String TEXT_41 = NL;
d102 14
a115 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
d117 1
a117 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
d119 1
a119 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonMenuConstants"));
d121 1
a121 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Action"));
d123 1
a123 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d125 1
a125 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
d127 1
a127 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite"));
d129 1
a129 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection"));
d131 1
a131 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName()));
d133 1
a133 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName()));
d135 1
a135 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdaptable"));
d137 1
a137 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdaptable"));
d139 1
a139 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
d143 1
a143 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d145 1
a145 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d147 1
a147 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartQualifiedClassName()));
d149 1
a149 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName()));
d151 1
a151 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput"));
d153 1
a153 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput"));
d155 1
a155 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPage"));
d157 1
a157 1
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName()));
d159 1
a159 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
a160 4
    stringBuffer.append(importManager.getImportedName(genNavigator.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_40);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_41);
@


1.2
log
@Read-onlyness of property view is guaranteed by content provider.
@
text
@d43 16
a58 13
  protected final String TEXT_26 = ") selectedElement).getView();" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (selectedElement instanceof ";
  protected final String TEXT_27 = ") {" + NL + "\t\t\t\t\t";
  protected final String TEXT_28 = " diagram = (";
  protected final String TEXT_29 = ") selectedElement;" + NL + "\t\t\t\t\tif (";
  protected final String TEXT_30 = ".MODEL_ID.equals(";
  protected final String TEXT_31 = ".getModelID(diagram))) {" + NL + "\t\t\t\t\t\tmyDiagram = diagram;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tsetEnabled(myDiagram != null);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void run() {" + NL + "\t\t\tif (myDiagram == null) {" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t\t";
  protected final String TEXT_32 = " editorInput = new ";
  protected final String TEXT_33 = "(myDiagram);" + NL + "\t\t\t";
  protected final String TEXT_34 = " page = myViewerSite.getPage();" + NL + "\t\t \ttry {" + NL + "\t\t\t\tpage.openEditor(editorInput, ";
  protected final String TEXT_35 = ".ID);" + NL + "\t\t\t} catch (";
  protected final String TEXT_36 = " e) {" + NL + "\t\t\t\t";
  protected final String TEXT_37 = ".getInstance().logError(\"Exception while openning diagram\", e);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t" + NL + "\t}" + NL + "" + NL + "}";
  protected final String TEXT_38 = NL;
d124 6
d131 1
a131 1
    stringBuffer.append(TEXT_27);
d133 1
a133 1
    stringBuffer.append(TEXT_28);
d135 1
a135 1
    stringBuffer.append(TEXT_29);
d137 1
a137 1
    stringBuffer.append(TEXT_30);
d139 1
a139 1
    stringBuffer.append(TEXT_31);
d141 1
a141 1
    stringBuffer.append(TEXT_32);
d143 1
a143 1
    stringBuffer.append(TEXT_33);
d145 1
a145 1
    stringBuffer.append(TEXT_34);
d147 1
a147 1
    stringBuffer.append(TEXT_35);
d149 1
a149 1
    stringBuffer.append(TEXT_36);
d151 1
a151 1
    stringBuffer.append(TEXT_37);
d153 1
a153 1
    stringBuffer.append(TEXT_38);
@


1.1
log
@Open action for diagram nodes in Navigator added.
@
text
@d54 1
a54 1
  protected final String TEXT_37 = ".getInstance().logError(\"Exceptino while openning diagram\", e);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t" + NL + "\t}" + NL + "" + NL + "}";
@

