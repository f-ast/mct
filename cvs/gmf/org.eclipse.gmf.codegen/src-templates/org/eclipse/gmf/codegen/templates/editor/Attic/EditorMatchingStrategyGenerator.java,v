head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.01.17.11.46.14;	author ashatalin;	state dead;
branches;
next	1.3;

1.3
date	2005.10.19.17.56.08;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.19.15.36.37;	author atikhomirov;	state dead;
branches;
next	1.1;

1.1
date	2005.09.29.09.49.40;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Removing obsolete templates
@
text
@package org.eclipse.gmf.codegen.templates.editor;

import org.eclipse.gmf.codegen.gmfgen.*;

public class EditorMatchingStrategyGenerator
{
  protected static String nl;
  public static synchronized EditorMatchingStrategyGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    EditorMatchingStrategyGenerator result = new EditorMatchingStrategyGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "package ";
  protected final String TEXT_2 = ";" + NL + "" + NL + "import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.parts.DiagramDocumentEditorMatchingStrategy;" + NL + "import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;" + NL + "" + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class MDiagramEditorMatchingStrategy extends DiagramDocumentEditorMatchingStrategy {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic MEditingDomain getDefaultDomain() {" + NL + "\t\treturn MEditingDomain.INSTANCE;" + NL + "\t}" + NL + "}";
  protected final String TEXT_3 = NL;

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
    GenDiagram genDiagram = (GenDiagram) argument;
    stringBuffer.append(TEXT_1);
    stringBuffer.append(genDiagram.getEditorPackageName());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(TEXT_3);
    return stringBuffer.toString();
  }
}
@


1.3
log
@[ashatalin] #112988 use either same as diagram or separate file to persist domain model
@
text
@@


1.2
log
@[dstadnik] #113074  diagram action bar contributor
@
text
@@


1.1
log
@[dstadnik] Use Notation Model as runtime model
@
text
@@

