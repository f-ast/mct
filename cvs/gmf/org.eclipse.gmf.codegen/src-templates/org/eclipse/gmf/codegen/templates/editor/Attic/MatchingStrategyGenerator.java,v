head	1.16;
access;
symbols
	v20081022-1925:1.16
	v20081015-1925:1.16
	v20081008-1925:1.16
	v20081001-1925:1.16
	v20080924-1925:1.16
	v20080917-1925:1.16
	v20080911-1728:1.16
	v20080910-1520:1.16
	v20080903-1520:1.16
	v20080827-1520:1.16
	v20080813-1520:1.16
	v20080806-1520:1.16
	v20070322-1100:1.15
	v20060316-0600:1.15
	v20070307-0700:1.15
	v20070301-1200:1.15
	v20070228-2000:1.15
	v20070221-1500:1.15
	v20070208-1800:1.15
	v20070202-0200:1.12
	v20070103-0300:1.15
	M4_20:1.15
	v20061222-1800:1.15
	v20061218-1200:1.15
	v20061214-0000:1.15
	v20061120-1300:1.15
	M3_20:1.14
	v20061117-0800:1.14
	v20061027-1200:1.12
	v20061020-1000:1.12
	v20061013-1330:1.12
	v20060919-0800:1.12
	v20060907-1100:1.12
	M1_20:1.12
	v20060904-1500:1.12
	v20060824-1600:1.12
	v20060817-1500:1.12
	v20060728-0500:1.12
	v20060713-1700:1.12
	R1_0_maintenance:1.12.0.2
	R1_0:1.12
	v20060627-1200:1.12
	v20060626-1420:1.12
	v20060620-0400:1.12
	v20060616-1400:1.12
	v20060616-1200:1.12
	v20060609-1400:1.12
	v20060531-1730:1.11
	v20060530-1930:1.11
	v20060526-1200:1.10
	v20060519-1300:1.10
	v20060519-0800:1.10
	v20060512-1000:1.10
	I20060512-1000:1.10
	I20060505-1400:1.10
	I20060428-1300:1.10
	I20060424-0500:1.10
	I20060424-0300:1.10
	M6_10:1.10
	I20060407-1200:1.7
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.16
date	2007.03.22.20.48.50;	author ashatalin;	state dead;
branches;
next	1.15;
commitid	14974602ebb14567;

1.15
date	2006.11.17.11.14.16;	author dstadnik;	state Exp;
branches;
next	1.14;
commitid	7c5e455d99874567;

1.14
date	2006.11.08.14.06.28;	author ashatalin;	state Exp;
branches;
next	1.13;

1.13
date	2006.10.17.19.19.54;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.06.01.09.14.34;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.29.18.20.56;	author ashatalin;	state Exp;
branches;
next	1.10;

1.10
date	2006.04.08.17.19.56;	author ashatalin;	state Exp;
branches;
next	1.9;

1.9
date	2006.04.08.16.56.36;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.08.11.41.49;	author dstadnik;	state dead;
branches;
next	1.7;

1.7
date	2006.04.07.14.49.25;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.07.15.45.28;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.08.17.15.50;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.16.06.19;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.25.06.54.36;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.15.12.03.34;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.19.15.36.38;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Fixing problems with NavigatorLinkHelper.
@
text
@package org.eclipse.gmf.codegen.templates.editor;

import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.gmf.common.codegen.*;

public class MatchingStrategyGenerator
{
  protected static String nl;
  public static synchronized MatchingStrategyGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    MatchingStrategyGenerator result = new MatchingStrategyGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "/*" + NL + " *";
  protected final String TEXT_3 = NL + " */";
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_6 = " implements ";
  protected final String TEXT_7 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean matches(";
  protected final String TEXT_8 = " editorRef, ";
  protected final String TEXT_9 = " input) {";
  protected final String TEXT_10 = NL + "        ";
  protected final String TEXT_11 = " editorInput;" + NL + "        try {" + NL + "            editorInput = editorRef.getEditorInput();" + NL + "        } catch (";
  protected final String TEXT_12 = " e) {" + NL + "            return false;" + NL + "        }" + NL + "        " + NL + "        if (editorInput.equals(input)) {" + NL + "        \treturn true;" + NL + "        }" + NL + "        ";
  protected final String TEXT_13 = NL + "        if (editorInput instanceof ";
  protected final String TEXT_14 = " && input instanceof ";
  protected final String TEXT_15 = ") {" + NL + "        \treturn ((";
  protected final String TEXT_16 = ") editorInput).getFile().equals(((";
  protected final String TEXT_17 = ") input).getFile());" + NL + "        }";
  protected final String TEXT_18 = NL + NL + "\t\t";
  protected final String TEXT_19 = " editor = editorRef.getEditor(false);" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_20 = " && editor instanceof ";
  protected final String TEXT_21 = ") {" + NL + "\t\t\t";
  protected final String TEXT_22 = " editorDiagram = ((";
  protected final String TEXT_23 = ") editor).getDiagram();" + NL + "\t\t\t";
  protected final String TEXT_24 = " otherDiagram = ((";
  protected final String TEXT_25 = ") input).getDiagram();" + NL + "\t\t\treturn equals(editorDiagram, otherDiagram);" + NL + "\t\t}" + NL + "\t\treturn false;" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean equals(";
  protected final String TEXT_26 = " editorDiagram, ";
  protected final String TEXT_27 = " otherDiagram) {" + NL + "\t\t";
  protected final String TEXT_28 = " editorResource = editorDiagram.eResource();" + NL + "\t\t";
  protected final String TEXT_29 = " otherResource = otherDiagram.eResource();" + NL + "\t\tif (editorResource != null && otherResource != null) {" + NL + "\t\t\t";
  protected final String TEXT_30 = " editorURI = editorResource.getURI();" + NL + "\t\t\t";
  protected final String TEXT_31 = " otherURI = otherResource.getURI();" + NL + "\t\t\tString editorURIFragment = editorResource.getURIFragment(editorDiagram);" + NL + "\t\t\tString otherURIFragment = otherResource.getURIFragment(otherDiagram);" + NL + "\t\t\treturn editorURI.equals(otherURI) && editorURIFragment.equals(otherURIFragment);" + NL + "\t\t}" + NL + "\t\treturn false;" + NL + "\t}" + NL + "" + NL + "}";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];

    stringBuffer.append(TEXT_1);
    
String copyrightText = genDiagram.getEditorGen().getCopyrightText();
if (copyrightText != null && copyrightText.trim().length() > 0) {

    stringBuffer.append(TEXT_2);
    stringBuffer.append(copyrightText.replaceAll("\n", "\n *"));
    stringBuffer.append(TEXT_3);
    }
    importManager.emitPackageStatement(stringBuffer);
    stringBuffer.append(TEXT_4);
    importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_5);
    stringBuffer.append(genDiagram.getMatchingStrategyClassName());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorMatchingStrategy"));
    stringBuffer.append(TEXT_7);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorReference"));
    stringBuffer.append(TEXT_8);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_9);
    stringBuffer.append(TEXT_10);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_11);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_12);
     /* Workaround for IFileEditorInputProxy comparision.. */ 
    if (genDiagram.getEditorGen().getApplication() == null) {
    stringBuffer.append(TEXT_13);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_14);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_15);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_16);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_17);
    }
    stringBuffer.append(TEXT_18);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorPart"));
    stringBuffer.append(TEXT_19);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput"));
    stringBuffer.append(TEXT_20);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getEditor().getQualifiedClassName()));
    stringBuffer.append(TEXT_21);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_22);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getEditor().getQualifiedClassName()));
    stringBuffer.append(TEXT_23);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_24);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput"));
    stringBuffer.append(TEXT_25);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_26);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_27);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
    stringBuffer.append(TEXT_28);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
    stringBuffer.append(TEXT_29);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_30);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_31);
    importManager.emitSortedImports();
    return stringBuffer.toString();
  }
}
@


1.15
log
@do not refer to FileEditorInput from RCP app
@
text
@@


1.14
log
@LinkHelper adopted to work correctly with shortcuts.
@
text
@d34 15
a48 14
  protected final String TEXT_17 = ") input).getFile());" + NL + "        }" + NL + "" + NL + "\t\t";
  protected final String TEXT_18 = " editor = editorRef.getEditor(false);" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_19 = " && editor instanceof ";
  protected final String TEXT_20 = ") {" + NL + "\t\t\t";
  protected final String TEXT_21 = " editorDiagram = ((";
  protected final String TEXT_22 = ") editor).getDiagram();" + NL + "\t\t\t";
  protected final String TEXT_23 = " otherDiagram = ((";
  protected final String TEXT_24 = ") input).getDiagram();" + NL + "\t\t\treturn equals(editorDiagram, otherDiagram);" + NL + "\t\t}" + NL + "\t\treturn false;" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean equals(";
  protected final String TEXT_25 = " editorDiagram, ";
  protected final String TEXT_26 = " otherDiagram) {" + NL + "\t\t";
  protected final String TEXT_27 = " editorResource = editorDiagram.eResource();" + NL + "\t\t";
  protected final String TEXT_28 = " otherResource = otherDiagram.eResource();" + NL + "\t\tif (editorResource != null && otherResource != null) {" + NL + "\t\t\t";
  protected final String TEXT_29 = " editorURI = editorResource.getURI();" + NL + "\t\t\t";
  protected final String TEXT_30 = " otherURI = otherResource.getURI();" + NL + "\t\t\tString editorURIFragment = editorResource.getURIFragment(editorDiagram);" + NL + "\t\t\tString otherURIFragment = otherResource.getURIFragment(otherDiagram);" + NL + "\t\t\treturn editorURI.equals(otherURI) && editorURIFragment.equals(otherURIFragment);" + NL + "\t\t}" + NL + "\t\treturn false;" + NL + "\t}" + NL + "" + NL + "}";
d84 1
d94 2
d97 1
a97 1
    stringBuffer.append(TEXT_18);
d99 1
a99 1
    stringBuffer.append(TEXT_19);
d101 1
a101 1
    stringBuffer.append(TEXT_20);
d103 1
a103 1
    stringBuffer.append(TEXT_21);
d105 1
a105 1
    stringBuffer.append(TEXT_22);
d107 1
a107 1
    stringBuffer.append(TEXT_23);
a108 2
    stringBuffer.append(TEXT_24);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d112 1
a112 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
d116 1
a116 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d120 2
@


1.13
log
@Open action for diagram nodes in Navigator added.
@
text
@d29 19
a47 14
  protected final String TEXT_12 = " e) {" + NL + "            return false;" + NL + "        }" + NL + "        " + NL + "        if (editorInput.equals(input)) {" + NL + "        \treturn true;" + NL + "        }" + NL + "" + NL + "\t\t";
  protected final String TEXT_13 = " editor = editorRef.getEditor(false);" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_14 = " && editor instanceof ";
  protected final String TEXT_15 = ") {" + NL + "\t\t\t";
  protected final String TEXT_16 = " editorDiagram = ((";
  protected final String TEXT_17 = ") editor).getDiagram();" + NL + "\t\t\t";
  protected final String TEXT_18 = " otherDiagram = ((";
  protected final String TEXT_19 = ") input).getDiagram();" + NL + "\t\t\treturn equals(editorDiagram, otherDiagram);" + NL + "\t\t}" + NL + "\t\treturn false;" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean equals(";
  protected final String TEXT_20 = " editorDiagram, ";
  protected final String TEXT_21 = " otherDiagram) {" + NL + "\t\t";
  protected final String TEXT_22 = " editorResource = editorDiagram.eResource();" + NL + "\t\t";
  protected final String TEXT_23 = " otherResource = otherDiagram.eResource();" + NL + "\t\tif (editorResource != null && otherResource != null) {" + NL + "\t\t\t";
  protected final String TEXT_24 = " editorURI = editorResource.getURI();" + NL + "\t\t\t";
  protected final String TEXT_25 = " otherURI = otherResource.getURI();" + NL + "\t\t\tString editorURIFragment = editorResource.getURIFragment(editorDiagram);" + NL + "\t\t\tString otherURIFragment = otherResource.getURIFragment(otherDiagram);" + NL + "\t\t\treturn editorURI.equals(otherURI) && editorURIFragment.equals(otherURIFragment);" + NL + "\t\t}" + NL + "\t\treturn false;" + NL + "\t}" + NL + "" + NL + "}";
d82 1
a82 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorPart"));
d84 1
a84 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput"));
d86 1
a86 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getEditor().getQualifiedClassName()));
d88 1
a88 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d90 1
a90 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getEditor().getQualifiedClassName()));
d92 1
a92 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d96 1
a96 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d100 10
d111 1
a111 1
    stringBuffer.append(TEXT_22);
d113 1
a113 1
    stringBuffer.append(TEXT_23);
d115 1
a115 1
    stringBuffer.append(TEXT_24);
d117 1
a117 1
    stringBuffer.append(TEXT_25);
@


1.12
log
@header comment should not be a javadoc comment
@
text
@d21 22
a42 3
  protected final String TEXT_4 = NL + NL + "import org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditorMatchingStrategy;" + NL + "" + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_5 = " extends DiagramDocumentEditorMatchingStrategy {}";
  protected final String TEXT_6 = NL;
d62 2
a64 1
    stringBuffer.append(TEXT_5);
d66 38
@


1.11
log
@Correcting copyright processing
@
text
@d19 1
a19 1
  protected final String TEXT_2 = NL + "/**" + NL + " *";
@


1.10
log
@using M6 to generate code.
@
text
@d19 1
a19 1
  protected final String TEXT_2 = NL + "/*" + NL + " * ";
d38 1
a38 1
    stringBuffer.append(copyrightText.replaceAll("\n", "\n * "));
@


1.9
log
@restore generators
@
text
@d27 1
a27 1
    StringBuffer stringBuffer = new StringBuffer();
@


1.8
log
@#134095 do not store compiled templates in cvs
@
text
@d27 1
a27 1
    final StringBuffer stringBuffer = new StringBuffer();
@


1.7
log
@Switching to eclipse M6.
@
text
@@


1.6
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d27 1
a27 1
    StringBuffer stringBuffer = new StringBuffer();
@


1.5
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d18 6
a23 3
  protected final String TEXT_1 = NL + "import org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditorMatchingStrategy;" + NL + "" + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_2 = " extends DiagramDocumentEditorMatchingStrategy {}";
  protected final String TEXT_3 = NL;
d29 1
a29 1
GenDiagram diagram = (GenDiagram) ((Object[]) argument)[0];
a31 1
importManager.emitPackageStatement(stringBuffer);
d33 4
a36 1
    stringBuffer.append(diagram.getMatchingStrategyClassName());
d38 1
d40 6
@


1.4
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d4 1
d18 3
a20 4
  protected final String TEXT_1 = "package ";
  protected final String TEXT_2 = ";" + NL + "" + NL + "import org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditorMatchingStrategy;" + NL + "" + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_3 = " extends DiagramDocumentEditorMatchingStrategy {}";
  protected final String TEXT_4 = NL;
d25 5
a29 1
    GenDiagram diagram = (GenDiagram) argument;
d31 1
a31 1
    stringBuffer.append(diagram.getEditorGen().getEditor().getPackageName());
a32 1
    stringBuffer.append(diagram.getMatchingStrategyClassName());
a33 1
    stringBuffer.append(TEXT_4);
@


1.3
log
@#117132 Remove unnecessary code
@
text
@d27 1
a27 1
    stringBuffer.append(diagram.getEditorPackageName());
@


1.2
log
@update imports
@
text
@d18 2
a19 2
  protected final String TEXT_2 = ";" + NL + "" + NL + "import org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditorMatchingStrategy;" + NL + "import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;" + NL + "" + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_3 = " extends DiagramDocumentEditorMatchingStrategy {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic MEditingDomain getDefaultDomain() {" + NL + "\t\treturn MEditingDomain.INSTANCE;" + NL + "\t}" + NL + "}";
@


1.1
log
@[dstadnik] #113074  diagram action bar contributor
@
text
@d18 1
a18 1
  protected final String TEXT_2 = ";" + NL + "" + NL + "import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.parts.DiagramDocumentEditorMatchingStrategy;" + NL + "import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;" + NL + "" + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
@

