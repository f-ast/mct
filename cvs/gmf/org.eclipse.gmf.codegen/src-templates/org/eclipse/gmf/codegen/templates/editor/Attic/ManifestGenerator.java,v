head	1.33;
access;
symbols
	v20081022-1925:1.33
	v20081015-1925:1.33
	v20081008-1925:1.33
	v20081001-1925:1.33
	v20080924-1925:1.33
	v20080917-1925:1.33
	v20080911-1728:1.33
	v20080910-1520:1.33
	v20080903-1520:1.33
	v20080827-1520:1.33
	v20080813-1520:1.33
	v20080806-1520:1.33
	v20070427-0600:1.32
	v20070420-1000:1.32
	v20070413-1300:1.32
	v20070405-1100:1.32
	v20070403-1500:1.32
	v20070330-1300:1.32
	v20060330-1300:1.32
	v20070322-1100:1.32
	v20060316-0600:1.31
	v20070307-0700:1.30
	v20070301-1200:1.30
	v20070228-2000:1.30
	v20070221-1500:1.30
	v20070208-1800:1.30
	v20070202-0200:1.20
	v20070103-0300:1.30
	M4_20:1.30
	v20061222-1800:1.30
	v20061218-1200:1.30
	v20061214-0000:1.30
	v20061120-1300:1.30
	M3_20:1.28
	v20061117-0800:1.28
	v20061027-1200:1.20
	v20061020-1000:1.20
	v20061013-1330:1.27
	v20060919-0800:1.20
	v20060907-1100:1.20
	M1_20:1.20
	v20060904-1500:1.20
	v20060824-1600:1.20
	v20060817-1500:1.20
	v20060728-0500:1.20
	v20060713-1700:1.20
	R1_0_maintenance:1.20.0.2
	R1_0:1.20
	v20060627-1200:1.20
	v20060626-1420:1.20
	v20060620-0400:1.19
	v20060616-1400:1.19
	v20060616-1200:1.18
	v20060609-1400:1.18
	v20060531-1730:1.17
	v20060530-1930:1.17
	v20060526-1200:1.17
	v20060519-1300:1.15
	v20060519-0800:1.15
	v20060512-1000:1.15
	I20060512-1000:1.15
	I20060505-1400:1.15
	I20060428-1300:1.15
	I20060424-0500:1.15
	I20060424-0300:1.15
	M6_10:1.15
	I20060407-1200:1.12
	I20060331-1000:1.11
	I20060324-0300:1.10
	I20060317-1300:1.10
	I20060317-1200:1.10
	I20060316-1300:1.10
	I20060309-1300:1.9
	M5_10:1.9
	S20060303-1600:1.9
	I20060227-1730:1.7
	I20060216-1945:1.6
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.33
date	2007.05.04.11.34.18;	author dstadnik;	state dead;
branches;
next	1.32;
commitid	2c60463b1a394567;

1.32
date	2007.03.16.16.09.53;	author ashatalin;	state Exp;
branches;
next	1.31;
commitid	565445fac1444567;

1.31
date	2007.03.14.13.14.05;	author atikhomirov;	state Exp;
branches;
next	1.30;
commitid	2a1245f7f51d4567;

1.30
date	2006.11.17.12.15.36;	author dstadnik;	state Exp;
branches;
next	1.29;
commitid	153d455da7e74567;

1.29
date	2006.11.17.11.53.27;	author dstadnik;	state Exp;
branches;
next	1.28;
commitid	7510455da2b64567;

1.28
date	2006.11.03.20.43.48;	author ashatalin;	state Exp;
branches;
next	1.27;

1.27
date	2006.10.09.16.27.24;	author dstadnik;	state Exp;
branches;
next	1.26;

1.26
date	2006.10.03.18.14.14;	author atikhomirov;	state Exp;
branches;
next	1.25;

1.25
date	2006.10.03.08.32.24;	author dstadnik;	state Exp;
branches;
next	1.24;

1.24
date	2006.09.29.12.15.04;	author dstadnik;	state Exp;
branches;
next	1.23;

1.23
date	2006.09.27.10.04.42;	author dstadnik;	state Exp;
branches;
next	1.22;

1.22
date	2006.09.15.20.44.31;	author atikhomirov;	state Exp;
branches;
next	1.21;

1.21
date	2006.09.11.18.21.36;	author ashatalin;	state Exp;
branches;
next	1.20;

1.20
date	2006.06.20.15.18.02;	author ashatalin;	state Exp;
branches;
next	1.19;

1.19
date	2006.06.16.17.55.39;	author radvorak;	state Exp;
branches;
next	1.18;

1.18
date	2006.06.08.14.32.24;	author ashatalin;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.26.14.16.24;	author dstadnik;	state Exp;
branches;
next	1.16;

1.16
date	2006.05.24.19.23.54;	author atikhomirov;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.08.17.19.56;	author ashatalin;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.08.16.56.36;	author dstadnik;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.08.11.41.49;	author dstadnik;	state dead;
branches;
next	1.12;

1.12
date	2006.04.07.14.49.25;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.29.15.18.24;	author ashatalin;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.13.11.02.30;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.03.11.36.22;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.02.15.26.49;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.21.12.34.42;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.09.16.16.00;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.08.16.06.19;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.00.17.46;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.26.13.36.40;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.10.13.49.37;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.29.18.14.04;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.33
log
@rewrite manifest.mf in xpand
@
text
@package org.eclipse.gmf.codegen.templates.editor;

import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.emf.codegen.ecore.genmodel.*;
import java.util.*;

public class ManifestGenerator
{
  protected static String nl;
  public static synchronized ManifestGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    ManifestGenerator result = new ManifestGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "Manifest-Version: 1.0" + NL + "Bundle-ManifestVersion: 2" + NL + "Bundle-Name: %pluginName" + NL + "Bundle-SymbolicName: ";
  protected final String TEXT_2 = "; singleton:=true" + NL + "Bundle-Version: ";
  protected final String TEXT_3 = NL + "Bundle-ClassPath: ." + NL + "Bundle-Activator: ";
  protected final String TEXT_4 = NL + "Bundle-Vendor: %providerName" + NL + "Bundle-Localization: plugin" + NL + "Export-Package: ";
  protected final String TEXT_5 = ", ";
  protected final String TEXT_6 = NL + " ";
  protected final String TEXT_7 = ",";
  protected final String TEXT_8 = NL + " ";
  protected final String TEXT_9 = NL + "Require-Bundle: org.eclipse.core.runtime,";
  protected final String TEXT_10 = NL + " org.eclipse.core.resources,";
  protected final String TEXT_11 = NL + " org.eclipse.core.expressions,";
  protected final String TEXT_12 = NL + " org.eclipse.jface,";
  protected final String TEXT_13 = NL + " org.eclipse.ui.ide,";
  protected final String TEXT_14 = NL + " org.eclipse.ui.views,";
  protected final String TEXT_15 = NL + " org.eclipse.ui.navigator,";
  protected final String TEXT_16 = NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.ecore.xmi," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
  protected final String TEXT_17 = NL + " org.eclipse.gmf.runtime.diagram.ui.printing.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.printing,";
  protected final String TEXT_18 = NL + " org.eclipse.gmf.runtime.diagram.ui.properties,";
  protected final String TEXT_19 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers,";
  protected final String TEXT_20 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide,";
  protected final String TEXT_21 = NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor,";
  protected final String TEXT_22 = NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,";
  protected final String TEXT_23 = NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_24 = ",";
  protected final String TEXT_25 = NL + " ";
  protected final String TEXT_26 = ";visibility:=reexport";
  protected final String TEXT_27 = NL + "Eclipse-LazyStart: true" + NL + "Bundle-RequiredExecutionEnvironment: J2SE-1.4";
  protected final String TEXT_28 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
final GenPlugin genPlugin = (GenPlugin) argument;
final GenModel genModel = genPlugin.getEditorGen().getDomainGenModel();
final Set<String> requiredPluginIDs = new LinkedHashSet<String>();
if (genModel != null) {
	requiredPluginIDs.add(genModel.getModelPluginID());
	requiredPluginIDs.add(genModel.getEditPluginID());

	for (Iterator it = genModel.getAllUsedGenPackagesWithClassifiers().iterator(); it.hasNext();) {
		GenModel nextGenModel = ((GenPackage) it.next()).getGenModel();
		if (nextGenModel.hasEditSupport()) {
			requiredPluginIDs.add(nextGenModel.getModelPluginID());
			requiredPluginIDs.add(nextGenModel.getEditPluginID());
		}
	}
}
	requiredPluginIDs.addAll(genPlugin.getRequiredPluginIDs());
	for (Iterator<String> it = requiredPluginIDs.iterator(); it.hasNext();) {
		String next =  it.next();
		if (next == null || next.trim().length() == 0) {
			it.remove();
		}
	}

Iterator<String> requiredBundleIterator = requiredPluginIDs.iterator();

    stringBuffer.append(TEXT_1);
    stringBuffer.append(genPlugin.getID());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(genPlugin.getVersion());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(genPlugin.getActivatorQualifiedClassName());
    stringBuffer.append(TEXT_4);
    stringBuffer.append(genPlugin.getEditorGen().getDiagram().getEditPartsPackageName());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(genPlugin.getEditorGen().getEditor().getPackageName());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(genPlugin.getEditorGen().getDiagram().getProvidersPackageName());
    stringBuffer.append(TEXT_9);
    if (genPlugin.getEditorGen().getApplication() == null) {
    stringBuffer.append(TEXT_10);
    }
    if (genPlugin.getEditorGen().getDiagram().generateShortcutIcon() || (genPlugin.getEditorGen().getNavigator() != null && genPlugin.getEditorGen().getNavigator().isGenerateDomainModelNavigator())) {
    stringBuffer.append(TEXT_11);
    }
    stringBuffer.append(TEXT_12);
    if (genPlugin.getEditorGen().getApplication() == null) {
    stringBuffer.append(TEXT_13);
    }
    stringBuffer.append(TEXT_14);
    if (genPlugin.getEditorGen().getNavigator() != null) {
    stringBuffer.append(TEXT_15);
    }
    stringBuffer.append(TEXT_16);
    if (genPlugin.isPrintingEnabled()) {
    stringBuffer.append(TEXT_17);
    }
    if (genPlugin.getEditorGen().getPropertySheet() != null) {
    stringBuffer.append(TEXT_18);
    }
    stringBuffer.append(TEXT_19);
    if (genPlugin.getEditorGen().getApplication() == null) {
    stringBuffer.append(TEXT_20);
    }
    stringBuffer.append(TEXT_21);
    if (genPlugin.getEditorGen().getApplication() == null) {
    stringBuffer.append(TEXT_22);
    }
    stringBuffer.append(TEXT_23);
    while(requiredBundleIterator.hasNext()) {
    stringBuffer.append(TEXT_24);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(requiredBundleIterator.next());
    stringBuffer.append(TEXT_26);
    }
    stringBuffer.append(TEXT_27);
    stringBuffer.append(TEXT_28);
    return stringBuffer.toString();
  }
}
@


1.32
log
@Generating generic navigator providers for domain model.
@
text
@@


1.31
log
@explicitly specify execution environment. keep 1.4 for now as it's our current generation target
@
text
@d95 1
a95 1
    if (genPlugin.getEditorGen().getDiagram().generateShortcutIcon()) {
@


1.30
log
@remove core.resources dep for rcp app
@
text
@d45 1
a45 1
  protected final String TEXT_27 = NL + "Eclipse-LazyStart: true";
@


1.29
log
@remove stale deps
@
text
@d27 20
a46 19
  protected final String TEXT_9 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources,";
  protected final String TEXT_10 = NL + " org.eclipse.core.expressions,";
  protected final String TEXT_11 = NL + " org.eclipse.jface,";
  protected final String TEXT_12 = NL + " org.eclipse.ui.ide,";
  protected final String TEXT_13 = NL + " org.eclipse.ui.views,";
  protected final String TEXT_14 = NL + " org.eclipse.ui.navigator,";
  protected final String TEXT_15 = NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.ecore.xmi," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
  protected final String TEXT_16 = NL + " org.eclipse.gmf.runtime.diagram.ui.printing.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.printing,";
  protected final String TEXT_17 = NL + " org.eclipse.gmf.runtime.diagram.ui.properties,";
  protected final String TEXT_18 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers,";
  protected final String TEXT_19 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide,";
  protected final String TEXT_20 = NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor,";
  protected final String TEXT_21 = NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,";
  protected final String TEXT_22 = NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_23 = ",";
  protected final String TEXT_24 = NL + " ";
  protected final String TEXT_25 = ";visibility:=reexport";
  protected final String TEXT_26 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_27 = NL;
d92 1
a92 1
    if (genPlugin.getEditorGen().getDiagram().generateShortcutIcon()) {
d95 1
d97 2
d100 1
a100 1
    stringBuffer.append(TEXT_12);
d102 1
a102 1
    stringBuffer.append(TEXT_13);
d104 1
a104 1
    stringBuffer.append(TEXT_14);
d106 1
a106 1
    stringBuffer.append(TEXT_15);
d108 1
a108 1
    stringBuffer.append(TEXT_16);
d111 1
a111 1
    stringBuffer.append(TEXT_17);
d113 1
a113 1
    stringBuffer.append(TEXT_18);
d115 1
a115 1
    stringBuffer.append(TEXT_19);
d117 1
a117 1
    stringBuffer.append(TEXT_20);
d119 1
a119 1
    stringBuffer.append(TEXT_21);
d121 1
a121 1
    stringBuffer.append(TEXT_22);
a122 1
    stringBuffer.append(TEXT_23);
d124 1
d126 1
a126 1
    stringBuffer.append(TEXT_25);
a127 1
    stringBuffer.append(TEXT_26);
d129 1
@


1.28
log
@Refactoring navigator to support cross-diagram shortcuts.
@
text
@d31 1
a31 1
  protected final String TEXT_13 = NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.ui.workbench.texteditor,";
@


1.27
log
@add dep on navigator only if needed
@
text
@d27 19
a45 17
  protected final String TEXT_9 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface,";
  protected final String TEXT_10 = NL + " org.eclipse.ui.ide,";
  protected final String TEXT_11 = NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.ui.workbench.texteditor,";
  protected final String TEXT_12 = NL + " org.eclipse.ui.navigator,";
  protected final String TEXT_13 = NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.ecore.xmi," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
  protected final String TEXT_14 = NL + " org.eclipse.gmf.runtime.diagram.ui.printing.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.printing,";
  protected final String TEXT_15 = NL + " org.eclipse.gmf.runtime.diagram.ui.properties,";
  protected final String TEXT_16 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers,";
  protected final String TEXT_17 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide,";
  protected final String TEXT_18 = NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor,";
  protected final String TEXT_19 = NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,";
  protected final String TEXT_20 = NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_21 = ",";
  protected final String TEXT_22 = NL + " ";
  protected final String TEXT_23 = ";visibility:=reexport";
  protected final String TEXT_24 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_25 = NL;
d91 1
a91 1
    if (genPlugin.getEditorGen().getApplication() == null) {
d95 1
a95 1
    if (genPlugin.getEditorGen().getNavigator() != null) {
d99 1
a99 1
    if (genPlugin.isPrintingEnabled()) {
a101 1
    if (genPlugin.getEditorGen().getPropertySheet() != null) {
d103 2
d106 1
a106 2
    stringBuffer.append(TEXT_16);
    if (genPlugin.getEditorGen().getApplication() == null) {
d114 1
a114 1
    while(requiredBundleIterator.hasNext()) {
d116 1
d118 1
a118 1
    stringBuffer.append(requiredBundleIterator.next());
a119 1
    }
d121 1
d123 3
@


1.26
log
@java 5 bits
@
text
@d29 15
a43 13
  protected final String TEXT_11 = NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.ui.workbench.texteditor," + NL + " org.eclipse.ui.navigator," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.ecore.xmi," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
  protected final String TEXT_12 = NL + " org.eclipse.gmf.runtime.diagram.ui.printing.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.printing,";
  protected final String TEXT_13 = NL + " org.eclipse.gmf.runtime.diagram.ui.properties,";
  protected final String TEXT_14 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers,";
  protected final String TEXT_15 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide,";
  protected final String TEXT_16 = NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor,";
  protected final String TEXT_17 = NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,";
  protected final String TEXT_18 = NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_19 = ",";
  protected final String TEXT_20 = NL + " ";
  protected final String TEXT_21 = ";visibility:=reexport";
  protected final String TEXT_22 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_23 = NL;
d93 1
a93 1
    if (genPlugin.isPrintingEnabled()) {
a95 1
    if (genPlugin.getEditorGen().getPropertySheet() != null) {
d97 2
d100 1
a100 2
    stringBuffer.append(TEXT_14);
    if (genPlugin.getEditorGen().getApplication() == null) {
d108 1
a108 1
    while(requiredBundleIterator.hasNext()) {
d110 1
d112 1
a112 1
    stringBuffer.append(requiredBundleIterator.next());
a113 1
    }
d115 1
d117 3
@


1.25
log
@#114200 remove ide dependency
@
text
@d49 1
a49 1
final Set requiredPluginIDs = new LinkedHashSet();
d63 2
a64 2
	for (Iterator it = requiredPluginIDs.iterator(); it.hasNext();) {
		String next =  (String) it.next();
d70 1
a70 1
Iterator requiredBundleIterator = requiredPluginIDs.iterator();
@


1.24
log
@#114200 remove editor.ide dep for rcp configuration
@
text
@d27 15
a41 13
  protected final String TEXT_9 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.ui.workbench.texteditor," + NL + " org.eclipse.ui.navigator," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.ecore.xmi," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
  protected final String TEXT_10 = NL + " org.eclipse.gmf.runtime.diagram.ui.printing.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.printing,";
  protected final String TEXT_11 = NL + " org.eclipse.gmf.runtime.diagram.ui.properties,";
  protected final String TEXT_12 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers,";
  protected final String TEXT_13 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide,";
  protected final String TEXT_14 = NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor,";
  protected final String TEXT_15 = NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,";
  protected final String TEXT_16 = NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_17 = ",";
  protected final String TEXT_18 = NL + " ";
  protected final String TEXT_19 = ";visibility:=reexport";
  protected final String TEXT_20 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_21 = NL;
d87 1
a87 1
    if (genPlugin.isPrintingEnabled()) {
a89 1
    if (genPlugin.getEditorGen().getPropertySheet() != null) {
d91 2
d94 1
a94 2
    stringBuffer.append(TEXT_12);
    if (genPlugin.getEditorGen().getApplication() == null) {
d102 1
a102 1
    while(requiredBundleIterator.hasNext()) {
d104 1
d106 1
a106 1
    stringBuffer.append(requiredBundleIterator.next());
a107 1
    }
d109 1
d111 3
@


1.23
log
@#114200 Provide an option to generate RCP application
@
text
@d29 11
a39 10
  protected final String TEXT_11 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers,";
  protected final String TEXT_12 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide,";
  protected final String TEXT_13 = NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,";
  protected final String TEXT_14 = NL + " org.eclipse.gmf.runtime.diagram.ui.properties,";
  protected final String TEXT_15 = NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_16 = ",";
  protected final String TEXT_17 = NL + " ";
  protected final String TEXT_18 = ";visibility:=reexport";
  protected final String TEXT_19 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_20 = NL;
d88 1
d90 2
d93 1
a93 1
    stringBuffer.append(TEXT_12);
a94 2
    stringBuffer.append(TEXT_13);
    if (genPlugin.getEditorGen().getPropertySheet() != null) {
d96 2
d99 1
a99 1
    stringBuffer.append(TEXT_15);
a100 1
    stringBuffer.append(TEXT_16);
d102 1
d104 1
a104 1
    stringBuffer.append(TEXT_18);
a105 1
    stringBuffer.append(TEXT_19);
d107 1
@


1.22
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d29 10
a38 8
  protected final String TEXT_11 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers," + NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide," + NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,";
  protected final String TEXT_12 = NL + " org.eclipse.gmf.runtime.diagram.ui.properties,";
  protected final String TEXT_13 = NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_14 = ",";
  protected final String TEXT_15 = NL + " ";
  protected final String TEXT_16 = ";visibility:=reexport";
  protected final String TEXT_17 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_18 = NL;
d88 1
a88 1
    if (genPlugin.getEditorGen().getPropertySheet() != null) {
d92 1
a92 1
    while(requiredBundleIterator.hasNext()) {
d94 1
d96 1
a96 1
    stringBuffer.append(requiredBundleIterator.next());
a97 1
    }
d99 1
d101 3
@


1.21
log
@Model navigator, initial version.
@
text
@d29 8
a36 6
  protected final String TEXT_11 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers," + NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide," + NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide," + NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_12 = ",";
  protected final String TEXT_13 = NL + " ";
  protected final String TEXT_14 = ";visibility:=reexport";
  protected final String TEXT_15 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_16 = NL;
d86 1
a86 1
    while(requiredBundleIterator.hasNext()) {
d88 1
d90 1
a90 1
    stringBuffer.append(requiredBundleIterator.next());
a91 1
    }
d93 1
d95 3
@


1.20
log
@#125826 org.eclipse.gmf.examples.taipan.gmf.editor.providers should be exposed in manifest
@
text
@d27 1
a27 1
  protected final String TEXT_9 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.ui.workbench.texteditor," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.ecore.xmi," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
@


1.19
log
@#147477 gmfgen.GenPlugin.getRequiredPluginIDs() is not called for pure design diagrams
@
text
@d23 12
a34 8
  protected final String TEXT_5 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.ui.workbench.texteditor," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.ecore.xmi," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
  protected final String TEXT_6 = NL + " org.eclipse.gmf.runtime.diagram.ui.printing.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.printing,";
  protected final String TEXT_7 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers," + NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide," + NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide," + NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_8 = ",";
  protected final String TEXT_9 = NL + " ";
  protected final String TEXT_10 = ";visibility:=reexport";
  protected final String TEXT_11 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_12 = NL;
d72 1
a72 1
    stringBuffer.append(genPlugin.getEditorGen().getEditor().getPackageName());
a73 1
    if (genPlugin.isPrintingEnabled()) {
d75 1
a75 1
    }
a76 1
    while(requiredBundleIterator.hasNext()) {
d78 1
d80 1
a80 1
    stringBuffer.append(requiredBundleIterator.next());
d84 1
d86 6
@


1.18
log
@#126249 Generate PrintPreview action for the diagram
@
text
@d50 1
a50 1

d58 1
a58 1
}
@


1.17
log
@#114175 allow to create diagram editor without domain model
@
text
@d24 1
a24 1
  protected final String TEXT_6 = "org.eclipse.gmf.runtime.diagram.ui.printing.render,";
@


1.16
log
@#142491 Errors in generated MANIFEST.MF
@
text
@d39 3
a41 2
requiredPluginIDs.add(genModel.getModelPluginID());
requiredPluginIDs.add(genModel.getEditPluginID());
d43 6
a48 5
for (Iterator it = genModel.getAllUsedGenPackagesWithClassifiers().iterator(); it.hasNext();) {
	GenModel nextGenModel = ((GenPackage) it.next()).getGenModel();
	if (nextGenModel.hasEditSupport()) {
		requiredPluginIDs.add(nextGenModel.getModelPluginID());
		requiredPluginIDs.add(nextGenModel.getEditPluginID());
a49 1
}
d51 6
a56 5
requiredPluginIDs.addAll(genPlugin.getRequiredPluginIDs());
for (Iterator it = requiredPluginIDs.iterator(); it.hasNext();) {
	String next =  (String) it.next();
	if (next == null || next.trim().length() == 0) {
		it.remove();
@


1.15
log
@using M6 to generate code.
@
text
@d51 6
@


1.14
log
@restore generators
@
text
@d34 1
a34 1
    StringBuffer stringBuffer = new StringBuffer();
@


1.13
log
@#134095 do not store compiled templates in cvs
@
text
@d34 1
a34 1
    final StringBuffer stringBuffer = new StringBuffer();
@


1.12
log
@Switching to eclipse M6.
@
text
@@


1.11
log
@#132465 Bidi3.2: [HCG]Encoding of the mindmap diagram is always ASCII
@
text
@d34 1
a34 1
    StringBuffer stringBuffer = new StringBuffer();
@


1.10
log
@#129145 do not use intermediate TextCompartmentEditParts
@
text
@d23 1
a23 1
  protected final String TEXT_5 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.ui.workbench.texteditor," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
@


1.9
log
@#130009 Enable audit rules on diagram (notation model) elements in gmfmap model
@
text
@d23 1
a23 1
  protected final String TEXT_5 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
@


1.8
log
@Removing obsolete dependency
@
text
@d45 1
@


1.7
log
@plugin version attribute added to genmodel to help those forgeting to set .qualifier when bootstraping our own editors
@
text
@d23 1
a23 1
  protected final String TEXT_5 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.core.compatibility," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
@


1.6
log
@Updating with new transaction API.
@
text
@d20 11
a30 10
  protected final String TEXT_2 = "; singleton:=true" + NL + "Bundle-Version: 1.0.0" + NL + "Bundle-ClassPath: ." + NL + "Bundle-Activator: ";
  protected final String TEXT_3 = NL + "Bundle-Vendor: %providerName" + NL + "Bundle-Localization: plugin" + NL + "Export-Package: ";
  protected final String TEXT_4 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.core," + NL + " org.eclipse.gmf.runtime.emf.core.compatibility," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
  protected final String TEXT_5 = "org.eclipse.gmf.runtime.diagram.ui.printing.render,";
  protected final String TEXT_6 = NL + " org.eclipse.gmf.runtime.diagram.ui.providers," + NL + " org.eclipse.gmf.runtime.diagram.ui.providers.ide," + NL + " org.eclipse.gmf.runtime.diagram.ui.render," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor," + NL + " org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide," + NL + " org.eclipse.gmf.runtime.notation.providers";
  protected final String TEXT_7 = ",";
  protected final String TEXT_8 = NL + " ";
  protected final String TEXT_9 = ";visibility:=reexport";
  protected final String TEXT_10 = NL + "Eclipse-LazyStart: true";
  protected final String TEXT_11 = NL;
d55 2
d58 1
a58 1
    stringBuffer.append(TEXT_3);
d60 1
a60 1
    stringBuffer.append(TEXT_4);
d62 1
a62 1
    stringBuffer.append(TEXT_5);
d64 1
a64 1
    stringBuffer.append(TEXT_6);
a65 1
    stringBuffer.append(TEXT_7);
d67 1
d69 1
a69 1
    stringBuffer.append(TEXT_9);
a70 1
    stringBuffer.append(TEXT_10);
d72 1
@


1.5
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d22 1
a22 1
  protected final String TEXT_4 = NL + "Require-Bundle: org.eclipse.core.runtime," + NL + " org.eclipse.core.resources," + NL + " org.eclipse.jface," + NL + " org.eclipse.ui.ide," + NL + " org.eclipse.ui.views," + NL + " org.eclipse.ui.workbench," + NL + " org.eclipse.emf.ecore," + NL + " org.eclipse.emf.edit.ui," + NL + " org.eclipse.gef;visibility:=reexport," + NL + " org.eclipse.gmf.runtime.emf.commands.core," + NL + " org.eclipse.gmf.runtime.emf.ui.properties," + NL + " org.eclipse.gmf.runtime.diagram.ui,";
@


1.4
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d56 1
a56 1
    stringBuffer.append(genPlugin.getEditorGen().getDiagram().getEditorPackageName());
@


1.3
log
@GenDiagram "slicing" goes on and this time attributes related to plugin activator class were moved into separate entity
@
text
@d36 1
a36 1
final GenModel genModel = genPlugin.getDiagram().getEMFGenModel();
d56 1
a56 1
    stringBuffer.append(genPlugin.getDiagram().getEditorPackageName());
@


1.2
log
@#123240, part 1 - get rid of StringArray datatype
@
text
@d35 2
a36 2
final GenDiagram genDiagram = (GenDiagram) argument;
final GenModel genModel = genDiagram.getEMFGenModel();
d48 1
a48 1
requiredPluginIDs.addAll(genDiagram.getRequiredPluginIDs());
d52 1
a52 1
    stringBuffer.append(genDiagram.getPluginID());
d54 1
a54 1
    stringBuffer.append(genDiagram.getPluginQualifiedClassName());
d56 1
a56 1
    stringBuffer.append(genDiagram.getEditorPackageName());
d58 1
a58 1
    if (genDiagram.isPrintingEnabled()) {
@


1.1
log
@#118447 new-style bundle manifest (manifest.mf)
@
text
@d48 1
a48 5
String[] requiredPlugins = genDiagram.getRequiredPluginIDs();
if (requiredPlugins == null) {
	requiredPlugins = new String[0];
}
requiredPluginIDs.addAll(Arrays.asList(requiredPlugins));
@

