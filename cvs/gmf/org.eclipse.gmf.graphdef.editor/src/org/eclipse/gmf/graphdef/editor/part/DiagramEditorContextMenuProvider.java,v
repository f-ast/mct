head	1.2;
access;
symbols
	v20080722-1827:1.2
	v20080718-1700:1.2
	v20080718-1731:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.2
	v20080528-1052:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2008.06.03.16.56.38;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	58c484577c54567;

1.1
date	2008.05.28.12.37.14;	author ashatalin;	state Exp;
branches;
next	;
commitid	5988483d51f74567;


desc
@@


1.2
log
@Example code was regenerated with latest templates.
@
text
@/*
 *  Copyright (c) 2006, 2008 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.part;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.gef.EditPartViewer;
import org.eclipse.gmf.runtime.common.ui.services.action.contributionitem.ContributionItemService;
import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
import org.eclipse.gmf.runtime.diagram.ui.providers.DiagramContextMenuProvider;
import org.eclipse.jface.action.IMenuManager;
import org.eclipse.ui.IWorkbenchPart;

/**
 * @@generated
 */
public class DiagramEditorContextMenuProvider extends DiagramContextMenuProvider {

	/**
	 * @@generated
	 */
	private IWorkbenchPart part;

	/**
	 * @@generated
	 */
	private DeleteElementAction deleteAction;

	/**
	 * @@generated
	 */
	public DiagramEditorContextMenuProvider(IWorkbenchPart part, EditPartViewer viewer) {
		super(part, viewer);
		this.part = part;
		deleteAction = new DeleteElementAction(part);
		deleteAction.init();
	}

	/**
	 * @@generated
	 */
	public void dispose() {
		if (deleteAction != null) {
			deleteAction.dispose();
			deleteAction = null;
		}
		super.dispose();
	}

	/**
	 * @@generated
	 */
	public void buildContextMenu(final IMenuManager menu) {
		getViewer().flush();
		try {
			TransactionUtil.getEditingDomain((EObject) getViewer().getContents().getModel()).runExclusive(new Runnable() {

				public void run() {
					ContributionItemService.getInstance().contributeToPopupMenu(DiagramEditorContextMenuProvider.this, part);
					menu.remove(ActionIds.ACTION_DELETE_FROM_MODEL);
					menu.appendToGroup("editGroup", deleteAction);
				}
			});
		} catch (Exception e) {
			GMFGraphDiagramEditorPlugin.getInstance().logError("Error building context menu", e);
		}
	}
}
@


1.1
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@d51 4
a54 2
		deleteAction.dispose();
		deleteAction = null;
@

