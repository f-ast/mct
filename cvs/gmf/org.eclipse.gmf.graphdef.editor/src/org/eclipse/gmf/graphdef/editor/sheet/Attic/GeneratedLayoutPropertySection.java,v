head	1.6;
access;
symbols
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080510-0100:1.5
	v20080507-1326:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080411-0411:1.5
	v20080404-1111:1.5
	v20080322-0000:1.5
	v20080114-2222:1.4
	v20071214-1111:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070520-1200:1.2
	v20070420-1000:1.2
	v20070405-2000:1.2
	v20070405-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2008.05.19.17.40.55;	author ashatalin;	state dead;
branches;
next	1.5;
commitid	52d44831bba64567;

1.5
date	2008.03.07.12.50.34;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	179447d13a164567;

1.4
date	2007.06.18.17.06.14;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	54d14676bb824567;

1.3
date	2007.05.31.15.52.31;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	49f1465eef2c4567;

1.2
date	2007.04.05.19.55.25;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	7f1461554204567;

1.1
date	2007.04.04.20.23.26;	author atikhomirov;	state Exp;
branches;
next	;
commitid	ade461409204567;


desc
@@


1.6
log
@Removing obsolete property pages
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.sheet;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
import org.eclipse.gmf.gmfgraph.BorderLayout;
import org.eclipse.gmf.gmfgraph.BorderLayoutData;
import org.eclipse.gmf.gmfgraph.CustomLayout;
import org.eclipse.gmf.gmfgraph.CustomLayoutData;
import org.eclipse.gmf.gmfgraph.Dimension;
import org.eclipse.gmf.gmfgraph.FlowLayout;
import org.eclipse.gmf.gmfgraph.GMFGraphFactory;
import org.eclipse.gmf.gmfgraph.GridLayout;
import org.eclipse.gmf.gmfgraph.GridLayoutData;
import org.eclipse.gmf.gmfgraph.Layout;
import org.eclipse.gmf.gmfgraph.LayoutData;
import org.eclipse.gmf.gmfgraph.Layoutable;
import org.eclipse.gmf.gmfgraph.Point;
import org.eclipse.gmf.gmfgraph.StackLayout;
import org.eclipse.gmf.gmfgraph.XYLayout;
import org.eclipse.gmf.gmfgraph.XYLayoutData;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.swt.custom.CLabel;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.widgets.Spinner;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.Widget;
import org.eclipse.ui.forms.widgets.ExpandableComposite;
import org.eclipse.ui.views.properties.tabbed.TabbedPropertySheetPage;

/**
 * @@generated
 */
public class GeneratedLayoutPropertySection extends AbstractCustomSectionParent {

	/**
	 * @@generated
	 */
	private ModelHelper myModelHelper;

	/**
	 * @@generated
	 */
	private Group myMyLayoutGroupGroup;

	/**
	 * @@generated
	 */
	private Composite myMyLayoutKindGroupComposite;

	/**
	 * @@generated
	 */
	private Button myMyBorderLayoutRadioRadio;

	/**
	 * @@generated
	 */
	private Button myMyCustomLayoutRadioRadio;

	/**
	 * @@generated
	 */
	private Button myMyGridLayoutRadioRadio;

	/**
	 * @@generated
	 */
	private Button myMyFlowLayoutRadioRadio;

	/**
	 * @@generated
	 */
	private Button myMyStackLayoutRadioRadio;

	/**
	 * @@generated
	 */
	private Button myMyXYLayoutRadioRadio;

	/**
	 * @@generated
	 */
	private Button myMyNoLayoutRadioRadio;

	/**
	 * @@generated
	 */
	private Composite myMyExpandBarComposite;

	/**
	 * @@generated
	 */
	private ExpandableComposite myLayoutBorderExpandGroupExpandableComposite;

	/**
	 * @@generated
	 */
	private Group myBorderParamsGroup;

	/**
	 * @@generated
	 */
	private Spinner myDxSpin;

	/**
	 * @@generated
	 */
	private Spinner myDySpin;

	/**
	 * @@generated
	 */
	private ExpandableComposite myLayoutFlowExpandGroupExpandableComposite;

	/**
	 * @@generated
	 */
	private Group myFlowParamsGroup;

	/**
	 * @@generated
	 */
	private Button mySingleLineCheckbox;

	/**
	 * @@generated
	 */
	private Button myMinorSizeCheckbox;

	/**
	 * @@generated
	 */
	private Group mySpacingsGroup;

	/**
	 * @@generated
	 */
	private Spinner myMinorSpin;

	/**
	 * @@generated
	 */
	private Spinner myMajorSpin;

	/**
	 * @@generated
	 */
	private Group myMinorAlignGroup;

	/**
	 * @@generated
	 */
	private CLabel myMinorTopELabel;

	/**
	 * @@generated
	 */
	private Button myMinorNRadio;

	/**
	 * @@generated
	 */
	private Button myMinorERadio;

	/**
	 * @@generated
	 */
	private Button myMinorCRadio;

	/**
	 * @@generated
	 */
	private Button myMinorWRadio;

	/**
	 * @@generated
	 */
	private Button myMinorSRadio;

	/**
	 * @@generated
	 */
	private Group myMajorAlignGroup;

	/**
	 * @@generated
	 */
	private CLabel myMajorTopELabel;

	/**
	 * @@generated
	 */
	private Button myMajorNRadio;

	/**
	 * @@generated
	 */
	private Button myMajorERadio;

	/**
	 * @@generated
	 */
	private Button myMajorCRadio;

	/**
	 * @@generated
	 */
	private Button myMajorWRadio;

	/**
	 * @@generated
	 */
	private Button myMajorSRadio;

	/**
	 * @@generated
	 */
	private ExpandableComposite myLayoutGridExpandGroupExpandableComposite;

	/**
	 * @@generated
	 */
	private Group myGridParamsGroup;

	/**
	 * @@generated
	 */
	private Spinner myNumColumnsSpin;

	/**
	 * @@generated
	 */
	private Button myEqualWidthCheckbox;

	/**
	 * @@generated
	 */
	private Group myMarginsGroup;

	/**
	 * @@generated
	 */
	private Spinner myDx$1Spin;

	/**
	 * @@generated
	 */
	private Spinner myDy$1Spin;

	/**
	 * @@generated
	 */
	private Group mySpacingGroup;

	/**
	 * @@generated
	 */
	private Spinner myDx$2Spin;

	/**
	 * @@generated
	 */
	private Spinner myDy$2Spin;

	/**
	 * @@generated
	 */
	private ExpandableComposite myLayoutCustomExpandGroupExpandableComposite;

	/**
	 * @@generated
	 */
	private Group myCustomParamsGroup;

	/**
	 * @@generated
	 */
	private Text myQualifiedClassNameText;

	/**
	 * @@generated
	 */
	private Composite myMyLayoutDataCompositeComposite;

	/**
	 * @@generated
	 */
	private Group myBorderLayoutDataGroupGroup;

	/**
	 * @@generated
	 */
	private Composite myWorldPartsComposite;

	/**
	 * @@generated
	 */
	private CLabel myUpperELabel;

	/**
	 * @@generated
	 */
	private Button myBorderNRadio;

	/**
	 * @@generated
	 */
	private Button myBorderERadio;

	/**
	 * @@generated
	 */
	private Button myBorderCRadio;

	/**
	 * @@generated
	 */
	private Button myBorderWRadio;

	/**
	 * @@generated
	 */
	private Button myBorderSRadio;

	/**
	 * @@generated
	 */
	private Group myMyXYLayoutDataGroupGroup;

	/**
	 * @@generated
	 */
	private Group myMyXYDataTopLeftGroupGroup;

	/**
	 * @@generated
	 */
	private Spinner myMyXYDataXSpinSpin;

	/**
	 * @@generated
	 */
	private Spinner myMyXYDataYSpinSpin;

	/**
	 * @@generated
	 */
	private Group myMyXYDataSizeGroupGroup;

	/**
	 * @@generated
	 */
	private Spinner myMyXYDataSizeXSpinSpin;

	/**
	 * @@generated
	 */
	private Spinner myMyXYDataSizeYSpinSpin;

	/**
	 * @@generated
	 */
	private Group myMyGridLayoutDataGroupGroup;

	/**
	 * @@generated
	 */
	private Button myGrabExcessHorizontalSpaceCheckbox;

	/**
	 * @@generated
	 */
	private Button myGrabExcessVerticalSpaceCheckbox;

	/**
	 * @@generated
	 */
	private Group myVerticalAlignmentGroup;

	/**
	 * @@generated
	 */
	private Button myBEGINNINGRadio;

	/**
	 * @@generated
	 */
	private Button myCENTERRadio;

	/**
	 * @@generated
	 */
	private Button myENDRadio;

	/**
	 * @@generated
	 */
	private Button myFILLRadio;

	/**
	 * @@generated
	 */
	private Group myHorizontalAlignmentGroup;

	/**
	 * @@generated
	 */
	private Button myBEGINNING$1Radio;

	/**
	 * @@generated
	 */
	private Button myCENTER$1Radio;

	/**
	 * @@generated
	 */
	private Button myEND$1Radio;

	/**
	 * @@generated
	 */
	private Button myFILL$1Radio;

	/**
	 * @@generated
	 */
	private Group mySpanningsGroup;

	/**
	 * @@generated
	 */
	private Spinner myVerticalSpanSpin;

	/**
	 * @@generated
	 */
	private Spinner myHorizontalSpanSpin;

	/**
	 * @@generated
	 */
	private Group mySizeHintGroup;

	/**
	 * @@generated
	 */
	private Spinner myDx$3Spin;

	/**
	 * @@generated
	 */
	private Spinner myDy$3Spin;

	/**
	 * @@generated
	 */
	private Spinner myHorizontalIndentSpin;

	/**
	 * @@generated
	 */
	private Group myMyCustomLayoutDataGroupGroup;

	/**
	 * @@generated
	 */
	private Text myQualifiedClassName$1Text;

	/**
	 * @@generated
	 */
	public void doCreateControls(Composite parent, TabbedPropertySheetPage tabbedPropertySheetPage) {
		Composite mainComposite = createMainWidget(parent);
		myMyLayoutGroupGroup = createGroupWidget(mainComposite, "Layout Manager", null, null, null, null, true, true, false, false);

		myMyLayoutKindGroupComposite = createCompositeWidget(myMyLayoutGroupGroup, "", null, null, null, null, true, true, false, false);

		myMyBorderLayoutRadioRadio = createRadioButton(myMyLayoutKindGroupComposite, getModelHelper().getNameMyMyBorderLayoutRadioRadioFromMetamodel(), null, null, null, null, true, true, false,
				false);

		getListener().startListeningTo(myMyBorderLayoutRadioRadio);

		myMyCustomLayoutRadioRadio = createRadioButton(myMyLayoutKindGroupComposite, getModelHelper().getNameMyMyCustomLayoutRadioRadioFromMetamodel(), null, myMyBorderLayoutRadioRadio, null, null,
				false, true, false, false);

		getListener().startListeningTo(myMyCustomLayoutRadioRadio);

		myMyGridLayoutRadioRadio = createRadioButton(myMyLayoutKindGroupComposite, getModelHelper().getNameMyMyGridLayoutRadioRadioFromMetamodel(), null, myMyCustomLayoutRadioRadio, null, null,
				false, true, false, false);

		getListener().startListeningTo(myMyGridLayoutRadioRadio);

		myMyFlowLayoutRadioRadio = createRadioButton(myMyLayoutKindGroupComposite, getModelHelper().getNameMyMyFlowLayoutRadioRadioFromMetamodel(), null, myMyGridLayoutRadioRadio, null, null, false,
				true, false, false);

		getListener().startListeningTo(myMyFlowLayoutRadioRadio);

		myMyStackLayoutRadioRadio = createRadioButton(myMyLayoutKindGroupComposite, getModelHelper().getNameMyMyStackLayoutRadioRadioFromMetamodel(), null, myMyFlowLayoutRadioRadio, null, null,
				false, true, false, false);

		getListener().startListeningTo(myMyStackLayoutRadioRadio);

		myMyXYLayoutRadioRadio = createRadioButton(myMyLayoutKindGroupComposite, getModelHelper().getNameMyMyXYLayoutRadioRadioFromMetamodel(), null, myMyStackLayoutRadioRadio, null, null, false,
				true, false, false);

		getListener().startListeningTo(myMyXYLayoutRadioRadio);

		myMyNoLayoutRadioRadio = createRadioButton(myMyLayoutKindGroupComposite, "No Layout", null, myMyXYLayoutRadioRadio, null, null, false, true, false, false);

		getListener().startListeningTo(myMyNoLayoutRadioRadio);

		myMyExpandBarComposite = createCompositeWidget(myMyLayoutGroupGroup, "", myMyLayoutKindGroupComposite, null, null, null, true, false, false, false);

		myLayoutBorderExpandGroupExpandableComposite = createExpandableComposite(myMyExpandBarComposite, getModelHelper().getNameMyLayoutBorderExpandGroupExpandableCompositeFromMetamodel(), null,
				null, null, null, true, true, false, false);
		Composite myLayoutBorderExpandGroupExpandableCompositeControl = createCompositeWidget(myLayoutBorderExpandGroupExpandableComposite, "", null, null, null, null, true, true, false, false);

		myBorderParamsGroup = createGroupWidget(myLayoutBorderExpandGroupExpandableCompositeControl, getModelHelper().getNameMyBorderParamsGroupFromMetamodel(), null, null, null, null, true, true,
				false, false);

		myDxSpin = createSpinnerWidget(myBorderParamsGroup, "Horizontal", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myDxSpin);

		myDySpin = createSpinnerWidget(myBorderParamsGroup, "Vertical", 0, 999, 1, 100, myDxSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDySpin);

		myLayoutBorderExpandGroupExpandableComposite.setClient(myLayoutBorderExpandGroupExpandableCompositeControl);
		myLayoutBorderExpandGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarComposite));

		myLayoutFlowExpandGroupExpandableComposite = createExpandableComposite(myMyExpandBarComposite, getModelHelper().getNameMyLayoutFlowExpandGroupExpandableCompositeFromMetamodel(), null,
				myLayoutBorderExpandGroupExpandableComposite, null, null, false, true, false, false);
		Composite myLayoutFlowExpandGroupExpandableCompositeControl = createCompositeWidget(myLayoutFlowExpandGroupExpandableComposite, "", null, myLayoutBorderExpandGroupExpandableComposite, null,
				null, false, true, false, false);

		myFlowParamsGroup = createGroupWidget(myLayoutFlowExpandGroupExpandableCompositeControl, "Layout Parameters", null, null, null, null, true, true, false, false);

		mySingleLineCheckbox = createCheckboxButton(myFlowParamsGroup, getModelHelper().getNameMySingleLineCheckboxFromMetamodel(), null, null, null, null, true, true, false, false);

		getListener().startListeningTo(mySingleLineCheckbox);

		myMinorSizeCheckbox = createCheckboxButton(myFlowParamsGroup, getModelHelper().getNameMyMinorSizeCheckboxFromMetamodel(), mySingleLineCheckbox, null, null, null, true, false, false, false);

		getListener().startListeningTo(myMinorSizeCheckbox);

		mySpacingsGroup = createGroupWidget(myFlowParamsGroup, "Spacings", null, mySingleLineCheckbox, null, null, false, true, false, false);

		myMinorSpin = createSpinnerWidget(mySpacingsGroup, "Minor", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myMinorSpin);

		myMajorSpin = createSpinnerWidget(mySpacingsGroup, "Major", 0, 999, 1, 100, myMinorSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myMajorSpin);

		myMinorAlignGroup = createGroupWidget(myFlowParamsGroup, getModelHelper().getNameMyMinorAlignGroupFromMetamodel(), null, mySpacingsGroup, null, null, false, true, false, false);

		myMinorTopELabel = createLabelWidget(myMinorAlignGroup, "       ", null, null, null, null, true, true, false, false);

		myMinorNRadio = createRadioButton(myMinorAlignGroup, "N", myMinorTopELabel, null, null, null, true, false, false, false);

		getListener().startListeningTo(myMinorNRadio);

		myMinorERadio = createRadioButton(myMinorAlignGroup, "E", null, myMinorTopELabel, null, null, false, true, false, false);

		getListener().startListeningTo(myMinorERadio);

		myMinorCRadio = createRadioButton(myMinorAlignGroup, "C", myMinorERadio, null, null, null, true, false, false, false);

		getListener().startListeningTo(myMinorCRadio);

		myMinorWRadio = createRadioButton(myMinorAlignGroup, "W", myMinorCRadio, null, null, null, true, false, false, false);

		getListener().startListeningTo(myMinorWRadio);

		myMinorSRadio = createRadioButton(myMinorAlignGroup, "S", null, myMinorCRadio, null, null, false, true, false, false);

		getListener().startListeningTo(myMinorSRadio);

		myMajorAlignGroup = createGroupWidget(myFlowParamsGroup, getModelHelper().getNameMyMajorAlignGroupFromMetamodel(), myMinorAlignGroup, null, null, null, true, false, false, false);

		myMajorTopELabel = createLabelWidget(myMajorAlignGroup, "       ", null, null, null, null, true, true, false, false);

		myMajorNRadio = createRadioButton(myMajorAlignGroup, "N", myMajorTopELabel, null, null, null, true, false, false, false);

		getListener().startListeningTo(myMajorNRadio);

		myMajorERadio = createRadioButton(myMajorAlignGroup, "E", null, myMajorTopELabel, null, null, false, true, false, false);

		getListener().startListeningTo(myMajorERadio);

		myMajorCRadio = createRadioButton(myMajorAlignGroup, "C", myMajorERadio, null, null, null, true, false, false, false);

		getListener().startListeningTo(myMajorCRadio);

		myMajorWRadio = createRadioButton(myMajorAlignGroup, "W", myMajorCRadio, null, null, null, true, false, false, false);

		getListener().startListeningTo(myMajorWRadio);

		myMajorSRadio = createRadioButton(myMajorAlignGroup, "S", null, myMajorCRadio, null, null, false, true, false, false);

		getListener().startListeningTo(myMajorSRadio);

		myLayoutFlowExpandGroupExpandableComposite.setClient(myLayoutFlowExpandGroupExpandableCompositeControl);
		myLayoutFlowExpandGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarComposite));

		myLayoutGridExpandGroupExpandableComposite = createExpandableComposite(myMyExpandBarComposite, getModelHelper().getNameMyLayoutGridExpandGroupExpandableCompositeFromMetamodel(), null,
				myLayoutFlowExpandGroupExpandableComposite, null, null, false, true, false, false);
		Composite myLayoutGridExpandGroupExpandableCompositeControl = createCompositeWidget(myLayoutGridExpandGroupExpandableComposite, "", null, myLayoutFlowExpandGroupExpandableComposite, null,
				null, false, true, false, false);

		myGridParamsGroup = createGroupWidget(myLayoutGridExpandGroupExpandableCompositeControl, "Layout Parameters", null, null, null, null, true, true, false, false);

		myNumColumnsSpin = createSpinnerWidget(myGridParamsGroup, getModelHelper().getNameMyNumColumnsSpinFromMetamodel(), 1, 99, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myNumColumnsSpin);

		myEqualWidthCheckbox = createCheckboxButton(myGridParamsGroup, getModelHelper().getNameMyEqualWidthCheckboxFromMetamodel(), myNumColumnsSpin, null, null, null, true, false, false, false);

		getListener().startListeningTo(myEqualWidthCheckbox);

		myMarginsGroup = createGroupWidget(myGridParamsGroup, getModelHelper().getNameMyMarginsGroupFromMetamodel(), null, myNumColumnsSpin, null, null, false, true, false, false);

		myDx$1Spin = createSpinnerWidget(myMarginsGroup, "Horizontal", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myDx$1Spin);

		myDy$1Spin = createSpinnerWidget(myMarginsGroup, "Vertical", 0, 999, 1, 100, myDx$1Spin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDy$1Spin);

		mySpacingGroup = createGroupWidget(myGridParamsGroup, getModelHelper().getNameMySpacingGroupFromMetamodel(), null, myMarginsGroup, null, null, false, true, false, false);

		myDx$2Spin = createSpinnerWidget(mySpacingGroup, "X", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myDx$2Spin);

		myDy$2Spin = createSpinnerWidget(mySpacingGroup, "Y", 0, 999, 1, 100, myDx$2Spin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDy$2Spin);

		myLayoutGridExpandGroupExpandableComposite.setClient(myLayoutGridExpandGroupExpandableCompositeControl);
		myLayoutGridExpandGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarComposite));

		myLayoutCustomExpandGroupExpandableComposite = createExpandableComposite(myMyExpandBarComposite, getModelHelper().getNameMyLayoutCustomExpandGroupExpandableCompositeFromMetamodel(), null,
				myLayoutGridExpandGroupExpandableComposite, null, null, false, true, false, false);
		Composite myLayoutCustomExpandGroupExpandableCompositeControl = createCompositeWidget(myLayoutCustomExpandGroupExpandableComposite, "", null, myLayoutGridExpandGroupExpandableComposite, null,
				null, false, true, false, false);

		myCustomParamsGroup = createGroupWidget(myLayoutCustomExpandGroupExpandableCompositeControl, "Layout Parameters", null, null, null, null, true, true, false, false);

		myQualifiedClassNameText = createTextWidget(myCustomParamsGroup, getModelHelper().getNameMyQualifiedClassNameTextFromMetamodel(), null, myQualifiedClassNameText, null, null, false, true,
				false, false);
		getListener().startListeningTo(myQualifiedClassNameText);

		myLayoutCustomExpandGroupExpandableComposite.setClient(myLayoutCustomExpandGroupExpandableCompositeControl);
		myLayoutCustomExpandGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarComposite));

		myMyLayoutDataCompositeComposite = createCompositeWidget(mainComposite, "", myMyLayoutGroupGroup, null, null, null, true, false, false, true);

		myBorderLayoutDataGroupGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper().getNameMyBorderLayoutDataGroupGroupFromMetamodel(), null, null, null, null, true, true,
				false, false);

		myWorldPartsComposite = createCompositeWidget(myBorderLayoutDataGroupGroup, "", null, null, null, null, true, true, false, false);

		myUpperELabel = createLabelWidget(myWorldPartsComposite, "       ", null, null, null, null, true, true, false, false);

		myBorderNRadio = createRadioButton(myWorldPartsComposite, "N", myUpperELabel, null, null, null, true, false, false, false);

		getListener().startListeningTo(myBorderNRadio);

		myBorderERadio = createRadioButton(myWorldPartsComposite, "E", null, myUpperELabel, null, null, false, true, false, false);

		getListener().startListeningTo(myBorderERadio);

		myBorderCRadio = createRadioButton(myWorldPartsComposite, "C", myBorderERadio, null, null, null, true, false, false, false);

		getListener().startListeningTo(myBorderCRadio);

		myBorderWRadio = createRadioButton(myWorldPartsComposite, "W", myBorderCRadio, null, null, null, true, false, false, true);

		getListener().startListeningTo(myBorderWRadio);

		myBorderSRadio = createRadioButton(myWorldPartsComposite, "S", null, myBorderCRadio, null, null, false, true, true, false);

		getListener().startListeningTo(myBorderSRadio);

		myMyXYLayoutDataGroupGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper().getNameMyMyXYLayoutDataGroupGroupFromMetamodel(), null, null, null, null, true, true, false,
				false);

		myMyXYDataTopLeftGroupGroup = createGroupWidget(myMyXYLayoutDataGroupGroup, "Top Left Position", null, null, null, null, true, true, false, false);

		myMyXYDataXSpinSpin = createSpinnerWidget(myMyXYDataTopLeftGroupGroup, getModelHelper().getNameMyMyXYDataXSpinSpinFromMetamodel(), 0, 999, 1, 100, null, null, null, null, true, true, false,
				false);
		getListener().startListeningTo(myMyXYDataXSpinSpin);

		myMyXYDataYSpinSpin = createSpinnerWidget(myMyXYDataTopLeftGroupGroup, getModelHelper().getNameMyMyXYDataYSpinSpinFromMetamodel(), 0, 999, 1, 100, myMyXYDataXSpinSpin, null, null, null, true,
				false, false, false);
		getListener().startListeningTo(myMyXYDataYSpinSpin);

		myMyXYDataSizeGroupGroup = createGroupWidget(myMyXYLayoutDataGroupGroup, "Size Constraints", null, myMyXYDataTopLeftGroupGroup, null, null, false, true, false, false);

		myMyXYDataSizeXSpinSpin = createSpinnerWidget(myMyXYDataSizeGroupGroup, "X", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myMyXYDataSizeXSpinSpin);

		myMyXYDataSizeYSpinSpin = createSpinnerWidget(myMyXYDataSizeGroupGroup, "Y", 0, 999, 1, 100, myMyXYDataSizeXSpinSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myMyXYDataSizeYSpinSpin);

		myMyGridLayoutDataGroupGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper().getNameMyMyGridLayoutDataGroupGroupFromMetamodel(), null, null, null, null, true, true,
				false, false);

		myGrabExcessHorizontalSpaceCheckbox = createCheckboxButton(myMyGridLayoutDataGroupGroup, getModelHelper().getNameMyGrabExcessHorizontalSpaceCheckboxFromMetamodel(), null, null, null, null,
				true, true, false, false);

		getListener().startListeningTo(myGrabExcessHorizontalSpaceCheckbox);

		myGrabExcessVerticalSpaceCheckbox = createCheckboxButton(myMyGridLayoutDataGroupGroup, getModelHelper().getNameMyGrabExcessVerticalSpaceCheckboxFromMetamodel(), null,
				myGrabExcessHorizontalSpaceCheckbox, null, null, false, true, false, false);

		getListener().startListeningTo(myGrabExcessVerticalSpaceCheckbox);

		myVerticalAlignmentGroup = createGroupWidget(myMyGridLayoutDataGroupGroup, getModelHelper().getNameMyVerticalAlignmentGroupFromMetamodel(), null, myGrabExcessVerticalSpaceCheckbox, null,
				null, false, true, false, false);

		myBEGINNINGRadio = createRadioButton(myVerticalAlignmentGroup, getModelHelper().getNameMyBEGINNINGRadioFromMetamodel(), null, null, null, null, true, true, false, false);

		getListener().startListeningTo(myBEGINNINGRadio);

		myCENTERRadio = createRadioButton(myVerticalAlignmentGroup, getModelHelper().getNameMyCENTERRadioFromMetamodel(), null, myBEGINNINGRadio, null, null, false, true, false, false);

		getListener().startListeningTo(myCENTERRadio);

		myENDRadio = createRadioButton(myVerticalAlignmentGroup, getModelHelper().getNameMyENDRadioFromMetamodel(), null, myCENTERRadio, null, null, false, true, false, false);

		getListener().startListeningTo(myENDRadio);

		myFILLRadio = createRadioButton(myVerticalAlignmentGroup, getModelHelper().getNameMyFILLRadioFromMetamodel(), null, myENDRadio, null, null, false, true, false, false);

		getListener().startListeningTo(myFILLRadio);

		myHorizontalAlignmentGroup = createGroupWidget(myMyGridLayoutDataGroupGroup, getModelHelper().getNameMyHorizontalAlignmentGroupFromMetamodel(), myVerticalAlignmentGroup, null, null, null,
				true, false, false, false);

		myBEGINNING$1Radio = createRadioButton(myHorizontalAlignmentGroup, getModelHelper().getNameMyBEGINNING$1RadioFromMetamodel(), null, null, null, null, true, true, false, false);

		getListener().startListeningTo(myBEGINNING$1Radio);

		myCENTER$1Radio = createRadioButton(myHorizontalAlignmentGroup, getModelHelper().getNameMyCENTER$1RadioFromMetamodel(), null, myBEGINNING$1Radio, null, null, false, true, false, false);

		getListener().startListeningTo(myCENTER$1Radio);

		myEND$1Radio = createRadioButton(myHorizontalAlignmentGroup, getModelHelper().getNameMyEND$1RadioFromMetamodel(), null, myCENTER$1Radio, null, null, false, true, false, false);

		getListener().startListeningTo(myEND$1Radio);

		myFILL$1Radio = createRadioButton(myHorizontalAlignmentGroup, getModelHelper().getNameMyFILL$1RadioFromMetamodel(), null, myEND$1Radio, null, null, false, true, false, false);

		getListener().startListeningTo(myFILL$1Radio);

		mySpanningsGroup = createGroupWidget(myMyGridLayoutDataGroupGroup, "Spannings", null, myVerticalAlignmentGroup, null, null, false, true, false, false);

		myVerticalSpanSpin = createSpinnerWidget(mySpanningsGroup, "Vertical", 1, 99, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myVerticalSpanSpin);

		myHorizontalSpanSpin = createSpinnerWidget(mySpanningsGroup, "Horizontal", 1, 99, 1, 100, myVerticalSpanSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myHorizontalSpanSpin);

		mySizeHintGroup = createGroupWidget(myMyGridLayoutDataGroupGroup, getModelHelper().getNameMySizeHintGroupFromMetamodel(), null, mySpanningsGroup, null, null, false, true, false, false);

		myDx$3Spin = createSpinnerWidget(mySizeHintGroup, "X", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myDx$3Spin);

		myDy$3Spin = createSpinnerWidget(mySizeHintGroup, "Y", 0, 999, 1, 100, myDx$3Spin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDy$3Spin);

		myHorizontalIndentSpin = createSpinnerWidget(myMyGridLayoutDataGroupGroup, getModelHelper().getNameMyHorizontalIndentSpinFromMetamodel(), 0, 99, 1, 100, null, mySizeHintGroup, null, null,
				false, true, false, false);
		getListener().startListeningTo(myHorizontalIndentSpin);

		myMyCustomLayoutDataGroupGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper().getNameMyMyCustomLayoutDataGroupGroupFromMetamodel(), null, null, null, null, true, true,
				false, false);

		myQualifiedClassName$1Text = createTextWidget(myMyCustomLayoutDataGroupGroup, getModelHelper().getNameMyQualifiedClassName$1TextFromMetamodel(), null, myQualifiedClassName$1Text, null, null,
				false, true, false, false);
		getListener().startListeningTo(myQualifiedClassName$1Text);

	}

	/**
	 * @@generated
	 */
	public void doDispose() {
		getListener().stopListeningTo(myMyBorderLayoutRadioRadio);

		getListener().stopListeningTo(myMyCustomLayoutRadioRadio);

		getListener().stopListeningTo(myMyGridLayoutRadioRadio);

		getListener().stopListeningTo(myMyFlowLayoutRadioRadio);

		getListener().stopListeningTo(myMyStackLayoutRadioRadio);

		getListener().stopListeningTo(myMyXYLayoutRadioRadio);

		getListener().stopListeningTo(myMyNoLayoutRadioRadio);

		getListener().stopListeningTo(myDxSpin);

		getListener().stopListeningTo(myDySpin);

		myLayoutBorderExpandGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));
		getListener().stopListeningTo(mySingleLineCheckbox);

		getListener().stopListeningTo(myMinorSizeCheckbox);

		getListener().stopListeningTo(myMinorSpin);

		getListener().stopListeningTo(myMajorSpin);

		getListener().stopListeningTo(myMinorNRadio);

		getListener().stopListeningTo(myMinorERadio);

		getListener().stopListeningTo(myMinorCRadio);

		getListener().stopListeningTo(myMinorWRadio);

		getListener().stopListeningTo(myMinorSRadio);

		getListener().stopListeningTo(myMajorNRadio);

		getListener().stopListeningTo(myMajorERadio);

		getListener().stopListeningTo(myMajorCRadio);

		getListener().stopListeningTo(myMajorWRadio);

		getListener().stopListeningTo(myMajorSRadio);

		myLayoutFlowExpandGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));
		getListener().stopListeningTo(myNumColumnsSpin);

		getListener().stopListeningTo(myEqualWidthCheckbox);

		getListener().stopListeningTo(myDx$1Spin);

		getListener().stopListeningTo(myDy$1Spin);

		getListener().stopListeningTo(myDx$2Spin);

		getListener().stopListeningTo(myDy$2Spin);

		myLayoutGridExpandGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));
		getListener().stopListeningTo(myQualifiedClassNameText);

		myLayoutCustomExpandGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));

		getListener().stopListeningTo(myBorderNRadio);

		getListener().stopListeningTo(myBorderERadio);

		getListener().stopListeningTo(myBorderCRadio);

		getListener().stopListeningTo(myBorderWRadio);

		getListener().stopListeningTo(myBorderSRadio);

		getListener().stopListeningTo(myMyXYDataXSpinSpin);

		getListener().stopListeningTo(myMyXYDataYSpinSpin);

		getListener().stopListeningTo(myMyXYDataSizeXSpinSpin);

		getListener().stopListeningTo(myMyXYDataSizeYSpinSpin);

		getListener().stopListeningTo(myGrabExcessHorizontalSpaceCheckbox);

		getListener().stopListeningTo(myGrabExcessVerticalSpaceCheckbox);

		getListener().stopListeningTo(myBEGINNINGRadio);

		getListener().stopListeningTo(myCENTERRadio);

		getListener().stopListeningTo(myENDRadio);

		getListener().stopListeningTo(myFILLRadio);

		getListener().stopListeningTo(myBEGINNING$1Radio);

		getListener().stopListeningTo(myCENTER$1Radio);

		getListener().stopListeningTo(myEND$1Radio);

		getListener().stopListeningTo(myFILL$1Radio);

		getListener().stopListeningTo(myVerticalSpanSpin);

		getListener().stopListeningTo(myHorizontalSpanSpin);

		getListener().stopListeningTo(myDx$3Spin);

		getListener().stopListeningTo(myDy$3Spin);

		getListener().stopListeningTo(myHorizontalIndentSpin);

		getListener().stopListeningTo(myQualifiedClassName$1Text);

	}

	/**
	 * @@generated
	 */
	public void refresh() {
		getListener().startNonUserChange();
		for (Iterator it = getSavedSelection().iterator(); it.hasNext();) {
			Object next = it.next();
			if (next instanceof Layoutable) {
				final Layoutable target = (Layoutable) next;
				executeAsReadAction(new Runnable() {

					public void run() {
						updateFromModel(target);
					}
				});
			}
		}
		getListener().finishNonUserChange();
	}

	/**
	 * @@generated
	 */
	public void updateFromModel(Layoutable target) {
		boolean needToRelayoutExpandBar = false;

		{

			{
				myMyBorderLayoutRadioRadio.setSelection(getModelHelper().getValueForMyMyBorderLayoutRadioRadio(target));
				myMyCustomLayoutRadioRadio.setSelection(getModelHelper().getValueForMyMyCustomLayoutRadioRadio(target));
				myMyGridLayoutRadioRadio.setSelection(getModelHelper().getValueForMyMyGridLayoutRadioRadio(target));
				myMyFlowLayoutRadioRadio.setSelection(getModelHelper().getValueForMyMyFlowLayoutRadioRadio(target));
				myMyStackLayoutRadioRadio.setSelection(getModelHelper().getValueForMyMyStackLayoutRadioRadio(target));
				myMyXYLayoutRadioRadio.setSelection(getModelHelper().getValueForMyMyXYLayoutRadioRadio(target));
				myMyNoLayoutRadioRadio.setSelection(getModelHelper().getValueForMyMyNoLayoutRadioRadio(target));
			}
			{

				boolean isMyLayoutBorderExpandGroupExpandableCompositeVisible = getModelHelper().isVisibleMyLayoutBorderExpandGroupExpandableComposite(target);
				if (myLayoutBorderExpandGroupExpandableComposite.isExpanded() != isMyLayoutBorderExpandGroupExpandableCompositeVisible) {
					needToRelayoutExpandBar = true;
				}

				myLayoutBorderExpandGroupExpandableComposite.setExpanded(isMyLayoutBorderExpandGroupExpandableCompositeVisible);
				if (isMyLayoutBorderExpandGroupExpandableCompositeVisible) {

					{
						myDxSpin.setSelection(getModelHelper().getValueForMyDxSpin(target));
						myDySpin.setSelection(getModelHelper().getValueForMyDySpin(target));
					}
				}
				boolean isMyLayoutFlowExpandGroupExpandableCompositeVisible = getModelHelper().isVisibleMyLayoutFlowExpandGroupExpandableComposite(target);
				if (myLayoutFlowExpandGroupExpandableComposite.isExpanded() != isMyLayoutFlowExpandGroupExpandableCompositeVisible) {
					needToRelayoutExpandBar = true;
				}

				myLayoutFlowExpandGroupExpandableComposite.setExpanded(isMyLayoutFlowExpandGroupExpandableCompositeVisible);
				if (isMyLayoutFlowExpandGroupExpandableCompositeVisible) {

					{
						mySingleLineCheckbox.setSelection(getModelHelper().getValueForMySingleLineCheckbox(target));
						myMinorSizeCheckbox.setSelection(getModelHelper().getValueForMyMinorSizeCheckbox(target));

						{
							myMinorSpin.setSelection(getModelHelper().getValueForMyMinorSpin(target));
							myMajorSpin.setSelection(getModelHelper().getValueForMyMajorSpin(target));
						}
						{
							myMinorTopELabel.setText("       ");
							myMinorNRadio.setSelection(getModelHelper().getValueForMyMinorNRadio(target));
							myMinorERadio.setSelection(getModelHelper().getValueForMyMinorERadio(target));
							myMinorCRadio.setSelection(getModelHelper().getValueForMyMinorCRadio(target));
							myMinorWRadio.setSelection(getModelHelper().getValueForMyMinorWRadio(target));
							myMinorSRadio.setSelection(getModelHelper().getValueForMyMinorSRadio(target));
						}
						{
							myMajorTopELabel.setText("       ");
							myMajorNRadio.setSelection(getModelHelper().getValueForMyMajorNRadio(target));
							myMajorERadio.setSelection(getModelHelper().getValueForMyMajorERadio(target));
							myMajorCRadio.setSelection(getModelHelper().getValueForMyMajorCRadio(target));
							myMajorWRadio.setSelection(getModelHelper().getValueForMyMajorWRadio(target));
							myMajorSRadio.setSelection(getModelHelper().getValueForMyMajorSRadio(target));
						}
					}
				}
				boolean isMyLayoutGridExpandGroupExpandableCompositeVisible = getModelHelper().isVisibleMyLayoutGridExpandGroupExpandableComposite(target);
				if (myLayoutGridExpandGroupExpandableComposite.isExpanded() != isMyLayoutGridExpandGroupExpandableCompositeVisible) {
					needToRelayoutExpandBar = true;
				}

				myLayoutGridExpandGroupExpandableComposite.setExpanded(isMyLayoutGridExpandGroupExpandableCompositeVisible);
				if (isMyLayoutGridExpandGroupExpandableCompositeVisible) {

					{
						myNumColumnsSpin.setSelection(getModelHelper().getValueForMyNumColumnsSpin(target));
						myEqualWidthCheckbox.setSelection(getModelHelper().getValueForMyEqualWidthCheckbox(target));

						{
							myDx$1Spin.setSelection(getModelHelper().getValueForMyDx$1Spin(target));
							myDy$1Spin.setSelection(getModelHelper().getValueForMyDy$1Spin(target));
						}
						{
							myDx$2Spin.setSelection(getModelHelper().getValueForMyDx$2Spin(target));
							myDy$2Spin.setSelection(getModelHelper().getValueForMyDy$2Spin(target));
						}
					}
				}
				boolean isMyLayoutCustomExpandGroupExpandableCompositeVisible = getModelHelper().isVisibleMyLayoutCustomExpandGroupExpandableComposite(target);
				if (myLayoutCustomExpandGroupExpandableComposite.isExpanded() != isMyLayoutCustomExpandGroupExpandableCompositeVisible) {
					needToRelayoutExpandBar = true;
				}

				myLayoutCustomExpandGroupExpandableComposite.setExpanded(isMyLayoutCustomExpandGroupExpandableCompositeVisible);
				if (isMyLayoutCustomExpandGroupExpandableCompositeVisible) {

					{
						myQualifiedClassNameText.setText(getModelHelper().getValueForMyQualifiedClassNameText(target));
					}
				}
			}
		}
		{

			boolean isMyBorderLayoutDataGroupGroupVisible = getModelHelper().isVisibleMyBorderLayoutDataGroupGroup(target);

			myBorderLayoutDataGroupGroup.setVisible(isMyBorderLayoutDataGroupGroupVisible);
			if (isMyBorderLayoutDataGroupGroupVisible) {

				{
					myUpperELabel.setText("       ");
					myBorderNRadio.setSelection(getModelHelper().getValueForMyBorderNRadio(target));
					myBorderERadio.setSelection(getModelHelper().getValueForMyBorderERadio(target));
					myBorderCRadio.setSelection(getModelHelper().getValueForMyBorderCRadio(target));
					myBorderWRadio.setSelection(getModelHelper().getValueForMyBorderWRadio(target));
					myBorderSRadio.setSelection(getModelHelper().getValueForMyBorderSRadio(target));
				}
			}
			boolean isMyMyXYLayoutDataGroupGroupVisible = getModelHelper().isVisibleMyMyXYLayoutDataGroupGroup(target);

			myMyXYLayoutDataGroupGroup.setVisible(isMyMyXYLayoutDataGroupGroupVisible);
			if (isMyMyXYLayoutDataGroupGroupVisible) {

				{
					myMyXYDataXSpinSpin.setSelection(getModelHelper().getValueForMyMyXYDataXSpinSpin(target));
					myMyXYDataYSpinSpin.setSelection(getModelHelper().getValueForMyMyXYDataYSpinSpin(target));
				}
				{
					myMyXYDataSizeXSpinSpin.setSelection(getModelHelper().getValueForMyMyXYDataSizeXSpinSpin(target));
					myMyXYDataSizeYSpinSpin.setSelection(getModelHelper().getValueForMyMyXYDataSizeYSpinSpin(target));
				}
			}
			boolean isMyMyGridLayoutDataGroupGroupVisible = getModelHelper().isVisibleMyMyGridLayoutDataGroupGroup(target);

			myMyGridLayoutDataGroupGroup.setVisible(isMyMyGridLayoutDataGroupGroupVisible);
			if (isMyMyGridLayoutDataGroupGroupVisible) {
				myGrabExcessHorizontalSpaceCheckbox.setSelection(getModelHelper().getValueForMyGrabExcessHorizontalSpaceCheckbox(target));
				myGrabExcessVerticalSpaceCheckbox.setSelection(getModelHelper().getValueForMyGrabExcessVerticalSpaceCheckbox(target));

				{
					myBEGINNINGRadio.setSelection(getModelHelper().getValueForMyBEGINNINGRadio(target));
					myCENTERRadio.setSelection(getModelHelper().getValueForMyCENTERRadio(target));
					myENDRadio.setSelection(getModelHelper().getValueForMyENDRadio(target));
					myFILLRadio.setSelection(getModelHelper().getValueForMyFILLRadio(target));
				}
				{
					myBEGINNING$1Radio.setSelection(getModelHelper().getValueForMyBEGINNING$1Radio(target));
					myCENTER$1Radio.setSelection(getModelHelper().getValueForMyCENTER$1Radio(target));
					myEND$1Radio.setSelection(getModelHelper().getValueForMyEND$1Radio(target));
					myFILL$1Radio.setSelection(getModelHelper().getValueForMyFILL$1Radio(target));
				}
				{
					myVerticalSpanSpin.setSelection(getModelHelper().getValueForMyVerticalSpanSpin(target));
					myHorizontalSpanSpin.setSelection(getModelHelper().getValueForMyHorizontalSpanSpin(target));
				}
				{
					myDx$3Spin.setSelection(getModelHelper().getValueForMyDx$3Spin(target));
					myDy$3Spin.setSelection(getModelHelper().getValueForMyDy$3Spin(target));
				}
				myHorizontalIndentSpin.setSelection(getModelHelper().getValueForMyHorizontalIndentSpin(target));
			}
			boolean isMyMyCustomLayoutDataGroupGroupVisible = getModelHelper().isVisibleMyMyCustomLayoutDataGroupGroup(target);

			myMyCustomLayoutDataGroupGroup.setVisible(isMyMyCustomLayoutDataGroupGroupVisible);
			if (isMyMyCustomLayoutDataGroupGroupVisible) {
				myQualifiedClassName$1Text.setText(getModelHelper().getValueForMyQualifiedClassName$1Text(target));
			}
		}
		if (needToRelayoutExpandBar) {
			relayoutExpandBar(null);
		}
	}

	/**
	 * @@generated
	 */
	public ModelUpdater createModelUpdater() {
		return new ModelUpdater() {

			public void applyChangesFrom(Widget widget) {
				GeneratedLayoutPropertySection.this.applyChangesFrom(widget);
			}
		};
	}

	/**
	 * @@generated
	 */
	public void applyChangesFrom(final Widget widget) {
		final String commandName = "Modifying model with ui data from " + widget.toString();
		ArrayList commands = new ArrayList(getSavedSelection().size());
		for (Iterator it = getSavedSelection().iterator(); it.hasNext();) {
			Object next = it.next();
			if (next instanceof Layoutable) {
				final Layoutable target = (Layoutable) next;
				final List files = Collections.singletonList(WorkspaceSynchronizer.getFile(target.eResource()));
				AbstractTransactionalCommand command = new AbstractTransactionalCommand(getEditingDomain(), commandName, files) {

					protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
						// XXX perhaps, should pass collection of targets instead of multiple commands?
						applyModelModifier(target, widget);
						return CommandResult.newOKCommandResult();
					}
				};

				commands.add(command);
			}
		}
		executeAsCompositeCommand(commandName, commands);
		//refresh();
	}

	/**
	 * @@generated
	 */
	void applyModelModifier(final Layoutable target, final Widget widget) {
		if (widget == myMyBorderLayoutRadioRadio && myMyBorderLayoutRadioRadio.isVisible()) {
			if (myMyBorderLayoutRadioRadio.getSelection()) {
				getModelHelper().setValueForMyMyBorderLayoutRadioRadio(target, true);
			}
			return;
		}
		if (widget == myMyCustomLayoutRadioRadio && myMyCustomLayoutRadioRadio.isVisible()) {
			if (myMyCustomLayoutRadioRadio.getSelection()) {
				getModelHelper().setValueForMyMyCustomLayoutRadioRadio(target, true);
			}
			return;
		}
		if (widget == myMyGridLayoutRadioRadio && myMyGridLayoutRadioRadio.isVisible()) {
			if (myMyGridLayoutRadioRadio.getSelection()) {
				getModelHelper().setValueForMyMyGridLayoutRadioRadio(target, true);
			}
			return;
		}
		if (widget == myMyFlowLayoutRadioRadio && myMyFlowLayoutRadioRadio.isVisible()) {
			if (myMyFlowLayoutRadioRadio.getSelection()) {
				getModelHelper().setValueForMyMyFlowLayoutRadioRadio(target, true);
			}
			return;
		}
		if (widget == myMyStackLayoutRadioRadio && myMyStackLayoutRadioRadio.isVisible()) {
			if (myMyStackLayoutRadioRadio.getSelection()) {
				getModelHelper().setValueForMyMyStackLayoutRadioRadio(target, true);
			}
			return;
		}
		if (widget == myMyXYLayoutRadioRadio && myMyXYLayoutRadioRadio.isVisible()) {
			if (myMyXYLayoutRadioRadio.getSelection()) {
				getModelHelper().setValueForMyMyXYLayoutRadioRadio(target, true);
			}
			return;
		}
		if (widget == myMyNoLayoutRadioRadio && myMyNoLayoutRadioRadio.isVisible()) {
			if (myMyNoLayoutRadioRadio.getSelection()) {
				getModelHelper().setValueForMyMyNoLayoutRadioRadio(target, true);
			}
			return;
		}
		if (widget == myDxSpin && myDxSpin.isVisible()) {
			getModelHelper().setValueForMyDxSpin(target, myDxSpin.getSelection());
			return;
		}
		if (widget == myDySpin && myDySpin.isVisible()) {
			getModelHelper().setValueForMyDySpin(target, myDySpin.getSelection());
			return;
		}
		if (widget == mySingleLineCheckbox && mySingleLineCheckbox.isVisible()) {
			getModelHelper().setValueForMySingleLineCheckbox(target, mySingleLineCheckbox.getSelection());
			return;
		}
		if (widget == myMinorSizeCheckbox && myMinorSizeCheckbox.isVisible()) {
			getModelHelper().setValueForMyMinorSizeCheckbox(target, myMinorSizeCheckbox.getSelection());
			return;
		}
		if (widget == myMinorSpin && myMinorSpin.isVisible()) {
			getModelHelper().setValueForMyMinorSpin(target, myMinorSpin.getSelection());
			return;
		}
		if (widget == myMajorSpin && myMajorSpin.isVisible()) {
			getModelHelper().setValueForMyMajorSpin(target, myMajorSpin.getSelection());
			return;
		}
		if (widget == myMinorNRadio && myMinorNRadio.isVisible()) {
			if (myMinorNRadio.getSelection()) {
				getModelHelper().setValueForMyMinorNRadio(target, true);
			}
			return;
		}
		if (widget == myMinorERadio && myMinorERadio.isVisible()) {
			if (myMinorERadio.getSelection()) {
				getModelHelper().setValueForMyMinorERadio(target, true);
			}
			return;
		}
		if (widget == myMinorCRadio && myMinorCRadio.isVisible()) {
			if (myMinorCRadio.getSelection()) {
				getModelHelper().setValueForMyMinorCRadio(target, true);
			}
			return;
		}
		if (widget == myMinorWRadio && myMinorWRadio.isVisible()) {
			if (myMinorWRadio.getSelection()) {
				getModelHelper().setValueForMyMinorWRadio(target, true);
			}
			return;
		}
		if (widget == myMinorSRadio && myMinorSRadio.isVisible()) {
			if (myMinorSRadio.getSelection()) {
				getModelHelper().setValueForMyMinorSRadio(target, true);
			}
			return;
		}
		if (widget == myMajorNRadio && myMajorNRadio.isVisible()) {
			if (myMajorNRadio.getSelection()) {
				getModelHelper().setValueForMyMajorNRadio(target, true);
			}
			return;
		}
		if (widget == myMajorERadio && myMajorERadio.isVisible()) {
			if (myMajorERadio.getSelection()) {
				getModelHelper().setValueForMyMajorERadio(target, true);
			}
			return;
		}
		if (widget == myMajorCRadio && myMajorCRadio.isVisible()) {
			if (myMajorCRadio.getSelection()) {
				getModelHelper().setValueForMyMajorCRadio(target, true);
			}
			return;
		}
		if (widget == myMajorWRadio && myMajorWRadio.isVisible()) {
			if (myMajorWRadio.getSelection()) {
				getModelHelper().setValueForMyMajorWRadio(target, true);
			}
			return;
		}
		if (widget == myMajorSRadio && myMajorSRadio.isVisible()) {
			if (myMajorSRadio.getSelection()) {
				getModelHelper().setValueForMyMajorSRadio(target, true);
			}
			return;
		}
		if (widget == myNumColumnsSpin && myNumColumnsSpin.isVisible()) {
			getModelHelper().setValueForMyNumColumnsSpin(target, myNumColumnsSpin.getSelection());
			return;
		}
		if (widget == myEqualWidthCheckbox && myEqualWidthCheckbox.isVisible()) {
			getModelHelper().setValueForMyEqualWidthCheckbox(target, myEqualWidthCheckbox.getSelection());
			return;
		}
		if (widget == myDx$1Spin && myDx$1Spin.isVisible()) {
			getModelHelper().setValueForMyDx$1Spin(target, myDx$1Spin.getSelection());
			return;
		}
		if (widget == myDy$1Spin && myDy$1Spin.isVisible()) {
			getModelHelper().setValueForMyDy$1Spin(target, myDy$1Spin.getSelection());
			return;
		}
		if (widget == myDx$2Spin && myDx$2Spin.isVisible()) {
			getModelHelper().setValueForMyDx$2Spin(target, myDx$2Spin.getSelection());
			return;
		}
		if (widget == myDy$2Spin && myDy$2Spin.isVisible()) {
			getModelHelper().setValueForMyDy$2Spin(target, myDy$2Spin.getSelection());
			return;
		}
		if (widget == myQualifiedClassNameText && myQualifiedClassNameText.isVisible()) {
			getModelHelper().setValueForMyQualifiedClassNameText(target, myQualifiedClassNameText.getText());
			return;
		}
		if (widget == myBorderNRadio && myBorderNRadio.isVisible()) {
			if (myBorderNRadio.getSelection()) {
				getModelHelper().setValueForMyBorderNRadio(target, true);
			}
			return;
		}
		if (widget == myBorderERadio && myBorderERadio.isVisible()) {
			if (myBorderERadio.getSelection()) {
				getModelHelper().setValueForMyBorderERadio(target, true);
			}
			return;
		}
		if (widget == myBorderCRadio && myBorderCRadio.isVisible()) {
			if (myBorderCRadio.getSelection()) {
				getModelHelper().setValueForMyBorderCRadio(target, true);
			}
			return;
		}
		if (widget == myBorderWRadio && myBorderWRadio.isVisible()) {
			if (myBorderWRadio.getSelection()) {
				getModelHelper().setValueForMyBorderWRadio(target, true);
			}
			return;
		}
		if (widget == myBorderSRadio && myBorderSRadio.isVisible()) {
			if (myBorderSRadio.getSelection()) {
				getModelHelper().setValueForMyBorderSRadio(target, true);
			}
			return;
		}
		if (widget == myMyXYDataXSpinSpin && myMyXYDataXSpinSpin.isVisible()) {
			getModelHelper().setValueForMyMyXYDataXSpinSpin(target, myMyXYDataXSpinSpin.getSelection());
			return;
		}
		if (widget == myMyXYDataYSpinSpin && myMyXYDataYSpinSpin.isVisible()) {
			getModelHelper().setValueForMyMyXYDataYSpinSpin(target, myMyXYDataYSpinSpin.getSelection());
			return;
		}
		if (widget == myMyXYDataSizeXSpinSpin && myMyXYDataSizeXSpinSpin.isVisible()) {
			getModelHelper().setValueForMyMyXYDataSizeXSpinSpin(target, myMyXYDataSizeXSpinSpin.getSelection());
			return;
		}
		if (widget == myMyXYDataSizeYSpinSpin && myMyXYDataSizeYSpinSpin.isVisible()) {
			getModelHelper().setValueForMyMyXYDataSizeYSpinSpin(target, myMyXYDataSizeYSpinSpin.getSelection());
			return;
		}
		if (widget == myGrabExcessHorizontalSpaceCheckbox && myGrabExcessHorizontalSpaceCheckbox.isVisible()) {
			getModelHelper().setValueForMyGrabExcessHorizontalSpaceCheckbox(target, myGrabExcessHorizontalSpaceCheckbox.getSelection());
			return;
		}
		if (widget == myGrabExcessVerticalSpaceCheckbox && myGrabExcessVerticalSpaceCheckbox.isVisible()) {
			getModelHelper().setValueForMyGrabExcessVerticalSpaceCheckbox(target, myGrabExcessVerticalSpaceCheckbox.getSelection());
			return;
		}
		if (widget == myBEGINNINGRadio && myBEGINNINGRadio.isVisible()) {
			if (myBEGINNINGRadio.getSelection()) {
				getModelHelper().setValueForMyBEGINNINGRadio(target, true);
			}
			return;
		}
		if (widget == myCENTERRadio && myCENTERRadio.isVisible()) {
			if (myCENTERRadio.getSelection()) {
				getModelHelper().setValueForMyCENTERRadio(target, true);
			}
			return;
		}
		if (widget == myENDRadio && myENDRadio.isVisible()) {
			if (myENDRadio.getSelection()) {
				getModelHelper().setValueForMyENDRadio(target, true);
			}
			return;
		}
		if (widget == myFILLRadio && myFILLRadio.isVisible()) {
			if (myFILLRadio.getSelection()) {
				getModelHelper().setValueForMyFILLRadio(target, true);
			}
			return;
		}
		if (widget == myBEGINNING$1Radio && myBEGINNING$1Radio.isVisible()) {
			if (myBEGINNING$1Radio.getSelection()) {
				getModelHelper().setValueForMyBEGINNING$1Radio(target, true);
			}
			return;
		}
		if (widget == myCENTER$1Radio && myCENTER$1Radio.isVisible()) {
			if (myCENTER$1Radio.getSelection()) {
				getModelHelper().setValueForMyCENTER$1Radio(target, true);
			}
			return;
		}
		if (widget == myEND$1Radio && myEND$1Radio.isVisible()) {
			if (myEND$1Radio.getSelection()) {
				getModelHelper().setValueForMyEND$1Radio(target, true);
			}
			return;
		}
		if (widget == myFILL$1Radio && myFILL$1Radio.isVisible()) {
			if (myFILL$1Radio.getSelection()) {
				getModelHelper().setValueForMyFILL$1Radio(target, true);
			}
			return;
		}
		if (widget == myVerticalSpanSpin && myVerticalSpanSpin.isVisible()) {
			getModelHelper().setValueForMyVerticalSpanSpin(target, myVerticalSpanSpin.getSelection());
			return;
		}
		if (widget == myHorizontalSpanSpin && myHorizontalSpanSpin.isVisible()) {
			getModelHelper().setValueForMyHorizontalSpanSpin(target, myHorizontalSpanSpin.getSelection());
			return;
		}
		if (widget == myDx$3Spin && myDx$3Spin.isVisible()) {
			getModelHelper().setValueForMyDx$3Spin(target, myDx$3Spin.getSelection());
			return;
		}
		if (widget == myDy$3Spin && myDy$3Spin.isVisible()) {
			getModelHelper().setValueForMyDy$3Spin(target, myDy$3Spin.getSelection());
			return;
		}
		if (widget == myHorizontalIndentSpin && myHorizontalIndentSpin.isVisible()) {
			getModelHelper().setValueForMyHorizontalIndentSpin(target, myHorizontalIndentSpin.getSelection());
			return;
		}
		if (widget == myQualifiedClassName$1Text && myQualifiedClassName$1Text.isVisible()) {
			getModelHelper().setValueForMyQualifiedClassName$1Text(target, myQualifiedClassName$1Text.getText());
			return;
		}
	}

	/**
	 * @@generated
	 */
	protected ModelHelper getModelHelper() {
		if (myModelHelper == null) {
			myModelHelper = new ModelHelper();
		}
		return myModelHelper;
	}

	/**
	 * @@generated
	 */
	public final class ModelHelper {

		/*############################ begin additions ############################*/

		/**
		 * @@generated NOT
		 */
		protected void setLayoutDataToChildren(org.eclipse.gmf.gmfgraph.Layoutable layoutable, org.eclipse.gmf.gmfgraph.LayoutData layoutData) {
			if (layoutable instanceof org.eclipse.gmf.gmfgraph.RealFigure) {
				org.eclipse.gmf.gmfgraph.RealFigure figure = (org.eclipse.gmf.gmfgraph.RealFigure) layoutable;
				for (java.util.Iterator it = figure.getChildren().iterator(); it.hasNext();) {
					Object next = it.next();
					if (next instanceof org.eclipse.gmf.gmfgraph.Layoutable) {
						org.eclipse.gmf.gmfgraph.Layoutable nextLayoutableChild = (org.eclipse.gmf.gmfgraph.Layoutable) next;
						org.eclipse.gmf.gmfgraph.LayoutData haveLayoutData = nextLayoutableChild.getLayoutData();
						if (!layoutData.getClass().isInstance(haveLayoutData)) {
							nextLayoutableChild.setLayoutData(layoutData);
						}
					}
				}
			}
		}

		/**
		 * @@generated NOT
		 */
		protected boolean getFlowLayoutVerticalKind(org.eclipse.gmf.gmfgraph.Layoutable layoutable) {
			boolean result = false;
			if (layoutable.getLayout() != null) {
				org.eclipse.gmf.gmfgraph.Layout layout = layoutable.getLayout();
				if (layout instanceof org.eclipse.gmf.gmfgraph.FlowLayout) {
					org.eclipse.gmf.gmfgraph.FlowLayout flowLayout = ((org.eclipse.gmf.gmfgraph.FlowLayout) layout);
					result = flowLayout.isVertical();
				}
			}
			return result;
		}

		/**
		 * @@generated NOT
		 */
		protected void setFlowLayoutVerticalKind(org.eclipse.gmf.gmfgraph.Layoutable layoutable, boolean vertical) {
			if (layoutable.getLayout() != null) {
				org.eclipse.gmf.gmfgraph.Layout layout = layoutable.getLayout();
				if (layout instanceof org.eclipse.gmf.gmfgraph.FlowLayout) {
					org.eclipse.gmf.gmfgraph.FlowLayout flowLayout = ((org.eclipse.gmf.gmfgraph.FlowLayout) layout);
					flowLayout.setVertical(vertical);
				}
			}
		}

		/**
		 * @@generated NOT
		 */
		protected boolean getBorderLayoutDataVerticalKind(org.eclipse.gmf.gmfgraph.Layoutable layoutable) {
			boolean result = false;
			if (layoutable.getLayoutData() != null) {
				org.eclipse.gmf.gmfgraph.LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof org.eclipse.gmf.gmfgraph.BorderLayoutData) {
					org.eclipse.gmf.gmfgraph.BorderLayoutData borderLayoutData = ((org.eclipse.gmf.gmfgraph.BorderLayoutData) layoutData);
					result = borderLayoutData.isVertical();
				}
			}
			return result;
		}

		/**
		 * @@generated NOT
		 */
		protected void setBorderLayoutDataVerticalKind(org.eclipse.gmf.gmfgraph.Layoutable layoutable, boolean vertical) {
			if (layoutable.getLayoutData() != null) {
				org.eclipse.gmf.gmfgraph.LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof org.eclipse.gmf.gmfgraph.BorderLayoutData) {
					org.eclipse.gmf.gmfgraph.BorderLayoutData borderLayoutData = ((org.eclipse.gmf.gmfgraph.BorderLayoutData) layoutData);
					borderLayoutData.setVertical(vertical);
				}
			}
		}

		/**
		 * @@generated NOT
		 */
		protected org.eclipse.emf.ecore.EObject cloneVars(org.eclipse.emf.ecore.EObject target) {
			if (target instanceof org.eclipse.gmf.gmfgraph.Dimension) {
				org.eclipse.gmf.gmfgraph.Dimension source = (org.eclipse.gmf.gmfgraph.Dimension) target;
				org.eclipse.gmf.gmfgraph.Dimension cloned = org.eclipse.gmf.gmfgraph.GMFGraphFactory.eINSTANCE.createDimension();
				cloned.setDx(source.getDx());
				cloned.setDy(source.getDy());
				return cloned;
			}
			if (target instanceof org.eclipse.gmf.gmfgraph.Point) {
				org.eclipse.gmf.gmfgraph.Point source = (org.eclipse.gmf.gmfgraph.Point) target;
				org.eclipse.gmf.gmfgraph.Point cloned = org.eclipse.gmf.gmfgraph.GMFGraphFactory.eINSTANCE.createPoint();
				cloned.setX(source.getX());
				cloned.setY(source.getY());
				return cloned;
			}
			return cloneVarsGen(target);
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMyBorderLayoutRadioRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setLayoutDataToChildren(layoutable, GMFGraphFactory.eINSTANCE.createBorderLayoutData());
			setValueForMyMyBorderLayoutRadioRadioGen(layoutable, valueToSet);
			GeneratedLayoutPropertySection.this.refresh();
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMyCustomLayoutRadioRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setLayoutDataToChildren(layoutable, GMFGraphFactory.eINSTANCE.createCustomLayoutData());
			setValueForMyMyCustomLayoutRadioRadioGen(layoutable, valueToSet);
			GeneratedLayoutPropertySection.this.refresh();
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMyGridLayoutRadioRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setLayoutDataToChildren(layoutable, GMFGraphFactory.eINSTANCE.createGridLayoutData());
			setValueForMyMyGridLayoutRadioRadioGen(layoutable, valueToSet);
			GeneratedLayoutPropertySection.this.refresh();
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMyFlowLayoutRadioRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;

			setValueForMyMyFlowLayoutRadioRadioGen(layoutable, valueToSet);
			GeneratedLayoutPropertySection.this.refresh();
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMyStackLayoutRadioRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;

			setValueForMyMyStackLayoutRadioRadioGen(layoutable, valueToSet);
			GeneratedLayoutPropertySection.this.refresh();
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMyXYLayoutRadioRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setLayoutDataToChildren(layoutable, GMFGraphFactory.eINSTANCE.createXYLayoutData());
			setValueForMyMyXYLayoutRadioRadioGen(layoutable, valueToSet);
			GeneratedLayoutPropertySection.this.refresh();
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMyNoLayoutRadioRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;

			setValueForMyMyNoLayoutRadioRadioGen(layoutable, valueToSet);
			GeneratedLayoutPropertySection.this.refresh();
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMinorNRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMinorNRadioGen(layoutable);
			result = result && getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMinorNRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, true);
			setValueForMyMinorNRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMinorERadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMinorERadioGen(layoutable);
			result = result && !getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMinorERadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, false);
			setValueForMyMinorERadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMinorWRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMinorWRadioGen(layoutable);
			result = result && !getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMinorWRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, false);
			setValueForMyMinorWRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMinorSRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMinorSRadioGen(layoutable);
			result = result && getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMinorSRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, true);
			setValueForMyMinorSRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMajorNRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMajorNRadioGen(layoutable);
			result = result && getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMajorNRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, true);
			setValueForMyMajorNRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMajorERadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMajorERadioGen(layoutable);
			result = result && !getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMajorERadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, false);
			setValueForMyMajorERadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMajorWRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMajorWRadioGen(layoutable);
			result = result && !getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMajorWRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, false);
			setValueForMyMajorWRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyMajorSRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyMajorSRadioGen(layoutable);
			result = result && getFlowLayoutVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyMajorSRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setFlowLayoutVerticalKind(layoutable, true);
			setValueForMyMajorSRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyBorderNRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyBorderNRadioGen(layoutable);
			result = result && getBorderLayoutDataVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyBorderNRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setBorderLayoutDataVerticalKind(layoutable, true);
			setValueForMyBorderNRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyBorderERadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyBorderERadioGen(layoutable);
			result = result && !getBorderLayoutDataVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyBorderERadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setBorderLayoutDataVerticalKind(layoutable, false);
			setValueForMyBorderERadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyBorderWRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyBorderWRadioGen(layoutable);
			result = result && !getBorderLayoutDataVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyBorderWRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setBorderLayoutDataVerticalKind(layoutable, false);
			setValueForMyBorderWRadioGen(layoutable, valueToSet);
		}

		/**
		 * @@generated NOT
		 */
		public boolean getValueForMyBorderSRadio(Layoutable layoutable) {
			boolean result;
			result = getValueForMyBorderSRadioGen(layoutable);
			result = result && getBorderLayoutDataVerticalKind(layoutable);
			return result;
		}

		/**
		 * @@generated NOT
		 */
		public void setValueForMyBorderSRadio(Layoutable layoutable, boolean value) {
			boolean valueToSet;
			valueToSet = value;
			setBorderLayoutDataVerticalKind(layoutable, true);
			setValueForMyBorderSRadioGen(layoutable, valueToSet);
		}

		/*############################ end additions ############################*/

		/**
		 * @@generated
		 */
		public String getNameMyGeneratedLayoutGroupFromMetamodel() {
			return "Layoutable";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMyBorderLayoutRadioRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				value = (layout instanceof BorderLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyBorderLayoutRadioRadioGen(Layoutable layoutable, boolean value) {
			layoutable.setLayout(GMFGraphFactory.eINSTANCE.createBorderLayout());

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyBorderLayoutRadioRadioFromMetamodel() {
			return "BorderLayout";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMyCustomLayoutRadioRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				value = (layout instanceof CustomLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyCustomLayoutRadioRadioGen(Layoutable layoutable, boolean value) {
			layoutable.setLayout(GMFGraphFactory.eINSTANCE.createCustomLayout());

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyCustomLayoutRadioRadioFromMetamodel() {
			return "CustomLayout";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMyGridLayoutRadioRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				value = (layout instanceof GridLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyGridLayoutRadioRadioGen(Layoutable layoutable, boolean value) {
			layoutable.setLayout(GMFGraphFactory.eINSTANCE.createGridLayout());

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyGridLayoutRadioRadioFromMetamodel() {
			return "GridLayout";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMyFlowLayoutRadioRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				value = (layout instanceof FlowLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyFlowLayoutRadioRadioGen(Layoutable layoutable, boolean value) {
			layoutable.setLayout(GMFGraphFactory.eINSTANCE.createFlowLayout());

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyFlowLayoutRadioRadioFromMetamodel() {
			return "FlowLayout";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMyStackLayoutRadioRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				value = (layout instanceof StackLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyStackLayoutRadioRadioGen(Layoutable layoutable, boolean value) {
			layoutable.setLayout(GMFGraphFactory.eINSTANCE.createStackLayout());

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyStackLayoutRadioRadioFromMetamodel() {
			return "StackLayout";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMyXYLayoutRadioRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				value = (layout instanceof XYLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyXYLayoutRadioRadioGen(Layoutable layoutable, boolean value) {
			layoutable.setLayout(GMFGraphFactory.eINSTANCE.createXYLayout());

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyXYLayoutRadioRadioFromMetamodel() {
			return "XYLayout";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMyNoLayoutRadioRadio(Layoutable layoutable) {
			boolean value = false;

			Layout layout = layoutable.getLayout();
			value = (layout == null);

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyNoLayoutRadioRadioGen(Layoutable layoutable, boolean value) {
			layoutable.setLayout(null);

		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyLayoutBorderExpandGroupExpandableComposite(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayout() != null) {
				Layout layout = targetVar.getLayout();
				value = (layout instanceof BorderLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyLayoutBorderExpandGroupExpandableCompositeFromMetamodel() {
			return "BorderLayout";
		}

		/**
		 * @@generated
		 */
		public String getNameMyBorderParamsGroupFromMetamodel() {
			return "Spacing";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyDxSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof BorderLayout) {
					BorderLayout borderLayout = ((BorderLayout) layout);
					if (borderLayout.getSpacing() != null) {
						Dimension dimension = borderLayout.getSpacing();
						value = dimension.getDx();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDxSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof BorderLayout) {
					BorderLayout borderLayout = ((BorderLayout) layout);

					if (borderLayout.getSpacing() == null) {
						borderLayout.setSpacing(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (borderLayout.getSpacing() != null) {
						Dimension dimension = borderLayout.getSpacing();
						dimension.setDx(value);
						borderLayout.setSpacing((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyDySpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof BorderLayout) {
					BorderLayout borderLayout = ((BorderLayout) layout);
					if (borderLayout.getSpacing() != null) {
						Dimension dimension = borderLayout.getSpacing();
						value = dimension.getDy();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDySpin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof BorderLayout) {
					BorderLayout borderLayout = ((BorderLayout) layout);

					if (borderLayout.getSpacing() == null) {
						borderLayout.setSpacing(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (borderLayout.getSpacing() != null) {
						Dimension dimension = borderLayout.getSpacing();
						dimension.setDy(value);
						borderLayout.setSpacing((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyLayoutFlowExpandGroupExpandableComposite(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayout() != null) {
				Layout layout = targetVar.getLayout();
				value = (layout instanceof FlowLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyLayoutFlowExpandGroupExpandableCompositeFromMetamodel() {
			return "FlowLayout";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMySingleLineCheckbox(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					value = flowLayout.isForceSingleLine();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMySingleLineCheckbox(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setForceSingleLine(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMySingleLineCheckboxFromMetamodel() {
			return "ForceSingleLine";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMinorSizeCheckbox(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					value = flowLayout.isMatchMinorSize();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMinorSizeCheckbox(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMatchMinorSize(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyMinorSizeCheckboxFromMetamodel() {
			return "MatchMinorSize";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyMinorSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					value = flowLayout.getMinorSpacing();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMinorSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMinorSpacing(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyMajorSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					value = flowLayout.getMajorSpacing();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMajorSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMajorSpacing(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyMinorAlignGroupFromMetamodel() {
			return "MinorAlignment";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMinorNRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMinorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMinorNRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMinorAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMinorERadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMinorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMinorERadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMinorAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMinorCRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMinorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.CENTER);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMinorCRadio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMinorAlignment(org.eclipse.gmf.gmfgraph.Alignment.CENTER_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMinorWRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMinorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMinorWRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMinorAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMinorSRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMinorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMinorSRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMinorAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyMajorAlignGroupFromMetamodel() {
			return "MajorAlignment";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMajorNRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMajorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMajorNRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMajorAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMajorERadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMajorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMajorERadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMajorAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMajorCRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMajorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.CENTER);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMajorCRadio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMajorAlignment(org.eclipse.gmf.gmfgraph.Alignment.CENTER_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMajorWRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMajorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMajorWRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMajorAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyMajorSRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					if (flowLayout.getMajorAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMajorSRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof FlowLayout) {
					FlowLayout flowLayout = ((FlowLayout) layout);
					flowLayout.setMajorAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyLayoutGridExpandGroupExpandableComposite(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayout() != null) {
				Layout layout = targetVar.getLayout();
				value = (layout instanceof GridLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyLayoutGridExpandGroupExpandableCompositeFromMetamodel() {
			return "GridLayout";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyNumColumnsSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					value = gridLayout.getNumColumns();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyNumColumnsSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					gridLayout.setNumColumns(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyNumColumnsSpinFromMetamodel() {
			return "NumColumns";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyEqualWidthCheckbox(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					value = gridLayout.isEqualWidth();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyEqualWidthCheckbox(Layoutable layoutable, boolean value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					gridLayout.setEqualWidth(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyEqualWidthCheckboxFromMetamodel() {
			return "EqualWidth";
		}

		/**
		 * @@generated
		 */
		public String getNameMyMarginsGroupFromMetamodel() {
			return "Margins";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyDx$1Spin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					if (gridLayout.getMargins() != null) {
						Dimension dimension = gridLayout.getMargins();
						value = dimension.getDx();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDx$1Spin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);

					if (gridLayout.getMargins() == null) {
						gridLayout.setMargins(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (gridLayout.getMargins() != null) {
						Dimension dimension = gridLayout.getMargins();
						dimension.setDx(value);
						gridLayout.setMargins((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyDy$1Spin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					if (gridLayout.getMargins() != null) {
						Dimension dimension = gridLayout.getMargins();
						value = dimension.getDy();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDy$1Spin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);

					if (gridLayout.getMargins() == null) {
						gridLayout.setMargins(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (gridLayout.getMargins() != null) {
						Dimension dimension = gridLayout.getMargins();
						dimension.setDy(value);
						gridLayout.setMargins((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMySpacingGroupFromMetamodel() {
			return "Spacing";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyDx$2Spin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					if (gridLayout.getSpacing() != null) {
						Dimension dimension = gridLayout.getSpacing();
						value = dimension.getDx();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDx$2Spin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);

					if (gridLayout.getSpacing() == null) {
						gridLayout.setSpacing(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (gridLayout.getSpacing() != null) {
						Dimension dimension = gridLayout.getSpacing();
						dimension.setDx(value);
						gridLayout.setSpacing((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyDy$2Spin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);
					if (gridLayout.getSpacing() != null) {
						Dimension dimension = gridLayout.getSpacing();
						value = dimension.getDy();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDy$2Spin(Layoutable layoutable, int value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof GridLayout) {
					GridLayout gridLayout = ((GridLayout) layout);

					if (gridLayout.getSpacing() == null) {
						gridLayout.setSpacing(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (gridLayout.getSpacing() != null) {
						Dimension dimension = gridLayout.getSpacing();
						dimension.setDy(value);
						gridLayout.setSpacing((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyLayoutCustomExpandGroupExpandableComposite(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayout() != null) {
				Layout layout = targetVar.getLayout();
				value = (layout instanceof CustomLayout);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyLayoutCustomExpandGroupExpandableCompositeFromMetamodel() {
			return "CustomLayout";
		}

		/**
		 * @@generated
		 */
		public String getValueForMyQualifiedClassNameText(Layoutable layoutable) {
			String value = EMPTY_STRING;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof CustomLayout) {
					CustomLayout customLayout = ((CustomLayout) layout);
					value = customLayout.getQualifiedClassName();

				}

			}

			if (value != null) {
				return value;
			}
			return EMPTY_STRING;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyQualifiedClassNameText(Layoutable layoutable, String value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof CustomLayout) {
					CustomLayout customLayout = ((CustomLayout) layout);
					customLayout.setQualifiedClassName(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyQualifiedClassNameTextFromMetamodel() {
			return "QualifiedClassName";
		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyBorderLayoutDataGroupGroup(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayoutData() != null) {
				LayoutData layoutData = targetVar.getLayoutData();
				value = (layoutData instanceof BorderLayoutData);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyBorderLayoutDataGroupGroupFromMetamodel() {
			return "BorderLayoutData";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyBorderNRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					if (borderLayoutData.getAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBorderNRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					borderLayoutData.setAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyBorderERadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					if (borderLayoutData.getAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBorderERadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					borderLayoutData.setAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyBorderCRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					if (borderLayoutData.getAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.CENTER);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBorderCRadio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					borderLayoutData.setAlignment(org.eclipse.gmf.gmfgraph.Alignment.CENTER_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyBorderWRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					if (borderLayoutData.getAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBorderWRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					borderLayoutData.setAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyBorderSRadioGen(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					if (borderLayoutData.getAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBorderSRadioGen(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof BorderLayoutData) {
					BorderLayoutData borderLayoutData = ((BorderLayoutData) layoutData);
					borderLayoutData.setAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyMyXYLayoutDataGroupGroup(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayoutData() != null) {
				LayoutData layoutData = targetVar.getLayoutData();
				value = (layoutData instanceof XYLayoutData);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyMyXYLayoutDataGroupGroupFromMetamodel() {
			return "XYLayoutData";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyMyXYDataXSpinSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);
					if (xYLayoutData.getTopLeft() != null) {
						Point point = xYLayoutData.getTopLeft();
						value = point.getX();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyXYDataXSpinSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);

					if (xYLayoutData.getTopLeft() == null) {
						xYLayoutData.setTopLeft(GMFGraphFactory.eINSTANCE.createPoint());
					}
					if (xYLayoutData.getTopLeft() != null) {
						Point point = xYLayoutData.getTopLeft();
						point.setX(value);
						xYLayoutData.setTopLeft((Point) cloneVars(point));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyXYDataXSpinSpinFromMetamodel() {
			return "X";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyMyXYDataYSpinSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);
					if (xYLayoutData.getTopLeft() != null) {
						Point point = xYLayoutData.getTopLeft();
						value = point.getY();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyXYDataYSpinSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);

					if (xYLayoutData.getTopLeft() == null) {
						xYLayoutData.setTopLeft(GMFGraphFactory.eINSTANCE.createPoint());
					}
					if (xYLayoutData.getTopLeft() != null) {
						Point point = xYLayoutData.getTopLeft();
						point.setY(value);
						xYLayoutData.setTopLeft((Point) cloneVars(point));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyMyXYDataYSpinSpinFromMetamodel() {
			return "Y";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyMyXYDataSizeXSpinSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);
					if (xYLayoutData.getSize() != null) {
						Dimension dimension = xYLayoutData.getSize();
						value = dimension.getDx();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyXYDataSizeXSpinSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);

					if (xYLayoutData.getSize() == null) {
						xYLayoutData.setSize(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (xYLayoutData.getSize() != null) {
						Dimension dimension = xYLayoutData.getSize();
						dimension.setDx(value);
						xYLayoutData.setSize((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyMyXYDataSizeYSpinSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);
					if (xYLayoutData.getSize() != null) {
						Dimension dimension = xYLayoutData.getSize();
						value = dimension.getDy();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyMyXYDataSizeYSpinSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof XYLayoutData) {
					XYLayoutData xYLayoutData = ((XYLayoutData) layoutData);

					if (xYLayoutData.getSize() == null) {
						xYLayoutData.setSize(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (xYLayoutData.getSize() != null) {
						Dimension dimension = xYLayoutData.getSize();
						dimension.setDy(value);
						xYLayoutData.setSize((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyMyGridLayoutDataGroupGroup(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayoutData() != null) {
				LayoutData layoutData = targetVar.getLayoutData();
				value = (layoutData instanceof GridLayoutData);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyMyGridLayoutDataGroupGroupFromMetamodel() {
			return "GridLayoutData";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyGrabExcessHorizontalSpaceCheckbox(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					value = gridLayoutData.isGrabExcessHorizontalSpace();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyGrabExcessHorizontalSpaceCheckbox(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setGrabExcessHorizontalSpace(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyGrabExcessHorizontalSpaceCheckboxFromMetamodel() {
			return "GrabExcessHorizontalSpace";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyGrabExcessVerticalSpaceCheckbox(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					value = gridLayoutData.isGrabExcessVerticalSpace();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyGrabExcessVerticalSpaceCheckbox(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setGrabExcessVerticalSpace(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyGrabExcessVerticalSpaceCheckboxFromMetamodel() {
			return "GrabExcessVerticalSpace";
		}

		/**
		 * @@generated
		 */
		public String getNameMyVerticalAlignmentGroupFromMetamodel() {
			return "VerticalAlignment";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyBEGINNINGRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getVerticalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBEGINNINGRadio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setVerticalAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyBEGINNINGRadioFromMetamodel() {
			return "Beginning";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyCENTERRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getVerticalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.CENTER);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyCENTERRadio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setVerticalAlignment(org.eclipse.gmf.gmfgraph.Alignment.CENTER_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyCENTERRadioFromMetamodel() {
			return "Center";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyENDRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getVerticalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyENDRadio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setVerticalAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyENDRadioFromMetamodel() {
			return "End";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyFILLRadio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getVerticalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.FILL);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyFILLRadio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setVerticalAlignment(org.eclipse.gmf.gmfgraph.Alignment.FILL_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyFILLRadioFromMetamodel() {
			return "Fill";
		}

		/**
		 * @@generated
		 */
		public String getNameMyHorizontalAlignmentGroupFromMetamodel() {
			return "HorizontalAlignment";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyBEGINNING$1Radio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getHorizontalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.BEGINNING);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBEGINNING$1Radio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setHorizontalAlignment(org.eclipse.gmf.gmfgraph.Alignment.BEGINNING_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyBEGINNING$1RadioFromMetamodel() {
			return "Beginning";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyCENTER$1Radio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getHorizontalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.CENTER);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyCENTER$1Radio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setHorizontalAlignment(org.eclipse.gmf.gmfgraph.Alignment.CENTER_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyCENTER$1RadioFromMetamodel() {
			return "Center";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyEND$1Radio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getHorizontalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.END);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyEND$1Radio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setHorizontalAlignment(org.eclipse.gmf.gmfgraph.Alignment.END_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyEND$1RadioFromMetamodel() {
			return "End";
		}

		/**
		 * @@generated
		 */
		public boolean getValueForMyFILL$1Radio(Layoutable layoutable) {
			boolean value = false;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getHorizontalAlignment() != null) {
						org.eclipse.gmf.gmfgraph.Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == org.eclipse.gmf.gmfgraph.Alignment.FILL);

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyFILL$1Radio(Layoutable layoutable, boolean value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setHorizontalAlignment(org.eclipse.gmf.gmfgraph.Alignment.FILL_LITERAL);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyFILL$1RadioFromMetamodel() {
			return "Fill";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyVerticalSpanSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					value = gridLayoutData.getVerticalSpan();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyVerticalSpanSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setVerticalSpan(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyHorizontalSpanSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					value = gridLayoutData.getHorizontalSpan();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyHorizontalSpanSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setHorizontalSpan(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMySizeHintGroupFromMetamodel() {
			return "SizeHint";
		}

		/**
		 * @@generated
		 */
		public int getValueForMyDx$3Spin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getSizeHint() != null) {
						Dimension dimension = gridLayoutData.getSizeHint();
						value = dimension.getDx();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDx$3Spin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);

					if (gridLayoutData.getSizeHint() == null) {
						gridLayoutData.setSizeHint(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (gridLayoutData.getSizeHint() != null) {
						Dimension dimension = gridLayoutData.getSizeHint();
						dimension.setDx(value);
						gridLayoutData.setSizeHint((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyDy$3Spin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					if (gridLayoutData.getSizeHint() != null) {
						Dimension dimension = gridLayoutData.getSizeHint();
						value = dimension.getDy();

					}

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyDy$3Spin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);

					if (gridLayoutData.getSizeHint() == null) {
						gridLayoutData.setSizeHint(GMFGraphFactory.eINSTANCE.createDimension());
					}
					if (gridLayoutData.getSizeHint() != null) {
						Dimension dimension = gridLayoutData.getSizeHint();
						dimension.setDy(value);
						gridLayoutData.setSizeHint((Dimension) cloneVars(dimension));
					}

				}

			}

		}

		/**
		 * @@generated
		 */
		public int getValueForMyHorizontalIndentSpin(Layoutable layoutable) {
			int value = 0;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					value = gridLayoutData.getHorizontalIndent();

				}

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyHorizontalIndentSpin(Layoutable layoutable, int value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof GridLayoutData) {
					GridLayoutData gridLayoutData = ((GridLayoutData) layoutData);
					gridLayoutData.setHorizontalIndent(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyHorizontalIndentSpinFromMetamodel() {
			return "HorizontalIndent";
		}

		/**
		 * @@generated
		 */
		public boolean isVisibleMyMyCustomLayoutDataGroupGroup(Layoutable targetVar) {
			boolean value = false;
			if (targetVar.getLayoutData() != null) {
				LayoutData layoutData = targetVar.getLayoutData();
				value = (layoutData instanceof CustomLayoutData);

			}

			return value;
		}

		/**
		 * @@generated
		 */
		public String getNameMyMyCustomLayoutDataGroupGroupFromMetamodel() {
			return "CustomLayoutData";
		}

		/**
		 * @@generated
		 */
		public String getValueForMyQualifiedClassName$1Text(Layoutable layoutable) {
			String value = EMPTY_STRING;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof CustomLayoutData) {
					CustomLayoutData customLayoutData = ((CustomLayoutData) layoutData);
					value = customLayoutData.getQualifiedClassName();

				}

			}

			if (value != null) {
				return value;
			}
			return EMPTY_STRING;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyQualifiedClassName$1Text(Layoutable layoutable, String value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof CustomLayoutData) {
					CustomLayoutData customLayoutData = ((CustomLayoutData) layoutData);
					customLayoutData.setQualifiedClassName(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyQualifiedClassName$1TextFromMetamodel() {
			return "QualifiedClassName";
		}

		/**
		 * @@generated
		 */
		protected EObject cloneVarsGen(EObject target) {
			return target;
		}

	}

}
@


1.5
log
@Updating with new figures code + setting proper layout for diahram elements
@
text
@@


1.4
log
@[191661] akarjakina - Improve GMFGraph Editor's propsheet model/codegen with TextArea, Combo and Date/Time support
@
text
@a40 1
import org.eclipse.gmf.runtime.notation.Alignment;
@


1.3
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@d1124 2
a1125 2
			public void applyChangesFrom(Widget widget, int kind) {
				GeneratedLayoutPropertySection.this.applyChangesFrom(widget, kind);
d1133 1
a1133 1
	public void applyChangesFrom(final Widget widget, final int kindP) {
a1134 1
		final int kind = kindP; // just to overcome jmerge limitation
d1145 1
a1145 1
						applyModelModifier(target, widget, kind);
d1160 1
a1160 1
	void applyModelModifier(final Layoutable target, final Widget widget, int kind) {
@


1.2
log
@kiss; cleaner and bit more simple
@
text
@d16 1
a17 1
import java.util.List;
a22 1
import org.eclipse.gmf.gmfgraph.Alignment;
d41 1
a299 5
	private Text myBundleNameText;

	/**
	 * @@generated
	 */
a489 5
	private Text myBundleName$1Text;

	/**
	 * @@generated
	 */
d667 2
a668 4
		myBundleNameText = createTextWidget(myCustomParamsGroup, getModelHelper().getNameMyBundleNameTextFromMetamodel(), null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myBundleNameText);

		myQualifiedClassNameText = createTextWidget(myCustomParamsGroup, getModelHelper().getNameMyQualifiedClassNameTextFromMetamodel(), null, myBundleNameText, null, null, false, true, false, false);
d798 2
a799 5
		myBundleName$1Text = createTextWidget(myMyCustomLayoutDataGroupGroup, getModelHelper().getNameMyBundleName$1TextFromMetamodel(), null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myBundleName$1Text);

		myQualifiedClassName$1Text = createTextWidget(myMyCustomLayoutDataGroupGroup, getModelHelper().getNameMyQualifiedClassName$1TextFromMetamodel(), null, myBundleName$1Text, null, null, false,
				true, false, false);
a868 2
		getListener().stopListeningTo(myBundleNameText);

a920 2
		getListener().stopListeningTo(myBundleName$1Text);

a1041 1
						myBundleNameText.setText(getModelHelper().getValueForMyBundleNameText(target));
a1109 1
				myBundleName$1Text.setText(getModelHelper().getValueForMyBundleName$1Text(target));
d1133 1
a1133 1
	public void applyChangesFrom(final Widget widget, int kindP) {
a1311 4
		if (widget == myBundleNameText && myBundleNameText.isVisible()) {
			getModelHelper().setValueForMyBundleNameText(target, myBundleNameText.getText());
			return;
		}
a1437 4
		if (widget == myBundleName$1Text && myBundleName$1Text.isVisible()) {
			getModelHelper().setValueForMyBundleName$1Text(target, myBundleName$1Text.getText());
			return;
		}
d1465 2
a1466 2
			if (layoutable instanceof org.eclipse.gmf.gmfgraph.Figure) {
				org.eclipse.gmf.gmfgraph.Figure figure = (org.eclipse.gmf.gmfgraph.Figure) layoutable;
d2397 2
a2398 2
						Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d2419 1
a2419 1
					flowLayout.setMinorAlignment(Alignment.BEGINNING_LITERAL);
d2437 2
a2438 2
						Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d2459 1
a2459 1
					flowLayout.setMinorAlignment(Alignment.BEGINNING_LITERAL);
d2477 2
a2478 2
						Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == Alignment.CENTER);
d2499 1
a2499 1
					flowLayout.setMinorAlignment(Alignment.CENTER_LITERAL);
d2517 2
a2518 2
						Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == Alignment.END);
d2539 1
a2539 1
					flowLayout.setMinorAlignment(Alignment.END_LITERAL);
d2557 2
a2558 2
						Alignment alignment = flowLayout.getMinorAlignment();
						value = (alignment.getValue() == Alignment.END);
d2579 1
a2579 1
					flowLayout.setMinorAlignment(Alignment.END_LITERAL);
d2604 2
a2605 2
						Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d2626 1
a2626 1
					flowLayout.setMajorAlignment(Alignment.BEGINNING_LITERAL);
d2644 2
a2645 2
						Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d2666 1
a2666 1
					flowLayout.setMajorAlignment(Alignment.BEGINNING_LITERAL);
d2684 2
a2685 2
						Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == Alignment.CENTER);
d2706 1
a2706 1
					flowLayout.setMajorAlignment(Alignment.CENTER_LITERAL);
d2724 2
a2725 2
						Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == Alignment.END);
d2746 1
a2746 1
					flowLayout.setMajorAlignment(Alignment.END_LITERAL);
d2764 2
a2765 2
						Alignment alignment = flowLayout.getMajorAlignment();
						value = (alignment.getValue() == Alignment.END);
d2786 1
a2786 1
					flowLayout.setMajorAlignment(Alignment.END_LITERAL);
a3130 46
		public String getValueForMyBundleNameText(Layoutable layoutable) {
			String value = EMPTY_STRING;
			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();
				if (layout instanceof CustomLayout) {
					CustomLayout customLayout = ((CustomLayout) layout);
					value = customLayout.getBundleName();

				}

			}

			if (value != null) {
				return value;
			}
			return EMPTY_STRING;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBundleNameText(Layoutable layoutable, String value) {

			if (layoutable.getLayout() != null) {
				Layout layout = layoutable.getLayout();

				if (layout instanceof CustomLayout) {
					CustomLayout customLayout = ((CustomLayout) layout);
					customLayout.setBundleName(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyBundleNameTextFromMetamodel() {
			return "BundleName";
		}

		/**
		 * @@generated
		 */
d3205 2
a3206 2
						Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d3227 1
a3227 1
					borderLayoutData.setAlignment(Alignment.BEGINNING_LITERAL);
d3245 2
a3246 2
						Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d3267 1
a3267 1
					borderLayoutData.setAlignment(Alignment.BEGINNING_LITERAL);
d3285 2
a3286 2
						Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == Alignment.CENTER);
d3307 1
a3307 1
					borderLayoutData.setAlignment(Alignment.CENTER_LITERAL);
d3325 2
a3326 2
						Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == Alignment.END);
d3347 1
a3347 1
					borderLayoutData.setAlignment(Alignment.END_LITERAL);
d3365 2
a3366 2
						Alignment alignment = borderLayoutData.getAlignment();
						value = (alignment.getValue() == Alignment.END);
d3387 1
a3387 1
					borderLayoutData.setAlignment(Alignment.END_LITERAL);
d3746 2
a3747 2
						Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d3768 1
a3768 1
					gridLayoutData.setVerticalAlignment(Alignment.BEGINNING_LITERAL);
d3793 2
a3794 2
						Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == Alignment.CENTER);
d3815 1
a3815 1
					gridLayoutData.setVerticalAlignment(Alignment.CENTER_LITERAL);
d3840 2
a3841 2
						Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == Alignment.END);
d3862 1
a3862 1
					gridLayoutData.setVerticalAlignment(Alignment.END_LITERAL);
d3887 2
a3888 2
						Alignment alignment = gridLayoutData.getVerticalAlignment();
						value = (alignment.getValue() == Alignment.FILL);
d3909 1
a3909 1
					gridLayoutData.setVerticalAlignment(Alignment.FILL_LITERAL);
d3941 2
a3942 2
						Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == Alignment.BEGINNING);
d3963 1
a3963 1
					gridLayoutData.setHorizontalAlignment(Alignment.BEGINNING_LITERAL);
d3988 2
a3989 2
						Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == Alignment.CENTER);
d4010 1
a4010 1
					gridLayoutData.setHorizontalAlignment(Alignment.CENTER_LITERAL);
d4035 2
a4036 2
						Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == Alignment.END);
d4057 1
a4057 1
					gridLayoutData.setHorizontalAlignment(Alignment.END_LITERAL);
d4082 2
a4083 2
						Alignment alignment = gridLayoutData.getHorizontalAlignment();
						value = (alignment.getValue() == Alignment.FILL);
d4104 1
a4104 1
					gridLayoutData.setHorizontalAlignment(Alignment.FILL_LITERAL);
a4360 46
		public String getValueForMyBundleName$1Text(Layoutable layoutable) {
			String value = EMPTY_STRING;
			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();
				if (layoutData instanceof CustomLayoutData) {
					CustomLayoutData customLayoutData = ((CustomLayoutData) layoutData);
					value = customLayoutData.getBundleName();

				}

			}

			if (value != null) {
				return value;
			}
			return EMPTY_STRING;
		}

		/**
		 * @@generated
		 */
		public void setValueForMyBundleName$1Text(Layoutable layoutable, String value) {

			if (layoutable.getLayoutData() != null) {
				LayoutData layoutData = layoutable.getLayoutData();

				if (layoutData instanceof CustomLayoutData) {
					CustomLayoutData customLayoutData = ((CustomLayoutData) layoutData);
					customLayoutData.setBundleName(value);

				}

			}

		}

		/**
		 * @@generated
		 */
		public String getNameMyBundleName$1TextFromMetamodel() {
			return "BundleName";
		}

		/**
		 * @@generated
		 */
@


1.1
log
@[173499] akarjakina - Enhance graphdef.editor with properties - use custom model to describe property sheet and generate PropertyTab code from that model
@
text
@d14 1
d17 4
d22 1
d40 2
d70 1
a70 1
	private Composite myMyLayoutKindGroupMyLayoutGroupComposite;
d75 1
a75 1
	private Button myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio;
d80 1
a80 1
	private Button myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio;
d85 1
a85 1
	private Button myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio;
d90 1
a90 1
	private Button myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio;
d95 1
a95 1
	private Button myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio;
d100 1
a100 1
	private Button myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio;
d105 1
a105 1
	private Button myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio;
d110 1
a110 1
	private Composite myMyExpandBarMyLayoutGroupComposite;
d115 1
a115 1
	private ExpandableComposite myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite;
d120 1
a120 1
	private Group mySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupGroup;
d125 1
a125 1
	private Spinner myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin;
d130 1
a130 1
	private Spinner myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin;
d135 1
a135 1
	private ExpandableComposite myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite;
d140 1
a140 1
	private Group myLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup;
d145 1
a145 1
	private Button mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox;
d150 1
a150 1
	private Button myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox;
d155 1
a155 1
	private Group mySpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup;
d160 1
a160 1
	private Spinner myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin;
d165 1
a165 1
	private Spinner myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin;
d170 1
a170 1
	private Group myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup;
d175 1
a175 1
	private CLabel myMinorTopEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel;
d180 1
a180 1
	private Button myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d185 1
a185 1
	private Button myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d190 1
a190 1
	private Button myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d195 1
a195 1
	private Button myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d200 1
a200 1
	private Button myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d205 1
a205 1
	private Group myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup;
d210 1
a210 1
	private CLabel myMajorTopEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel;
d215 1
a215 1
	private Button myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d220 1
a220 1
	private Button myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d225 1
a225 1
	private Button myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d230 1
a230 1
	private Button myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d235 1
a235 1
	private Button myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio;
d240 1
a240 1
	private ExpandableComposite myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite;
d245 1
a245 1
	private Group myLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup;
d250 1
a250 1
	private Spinner myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin;
d255 1
a255 1
	private Button myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox;
d260 1
a260 1
	private Group myMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup;
d265 1
a265 1
	private Spinner myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin;
d270 1
a270 1
	private Spinner myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin;
d275 1
a275 1
	private Group mySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup;
d280 1
a280 1
	private Spinner myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin;
d285 1
a285 1
	private Spinner myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin;
d290 1
a290 1
	private ExpandableComposite myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite;
d295 1
a295 1
	private Group myLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupGroup;
d300 1
a300 1
	private Text myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText;
d305 1
a305 1
	private Text myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText;
d315 1
a315 1
	private Group myBorderLayoutDataGroupMyLayoutDataCompositeGroup;
d320 1
a320 1
	private Composite myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite;
d325 1
a325 1
	private CLabel myUpperEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeLabel;
d330 1
a330 1
	private Button myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio;
d335 1
a335 1
	private Button myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio;
d340 1
a340 1
	private Button myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio;
d345 1
a345 1
	private Button myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio;
d350 1
a350 1
	private Button myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio;
d355 1
a355 1
	private Group myMyXYLayoutDataGroupMyLayoutDataCompositeGroup;
d360 1
a360 1
	private Group myMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup;
d365 1
a365 1
	private Spinner myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin;
d370 1
a370 1
	private Spinner myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin;
d375 1
a375 1
	private Group myMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup;
d380 1
a380 1
	private Spinner myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin;
d385 1
a385 1
	private Spinner myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin;
d390 1
a390 1
	private Group myMyGridLayoutDataGroupMyLayoutDataCompositeGroup;
d395 1
a395 1
	private Button myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox;
d400 1
a400 1
	private Button myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox;
d405 1
a405 1
	private Group myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup;
d410 1
a410 1
	private Button myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d415 1
a415 1
	private Button myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d420 1
a420 1
	private Button myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d425 1
a425 1
	private Button myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d430 1
a430 1
	private Group myHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup;
d435 1
a435 1
	private Button myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d440 1
a440 1
	private Button myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d445 1
a445 1
	private Button myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d450 1
a450 1
	private Button myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio;
d455 1
a455 1
	private Group mySpanningsMyGridLayoutDataGroupMyLayoutDataCompositeGroup;
d460 1
a460 1
	private Spinner myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin;
d465 1
a465 1
	private Spinner myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin;
d470 1
a470 1
	private Group mySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeGroup;
d475 1
a475 1
	private Spinner myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin;
d480 1
a480 1
	private Spinner myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin;
d485 1
a485 1
	private Spinner myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin;
d490 1
a490 1
	private Group myMyCustomLayoutDataGroupMyLayoutDataCompositeGroup;
d495 1
a495 1
	private Text myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText;
d500 1
a500 1
	private Text myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText;
d509 1
a509 1
		myMyLayoutKindGroupMyLayoutGroupComposite = createCompositeWidget(myMyLayoutGroupGroup, "", null, null, null, null, true, true, false, false);
d511 2
a512 2
		myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio = createRadioButton(myMyLayoutKindGroupMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel(), null, null, null, null, true, true, false, false);
d514 1
a514 1
		getListener().startListeningTo(myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d516 2
a517 2
		myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio = createRadioButton(myMyLayoutKindGroupMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel(), null, myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio, null, null, false, true, false, false);
d519 1
a519 1
		getListener().startListeningTo(myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d521 2
a522 2
		myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio = createRadioButton(myMyLayoutKindGroupMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel(), null, myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio, null, null, false, true, false, false);
d524 1
a524 1
		getListener().startListeningTo(myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d526 2
a527 2
		myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio = createRadioButton(myMyLayoutKindGroupMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel(), null, myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio, null, null, false, true, false, false);
d529 1
a529 1
		getListener().startListeningTo(myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d531 2
a532 2
		myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio = createRadioButton(myMyLayoutKindGroupMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel(), null, myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio, null, null, false, true, false, false);
d534 1
a534 1
		getListener().startListeningTo(myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d536 2
a537 2
		myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio = createRadioButton(myMyLayoutKindGroupMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel(), null, myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio, null, null, false, true, false, false);
d539 1
a539 1
		getListener().startListeningTo(myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d541 1
a541 2
		myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio = createRadioButton(myMyLayoutKindGroupMyLayoutGroupComposite, "No Layout", null, myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio,
				null, null, false, true, false, false);
d543 1
a543 1
		getListener().startListeningTo(myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d545 1
a545 1
		myMyExpandBarMyLayoutGroupComposite = createCompositeWidget(myMyLayoutGroupGroup, "", myMyLayoutKindGroupMyLayoutGroupComposite, null, null, null, true, false, false, false);
d547 3
a549 4
		myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite = createExpandableComposite(myMyExpandBarMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel(), null, null, null, null, true, true, false, false);
		Composite myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl = createCompositeWidget(myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, "",
				null, null, null, null, true, true, false, false);
d551 2
a552 2
		mySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl, getModelHelper()
				.getNameMySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel(), null, null, null, null, true, true, false, false);
d554 5
a558 3
		myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(mySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupGroup, "Horizontal", 0, 999, 1, 100, null,
				null, null, null, true, true, false, false);
		getListener().startListeningTo(myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin);
d560 2
a561 3
		myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(mySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupGroup, "Vertical", 0, 999, 1, 100,
				myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin);
d563 4
a566 2
		myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setClient(myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl);
		myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarMyLayoutGroupComposite));
d568 1
a568 5
		myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite = createExpandableComposite(myMyExpandBarMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel(), null, myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, null, null,
				false, true, false, false);
		Composite myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl = createCompositeWidget(myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, "", null,
				myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, null, null, false, true, false, false);
d570 1
a570 2
		myLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl, "Layout Parameters",
				null, null, null, null, true, true, false, false);
d572 1
a572 2
		mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox = createCheckboxButton(myLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				getModelHelper().getNameMySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckboxFromMetamodel(), null, null, null, null, true, true, false, false);
d574 1
a574 1
		getListener().startListeningTo(mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox);
d576 1
a576 3
		myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox = createCheckboxButton(myLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				getModelHelper().getNameMyMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckboxFromMetamodel(),
				mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox, null, null, null, true, false, false, false);
d578 1
a578 1
		getListener().startListeningTo(myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox);
d580 2
a581 2
		mySpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup, "Spacings", null,
				mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox, null, null, false, true, false, false);
d583 2
a584 3
		myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(mySpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"Minor", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin);
d586 1
a586 3
		myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(mySpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"Major", 0, 999, 1, 100, myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin);
d588 1
a588 3
		myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup, getModelHelper()
				.getNameMyMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel(), null,
				mySpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup, null, null, false, true, false, false);
d590 1
a590 2
		myMinorTopEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel = createLabelWidget(myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"       ", null, null, null, null, true, true, false, false);
d592 1
a592 2
		myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"N", myMinorTopEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel, null, null, null, true, false, false, false);
d594 1
a594 1
		getListener().startListeningTo(myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d596 1
a596 2
		myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"E", null, myMinorTopEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel, null, null, false, true, false, false);
d598 1
a598 1
		getListener().startListeningTo(myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d600 1
a600 2
		myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"C", myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio, null, null, null, true, false, false, false);
d602 1
a602 1
		getListener().startListeningTo(myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d604 1
a604 2
		myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"W", myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio, null, null, null, true, false, false, false);
d606 1
a606 1
		getListener().startListeningTo(myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d608 1
a608 2
		myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"S", null, myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio, null, null, false, true, false, false);
d610 1
a610 1
		getListener().startListeningTo(myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d612 1
a612 3
		myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup, getModelHelper()
				.getNameMyMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel(),
				myMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup, null, null, null, true, false, false, false);
d614 1
a614 2
		myMajorTopEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel = createLabelWidget(myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"       ", null, null, null, null, true, true, false, false);
d616 1
a616 2
		myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"N", myMajorTopEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel, null, null, null, true, false, false, false);
d618 1
a618 1
		getListener().startListeningTo(myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d620 1
a620 2
		myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"E", null, myMajorTopEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel, null, null, false, true, false, false);
d622 1
a622 1
		getListener().startListeningTo(myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d624 1
a624 2
		myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"C", myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio, null, null, null, true, false, false, false);
d626 1
a626 1
		getListener().startListeningTo(myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d628 1
a628 2
		myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"W", myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio, null, null, null, true, false, false, false);
d630 1
a630 1
		getListener().startListeningTo(myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d632 1
a632 2
		myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio = createRadioButton(myMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroup,
				"S", null, myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio, null, null, false, true, false, false);
d634 2
a635 1
		getListener().startListeningTo(myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d637 4
a640 2
		myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setClient(myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl);
		myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarMyLayoutGroupComposite));
d642 1
a642 5
		myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite = createExpandableComposite(myMyExpandBarMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel(), null, myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, null, null,
				false, true, false, false);
		Composite myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl = createCompositeWidget(myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, "", null,
				myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, null, null, false, true, false, false);
d644 2
a645 2
		myLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl, "Layout Parameters",
				null, null, null, null, true, true, false, false);
d647 1
a647 3
		myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(myLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup, getModelHelper()
				.getNameMyNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpinFromMetamodel(), 1, 99, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d649 1
a649 3
		myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox = createCheckboxButton(myLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup,
				getModelHelper().getNameMyEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckboxFromMetamodel(),
				myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin, null, null, null, true, false, false, false);
d651 1
a651 1
		getListener().startListeningTo(myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox);
d653 2
a654 3
		myMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup, getModelHelper()
				.getNameMyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel(), null,
				myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin, null, null, false, true, false, false);
d656 2
a657 3
		myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(myMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup,
				"Horizontal", 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d659 1
a659 3
		myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(myMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup, "Vertical",
				0, 999, 1, 100, myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d661 2
a662 3
		mySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup, getModelHelper()
				.getNameMySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel(), null,
				myMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup, null, null, false, true, false, false);
d664 2
a665 3
		myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(mySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup, "X", 0,
				999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d667 2
a668 3
		myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin = createSpinnerWidget(mySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroup, "Y", 0,
				999, 1, 100, myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d670 4
a673 2
		myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setClient(myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl);
		myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarMyLayoutGroupComposite));
d675 1
a675 5
		myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite = createExpandableComposite(myMyExpandBarMyLayoutGroupComposite, getModelHelper()
				.getNameMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel(), null, myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, null, null,
				false, true, false, false);
		Composite myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl = createCompositeWidget(myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, "",
				null, myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite, null, null, false, true, false, false);
d677 2
a678 2
		myLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupGroup = createGroupWidget(myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl,
				"Layout Parameters", null, null, null, null, true, true, false, false);
d680 2
a681 8
		myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText = createTextWidget(myLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupGroup, getModelHelper()
				.getNameMyBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupTextFromMetamodel(), null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText);

		myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText = createTextWidget(myLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupGroup,
				getModelHelper().getNameMyQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupTextFromMetamodel(), null,
				myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText, null, null, false, true, false, false);
		getListener().startListeningTo(myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText);
d683 2
a684 2
		myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setClient(myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeControl);
		myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.addExpansionListener(getExpansionListener(myMyExpandBarMyLayoutGroupComposite));
d688 2
a689 2
		myBorderLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper()
				.getNameMyBorderLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel(), null, null, null, null, true, true, false, false);
d691 1
a691 1
		myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite = createCompositeWidget(myBorderLayoutDataGroupMyLayoutDataCompositeGroup, "", null, null, null, null, true, true, false, false);
d693 1
a693 2
		myUpperEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeLabel = createLabelWidget(myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite, "       ", null, null, null, null, true,
				true, false, false);
d695 1
a695 2
		myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite, "N",
				myUpperEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeLabel, null, null, null, true, false, false, false);
d697 1
a697 1
		getListener().startListeningTo(myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d699 1
a699 2
		myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite, "E", null,
				myUpperEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeLabel, null, null, false, true, false, false);
d701 1
a701 1
		getListener().startListeningTo(myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d703 1
a703 2
		myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite, "C",
				myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio, null, null, null, true, false, false, false);
d705 1
a705 1
		getListener().startListeningTo(myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d707 1
a707 2
		myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite, "W",
				myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio, null, null, null, true, false, false, true);
d709 1
a709 1
		getListener().startListeningTo(myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d711 1
a711 2
		myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeComposite, "S", null,
				myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio, null, null, false, true, true, false);
d713 1
a713 1
		getListener().startListeningTo(myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d715 2
a716 2
		myMyXYLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper().getNameMyMyXYLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel(),
				null, null, null, null, true, true, false, false);
d718 1
a718 2
		myMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyXYLayoutDataGroupMyLayoutDataCompositeGroup, "Top Left Position", null, null, null, null, true,
				true, false, false);
d720 3
a722 3
		myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(myMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpinFromMetamodel(), 0, 999, 1, 100, null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d724 3
a726 4
		myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(myMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpinFromMetamodel(), 0, 999, 1, 100,
				myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d728 1
a728 2
		myMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyXYLayoutDataGroupMyLayoutDataCompositeGroup, "Size Constraints", null,
				myMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup, null, null, false, true, false, false);
d730 2
a731 3
		myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(myMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup, "X", 0, 999, 1, 100,
				null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d733 2
a734 3
		myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(myMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeGroup, "Y", 0, 999, 1, 100,
				myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d736 2
a737 2
		myMyGridLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper()
				.getNameMyMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel(), null, null, null, null, true, true, false, false);
d739 2
a740 2
		myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox = createCheckboxButton(myMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckboxFromMetamodel(), null, null, null, null, true, true, false, false);
d742 1
a742 1
		getListener().startListeningTo(myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox);
d744 2
a745 3
		myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox = createCheckboxButton(myMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckboxFromMetamodel(), null,
				myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox, null, null, false, true, false, false);
d747 1
a747 1
		getListener().startListeningTo(myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox);
d749 1
a749 2
		myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel(), null, myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox, null,
d752 1
a752 2
		myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, null, null, null, true, true, false, false);
d754 1
a754 1
		getListener().startListeningTo(myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d756 1
a756 3
		myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio,
				null, null, false, true, false, false);
d758 1
a758 1
		getListener().startListeningTo(myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d760 1
a760 3
		myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio, null,
				null, false, true, false, false);
d762 1
a762 1
		getListener().startListeningTo(myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d764 1
a764 3
		myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio, null, null,
				false, true, false, false);
d766 1
a766 1
		getListener().startListeningTo(myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d768 1
a768 2
		myHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel(), myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, null, null, null,
d771 1
a771 2
		myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, null, null, null, true, true, false, false);
d773 1
a773 1
		getListener().startListeningTo(myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d775 1
a775 3
		myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio,
				null, null, false, true, false, false);
d777 1
a777 1
		getListener().startListeningTo(myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d779 1
a779 3
		myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio, null,
				null, false, true, false, false);
d781 1
a781 1
		getListener().startListeningTo(myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d783 1
a783 3
		myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio = createRadioButton(myHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel(), null, myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio, null,
				null, false, true, false, false);
d785 1
a785 1
		getListener().startListeningTo(myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d787 1
a787 2
		mySpanningsMyGridLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyGridLayoutDataGroupMyLayoutDataCompositeGroup, "Spannings", null,
				myVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroup, null, null, false, true, false, false);
d789 2
a790 3
		myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(mySpanningsMyGridLayoutDataGroupMyLayoutDataCompositeGroup, "Vertical", 1, 99, 1, 100, null, null,
				null, null, true, true, false, false);
		getListener().startListeningTo(myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d792 2
a793 3
		myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(mySpanningsMyGridLayoutDataGroupMyLayoutDataCompositeGroup, "Horizontal", 1, 99, 1, 100,
				myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d795 1
a795 3
		mySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel(), null, mySpanningsMyGridLayoutDataGroupMyLayoutDataCompositeGroup, null, null, false, true, false,
				false);
d797 2
a798 3
		myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(mySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeGroup, "X", 0, 999, 1, 100, null, null, null, null, true,
				true, false, false);
		getListener().startListeningTo(myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d800 2
a801 3
		myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(mySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeGroup, "Y", 0, 999, 1, 100,
				myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin, null, null, null, true, false, false, false);
		getListener().startListeningTo(myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d803 1
a803 2
		myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin = createSpinnerWidget(myMyGridLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpinFromMetamodel(), 0, 99, 1, 100, null, mySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeGroup, null, null,
d805 1
a805 1
		getListener().startListeningTo(myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d807 2
a808 2
		myMyCustomLayoutDataGroupMyLayoutDataCompositeGroup = createGroupWidget(myMyLayoutDataCompositeComposite, getModelHelper()
				.getNameMyMyCustomLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel(), null, null, null, null, true, true, false, false);
d810 2
a811 3
		myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText = createTextWidget(myMyCustomLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeTextFromMetamodel(), null, null, null, null, true, true, false, false);
		getListener().startListeningTo(myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText);
d813 1
a813 2
		myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText = createTextWidget(myMyCustomLayoutDataGroupMyLayoutDataCompositeGroup, getModelHelper()
				.getNameMyQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeTextFromMetamodel(), null, myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText, null, null, false,
d815 1
a815 1
		getListener().startListeningTo(myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText);
d823 1
a823 1
		getListener().stopListeningTo(myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d825 1
a825 1
		getListener().stopListeningTo(myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d827 1
a827 1
		getListener().stopListeningTo(myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d829 1
a829 1
		getListener().stopListeningTo(myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d831 1
a831 1
		getListener().stopListeningTo(myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d833 1
a833 1
		getListener().stopListeningTo(myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d835 1
a835 1
		getListener().stopListeningTo(myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio);
d837 1
a837 1
		getListener().stopListeningTo(myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin);
d839 1
a839 1
		getListener().stopListeningTo(myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin);
d841 2
a842 2
		myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));
		getListener().stopListeningTo(mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox);
d844 1
a844 1
		getListener().stopListeningTo(myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox);
d846 1
a846 1
		getListener().stopListeningTo(myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin);
d848 1
a848 1
		getListener().stopListeningTo(myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin);
d850 1
a850 1
		getListener().stopListeningTo(myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d852 1
a852 1
		getListener().stopListeningTo(myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d854 1
a854 1
		getListener().stopListeningTo(myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d856 1
a856 1
		getListener().stopListeningTo(myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d858 1
a858 1
		getListener().stopListeningTo(myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d860 1
a860 1
		getListener().stopListeningTo(myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d862 1
a862 1
		getListener().stopListeningTo(myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d864 1
a864 1
		getListener().stopListeningTo(myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d866 1
a866 1
		getListener().stopListeningTo(myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d868 1
a868 1
		getListener().stopListeningTo(myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio);
d870 2
a871 2
		myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));
		getListener().stopListeningTo(myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d873 1
a873 1
		getListener().stopListeningTo(myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox);
d875 1
a875 1
		getListener().stopListeningTo(myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d877 1
a877 1
		getListener().stopListeningTo(myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d879 1
a879 1
		getListener().stopListeningTo(myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d881 1
a881 1
		getListener().stopListeningTo(myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin);
d883 2
a884 2
		myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));
		getListener().stopListeningTo(myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText);
d886 1
a886 1
		getListener().stopListeningTo(myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText);
d888 1
a888 1
		myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.removeExpansionListener(getExpansionListener(null));
d890 1
a890 1
		getListener().stopListeningTo(myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d892 1
a892 1
		getListener().stopListeningTo(myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d894 1
a894 1
		getListener().stopListeningTo(myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d896 1
a896 1
		getListener().stopListeningTo(myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d898 1
a898 1
		getListener().stopListeningTo(myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio);
d900 1
a900 1
		getListener().stopListeningTo(myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d902 1
a902 1
		getListener().stopListeningTo(myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d904 1
a904 1
		getListener().stopListeningTo(myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d906 1
a906 1
		getListener().stopListeningTo(myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin);
d908 1
a908 1
		getListener().stopListeningTo(myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox);
d910 1
a910 1
		getListener().stopListeningTo(myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox);
d912 1
a912 1
		getListener().stopListeningTo(myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d914 1
a914 1
		getListener().stopListeningTo(myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d916 1
a916 1
		getListener().stopListeningTo(myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d918 1
a918 1
		getListener().stopListeningTo(myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d920 1
a920 1
		getListener().stopListeningTo(myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d922 1
a922 1
		getListener().stopListeningTo(myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d924 1
a924 1
		getListener().stopListeningTo(myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d926 1
a926 1
		getListener().stopListeningTo(myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio);
d928 1
a928 1
		getListener().stopListeningTo(myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d930 1
a930 1
		getListener().stopListeningTo(myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d932 1
a932 1
		getListener().stopListeningTo(myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d934 1
a934 1
		getListener().stopListeningTo(myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d936 1
a936 1
		getListener().stopListeningTo(myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin);
d938 1
a938 1
		getListener().stopListeningTo(myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText);
d940 1
a940 1
		getListener().stopListeningTo(myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText);
d973 7
a979 21
				{
					myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.setSelection(getModelHelper().getValueForMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target));
				}
				{
					myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.setSelection(getModelHelper().getValueForMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target));
				}
				{
					myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.setSelection(getModelHelper().getValueForMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target));
				}
				{
					myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.setSelection(getModelHelper().getValueForMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target));
				}
				{
					myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.setSelection(getModelHelper().getValueForMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target));
				}
				{
					myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.setSelection(getModelHelper().getValueForMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target));
				}
				{
					myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.setSelection(getModelHelper().getValueForMyMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target));
				}
d983 2
a984 3
				boolean isMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible = getModelHelper()
						.isVisibleMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(target);
				if (myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.isExpanded() != isMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d988 2
a989 2
				myMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setExpanded(isMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible);
				if (isMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d992 2
a993 8
						{
							myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper().getValueForMyDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(
									target));
						}
						{
							myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper().getValueForMyDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(
									target));
						}
d996 2
a997 3
				boolean isMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible = getModelHelper().isVisibleMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(
						target);
				if (myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.isExpanded() != isMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d1001 2
a1002 2
				myMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setExpanded(isMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible);
				if (isMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d1005 3
d1009 2
a1010 16
							mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox.setSelection(getModelHelper()
									.getValueForMySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(target));
						}
						{
							myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox.setSelection(getModelHelper()
									.getValueForMyMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(target));
						}
						{
							{
								myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper()
										.getValueForMyMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(target));
							}
							{
								myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper()
										.getValueForMyMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(target));
							}
d1013 6
a1018 27
							{
								String modelText = "       ";
								if (modelText == null) {
									modelText = EMPTY_STRING;
								}
								myMinorTopEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel.setText(modelText);
							}
							{
								myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
d1021 6
a1026 27
							{
								String modelText = "       ";
								if (modelText == null) {
									modelText = EMPTY_STRING;
								}
								myMajorTopEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupLabel.setText(modelText);
							}
							{
								myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
							{
								myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.setSelection(getModelHelper()
										.getValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target));
							}
d1030 2
a1031 3
				boolean isMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible = getModelHelper().isVisibleMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(
						target);
				if (myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.isExpanded() != isMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d1035 2
a1036 2
				myMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setExpanded(isMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible);
				if (isMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d1039 3
d1043 2
a1044 6
							myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper()
									.getValueForMyNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target));
						}
						{
							myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox.setSelection(getModelHelper()
									.getValueForMyEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox(target));
d1047 2
a1048 18
							{
								myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper()
										.getValueForMyDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target));
							}
							{
								myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper()
										.getValueForMyDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target));
							}
						}
						{
							{
								myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper()
										.getValueForMyDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target));
							}
							{
								myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.setSelection(getModelHelper()
										.getValueForMyDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target));
							}
d1052 2
a1053 3
				boolean isMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible = getModelHelper()
						.isVisibleMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(target);
				if (myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.isExpanded() != isMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d1057 2
a1058 2
				myMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite.setExpanded(isMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible);
				if (isMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeVisible) {
d1061 2
a1062 14
						{
							String modelText = getModelHelper().getValueForMyBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(target);
							if (modelText == null) {
								modelText = EMPTY_STRING;
							}
							myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText.setText(modelText);
						}
						{
							String modelText = getModelHelper().getValueForMyQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(target);
							if (modelText == null) {
								modelText = EMPTY_STRING;
							}
							myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText.setText(modelText);
						}
d1069 1
a1069 1
			boolean isMyBorderLayoutDataGroupMyLayoutDataCompositeGroupVisible = getModelHelper().isVisibleMyBorderLayoutDataGroupMyLayoutDataCompositeGroup(target);
d1071 2
a1072 2
			myBorderLayoutDataGroupMyLayoutDataCompositeGroup.setVisible(isMyBorderLayoutDataGroupMyLayoutDataCompositeGroupVisible);
			if (isMyBorderLayoutDataGroupMyLayoutDataCompositeGroupVisible) {
d1075 6
a1080 27
					{
						String modelText = "       ";
						if (modelText == null) {
							modelText = EMPTY_STRING;
						}
						myUpperEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeLabel.setText(modelText);
					}
					{
						myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper().getValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(
								target));
					}
					{
						myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper().getValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(
								target));
					}
					{
						myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper().getValueForMyBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(
								target));
					}
					{
						myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper().getValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(
								target));
					}
					{
						myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper().getValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(
								target));
					}
d1083 1
a1083 1
			boolean isMyMyXYLayoutDataGroupMyLayoutDataCompositeGroupVisible = getModelHelper().isVisibleMyMyXYLayoutDataGroupMyLayoutDataCompositeGroup(target);
d1085 2
a1086 2
			myMyXYLayoutDataGroupMyLayoutDataCompositeGroup.setVisible(isMyMyXYLayoutDataGroupMyLayoutDataCompositeGroupVisible);
			if (isMyMyXYLayoutDataGroupMyLayoutDataCompositeGroupVisible) {
d1089 2
a1090 8
					{
						myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper()
								.getValueForMyMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
					{
						myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper()
								.getValueForMyMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
d1093 2
a1094 8
					{
						myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper()
								.getValueForMyMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
					{
						myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper()
								.getValueForMyMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
d1097 6
a1102 1
			boolean isMyMyGridLayoutDataGroupMyLayoutDataCompositeGroupVisible = getModelHelper().isVisibleMyMyGridLayoutDataGroupMyLayoutDataCompositeGroup(target);
a1103 2
			myMyGridLayoutDataGroupMyLayoutDataCompositeGroup.setVisible(isMyMyGridLayoutDataGroupMyLayoutDataCompositeGroupVisible);
			if (isMyMyGridLayoutDataGroupMyLayoutDataCompositeGroupVisible) {
d1105 4
a1108 2
					myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox.setSelection(getModelHelper()
							.getValueForMyGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(target));
d1111 4
a1114 2
					myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox.setSelection(getModelHelper()
							.getValueForMyGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(target));
d1117 2
a1118 16
					{
						myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
					{
						myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
					{
						myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
					{
						myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
d1121 2
a1122 37
					{
						myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
					{
						myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
					{
						myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
					{
						myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.setSelection(getModelHelper()
								.getValueForMyFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target));
					}
				}
				{
					{
						myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper()
								.getValueForMyVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
					{
						myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper()
								.getValueForMyHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
				}
				{
					{
						myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper().getValueForMyDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
					{
						myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper().getValueForMyDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target));
					}
				}
				{
					myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin.setSelection(getModelHelper().getValueForMyHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target));
d1124 1
d1126 1
a1126 1
			boolean isMyMyCustomLayoutDataGroupMyLayoutDataCompositeGroupVisible = getModelHelper().isVisibleMyMyCustomLayoutDataGroupMyLayoutDataCompositeGroup(target);
d1128 4
a1131 16
			myMyCustomLayoutDataGroupMyLayoutDataCompositeGroup.setVisible(isMyMyCustomLayoutDataGroupMyLayoutDataCompositeGroupVisible);
			if (isMyMyCustomLayoutDataGroupMyLayoutDataCompositeGroupVisible) {
				{
					String modelText = getModelHelper().getValueForMyBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(target);
					if (modelText == null) {
						modelText = EMPTY_STRING;
					}
					myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText.setText(modelText);
				}
				{
					String modelText = getModelHelper().getValueForMyQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(target);
					if (modelText == null) {
						modelText = EMPTY_STRING;
					}
					myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText.setText(modelText);
				}
d1154 3
a1156 2
	public void applyChangesFrom(final Widget widget, int kind) {
		String commandName = "Modifying model with ui data from " + widget.toString();
d1162 11
a1172 1
				commands.add(createCommand(commandName, target, getModelModifierFor(target, widget, kind)));
d1182 6
a1187 11
	public Runnable getModelModifierFor(final Layoutable target, final Widget widget, int kind) {
		if (widget == myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio && myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target, value);
					}
				}
			};
d1189 5
a1193 11

		if (widget == myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio && myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target, value);
					}
				}
			};
d1195 5
a1199 11

		if (widget == myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio && myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target, value);
					}
				}
			};
d1201 5
a1205 11

		if (widget == myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio && myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target, value);
					}
				}
			};
d1207 5
a1211 11

		if (widget == myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio && myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target, value);
					}
				}
			};
d1213 5
a1217 11

		if (widget == myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio && myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target, value);
					}
				}
			};
d1219 5
a1223 11

		if (widget == myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio && myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(target, value);
					}
				}
			};
d1225 3
a1227 9

		if (widget == myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin && myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1229 3
a1231 9

		if (widget == myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin && myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1233 3
a1235 10

		if (widget == mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox
				&& mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = mySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox.getSelection();
					getModelHelper().setValueForMySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(target, value);
				}
			};
d1237 3
a1239 10

		if (widget == myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox
				&& myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox.getSelection();
					getModelHelper().setValueForMyMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(target, value);
				}
			};
d1241 3
a1243 10

		if (widget == myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin
				&& myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1245 3
a1247 10

		if (widget == myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin
				&& myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1249 5
a1253 12

		if (widget == myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1255 5
a1259 12

		if (widget == myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1261 5
a1265 12

		if (widget == myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1267 5
a1271 12

		if (widget == myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1273 5
a1277 12

		if (widget == myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1279 5
a1283 12

		if (widget == myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1285 5
a1289 12

		if (widget == myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1291 5
a1295 12

		if (widget == myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1297 5
a1301 12

		if (widget == myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1303 5
a1307 12

		if (widget == myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio
				&& myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(target, value);
					}
				}
			};
d1309 3
a1311 9

		if (widget == myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin && myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1313 3
a1315 10

		if (widget == myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox
				&& myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox.getSelection();
					getModelHelper().setValueForMyEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox(target, value);
				}
			};
d1317 3
a1319 9

		if (widget == myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin && myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1321 3
a1323 9

		if (widget == myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin && myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1325 3
a1327 9

		if (widget == myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin && myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1329 3
a1331 9

		if (widget == myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin && myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin.getSelection();
					getModelHelper().setValueForMyDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(target, value);
				}
			};
d1333 3
a1335 10

		if (widget == myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText
				&& myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText.isVisible()) {
			return new Runnable() {

				public void run() {
					final String value = myBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText.getText();
					getModelHelper().setValueForMyBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(target, value);
				}
			};
d1337 3
a1339 10

		if (widget == myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText
				&& myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText.isVisible()) {
			return new Runnable() {

				public void run() {
					final String value = myQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText.getText();
					getModelHelper().setValueForMyQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(target, value);
				}
			};
d1341 5
a1345 11

		if (widget == myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio && myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1347 5
a1351 11

		if (widget == myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio && myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1353 5
a1357 11

		if (widget == myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio && myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1359 5
a1363 11

		if (widget == myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio && myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1365 5
a1369 11

		if (widget == myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio && myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1371 3
a1373 9

		if (widget == myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin && myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1375 3
a1377 9

		if (widget == myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin && myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1379 3
a1381 9

		if (widget == myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin && myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1383 3
a1385 9

		if (widget == myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin && myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1387 3
a1389 9

		if (widget == myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox && myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox.getSelection();
					getModelHelper().setValueForMyGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(target, value);
				}
			};
d1391 3
a1393 9

		if (widget == myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox && myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox.getSelection();
					getModelHelper().setValueForMyGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(target, value);
				}
			};
d1395 5
a1399 11

		if (widget == myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1401 5
a1405 11

		if (widget == myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1407 5
a1411 11

		if (widget == myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1413 5
a1417 11

		if (widget == myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1419 5
a1423 11

		if (widget == myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1425 5
a1429 11

		if (widget == myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1431 5
a1435 11

		if (widget == myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1437 5
a1441 11

		if (widget == myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio && myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.isVisible()) {
			return new Runnable() {

				public void run() {
					final boolean value = myFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio.getSelection();
					if (value) {
						getModelHelper().setValueForMyFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(target, value);
					}
				}
			};
d1443 3
a1445 9

		if (widget == myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin && myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1447 3
a1449 9

		if (widget == myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin && myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1451 3
a1453 9

		if (widget == myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin && myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1455 3
a1457 9

		if (widget == myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin && myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1459 3
a1461 9

		if (widget == myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin && myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin.isVisible()) {
			return new Runnable() {

				public void run() {
					final int value = myHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin.getSelection();
					getModelHelper().setValueForMyHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin(target, value);
				}
			};
d1463 3
a1465 9

		if (widget == myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText && myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText.isVisible()) {
			return new Runnable() {

				public void run() {
					final String value = myBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText.getText();
					getModelHelper().setValueForMyBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(target, value);
				}
			};
d1467 3
a1469 9

		if (widget == myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText && myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText.isVisible()) {
			return new Runnable() {

				public void run() {
					final String value = myQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText.getText();
					getModelHelper().setValueForMyQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(target, value);
				}
			};
a1470 8

		// default:
		return new Runnable() {

			public void run() {
				// does nothing
			}
		};
d1589 1
a1589 1
		public void setValueForMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1593 1
a1593 1
			setValueForMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(layoutable, valueToSet);
d1600 1
a1600 1
		public void setValueForMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1604 1
a1604 1
			setValueForMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(layoutable, valueToSet);
d1611 1
a1611 1
		public void setValueForMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1615 1
a1615 1
			setValueForMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(layoutable, valueToSet);
d1622 1
a1622 1
		public void setValueForMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1626 1
a1626 1
			setValueForMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(layoutable, valueToSet);
d1633 1
a1633 1
		public void setValueForMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1637 1
a1637 1
			setValueForMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(layoutable, valueToSet);
d1644 1
a1644 1
		public void setValueForMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1648 1
a1648 1
			setValueForMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(layoutable, valueToSet);
d1655 1
a1655 1
		public void setValueForMyMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1659 1
a1659 1
			setValueForMyMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(layoutable, valueToSet);
d1666 1
a1666 1
		public boolean getValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1668 1
a1668 1
			result = getValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1676 1
a1676 1
		public void setValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1680 1
a1680 1
			setValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1686 1
a1686 1
		public boolean getValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1688 1
a1688 1
			result = getValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1696 1
a1696 1
		public void setValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1700 1
a1700 1
			setValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1706 1
a1706 1
		public boolean getValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1708 1
a1708 1
			result = getValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1716 1
a1716 1
		public void setValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1720 1
a1720 1
			setValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1726 1
a1726 1
		public boolean getValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1728 1
a1728 1
			result = getValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1736 1
a1736 1
		public void setValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1740 1
a1740 1
			setValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1746 1
a1746 1
		public boolean getValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1748 1
a1748 1
			result = getValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1756 1
a1756 1
		public void setValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1760 1
a1760 1
			setValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1766 1
a1766 1
		public boolean getValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1768 1
a1768 1
			result = getValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1776 1
a1776 1
		public void setValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1780 1
a1780 1
			setValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1786 1
a1786 1
		public boolean getValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1788 1
a1788 1
			result = getValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1796 1
a1796 1
		public void setValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1800 1
a1800 1
			setValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1806 1
a1806 1
		public boolean getValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d1808 1
a1808 1
			result = getValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable);
d1816 1
a1816 1
		public void setValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
d1820 1
a1820 1
			setValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(layoutable, valueToSet);
d1826 1
a1826 1
		public boolean getValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d1828 1
a1828 1
			result = getValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable);
d1836 1
a1836 1
		public void setValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
d1840 1
a1840 1
			setValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable, valueToSet);
d1846 1
a1846 1
		public boolean getValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d1848 1
a1848 1
			result = getValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable);
d1856 1
a1856 1
		public void setValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
d1860 1
a1860 1
			setValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable, valueToSet);
d1866 1
a1866 1
		public boolean getValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d1868 1
a1868 1
			result = getValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable);
d1876 1
a1876 1
		public void setValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
d1880 1
a1880 1
			setValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable, valueToSet);
d1886 1
a1886 1
		public boolean getValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d1888 1
a1888 1
			result = getValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable);
d1896 1
a1896 1
		public void setValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
d1900 1
a1900 1
			setValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(layoutable, valueToSet);
d1915 1
a1915 1
		public boolean getValueForMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable) {
d1929 2
a1930 4
		public void setValueForMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {

			BorderLayout newInstance = GMFGraphFactory.eINSTANCE.createBorderLayout();
			layoutable.setLayout(newInstance);
d1937 1
a1937 1
		public String getNameMyMyBorderLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel() {
d1944 1
a1944 1
		public boolean getValueForMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable) {
d1958 2
a1959 4
		public void setValueForMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {

			CustomLayout newInstance = GMFGraphFactory.eINSTANCE.createCustomLayout();
			layoutable.setLayout(newInstance);
d1966 1
a1966 1
		public String getNameMyMyCustomLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel() {
d1973 1
a1973 1
		public boolean getValueForMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable) {
d1987 2
a1988 4
		public void setValueForMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {

			GridLayout newInstance = GMFGraphFactory.eINSTANCE.createGridLayout();
			layoutable.setLayout(newInstance);
d1995 1
a1995 1
		public String getNameMyMyGridLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel() {
d2002 1
a2002 1
		public boolean getValueForMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable) {
d2016 2
a2017 4
		public void setValueForMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {

			FlowLayout newInstance = GMFGraphFactory.eINSTANCE.createFlowLayout();
			layoutable.setLayout(newInstance);
d2024 1
a2024 1
		public String getNameMyMyFlowLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel() {
d2031 1
a2031 1
		public boolean getValueForMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable) {
d2045 2
a2046 4
		public void setValueForMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {

			StackLayout newInstance = GMFGraphFactory.eINSTANCE.createStackLayout();
			layoutable.setLayout(newInstance);
d2053 1
a2053 1
		public String getNameMyMyStackLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel() {
d2060 1
a2060 1
		public boolean getValueForMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable) {
d2074 2
a2075 4
		public void setValueForMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {

			XYLayout newInstance = GMFGraphFactory.eINSTANCE.createXYLayout();
			layoutable.setLayout(newInstance);
d2082 1
a2082 1
		public String getNameMyMyXYLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioFromMetamodel() {
d2089 1
a2089 1
		public boolean getValueForMyMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadio(Layoutable layoutable) {
d2101 1
a2101 2
		public void setValueForMyMyNoLayoutRadioMyLayoutKindGroupMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {

d2109 1
a2109 1
		public boolean isVisibleMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(Layoutable targetVar) {
d2123 1
a2123 1
		public String getNameMyMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel() {
d2130 1
a2130 1
		public String getNameMySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel() {
d2137 1
a2137 1
		public int getValueForMyDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d2159 1
a2159 1
		public void setValueForMyDxSpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
a2169 1

d2185 1
a2185 1
		public int getValueForMyDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d2207 1
a2207 1
		public void setValueForMyDySpacingMyLayoutBorderExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
a2217 1

d2233 1
a2233 1
		public boolean isVisibleMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(Layoutable targetVar) {
d2247 1
a2247 1
		public String getNameMyMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel() {
d2254 1
a2254 1
		public boolean getValueForMySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(Layoutable layoutable) {
d2272 1
a2272 1
		public void setValueForMySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(Layoutable layoutable, boolean value) {
d2290 1
a2290 1
		public String getNameMySingleLineLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckboxFromMetamodel() {
d2297 1
a2297 1
		public boolean getValueForMyMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(Layoutable layoutable) {
d2315 1
a2315 1
		public void setValueForMyMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckbox(Layoutable layoutable, boolean value) {
d2333 1
a2333 1
		public String getNameMyMinorSizeLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupCheckboxFromMetamodel() {
d2340 1
a2340 1
		public int getValueForMyMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d2358 1
a2358 1
		public void setValueForMyMinorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
d2376 1
a2376 1
		public int getValueForMyMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d2394 1
a2394 1
		public void setValueForMyMajorSpacingsLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
d2412 1
a2412 1
		public String getNameMyMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel() {
d2419 1
a2419 1
		public boolean getValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2441 1
a2441 1
		public void setValueForMyMinorNMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2447 1

d2459 1
a2459 1
		public boolean getValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2481 1
a2481 1
		public void setValueForMyMinorEMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2487 1

d2499 1
a2499 1
		public boolean getValueForMyMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d2521 1
a2521 1
		public void setValueForMyMinorCMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
a2527 1

d2539 1
a2539 1
		public boolean getValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2561 1
a2561 1
		public void setValueForMyMinorWMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2567 1

d2579 1
a2579 1
		public boolean getValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2601 1
a2601 1
		public void setValueForMyMinorSMinorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2607 1

d2619 1
a2619 1
		public String getNameMyMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel() {
d2626 1
a2626 1
		public boolean getValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2648 1
a2648 1
		public void setValueForMyMajorNMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2654 1

d2666 1
a2666 1
		public boolean getValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2688 1
a2688 1
		public void setValueForMyMajorEMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2694 1

d2706 1
a2706 1
		public boolean getValueForMyMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable) {
d2728 1
a2728 1
		public void setValueForMyMajorCMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadio(Layoutable layoutable, boolean value) {
a2734 1

d2746 1
a2746 1
		public boolean getValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2768 1
a2768 1
		public void setValueForMyMajorWMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2774 1

d2786 1
a2786 1
		public boolean getValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable) {
d2808 1
a2808 1
		public void setValueForMyMajorSMajorAlignLayoutParametersMyLayoutFlowExpandGroupMyExpandBarMyLayoutGroupRadioGen(Layoutable layoutable, boolean value) {
a2814 1

d2826 1
a2826 1
		public boolean isVisibleMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(Layoutable targetVar) {
d2840 1
a2840 1
		public String getNameMyMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel() {
d2847 1
a2847 1
		public int getValueForMyNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d2865 1
a2865 1
		public void setValueForMyNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
d2883 1
a2883 1
		public String getNameMyNumColumnsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpinFromMetamodel() {
d2890 1
a2890 1
		public boolean getValueForMyEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox(Layoutable layoutable) {
d2908 1
a2908 1
		public void setValueForMyEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckbox(Layoutable layoutable, boolean value) {
d2926 1
a2926 1
		public String getNameMyEqualWidthLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupCheckboxFromMetamodel() {
d2933 1
a2933 1
		public String getNameMyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel() {
d2940 1
a2940 1
		public int getValueForMyDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d2962 1
a2962 1
		public void setValueForMyDxMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
a2972 1

d2988 1
a2988 1
		public int getValueForMyDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d3010 1
a3010 1
		public void setValueForMyDyMarginsLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
a3020 1

d3036 1
a3036 1
		public String getNameMySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupGroupFromMetamodel() {
d3043 1
a3043 1
		public int getValueForMyDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d3065 1
a3065 1
		public void setValueForMyDxSpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
a3075 1

d3091 1
a3091 1
		public int getValueForMyDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable) {
d3113 1
a3113 1
		public void setValueForMyDySpacingLayoutParametersMyLayoutGridExpandGroupMyExpandBarMyLayoutGroupSpin(Layoutable layoutable, int value) {
a3123 1

d3139 1
a3139 1
		public boolean isVisibleMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableComposite(Layoutable targetVar) {
d3153 1
a3153 1
		public String getNameMyMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupExpandableCompositeFromMetamodel() {
d3160 1
a3160 1
		public String getValueForMyBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(Layoutable layoutable) {
d3172 4
a3175 1
			return value;
d3181 1
a3181 1
		public void setValueForMyBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(Layoutable layoutable, String value) {
d3199 1
a3199 1
		public String getNameMyBundleNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupTextFromMetamodel() {
d3206 1
a3206 1
		public String getValueForMyQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(Layoutable layoutable) {
d3218 4
a3221 1
			return value;
d3227 1
a3227 1
		public void setValueForMyQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupText(Layoutable layoutable, String value) {
d3245 1
a3245 1
		public String getNameMyQualifiedClassNameLayoutParametersMyLayoutCustomExpandGroupMyExpandBarMyLayoutGroupTextFromMetamodel() {
d3252 1
a3252 1
		public boolean isVisibleMyBorderLayoutDataGroupMyLayoutDataCompositeGroup(Layoutable targetVar) {
d3266 1
a3266 1
		public String getNameMyBorderLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel() {
d3273 1
a3273 1
		public boolean getValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable) {
d3295 1
a3295 1
		public void setValueForMyBorderNWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable, boolean value) {
a3301 1

d3313 1
a3313 1
		public boolean getValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable) {
d3335 1
a3335 1
		public void setValueForMyBorderEWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable, boolean value) {
a3341 1

d3353 1
a3353 1
		public boolean getValueForMyBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d3375 1
a3375 1
		public void setValueForMyBorderCWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a3381 1

d3393 1
a3393 1
		public boolean getValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable) {
d3415 1
a3415 1
		public void setValueForMyBorderWWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable, boolean value) {
a3421 1

d3433 1
a3433 1
		public boolean getValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable) {
d3455 1
a3455 1
		public void setValueForMyBorderSWorldPartsBorderLayoutDataGroupMyLayoutDataCompositeRadioGen(Layoutable layoutable, boolean value) {
a3461 1

d3473 1
a3473 1
		public boolean isVisibleMyMyXYLayoutDataGroupMyLayoutDataCompositeGroup(Layoutable targetVar) {
d3487 1
a3487 1
		public String getNameMyMyXYLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel() {
d3494 1
a3494 1
		public int getValueForMyMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d3516 1
a3516 1
		public void setValueForMyMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
a3526 1

d3542 1
a3542 1
		public String getNameMyMyXYDataXSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpinFromMetamodel() {
d3549 1
a3549 1
		public int getValueForMyMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d3571 1
a3571 1
		public void setValueForMyMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
a3581 1

d3597 1
a3597 1
		public String getNameMyMyXYDataYSpinMyXYDataTopLeftGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpinFromMetamodel() {
d3604 1
a3604 1
		public int getValueForMyMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d3626 1
a3626 1
		public void setValueForMyMyXYDataSizeXSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
a3636 1

d3652 1
a3652 1
		public int getValueForMyMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d3674 1
a3674 1
		public void setValueForMyMyXYDataSizeYSpinMyXYDataSizeGroupMyXYLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
a3684 1

d3700 1
a3700 1
		public boolean isVisibleMyMyGridLayoutDataGroupMyLayoutDataCompositeGroup(Layoutable targetVar) {
d3714 1
a3714 1
		public String getNameMyMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel() {
d3721 1
a3721 1
		public boolean getValueForMyGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(Layoutable layoutable) {
d3739 1
a3739 1
		public void setValueForMyGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(Layoutable layoutable, boolean value) {
d3757 1
a3757 1
		public String getNameMyGrabExcessHorizontalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckboxFromMetamodel() {
d3764 1
a3764 1
		public boolean getValueForMyGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(Layoutable layoutable) {
d3782 1
a3782 1
		public void setValueForMyGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckbox(Layoutable layoutable, boolean value) {
d3800 1
a3800 1
		public String getNameMyGrabExcessVerticalSpaceMyGridLayoutDataGroupMyLayoutDataCompositeCheckboxFromMetamodel() {
d3807 1
a3807 1
		public String getNameMyVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel() {
d3814 1
a3814 1
		public boolean getValueForMyBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d3836 1
a3836 1
		public void setValueForMyBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a3842 1

d3854 1
a3854 1
		public String getNameMyBEGINNINGVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d3861 1
a3861 1
		public boolean getValueForMyCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d3883 1
a3883 1
		public void setValueForMyCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a3889 1

d3901 1
a3901 1
		public String getNameMyCENTERVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d3908 1
a3908 1
		public boolean getValueForMyENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d3930 1
a3930 1
		public void setValueForMyENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a3936 1

d3948 1
a3948 1
		public String getNameMyENDVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d3955 1
a3955 1
		public boolean getValueForMyFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d3977 1
a3977 1
		public void setValueForMyFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a3983 1

d3995 1
a3995 1
		public String getNameMyFILLVerticalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d4002 1
a4002 1
		public String getNameMyHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel() {
d4009 1
a4009 1
		public boolean getValueForMyBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d4031 1
a4031 1
		public void setValueForMyBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a4037 1

d4049 1
a4049 1
		public String getNameMyBEGINNINGHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d4056 1
a4056 1
		public boolean getValueForMyCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d4078 1
a4078 1
		public void setValueForMyCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a4084 1

d4096 1
a4096 1
		public String getNameMyCENTERHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d4103 1
a4103 1
		public boolean getValueForMyENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d4125 1
a4125 1
		public void setValueForMyENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a4131 1

d4143 1
a4143 1
		public String getNameMyENDHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d4150 1
a4150 1
		public boolean getValueForMyFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable) {
d4172 1
a4172 1
		public void setValueForMyFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadio(Layoutable layoutable, boolean value) {
a4178 1

d4190 1
a4190 1
		public String getNameMyFILLHorizontalAlignmentMyGridLayoutDataGroupMyLayoutDataCompositeRadioFromMetamodel() {
d4197 1
a4197 1
		public int getValueForMyVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d4215 1
a4215 1
		public void setValueForMyVerticalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
d4233 1
a4233 1
		public int getValueForMyHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d4251 1
a4251 1
		public void setValueForMyHorizontalSpanSpanningsMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
d4269 1
a4269 1
		public String getNameMySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel() {
d4276 1
a4276 1
		public int getValueForMyDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d4298 1
a4298 1
		public void setValueForMyDxSizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
a4308 1

d4324 1
a4324 1
		public int getValueForMyDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d4346 1
a4346 1
		public void setValueForMyDySizeHintMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
a4356 1

d4372 1
a4372 1
		public int getValueForMyHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable) {
d4390 1
a4390 1
		public void setValueForMyHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpin(Layoutable layoutable, int value) {
d4408 1
a4408 1
		public String getNameMyHorizontalIndentMyGridLayoutDataGroupMyLayoutDataCompositeSpinFromMetamodel() {
d4415 1
a4415 1
		public boolean isVisibleMyMyCustomLayoutDataGroupMyLayoutDataCompositeGroup(Layoutable targetVar) {
d4429 1
a4429 1
		public String getNameMyMyCustomLayoutDataGroupMyLayoutDataCompositeGroupFromMetamodel() {
d4436 1
a4436 1
		public String getValueForMyBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(Layoutable layoutable) {
d4448 4
a4451 1
			return value;
d4457 1
a4457 1
		public void setValueForMyBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(Layoutable layoutable, String value) {
d4475 1
a4475 1
		public String getNameMyBundleNameMyCustomLayoutDataGroupMyLayoutDataCompositeTextFromMetamodel() {
d4482 1
a4482 1
		public String getValueForMyQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(Layoutable layoutable) {
d4494 4
a4497 1
			return value;
d4503 1
a4503 1
		public void setValueForMyQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeText(Layoutable layoutable, String value) {
d4521 1
a4521 1
		public String getNameMyQualifiedClassNameMyCustomLayoutDataGroupMyLayoutDataCompositeTextFromMetamodel() {
@

