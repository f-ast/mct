head	1.15;
access;
symbols
	v20080722-1827:1.15
	v20080718-1700:1.14
	v20080718-1731:1.15
	v20080716-1642:1.15
	R2_1_maintenance:1.14.0.2
	Root_R2_1_maintenance:1.14
	R2_1_0:1.14
	v20080610-1132:1.14
	v20080603-1553:1.14
	v20080528-1052:1.12
	v20080521:1.12
	v20080516-1143:1.12
	v20080512-1200:1.12
	v20080510-0100:1.12
	v20080507-1326:1.12
	v20080501-1739:1.12
	v20080425-1959:1.12
	v20080411-0411:1.12
	v20080404-1111:1.12
	v20080322-0000:1.12
	v20080114-2222:1.12
	v20071214-1111:1.12
	v20070809-0000:1.12
	R2_0_maintenance:1.12.0.2
	R2_0:1.12
	R4_20:1.12
	v20070621-0000:1.12
	RC3_20:1.12
	v20070605-1400:1.12
	v20070601-1400:1.12
	v20070520-1200:1.11
	v20070420-1000:1.11
	v20070405-2000:1.10
	v20070405-1100:1.10
	v20070330-1300:1.9
	v20070307-0700:1.9
	v20070221-1500:1.9
	v20070208-1800:1.8
	M4_20:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061013-1330:1.8
	M1_20:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.4
	I20060512-1000:1.4
	RC2_10:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.3
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.15
date	2008.07.02.15.20.45;	author ashatalin;	state Exp;
branches;
next	1.14;
commitid	703486b9cc54567;

1.14
date	2008.06.03.16.56.38;	author ashatalin;	state Exp;
branches;
next	1.13;
commitid	58c484577c54567;

1.13
date	2008.05.30.17.14.49;	author ashatalin;	state Exp;
branches;
next	1.12;
commitid	70b4484036034567;

1.12
date	2007.05.31.15.52.31;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	49f1465eef2c4567;

1.11
date	2007.04.16.11.03.53;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	7e4e462358154567;

1.10
date	2007.04.04.20.23.25;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	ade461409204567;

1.9
date	2007.02.09.20.08.30;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	179c45ccd4b34567;

1.8
date	2006.06.27.13.44.29;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.02.15.08.29;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.30.13.06.14;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.12.14.53.02;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.27.13.58.12;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.21.17.13.32;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.20.20.37.00;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.12.58.24;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.15
log
@[233207] - Support Label figure in .gmfgraph editor
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.edit.policies;

import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.graphdef.editor.edit.parts.EllipseEditPart;
import org.eclipse.gmf.graphdef.editor.edit.parts.LabelEditPart;
import org.eclipse.gmf.graphdef.editor.edit.parts.PolygonEditPart;
import org.eclipse.gmf.graphdef.editor.edit.parts.PolylineEditPart;
import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle2EditPart;
import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangleEditPart;
import org.eclipse.gmf.graphdef.editor.part.GMFGraphDiagramUpdater;
import org.eclipse.gmf.graphdef.editor.part.GMFGraphNodeDescriptor;
import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
import org.eclipse.gmf.runtime.notation.View;

/**
 * @@generated
 */
public class RectangleCanonicalEditPolicy extends CanonicalEditPolicy {

	/**
	 * @@generated
	 */
	Set myFeaturesToSynchronize;

	/**
	 * @@generated
	 */
	protected List getSemanticChildrenList() {
		View viewObject = (View) getHost().getModel();
		List result = new LinkedList();
		for (Iterator it = GMFGraphDiagramUpdater.getRectangle_3010SemanticChildren(viewObject).iterator(); it.hasNext();) {
			result.add(((GMFGraphNodeDescriptor) it.next()).getModelElement());
		}
		return result;
	}

	/**
	 * @@generated
	 */
	protected boolean isOrphaned(Collection semanticChildren, final View view) {
		int visualID = GMFGraphVisualIDRegistry.getVisualID(view);
		switch (visualID) {
		case Rectangle2EditPart.VISUAL_ID:
		case EllipseEditPart.VISUAL_ID:
		case RoundedRectangleEditPart.VISUAL_ID:
		case PolylineEditPart.VISUAL_ID:
		case PolygonEditPart.VISUAL_ID:
		case LabelEditPart.VISUAL_ID:
			if (!semanticChildren.contains(view.getElement())) {
				return true;
			}
		}
		return false;
	}

	/**
	 * @@generated
	 */
	protected String getDefaultFactoryHint() {
		return null;
	}

	/**
	 * @@generated
	 */
	protected Set getFeaturesToSynchronize() {
		if (myFeaturesToSynchronize == null) {
			myFeaturesToSynchronize = new HashSet();
			myFeaturesToSynchronize.add(GMFGraphPackage.eINSTANCE.getRealFigure_Children());
		}
		return myFeaturesToSynchronize;
	}

}
@


1.14
log
@Example code was regenerated with latest templates.
@
text
@d22 1
d66 1
@


1.13
log
@[233206] - Support Polygon figure in .gmfgraph editor
@
text
@d65 3
a67 1
			return !semanticChildren.contains(view.getElement()) || visualID != GMFGraphVisualIDRegistry.getNodeVisualID((View) getHost().getModel(), view.getElement());
@


1.12
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@d22 1
d64 1
@


1.11
log
@[182339] akarjakina - provide different means to select parts of composite figures
Visible insets for top-level figures, custom popup action with nested submenus, simple handles behavior
@
text
@d2 8
a9 8
 * Copyright (c) 2006, 2007 Borland Software Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
d13 2
d18 1
d20 1
a20 2
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.gmfgraph.Figure;
d25 2
d39 5
d45 1
d47 2
a48 25
		EObject modelObject = ((View) getHost().getModel()).getElement();
		View viewObject = (View) getHost().getModel();
		EObject nextValue;
		int nodeVID;
		for (Iterator values = ((Figure) modelObject).getChildren().iterator(); values.hasNext();) {
			nextValue = (EObject) values.next();
			nodeVID = GMFGraphVisualIDRegistry.getNodeVisualID(viewObject, nextValue);
			switch (nodeVID) {
			case Rectangle2EditPart.VISUAL_ID: {
				result.add(nextValue);
				break;
			}
			case EllipseEditPart.VISUAL_ID: {
				result.add(nextValue);
				break;
			}
			case RoundedRectangleEditPart.VISUAL_ID: {
				result.add(nextValue);
				break;
			}
			case PolylineEditPart.VISUAL_ID: {
				result.add(nextValue);
				break;
			}
			}
d56 3
a58 6
	protected boolean shouldDeleteView(View view) {
		if (view.getEAnnotation("Shortcut") != null) { //$NON-NLS-1$
			return view.isSetElement() && (view.getElement() == null || view.getElement().eIsProxy());
		}
		int nodeVID = GMFGraphVisualIDRegistry.getVisualID(view);
		switch (nodeVID) {
d63 1
a63 1
			return true;
d75 11
@


1.10
log
@[173499] akarjakina - Enhance graphdef.editor with properties - use custom model to describe property sheet and generate PropertyTab code from that model
@
text
@a12 2
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
import org.eclipse.gmf.runtime.notation.View;
a17 1

a18 1

a22 1

d24 2
@


1.9
log
@[173496] akarjakina - updated gmfgraph.editor bootstrap sample with recent GMF changes
@
text
@d73 12
a84 1
		return view.isSetElement() && view.getElement() != null && view.getElement().eIsProxy();
@


1.8
log
@#148813 Do not remove diagram nodes with domain element located in resource by CanonicalEditPolicy
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation and others.
@


1.7
log
@#139594 Create diagrams for non-root element of domain model.
@
text
@d73 1
a73 4
		if (view.getEAnnotation("Shortcut") != null) { //$NON-NLS-1$
			return false;
		}
		return view.isSetElement() && view.getElement() != null;
@


1.6
log
@[synch] Synchronizing with the templates
@
text
@d1 1
a1 1
/**
@


1.5
log
@#141463 ecore diagram : EClass shortcut disappears when creating a new EClass
@
text
@d1 10
@


1.4
log
@#135019 Canonical Edit Policy: Links that have changed visual IDs should not duplicate on diagram reopening
@
text
@d63 3
@


1.3
log
@#137999 Generate pure static VisualIDRegisrty classes
@
text
@d63 1
a63 2
		EObject domainModelElement = view.getElement();
		return domainModelElement != null && domainModelElement != ((View) getHost().getModel()).getElement() && super.shouldDeleteView(view);
@


1.2
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d36 1
a36 1
			nodeVID = GMFGraphVisualIDRegistry.INSTANCE.getNodeVisualID(viewObject, nextValue);
@


1.1
log
@.gmfgen model updated with new plugin name.
@
text
@d13 5
d38 1
a38 1
			case 2002: {
d42 1
a42 1
			case 2003: {
d46 1
a46 1
			case 2004: {
d50 1
a50 1
			case 2005: {
@

