head	1.19;
access;
symbols
	v20080722-1827:1.19
	v20080718-1700:1.18
	v20080718-1731:1.19
	v20080716-1642:1.19
	R2_1_maintenance:1.18.0.2
	Root_R2_1_maintenance:1.18
	R2_1_0:1.18
	v20080610-1132:1.18
	v20080603-1553:1.18
	v20080528-1052:1.17
	v20080521:1.16
	v20080516-1143:1.16
	v20080512-1200:1.16
	v20080510-0100:1.15
	v20080507-1326:1.15
	v20080501-1739:1.15
	v20080425-1959:1.15
	v20080411-0411:1.15
	v20080404-1111:1.15
	v20080322-0000:1.15
	v20080114-2222:1.12
	v20071214-1111:1.12
	v20070809-0000:1.12
	R2_0_maintenance:1.12.0.2
	R2_0:1.12
	R4_20:1.12
	v20070621-0000:1.12
	RC3_20:1.12
	v20070605-1400:1.12
	v20070601-1400:1.12
	v20070520-1200:1.11
	v20070420-1000:1.11
	v20070405-2000:1.11
	v20070405-1100:1.11
	v20070330-1300:1.11
	v20070307-0700:1.11
	v20070221-1500:1.10
	v20070208-1800:1.9
	M4_20:1.9
	v20061214-0000:1.9
	M3_20:1.9
	v20061013-1330:1.9
	M1_20:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.6
	v20060519-0800:1.6
	v20060512-1000:1.5
	I20060512-1000:1.5
	RC2_10:1.4
	I20060505-1400:1.4
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.2
	M6_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.19
date	2008.07.02.15.20.47;	author ashatalin;	state Exp;
branches;
next	1.18;
commitid	703486b9cc54567;

1.18
date	2008.05.30.17.14.49;	author ashatalin;	state Exp;
branches;
next	1.17;
commitid	70b4484036034567;

1.17
date	2008.05.27.12.28.08;	author ashatalin;	state Exp;
branches;
next	1.16;
commitid	68fd483bfe544567;

1.16
date	2008.05.12.17.40.17;	author ashatalin;	state Exp;
branches;
next	1.15;
commitid	a53482880fd4567;

1.15
date	2008.03.13.17.56.06;	author ashatalin;	state Exp;
branches;
next	1.14;
commitid	54b147d96ab34567;

1.14
date	2008.03.07.12.50.34;	author ashatalin;	state Exp;
branches;
next	1.13;
commitid	179447d13a164567;

1.13
date	2008.02.22.13.08.00;	author ashatalin;	state Exp;
branches;
next	1.12;
commitid	4c5647bec9294567;

1.12
date	2007.05.31.15.52.31;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	49f1465eef2c4567;

1.11
date	2007.03.02.15.39.20;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	717a45e845234567;

1.10
date	2007.02.09.20.08.31;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	179c45ccd4b34567;

1.9
date	2006.06.08.08.40.35;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.02.15.08.29;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.30.13.06.13;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.15.17.21.14;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.11.16.02.54;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.03.15.04.02;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.20.20.37.00;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.14.16.50.06;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.12.58.27;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.19
log
@[233207] - Support Label figure in .gmfgraph editor
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.edit.parts;

import org.eclipse.draw2d.FigureUtilities;
import org.eclipse.draw2d.Label;
import org.eclipse.draw2d.geometry.Dimension;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.EditPartFactory;
import org.eclipse.gef.tools.CellEditorLocator;
import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.jface.viewers.CellEditor;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Text;

/**
 * @@generated
 */
public class GMFGraphEditPartFactory implements EditPartFactory {

	/**
	 * @@generated
	 */
	public EditPart createEditPart(EditPart context, Object model) {
		if (model instanceof View) {
			View view = (View) model;
			switch (GMFGraphVisualIDRegistry.getVisualID(view)) {

			case CanvasEditPart.VISUAL_ID:
				return new CanvasEditPart(view);

			case CompartmentEditPart.VISUAL_ID:
				return new CompartmentEditPart(view);

			case CompartmentNameEditPart.VISUAL_ID:
				return new CompartmentNameEditPart(view);

			case NodeEditPart.VISUAL_ID:
				return new NodeEditPart(view);

			case NodeNameEditPart.VISUAL_ID:
				return new NodeNameEditPart(view);

			case ConnectionEditPart.VISUAL_ID:
				return new ConnectionEditPart(view);

			case ConnectionNameEditPart.VISUAL_ID:
				return new ConnectionNameEditPart(view);

			case FigureGalleryEditPart.VISUAL_ID:
				return new FigureGalleryEditPart(view);

			case FigureGalleryNameEditPart.VISUAL_ID:
				return new FigureGalleryNameEditPart(view);

			case DiagramLabelEditPart.VISUAL_ID:
				return new DiagramLabelEditPart(view);

			case DiagramLabelNameEditPart.VISUAL_ID:
				return new DiagramLabelNameEditPart(view);

			case FigureDescriptorEditPart.VISUAL_ID:
				return new FigureDescriptorEditPart(view);

			case FigureDescriptorNameEditPart.VISUAL_ID:
				return new FigureDescriptorNameEditPart(view);

			case RectangleEditPart.VISUAL_ID:
				return new RectangleEditPart(view);

			case Rectangle2EditPart.VISUAL_ID:
				return new Rectangle2EditPart(view);

			case EllipseEditPart.VISUAL_ID:
				return new EllipseEditPart(view);

			case RoundedRectangleEditPart.VISUAL_ID:
				return new RoundedRectangleEditPart(view);

			case PolylineEditPart.VISUAL_ID:
				return new PolylineEditPart(view);

			case PointEditPart.VISUAL_ID:
				return new PointEditPart(view);

			case PolygonEditPart.VISUAL_ID:
				return new PolygonEditPart(view);

			case LabelEditPart.VISUAL_ID:
				return new LabelEditPart(view);

			case LabelTextEditPart.VISUAL_ID:
				return new LabelTextEditPart(view);

			case Ellipse2EditPart.VISUAL_ID:
				return new Ellipse2EditPart(view);

			case RoundedRectangle2EditPart.VISUAL_ID:
				return new RoundedRectangle2EditPart(view);

			case Polyline2EditPart.VISUAL_ID:
				return new Polyline2EditPart(view);

			case Polygon2EditPart.VISUAL_ID:
				return new Polygon2EditPart(view);

			case Label2EditPart.VISUAL_ID:
				return new Label2EditPart(view);

			case LabelText2EditPart.VISUAL_ID:
				return new LabelText2EditPart(view);

			case Rectangle3EditPart.VISUAL_ID:
				return new Rectangle3EditPart(view);

			case Ellipse3EditPart.VISUAL_ID:
				return new Ellipse3EditPart(view);

			case RoundedRectangle3EditPart.VISUAL_ID:
				return new RoundedRectangle3EditPart(view);

			case Polyline3EditPart.VISUAL_ID:
				return new Polyline3EditPart(view);

			case Polygon3EditPart.VISUAL_ID:
				return new Polygon3EditPart(view);

			case Label3EditPart.VISUAL_ID:
				return new Label3EditPart(view);

			case LabelText3EditPart.VISUAL_ID:
				return new LabelText3EditPart(view);

			case CompartmentVisualFacetsEditPart.VISUAL_ID:
				return new CompartmentVisualFacetsEditPart(view);

			case NodeVisualFacetsEditPart.VISUAL_ID:
				return new NodeVisualFacetsEditPart(view);

			case ConnectionVisualFacetsEditPart.VISUAL_ID:
				return new ConnectionVisualFacetsEditPart(view);

			case FigureGalleryFiguresEditPart.VISUAL_ID:
				return new FigureGalleryFiguresEditPart(view);

			case DiagramLabelVisualFacetsEditPart.VISUAL_ID:
				return new DiagramLabelVisualFacetsEditPart(view);

			case ChildAccessEditPart.VISUAL_ID:
				return new ChildAccessEditPart(view);

			case CompartmentAccessorEditPart.VISUAL_ID:
				return new CompartmentAccessorEditPart(view);

			case DiagramLabelAccessorEditPart.VISUAL_ID:
				return new DiagramLabelAccessorEditPart(view);

			case NodeContentPaneEditPart.VISUAL_ID:
				return new NodeContentPaneEditPart(view);

			case DiagramElementFigureEditPart.VISUAL_ID:
				return new DiagramElementFigureEditPart(view);
			}
		}
		return createUnrecognizedEditPart(context, model);
	}

	/**
	 * @@generated
	 */
	private EditPart createUnrecognizedEditPart(EditPart context, Object model) {
		// Handle creation of unrecognized child node EditParts here
		return null;
	}

	/**
	 * @@generated
	 */
	public static CellEditorLocator getTextCellEditorLocator(ITextAwareEditPart source) {
		if (source.getFigure() instanceof WrappingLabel)
			return new TextCellEditorLocator((WrappingLabel) source.getFigure());
		else {
			return new LabelCellEditorLocator((Label) source.getFigure());
		}
	}

	/**
	 * @@generated
	 */
	static private class TextCellEditorLocator implements CellEditorLocator {

		/**
		 * @@generated
		 */
		private WrappingLabel wrapLabel;

		/**
		 * @@generated
		 */
		public TextCellEditorLocator(WrappingLabel wrapLabel) {
			this.wrapLabel = wrapLabel;
		}

		/**
		 * @@generated
		 */
		public WrappingLabel getWrapLabel() {
			return wrapLabel;
		}

		/**
		 * @@generated
		 */
		public void relocate(CellEditor celleditor) {
			Text text = (Text) celleditor.getControl();
			Rectangle rect = getWrapLabel().getTextBounds().getCopy();
			getWrapLabel().translateToAbsolute(rect);
			if (getWrapLabel().isTextWrapOn() && getWrapLabel().getText().length() > 0) {
				rect.setSize(new Dimension(text.computeSize(rect.width, SWT.DEFAULT)));
			} else {
				int avr = FigureUtilities.getFontMetrics(text.getFont()).getAverageCharWidth();
				rect.setSize(new Dimension(text.computeSize(SWT.DEFAULT, SWT.DEFAULT)).expand(avr * 2, 0));
			}
			if (!rect.equals(new Rectangle(text.getBounds()))) {
				text.setBounds(rect.x, rect.y, rect.width, rect.height);
			}
		}
	}

	/**
	 * @@generated
	 */
	private static class LabelCellEditorLocator implements CellEditorLocator {

		/**
		 * @@generated
		 */
		private Label label;

		/**
		 * @@generated
		 */
		public LabelCellEditorLocator(Label label) {
			this.label = label;
		}

		/**
		 * @@generated
		 */
		public Label getLabel() {
			return label;
		}

		/**
		 * @@generated
		 */
		public void relocate(CellEditor celleditor) {
			Text text = (Text) celleditor.getControl();
			Rectangle rect = getLabel().getTextBounds().getCopy();
			getLabel().translateToAbsolute(rect);
			int avr = FigureUtilities.getFontMetrics(text.getFont()).getAverageCharWidth();
			rect.setSize(new Dimension(text.computeSize(SWT.DEFAULT, SWT.DEFAULT)).expand(avr * 2, 0));
			if (!rect.equals(new Rectangle(text.getBounds()))) {
				text.setBounds(rect.x, rect.y, rect.width, rect.height);
			}
		}
	}
}
@


1.18
log
@[233206] - Support Polygon figure in .gmfgraph editor
@
text
@d68 6
d101 6
d119 6
d140 6
d158 3
@


1.17
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@d92 3
d104 3
d119 3
@


1.16
log
@[230191] - Start using FeatureTracker/AttachAdapter for listening model changes in org.eclipse.gmf.graphdef.editor
@
text
@d89 3
@


1.15
log
@node content pane link to child accessor added.
@
text
@a200 1

@


1.14
log
@Updating with new figures code + setting proper layout for diahram elements
@
text
@d131 3
@


1.13
log
@Updating gmfgaph editor:
- Setting default size of all graphical elements to 0,0
- updating aspect templates to reflect latest changes
- regenerating code
@
text
@a21 1
import org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel;
@


1.12
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@d23 1
d151 2
a152 2
		if (source.getFigure() instanceof WrapLabel)
			return new TextCellEditorLocator((WrapLabel) source.getFigure());
d166 1
a166 1
		private WrapLabel wrapLabel;
d171 1
a171 1
		public TextCellEditorLocator(WrapLabel wrapLabel) {
d178 1
a178 1
		public WrapLabel getWrapLabel() {
d189 1
a189 1
			if (getWrapLabel().isTextWrapped() && getWrapLabel().getText().length() > 0) {
@


1.11
log
@[176026] akarjakina - Fix notation background and foreground colors update
[173499] akarjakina - Add custom form-based property sections fro figure attributes
@
text
@d3 7
a9 7
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
d68 6
d98 12
d122 9
@


1.10
log
@[173496] akarjakina - updated gmfgraph.editor bootstrap sample with recent GMF changes
@
text
@d25 1
d162 1
a162 1
				rect.setSize(new Dimension(text.computeSize(rect.width, org.eclipse.swt.SWT.DEFAULT)));
d165 1
a165 1
				rect.setSize(new Dimension(text.computeSize(org.eclipse.swt.SWT.DEFAULT, org.eclipse.swt.SWT.DEFAULT)).expand(avr * 2, 0));
d206 1
a206 1
			rect.setSize(new Dimension(text.computeSize(org.eclipse.swt.SWT.DEFAULT, org.eclipse.swt.SWT.DEFAULT)).expand(avr * 2, 0));
@


1.9
log
@Updating with new templates.
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation and others.
a13 1
import org.eclipse.draw2d.IFigure;
d20 1
a24 1
import org.eclipse.swt.SWT;
a25 1
import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
a34 5
	public static final String EXTERNAL_NODE_LABELS_LAYER = "External Node Labels"; //$NON-NLS-1$

	/**
	 * @@generated
	 */
d38 5
a42 2
			int viewVisualID = GMFGraphVisualIDRegistry.getVisualID(view);
			switch (viewVisualID) {
d45 1
d48 1
d51 1
d54 1
d57 1
d60 1
d63 1
d66 1
d69 1
d72 1
d75 1
d78 1
d81 1
d84 1
d87 1
d90 1
d93 1
d96 1
d99 1
d102 1
a102 2
			case CanvasEditPart.VISUAL_ID:
				return new CanvasEditPart(view);
d125 1
a125 2
			IFigure figure = source.getFigure();
			return new LabelCellEditorLocator((Label) figure);
a142 1
			super();
d160 3
a162 4

			if (getWrapLabel().isTextWrapped() && getWrapLabel().getText().length() > 0)
				rect.setSize(new Dimension(text.computeSize(rect.width, SWT.DEFAULT)));
			else {
d164 1
a164 1
				rect.setSize(new Dimension(text.computeSize(SWT.DEFAULT, SWT.DEFAULT)).expand(avr * 2, 0));
d166 1
a166 2

			if (!rect.equals(new Rectangle(text.getBounds())))
d168 1
a203 1

d205 2
a206 3
			rect.setSize(new Dimension(text.computeSize(SWT.DEFAULT, SWT.DEFAULT)).expand(avr * 2, 0));

			if (!rect.equals(new Rectangle(text.getBounds())))
d208 1
@


1.8
log
@#139594 Create diagrams for non-root element of domain model.
@
text
@d49 2
a50 2
			case Compartment_nameEditPart.VISUAL_ID:
				return new Compartment_nameEditPart(view);
d53 2
a54 2
			case Node_nameEditPart.VISUAL_ID:
				return new Node_nameEditPart(view);
d57 2
a58 2
			case Connection_nameEditPart.VISUAL_ID:
				return new Connection_nameEditPart(view);
d61 2
a62 2
			case FigureGallery_nameEditPart.VISUAL_ID:
				return new FigureGallery_nameEditPart(view);
d79 8
a86 8
			case Compartment_VisualFacetsEditPart.VISUAL_ID:
				return new Compartment_VisualFacetsEditPart(view);
			case Node_VisualFacetsEditPart.VISUAL_ID:
				return new Node_VisualFacetsEditPart(view);
			case Connection_VisualFacetsEditPart.VISUAL_ID:
				return new Connection_VisualFacetsEditPart(view);
			case FigureGallery_FiguresEditPart.VISUAL_ID:
				return new FigureGallery_FiguresEditPart(view);
d89 2
a90 2
			case FigureEditPart.VISUAL_ID:
				return new FigureEditPart(view);
@


1.7
log
@[synch] Synchronizing with the templates
@
text
@d1 1
a1 1
/**
d37 1
a37 1
	public static final String EXTERNAL_NODE_LABELS_LAYER = "External Node Labels";
@


1.6
log
@Updating with latest templates
@
text
@d1 10
@


1.5
log
@Updating with new templates
@
text
@a34 3
			if (!CanvasEditPart.MODEL_ID.equals(GMFGraphVisualIDRegistry.getModelID(view))) {
				return null;
			}
@


1.4
log
@models updated, sample regenerated with new templates.
@
text
@a37 1

@


1.3
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d98 3
d110 3
d115 3
d120 3
d128 3
d135 3
d156 3
d161 3
d166 3
d173 3
d180 3
@


1.2
log
@Updating with new templates
@
text
@d41 1
a41 1
			case 1001:
d43 1
a43 1
			case 4001:
d45 1
a45 1
			case 1002:
d47 1
a47 1
			case 4002:
d49 1
a49 1
			case 1003:
d51 1
a51 1
			case 4003:
d53 1
a53 1
			case 1004:
d55 1
a55 1
			case 4004:
d57 1
a57 1
			case 2001:
d59 1
a59 1
			case 2002:
d61 1
a61 1
			case 2003:
d63 1
a63 1
			case 2004:
d65 1
a65 1
			case 2005:
d67 1
a67 1
			case 2006:
d69 1
a69 1
			case 2007:
d71 1
a71 1
			case 2008:
d73 1
a73 1
			case 5001:
d75 1
a75 1
			case 5002:
d77 1
a77 1
			case 5003:
d79 1
a79 1
			case 5004:
d81 1
a81 1
			case 79:
d83 1
a83 1
			case 3001:
@


1.1
log
@.gmfgen model updated with new plugin name.
@
text
@d3 5
d10 3
d14 3
d98 64
@

