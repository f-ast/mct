head	1.1;
access;
symbols
	v20080722-1827:1.1
	v20080718-1700:1.1
	v20080718-1731:1.1
	v20080716-1642:1.1
	R2_1_maintenance:1.1.0.2
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080610-1132:1.1
	v20080603-1553:1.1
	v20080528-1052:1.1
	v20080521:1.1
	v20080516-1143:1.1
	v20080512-1200:1.1
	v20080510-0100:1.1
	v20080507-1326:1.1
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080411-0411:1.1
	v20080404-1111:1.1
	v20080322-0000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.03.13.17.56.06;	author ashatalin;	state Exp;
branches;
next	;
commitid	54b147d96ab34567;


desc
@@


1.1
log
@node content pane link to child accessor added.
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.edit.commands;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.gmfgraph.ChildAccess;
import org.eclipse.gmf.gmfgraph.Node;
import org.eclipse.gmf.graphdef.editor.edit.policies.GMFGraphBaseItemSemanticEditPolicy;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;

/**
 * @@generated
 */
public class NodeContentPaneCreateCommand extends EditElementCommand {

	/**
	 * @@generated
	 */
	private final EObject source;

	/**
	 * @@generated
	 */
	private final EObject target;

	/**
	 * @@generated
	 */
	public NodeContentPaneCreateCommand(CreateRelationshipRequest request, EObject source, EObject target) {
		super(request.getLabel(), null, request);
		this.source = source;
		this.target = target;
	}

	/**
	 * @@generated
	 */
	public boolean canExecute() {
		if (source == null && target == null) {
			return false;
		}
		if (source != null && false == source instanceof Node) {
			return false;
		}
		if (target != null && false == target instanceof ChildAccess) {
			return false;
		}
		if (getSource() == null) {
			return true; // link creation is in progress; source is not defined yet
		}
		// target may be null here but it's possible to check constraint
		return GMFGraphBaseItemSemanticEditPolicy.LinkConstraints.canCreateNodeContentPane_4006(getSource(), getTarget());
	}

	/**
	 * @@generated
	 */
	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
		if (!canExecute()) {
			throw new ExecutionException("Invalid arguments in create link command"); //$NON-NLS-1$
		}
		if (getSource() != null && getTarget() != null) {
			getSource().setContentPane(getTarget());
		}
		return CommandResult.newOKCommandResult();
	}

	/**
	 * @@generated
	 */
	protected Node getSource() {
		return (Node) source;
	}

	/**
	 * @@generated
	 */
	protected ChildAccess getTarget() {
		return (ChildAccess) target;
	}
}
@
