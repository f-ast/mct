head	1.6;
access;
symbols
	v20080722-1827:1.6
	v20080718-1700:1.5
	v20080718-1731:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.4
	v20080521:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080510-0100:1.4
	v20080507-1326:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080411-0411:1.4
	v20080404-1111:1.4
	v20080322-0000:1.4
	v20080114-2222:1.4
	v20071214-1111:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070520-1200:1.3
	v20070420-1000:1.3
	v20070405-2000:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20070307-0700:1.2
	v20070221-1500:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061013-1330:1.1
	M1_20:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2008.07.02.15.20.45;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	703486b9cc54567;

1.5
date	2008.05.30.17.14.49;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	70b4484036034567;

1.4
date	2007.05.31.15.52.31;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	49f1465eef2c4567;

1.3
date	2007.04.16.11.03.53;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	7e4e462358154567;

1.2
date	2007.02.09.20.08.29;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	179c45ccd4b34567;

1.1
date	2006.06.08.08.40.34;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[233207] - Support Label figure in .gmfgraph editor
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.edit.policies;

import org.eclipse.gef.commands.Command;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.graphdef.editor.edit.commands.Ellipse3CreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.FigureDescriptorCreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.Label3CreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.Polygon3CreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.Polyline3CreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.Rectangle3CreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.RoundedRectangle3CreateCommand;

import org.eclipse.gmf.graphdef.editor.providers.GMFGraphElementTypes;

import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;

/**
 * @@generated
 */
public class FigureGalleryFiguresItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {

	/**
	 * @@generated
	 */
	protected Command getCreateCommand(CreateElementRequest req) {
		if (GMFGraphElementTypes.FigureDescriptor_3009 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getFigureGallery_Descriptors());
			}
			return getGEFWrapper(new FigureDescriptorCreateCommand(req));
		}
		if (GMFGraphElementTypes.Rectangle_3018 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getFigureGallery_Figures());
			}
			return getGEFWrapper(new Rectangle3CreateCommand(req));
		}
		if (GMFGraphElementTypes.Ellipse_3019 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getFigureGallery_Figures());
			}
			return getGEFWrapper(new Ellipse3CreateCommand(req));
		}
		if (GMFGraphElementTypes.RoundedRectangle_3020 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getFigureGallery_Figures());
			}
			return getGEFWrapper(new RoundedRectangle3CreateCommand(req));
		}
		if (GMFGraphElementTypes.Polyline_3021 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getFigureGallery_Figures());
			}
			return getGEFWrapper(new Polyline3CreateCommand(req));
		}
		if (GMFGraphElementTypes.Polygon_3025 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getFigureGallery_Figures());
			}
			return getGEFWrapper(new Polygon3CreateCommand(req));
		}
		if (GMFGraphElementTypes.Label_3028 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getFigureGallery_Figures());
			}
			return getGEFWrapper(new Label3CreateCommand(req));
		}
		return super.getCreateCommand(req);
	}
}
@


1.5
log
@[233206] - Support Polygon figure in .gmfgraph editor
@
text
@d19 1
d74 6
@


1.4
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@d19 1
d67 6
@


1.3
log
@[182339] akarjakina - provide different means to select parts of composite figures
Visible insets for top-level figures, custom popup action with nested submenus, simple handles behavior
@
text
@d2 8
a9 8
 * Copyright (c) 2006, 2007 Borland Software Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
d14 1
d16 7
a22 4
import org.eclipse.gmf.graphdef.editor.edit.commands.Ellipse2CreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.Polyline2CreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.RectangleCreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.RoundedRectangle2CreateCommand;
d24 1
d36 7
a42 1
		if (GMFGraphElementTypes.Rectangle_3001 == req.getElementType()) {
d46 1
a46 1
			return getMSLWrapper(new RectangleCreateCommand(req));
d48 1
a48 1
		if (GMFGraphElementTypes.Ellipse_3006 == req.getElementType()) {
d52 1
a52 1
			return getMSLWrapper(new Ellipse2CreateCommand(req));
d54 1
a54 1
		if (GMFGraphElementTypes.RoundedRectangle_3007 == req.getElementType()) {
d58 1
a58 1
			return getMSLWrapper(new RoundedRectangle2CreateCommand(req));
d60 1
a60 1
		if (GMFGraphElementTypes.Polyline_3008 == req.getElementType()) {
d64 1
a64 1
			return getMSLWrapper(new Polyline2CreateCommand(req));
@


1.2
log
@[173496] akarjakina - updated gmfgraph.editor bootstrap sample with recent GMF changes
@
text
@a13 1

a14 1

a18 1

a19 1

@


1.1
log
@Updating with new templates.
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation and others.
a12 3
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;

d17 5
a23 2
import org.eclipse.gmf.runtime.emf.type.core.commands.CreateElementCommand;

a25 2
import org.eclipse.gmf.runtime.notation.View;

d39 1
a39 1
			return getMSLWrapper(new CreateRectangle_3001Command(req));
d45 1
a45 1
			return getMSLWrapper(new CreateEllipse_3006Command(req));
d51 1
a51 1
			return getMSLWrapper(new CreateRoundedRectangle_3007Command(req));
d57 1
a57 1
			return getMSLWrapper(new CreatePolyline_3008Command(req));
a60 125

	/**
	 * @@generated
	 */
	private static class CreateRectangle_3001Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreateRectangle_3001Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getFigureGallery();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

	/**
	 * @@generated
	 */
	private static class CreateEllipse_3006Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreateEllipse_3006Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getFigureGallery();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

	/**
	 * @@generated
	 */
	private static class CreateRoundedRectangle_3007Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreateRoundedRectangle_3007Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getFigureGallery();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

	/**
	 * @@generated
	 */
	private static class CreatePolyline_3008Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreatePolyline_3008Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getFigureGallery();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

@

