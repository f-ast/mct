head	1.14;
access;
symbols
	v20080722-1827:1.14
	v20080718-1700:1.14
	v20080718-1731:1.14
	v20080716-1642:1.14
	R2_1_maintenance:1.14.0.4
	Root_R2_1_maintenance:1.14
	R2_1_0:1.14
	v20080610-1132:1.14
	v20080603-1553:1.14
	v20080528-1052:1.14
	v20080521:1.14
	v20080516-1143:1.14
	v20080512-1200:1.14
	v20080510-0100:1.14
	v20080507-1326:1.14
	v20080501-1739:1.14
	v20080425-1959:1.14
	v20080411-0411:1.14
	v20080404-1111:1.14
	v20080322-0000:1.14
	v20080114-2222:1.14
	v20071214-1111:1.14
	v20070809-0000:1.14
	R2_0_maintenance:1.14.0.2
	R2_0:1.14
	R4_20:1.14
	v20070621-0000:1.14
	RC3_20:1.14
	v20070605-1400:1.14
	v20070601-1400:1.14
	v20070520-1200:1.13
	v20070420-1000:1.13
	v20070405-2000:1.12
	v20070405-1100:1.12
	v20070330-1300:1.11
	v20070307-0700:1.11
	v20070221-1500:1.9
	v20070208-1800:1.8
	M4_20:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061013-1330:1.8
	M1_20:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	RC2_10:1.5
	I20060505-1400:1.5
	I20060428-1300:1.4
	I20060424-0500:1.3
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.14
date	2007.05.31.15.52.29;	author ashatalin;	state Exp;
branches;
next	1.13;
commitid	49f1465eef2c4567;

1.13
date	2007.04.16.11.03.53;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	7e4e462358154567;

1.12
date	2007.04.04.20.23.25;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	ade461409204567;

1.11
date	2007.03.02.19.21.06;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	1bbe45e879214567;

1.10
date	2007.03.02.15.39.20;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	717a45e845234567;

1.9
date	2007.02.09.20.08.30;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	179c45ccd4b34567;

1.8
date	2006.06.05.16.33.17;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.02.15.08.30;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.30.13.06.14;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.05.16.31.18;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.25.20.29.16;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.21.17.13.32;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.20.20.37.00;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.12.58.24;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.14
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.part;

import java.io.IOException;
import java.util.LinkedList;
import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.commands.operations.OperationHistoryFactory;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.core.runtime.Path;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.graphdef.editor.edit.parts.CanvasEditPart;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.diagram.core.services.ViewService;
import org.eclipse.gmf.runtime.diagram.core.services.view.CreateDiagramViewOperation;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.jface.wizard.Wizard;
import org.eclipse.osgi.util.NLS;
import org.eclipse.ui.PartInitException;
import org.eclipse.ui.dialogs.WizardNewFileCreationPage;

/**
 * @@generated
 */
public class GMFGraphNewDiagramFileWizard extends Wizard {

	/**
	 * @@generated
	 */
	private WizardNewFileCreationPage myFileCreationPage;

	/**
	 * @@generated
	 */
	private ModelElementSelectionPage diagramRootElementSelectionPage;

	/**
	 * @@generated
	 */
	private TransactionalEditingDomain myEditingDomain;

	/**
	 * @@generated
	 */
	public GMFGraphNewDiagramFileWizard(URI domainModelURI, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
		assert domainModelURI != null : "Domain model uri must be specified"; //$NON-NLS-1$
		assert diagramRoot != null : "Doagram root element must be specified"; //$NON-NLS-1$
		assert editingDomain != null : "Editing domain must be specified"; //$NON-NLS-1$

		myFileCreationPage = new WizardNewFileCreationPage(Messages.GMFGraphNewDiagramFileWizard_CreationPageName, StructuredSelection.EMPTY);
		myFileCreationPage.setTitle(Messages.GMFGraphNewDiagramFileWizard_CreationPageTitle);
		myFileCreationPage.setDescription(NLS.bind(Messages.GMFGraphNewDiagramFileWizard_CreationPageDescription, CanvasEditPart.MODEL_ID));
		IPath filePath;
		String fileName = domainModelURI.trimFileExtension().lastSegment();
		if (domainModelURI.isPlatformResource()) {
			filePath = new Path(domainModelURI.trimSegments(1).toPlatformString(true));
		} else if (domainModelURI.isFile()) {
			filePath = new Path(domainModelURI.trimSegments(1).toFileString());
		} else {
			// TODO : use some default path
			throw new IllegalArgumentException("Unsupported URI: " + domainModelURI); //$NON-NLS-1$
		}
		myFileCreationPage.setContainerFullPath(filePath);
		myFileCreationPage.setFileName(GMFGraphDiagramEditorUtil.getUniqueFileName(filePath, fileName, "gmfgraph_diagram")); //$NON-NLS-1$

		diagramRootElementSelectionPage = new DiagramRootElementSelectionPage(Messages.GMFGraphNewDiagramFileWizard_RootSelectionPageName);
		diagramRootElementSelectionPage.setTitle(Messages.GMFGraphNewDiagramFileWizard_RootSelectionPageTitle);
		diagramRootElementSelectionPage.setDescription(Messages.GMFGraphNewDiagramFileWizard_RootSelectionPageDescription);
		diagramRootElementSelectionPage.setModelElement(diagramRoot);

		myEditingDomain = editingDomain;
	}

	/**
	 * @@generated
	 */
	public void addPages() {
		addPage(myFileCreationPage);
		addPage(diagramRootElementSelectionPage);
	}

	/**
	 * @@generated
	 */
	public boolean performFinish() {
		List affectedFiles = new LinkedList();
		IFile diagramFile = myFileCreationPage.createNewFile();
		GMFGraphDiagramEditorUtil.setCharset(diagramFile);
		affectedFiles.add(diagramFile);
		URI diagramModelURI = URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true);
		ResourceSet resourceSet = myEditingDomain.getResourceSet();
		final Resource diagramResource = resourceSet.createResource(diagramModelURI);
		AbstractTransactionalCommand command = new AbstractTransactionalCommand(myEditingDomain, Messages.GMFGraphNewDiagramFileWizard_InitDiagramCommand, affectedFiles) {

			protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
				int diagramVID = GMFGraphVisualIDRegistry.getDiagramVisualID(diagramRootElementSelectionPage.getModelElement());
				if (diagramVID != CanvasEditPart.VISUAL_ID) {
					return CommandResult.newErrorCommandResult(Messages.GMFGraphNewDiagramFileWizard_IncorrectRootError);
				}
				Diagram diagram = ViewService.createDiagram(diagramRootElementSelectionPage.getModelElement(), CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);
				diagramResource.getContents().add(diagram);
				return CommandResult.newOKCommandResult();
			}
		};
		try {
			OperationHistoryFactory.getOperationHistory().execute(command, new NullProgressMonitor(), null);
			diagramResource.save(GMFGraphDiagramEditorUtil.getSaveOptions());
			GMFGraphDiagramEditorUtil.openDiagram(diagramResource);
		} catch (ExecutionException e) {
			GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to create model and diagram", e); //$NON-NLS-1$
		} catch (IOException ex) {
			GMFGraphDiagramEditorPlugin.getInstance().logError("Save operation failed for: " + diagramModelURI, ex); //$NON-NLS-1$
		} catch (PartInitException ex) {
			GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to open editor", ex); //$NON-NLS-1$
		}
		return true;
	}

	/**
	 * @@generated
	 */
	private static class DiagramRootElementSelectionPage extends ModelElementSelectionPage {

		/**
		 * @@generated
		 */
		protected DiagramRootElementSelectionPage(String pageName) {
			super(pageName);
		}

		/**
		 * @@generated
		 */
		protected String getSelectionTitle() {
			return Messages.GMFGraphNewDiagramFileWizard_RootSelectionPageSelectionTitle;
		}

		/**
		 * @@generated
		 */
		protected boolean validatePage() {
			if (selectedModelElement == null) {
				setErrorMessage(Messages.GMFGraphNewDiagramFileWizard_RootSelectionPageNoSelectionMessage);
				return false;
			}
			boolean result = ViewService.getInstance().provides(
					new CreateDiagramViewOperation(new EObjectAdapter(selectedModelElement), CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT));
			setErrorMessage(result ? null : Messages.GMFGraphNewDiagramFileWizard_RootSelectionPageInvalidSelectionMessage);
			return result;
		}
	}
}
@


1.13
log
@[182339] akarjakina - provide different means to select parts of composite figures
Visible insets for top-level figures, custom popup action with nested submenus, simple handles behavior
@
text
@d3 7
a9 7
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
@


1.12
log
@[173499] akarjakina - Enhance graphdef.editor with properties - use custom model to describe property sheet and generate PropertyTab code from that model
@
text
@a13 1
import java.util.Collections;
a19 1
import org.eclipse.core.runtime.CoreException;
d25 1
d39 1
d66 1
a66 1
	public GMFGraphNewDiagramFileWizard(org.eclipse.emf.common.util.URI domainModelURI, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
d71 3
a73 3
		myFileCreationPage = new WizardNewFileCreationPage("Initialize new diagram file", StructuredSelection.EMPTY);
		myFileCreationPage.setTitle("Diagram file");
		myFileCreationPage.setDescription("Create new diagram based on " + CanvasEditPart.MODEL_ID + " model content");
d82 1
a82 1
			throw new IllegalArgumentException("Unsupported URI: " + domainModelURI);
d87 3
a89 3
		diagramRootElementSelectionPage = new DiagramRootElementSelectionPage("Select diagram root element");
		diagramRootElementSelectionPage.setTitle("Diagram root element");
		diagramRootElementSelectionPage.setDescription("Select semantic model element to be depicted on diagram");
d109 1
a109 5
		try {
			diagramFile.setCharset("UTF-8", new NullProgressMonitor()); //$NON-NLS-1$
		} catch (CoreException e) {
			GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to set charset for diagram file", e); //$NON-NLS-1$
		}
d111 1
a111 1
		org.eclipse.emf.common.util.URI diagramModelURI = org.eclipse.emf.common.util.URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true);
d114 1
a114 1
		AbstractTransactionalCommand command = new AbstractTransactionalCommand(myEditingDomain, "Initializing diagram contents", affectedFiles) { //$NON-NLS-1$
d119 1
a119 1
					return CommandResult.newErrorCommandResult("Incorrect model object stored as a root resource object"); //$NON-NLS-1$
d128 1
a128 1
			diagramResource.save(Collections.EMPTY_MAP);
d156 1
a156 1
			return "Select diagram root element:";
d164 1
a164 1
				setErrorMessage("Diagram root element is not selected");
d169 1
a169 1
			setErrorMessage(result ? null : "Invalid diagram root element is selected");
@


1.11
log
@organized imports
@
text
@d2 1
a2 1
 * Copyright (c) 2006, 2007 Borland Software Corporation and others.
a19 1
import org.eclipse.core.resources.IContainer;
d23 1
a29 4
import org.eclipse.emf.ecore.util.FeatureMap;
import org.eclipse.emf.edit.provider.IWrapperItemProvider;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
a37 3
import org.eclipse.jface.viewers.ISelectionChangedListener;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.viewers.SelectionChangedEvent;
a38 1
import org.eclipse.jface.viewers.TreeViewer;
a39 7
import org.eclipse.jface.wizard.WizardPage;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Label;
import org.eclipse.ui.IWorkbenchPage;
a50 5
	private TransactionalEditingDomain myEditingDomain;

	/**
	 * @@generated
	 */
d56 1
a56 1
	private IFile mySelectedModelFile;
d61 1
a61 1
	private IWorkbenchPage myWorkbenchPage;
d66 4
a69 1
	private IStructuredSelection mySelection;
d71 20
a90 4
	/**
	 * @@generated
	 */
	private EObject myDiagramRoot;
a91 14
	/**
	 * @@generated
	 */
	public GMFGraphNewDiagramFileWizard(IFile selectedModelFile, IWorkbenchPage workbenchPage, IStructuredSelection selection, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
		assert selectedModelFile != null : "Null selectedModelFile in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
		assert workbenchPage != null : "Null workbenchPage in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
		assert selection != null : "Null selection in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
		assert diagramRoot != null : "Null diagramRoot in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
		assert editingDomain != null : "Null editingDomain in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$

		mySelectedModelFile = selectedModelFile;
		myWorkbenchPage = workbenchPage;
		mySelection = selection;
		myDiagramRoot = diagramRoot;
a98 16
		myFileCreationPage = new WizardNewFileCreationPage("Initialize new Ecore diagram file", mySelection) {

			public void createControl(Composite parent) {
				super.createControl(parent);
				IContainer parentContainer = mySelectedModelFile.getParent();
				String originalFileName = mySelectedModelFile.getProjectRelativePath().removeFileExtension().lastSegment();
				String fileExtension = ".gmfgraph_diagram"; //$NON-NLS-1$
				String fileName = originalFileName + fileExtension;
				for (int i = 1; parentContainer.getFile(new Path(fileName)).exists(); i++) {
					fileName = originalFileName + i + fileExtension;
				}
				setFileName(fileName);
			}
		};
		myFileCreationPage.setTitle("Diagram file");
		myFileCreationPage.setDescription("Create new diagram based on " + CanvasEditPart.MODEL_ID + " model content");
d100 1
a100 1
		addPage(new RootElementSelectorPage());
d107 1
d114 2
d117 1
a117 4
		final Resource diagramResource = resourceSet.createResource(org.eclipse.emf.common.util.URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true));
		List affectedFiles = new LinkedList();
		affectedFiles.add(mySelectedModelFile);
		affectedFiles.add(diagramFile);
d121 1
a121 1
				int diagramVID = GMFGraphVisualIDRegistry.getDiagramVisualID(myDiagramRoot);
d125 1
a125 1
				Diagram diagram = ViewService.createDiagram(myDiagramRoot, CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);
a126 1

d137 1
a137 1
			GMFGraphDiagramEditorPlugin.getInstance().logError("Save operation failed for: " + diagramFile.getFullPath().toString(), ex); //$NON-NLS-1$
d147 1
a147 1
	private class RootElementSelectorPage extends WizardPage implements ISelectionChangedListener {
d152 2
a153 4
		protected RootElementSelectorPage() {
			super("Select diagram root element");
			setTitle("Diagram root element");
			setDescription("Select semantic model element to be depicted on diagram");
d159 2
a160 9
		public void createControl(Composite parent) {
			initializeDialogUnits(parent);
			Composite topLevel = new Composite(parent, SWT.NONE);
			topLevel.setLayout(new GridLayout());
			topLevel.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_FILL | GridData.HORIZONTAL_ALIGN_FILL));
			topLevel.setFont(parent.getFont());
			setControl(topLevel);
			createModelBrowser(topLevel);
			setPageComplete(validatePage());
d166 3
a168 52
		private void createModelBrowser(Composite parent) {
			Composite panel = new Composite(parent, SWT.NONE);
			panel.setLayoutData(new GridData(GridData.FILL_BOTH));
			GridLayout layout = new GridLayout();
			layout.marginWidth = 0;
			panel.setLayout(layout);

			Label label = new Label(panel, SWT.NONE);
			label.setText("Select diagram root element:");
			label.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));

			TreeViewer treeViewer = new TreeViewer(panel, SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
			GridData layoutData = new GridData(GridData.FILL_BOTH);
			layoutData.heightHint = 300;
			layoutData.widthHint = 300;
			treeViewer.getTree().setLayoutData(layoutData);
			treeViewer.setContentProvider(new AdapterFactoryContentProvider(GMFGraphDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory()));
			treeViewer.setLabelProvider(new AdapterFactoryLabelProvider(GMFGraphDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory()));
			treeViewer.setInput(myDiagramRoot.eResource());
			treeViewer.setSelection(new StructuredSelection(myDiagramRoot));
			treeViewer.addSelectionChangedListener(this);
		}

		/**
		 * @@generated
		 */
		public void selectionChanged(SelectionChangedEvent event) {
			myDiagramRoot = null;
			if (event.getSelection() instanceof IStructuredSelection) {
				IStructuredSelection selection = (IStructuredSelection) event.getSelection();
				if (selection.size() == 1) {
					Object selectedElement = selection.getFirstElement();
					if (selectedElement instanceof IWrapperItemProvider) {
						selectedElement = ((IWrapperItemProvider) selectedElement).getValue();
					}
					if (selectedElement instanceof FeatureMap.Entry) {
						selectedElement = ((FeatureMap.Entry) selectedElement).getValue();
					}
					if (selectedElement instanceof EObject) {
						myDiagramRoot = (EObject) selectedElement;
					}
				}
			}
			setPageComplete(validatePage());
		}

		/**
		 * @@generated
		 */
		private boolean validatePage() {
			if (myDiagramRoot == null) {
				setErrorMessage("No diagram root element selected");
d172 2
a173 2
					new CreateDiagramViewOperation(new EObjectAdapter(myDiagramRoot), CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT));
			setErrorMessage(result ? null : "Invalid diagram root element was selected");
a175 1

d177 1
a177 1
}@


1.10
log
@[176026] akarjakina - Fix notation background and foreground colors update
[173499] akarjakina - Add custom form-based property sections fro figure attributes
@
text
@a13 1

a18 1

a19 1

a21 1

a26 3

import org.eclipse.emf.common.util.URI;

a27 1

a29 1

a30 1

a31 1

a33 1

a34 1

a35 1

a36 1

a37 1

a38 1

a39 1

a40 1

a41 1

a46 1

a48 1

a49 1

a51 1

a53 1

a55 1

@


1.9
log
@[173496] akarjakina - updated gmfgraph.editor bootstrap sample with recent GMF changes
@
text
@a143 1

a152 1

a169 1

d171 1
a171 2
		final Resource diagramResource = resourceSet.createResource(URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true));

a174 1

d184 1
a187 1

@


1.8
log
@- ElementChooserDialog title generated
- diagram file extension marked as non-nls
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation and others.
d39 4
a83 2
import org.eclipse.ui.ide.IDE;

d174 1
a174 1
		final Resource diagramResource = resourceSet.createResource(URI.createPlatformResourceURI(diagramFile.getFullPath().toString()));
d196 1
a196 1
			IDE.openEditor(myWorkbenchPage, diagramFile);
d268 11
a278 2
				if (selection.size() == 1 && selection.getFirstElement() instanceof EObject) {
					myDiagramRoot = (EObject) selection.getFirstElement();
@


1.7
log
@#139594 Create diagrams for non-root element of domain model.
@
text
@d145 1
a145 1
				String fileExtension = ".gmfgraph_diagram";
@


1.6
log
@[synch] Synchronizing with the templates
@
text
@d1 1
a1 1
/**
a32 1
import org.eclipse.emf.common.util.WrappedException;
d39 3
d50 2
d54 1
a54 1
import org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory;
d58 1
a58 2
import org.eclipse.jface.dialogs.MessageDialog;

d60 3
d65 6
d73 1
d90 1
a90 1
	private TransactionalEditingDomain myEditingDomain = GMFEditingDomainFactory.INSTANCE.createEditingDomain();
d115 12
a126 1
	public GMFGraphNewDiagramFileWizard(IFile selectedModelFile, IWorkbenchPage workbenchPage, IStructuredSelection selection) {
d130 2
d155 1
a155 1
		myFileCreationPage.setDescription("Create new diagram and initialize it using specified " + CanvasEditPart.MODEL_ID + " model content");
d157 1
a163 6
		final EObject diagramModelObject = load();
		if (diagramModelObject == null) {
			MessageDialog.openError(getShell(), "Error", "Failed to load user model");
			return false;
		}

d181 1
a181 1
				int diagramVID = GMFGraphVisualIDRegistry.getDiagramVisualID(diagramModelObject);
d185 1
a185 1
				Diagram diagram = ViewService.createDiagram(diagramModelObject, CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);
d208 77
a284 7
	private EObject load() {
		ResourceSet resourceSet = myEditingDomain.getResourceSet();
		try {
			Resource resource = resourceSet.getResource(URI.createPlatformResourceURI(mySelectedModelFile.getFullPath().toString()), true);
			return (EObject) resource.getContents().get(0);
		} catch (WrappedException ex) {
			GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to load resource: " + mySelectedModelFile.getFullPath().toString(), ex); //$NON-NLS-1$
d286 1
a286 1
		return null;
a287 1

@


1.5
log
@Polylines partually supported.
@
text
@d1 10
@


1.4
log
@Suggesting correct diagram file name in wizard.
@
text
@a19 1

@


1.3
log
@#137999 Generate pure static VisualIDRegisrty classes
@
text
@d13 1
d21 2
d51 2
d103 16
a118 2
		myFileCreationPage = new WizardNewFileCreationPage("Initialize new Ecore diagram file", mySelection);
		myFileCreationPage.setFileName(mySelectedModelFile.getProjectRelativePath().removeFileExtension().addFileExtension("gmfgraph_diagram").lastSegment());
@


1.2
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d132 1
a132 1
				int diagramVID = GMFGraphVisualIDRegistry.INSTANCE.getDiagramVisualID(diagramModelObject);
@


1.1
log
@.gmfgen model updated with new plugin name.
@
text
@d133 1
a133 1
				if (diagramVID != 79) {
@

