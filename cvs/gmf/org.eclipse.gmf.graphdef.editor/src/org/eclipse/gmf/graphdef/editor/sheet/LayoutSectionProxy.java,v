head	1.3;
access;
symbols
	v20080722-1827:1.3
	v20080718-1700:1.2
	v20080718-1731:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.2
	v20080528-1052:1.2
	v20080521:1.2
	v20080516-1143:1.2
	v20080512-1200:1.2
	v20080510-0100:1.2
	v20080507-1326:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2008.07.02.15.20.45;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	703486b9cc54567;

1.2
date	2008.04.17.16.55.08;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	784e480780eb4567;

1.1
date	2008.04.11.12.46.37;	author ashatalin;	state Exp;
branches;
next	;
commitid	174247ff5dac4567;


desc
@@


1.3
log
@[233207] - Support Label figure in .gmfgraph editor
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.sheet;

import java.util.Collections;
import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.commands.operations.OperationHistoryFactory;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
import org.eclipse.gmf.gmfgraph.Ellipse;
import org.eclipse.gmf.gmfgraph.Label;
import org.eclipse.gmf.gmfgraph.Polygon;
import org.eclipse.gmf.gmfgraph.Polyline;
import org.eclipse.gmf.gmfgraph.Rectangle;
import org.eclipse.gmf.gmfgraph.RoundedRectangle;
import org.eclipse.gmf.graphdef.editor.part.PropertySectionFilters;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.jface.viewers.IFilter;

/**
 * @@generated
 */
public class LayoutSectionProxy extends LayoutSection {

	/**
	 * @@generated
	 */
	protected void commit() {
		final List<IFile> files = Collections.singletonList(WorkspaceSynchronizer.getFile(getInput().eResource()));
		AbstractTransactionalCommand cmd = new AbstractTransactionalCommand(TransactionUtil.getEditingDomain(getInput()), "", files) {

			@@Override
			protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
				LayoutSectionProxy.super.commit();
				return CommandResult.newOKCommandResult();
			}
		};
		try {
			OperationHistoryFactory.getOperationHistory().execute(cmd, new NullProgressMonitor(), null);
		} catch (ExecutionException ex) {
			ex.printStackTrace();
		}
	}

	/**
	 * @@generated
	 */
	protected Object unwrap(Object element) {
		Object rv = PropertySectionFilters.transformSelection(element);
		if (rv instanceof Rectangle || rv instanceof Ellipse || rv instanceof RoundedRectangle || rv instanceof Polyline || rv instanceof Polygon || rv instanceof Label) {
			return rv;
		}
		return null;
	}

	/**
	 * @@generated
	 */
	public static class Filter implements IFilter {

		/**
		 * @@generated
		 */
		public boolean select(Object toTest) {
			Object transformed = PropertySectionFilters.transformSelection(toTest);
			return transformed instanceof Rectangle || transformed instanceof Ellipse || transformed instanceof RoundedRectangle || transformed instanceof Polyline || transformed instanceof Polygon
					|| transformed instanceof Label;
		}

	}

}
@


1.2
log
@Generating commit/unwrap methods + Filters for formTK-based properties sections.
@
text
@d25 2
d65 1
a65 1
		if (rv instanceof Rectangle || rv instanceof Ellipse || rv instanceof RoundedRectangle || rv instanceof Polyline) {
d81 2
a82 1
			return transformed instanceof Rectangle || transformed instanceof Ellipse || transformed instanceof RoundedRectangle || transformed instanceof Polyline;
@


1.1
log
@Registering generated property tabs as GenCustomPropertyTabs
@
text
@d13 20
d38 46
@

