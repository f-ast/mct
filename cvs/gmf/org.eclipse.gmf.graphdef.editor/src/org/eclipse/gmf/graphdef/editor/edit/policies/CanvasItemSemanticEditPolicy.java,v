head	1.7;
access;
symbols
	v20080722-1827:1.7
	v20080718-1700:1.6
	v20080718-1731:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080528-1052:1.6
	v20080521:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080510-0100:1.6
	v20080507-1326:1.6
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080411-0411:1.6
	v20080404-1111:1.6
	v20080322-0000:1.6
	v20080114-2222:1.6
	v20071214-1111:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070520-1200:1.5
	v20070420-1000:1.5
	v20070405-2000:1.4
	v20070405-1100:1.4
	v20070330-1300:1.4
	v20070307-0700:1.4
	v20070221-1500:1.4
	v20070208-1800:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	M1_20:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	RC2_10:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.07.02.15.20.43;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	703486b9cc54567;

1.6
date	2007.05.31.15.52.30;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	49f1465eef2c4567;

1.5
date	2007.04.16.11.03.53;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	7e4e462358154567;

1.4
date	2007.02.09.20.08.29;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	179c45ccd4b34567;

1.3
date	2006.06.02.15.08.29;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.30.13.06.14;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.12.58.23;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[233207] - Support Label figure in .gmfgraph editor
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.edit.policies;

import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.commands.Command;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand;
import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.graphdef.editor.edit.commands.CompartmentCreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.ConnectionCreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.DiagramLabelCreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.FigureGalleryCreateCommand;
import org.eclipse.gmf.graphdef.editor.edit.commands.NodeCreateCommand;

import org.eclipse.gmf.graphdef.editor.providers.GMFGraphElementTypes;

import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;

/**
 * @@generated
 */
public class CanvasItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {

	/**
	 * @@generated
	 */
	protected Command getCreateCommand(CreateElementRequest req) {
		if (GMFGraphElementTypes.Compartment_2005 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getCanvas_Compartments());
			}
			return getGEFWrapper(new CompartmentCreateCommand(req));
		}
		if (GMFGraphElementTypes.Node_2006 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getCanvas_Nodes());
			}
			return getGEFWrapper(new NodeCreateCommand(req));
		}
		if (GMFGraphElementTypes.Connection_2007 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getCanvas_Connections());
			}
			return getGEFWrapper(new ConnectionCreateCommand(req));
		}
		if (GMFGraphElementTypes.FigureGallery_2008 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getCanvas_Figures());
			}
			return getGEFWrapper(new FigureGalleryCreateCommand(req));
		}
		if (GMFGraphElementTypes.DiagramLabel_2009 == req.getElementType()) {
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(GMFGraphPackage.eINSTANCE.getCanvas_Labels());
			}
			return getGEFWrapper(new DiagramLabelCreateCommand(req));
		}
		return super.getCreateCommand(req);
	}

	/**
	 * @@generated
	 */
	protected Command getDuplicateCommand(DuplicateElementsRequest req) {
		TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
		return getGEFWrapper(new DuplicateAnythingCommand(editingDomain, req));
	}

	/**
	 * @@generated
	 */
	private static class DuplicateAnythingCommand extends DuplicateEObjectsCommand {

		/**
		 * @@generated
		 */
		public DuplicateAnythingCommand(TransactionalEditingDomain editingDomain, DuplicateElementsRequest req) {
			super(editingDomain, req.getLabel(), req.getElementsToBeDuplicated(), req.getAllDuplicatedElementsMap());
		}
	}
}
@


1.6
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@d22 1
d63 6
@


1.5
log
@[182339] akarjakina - provide different means to select parts of composite figures
Visible insets for top-level figures, custom popup action with nested submenus, simple handles behavior
@
text
@d2 8
a9 8
 * Copyright (c) 2006, 2007 Borland Software Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
d15 3
d19 1
d24 1
d26 1
a26 2
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand;
a27 1
import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;
d38 1
a38 1
		if (GMFGraphElementTypes.Compartment_2001 == req.getElementType()) {
d42 1
a42 1
			return getMSLWrapper(new CompartmentCreateCommand(req));
d44 1
a44 1
		if (GMFGraphElementTypes.Node_2002 == req.getElementType()) {
d48 1
a48 1
			return getMSLWrapper(new NodeCreateCommand(req));
d50 1
a50 1
		if (GMFGraphElementTypes.Connection_2003 == req.getElementType()) {
d54 1
a54 1
			return getMSLWrapper(new ConnectionCreateCommand(req));
d56 1
a56 1
		if (GMFGraphElementTypes.FigureGallery_2004 == req.getElementType()) {
d60 1
a60 1
			return getMSLWrapper(new FigureGalleryCreateCommand(req));
d70 1
a70 1
		return getMSLWrapper(new DuplicateAnythingCommand(editingDomain, req));
@


1.4
log
@[173496] akarjakina - updated gmfgraph.editor bootstrap sample with recent GMF changes
@
text
@a14 3
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand;
import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;
a15 1

a19 1

d21 2
a22 1

d24 1
@


1.3
log
@#139594 Create diagrams for non-root element of domain model.
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation and others.
d18 1
a18 2
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
d20 4
a23 1
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
a26 2
import org.eclipse.gmf.runtime.emf.type.core.commands.CreateElementCommand;

a28 2
import org.eclipse.gmf.runtime.notation.View;

d42 1
a42 1
			return getMSLWrapper(new CreateCompartment_2001Command(req));
d48 1
a48 1
			return getMSLWrapper(new CreateNode_2002Command(req));
d54 1
a54 1
			return getMSLWrapper(new CreateConnection_2003Command(req));
d60 1
a60 1
			return getMSLWrapper(new CreateFigureGallery_2004Command(req));
a67 124
	private static class CreateCompartment_2001Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreateCompartment_2001Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getCanvas();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

	/**
	 * @@generated
	 */
	private static class CreateNode_2002Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreateNode_2002Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getCanvas();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

	/**
	 * @@generated
	 */
	private static class CreateConnection_2003Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreateConnection_2003Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getCanvas();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

	/**
	 * @@generated
	 */
	private static class CreateFigureGallery_2004Command extends CreateElementCommand {

		/**
		 * @@generated
		 */
		public CreateFigureGallery_2004Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @@generated
		 */
		protected EClass getEClassToEdit() {
			return GMFGraphPackage.eINSTANCE.getCanvas();
		};

		/**
		 * @@generated
		 */
		protected EObject getElementToEdit() {
			EObject container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof View) {
				container = ((View) container).getElement();
			}
			return container;
		}
	}

	/**
	 * @@generated
	 */
@


1.2
log
@[synch] Synchronizing with the templates
@
text
@d1 1
a1 1
/**
@


1.1
log
@.gmfgen model updated with new plugin name.
@
text
@d1 10
a12 2
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
a16 1
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
d18 3
a20 1
import org.eclipse.gmf.runtime.notation.View;
d27 4
d40 1
a40 1
		if (GMFGraphElementTypes.Compartment_1001 == req.getElementType()) {
d44 1
a44 1
			return getMSLWrapper(new CreateCompartment_1001Command(req));
d46 1
a46 1
		if (GMFGraphElementTypes.Node_1002 == req.getElementType()) {
d50 1
a50 1
			return getMSLWrapper(new CreateNode_1002Command(req));
d52 1
a52 1
		if (GMFGraphElementTypes.Connection_1003 == req.getElementType()) {
d56 1
a56 1
			return getMSLWrapper(new CreateConnection_1003Command(req));
d58 1
a58 1
		if (GMFGraphElementTypes.FigureGallery_1004 == req.getElementType()) {
d62 1
a62 1
			return getMSLWrapper(new CreateFigureGallery_1004Command(req));
d70 1
a70 1
	private static class CreateCompartment_1001Command extends CreateElementCommand {
d75 1
a75 1
		public CreateCompartment_1001Command(CreateElementRequest req) {
d101 1
a101 1
	private static class CreateNode_1002Command extends CreateElementCommand {
d106 1
a106 1
		public CreateNode_1002Command(CreateElementRequest req) {
d132 1
a132 1
	private static class CreateConnection_1003Command extends CreateElementCommand {
d137 1
a137 1
		public CreateConnection_1003Command(CreateElementRequest req) {
d163 1
a163 1
	private static class CreateFigureGallery_1004Command extends CreateElementCommand {
d168 1
a168 1
		public CreateFigureGallery_1004Command(CreateElementRequest req) {
@

