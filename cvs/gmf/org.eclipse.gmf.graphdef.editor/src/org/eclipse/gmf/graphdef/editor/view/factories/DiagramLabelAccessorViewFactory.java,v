head	1.4;
access;
symbols
	v20080722-1827:1.4
	v20080718-1700:1.4
	v20080718-1731:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080528-1052:1.4
	v20080521:1.4
	v20080516-1143:1.3
	v20080512-1200:1.3
	v20080510-0100:1.3
	v20080507-1326:1.3
	v20080501-1739:1.3
	v20080425-1959:1.3
	v20080411-0411:1.3
	v20080404-1111:1.3
	v20080322-0000:1.3
	v20080114-2222:1.2
	v20071214-1111:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.1
	v20070605-1400:1.1
	v20070601-1400:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2008.05.19.16.33.11;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	77734831abc34567;

1.3
date	2008.03.07.12.50.34;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	179447d13a164567;

1.2
date	2007.06.18.17.06.14;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	54d14676bb824567;

1.1
date	2007.05.31.15.52.31;	author ashatalin;	state Exp;
branches;
next	;
commitid	49f1465eef2c4567;


desc
@@


1.4
log
@[230191] - Start using FeatureTracker/AttachAdapter for listening model changes in org.eclipse.gmf.graphdef.editor
@
text
@/*
 *  Copyright (c) 2006, 2008 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.view.factories;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelAccessorEditPart;
import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
import org.eclipse.gmf.runtime.diagram.ui.view.factories.ConnectionViewFactory;
import org.eclipse.gmf.runtime.notation.NotationFactory;
import org.eclipse.gmf.runtime.notation.View;

/**
 * @@generated
 */
public class DiagramLabelAccessorViewFactory extends ConnectionViewFactory {

	/**
	 * @@generated
	 */
	protected List createStyles(View view) {
		List styles = new ArrayList();
		styles.add(NotationFactory.eINSTANCE.createConnectorStyle());
		styles.add(NotationFactory.eINSTANCE.createFontStyle());
		return styles;
	}

	/**
	 * @@generated
	 */
	protected void decorateView(View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
		if (semanticHint == null) {
			semanticHint = GMFGraphVisualIDRegistry.getType(DiagramLabelAccessorEditPart.VISUAL_ID);
			view.setType(semanticHint);
		}
		super.decorateView(containerView, view, semanticAdapter, semanticHint, index, persisted);
	}
}
@


1.3
log
@Updating with new figures code + setting proper layout for diahram elements
@
text
@d2 1
a2 1
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
d29 1
a29 1
	 * @@generated 
@


1.2
log
@[191661] akarjakina - Improve GMFGraph Editor's propsheet model/codegen with TextArea, Combo and Date/Time support
@
text
@a16 5

import org.eclipse.emf.ecore.EAnnotation;
import org.eclipse.emf.ecore.EcoreFactory;

import org.eclipse.gmf.graphdef.editor.edit.parts.CanvasEditPart;
a17 1

a18 1

a19 1

@


1.1
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@a54 6
		if (!CanvasEditPart.MODEL_ID.equals(GMFGraphVisualIDRegistry.getModelID(containerView))) {
			EAnnotation shortcutAnnotation = EcoreFactory.eINSTANCE.createEAnnotation();
			shortcutAnnotation.setSource("Shortcut"); //$NON-NLS-1$
			shortcutAnnotation.getDetails().put("modelID", CanvasEditPart.MODEL_ID); //$NON-NLS-1$
			view.getEAnnotations().add(shortcutAnnotation);
		}
@

