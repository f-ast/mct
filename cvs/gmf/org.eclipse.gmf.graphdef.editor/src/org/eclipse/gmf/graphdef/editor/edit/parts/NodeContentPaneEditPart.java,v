head	1.2;
access;
symbols
	v20080722-1827:1.2
	v20080718-1700:1.2
	v20080718-1731:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.1
	v20080528-1052:1.1
	v20080521:1.1
	v20080516-1143:1.1
	v20080512-1200:1.1
	v20080510-0100:1.1
	v20080507-1326:1.1
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080411-0411:1.1
	v20080404-1111:1.1
	v20080322-0000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2008.06.06.12.58.26;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	5e7c484934724567;

1.1
date	2008.03.13.17.56.06;	author ashatalin;	state Exp;
branches;
next	;
commitid	54b147d96ab34567;


desc
@@


1.2
log
@[209917] - ConcurrentModificationException
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.edit.parts;

import org.eclipse.draw2d.Connection;
import org.eclipse.draw2d.Graphics;
import org.eclipse.draw2d.PolylineDecoration;
import org.eclipse.draw2d.RotatableDecoration;
import org.eclipse.draw2d.geometry.PointList;
import org.eclipse.gmf.graphdef.editor.edit.policies.NodeContentPaneItemSemanticEditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ITreeBranchEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
import org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx;
import org.eclipse.gmf.runtime.notation.View;

/**
 * @@generated
 */
public class NodeContentPaneEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {

	/**
	 * @@generated
	 */
	public static final int VISUAL_ID = 4006;

	/**
	 * @@generated
	 */
	public NodeContentPaneEditPart(View view) {
		super(view);
	}

	/**
	 * @@generated
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new NodeContentPaneItemSemanticEditPolicy());
	}

	/**
	 * Creates figure for this edit part.
	 * 
	 * Body of this method does not depend on settings in generation model
	 * so you may safely remove <i>generated</i> tag and modify it.
	 * 
	 * @@generated
	 */

	protected Connection createConnectionFigure() {
		return new ChildAccessConnectionFigure();
	}

	/**
	 * @@generated
	 */
	public ChildAccessConnectionFigure getPrimaryShape() {
		return (ChildAccessConnectionFigure) getFigure();
	}

	/**
	 * @@generated
	 */
	public class ChildAccessConnectionFigure extends PolylineConnectionEx {

		/**
		 * @@generated
		 */
		public ChildAccessConnectionFigure() {
			this.setLineStyle(Graphics.LINE_DOT);

			setTargetDecoration(createTargetDecoration());
		}

		/**
		 * @@generated
		 */
		private RotatableDecoration createTargetDecoration() {
			PolylineDecoration df = new PolylineDecoration();
			PointList pl = new PointList();
			pl.addPoint(getMapMode().DPtoLP(-1), getMapMode().DPtoLP(1));
			pl.addPoint(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0));
			pl.addPoint(getMapMode().DPtoLP(-1), getMapMode().DPtoLP(-1));
			df.setTemplate(pl);
			df.setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));
			return df;
		}

	}

}
@


1.1
log
@node content pane link to child accessor added.
@
text
@d20 1
d28 1
a28 1
public class NodeContentPaneEditPart extends ConnectionNodeEditPart {
@

