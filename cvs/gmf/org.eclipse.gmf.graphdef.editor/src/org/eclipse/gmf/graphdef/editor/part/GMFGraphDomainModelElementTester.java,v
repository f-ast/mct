head	1.3;
access;
symbols
	v20080722-1827:1.3
	v20080718-1700:1.3
	v20080718-1731:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.2
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080610-1132:1.3
	v20080603-1553:1.3
	v20080528-1052:1.3
	v20080521:1.2
	v20080516-1143:1.2
	v20080512-1200:1.2
	v20080510-0100:1.2
	v20080507-1326:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080411-0411:1.2
	v20080404-1111:1.2
	v20080322-0000:1.2
	v20080114-2222:1.2
	v20071214-1111:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070520-1200:1.1
	v20070420-1000:1.1
	v20070405-2000:1.1
	v20070405-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2008.05.23.12.52.26;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	54964836be094567;

1.2
date	2007.05.31.15.52.29;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	49f1465eef2c4567;

1.1
date	2007.04.04.20.23.26;	author atikhomirov;	state Exp;
branches;
next	;
commitid	ade461409204567;


desc
@@


1.3
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.part;

import org.eclipse.core.expressions.PropertyTester;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

/**
 * @@generated
 */
public class GMFGraphDomainModelElementTester extends PropertyTester {

	/**
	 * @@generated
	 */
	public boolean test(Object receiver, String method, Object[] args, Object expectedValue) {
		if (false == receiver instanceof EObject) {
			return false;
		}
		EObject eObject = (EObject) receiver;
		EClass eClass = eObject.eClass();
		if (eClass == GMFGraphPackage.eINSTANCE.getCanvas()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getFigureGallery()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getIdentity()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getDiagramElement()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getAbstractNode()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getNode()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getConnection()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCompartment()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getDiagramLabel()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getVisualFacet()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getGeneralFacet()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getAlignmentFacet()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getGradientFacet()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLabelOffsetFacet()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getDefaultSizeFacet()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getFigure()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getAbstractFigure()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getFigureDescriptor()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getChildAccess()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getRealFigure()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getFigureRef()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getConnectionFigure()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getDecorationFigure()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getShape()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLabel()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLabeledContainer()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getRectangle()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getRoundedRectangle()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getEllipse()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getPolyline()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getPolygon()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getScalablePolygon()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getPolylineConnection()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getPolylineDecoration()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getPolygonDecoration()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomClass()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomAttribute()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getFigureAccessor()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomFigure()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomDecoration()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomConnection()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getColor()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getRGBColor()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getConstantColor()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getFont()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getBasicFont()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getPoint()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getDimension()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getInsets()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getBorder()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getBorderRef()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLineBorder()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getMarginBorder()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCompoundBorder()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomBorder()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLayoutData()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomLayoutData()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getGridLayoutData()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getBorderLayoutData()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLayoutable()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLayout()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getLayoutRef()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getCustomLayout()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getGridLayout()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getBorderLayout()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getFlowLayout()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getXYLayout()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getXYLayoutData()) {
			return true;
		}
		if (eClass == GMFGraphPackage.eINSTANCE.getStackLayout()) {
			return true;
		}
		return false;
	}

}
@


1.2
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@d182 3
d215 3
@


1.1
log
@[173499] akarjakina - Enhance graphdef.editor with properties - use custom model to describe property sheet and generate PropertyTab code from that model
@
text
@d3 7
a9 7
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
d44 3
d77 7
a83 1
		if (eClass == GMFGraphPackage.eINSTANCE.getFigureMarker()) {
d86 1
a86 1
		if (eClass == GMFGraphPackage.eINSTANCE.getFigureHandle()) {
d89 1
a89 1
		if (eClass == GMFGraphPackage.eINSTANCE.getFigure()) {
@

