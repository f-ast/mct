head	1.2;
access;
symbols
	R1_0_maintenance:1.2.0.2
	R1_0:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.04.14.12.58.22;	author ashatalin;	state dead;
branches;
next	1.1;

1.1
date	2006.04.14.12.33.34;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@.gmfgen model updated with new plugin name.
@
text
@package org.eclipse.gmf.graphdef.gmfEditor.part;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.resources.ResourcesPlugin;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Path;

import org.eclipse.gmf.graphdef.gmfEditor.edit.parts.CanvasEditPart;

import org.eclipse.jface.action.IAction;

import org.eclipse.jface.dialogs.IDialogSettings;
import org.eclipse.jface.dialogs.IInputValidator;

import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.viewers.StructuredSelection;

import org.eclipse.jface.wizard.Wizard;
import org.eclipse.jface.wizard.WizardDialog;

import org.eclipse.ui.IObjectActionDelegate;
import org.eclipse.ui.IWorkbenchPart;

/**
 * @@generated
 */
public class GMFGraphInitDiagramFileAction implements IObjectActionDelegate, IInputValidator {

	/**
	 * @@generated
	 */
	private IWorkbenchPart myPart;

	/**
	 * @@generated
	 */
	private IFile mySelectedModelFile;

	/**
	 * @@generated
	 */
	private IStructuredSelection mySelection;

	/**
	 * @@generated
	 */
	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
		myPart = targetPart;
	}

	/**
	 * @@generated
	 */
	public void selectionChanged(IAction action, ISelection selection) {
		mySelectedModelFile = null;
		mySelection = StructuredSelection.EMPTY;
		action.setEnabled(false);
		if (selection instanceof IStructuredSelection == false || selection.isEmpty()) {
			return;
		}
		mySelection = (IStructuredSelection) selection;
		mySelectedModelFile = (IFile) ((IStructuredSelection) selection).getFirstElement();
		action.setEnabled(true);
	}

	/**
	 * @@generated
	 */
	public String isValid(String newText) {
		IStatus status = ResourcesPlugin.getWorkspace().validateName(newText, IResource.FILE);
		if (!status.isOK()) {
			return status.getMessage();
		}
		if (mySelectedModelFile.getParent().getFile(new Path(newText).addFileExtension("gmfgraph_diagram")).exists()) {
			return "File already exists, choose another name";
		}
		return null;
	}

	/**
	 * @@generated
	 */
	public void run(IAction action) {
		Wizard wizard = new GMFGraphNewDiagramFileWizard(mySelectedModelFile, myPart.getSite().getPage(), mySelection);
		IDialogSettings pluginDialogSettings = GMFGraphDiagramEditorPlugin.getInstance().getDialogSettings();
		IDialogSettings initDiagramFileSettings = pluginDialogSettings.getSection("InisDiagramFile"); //$NON-NLS-1$
		if (initDiagramFileSettings == null) {
			initDiagramFileSettings = pluginDialogSettings.addNewSection("InisDiagramFile"); //$NON-NLS-1$
		}
		wizard.setDialogSettings(initDiagramFileSettings);
		wizard.setForcePreviousAndNextButtons(false);
		wizard.setWindowTitle("Initialize new " + CanvasEditPart.MODEL_ID + " diagram file");

		WizardDialog dialog = new WizardDialog(myPart.getSite().getShell(), wizard);
		dialog.create();
		dialog.getShell().setSize(Math.max(500, dialog.getShell().getSize().x), 500);
		dialog.open();
	}

}@


1.1
log
@Initial import
@
text
@@

