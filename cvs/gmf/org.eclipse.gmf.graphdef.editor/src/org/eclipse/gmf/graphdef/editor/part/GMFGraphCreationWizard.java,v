head	1.7;
access;
symbols
	v20080722-1827:1.7
	v20080718-1700:1.7
	v20080718-1731:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080603-1553:1.7
	v20080528-1052:1.7
	v20080521:1.7
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080510-0100:1.6
	v20080507-1326:1.6
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080411-0411:1.6
	v20080404-1111:1.6
	v20080322-0000:1.6
	v20080114-2222:1.5
	v20071214-1111:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070520-1200:1.4
	v20070420-1000:1.4
	v20070405-2000:1.4
	v20070405-1100:1.4
	v20070330-1300:1.4
	v20070307-0700:1.4
	v20070221-1500:1.4
	v20070208-1800:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	M1_20:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	RC2_10:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.05.19.16.33.11;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	77734831abc34567;

1.6
date	2008.02.22.13.08.00;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	4c5647bec9294567;

1.5
date	2007.05.31.15.52.29;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	49f1465eef2c4567;

1.4
date	2007.02.09.20.08.30;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	179c45ccd4b34567;

1.3
date	2006.06.02.15.08.30;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.30.13.06.14;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.12.58.24;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[230191] - Start using FeatureTracker/AttachAdapter for listening model changes in org.eclipse.gmf.graphdef.editor
@
text
@/*
 *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.part;

import java.lang.reflect.InvocationTargetException;

import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.jface.dialogs.ErrorDialog;
import org.eclipse.jface.operation.IRunnableWithProgress;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.wizard.Wizard;
import org.eclipse.ui.INewWizard;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.PartInitException;
import org.eclipse.ui.actions.WorkspaceModifyOperation;

/**
 * @@generated
 */
public class GMFGraphCreationWizard extends Wizard implements INewWizard {

	/**
	 * @@generated
	 */
	private IWorkbench workbench;

	/**
	 * @@generated
	 */
	protected IStructuredSelection selection;

	/**
	 * @@generated
	 */
	protected GMFGraphCreationWizardPage diagramModelFilePage;

	/**
	 * @@generated
	 */
	protected GMFGraphCreationWizardPage domainModelFilePage;

	/**
	 * @@generated
	 */
	protected Resource diagram;

	/**
	 * @@generated
	 */
	private boolean openNewlyCreatedDiagramEditor = true;

	/**
	 * @@generated
	 */
	public IWorkbench getWorkbench() {
		return workbench;
	}

	/**
	 * @@generated
	 */
	public IStructuredSelection getSelection() {
		return selection;
	}

	/**
	 * @@generated
	 */
	public final Resource getDiagram() {
		return diagram;
	}

	/**
	 * @@generated
	 */
	public final boolean isOpenNewlyCreatedDiagramEditor() {
		return openNewlyCreatedDiagramEditor;
	}

	/**
	 * @@generated
	 */
	public void setOpenNewlyCreatedDiagramEditor(boolean openNewlyCreatedDiagramEditor) {
		this.openNewlyCreatedDiagramEditor = openNewlyCreatedDiagramEditor;
	}

	/**
	 * @@generated
	 */
	public void init(IWorkbench workbench, IStructuredSelection selection) {
		this.workbench = workbench;
		this.selection = selection;
		setWindowTitle(Messages.GMFGraphCreationWizardTitle);
		setDefaultPageImageDescriptor(GMFGraphDiagramEditorPlugin.getBundledImageDescriptor("icons/wizban/NewGMFGraphWizard.gif")); //$NON-NLS-1$
		setNeedsProgressMonitor(true);
	}

	/**
	 * @@generated
	 */
	public void addPages() {
		diagramModelFilePage = new GMFGraphCreationWizardPage("DiagramModelFile", getSelection(), "gmfgraph_diagram"); //$NON-NLS-1$ //$NON-NLS-2$
		diagramModelFilePage.setTitle(Messages.GMFGraphCreationWizard_DiagramModelFilePageTitle);
		diagramModelFilePage.setDescription(Messages.GMFGraphCreationWizard_DiagramModelFilePageDescription);
		addPage(diagramModelFilePage);

		domainModelFilePage = new GMFGraphCreationWizardPage("DomainModelFile", getSelection(), "gmfgraph") { //$NON-NLS-1$ //$NON-NLS-2$

			public void setVisible(boolean visible) {
				if (visible) {
					String fileName = diagramModelFilePage.getFileName();
					fileName = fileName.substring(0, fileName.length() - ".gmfgraph_diagram".length()); //$NON-NLS-1$
					setFileName(GMFGraphDiagramEditorUtil.getUniqueFileName(getContainerFullPath(), fileName, "gmfgraph")); //$NON-NLS-1$
				}
				super.setVisible(visible);
			}
		};
		domainModelFilePage.setTitle(Messages.GMFGraphCreationWizard_DomainModelFilePageTitle);
		domainModelFilePage.setDescription(Messages.GMFGraphCreationWizard_DomainModelFilePageDescription);
		addPage(domainModelFilePage);
	}

	/**
	 * @@generated
	 */
	public boolean performFinish() {
		IRunnableWithProgress op = new WorkspaceModifyOperation(null) {

			protected void execute(IProgressMonitor monitor) throws CoreException, InterruptedException {
				diagram = GMFGraphDiagramEditorUtil.createDiagram(diagramModelFilePage.getURI(), domainModelFilePage.getURI(), monitor);
				if (isOpenNewlyCreatedDiagramEditor() && diagram != null) {
					try {
						GMFGraphDiagramEditorUtil.openDiagram(diagram);
					} catch (PartInitException e) {
						ErrorDialog.openError(getContainer().getShell(), Messages.GMFGraphCreationWizardOpenEditorError, null, e.getStatus());
					}
				}
			}
		};
		try {
			getContainer().run(false, true, op);
		} catch (InterruptedException e) {
			return false;
		} catch (InvocationTargetException e) {
			if (e.getTargetException() instanceof CoreException) {
				ErrorDialog.openError(getContainer().getShell(), Messages.GMFGraphCreationWizardCreationError, null, ((CoreException) e.getTargetException()).getStatus());
			} else {
				GMFGraphDiagramEditorPlugin.getInstance().logError("Error creating diagram", e.getTargetException()); //$NON-NLS-1$
			}
			return false;
		}
		return diagram != null;
	}
}
@


1.6
log
@Updating gmfgaph editor:
- Setting default size of all graphical elements to 0,0
- updating aspect templates to reflect latest changes
- regenerating code
@
text
@d117 11
a127 1
		domainModelFilePage = new GMFGraphCreationWizardPage("DomainModelFile", getSelection(), "gmfgraph"); //$NON-NLS-1$ //$NON-NLS-2$
@


1.5
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@d103 1
a103 1
		setWindowTitle("New GMFGraph Diagram");
d113 2
a114 2
		diagramModelFilePage.setTitle("Create GMFGraph Diagram");
		diagramModelFilePage.setDescription("Select file that will contain diagram model.");
d118 2
a119 2
		domainModelFilePage.setTitle("Create GMFGraph Diagram");
		domainModelFilePage.setDescription("Select file that will contain domain model.");
d135 1
a135 1
						ErrorDialog.openError(getContainer().getShell(), "Error opening diagram editor", null, e.getStatus());
d146 1
a146 1
				ErrorDialog.openError(getContainer().getShell(), "Creation Problems", null, ((CoreException) e.getTargetException()).getStatus());
@


1.4
log
@[173496] akarjakina - updated gmfgraph.editor bootstrap sample with recent GMF changes
@
text
@d2 8
a9 8
 * Copyright (c) 2006, 2007 Borland Software Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
@


1.3
log
@#139594 Create diagrams for non-root element of domain model.
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation and others.
d13 7
a19 1
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.wizards.EditorCreationWizard;
d21 2
d24 2
d30 16
a45 1
public class GMFGraphCreationWizard extends EditorCreationWizard {
d50 45
a94 6
	public void addPages() {
		super.addPages();
		if (page == null) {
			page = new GMFGraphCreationWizardPage(getWorkbench(), getSelection());
		}
		addPage(page);
d101 3
a103 2
		super.init(workbench, selection);
		setWindowTitle("New GMFGraph Diagram"); //$NON-NLS-1$
d107 47
@


1.2
log
@[synch] Synchronizing with the templates
@
text
@d1 1
a1 1
/**
@


1.1
log
@.gmfgen model updated with new plugin name.
@
text
@d1 10
d39 1
a39 1
		setDefaultPageImageDescriptor(org.eclipse.gmf.graphdef.editor.part.GMFGraphDiagramEditorPlugin.getBundledImageDescriptor("icons/full/wizban/NewGMFGraph.gif")); //$NON-NLS-1$
@

