head	1.1;
access;
symbols
	v20080722-1827:1.1
	v20080718-1700:1.1
	v20080718-1731:1.1
	v20080716-1642:1.1
	R2_1_maintenance:1.1.0.2
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080610-1132:1.1
	v20080603-1553:1.1
	v20080528-1052:1.1
	v20080521:1.1
	v20080516-1143:1.1
	v20080512-1200:1.1
	v20080510-0100:1.1
	v20080507-1326:1.1
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080411-0411:1.1
	v20080404-1111:1.1
	v20080322-0000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.02.19.10.33.09;	author atikhomirov;	state Exp;
branches;
next	;
commitid	4a0e47bab0644567;


desc
@@


1.1
log
@[192711] improving property sheet codegeneration -  outcome from newly designed form ui model was added for comparison
@
text
@/*
 * Copyright (c) 2008 Borland Software Corporation.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.graphdef.editor.sheet;

import org.eclipse.emf.common.notify.Notification;

/**
 * Basically, extraction of the {@@link org.eclipse.emf.common.notify.Adapter#notifyChanged(Notification)}
 * into separate interface to ease implementation of the handling logic externally to adapter (i.e. in 
 * heck a lot of cases adapter can't do anything about recognized event but to delegate to surrounding code)
 * 
 * @@author artem
 */
public interface ChangeTracker {
	void modelChanged(Notification msg);
}
@
