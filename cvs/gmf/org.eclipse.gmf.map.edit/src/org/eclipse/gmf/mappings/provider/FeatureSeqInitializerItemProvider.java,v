head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080722-1827:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.4
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080528-1052:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070601-1400:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.8
	v20070427-0600:1.8
	v20070420-1000:1.8
	v20070403-1500:1.8
	v20070330-1300:1.7
	v20060316-0600:1.7
	v20070208-1800:1.6
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061013-1330:1.4
	M1_20:1.3
	v20060904-1500:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.2
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2007.05.10.17.12.28;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	23424643527b4567;

1.8
date	2007.04.03.16.29.19;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	5dfa461280d64567;

1.7
date	2007.03.14.13.00.15;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	12fa45f7f1db4567;

1.6
date	2007.01.31.15.04.24;	author mfeldman;	state Exp;
branches;
next	1.5;
commitid	2e6245c0afde4567;

1.5
date	2006.10.17.10.29.44;	author radvorak;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.28.18.21.36;	author radvorak;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.02.12.52.53;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.29.18.33.08;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.20.14.07.18;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@avoid java5 warnings
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.provider;


import java.util.Collection;
import java.util.Iterator;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.mappings.FeatureInitializer;
import org.eclipse.gmf.mappings.FeatureSeqInitializer;
import org.eclipse.gmf.mappings.GMFMapFactory;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.mappings.presentation.FilterUtil;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.mappings.FeatureSeqInitializer} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class FeatureSeqInitializerItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public FeatureSeqInitializerItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addElementClassPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Element Class feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	protected void addElementClassPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(new ItemPropertyDescriptor(
				((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_FeatureSeqInitializer_elementClass_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_FeatureSeqInitializer_elementClass_feature", "_UI_FeatureSeqInitializer_type"),
				 GMFMapPackage.eINSTANCE.getFeatureSeqInitializer_ElementClass(),
				 true,
				 false,
				 true,
				 null,
				 null,
				 null) {
				protected Collection<?> getComboBoxObjects(Object object) {
					if(object instanceof FeatureSeqInitializer) {
						@@SuppressWarnings("unchecked")
						final Collection<EClass> original = (Collection<EClass>) super.getComboBoxObjects(object);
						return FilterUtil.filterByFeatureSeqInitializer(original, (FeatureSeqInitializer)object);
					}
				
					return super.getComboBoxObjects(object);
				}
			});
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFMapPackage.eINSTANCE.getFeatureSeqInitializer_Initializers());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns FeatureSeqInitializer.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/FeatureSeqInitializer"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public String getText(Object object) {
		StringBuffer buf = new StringBuffer();		
		buf.append(getString("_UI_FeatureSeqInitializer_type"));
		if (object instanceof FeatureSeqInitializer) {
			FeatureSeqInitializer fSeqInitializer = (FeatureSeqInitializer) object;
			buf.append('<');
			if(fSeqInitializer.getElementClass() != null) {
				if(fSeqInitializer.getCreatingInitializer() != null) {
					buf.append("new "); //$NON-NLS-1$
				}
				buf.append(fSeqInitializer.getElementClass().getName());
			}

			buf.append('(');
			for (Iterator<?> it = fSeqInitializer.getInitializers().iterator(); it.hasNext();) {
				FeatureInitializer nextInitializer = (FeatureInitializer) it.next();
				if(nextInitializer != null && nextInitializer.getFeature() != null) {
					buf.append(nextInitializer.getFeature().getName());
				}
				if(it.hasNext()) {
					buf.append(',');
				}				
			}
			buf.append(')');			
			buf.append('>');
		}
		
		return buf.toString();		
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(FeatureSeqInitializer.class)) {
			case GMFMapPackage.FEATURE_SEQ_INITIALIZER__ELEMENT_CLASS:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getFeatureSeqInitializer_Initializers(),
				 GMFMapFactory.eINSTANCE.createFeatureValueSpec()));

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getFeatureSeqInitializer_Initializers(),
				 GMFMapFactory.eINSTANCE.createReferenceNewElementSpec()));
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return GMFMapEditPlugin.INSTANCE;
	}

}
@


1.8
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d97 3
a99 1
						return FilterUtil.filterByFeatureSeqInitializer((Collection<EClass>)super.getComboBoxObjects(object), (FeatureSeqInitializer)object);
@


1.7
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d17 1
a18 2
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.ecore.EClass;
d205 2
a206 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d212 1
a212 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.6
log
@Explicit type casting added for the compatibility with the EMF > 25.1.2007
@
text
@d17 2
d23 1
d66 2
a67 1
	public List getPropertyDescriptors(Object object) {
d96 1
a96 1
				protected Collection getComboBoxObjects(Object object) {
d114 2
a115 1
	public Collection getChildrenFeatures(Object object) {
d124 13
d142 1
d167 1
a167 1
			for (Iterator it = fSeqInitializer.getInitializers().iterator(); it.hasNext();) {
d190 1
d212 2
a213 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d233 1
@


1.5
log
@[161201] Restrict ItemPropertyDescriptor.getChoiceOfValues for ElementInitializer related editing in gmfmap.edit
@
text
@d17 1
d94 1
a94 1
						return FilterUtil.filterByFeatureSeqInitializer(super.getComboBoxObjects(object), (FeatureSeqInitializer)object);
@


1.4
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
@
text
@d23 1
d30 1
d75 1
a75 1
	 * @@generated
d79 2
a80 2
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
d90 9
a98 1
				 null));
@


1.3
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@d11 1
d17 1
d25 1
d64 1
d70 22
d121 1
a121 1
	 * @@generated
d124 27
a150 1
		return getString("_UI_FeatureSeqInitializer_type");
d164 3
d188 5
@


1.2
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d88 1
a88 1
		return getResourceLocator().getImage("full/obj16/FeatureSeqInitializer");
@


1.1
log
@[rdvorak] #112773 specify init expressions while relating diagram elements with domain
@
text
@a14 1

a15 1

a22 1

@

