head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080722-1827:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.4
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080528-1052:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070601-1400:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.9
	v20070403-1500:1.9
	v20070330-1300:1.8
	v20060316-0600:1.8
	v20070208-1800:1.7
	M4_20:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061013-1330:1.7
	M1_20:1.7
	v20060904-1500:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060519-1300:1.7
	v20060519-0800:1.7
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2007.04.03.16.29.19;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	5dfa461280d64567;

1.8
date	2007.03.14.13.00.14;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	12fa45f7f1db4567;

1.7
date	2006.05.19.10.11.56;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.25.19.15.42;	author radvorak;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.03.18.32.41;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.03.11.36.27;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.02.12.52.53;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.10.20.40.13;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.10.18.35.33;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.mappings.AuditRule;
import org.eclipse.gmf.mappings.GMFMapFactory;
import org.eclipse.gmf.mappings.GMFMapPackage;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.mappings.AuditRule} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class AuditRuleItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public AuditRuleItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addNamePropertyDescriptor(object);
			addDescriptionPropertyDescriptor(object);
			addIdPropertyDescriptor(object);
			addSeverityPropertyDescriptor(object);
			addUseInLiveModePropertyDescriptor(object);
			addMessagePropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Id feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addIdPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_AuditRule_id_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_AuditRule_id_feature", "_UI_AuditRule_type"),
				 GMFMapPackage.eINSTANCE.getAuditRule_Id(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_RuleBase_name_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_RuleBase_name_feature", "_UI_RuleBase_type"),
				 GMFMapPackage.eINSTANCE.getRuleBase_Name(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Severity feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSeverityPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_AuditRule_severity_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_AuditRule_severity_feature", "_UI_AuditRule_type"),
				 GMFMapPackage.eINSTANCE.getAuditRule_Severity(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Use In Live Mode feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addUseInLiveModePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_AuditRule_useInLiveMode_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_AuditRule_useInLiveMode_feature", "_UI_AuditRule_type"),
				 GMFMapPackage.eINSTANCE.getAuditRule_UseInLiveMode(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Message feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addMessagePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_AuditRule_message_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_AuditRule_message_feature", "_UI_AuditRule_type"),
				 GMFMapPackage.eINSTANCE.getAuditRule_Message(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Description feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDescriptionPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_RuleBase_description_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_RuleBase_description_feature", "_UI_RuleBase_type"),
				 GMFMapPackage.eINSTANCE.getRuleBase_Description(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFMapPackage.eINSTANCE.getAuditRule_Rule());
			childrenFeatures.add(GMFMapPackage.eINSTANCE.getAuditRule_Target());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns AuditRule.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/AuditRule"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((AuditRule)object).getName();
		return label == null || label.length() == 0 ?
			getString("_UI_AuditRule_type") :
			getString("_UI_AuditRule_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(AuditRule.class)) {
			case GMFMapPackage.AUDIT_RULE__NAME:
			case GMFMapPackage.AUDIT_RULE__DESCRIPTION:
			case GMFMapPackage.AUDIT_RULE__ID:
			case GMFMapPackage.AUDIT_RULE__SEVERITY:
			case GMFMapPackage.AUDIT_RULE__USE_IN_LIVE_MODE:
			case GMFMapPackage.AUDIT_RULE__MESSAGE:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFMapPackage.AUDIT_RULE__RULE:
			case GMFMapPackage.AUDIT_RULE__TARGET:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getAuditRule_Rule(),
				 GMFMapFactory.eINSTANCE.createConstraint()));

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getAuditRule_Target(),
				 GMFMapFactory.eINSTANCE.createDomainElementTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getAuditRule_Target(),
				 GMFMapFactory.eINSTANCE.createDomainAttributeTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getAuditRule_Target(),
				 GMFMapFactory.eINSTANCE.createDiagramElementTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getAuditRule_Target(),
				 GMFMapFactory.eINSTANCE.createNotationElementTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFMapPackage.eINSTANCE.getAuditRule_Target(),
				 GMFMapFactory.eINSTANCE.createAuditedMetricTarget()));
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return GMFMapEditPlugin.INSTANCE;
	}

}
@


1.8
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a16 2

import org.eclipse.emf.edit.command.CommandParameter;
d293 2
a294 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d300 1
a300 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.7
log
@#114175 Allow a diagram definition to be mapped to zero or more domain models.
@
text
@d18 1
d22 1
d63 2
a64 1
	public List getPropertyDescriptors(Object object) {
d218 2
a219 1
	public Collection getChildrenFeatures(Object object) {
d233 1
d247 1
d258 1
d273 1
d301 2
a302 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d342 1
@


1.6
log
@#138464 Support EAttribute based target in AuditRule element
@
text
@d90 2
d112 2
d134 2
d156 2
d178 2
d200 2
@


1.5
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d297 5
@


1.4
log
@#130009 Enable audit rules on diagram (notation model) elements in gmfmap model
@
text
@d65 2
a67 1
			addNamePropertyDescriptor(object);
a70 1
			addDescriptionPropertyDescriptor(object);
d106 3
a108 3
				 getString("_UI_AuditRule_name_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_AuditRule_name_feature", "_UI_AuditRule_type"),
				 GMFMapPackage.eINSTANCE.getAuditRule_Name(),
d186 3
a188 3
				 getString("_UI_AuditRule_description_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_AuditRule_description_feature", "_UI_AuditRule_type"),
				 GMFMapPackage.eINSTANCE.getAuditRule_Description(),
a205 1
			childrenFeatures.add(GMFMapPackage.eINSTANCE.getRuleBase_Target());
d207 1
d258 2
a260 1
			case GMFMapPackage.AUDIT_RULE__NAME:
a263 1
			case GMFMapPackage.AUDIT_RULE__DESCRIPTION:
d266 1
a267 1
			case GMFMapPackage.AUDIT_RULE__RULE:
d286 6
a291 1
				(GMFMapPackage.eINSTANCE.getRuleBase_Target(),
d296 1
a296 1
				(GMFMapPackage.eINSTANCE.getRuleBase_Target(),
d301 1
a301 1
				(GMFMapPackage.eINSTANCE.getRuleBase_Target(),
d306 2
a307 2
				(GMFMapPackage.eINSTANCE.getAuditRule_Rule(),
				 GMFMapFactory.eINSTANCE.createConstraint()));
@


1.3
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@d16 2
a65 1
			addTargetPropertyDescriptor(object);
a95 20
	 * This adds a property descriptor for the Target feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTargetPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_AuditRule_target_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_AuditRule_target_feature", "_UI_AuditRule_type"),
				 GMFMapPackage.eINSTANCE.getAuditRule_Target(),
				 true,
				 null,
				 null,
				 null));
	}

	/**
d206 1
d213 12
d266 1
d286 15
@


1.2
log
@#114197 - tooling definition in place
@
text
@d237 1
a237 1
		return getResourceLocator().getImage("full/obj16/AuditRule");
@


1.1
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@a14 1

a15 1

a24 1

@

