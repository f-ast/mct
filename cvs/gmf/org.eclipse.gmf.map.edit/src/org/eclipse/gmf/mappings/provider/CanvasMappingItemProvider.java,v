head	1.11;
access;
symbols
	v20080813-1520:1.11
	v20080722-1827:1.11
	v20080716-1600:1.11
	v20080716-1642:1.11
	R2_1_maintenance:1.11.0.4
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080610-1132:1.11
	v20080528-1052:1.11
	v20080425-1959:1.11
	v20080417-1610:1.11
	v20080322-0000:1.11
	v20080222-1200:1.11
	v20070809-0000:1.11
	R2_0_maintenance:1.11.0.2
	R2_0:1.11
	R4_20:1.11
	v20070621-0000:1.11
	RC3_20:1.11
	v20070614-1400:1.11
	v20070608-1300:1.11
	v20070601-1400:1.11
	v20070520-1200:1.11
	v20070518-1300:1.11
	v20070504-1000:1.10
	v20070427-0600:1.10
	v20070420-1000:1.10
	v20070403-1500:1.10
	v20070330-1300:1.9
	v20060316-0600:1.9
	v20070208-1800:1.8
	M4_20:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061117-0800:1.8
	v20061013-1330:1.8
	M1_20:1.8
	v20060904-1500:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060519-1300:1.7
	v20060519-0800:1.7
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2007.05.10.17.12.28;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	23424643527b4567;

1.10
date	2007.04.03.16.29.19;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	5dfa461280d64567;

1.9
date	2007.03.14.13.00.15;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	12fa45f7f1db4567;

1.8
date	2006.05.31.15.48.07;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.19.10.11.56;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.27.11.26.56;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.26.17.55.01;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.02.12.52.53;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.10.20.40.13;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.20.16.12.06;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.29.10;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.11
log
@avoid java5 warnings
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.gmf.mappings.CanvasMapping;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.mappings.presentation.FilterUtil;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.mappings.CanvasMapping} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class CanvasMappingItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public CanvasMappingItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addDiagramCanvasPropertyDescriptor(object);
			addDomainModelPropertyDescriptor(object);
			addDomainMetaElementPropertyDescriptor(object);
			addPalettePropertyDescriptor(object);
			addMenuContributionsPropertyDescriptor(object);
			addToolbarContributionsPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Diagram Canvas feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	protected void addDiagramCanvasPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(new ItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_CanvasMapping_diagramCanvas_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_diagramCanvas_feature", "_UI_CanvasMapping_type"),
				 GMFMapPackage.eINSTANCE.getCanvasMapping_DiagramCanvas(),
				 true,
				 null,
				 getString("_UI_VisualrepresentationPropertyCategory"),
				 null) {
						protected Collection<?> getComboBoxObjects(Object object) {
							return FilterUtil.sort(super.getComboBoxObjects(object));
						}
			});
	}

	/**
	 * This adds a property descriptor for the Domain Model feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	protected void addDomainModelPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(new ItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_CanvasMapping_domainModel_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"),
				 GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel(),
				 true,
				 null,
				 getString("_UI_DomainmetainformationPropertyCategory"),
				 null) {
						protected Collection<?> getComboBoxObjects(Object object) {
							return FilterUtil.sort(super.getComboBoxObjects(object));
						}
			});
	}

	/**
	 * This adds a property descriptor for the Domain Meta Element feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	protected void addDomainMetaElementPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(new ItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_CanvasMapping_domainMetaElement_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainMetaElement_feature", "_UI_CanvasMapping_type"),
				 GMFMapPackage.eINSTANCE.getCanvasMapping_DomainMetaElement(),
				 true,
				 null,
				 getString("_UI_DomainmetainformationPropertyCategory"),
				 null) {
						protected Collection<?> getComboBoxObjects(Object object) {
							@@SuppressWarnings("unchecked")
							Collection<EClass> original = (Collection<EClass>) super.getComboBoxObjects(object);
							return FilterUtil.filterByResourceSet(original, ((CanvasMapping) object).eResource().getResourceSet());
						}
			});
	}

	/**
	 * This adds a property descriptor for the Palette feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	protected void addPalettePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(new ItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_CanvasMapping_palette_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"),
				 GMFMapPackage.eINSTANCE.getCanvasMapping_Palette(),
				 true,
				 null,
				 null,
				 null) {
						protected Collection<?> getComboBoxObjects(Object object) {
							return FilterUtil.sort(super.getComboBoxObjects(object));
						}
			});
	}

	/**
	 * This adds a property descriptor for the Menu Contributions feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addMenuContributionsPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_CanvasMapping_menuContributions_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_menuContributions_feature", "_UI_CanvasMapping_type"),
				 GMFMapPackage.eINSTANCE.getCanvasMapping_MenuContributions(),
				 true,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Toolbar Contributions feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addToolbarContributionsPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_CanvasMapping_toolbarContributions_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_toolbarContributions_feature", "_UI_CanvasMapping_type"),
				 GMFMapPackage.eINSTANCE.getCanvasMapping_ToolbarContributions(),
				 true,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This returns CanvasMapping.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/CanvasMapping"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		return getString("_UI_CanvasMapping_type");
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return GMFMapEditPlugin.INSTANCE;
	}

}
@


1.10
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d16 1
d142 3
a144 1
							return FilterUtil.filterByResourceSet(super.getComboBoxObjects(object), ((CanvasMapping) object).eResource().getResourceSet());
@


1.9
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a15 1
import org.eclipse.emf.edit.command.CommandParameter;
d250 2
a251 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d257 1
a257 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.8
log
@#144694 gmfmap editor: Show EClasses from all the loaded ecore model in meta-element choosers for Node/CanvasMappings
@
text
@d16 1
d20 1
d60 2
a61 1
	public List getPropertyDescriptors(Object object) {
d93 1
a93 1
						protected Collection getComboBoxObjects(Object object) {
d117 1
a117 1
						protected Collection getComboBoxObjects(Object object) {
d141 1
a141 1
						protected Collection getComboBoxObjects(Object object) {
d165 1
a165 1
						protected Collection getComboBoxObjects(Object object) {
d221 1
d232 1
d244 1
d257 2
a258 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d268 1
@


1.7
log
@#114175 Allow a diagram definition to be mapped to zero or more domain models.
@
text
@d139 1
a139 1
							return FilterUtil.filterByModel(super.getComboBoxObjects(object), (CanvasMapping) object);
@


1.6
log
@#119034 Show only valid feature in "containment feature" property of ChildNodeMapping
#138606 hide inappropriate entries in selection dialogs
@
text
@d183 2
d205 2
@


1.5
log
@#119034 Show only valid feature in "containment feature" property of ChildNodeMapping
#138606 hide inappropriate entries in selection dialogs
@
text
@d24 1
d139 1
a139 1
							return FilterUtil.sort(super.getComboBoxObjects(object));
@


1.4
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@d22 1
d25 1
d75 1
a75 1
	 * @@generated
d79 1
a79 1
			(createItemPropertyDescriptor
d88 5
a92 1
				 null));
d99 1
a99 1
	 * @@generated
d103 1
a103 1
			(createItemPropertyDescriptor
d112 5
a116 1
				 null));
d123 1
a123 1
	 * @@generated
d127 1
a127 1
			(createItemPropertyDescriptor
d136 5
a140 1
				 null));
d147 1
a147 1
	 * @@generated
d151 1
a151 1
			(createItemPropertyDescriptor
d160 5
a164 1
				 null));
@


1.3
log
@#114197 - tooling definition in place
@
text
@d196 1
a196 1
		return getResourceLocator().getImage("full/obj16/CanvasMapping");
@


1.2
log
@#121565 property categories and simplified names to ease mapping definition.
Some outdated properties removed as well
@
text
@d22 1
d32 1
a32 1
	extends MappingEntryItemProvider
d62 3
d130 60
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: CanvasMappingItemProvider.java,v 1.3 2005/08/02 13:11:51 artem Exp $
d81 1
a81 1
				 null,
d101 1
a101 1
				 null,
d121 1
a121 1
				 null,
@

