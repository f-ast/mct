head	1.5;
access;
symbols
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080425-1959:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070921-0000:1.3.2.1
	v20070903-0000:1.5
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070518-1300:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.3
	v20070228-2000:1.3
	v20070208-1800:1.3
	M4_20:1.2
	v20061222-1800:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.1
	M1_20:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.08.13.14.11.05;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	660946c066784567;

1.4
date	2007.07.04.13.22.23;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	4058468b9f0d4567;

1.3
date	2007.01.11.19.16.08;	author bblajer;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	6b9e45a68cf74567;

1.2
date	2006.10.24.17.04.13;	author bblajer;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.01.16.14.12;	author atikhomirov;	state Exp;
branches;
next	;

1.3.2.1
date	2007.09.17.16.01.52;	author bblajer;	state Exp;
branches;
next	;
commitid	7ad046eea4ed4567;


desc
@@


1.5
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@/**
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.internal.runtime.lite;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Status;
import org.eclipse.gmf.runtime.lite.shortcuts.ShortcutProvidersRegistry;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.jface.resource.ImageRegistry;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.osgi.framework.BundleContext;

/**
 * The activator class controls the plug-in life cycle
 */
public class Activator extends AbstractUIPlugin {

	// The plug-in ID
	public static final String PLUGIN_ID = "org.eclipse.gmf.runtime.lite";

	// The shared instance
	private static Activator plugin;
	
	/**
	 * The constructor
	 */
	public Activator() {
		plugin = this;
	}

	/*
	 * (non-Javadoc)
	 * @@see org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext)
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
	}

	/*
	 * (non-Javadoc)
	 * @@see org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext)
	 */
	public void stop(BundleContext context) throws Exception {
		plugin = null;
		((ShortcutProvidersRegistryImpl) ShortcutProvidersRegistry.INSTANCE).dispose();
		super.stop(context);
	}

	/**
	 * Returns the shared instance
	 *
	 * @@return the shared instance
	 */
	public static Activator getDefault() {
		return plugin;
	}

	public void logError(String error) {
		logError(error, null);
	}

	@@Override
	protected void initializeImageRegistry(ImageRegistry reg) {
		PluginImages.initialize();
		super.initializeImageRegistry(reg);
	}
	/**
	 * @@param throwable actual error or null could be passed
	 */
	public void logError(String error, Throwable throwable) {
		log(error, throwable, IStatus.ERROR);
	}

	private void debug(String message, Throwable throwable) {
		if (!isDebugging()) {
			return;
		}
		if (message != null) {
			System.err.println(message);
		}
		if (throwable != null) {
			throwable.printStackTrace();
		}
	}

	public void logWarning(String error) {
		logWarning(error, null);
	}

	public void logWarning(String error, Throwable throwable) {
		log(error, throwable, IStatus.WARNING);
	}

	private void log(String error, Throwable throwable, int severity) {
		if (error == null && throwable != null) {
			error = throwable.getMessage();
		}
		getLog().log(new Status(severity, getBundle().getSymbolicName(), IStatus.OK, error, throwable));
		debug(error, throwable);
	}

	public static ImageDescriptor getImageDescriptor(String imageFilePath) {
		return imageDescriptorFromPlugin(getDefault().getBundle().getSymbolicName(), imageFilePath);
	}
}
@


1.4
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
d16 1
d54 1
@


1.3
log
@[170248]: Beautify compartments generated for the lite version
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Eclipse.org
@


1.3.2.1
log
@Fixed copyright statements throughout the lite RT
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.2
log
@#162053: Provide Diagram Overview in Outline view for diagrams
@
text
@d17 1
d69 5
@


1.1
log
@[155040] bblajer - Common Lite runtime functionality moved to dedicated plugin
@
text
@d16 1
d102 4
@

