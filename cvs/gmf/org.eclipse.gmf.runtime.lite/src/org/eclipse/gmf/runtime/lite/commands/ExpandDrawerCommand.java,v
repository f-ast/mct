head	1.1;
access;
symbols
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070921-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070518-1300:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070208-1800:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.01.12.21.50.33;	author bblajer;	state Exp;
branches;
next	;
commitid	251e45a802a74567;


desc
@@


1.1
log
@[170340]: Expand collapsed compartments automatically when new elements are added to it;
[170341]: Expand/Collapse handles should not be available for empty compartments.
@
text
@/**
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.commands;

import org.eclipse.emf.common.command.Command;
import org.eclipse.emf.common.command.CommandWrapper;
import org.eclipse.emf.common.command.IdentityCommand;
import org.eclipse.emf.edit.command.SetCommand;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.gmf.runtime.notation.DrawerStyle;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;

/**
 * Command that, upon execution, ensures that the compartment (or another view that has a {@@link DrawerStyle) attached) is expanded.
 * @@author bblajer
 */
public class ExpandDrawerCommand extends CommandWrapper { 
	private final Command myProxy;

	public ExpandDrawerCommand(View drawer) {
		DrawerStyle style = (DrawerStyle) drawer.getStyle(NotationPackage.eINSTANCE.getDrawerStyle());
		if (style == null) {
			myProxy = IdentityCommand.INSTANCE;
		} else {
			myProxy = SetCommand.create(TransactionUtil.getEditingDomain(style), style, NotationPackage.eINSTANCE.getDrawerStyle_Collapsed(), Boolean.FALSE);
		}
	}

	@@Override
	protected Command createCommand() {
		return myProxy;
	}
}
@
