head	1.1;
access;
symbols
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070921-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070518-1300:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.03.15.16.43.32;	author bblajer;	state Exp;
branches;
next	;
commitid	61a145f977b34567;


desc
@@


1.1
log
@[164018] Command generation seperated from Parts for commands that operate with labels;
API to display label text, apply modifications and update after (external) modifications isolated from generated code;
Moved as much common generated code as possible to BaseTreeEditPart;
[165700] Support diagrams in read-only mode: all EMF commands that are not composed of standard EMF commands, but modify EMF models directly should query the editing domain for read-onliness of the resource they operate on.
@
text
@/**
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.edit.parts.labels;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.provider.IItemLabelProvider;

/**
 * Label text displayer that displays the text as provided by the <code>IItemLabelProvider</code>.
 * The label is not editable.
 */
public class ItemProviderLabelTextDisplayer extends AbstractLabelTextDisplayer {
	private final AdapterFactory myAdapterFactory;

	public ItemProviderLabelTextDisplayer(AdapterFactory adapterFactory) {
		myAdapterFactory = adapterFactory;
	}

	public String getDisplayText(EObject source) {
		if (source == null) {
			return "";
		}
		IItemLabelProvider labelProvider = (IItemLabelProvider) myAdapterFactory.adapt(source, IItemLabelProvider.class);
		if (labelProvider != null) {
			return labelProvider.getText(source);
		}
		return "";
	}

	public boolean isAffectingEvent(Notification notification) {
		if (notification == null || notification.isTouch()) {
			return false;
		}
		return true;
	}
}
@
