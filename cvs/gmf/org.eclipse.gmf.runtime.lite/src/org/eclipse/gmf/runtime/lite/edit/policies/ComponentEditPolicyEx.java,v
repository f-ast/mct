head	1.2;
access;
symbols
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070903-0000:1.2;
locks; strict;
comment	@# @;


1.2
date	2007.08.22.14.18.08;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	eba46cc45a04567;

1.1
date	2007.08.13.14.11.06;	author bblajer;	state Exp;
branches;
next	;
commitid	660946c066784567;


desc
@@


1.2
log
@It should not be possible to delete a link from diagram via UI (links are always canonical).
@
text
@/**
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.edit.policies;

import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.editpolicies.ComponentEditPolicy;
import org.eclipse.gef.requests.GroupRequest;
import org.eclipse.gmf.runtime.lite.requests.RequestConstants;

/**
 * An edit policy that, in addition to the standard delete requests, understands 
 * requests to delete only the view representation.
 */
public class ComponentEditPolicyEx extends ComponentEditPolicy {
	/**
	 * Override to contribute to the command that deletes the notational view.
	 * @@param deleteRequest the DeleteRequest
	 * @@return Command <code>null</code> or a contribution to the delete
	 */
	protected Command getDeleteViewCommand(GroupRequest deleteRequest) {
		return getDeleteViewCommand(deleteRequest, false);
	}

	/**
	 * Override to contribute to the command that deletes the notational view. 
	 * @@param deleteRequest the DeleteRequest
	 * @@param isForced <code>true</code> if the command is requested as a part of view deletion of
	 * the edit part this edit part depends on (container or a link end).
	 * @@return Command <code>null</code> or a contribution to the delete
	 */
	protected Command getDeleteViewCommand(GroupRequest deleteRequest, boolean isForced) {
		return null;
	}

	@@Override
	public Command getCommand(Request request) {
		if (RequestConstants.REQ_DELETE_VIEW.equals(request.getType())) {
			return getDeleteViewCommand((GroupRequest) request);
		}
		if (RequestConstants.REQ_FORCED_DELETE_VIEW.equals(request.getType())) {
			return getDeleteViewCommand((GroupRequest) request, true);
		}
		return super.getCommand(request);
	}
}
@


1.1
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d31 11
d50 3
@

