head	1.2;
access;
symbols
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070921-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070518-1300:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070228-2000:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.11.09.18.15.35;	author bblajer;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.02.12.29.37;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[162579] Support diagram partitioning
+
1. CustomBehaviours;
2. LayoutDiagramAction: execute the command through the command stack;
3. WrappingCommand: Workaround for a problem with StrictCompoundCommand.canExecute() in transactional editing domains
@
text
@/**
 * Copyright (c) 2006 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.ui.actions;

import org.eclipse.emf.common.command.Command;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gef.GraphicalViewer;
import org.eclipse.gef.ui.actions.WorkbenchPartAction;
import org.eclipse.gmf.runtime.lite.commands.WrappingCommand;
import org.eclipse.gmf.runtime.lite.services.IDiagramLayouter;
import org.eclipse.ui.IWorkbenchPart;


public class LayoutDiagramAction extends WorkbenchPartAction {
	public LayoutDiagramAction(IWorkbenchPart part) {
		super(part);
	}

	@@Override
	protected void init() {
		super.init();
		setId(ActionIds.LAYOUT_ALL_ACTION);
		setText("&Layout all");
		setToolTipText("Layouts the diagram");
	}

	@@Override
	protected boolean calculateEnabled() {
		return getWorkbenchPart().getAdapter(IDiagramLayouter.class) != null && getWorkbenchPart().getAdapter(GraphicalViewer.class) != null;
	}

	@@Override
	public void run() {
		GraphicalViewer viewer = (GraphicalViewer) getWorkbenchPart().getAdapter(GraphicalViewer.class);
		IDiagramLayouter layouter = (IDiagramLayouter) getWorkbenchPart().getAdapter(IDiagramLayouter.class);
		Command layoutCommand = layouter.layout((GraphicalEditPart) viewer.getContents());
		if (layoutCommand != null && layoutCommand.canExecute()) {
			TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(viewer.getContents().getModel());
			viewer.getEditDomain().getCommandStack().execute(new WrappingCommand(editingDomain, layoutCommand));
		}
	}
}
@


1.1
log
@[158023] bblajer - Diagram Layout
@
text
@d50 1
a50 1
			new WrappingCommand(editingDomain, layoutCommand).execute();
@

