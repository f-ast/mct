head	1.2;
access;
symbols
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20071108-0000:1.2
	v20071003-0000:1.1
	v20070903-0000:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.10.31.17.16.40;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	79f44728b8774567;

1.1
date	2007.07.04.13.22.22;	author bblajer;	state Exp;
branches;
next	;
commitid	4058468b9f0d4567;


desc
@@


1.2
log
@[208264]: [lite]: Implement border items
[208270]: [lite]: Feedback for element creation should show exactly where the element will be created
Move external label when a deep ancestor is moved;
NodeEditPart.xpt: add variation point to createEditPolicies;
AddNodeCommand.xpt: do not generate unused attribute
@
text
@/**
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.edit.parts.labels;

import org.eclipse.draw2d.Connection;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gmf.runtime.notation.Location;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.gmf.runtime.notation.Node;

public abstract class BaseLinkLabelEditPart extends BaseExternalLabelEditPart {
	public BaseLinkLabelEditPart(View view) {
		super(view);
	}

	@@Override
	protected void createEditPolicies() {
		super.createEditPolicies();
	}

	protected void refreshBounds() {
		Node node = (Node) getModel();
		assert node.getLayoutConstraint() instanceof Location;
		final Location location = (Location) node.getLayoutConstraint();
		GraphicalEditPart parent = (GraphicalEditPart) getParent();
		Connection connection = (Connection) parent.getFigure();
		parent.setLayoutConstraint(this, getFigure(), new org.eclipse.draw2d.ConnectionLocator(connection, getAlignment()) {
			protected org.eclipse.draw2d.geometry.Point getReferencePoint() {
				return super.getReferencePoint().translate(location.getX(), location.getY());
			}
		});
	}

	protected abstract int getAlignment();
}
@


1.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@a14 2
import org.eclipse.gef.EditPart;
import org.eclipse.gef.EditPolicy;
a15 1
import org.eclipse.gef.editpolicies.ConnectionEndpointEditPolicy;
a27 5
//		installEditPolicy(EditPolicy.CONNECTION_ENDPOINTS_ROLE, new ConnectionEndpointEditPolicy() {
//			public EditPart getHost() {
//				return getParent();
//			}
//		});
@

