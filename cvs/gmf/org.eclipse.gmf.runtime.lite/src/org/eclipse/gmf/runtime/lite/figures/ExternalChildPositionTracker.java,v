head	1.1;
access;
symbols
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.2
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20071108-0000:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.10.31.17.16.40;	author bblajer;	state Exp;
branches;
next	;
commitid	79f44728b8774567;


desc
@@


1.1
log
@[208264]: [lite]: Implement border items
[208270]: [lite]: Feedback for element creation should show exactly where the element will be created
Move external label when a deep ancestor is moved;
NodeEditPart.xpt: add variation point to createEditPolicies;
AddNodeCommand.xpt: do not generate unused attribute
@
text
@/**
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.figures;

import org.eclipse.draw2d.AncestorListener;
import org.eclipse.draw2d.IFigure;
import org.eclipse.gef.GraphicalEditPart;

/**
 * Updates position of external children when its ancestors are moved. 
 */
public class ExternalChildPositionTracker implements AncestorListener {
	private final GraphicalEditPart myEditPart;

	public ExternalChildPositionTracker(GraphicalEditPart editPart) {
		myEditPart = editPart;
	}

	public void ancestorAdded(IFigure ancestor) {
		myEditPart.getFigure().revalidate();
	}

	public void ancestorMoved(IFigure ancestor) {
		myEditPart.getFigure().revalidate();
	}

	public void ancestorRemoved(IFigure ancestor) {
		myEditPart.getFigure().revalidate();
	}
}
@
