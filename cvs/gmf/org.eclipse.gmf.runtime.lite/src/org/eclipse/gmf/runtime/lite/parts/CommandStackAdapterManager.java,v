head	1.1;
access;
symbols
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070921-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070518-1300:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061222-1800:1.1;
locks; strict;
comment	@# @;


1.1
date	2006.12.21.20.35.27;	author bblajer;	state Exp;
branches;
next	;
commitid	bce458af0084567;


desc
@@


1.1
log
@Tabbed property sheet provided for the lite runtime (if GenPropertySheet is not null);
IllegalStateException when closing editor fixed.
@
text
@/**
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.parts;

import org.eclipse.emf.common.notify.impl.AdapterImpl;
import org.eclipse.gef.commands.CommandStack;

public class CommandStackAdapterManager extends AdapterImpl {
	@@Override
	public boolean isAdapterForType(Object type) {
		return CommandStackAdapterManager.class.equals(type);
	}

	public CommandStack getCommandStack() {
		if (myCommandStack == null) {
			myCommandStack = new CommandStack();
		}
		return myCommandStack;
	}

	public void acquire() {
		myRefCount++;
	}

	public void release() {
		if (myRefCount == 0) {
			throw new IllegalStateException();
		}
		myRefCount--;
		if (myRefCount == 0) {
			myCommandStack.dispose();
			myCommandStack = null;
		}
	}

	public boolean isReleased() {
		return myRefCount == 0;
	}

	private CommandStack myCommandStack;
	private int myRefCount;
}@
