head	1.3;
access;
symbols
	v20080722-1827:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080425-1959:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070921-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070518-1300:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1;
locks; strict;
comment	@# @;


1.3
date	2007.06.21.14.08.17;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	1770467a86514567;

1.2
date	2007.03.22.16.40.50;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	6b664602b1924567;

1.1
date	2006.11.16.18.31.55;	author bblajer;	state Exp;
branches;
next	;
commitid	4bc4455cae994567;


desc
@@


1.3
log
@fix copyright years
@
text
@/**
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.parts;

import org.eclipse.core.runtime.PlatformObject;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.ui.IEditorInput;
import org.eclipse.ui.IPersistableElement;

/**
 * A simple implementation of an {@@link org.eclipse.ui.IEditorInput} that may be used to open a diagram with the editing domain
 * specified by the diagram instance.
 */
public class DiagramEditorInput extends PlatformObject implements IEditorInput {
	private final Diagram myDiagram;

	public DiagramEditorInput(Diagram diagram) {
		assert diagram != null;
		myDiagram = diagram;
	}

	public Diagram getDiagram() {
		return myDiagram;
	}

	public boolean exists() {
		return myDiagram.eResource() != null;
	}

	@@Override
	public boolean equals(Object obj) {
		if (obj instanceof DiagramEditorInput) {
			DiagramEditorInput that = (DiagramEditorInput) obj;
			return this.getDiagram().equals(that.getDiagram());
		}
		return false;
	}

	@@Override
	public int hashCode() {
		return getDiagram().hashCode();
	}

	public ImageDescriptor getImageDescriptor() {
		return null;
	}

	public String getName() {
		return myDiagram.getName();
	}

	public IPersistableElement getPersistable() {
		return null;
	}

	public String getToolTipText() {
		return getName();
	}

	public Object getAdapter(Class adapter) {
		if (adapter == URI.class) {
			return EcoreUtil.getURI(myDiagram);
		}
		return super.getAdapter(adapter);
	}
}
@


1.2
log
@DiagramEditorInputs referencing the same diagram in the same editing domain should be considered equal
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.1
log
@[164843]: Make it possible to specify the editing domain with which the editor/viewer should operate;
Refactoring to use as much common code as possible for diagram editors and viewers (for #163214);
Manifest.mf specifies J2SE1.5 as required execution environment.
@
text
@d42 14
@

