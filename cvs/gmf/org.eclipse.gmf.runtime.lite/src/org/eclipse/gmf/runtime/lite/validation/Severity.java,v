head	1.1;
access;
symbols
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070921-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070518-1300:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070208-1800:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.02.02.17.14.35;	author bblajer;	state Exp;
branches;
next	;
commitid	78e045c371794567;


desc
@@


1.1
log
@[172664]: Provide audits and metrics for Lite diagrams (including view-based and RCP) + validation decorators + validation markers (for non-RCP case);
Several templates are rewritten with xpand;
lite-specific TextEmitter is back (otherwise importManager is sometimes passed to xpand templates)
@
text
@/**
 * Copyright (c) 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer - initial API and implementation
 */
package org.eclipse.gmf.runtime.lite.validation;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.swt.graphics.Image;
import org.eclipse.ui.ISharedImages;
import org.eclipse.ui.PlatformUI;

/**
 * Represents the severity of a problem.
 * @@author bblajer
 */
public enum Severity {
	INFO,
	WARNING,
	ERROR;

	public Image getImage() {
		String key = null;
		switch (this) {
		case INFO:
			key = ISharedImages.IMG_OBJS_INFO_TSK;
			break;
		case WARNING:
			key = ISharedImages.IMG_OBJS_WARN_TSK;
			break;
		case ERROR:
			key = ISharedImages.IMG_OBJS_ERROR_TSK;
			break;
		}
		return PlatformUI.getWorkbench().getSharedImages().getImage(key);
	}

	/**
	 * Converts the severity into one of severity constants defined in {@@link IStatus}.
	 */
	public int toStatusSeverity() {
		switch (this) {
		case INFO:
			return IStatus.INFO;
		case WARNING:
			return IStatus.WARNING;
		case ERROR:
			return IStatus.ERROR;
		default:
			return IStatus.CANCEL;
		}
	}
}
@
