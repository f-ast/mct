head	1.4;
access;
symbols
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.4
date	2006.02.13.19.10.26;	author ldamus;	state dead;
branches;
next	1.3;

1.3
date	2005.10.12.15.52.16;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.31.07;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.25;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.services.action.internal.filter;

import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.core.service.IProvider;
import org.eclipse.gmf.runtime.common.core.util.HashUtil;

/**
 * An operation that performs attribute tests by determining whether a specific
 * attribute matches the state of a target object.
 * 
 * @@author khussey
 *
 */
public class TestAttributeOperation implements IOperation {

    /**
     * The target of the attribute test.
     * 
     */
    private final Object target;

    /**
     * The name of the attribute to test.
     * 
     */
    private final String name;

    /**
     * The value of the attribute to test.
     * 
     */
    private final String value;

    /**
     * Constructs a new test attribute operation with the specified target
     * object, attribute name, and attribute value.
     * 
     * @@param target The target of the attribute test.
     * @@param name The name of the attribute to test.
     * @@param value The value of the attribute to test.
     * 
     */
    public TestAttributeOperation(Object target, String name, String value) {
        super();

        assert null != target : "target cannot be null"; //$NON-NLS-1$
        assert null != name : "name cannot be null"; //$NON-NLS-1$
        assert null != value : "value cannot be null"; //$NON-NLS-1$

        this.target = target;
        this.name = name;
        this.value = value;
    }

    /**
     * Retrieves the value of the <code>target</code> instance variable.
     * 
     * @@return The value of the <code>target</code> instance variable.
     * 
     */
    public Object getTarget() {
        return target;
    }

    /**
     * Retrieves the value of the <code>name</code> instance variable.
     * 
     * @@return The value of the <code>name</code> instance variable.
     * 
     */
    public String getName() {
        return name;
    }

    /**
     * Retrieves the value of the <code>value</code> instance variable.
     * 
     * @@return The value of the <code>value</code> instance variable.
     * 
     */
    public String getValue() {
        return value;
    }

    /**
     * Retrieves a hash code value for this test attribute operation. This
     * method is supported for the benefit of hashtables such as those provided
     * by <code>java.util.HashMap</code>.
     * 
     * @@return A hash code value for this test attribute operation.
     * 
     * @@see Object#hashCode()
     * 
     */
    public int hashCode() {
        return HashUtil.hash(HashUtil.hash(getName()), getValue());
    }

    /**
     * Indicates whether some other test attribute operation is "equal to" this
     * test attribute operation.
     * 
     * @@return <code>true</code> if this test attribute operation is the same
     *          as the test attribute operation argument; <code>false</code>
     *          otherwise.
     * @@param operation The reference test attribute operation with which to
     *                   compare.
     * 
     */
    private boolean equals(TestAttributeOperation operation) {
        return getName().equals(operation.getName())
            && getValue().equals(operation.getValue());
    }

    /**
     * Indicates whether some other object is "equal to" this test attribute
     * operation.
     * 
     * @@return <code>true</code> if this test attribute operation is the same
     *          as the object argument; <code>false</code> otherwise.
     * @@param object The reference object with which to compare.
     * 
     * @@see Object#equals(Object)
     * 
     */
    public boolean equals(Object object) {
        return object instanceof TestAttributeOperation
            && equals((TestAttributeOperation) object);
    }

    /**
     * Executes this test attribute operation on the specified provider.
     * 
     * @@param provider The provider on which to execute this operation.
     * 
     * @@see org.eclipse.gmf.runtime.common.core.service.IOperation#execute(IProvider)
     * 
     */
    public Object execute(IProvider provider) {
        return Boolean.valueOf(
            ((IActionFilterProvider) provider).testAttribute(
                getTarget(),
                getName(),
                getValue()));
    }

}
@


1.3
log
@Bugzilla 112348 gmf_head anthonyh 051012 Sweep code for creation of Boolean objects
@
text
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d151 1
a151 1
        return new Boolean(
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

