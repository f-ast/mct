head	1.4;
access;
symbols
	v20081020-0700:1.4
	v20080911-1728:1.4
	v20080911-1506:1.3.6.1
	v20080722-1827:1.3
	R2_1_maintenance:1.3.0.6
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080503-1740:1.3
	v20080425-1959:1.3
	v20080407-2250:1.3
	v20080328-1605:1.3
	v20080222-1200:1.3
	v20080114-1111:1.3
	v20071003-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.4
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070330-1300:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	v20060919-0800:1.3
	M1_20:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.4
date	2008.09.11.16.39.30;	author aboyko;	state Exp;
branches;
next	1.3;
commitid	37f5b48c949c14567;

1.3
date	2005.11.04.21.27.40;	author sshaw;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2005.09.12.21.28.00;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.53;	author sshaw;	state Exp;
branches;
next	;

1.3.6.1
date	2008.09.11.16.36.18;	author aboyko;	state Exp;
branches;
next	;
commitid	37d6548c949024567;


desc
@@


1.4
log
@[238690] gmf_head aboyko 080911 [Layout] Geometric shapes are not regular
@
text
@/******************************************************************************
 * Copyright (c) 2003, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.draw2d.figures;

import org.eclipse.draw2d.geometry.Point;
import org.eclipse.draw2d.geometry.PointList;
import org.eclipse.draw2d.geometry.PrecisionPoint;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.gmf.runtime.draw2d.ui.geometry.PrecisionPointList;

/**
 * @@author jschofie
 * @@author aboyko
 *
 * This Figure represents a Octagon Figure
 */
public class GeoShapeOctagonFigure extends GeoShapePolygonFigure {
	
	private static double factor = 1.0 / (2.0 + Math.sqrt(2.0));

	/**
	 * Constructor - Creates a octagon with a given Default size
	 * 
	 * @@param width initial width of the figure
	 * @@param height initial height of the figure
	 * @@param spacing <code>int</code> that is the margin between children in logical units
	 */
	public GeoShapeOctagonFigure( int width, int height, int spacing ) {
		super(width, height, spacing);
	}
	
	/**
	 * Constructor - Creates a proper octagon with a given Default height
	 * 
	 * @@param height initial height of the figure
	 * @@param spacing <code>int</code> that is the margin between children in logical units
	 */
	public GeoShapeOctagonFigure(int size, int spacing) {
		super(size, size, spacing);
	}
		

	/**
	 * This method is used to compute the shapes polygon points.
	 * This is currently based on the shapes bounding box.
	 * 
	 * @@param rect the rectangle that the shape will fit in
	 */
	protected PointList calculatePoints(Rectangle rect) {

		double xOffset = rect.preciseWidth() * factor;
		double yOffset = rect.preciseHeight() * factor;
		
		PointList points = new PrecisionPointList();

		Point p1 = new PrecisionPoint(rect.preciseX(), rect.preciseY() + yOffset);
		Point p2 = new PrecisionPoint(rect.preciseX() + xOffset, rect.preciseY());
		Point p3 = new PrecisionPoint(rect.preciseX() + rect.preciseWidth() - xOffset, rect.preciseY());
		Point p4 = new PrecisionPoint(rect.preciseX() + rect.preciseWidth() - 1, rect.preciseY() + yOffset);
		Point p5 = new PrecisionPoint(p4.preciseX(), rect.preciseY() + rect.preciseHeight() - yOffset);
		Point p6 = new PrecisionPoint(p3.preciseX(), rect.preciseY() + rect.preciseHeight() - 1);
		Point p7 = new PrecisionPoint(p2.preciseX(), p6.preciseY());
		Point p8 = new PrecisionPoint(rect.preciseX(), p5.preciseY());
	
		points.addPoint( p1 );
		points.addPoint( p2 );
		points.addPoint( p3 );
		points.addPoint( p4 );
		points.addPoint( p5 );
		points.addPoint( p6 );
		points.addPoint( p7 );
		points.addPoint( p8 );
		points.addPoint( p1 );
		
		return points;
	}
}
@


1.3
log
@bugzilla 112788 gmf-head sshaw 051104 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d2 1
a2 1
 * Copyright (c) 2003, 2004 IBM Corporation and others.
d17 1
d19 1
d23 1
d28 2
d41 10
d61 2
a62 2
		int xOffset = (int) (rect.width * 0.275);
		int yOffset = (int) (rect.height * 0.275);
d64 1
a64 1
		PointList points = new PointList();
d66 8
a73 8
		Point p1 = new Point( rect.x, rect.y + yOffset );
		Point p2 = new Point( rect.x + xOffset, rect.y );
		Point p3 = new Point( rect.x + rect.width - xOffset, rect.y );
		Point p4 = new Point( rect.x + rect.width - 1, rect.y + yOffset );
		Point p5 = new Point( rect.x + rect.width - 1, rect.y + rect.height - yOffset );
		Point p6 = new Point( rect.x + rect.width - xOffset, rect.y + rect.height - 1 );
		Point p7 = new Point( rect.x + xOffset, rect.y + rect.height -1 );
		Point p8 = new Point( rect.x, rect.y + rect.height - yOffset );
d84 1
a84 1
			
@


1.3.6.1
log
@[238690] gmf_R2_1_maintenance aboyko 080911 [Layout] Geometric shapes are not regular
@
text
@d2 1
a2 1
 * Copyright (c) 2003, 2008 IBM Corporation and others.
a16 1
import org.eclipse.draw2d.geometry.PrecisionPoint;
a17 1
import org.eclipse.gmf.runtime.draw2d.ui.geometry.PrecisionPointList;
a20 1
 * @@author aboyko
a24 2
	
	private static double factor = 1.0 / (2.0 + Math.sqrt(2.0));
a35 10
	
	/**
	 * Constructor - Creates a proper octagon with a given Default height
	 * 
	 * @@param height initial height of the figure
	 * @@param spacing <code>int</code> that is the margin between children in logical units
	 */
	public GeoShapeOctagonFigure(int size, int spacing) {
		super(size, size, spacing);
	}
d46 2
a47 2
		double xOffset = rect.preciseWidth() * factor;
		double yOffset = rect.preciseHeight() * factor;
d49 1
a49 1
		PointList points = new PrecisionPointList();
d51 8
a58 8
		Point p1 = new PrecisionPoint(rect.preciseX(), rect.preciseY() + yOffset);
		Point p2 = new PrecisionPoint(rect.preciseX() + xOffset, rect.preciseY());
		Point p3 = new PrecisionPoint(rect.preciseX() + rect.preciseWidth() - xOffset, rect.preciseY());
		Point p4 = new PrecisionPoint(rect.preciseX() + rect.preciseWidth() - 1, rect.preciseY() + yOffset);
		Point p5 = new PrecisionPoint(p4.preciseX(), rect.preciseY() + rect.preciseHeight() - yOffset);
		Point p6 = new PrecisionPoint(p3.preciseX(), rect.preciseY() + rect.preciseHeight() - 1);
		Point p7 = new PrecisionPoint(p2.preciseX(), p6.preciseY());
		Point p8 = new PrecisionPoint(rect.preciseX(), p5.preciseY());
d69 1
a69 1
		
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d31 1
d33 2
a34 2
	public GeoShapeOctagonFigure( int width, int height ) {
		super(width, height);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2003, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

