head	1.7;
access;
symbols
	v20081020-0700:1.7
	v20080911-1728:1.7
	v20080911-1506:1.7
	v20080722-1827:1.7
	R2_1_maintenance:1.7.0.4
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080503-1740:1.7
	v20080425-1959:1.7
	v20080407-2250:1.7
	v20080328-1605:1.7
	v20080222-1200:1.7
	v20080114-1111:1.7
	v20071003-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	RC3_20:1.7
	v20070601-1400:1.7
	v20070330-1300:1.7
	M4_20:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061013-1330:1.7
	v20060919-0800:1.6.2.1
	M1_20:1.6
	v20060721-1130:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060616-1200:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051201-1800:1.4
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.7
date	2006.10.03.15.03.00;	author ahunter;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.29.20.53.51;	author cmahoney;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2006.02.27.19.45.17;	author ldamus;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.25.19.37.46;	author cmahoney;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.28.00;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.58;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.38;	author sshaw;	state Exp;
branches;
next	;

1.6.2.1
date	2006.09.13.16.43.35;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.7
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.providers;

import java.util.HashMap;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.common.core.service.AbstractProvider;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.ui.services.icon.IIconOperation;
import org.eclipse.gmf.runtime.common.ui.services.icon.IIconProvider;
import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.l10n.DiagramUIGeoshapesPluginImages;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.swt.graphics.Image;

/**
 * Provides Geoshape Icons
 * 
 * @@author jschofie
 */
public class GeoShapeIconProvider
	extends AbstractProvider
	implements IIconProvider {

	/** map for storing icon images based on semantic hint */
	private static HashMap semanticHintIconMap = new HashMap();
	static {

		semanticHintIconMap.put(GeoshapeConstants.TOOL_OVAL,
			DiagramUIGeoshapesPluginImages.IMG_OVAL);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_TRIANGLE,
			DiagramUIGeoshapesPluginImages.IMG_TRIANGLE);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_RECTANGLE,
			DiagramUIGeoshapesPluginImages.IMG_RECTANGLE);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_SHADOWRECTANGLE,
			DiagramUIGeoshapesPluginImages.IMG_SHADOWRECTANGLE);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_3DRECTANGLE,
			DiagramUIGeoshapesPluginImages.IMG_3DRECTANGLE);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_ROUNDRECTANGLE,
			DiagramUIGeoshapesPluginImages.IMG_ROUNDRECTANGLE);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_HEXAGON,
			DiagramUIGeoshapesPluginImages.IMG_HEXAGON);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_OCTAGON,
			DiagramUIGeoshapesPluginImages.IMG_OCTAGON);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_PENTAGON,
			DiagramUIGeoshapesPluginImages.IMG_PENTAGON);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_DIAMOND,
			DiagramUIGeoshapesPluginImages.IMG_DIAMOND);
		semanticHintIconMap.put(GeoshapeConstants.TOOL_CYLINDER,
			DiagramUIGeoshapesPluginImages.IMG_CYLINDER);

		semanticHintIconMap.put(GeoshapeConstants.TOOL_LINE,
			DiagramUIGeoshapesPluginImages.IMG_LINE);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.services.icon.IIconProvider#getIcon(org.eclipse.core.runtime.IAdaptable,
	 *      int)
	 */
	public Image getIcon(IAdaptable hint, int flags) {

        View view = (View) hint.getAdapter(View.class);
        if (view != null) {
            String semanticHint = view.getType();
            return getIcon(semanticHint);
        } 
        return null;
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * return an icon based on the geo shape's semantic hint (e.g. "oval") 
	 * this code was refactored from the previous method so that the compare merge
	 * extended notation item provider had a way to render the appropriate icons for
	 * its display
	 * 
	 */
	public Image getIcon(String semanticHint) {
		String fileName = (String) semanticHintIconMap.get(semanticHint);

		if (fileName != null) {
			return DiagramUIGeoshapesPluginImages.get(fileName);
		}
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.service.IProvider#provides(org.eclipse.gmf.runtime.common.core.service.IOperation)
	 */
	public boolean provides(IOperation operation) {

		IAdaptable hint = ((IIconOperation) operation).getHint();

		if (hint != null) {
            View view = (View) hint.getAdapter(View.class);
            if (view != null) {
				String semanticHint = view.getType();
				return (getIcon(semanticHint)!=null);
			}
		}

		return false;
	}

}@


1.6
log
@Bugzilla#116729 gmf_head cmahoney 060529 no icons show up for geo shapes in outline view (in tree mode)
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.6.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.5
log
@[129635] gmf_head ldamus 060227 IconOperation#getHint should be public
@
text
@d40 1
a40 1
			DiagramUIGeoshapesPluginImages.DESC_OVAL);
d42 1
a42 1
			DiagramUIGeoshapesPluginImages.DESC_TRIANGLE);
d44 1
a44 1
			DiagramUIGeoshapesPluginImages.DESC_RECTANGLE);
d46 1
a46 1
			DiagramUIGeoshapesPluginImages.DESC_SHADOWRECTANGLE);
d48 1
a48 1
			DiagramUIGeoshapesPluginImages.DESC_3DRECTANGLE);
d50 1
a50 1
			DiagramUIGeoshapesPluginImages.DESC_ROUNDRECTANGLE);
d52 1
a52 1
			DiagramUIGeoshapesPluginImages.DESC_HEXAGON);
d54 1
a54 1
			DiagramUIGeoshapesPluginImages.DESC_OCTAGON);
d56 1
a56 1
			DiagramUIGeoshapesPluginImages.DESC_PENTAGON);
d58 1
a58 1
			DiagramUIGeoshapesPluginImages.DESC_DIAMOND);
d60 1
a60 1
			DiagramUIGeoshapesPluginImages.DESC_CYLINDER);
d63 1
a63 24
			DiagramUIGeoshapesPluginImages.DESC_LINE);
	}

	/** map for storing icon images based on type */
	private static HashMap typeIconMap = new HashMap();
	static {

		typeIconMap.put(GeoshapeType.OVAL, DiagramUIGeoshapesPluginImages.DESC_OVAL);
		typeIconMap.put(GeoshapeType.TRIANGLE, DiagramUIGeoshapesPluginImages.DESC_TRIANGLE);
		typeIconMap.put(GeoshapeType.RECTANGLE,
			DiagramUIGeoshapesPluginImages.DESC_RECTANGLE);
		typeIconMap.put(GeoshapeType.SHADOWRECTANGLE,
			DiagramUIGeoshapesPluginImages.DESC_SHADOWRECTANGLE);
		typeIconMap.put(GeoshapeType.THREEDRECTANGLE,
			DiagramUIGeoshapesPluginImages.DESC_3DRECTANGLE);
		typeIconMap.put(GeoshapeType.ROUNDRECTANGLE,
			DiagramUIGeoshapesPluginImages.DESC_ROUNDRECTANGLE);
		typeIconMap.put(GeoshapeType.HEXAGON, DiagramUIGeoshapesPluginImages.DESC_HEXAGON);
		typeIconMap.put(GeoshapeType.OCTAGON, DiagramUIGeoshapesPluginImages.DESC_OCTAGON);
		typeIconMap.put(GeoshapeType.PENTAGON, DiagramUIGeoshapesPluginImages.DESC_PENTAGON);
		typeIconMap.put(GeoshapeType.DIAMOND, DiagramUIGeoshapesPluginImages.DESC_DIAMOND);
		typeIconMap.put(GeoshapeType.CYLINDER, DiagramUIGeoshapesPluginImages.DESC_CYLINDER);

		typeIconMap.put(GeoshapeType.LINE, DiagramUIGeoshapesPluginImages.DESC_LINE);
d74 6
a79 17
		if (hint != null) {
			if (hint instanceof View) {
				View view = (View) hint;

				String semanticHint = view.getType();
				return getIcon(semanticHint);
			} else {
				String fileName = (String) typeIconMap.get(hint);

				if (fileName != null) {
					return DiagramUIGeoshapesPluginImages.get(
						fileName);
				}
			}

		}
		return null;
d110 3
a112 2
			if (hint instanceof View) {
				String semanticHint = ((View)hint).getType();
a114 4
			Object type = hint.getAdapter(GeoshapeType.class);
			if (type != null && typeIconMap.containsKey(type)) {
				return true;
			}
@


1.4
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d20 1
a20 1
import org.eclipse.gmf.runtime.common.ui.services.icon.GetIconOperation;
d141 1
a141 1
		IAdaptable hint = ((GetIconOperation) operation).getHint();
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a17 2
import org.eclipse.swt.graphics.Image;

d22 1
a22 1
import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.l10n.GeoshapesResourceManager;
d24 1
d40 1
a40 1
			GeoshapeConstants.ICON_OVAL);
d42 1
a42 1
			GeoshapeConstants.ICON_TRIANGLE);
d44 1
a44 1
			GeoshapeConstants.ICON_RECTANGLE);
d46 1
a46 1
			GeoshapeConstants.ICON_SHADOWRECTANGLE);
d48 1
a48 1
			GeoshapeConstants.ICON_3DRECTANGLE);
d50 1
a50 1
			GeoshapeConstants.ICON_ROUNDRECTANGLE);
d52 1
a52 1
			GeoshapeConstants.ICON_HEXAGON);
d54 1
a54 1
			GeoshapeConstants.ICON_OCTAGON);
d56 1
a56 1
			GeoshapeConstants.ICON_PENTAGON);
d58 1
a58 1
			GeoshapeConstants.ICON_DIAMOND);
d60 1
a60 1
			GeoshapeConstants.ICON_CYLINDER);
d63 1
a63 1
			GeoshapeConstants.ICON_LINE);
d70 2
a71 2
		typeIconMap.put(GeoshapeType.OVAL, GeoshapeConstants.ICON_OVAL);
		typeIconMap.put(GeoshapeType.TRIANGLE, GeoshapeConstants.ICON_TRIANGLE);
d73 1
a73 1
			GeoshapeConstants.ICON_RECTANGLE);
d75 1
a75 1
			GeoshapeConstants.ICON_SHADOWRECTANGLE);
d77 1
a77 1
			GeoshapeConstants.ICON_3DRECTANGLE);
d79 6
a84 6
			GeoshapeConstants.ICON_ROUNDRECTANGLE);
		typeIconMap.put(GeoshapeType.HEXAGON, GeoshapeConstants.ICON_HEXAGON);
		typeIconMap.put(GeoshapeType.OCTAGON, GeoshapeConstants.ICON_OCTAGON);
		typeIconMap.put(GeoshapeType.PENTAGON, GeoshapeConstants.ICON_PENTAGON);
		typeIconMap.put(GeoshapeType.DIAMOND, GeoshapeConstants.ICON_DIAMOND);
		typeIconMap.put(GeoshapeType.CYLINDER, GeoshapeConstants.ICON_CYLINDER);
d86 1
a86 1
		typeIconMap.put(GeoshapeType.LINE, GeoshapeConstants.ICON_LINE);
d107 1
a107 1
					return GeoshapesResourceManager.getInstance().getImage(
d129 1
a129 2
			return GeoshapesResourceManager.getInstance().getImage(
				fileName);
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 7
/***************************************************************************
 Licensed Materials - Property of IBM
 (C) Copyright IBM Corp. 2004.  All Rights Reserved.

 US Government Users Restricted Rights - Use, duplication or disclosure
 restricted by GSA ADP Schedule Contract with IBM Corp.
 ***************************************************************************/
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d21 1
a21 1
import com.ibm.xtools.notation.View;
@

