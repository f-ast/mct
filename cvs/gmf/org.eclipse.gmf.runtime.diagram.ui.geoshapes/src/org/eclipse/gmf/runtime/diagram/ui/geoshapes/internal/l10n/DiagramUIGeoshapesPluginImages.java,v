head	1.3;
access;
symbols
	v20081020-0700:1.3
	v20080911-1728:1.3
	v20080911-1506:1.3
	v20080722-1827:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080503-1740:1.3
	v20080425-1959:1.3
	v20080407-2250:1.3
	v20080328-1605:1.3
	v20080222-1200:1.3
	v20080114-1111:1.3
	v20071003-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070330-1300:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	v20060919-0800:1.2.2.1
	M1_20:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051201-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.10.03.15.03.00;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.29.20.53.51;	author cmahoney;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.11.25.19.37.47;	author cmahoney;	state Exp;
branches;
next	;

1.2.2.1
date	2006.09.13.16.43.35;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.3
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.l10n;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.GeoshapesPlugin;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.swt.graphics.Image;
import org.eclipse.ui.plugin.AbstractUIPlugin;

/**
 * Bundle of all images used by this plugin. Image descriptors can be retrieved
 * by referencing the public image descriptor variable directly. The public
 * strings represent images that will be cached and can be retrieved using
 * {@@link #get(String)} which should <b>not</b> be disposed by the client.
 * 
 * @@author cmahoney
 */
public class DiagramUIGeoshapesPluginImages {

	/**
	 * The icons root directory.
	 */
	private static final String PREFIX_ROOT = "icons/"; //$NON-NLS-1$

	// Cached images that can be retrieved using the get method. The
	// corresponding image descriptor must be initialized using the
	// createAndCache() method.
	
	// Geometric Shape Icons
	public static final String IMG_OVAL = PREFIX_ROOT + "IconEllipse.gif"; //$NON-NLS-1$

	public static final String IMG_TRIANGLE = PREFIX_ROOT + "IconTriangle.gif"; //$NON-NLS-1$

	public static final String IMG_RECTANGLE = PREFIX_ROOT
		+ "IconRectangle.gif"; //$NON-NLS-1$

	public static final String IMG_SHADOWRECTANGLE = PREFIX_ROOT
		+ "IconShadowRectangle.gif"; //$NON-NLS-1$

	public static final String IMG_3DRECTANGLE = PREFIX_ROOT
		+ "Icon3DRectangle.gif"; //$NON-NLS-1$

	public static final String IMG_ROUNDRECTANGLE = PREFIX_ROOT
		+ "IconRoundRectangle.gif"; //$NON-NLS-1$

	public static final String IMG_HEXAGON = PREFIX_ROOT + "IconHexagon.gif"; //$NON-NLS-1$

	public static final String IMG_OCTAGON = PREFIX_ROOT + "IconOctagon.gif"; //$NON-NLS-1$

	public static final String IMG_PENTAGON = PREFIX_ROOT + "IconPentagon.gif"; //$NON-NLS-1$

	public static final String IMG_DIAMOND = PREFIX_ROOT + "IconDiamond.gif"; //$NON-NLS-1$

	public static final String IMG_CYLINDER = PREFIX_ROOT + "IconCylinder.gif"; //$NON-NLS-1$

	// Connection Icons
	public static final String IMG_LINE = PREFIX_ROOT + "IconLine.gif"; //$NON-NLS-1$

	// Image descriptors.

	// Geometric Shape Icons
	public static final ImageDescriptor DESC_OVAL = createAndCache(IMG_OVAL);

	public static final ImageDescriptor DESC_TRIANGLE = createAndCache(IMG_TRIANGLE);

	public static final ImageDescriptor DESC_RECTANGLE = createAndCache(IMG_RECTANGLE);

	public static final ImageDescriptor DESC_SHADOWRECTANGLE = createAndCache(IMG_SHADOWRECTANGLE);

	public static final ImageDescriptor DESC_3DRECTANGLE = createAndCache(IMG_3DRECTANGLE);

	public static final ImageDescriptor DESC_ROUNDRECTANGLE = createAndCache(IMG_ROUNDRECTANGLE);

	public static final ImageDescriptor DESC_HEXAGON = createAndCache(IMG_HEXAGON);

	public static final ImageDescriptor DESC_OCTAGON = createAndCache(IMG_OCTAGON);

	public static final ImageDescriptor DESC_PENTAGON = createAndCache(IMG_PENTAGON);

	public static final ImageDescriptor DESC_DIAMOND = createAndCache(IMG_DIAMOND);

	public static final ImageDescriptor DESC_CYLINDER = createAndCache(IMG_CYLINDER);

	// Connection Icons
	public static final ImageDescriptor DESC_LINE = createAndCache(IMG_LINE);

	/**
	 * Creates the image descriptor from the filename given.
	 * 
	 * @@param imageName
	 *            the full filename of the image
	 * @@return the new image descriptor
	 */
	private static ImageDescriptor create(String imageName) {
		return AbstractUIPlugin.imageDescriptorFromPlugin(GeoshapesPlugin
			.getPluginId(), imageName);
	}

	/**
	 * Creates the image descriptor from the filename given and caches it in the
	 * plugin's image registry.
	 * 
	 * @@param imageName
	 *            the full filename of the image
	 * @@return the new image descriptor
	 */
	private static ImageDescriptor createAndCache(String imageName) {
		ImageDescriptor result = create(imageName);
		GeoshapesPlugin.getDefault().getImageRegistry().put(imageName, result);
		return result;
	}

	/**
	 * Gets an image from the image registry. This image should not be disposed
	 * of, that is handled in the image registry. The image descriptor must have
	 * previously been cached in the image registry. The cached images for the
	 * public image names defined in this file can be retrieved using this
	 * method.
	 * 
	 * @@param imageName
	 *            the full filename of the image
	 * @@return the image or null if it has not been cached in the registry
	 */
	public static Image get(String imageName) {
		return GeoshapesPlugin.getDefault().getImageRegistry().get(imageName);
	}
}
@


1.2
log
@Bugzilla#116729 gmf_head cmahoney 060529 no icons show up for geo shapes in outline view (in tree mode)
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.2.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.1
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d79 1
a79 1
	public static final ImageDescriptor DESC_3DRECTANGLE = createAndCache(IMG_ROUNDRECTANGLE);
@

