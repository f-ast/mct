head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080807-1333:1.5
	v20080807-1325:1.4.6.1
	v20080731-1520:1.5
	v20080725-1738:1.4.6.1
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.6
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080425-1959:1.4
	v20080328-1605:1.4
	v20080222-1200:1.4
	v20080114-2222:1.4
	v20080107-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.4
	R2_0:1.4
	R4_20:1.4
	RC3_20:1.4
	v20070601-1400:1.4
	v20070518-1300:1.4
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20070208-1800:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	v20060907-1100:1.4
	M1_20:1.4
	v20060831-1500:1.4
	v20060817-1500:1.4
	v20060803-1200:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2008.07.25.21.38.56;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	44c5488a47f04567;

1.4
date	2006.04.12.17.54.55;	author ldamus;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2006.04.11.19.36.16;	author ldamus;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.26.55;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.45;	author sshaw;	state Exp;
branches;
next	;

1.4.6.1
date	2008.07.25.21.26.42;	author aboyko;	state Exp;
branches;
next	;
commitid	4e7e488a45124567;


desc
@@


1.5
log
@[240753] gmf_head aboyko 080725 DVT34: broken link in documentation
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<!--

/******************************************************************************
 * Copyright (c) 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

-->
</head>
<body>

<P>This package contains the classes that define primary classes in the Element Type framework.</P>

<P>{@@link org.eclipse.gmf.runtime.emf.type.core.IElementType}s are used to 
represent application types for the purpose of displaying and
editing model elements. These types are contributed by
extension point. A registry of such types,
({@@link org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry}) is 
maintained, and can be used to find:
<UL>
<LI>The element type that best matches a given EObject, and</LI>
<LI>The element types that
can be contained in a given feature of a given EObject</LI> 
</UL>

<P>There are two kinds of element types, {@@link org.eclipse.gmf.runtime.emf.type.core.IMetamodelType} and and
specializations of metmodel types, {@@link org.eclipse.gmf.runtime.emf.type.core.ISpecializationType}.</P>  

<P>Each metamodel type defines the base icon, name
and editing behaviour for all elements with its EClass.  Only one metamodel type can be registered for each EClass in a given metamodel. The
registry logs an error when an attempt is made to register a new metamodel type that
has the same EClass as a type that has already been registered. The second type
is rejected from the registry.</P>

<P>Specializations of metamodel types 
can define a new icon and name for their type, but can only contribute 
behaviour 'before' or 'after' the base editing behaviour. They cannot replace the base
editing behaviour.</P>

<P> Custom element types (which must be subtypes of metamodel or
specialization types) can be contributed to the registry using
a {@@link org.eclipse.gmf.runtime.emf.type.core.IElementTypeFactory}.  Custom element types
have arbitrary parameters specified by name and value pairs in XML.</P> 

<P> The {@@link org.eclipse.gmf.runtime.emf.type.core.NullElementType} can be specialized when
an element type does not directly correspond to an EClass.  Such specializations 
will not have any default editing behaviour. Instead, they will only have the 'before'
 and 'after' behaviour contributed by their edit helper advice.  As well, the
 ElementTypeRegistry will not find these specializations when asking for types
 and advice that match an existing EObject.  They will only be found when asking for
 types and advice that match the specialization types themselves.</P>

@@see org.eclipse.gmf.runtime.emf.type.core.commands
@@see org.eclipse.gmf.runtime.emf.type.core.edithelper
@@see org.eclipse.gmf.runtime.emf.type.core.requests

@@see <p><a href="../../../../../../../../../extension-points/org_eclipse_gmf_runtime_emf_type_core_elementTypes.html"><tt>org.eclipse.gmf.runtime.emf.type.core.elementTypes</tt></a> extension point</p>

@@canBeSeenBy %partners

</body>
</html>
@


1.4
log
@[136398] gmf_head ldamus 060412 Remove references to xtools from the runtime documentation
@
text
@d66 1
a66 1
@@see <p><a href="../../../../../../extension-points/org_eclipse_gmf_runtime_emf_type_core_elementTypes.html"><tt>org.eclipse.gmf.runtime.emf.type.core.elementTypes</tt></a> extension point</p>
@


1.4.6.1
log
@[240753] gmf_R2_1_maintenance aboyko 080725 DVT34: broken link in documentation
@
text
@d66 1
a66 1
@@see <p><a href="../../../../../../../../../extension-points/org_eclipse_gmf_runtime_emf_type_core_elementTypes.html"><tt>org.eclipse.gmf.runtime.emf.type.core.elementTypes</tt></a> extension point</p>
@


1.3
log
@[135099] gmf_head ldamus 060411 Remove 'Rational Modeling Platform' words from IElementType javadoc comment
@
text
@d66 1
a66 1
@@see <p><a href="../../../../../../extension-points/com_ibm_xtools_emf_type_elementTypes.html"><tt>org.eclipse.gmf.runtime.emf.type.core.elementTypes</tt></a> extension point</p>
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d25 1
a25 1
editing model elements in the Rational Modeling Platform. These types are contributed by
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d6 10
a15 9
  /*
   *+------------------------------------------------------------------------+
   *| Licensed Materials - Property of IBM                                   |
   *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
   *|                                                                        |
   *| US Government Users Restricted Rights - Use, duplication or disclosure |
   *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
   *+------------------------------------------------------------------------+
   */
@

