head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080807-1333:1.5
	v20080807-1325:1.5
	v20080731-1520:1.5
	v20080725-1738:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080425-1959:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080114-2222:1.5
	v20080107-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070518-1300:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20070208-1800:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061013-1330:1.5
	v20060919-0800:1.4.2.1
	v20060907-1100:1.4.2.1
	M1_20:1.4
	v20060831-1500:1.4
	v20060817-1500:1.4
	v20060803-1200:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2006.10.03.15.06.38;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.26.20.14.33;	author ldamus;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2006.02.13.19.12.20;	author ldamus;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.26.55;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.49;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.01.16.19.48;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.type.core.requests;

import java.util.Collections;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.gmf.runtime.emf.type.core.EditHelperContext;
import org.eclipse.gmf.runtime.emf.type.core.IClientContext;

/**
 * Request to set the value of a structural feature in a model element.
 * 
 * @@author ldamus
 */
public class SetRequest extends AbstractEditCommandRequest {

	/**
	 * The structural feature whose value will be set.
	 */
	private final EStructuralFeature feature;

	/**
	 * The owner of the structural feature.
	 */
	private final EObject elementToEdit;

	/**
	 * The new value of the structural feature.
	 */
	private final Object value;

	/**
	 * Constructs a new request to set the value of a structural feature in a
	 * model element.
	 * 
	 * @@param editingDomain
	 *            the editing domain in which I am requesting to make model
	 * @@param elementToEdit
	 *            the owner of the structural feature
	 * @@param feature
	 *            the structural feature whose value is to be set
	 * @@param value
	 *            the new value
	 */
	public SetRequest(TransactionalEditingDomain editingDomain, EObject elementToEdit,
			EStructuralFeature feature, Object value) {

		super(editingDomain);
		this.elementToEdit = elementToEdit;
		this.feature = feature;
		this.value = value;
	}
    
    /**
     * Constructs a new request to set the value of a structural feature in a
     * model element. The editing domain will be derived from the
     * <code>elementToEdit</code>.
     * 
     * @@param elementToEdit
     *            the owner of the structural feature
     * @@param feature
     *            the structural feature whose value is to be set
     * @@param value
     *            the new value
     */
    public SetRequest(EObject elementToEdit,
            EStructuralFeature feature, Object value) {

        this(TransactionUtil.getEditingDomain(elementToEdit), elementToEdit, feature, value);
    }

	/**
	 * Gets the structural feature.
	 * 
	 * @@return the structural feature
	 */
	public EStructuralFeature getFeature() {
		return feature;
	}

	/**
	 * Gets the new value.
	 * 
	 * @@return the new value
	 */
	public Object getValue() {
		return value;
	}

	/**
	 * Gets the owner of the structural feature.
	 * 
	 * @@return the owner of the structural feature
	 */
	public EObject getElementToEdit() {
		return elementToEdit;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.emf.type.core.edithelper.IEditCommandRequest#getElementsToEdit()
	 */
	public List getElementsToEdit() {
		if (elementToEdit != null) {
			return Collections.singletonList(elementToEdit);
		}
		
		return Collections.EMPTY_LIST;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.emf.type.core.edithelper.IEditCommandRequest#getEditHelperContext()
	 */
	public Object getEditHelperContext() {
		IClientContext context = getClientContext();
		
		if (context == null) {
			return elementToEdit;
		} else {
			return new EditHelperContext(elementToEdit, context);
		}
	}

}@


1.4
log
@[136760] gmf_head ldamus 060426  ElementTypeRegistry prevents deployment of different applications sharing the same metamodel
@
text
@d119 5
a123 1
		return Collections.singletonList(elementToEdit);
@


1.4.2.1
log
@[152302] gmf_R1_0_maintenance ldamus 060901 NPE while creating SetValueCommand without domain element
@
text
@d119 1
a119 5
		if (elementToEdit != null) {
			return Collections.singletonList(elementToEdit);
		}
		
		return Collections.EMPTY_LIST;
@


1.3
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d21 2
d128 7
a134 1
		return elementToEdit;
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
d19 2
d27 1
a27 2
public class SetRequest
	extends AbstractEditCommandRequest {
d48 2
d57 2
a58 2
	public SetRequest(EObject elementToEdit, EStructuralFeature feature,
			Object value) {
d60 1
a60 1
		super();
d65 18
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

