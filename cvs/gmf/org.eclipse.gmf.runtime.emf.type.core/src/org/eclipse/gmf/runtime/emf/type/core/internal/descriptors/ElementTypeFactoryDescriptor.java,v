head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080807-1333:1.5
	v20080807-1325:1.5
	v20080731-1520:1.5
	v20080725-1738:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080425-1959:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080114-2222:1.5
	v20080107-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070518-1300:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20070208-1800:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061013-1330:1.5
	v20060919-0800:1.4.2.1
	v20060907-1100:1.4
	M1_20:1.4
	v20060831-1500:1.4
	v20060817-1500:1.4
	v20060803-1200:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2006.10.03.15.06.38;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.26.15.37.20;	author ahunter;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.12.22.19.01.48;	author ldamus;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.26.55;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.48;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.16.46.15;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.type.core.internal.descriptors;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IConfigurationElement;

import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.StringStatics;
import org.eclipse.gmf.runtime.emf.type.core.IElementTypeFactory;
import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePlugin;
import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePluginStatusCodes;
import org.eclipse.gmf.runtime.emf.type.core.internal.l10n.EMFTypeCoreMessages;

import com.ibm.icu.util.StringTokenizer;

/**
 * Descriptor for an element type factory. Used to delay loading of the plugin
 * in which the factory class is defined.
 * 
 * @@author ldamus
 */
public class ElementTypeFactoryDescriptor {

	/**
	 * The configuration element.
	 */
	private final IConfigurationElement configElement;

	/**
	 * The element type factory.
	 */
	private IElementTypeFactory elementTypeFactory;

	/**
	 * The factory name.
	 */
	private String factoryName;

	/**
	 * The name of the element factory kind. Element types use the kind name to
	 * declare that they should be created by this factory.
	 */
	private final String kindName;

	/**
	 * The custom parameters that are supported by this factory.
	 */
	private final List params;

	/**
	 * Creates a new element type factory descriptor.
	 * 
	 * @@param configElement
	 *            the configuration element.
	 * @@throws CoreException
	 *             when the type ID or display name have not been correctly
	 *             specified in the configuration element
	 */
	public ElementTypeFactoryDescriptor(IConfigurationElement configElement)
		throws CoreException {

		this.configElement = configElement;

		// FACTORY NAME
		this.factoryName = configElement
			.getAttribute(ElementTypeXmlConfig.A_FACTORY);

		if (factoryName == null) {
			throw EMFTypePluginStatusCodes.getFactoryInitException(
				StringStatics.BLANK,
				EMFTypeCoreMessages.elementTypeFactory_reason_no_factory_WARN_);
		}

		// KIND NAME
		this.kindName = configElement.getAttribute(ElementTypeXmlConfig.A_KIND);
		if (kindName == null) {
			throw EMFTypePluginStatusCodes.getFactoryInitException(
				factoryName,
				EMFTypeCoreMessages.elementTypeFactory_reason_no_kind_WARN_);
		}

		// CUSTOM PARAMETERS
		String paramString = configElement
			.getAttribute(ElementTypeXmlConfig.A_PARAMS);
		params = new ArrayList();

		if (paramString != null) {
			StringTokenizer t = new StringTokenizer(paramString,
				StringStatics.COMMA);

			while (t.hasMoreTokens()) {
				String nextParam = t.nextToken().trim();
				params.add(nextParam);
			}
		}
	}

	/**
	 * Gets the element type factory. Will cause the factory to be created if
	 * this is the first time it is called.
	 * <P>
	 * May cause plugin containing the element type factory and element type
	 * class to be loaded.
	 * 
	 * @@return the element type factory
	 */
	public IElementTypeFactory getElementTypeFactory() {
		
		if (elementTypeFactory == null) {
			
			if (factoryName != null) {
				try {
					elementTypeFactory = (IElementTypeFactory) configElement
						.createExecutableExtension(ElementTypeXmlConfig.A_FACTORY);

				} catch (CoreException e) {
					Log
							.error(
									EMFTypePlugin.getPlugin(),
									EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_CLASS_NOT_FOUND,
									EMFTypeCoreMessages
											.bind(
													EMFTypeCoreMessages.elementTypeFactory_class_not_found_ERROR_,
													factoryName), e);
					// Don't recompute the factory if is has failed once.
					factoryName = null;
				}
			}
		}
		return elementTypeFactory;
	}

	/**
	 * Gets the factory kind name.
	 * 
	 * @@return the factory kind name
	 */
	public String getKindName() {
		return kindName;
	}

	/**
	 * Gets the list of custom parameter names.
	 * 
	 * @@return the list of custom parameter names
	 */
	public List getParams() {
		return params;
	}
}@


1.4
log
@[112794] gmf_head etworkowska 060126 Adopt ICU4J as part of Eclipse 3.2
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.4.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.3
log
@[120871] gmf_head ldamus 051222 org.eclipse.gmf.runtime.emf.type.core needs NLS sweep
@
text
@a15 1
import java.util.StringTokenizer;
d27 2
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d26 1
a26 1
import org.eclipse.gmf.runtime.emf.type.core.internal.l10n.ResourceManager;
d83 1
a83 1
				EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_NO_FACTORY_KEY);
d91 1
a91 1
				EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_NO_KIND_KEY);
d130 7
a136 8
						.error(
							EMFTypePlugin.getPlugin(),
							EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_CLASS_NOT_FOUND,
							ResourceManager
								.getMessage(
									EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_CLASS_NOT_FOUND_KEY,
									new Object[] {factoryName}),
							e);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

