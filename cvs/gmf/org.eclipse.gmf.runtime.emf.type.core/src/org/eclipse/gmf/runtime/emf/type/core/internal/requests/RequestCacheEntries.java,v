head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080807-1333:1.2
	v20080807-1325:1.2
	v20080731-1520:1.2
	v20080725-1738:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20080328-1605:1.2
	v20080222-1200:1.2
	v20080114-2222:1.2
	v20080107-1111:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.2
	v20060919-0800:1.1.2.1
	v20060907-1100:1.1.2.1
	v20060831-1500:1.1.2.1
	R1_0_maintenance:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2006.10.03.15.06.38;	author ahunter;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.28.20.36.12;	author ldamus;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.08.28.20.36.12;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.type.core.internal.requests;

import java.util.Map;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.runtime.emf.type.core.ClientContextManager;
import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
import org.eclipse.gmf.runtime.emf.type.core.IClientContext;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
import org.eclipse.gmf.runtime.emf.type.core.edithelper.IEditHelperAdvice;

/**
 * @@author Yasser Lulu
 *
 */
public final class RequestCacheEntries {
	

	public static final String Cache_Maps = "Cache_Maps";//$NON-NLS-1$

	public static final String Client_Context = "Client_Context";//$NON-NLS-1$

	public static final String Element_Type = "Element_Type";//$NON-NLS-1$	

	public static final String EditHelper_Advice = "EditHelper_Advice";//$NON-NLS-1$

	public static final String Affected_Files = "Affected_Files";//$NON-NLS-1$

	public static final String CrossRefAdapter = "CrossRefAdapter";//$NON-NLS-1$
	
	public static final String Checked_Elements = "Checked_Elements";//$NON-NLS-1$
	public static final String Dependent_Elements = "Dependent_Elements";//$NON-NLS-1$
	
	private RequestCacheEntries() {
		//
	}

	public static final void initializeEObjCache(EObject eObj, Map map) {
		IClientContext clientContext = ClientContextManager.getInstance()
			.getClientContextFor(eObj);
		map.put(Client_Context, clientContext);
		IElementType type = ElementTypeRegistry.getInstance().getElementType(
			eObj, clientContext);
		map.put(Element_Type, type);
		IEditHelperAdvice[] advices = ElementTypeRegistry.getInstance()
			.getEditHelperAdvice(eObj, clientContext);
		map.put(EditHelper_Advice, advices);		
	}

}
@


1.1
log
@file RequestCacheEntries.java was initially added on branch R1_0_maintenance.
@
text
@d1 61
@


1.1.2.1
log
@[155233] gmf_R1_0_maintenance ylulu 060828 Deleting and element using the EditHelpers could be enhanced
@
text
@a0 61
/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.type.core.internal.requests;

import java.util.Map;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.runtime.emf.type.core.ClientContextManager;
import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
import org.eclipse.gmf.runtime.emf.type.core.IClientContext;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
import org.eclipse.gmf.runtime.emf.type.core.edithelper.IEditHelperAdvice;

/**
 * @@author Yasser Lulu
 *
 */
public final class RequestCacheEntries {
	

	public static final String Cache_Maps = "Cache_Maps";//$NON-NLS-1$

	public static final String Client_Context = "Client_Context";//$NON-NLS-1$

	public static final String Element_Type = "Element_Type";//$NON-NLS-1$	

	public static final String EditHelper_Advice = "EditHelper_Advice";//$NON-NLS-1$

	public static final String Affected_Files = "Affected_Files";//$NON-NLS-1$

	public static final String CrossRefAdapter = "CrossRefAdapter";//$NON-NLS-1$
	
	public static final String Checked_Elements = "Checked_Elements";//$NON-NLS-1$
	public static final String Dependent_Elements = "Dependent_Elements";//$NON-NLS-1$
	
	private RequestCacheEntries() {
		//
	}

	public static final void initializeEObjCache(EObject eObj, Map map) {
		IClientContext clientContext = ClientContextManager.getInstance()
			.getClientContextFor(eObj);
		map.put(Client_Context, clientContext);
		IElementType type = ElementTypeRegistry.getInstance().getElementType(
			eObj, clientContext);
		map.put(Element_Type, type);
		IEditHelperAdvice[] advices = ElementTypeRegistry.getInstance()
			.getEditHelperAdvice(eObj, clientContext);
		map.put(EditHelper_Advice, advices);		
	}

}
@

