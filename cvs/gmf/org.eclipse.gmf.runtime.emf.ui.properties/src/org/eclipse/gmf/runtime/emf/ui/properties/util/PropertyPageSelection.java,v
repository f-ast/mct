head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080425-1959:1.5
	v20080222-1200:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070330-1300:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20061012-1100:1.4.2.1
	v20060925-1700:1.4.2.1
	v20060919-0800:1.4.2.1
	M1_20:1.4
	v20060810-1700:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060531-1730:1.4
	I20060505-1400:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2006.10.03.15.06.35;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.13.19.11.13;	author ldamus;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.11.09.21.16.55;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.24.06;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.54;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.16.46.20;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.ui.properties.util;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.runtime.common.ui.services.action.filter.ActionFilterService;
import org.eclipse.gmf.runtime.common.ui.services.parser.ParserService;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.emf.ui.properties.internal.l10n.EMFUIPropertiesMessages;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.jface.viewers.CellEditor;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.ui.IActionFilter;
import org.eclipse.ui.model.IWorkbenchAdapter;
import org.eclipse.ui.views.properties.IPropertySource;

/**
 * A structured selection for use in the property page dialog.  It
 * adapts to the following types
 * <P>
 * <UL>
 * <LI>IElement</LI>
 * <LI>IStructuredSelection</LI>
 * <LI>IActionFilter</LI>
 * <LI>IPropertySource</LI>
 * <LI>IWorkbenchAdapter</LI>
 * <LI>CellEditor</LI>
 * </UL>
 * <P>
 * 
 * @@author ldamus
 */
public class PropertyPageSelection
    implements IAdaptable, IStructuredSelection {

    /**
     * My selection
     */
    private final IStructuredSelection selection;

    /**
     * My workbench adapter 
     */
    private IWorkbenchAdapter workbenchAdapter;

    /**
     * Constructs a new instance with a single selected object
     * 
     * @@param selectedObject The selected object
     */
    public PropertyPageSelection(Object selectedObject) {
        this(new ArrayList(Collections.singleton(selectedObject)));
    }

    /**
     * Constructs a new instance with a list of selected objects.
     * 
     * @@param selectedObjects The objects that are selected
     */
    public PropertyPageSelection(List selectedObjects) {
        super();
        selection = new StructuredSelection(selectedObjects);
    }

    /**
     * Returns my selection
     * 
     * @@return my selection
     */
    private IStructuredSelection getSelection() {
        return selection;
    }

    /**
     * Gets my workbench adapter. If I contain more than a
     * single selection, the label will be "Selected Elements". If
     * I contain a single selection, the label will be my IElement
     * name. This label is used in the title of the <code>PropertyDialog</code>.
     * 
     * @@return my workbench adapter
     */
    private IWorkbenchAdapter getWorkbenchAdapter() {

        if (workbenchAdapter == null) {
            workbenchAdapter = new IWorkbenchAdapter() {

                public Object[] getChildren(Object o) {
                    return null;
                }
                public ImageDescriptor getImageDescriptor(Object object) {
                    return null;
                }
                public String getLabel(Object o) {
                    if (getSelection().size() > 1) {
                        return EMFUIPropertiesMessages.PropertyPageSelection_PropertyDialog_selectedElementsTitle;
                    } else {
                        EObject element =
                            (EObject) getAdapter(EObject.class);
                        if (element != null) {
                            return ParserService.getInstance().getPrintString(
                                new EObjectAdapter(element));
                        } else {
                            return EMFUIPropertiesMessages.PropertyPageSelection_PropertyDialog_selectedElementsTitle;
                        }

                    }
                }
                public Object getParent(Object o) {
                    return null;
                }
            };
        }

        return workbenchAdapter;
    }

    /**
     * @@see org.eclipse.core.runtime.IAdaptable#getAdapter(Class)
     */
    public Object getAdapter(Class adapter) {

        if (EObject.class.equals(adapter)) {
            return ((IAdaptable) getSelection().getFirstElement()).getAdapter(
            		EObject.class);

        } else if (IStructuredSelection.class.equals(adapter)) {
            return this;

        } else if (IActionFilter.class.equals(adapter)) {
            return ActionFilterService.getInstance();

        } else if (IPropertySource.class.equals(adapter)) {
            return ((IAdaptable) getSelection().getFirstElement()).getAdapter(
                IPropertySource.class);

        } else if (IWorkbenchAdapter.class.equals(adapter)) {
            return getWorkbenchAdapter();

        } else if (CellEditor.class.equals(adapter)) {
            return ((IAdaptable) getSelection().getFirstElement()).getAdapter(
                CellEditor.class);
        }
        return null;
    }

    /**
     * Returns whether this selection is empty.
     * 
     * @@return <code>true</code> if this selection is empty,
     *   and <code>false</code> otherwise
     */
    public boolean isEmpty() {
        return getSelection().isEmpty();
    }

    /**
     * Returns the first element in this selection, or <code>null</code>
     * if the selection is empty.
     *
     * @@return an element, or <code>null</code> if none
     */
    public Object getFirstElement() {
        return getSelection().getFirstElement();
    }

    /**
     * Returns an iterator over the elements of this selection.
     *
     * @@return an iterator over the selected elements
     */
    public Iterator iterator() {
        return getSelection().iterator();
    }

    /**
     * Returns the number of elements selected in this selection.
     *
     * @@return the number of elements selected
     */
    public int size() {
        return getSelection().size();
    }

    /**
     * Returns the elements in this selection as an array.
     *
     * @@return the selected elements as an array
     */
    public Object[] toArray() {
        return getSelection().toArray();
    }

    /**
     * Returns the elements in this selection as a <code>List</code>.
     *
     * @@return the selected elements as a list
     */
    public List toList() {
        return getSelection().toList();
    }

}
@


1.4
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.4.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.3
log
@Bugzilla Bug 109445 gmf_head etworkow 051109 New Eclipse Resources Bundles Should Be Used
@
text
@d21 4
a32 5
import org.eclipse.gmf.runtime.common.ui.services.action.filter.ActionFilterService;
import org.eclipse.gmf.runtime.common.ui.services.parser.ParserService;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.emf.ui.properties.internal.l10n.EMFUIPropertiesMessages;

d94 1
a94 2
     * name. This label is used in the title of the
     * {@@link org.eclipse.ui.internal.dialogs.PropertyDialog}.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d32 1
a32 1
import org.eclipse.gmf.runtime.emf.ui.properties.internal.l10n.EMFPropertiesResourceManager;
a53 6
     * The text used in the title of the property dialog when
     * there is more than a single element selected.
     */
    private static final String SELECTED_ELEMENTS = EMFPropertiesResourceManager.getInstance().getString("PropertyPageSelection.PropertyDialog.selectedElementsTitle"); //$NON-NLS-1$

    /**
d113 1
a113 1
                        return SELECTED_ELEMENTS;
d121 1
a121 1
                            return SELECTED_ELEMENTS;
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

