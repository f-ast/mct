head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070330-1300:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20061012-1100:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060810-1700:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	I20060505-1400:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.12.21.24.06;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.54;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.ui.properties.util;

import org.eclipse.emf.ecore.EObject;

/**
 * Helper class used by boolean-based property descriptors and cell editors. It
 * provides for conversion from/to objects used by cell editors. It also
 * provides abstract methods to set/get the actual property.
 * 
 * @@author dmisic
 */
public abstract class BooleanPropertyHelper {

	/**
	 * Integer constant representing the boolean 'false'
	 */
	private final static Integer INT_FALSE = new Integer(0);

	/**
	 * Integer constant representing the boolean 'true'
	 */
	private final static Integer INT_TRUE = new Integer(1);

	/**
	 * The element that owns the property
	 */
	private EObject element;

	/**
	 * Constructor
	 * 
	 * @@param element The element that owns the property
	 */
	public BooleanPropertyHelper(EObject element) {
		super();
		this.element = element;
	}

	/**
	 * Checks if the provided object is compatible with the boolean based
	 * property. This implementation requires the value to be of type Integer.
	 * This method may be overwritten but only in conjunction with setValue().
	 * 
	 * @@param obj Object to be checked
	 * @@return 'true' if the object is compatible
	 */
	public boolean isCompatible(Object obj) {
		return (obj != null && obj instanceof Integer);
	}

	/**
	 * Sets the value to the boolean property. If the object (value) is not
	 * compatible, throws the IllegalArgumentException exception. This
	 * implementation requires the value to be of type Integer. This method may
	 * be overwritten but only in conjunction with isCompatible().
	 * 
	 * @@param value Value to be set
	 */
	public void setValue(Object value) {
		if (!isCompatible(value)) {
			throw new IllegalArgumentException();
		}

		boolean boolValue = false;
		if (((Integer) value).intValue() == 1) {
			boolValue = true;
		}
		setBooleanValue(boolValue);
	}

	/**
	 * Clients should overwrite to set the boolean value to the property.
	 * 
	 * @@param value Boolean value to be set
	 */
	abstract protected void setBooleanValue(boolean value);

	/**
	 * Gets the Integer representation of the boolean property.
	 * 
	 * @@return Integer representation of the boolean property
	 */
	public Integer getValue() {
		if (getBooleanValue()) {
			return INT_TRUE;
		}
		return INT_FALSE;
	}

	/**
	 * Clients should overwrite to get the boolean value from the property.
	 * 
	 * @@return Boolean value from the property
	 */
	abstract protected boolean getBooleanValue();

	/**
	 * @@return Returns the element that owns the property.
	 */
	public EObject getElement() {
		return element;
	}
}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

