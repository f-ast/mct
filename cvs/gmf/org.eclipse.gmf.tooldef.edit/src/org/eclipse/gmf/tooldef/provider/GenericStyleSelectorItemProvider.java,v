head	1.6;
access;
symbols
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080417-1610:1.6
	v20080222-1200:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070601-1400:1.6
	v20070413-1300:1.6
	v20070403-1500:1.6
	v20070330-1300:1.5
	v20060316-0600:1.5
	v20070208-1800:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061013-1330:1.3
	M1_20:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	I20060505-1400:1.3
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.04.03.16.28.51;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	5c30461280bf4567;

1.5
date	2007.03.14.12.59.28;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	112745f7f1ad4567;

1.4
date	2006.10.31.14.44.56;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.02.18.25.48;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.10.18.15.01;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.09.20.28.46;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.tooldef.provider;

import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.tooldef.GMFToolPackage;
import org.eclipse.gmf.tooldef.GenericStyleSelector;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.tooldef.GenericStyleSelector} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenericStyleSelectorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider,
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenericStyleSelectorItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addValuesPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Values feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addValuesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add(createItemPropertyDescriptor(((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory(), getResourceLocator(),
				getString("_UI_GenericStyleSelector_values_feature"), getString("_UI_PropertyDescriptor_description", "_UI_GenericStyleSelector_values_feature", "_UI_GenericStyleSelector_type"),
				GMFToolPackage.eINSTANCE.getGenericStyleSelector_Values(), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
	}

	/**
	 * This returns GenericStyleSelector.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenericStyleSelector"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		return getString("_UI_GenericStyleSelector_type");
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenericStyleSelector.class)) {
		case GMFToolPackage.GENERIC_STYLE_SELECTOR__VALUES:
			fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
			return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return GMFToolEditPlugin.INSTANCE;
	}

}
@


1.5
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1
import org.eclipse.emf.edit.command.CommandParameter;
d116 2
a117 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d123 1
a123 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.4
log
@regenerated with EMF 2.2 release
@
text
@d15 1
d19 1
d53 2
a54 1
	public List getPropertyDescriptors(Object object) {
d81 1
d92 1
d104 1
d123 2
a124 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d134 1
@


1.3
log
@regenerated with latest EMF
@
text
@d69 1
a69 1
				GMFToolPackage.eINSTANCE.getGenericStyleSelector_Values(), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
@


1.2
log
@multiple values in the generic style selector
@
text
@d79 1
a79 1
		return getResourceLocator().getImage("full/obj16/GenericStyleSelector");
@


1.1
log
@#114197 tooling definition is out for real world.
@
text
@a13 1

a14 1

a23 2

import org.eclipse.gmf.tooldef.AppearanceStyle;
d55 1
a55 1
			addValuePropertyDescriptor(object);
d61 1
a61 1
	 * This adds a property descriptor for the Value feature.
d66 1
a66 1
	protected void addValuePropertyDescriptor(Object object) {
d68 2
a69 2
				getString("_UI_GenericStyleSelector_value_feature"), getString("_UI_PropertyDescriptor_description", "_UI_GenericStyleSelector_value_feature", "_UI_GenericStyleSelector_type"),
				GMFToolPackage.eINSTANCE.getGenericStyleSelector_Value(), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
d89 1
a89 3
		AppearanceStyle labelValue = ((GenericStyleSelector) object).getValue();
		String label = labelValue == null ? null : labelValue.toString();
		return label == null || label.length() == 0 ? getString("_UI_GenericStyleSelector_type") : getString("_UI_GenericStyleSelector_type") + " " + label;
d103 1
a103 1
		case GMFToolPackage.GENERIC_STYLE_SELECTOR__VALUE:
@

