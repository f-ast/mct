head	1.3;
access;
symbols
	v20080722-1827:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080610-1132:1.3
	v20080417-1610:1.3
	v20080222-1200:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070413-1300:1.3
	v20070403-1500:1.3
	v20070330-1300:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	M1_20:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1
	v20060519-0800:1.1
	I20060505-1400:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2007.04.03.16.28.51;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	5c30461280bf4567;

1.2
date	2007.03.14.12.59.28;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	112745f7f1ad4567;

1.1
date	2006.01.09.20.28.46;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.tooldef.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.gmf.tooldef.util.GMFToolAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GMFToolItemProviderAdapterFactory extends GMFToolAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GMFToolItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.ToolRegistry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ToolRegistryItemProvider toolRegistryItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.ToolRegistry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createToolRegistryAdapter() {
		if (toolRegistryItemProvider == null) {
			toolRegistryItemProvider = new ToolRegistryItemProvider(this);
		}

		return toolRegistryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.PaletteSeparator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PaletteSeparatorItemProvider paletteSeparatorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.PaletteSeparator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPaletteSeparatorAdapter() {
		if (paletteSeparatorItemProvider == null) {
			paletteSeparatorItemProvider = new PaletteSeparatorItemProvider(this);
		}

		return paletteSeparatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.ToolGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ToolGroupItemProvider toolGroupItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.ToolGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createToolGroupAdapter() {
		if (toolGroupItemProvider == null) {
			toolGroupItemProvider = new ToolGroupItemProvider(this);
		}

		return toolGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.Palette} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PaletteItemProvider paletteItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.Palette}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPaletteAdapter() {
		if (paletteItemProvider == null) {
			paletteItemProvider = new PaletteItemProvider(this);
		}

		return paletteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.StandardTool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected StandardToolItemProvider standardToolItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.StandardTool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createStandardToolAdapter() {
		if (standardToolItemProvider == null) {
			standardToolItemProvider = new StandardToolItemProvider(this);
		}

		return standardToolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.CreationTool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CreationToolItemProvider creationToolItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.CreationTool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCreationToolAdapter() {
		if (creationToolItemProvider == null) {
			creationToolItemProvider = new CreationToolItemProvider(this);
		}

		return creationToolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.GenericTool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenericToolItemProvider genericToolItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.GenericTool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenericToolAdapter() {
		if (genericToolItemProvider == null) {
			genericToolItemProvider = new GenericToolItemProvider(this);
		}

		return genericToolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.Separator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SeparatorItemProvider separatorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.Separator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createSeparatorAdapter() {
		if (separatorItemProvider == null) {
			separatorItemProvider = new SeparatorItemProvider(this);
		}

		return separatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.PredefinedItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PredefinedItemItemProvider predefinedItemItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.PredefinedItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPredefinedItemAdapter() {
		if (predefinedItemItemProvider == null) {
			predefinedItemItemProvider = new PredefinedItemItemProvider(this);
		}

		return predefinedItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.PredefinedMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PredefinedMenuItemProvider predefinedMenuItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.PredefinedMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPredefinedMenuAdapter() {
		if (predefinedMenuItemProvider == null) {
			predefinedMenuItemProvider = new PredefinedMenuItemProvider(this);
		}

		return predefinedMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.MenuAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected MenuActionItemProvider menuActionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.MenuAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createMenuActionAdapter() {
		if (menuActionItemProvider == null) {
			menuActionItemProvider = new MenuActionItemProvider(this);
		}

		return menuActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.ItemRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ItemRefItemProvider itemRefItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.ItemRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createItemRefAdapter() {
		if (itemRefItemProvider == null) {
			itemRefItemProvider = new ItemRefItemProvider(this);
		}

		return itemRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.ContextMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ContextMenuItemProvider contextMenuItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.ContextMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createContextMenuAdapter() {
		if (contextMenuItemProvider == null) {
			contextMenuItemProvider = new ContextMenuItemProvider(this);
		}

		return contextMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.PopupMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PopupMenuItemProvider popupMenuItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.PopupMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPopupMenuAdapter() {
		if (popupMenuItemProvider == null) {
			popupMenuItemProvider = new PopupMenuItemProvider(this);
		}

		return popupMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.MainMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected MainMenuItemProvider mainMenuItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.MainMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createMainMenuAdapter() {
		if (mainMenuItemProvider == null) {
			mainMenuItemProvider = new MainMenuItemProvider(this);
		}

		return mainMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.Toolbar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ToolbarItemProvider toolbarItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.Toolbar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createToolbarAdapter() {
		if (toolbarItemProvider == null) {
			toolbarItemProvider = new ToolbarItemProvider(this);
		}

		return toolbarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.DefaultImage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DefaultImageItemProvider defaultImageItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.DefaultImage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createDefaultImageAdapter() {
		if (defaultImageItemProvider == null) {
			defaultImageItemProvider = new DefaultImageItemProvider(this);
		}

		return defaultImageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.BundleImage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected BundleImageItemProvider bundleImageItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.BundleImage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createBundleImageAdapter() {
		if (bundleImageItemProvider == null) {
			bundleImageItemProvider = new BundleImageItemProvider(this);
		}

		return bundleImageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.tooldef.GenericStyleSelector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenericStyleSelectorItemProvider genericStyleSelectorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.tooldef.GenericStyleSelector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenericStyleSelectorAdapter() {
		if (genericStyleSelectorItemProvider == null) {
			genericStyleSelectorItemProvider = new GenericStyleSelectorItemProvider(this);
		}

		return genericStyleSelectorItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@@link #changeNotifier} and to {@@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void dispose() {
		if (toolRegistryItemProvider != null)
			toolRegistryItemProvider.dispose();
		if (paletteSeparatorItemProvider != null)
			paletteSeparatorItemProvider.dispose();
		if (toolGroupItemProvider != null)
			toolGroupItemProvider.dispose();
		if (paletteItemProvider != null)
			paletteItemProvider.dispose();
		if (standardToolItemProvider != null)
			standardToolItemProvider.dispose();
		if (creationToolItemProvider != null)
			creationToolItemProvider.dispose();
		if (genericToolItemProvider != null)
			genericToolItemProvider.dispose();
		if (separatorItemProvider != null)
			separatorItemProvider.dispose();
		if (predefinedItemItemProvider != null)
			predefinedItemItemProvider.dispose();
		if (predefinedMenuItemProvider != null)
			predefinedMenuItemProvider.dispose();
		if (menuActionItemProvider != null)
			menuActionItemProvider.dispose();
		if (itemRefItemProvider != null)
			itemRefItemProvider.dispose();
		if (contextMenuItemProvider != null)
			contextMenuItemProvider.dispose();
		if (popupMenuItemProvider != null)
			popupMenuItemProvider.dispose();
		if (mainMenuItemProvider != null)
			mainMenuItemProvider.dispose();
		if (toolbarItemProvider != null)
			toolbarItemProvider.dispose();
		if (defaultImageItemProvider != null)
			defaultImageItemProvider.dispose();
		if (bundleImageItemProvider != null)
			bundleImageItemProvider.dispose();
		if (genericStyleSelectorItemProvider != null)
			genericStyleSelectorItemProvider.dispose();
	}

}
@


1.2
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a25 1

@


1.1
log
@#114197 tooling definition is out for real world.
@
text
@d62 1
a62 1
	protected Collection supportedTypes = new ArrayList();
d92 1
d115 1
d138 1
d161 1
d184 1
d207 1
d230 1
d253 1
d276 1
d299 1
d322 1
d345 1
d368 1
d391 1
d414 1
d437 1
d460 1
d483 1
d506 1
d540 1
d551 1
d561 1
d565 1
a565 1
			if (!(type instanceof Class) || (((Class) type).isInstance(adapter))) {
@

