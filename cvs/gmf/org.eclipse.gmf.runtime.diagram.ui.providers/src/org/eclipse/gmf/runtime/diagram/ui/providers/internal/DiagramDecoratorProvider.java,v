head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080916-2008:1.2
	v20080911-1728:1.2
	v20080722-1827:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080503-1740:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080407-2250:1.2
	v20080407-0930:1.1
	v20080404-1111:1.1
	v20080328-1605:1.1
	v20080222-1200:1.1
	v20080215-1500:1.1
	v20080201-2010:1.1
	v20080201-0201:1.1
	v20071130-1111:1.1
	v20071108-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.6
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070518-1300:1.1
	bugzilla111892_group_support:1.1.0.4
	Root_bugzilla111892_group_support:1.1
	v20070504-1000:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070330-1300:1.1
	v20060316-0600:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061218-1500:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061013-1330:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060803-1200:1.1
	v20060728-0500:1.1
	v20060721-1130:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060519-0800:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060202-1415:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2008.04.08.02.16.28;	author ahunter;	state Exp;
branches;
next	1.1;
commitid	4c9c47fad57b4567;

1.1
date	2005.11.02.23.30.53;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.providers.internal;

import org.eclipse.core.runtime.Assert;
import org.eclipse.gef.EditPart;
import org.eclipse.gmf.runtime.common.core.service.AbstractProvider;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IPrimaryEditPart;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.CreateDecoratorsOperation;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorKeys;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorProvider;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorTarget;
import org.eclipse.gmf.runtime.notation.View;

/**
 * Provides decorators for the GMF diagram layer.
 *
 * @@author cmahoney
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.providers.*
 */
public class DiagramDecoratorProvider
	extends AbstractProvider
	implements IDecoratorProvider {

	public void createDecorators(IDecoratorTarget decoratorTarget) {
		EditPart ep = (EditPart)decoratorTarget.getAdapter(EditPart.class);
		if (ep != null && ep instanceof IPrimaryEditPart) {
			decoratorTarget.installDecorator(IDecoratorKeys.BOOKMARK,
				new BookmarkDecorator(decoratorTarget));
			Object model = ep.getModel();
			if(!(model instanceof View))
				return;
			if (((View)model).getElement() != null) {
				// needs to have a reference that isn't null (i.e. have a semantic element)
				decoratorTarget.installDecorator(IDecoratorKeys.UNRESOLVED_VIEW,
					new UnresolvedViewDecorator(decoratorTarget));
			}
		}
	}

	public boolean provides(IOperation operation) {
		Assert.isNotNull(operation);

		if (!(operation instanceof CreateDecoratorsOperation)) {
			return false;
		}

		IDecoratorTarget decoratorTarget = ((CreateDecoratorsOperation) operation)
			.getDecoratorTarget();
		return decoratorTarget.getAdapter(View.class) != null;
	}

}
@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d14 1
a15 2
import org.eclipse.jface.util.Assert;

@

