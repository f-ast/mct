head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080916-2008:1.5
	v20080911-1728:1.5
	v20080722-1827:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.6
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080503-1740:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080407-2250:1.5
	v20080407-0930:1.5
	v20080404-1111:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080201-2010:1.5
	v20080201-0201:1.5
	v20071130-1111:1.5
	v20071108-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070518-1300:1.5
	bugzilla111892_group_support:1.5.0.2
	Root_bugzilla111892_group_support:1.5
	v20070504-1000:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070330-1300:1.5
	v20060316-0600:1.5
	v20070228-2000:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	M4_20:1.5
	v20061218-1500:1.4.2.1
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20060919-0800:1.4.2.1
	M1_20:1.4
	v20060803-1200:1.4
	v20060728-0500:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060519-0800:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051201-1800:1.3
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2006.10.03.15.03.01;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.07.15.19.01;	author mmostafa;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.12.01.15.32.24;	author mmostafa;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.25.19.37.44;	author cmahoney;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.02.23.30.54;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.16.43.25;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.diagram.ui.providers.internal;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.Platform;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.gef.EditPart;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.ui.services.properties.GetPropertySourceOperation;
import org.eclipse.gmf.runtime.common.ui.services.properties.ICompositePropertySource;
import org.eclipse.gmf.runtime.common.ui.services.properties.IPropertiesProvider;
import org.eclipse.gmf.runtime.common.ui.services.properties.PropertiesService;
import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.properties.descriptors.NotationPropertySource;
import org.eclipse.gmf.runtime.diagram.ui.providers.internal.l10n.DiagramUIProvidersMessages;
import org.eclipse.gmf.runtime.emf.ui.properties.providers.GenericEMFPropertiesProvider;
import org.eclipse.gmf.runtime.notation.Style;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.ui.views.properties.IPropertySource;

/**
 * @@author Tauseef A. Israr Created: Nov 15, 2002
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.providers.*
 * 
 * This is a properties provider class based on Properties Service Provider
 * infrastructure.
 */
public class DiagramPropertiesProvider
	extends GenericEMFPropertiesProvider
	implements IPropertiesProvider {

	public static String VIEW_CATEGORY = DiagramUIProvidersMessages.DiagramPropertiesProvider_viewCategory;

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.emf.ui.properties.providers.GenericEMFPropertiesProvider#provides(org.eclipse.gmf.runtime.common.core.service.IOperation)
	 */
	public boolean provides(IOperation operation) {

		if (operation == null)
			return false;

		if (operation instanceof GetPropertySourceOperation) {
			Object object = ((GetPropertySourceOperation) operation)
				.getObject();

			if (object == null)
				return false;

			if (object instanceof View)
				return true;
			
			if(object instanceof Style)
				return true;
			
			if (object instanceof GraphicalEditPart &&
					!((GraphicalEditPart)object).hasNotationView())
					return false;
			
			return object instanceof EditPart && ((EditPart) object).getModel() instanceof View;

		}

		return false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.services.internal.properties.XToolsAbstractPropertiesProvider#getPropertySource(org.eclipse.ui.views.properties.IPropertySource,
	 *      java.lang.Object)
	 */
	public ICompositePropertySource getPropertySource(Object object) {

		if (object instanceof View || object instanceof Style )
			return super.getPropertySource(object);
		
		if (object instanceof EditPart) {
			Object model = ((EditPart) object).getModel();
			if (model instanceof View) {
				View view = (View) model;
				return super.getPropertySource(view);
			}
		}

		return null;
	}

	/*
	 * @@param eObject @@return
	 */
	protected ICompositePropertySource getElementPropertySource(EObject eObject) {

		IPropertySource elementPropertySource = null;

		if (eObject instanceof IAdaptable)
			elementPropertySource = (IPropertySource) Platform
				.getAdapterManager().getAdapter(eObject, IPropertySource.class);

		if (elementPropertySource == null)
			elementPropertySource = PropertiesService.getInstance()
				.getPropertySource(eObject);

		return (elementPropertySource instanceof ICompositePropertySource) ? (ICompositePropertySource) elementPropertySource
			: null;

	}

	/*
	 * (non-Javadoc) Instantiates and returns property source instance
	 * appropriate for this provider
	 *  
	 */
	protected ICompositePropertySource createPropertySource(Object object,
			IItemPropertySource itemPropertySource) {

		return new NotationPropertySource(object, itemPropertySource,
			VIEW_CATEGORY);
	}

}@


1.4
log
@bugzilla 117592 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.4.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.3
log
@ bugzilla 111894 gmf-head mmostafa 051201 Improve memory consumption of opened notation diagram
@
text
@d46 2
a47 2
	/**
	 * @@see com.ibm.xtools.common.service.IProvider#provides(IOperation)
@


1.2
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d25 1
d66 5
a70 1

@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a19 2
import org.eclipse.ui.views.properties.IPropertySource;

d26 1
a26 1
import org.eclipse.gmf.runtime.diagram.ui.providers.internal.l10n.DiagramProvidersResourceManager;
d30 1
d43 1
a43 2
	public static String VIEW_CATEGORY = DiagramProvidersResourceManager
		.getI18NString("DiagramPropertiesProvider.viewCategory"); //$NON-NLS-1$
@

