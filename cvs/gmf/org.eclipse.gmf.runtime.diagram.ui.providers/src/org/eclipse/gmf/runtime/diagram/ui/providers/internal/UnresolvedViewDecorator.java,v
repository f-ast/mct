head	1.9;
access;
symbols
	v20081020-0700:1.9
	v20080924-1925:1.9
	v20080917-1925:1.9
	v20080916-2008:1.9
	v20080911-1728:1.9
	v20080722-1827:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.6
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080503-1740:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080407-2250:1.9
	v20080407-0930:1.9
	v20080404-1111:1.9
	v20080328-1605:1.9
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080201-2010:1.9
	v20080201-0201:1.9
	v20071130-1111:1.9
	v20071108-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.4
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070601-1400:1.9
	v20070518-1300:1.9
	bugzilla111892_group_support:1.9.0.2
	Root_bugzilla111892_group_support:1.9
	v20070504-1000:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070330-1300:1.9
	v20060316-0600:1.9
	v20070228-2000:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	M4_20:1.9
	v20061218-1500:1.8.2.1
	v20061214-0000:1.9
	M3_20:1.9
	v20061013-1330:1.9
	v20060919-0800:1.8.2.1
	M1_20:1.8
	v20060803-1200:1.8
	v20060728-0500:1.8
	v20060721-1130:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060519-0800:1.8
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051201-1800:1.7
	I20051124-2000:1.6
	M3_10:1.6
	I20051118-1245:1.6
	I20051111-1800:1.6
	I20051106-0900:1.6
	v20051030:1.4;
locks; strict;
comment	@# @;


1.9
date	2006.10.03.15.03.01;	author ahunter;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.15.15.26.21;	author cmahoney;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2005.11.25.19.37.44;	author cmahoney;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.04.21.28.09;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.02.23.30.53;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.22.15.42.27;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.26.25;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.03;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.44;	author sshaw;	state Exp;
branches;
next	;

1.8.2.1
date	2006.09.13.16.43.25;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.9
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.providers.internal;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IPrimaryEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.AbstractDecorator;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorTarget;
import org.eclipse.gmf.runtime.draw2d.ui.figures.HashedCircle;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.LineStyle;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;


/**
 * Provides the unresolved view adornment for the views 
 * on a diagram that expect a non-null model reference.
 * 
 * @@author cmahoney
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.providers.*
 */
public class UnresolvedViewDecorator
	extends AbstractDecorator {

	/**
	 * Creates a new <code>UnresolvedViewDecorator</code>.
	 * @@param decoratorTarget
	 */
	public UnresolvedViewDecorator(IDecoratorTarget decoratorTarget) {
		super(decoratorTarget);
	}

	/**
	 * Creates the appropriate unresolved view decoration if all the
	 * criteria is satisfied by the view passed in.
	 * @@see org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecorator#refresh()
	 */
	public void refresh() {
		removeDecoration();
		EditPart editPart  = (EditPart)getDecoratorTarget().getAdapter(EditPart.class);
		View view = (View) getDecoratorTarget().getAdapter(View.class);
		if (!(editPart instanceof IPrimaryEditPart)) {
			return;
		}

		EObject element = ViewUtil.resolveSemanticElement(view);

		int radius = MapModeUtil.getMapMode(((GraphicalEditPart)editPart).getFigure()).DPtoLP(8);

		if (editPart instanceof ShapeEditPart && element == null) {
			HashedCircle circle = new HashedCircle(HashedCircle.HashType.X,
				radius);
			circle.setFill(false);
			setDecoration(getDecoratorTarget().addShapeDecoration(circle,
				IDecoratorTarget.Direction.NORTH_EAST, MapModeUtil.getMapMode(((ShapeEditPart)editPart).getFigure()).DPtoLP(-4),
				false));

		} else if (view instanceof Edge) {
			Edge connectorView = (Edge)view;
			if (element == null) {
				HashedCircle circle = new HashedCircle(HashedCircle.HashType.X,
					radius);
				circle.setFill(false);
				setDecoration(getDecoratorTarget().addConnectionDecoration(
					circle, 50, false));
			} else if ((connectorView.getTarget() != null)&&(ViewUtil
				.resolveSemanticElement(connectorView.getTarget()) == null)) {
				HashedCircle circle = new HashedCircle(
					HashedCircle.HashType.BACKSLASH, radius);
				circle.setFill(false);
				setDecoration(getDecoratorTarget().addConnectionDecoration(
					circle, 70, false));
			}

		}

		if (getDecoration() == null) {
			return;
		}

		if (ViewUtil.isPropertySupported(view,Properties.ID_LINECOLOR)) {
			LineStyle style = (LineStyle) view.getStyle(NotationPackage.eINSTANCE.getLineStyle());
			getDecoration().setForegroundColor(
				DiagramColorRegistry.getInstance().getColor(new Integer(style.getLineColor())));
		}
	}

	/** 
	 * Adds decoration if applicable.
	 * @@see org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecorator#activate()
	 */
	public void activate() {
		refresh();
	}

}
@


1.8
log
@Bugzilla#140166 gmf_head cmahoney 060515 Move necessary client accessed internal classes into public API
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
@


1.8.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.7
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@a19 1
import org.eclipse.gmf.runtime.diagram.ui.internal.figures.HashedCircle;
d24 1
@


1.6
log
@bugzilla 112788 gmf-head sshaw 051104 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d22 1
a22 1
import org.eclipse.gmf.runtime.diagram.ui.providers.internal.l10n.DiagramProvidersResourceManager;
d101 1
a101 1
				DiagramProvidersResourceManager.getInstance().getColor(new Integer(style.getLineColor())));
@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d16 2
a17 1

d25 1
a25 2
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;
a41 3
	/** The radius of the decoration hashed circle */
	private static final int RADIUS = MapMode.DPtoLP(8);

d65 2
d69 1
a69 1
				RADIUS);
d72 1
a72 1
				IDecoratorTarget.Direction.NORTH_EAST, MapMode.DPtoLP(-4),
d76 1
a76 1
			Edge edge = (Edge)view;
d79 1
a79 1
					RADIUS);
d83 2
a84 2
			} else if ((edge.getTarget() != null)&&(ViewUtil
				.resolveSemanticElement(edge.getTarget()) == null)) {
d86 1
a86 1
					HashedCircle.HashType.BACKSLASH, RADIUS);
@


1.4
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d77 1
a77 1
			Edge connectorView = (Edge)view;
d84 2
a85 2
			} else if ((connectorView.getTarget() != null)&&(ViewUtil
				.resolveSemanticElement(connectorView.getTarget()) == null)) {
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d20 1
a20 1
import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d24 4
a27 4
import com.ibm.xtools.notation.Edge;
import com.ibm.xtools.notation.LineStyle;
import com.ibm.xtools.notation.NotationPackage;
import com.ibm.xtools.notation.View;
@

