head	1.4;
access;
symbols
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.4
date	2005.11.25.19.36.44;	author cmahoney;	state dead;
branches;
next	1.3;

1.3
date	2005.11.02.23.30.53;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.26.25;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.43;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051125 Removing deprecated classes
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.providers;
import java.util.Hashtable;

import org.eclipse.ui.IPartListener;
import org.eclipse.ui.IWorkbenchPart;

import org.eclipse.gmf.runtime.common.ui.services.action.global.AbstractGlobalActionHandlerProvider;
import org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionHandler;
import org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionHandlerContext;
/**
 * Concrete class that implements the <code>IGlobalActionHandlerProvider</code>.
 * 
 * @@author Vishy Ramaswamy
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.providers.*
* @@deprecated use {@@link org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandlerProvider}
 */
public final class PresentationGlobalActionHandlerProvider
		extends
			AbstractGlobalActionHandlerProvider {
	/**
	 * List that contains all the IGlobalActionHandlers mapped to the
	 * IWorkbenchParts
	 */
	private Hashtable handlerList = new Hashtable();
	/**
	 * Constructor for PresentationGlobalActionHandlerProvider.
	 */
	public PresentationGlobalActionHandlerProvider() {
		super();
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionHandlerProvider#getGlobalActionHandler(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionHandlerContext)
	 */
	public IGlobalActionHandler getGlobalActionHandler(
			final IGlobalActionHandlerContext context) {
		/* create the handler */
		if (!getHandlerList().containsKey(context.getActivePart())) {
			getHandlerList().put(context.getActivePart(),
					new PresentationGlobalActionHandler());
			/*
			 * register as a part listener so that the cache can be cleared
			 * when the part is disposed
			 */
			context.getActivePart().getSite().getPage().addPartListener(
					new IPartListener() {
						private IWorkbenchPart localPart = context.getActivePart();
						/**
						 * @@see org.eclipse.ui.IPartListener#partActivated(IWorkbenchPart)
						 */
						public void partActivated(IWorkbenchPart part) {
							// NULL implementation
						}
						/**
						 * @@see org.eclipse.ui.IPartListener#partBroughtToTop(IWorkbenchPart)
						 */
						public void partBroughtToTop(IWorkbenchPart part) {
							// NULL implementation
						}
						/**
						 * @@see org.eclipse.ui.IPartListener#partClosed(IWorkbenchPart)
						 */
						public void partClosed(IWorkbenchPart part) {
							/* remove the cache associated with the part */
							if (part != null && part == localPart
									&& getHandlerList().containsKey(part)) {
								getHandlerList().remove(part);
								localPart.getSite().getPage().removePartListener(this);
								localPart = null;
							}
						}
						/**
						 * @@see org.eclipse.ui.IPartListener#partDeactivated(IWorkbenchPart)
						 */
						public void partDeactivated(IWorkbenchPart part) {
							// NULL implementation
						}
						/**
						 * @@see org.eclipse.ui.IPartListener#partOpened(IWorkbenchPart)
						 */
						public void partOpened(IWorkbenchPart part) {
							// NULL implementation
						}
					});
		}
		return (PresentationGlobalActionHandler) getHandlerList().get(
				context.getActivePart());
	}
	/**
	 * Returns the handlerList.
	 * 
	 * @@return Hashtable
	 */
	private Hashtable getHandlerList() {
		return handlerList;
	}
}
@


1.3
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d26 1
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

