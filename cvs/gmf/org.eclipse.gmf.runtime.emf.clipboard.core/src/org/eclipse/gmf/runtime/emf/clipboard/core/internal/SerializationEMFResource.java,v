head	1.4;
access;
symbols
	v20081020-0700:1.4
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080425-1959:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	v20060919-0800:1.2.2.1
	M1_20:1.2
	v20060728-0500:1.2.2.1
	v20060721-1130:1.2.2.1
	v20060713-1700:1.2.2.1
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060519-0800:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.4
date	2008.02.08.17.14.57;	author ldamus;	state Exp;
branches;
next	1.3;
commitid	1fb647ac8e114567;

1.3
date	2006.10.03.15.05.21;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.28.21;	author sshaw;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.08.30.03.26.46;	author sshaw;	state Exp;
branches;
next	;

1.2.2.1
date	2006.07.13.15.09.58;	author mmostafa;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[218307] gmf_head ldamus 080208 [CopyPaste] Copy and paste fails with ExecutionException when path contains '&'
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.clipboard.core.internal;

import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.xmi.UnresolvedReferenceException;
import org.eclipse.emf.ecore.xmi.XMIResource;
import org.eclipse.emf.ecore.xmi.XMLLoad;
import org.eclipse.emf.ecore.xmi.XMLResource;
import org.eclipse.emf.ecore.xmi.impl.XMILoadImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceImpl;

import org.eclipse.gmf.runtime.emf.clipboard.core.IClipboardSupport;

/**
 * @@author Yasser Lulu
 */
public abstract class SerializationEMFResource
	extends XMIResourceImpl {

	// default load options.
	public static final Map LOAD_OPTIONS = new HashMap();

	// default save options.
	public static final Map SAVE_OPTIONS = new HashMap();

	static {

		XMIResource resource = new XMIResourceImpl();

		// default load options.
		LOAD_OPTIONS.putAll(resource.getDefaultLoadOptions());

		// default save options.
		SAVE_OPTIONS.putAll(resource.getDefaultSaveOptions());
		SAVE_OPTIONS.put(XMIResource.OPTION_DECLARE_XML, Boolean.TRUE);
		SAVE_OPTIONS.put(XMIResource.OPTION_PROCESS_DANGLING_HREF,
			XMIResource.OPTION_PROCESS_DANGLING_HREF_DISCARD);
		SAVE_OPTIONS.put(XMIResource.OPTION_SCHEMA_LOCATION, Boolean.TRUE);
		SAVE_OPTIONS.put(XMIResource.OPTION_USE_XMI_TYPE, Boolean.TRUE);
		SAVE_OPTIONS.put(XMIResource.OPTION_SAVE_TYPE_INFORMATION, Boolean.TRUE);
		SAVE_OPTIONS.put(XMIResource.OPTION_SKIP_ESCAPE_URI, Boolean.FALSE);
	}

	public static String SERIALIZATION_ANNOTATIONS = "serialization_annotations";//$NON-NLS-1$

	private IClipboardSupport clipboardOperationHelper;

	public SerializationEMFResource(String encoding,
		IClipboardSupport clipboardOperationHelper) {
		this(encoding, URI.createFileURI(""), //$NON-NLS-1$
			clipboardOperationHelper);
	}

	public SerializationEMFResource(String encoding, URI uri,
		IClipboardSupport clipboardOperationHelper) {
		super(uri);
		setEncoding(encoding);
		this.clipboardOperationHelper = clipboardOperationHelper;
	}

	protected final IClipboardSupport getClipboardOperationHelper() {
		return clipboardOperationHelper;
	}

	protected boolean useIDAttributes() {
		return false;
	}

	protected boolean useUUIDs() {
		return true;
	}

	protected XMLLoad createXMLLoad() {
		// return an XML Load that suppresses UnresolvedReferenceExceptions
		return new XMILoadImpl(createXMLHelper()) {

			public void load(XMLResource r, InputStream s, Map o)
				throws IOException {

				try {

					super.load(r, s, o);

				} catch (Resource.IOWrappedException e) {

					if (!(e.getCause() instanceof UnresolvedReferenceException))
						throw e;
				}
			}};
	}

	protected void unloaded(InternalEObject internalEObject) {
		//disable parent
	}

	/**
	 * @@see org.eclipse.emf.common.notify.impl.NotifierImpl#eNotificationRequired()
	 */
	public boolean eNotificationRequired() {
		return false;
	}

	public void setIDToEObjectMap(Map idToEObjectMap) {
		this.idToEObjectMap = idToEObjectMap;
	}

	public void setEObjectToIDMap(Map eObjectToIDMap) {
		this.eObjectToIDMap = eObjectToIDMap;
	}

	protected void throwUnsupportedOperationException(String methodName,
		UnsupportedOperationException ex) {
		ClipboardPlugin.throwing(getClass(), methodName, ex);
		throw ex;
	}
}@


1.3
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
d58 1
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d102 1
a102 1
					if (!(e.getWrappedException() instanceof UnresolvedReferenceException))
@


1.2.2.1
log
@[110316] gmf_R1_0_maintenance mmostafa  060713 Compiler warning count should be 0 - runtime diagram layer components
@
text
@d102 1
a102 1
					if (!(e.getCause() instanceof UnresolvedReferenceException))
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

