head	1.2;
access;
symbols
	R1_0_maintenance:1.2.0.2
	R1_0:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.08.14.47.30;	author vramaswamy;	state dead;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.42;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108844, Revisit all provisional APIs and move back to internal as needed for the EMF runtime plugins, September 8, 2005
@
text
@/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004. All Rights Reserved.                     |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
package org.eclipse.gmf.runtime.emf.clipboard.core;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage.Registry;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.URIConverter;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;

/**
 * @@author Yasser Lulu
 */
class NonResolvingResourceSet extends ResourceSetImpl {
    private ResourceSet resourceSet;

    NonResolvingResourceSet(ResourceSet resourceSet) {
        this.resourceSet = resourceSet;
    }

    /**
     * @@return list of adapter factories
     */
    public EList getAdapterFactories() {
        return resourceSet.getAdapterFactories();
    }

    /**
     * @@param uri
     * @@param loadOnDemand
     * @@return object from URI
     */
    public EObject getEObject(URI uri, boolean loadOnDemand) {
        return null;//return null, don't resolve
    }

    /**
     * @@return package registry
     */
    public Registry getPackageRegistry() {
        return resourceSet.getPackageRegistry();
    }

    /**
     * @@param uri
     * @@param loadOnDemand
     * @@return resource from URI
     */
    public Resource getResource(URI uri, boolean loadOnDemand) {
        return resourceSet.getResource(uri, loadOnDemand);
    }

    /**
     * @@return resource factory registry
     */
    public org.eclipse.emf.ecore.resource.Resource.Factory.Registry getResourceFactoryRegistry() {
        return resourceSet.getResourceFactoryRegistry();
    }

    /**
     * @@return URI converter
     */
    public URIConverter getURIConverter() {
        return resourceSet.getURIConverter();
    }

}@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@@

