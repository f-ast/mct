head	1.4;
access;
symbols
	v20081020-0700:1.4
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080425-1959:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	v20060919-0800:1.2.2.1
	v20060728-0500:1.2.2.1
	R1_0_maintenance:1.2.0.2
	R1_0:1.2;
locks; strict;
comment	@# @;


1.4
date	2007.06.20.17.12.16;	author ahunter;	state Exp;
branches;
next	1.3;
commitid	3f5c46795ff04567;

1.3
date	2006.10.03.15.05.21;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.08.14.47.29;	author vramaswamy;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.08.30.03.26.43;	author sshaw;	state Exp;
branches;
next	;

1.2.2.1
date	2006.07.26.14.14.18;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[193560] gmf-head ahunter 070620 Copy/Paste of sorted children EditParts places them on the diagram in the wrong order
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.clipboard.core;

import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * A data structure that holds info needed through the copy process
 * @@author Yasser Lulu 
 */
public class CopyObjects {
	
	public boolean sortTotalCopyObjects = true;

	public Collection originalObjects;

	public Map copyParent2CopyMap = new HashMap();

	public Map copyParent2ObjectsMap = new HashMap();

	public Map copyAlwaysMap = new HashMap();

	public Set combinedCopyAlwaysSet = new HashSet();

	public Map objectsToCopyParentMap = new HashMap();

	public Set totalCopyObjects = new HashSet();

	/**
	 * Initializes me with my original objects.
	 * 
	 * @@param originalObjects the objects originally selected for copying
	 */
	public CopyObjects(Collection originalObjects) {
		this.originalObjects = originalObjects;
	}
	
	public void clear(){
		originalObjects.clear();
		copyParent2CopyMap.clear();
		copyAlwaysMap.clear();
		combinedCopyAlwaysSet.clear();
		objectsToCopyParentMap.clear();
		totalCopyObjects.clear();		
	}

}
@


1.3
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d25 2
@


1.2
log
@Bugzilla 108844, Revisit all provisional APIs and move back to internal as needed for the EMF runtime plugins, September 8, 2005
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
d24 1
a24 1
class CopyObjects {
d26 1
a26 1
	Collection originalObjects;
d28 1
a28 1
	Map copyParent2CopyMap = new HashMap();
d30 1
a30 1
	Map copyParent2ObjectsMap = new HashMap();
d32 1
a32 1
	Map copyAlwaysMap = new HashMap();
d34 1
a34 1
	Set combinedCopyAlwaysSet = new HashSet();
d36 1
a36 1
	Map objectsToCopyParentMap = new HashMap();
d38 1
a38 1
	Set totalCopyObjects = new HashSet();
d49 1
a49 1
	void clear(){
d58 1
a58 1
}@


1.2.2.1
log
@[151690] gmf_R1_0_maintenance nbalaba 060726 Subclasses of CopyOperation cannot modify the auxiliary objects being copied
@
text
@d1 9
a9 11
/******************************************************************************
 * Copyright (c) 2002, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

d22 1
a22 1
public class CopyObjects {
d24 1
a24 1
	public Collection originalObjects;
d26 1
a26 1
	public Map copyParent2CopyMap = new HashMap();
d28 1
a28 1
	public Map copyParent2ObjectsMap = new HashMap();
d30 1
a30 1
	public Map copyAlwaysMap = new HashMap();
d32 1
a32 1
	public Set combinedCopyAlwaysSet = new HashSet();
d34 1
a34 1
	public Map objectsToCopyParentMap = new HashMap();
d36 1
a36 1
	public Set totalCopyObjects = new HashSet();
d47 1
a47 1
	public void clear(){
d56 1
a56 1
}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@@

