98,98c98,98
<     private Point locateOnParent (Point suggestedLocation, int suggestedSide, IFigure borderItem) {
---
>     protected Point locateOnParent (Point suggestedLocation, int suggestedSide, IFigure borderItem) {
156,156c156,156
<     private boolean conflicts (Point recommendedLocation, IFigure targetBorderItem) {
---
>     protected IFigure getConflictingBorderItemFigure (Point recommendedLocation, IFigure targetBorderItem) {
166,166c166,166
<                     return true;
---
>                     return borderItem;
170,170c170,170
<         return false;
---
>         return null;
173,173c173,173
<     private Point locateOnBorder (Point suggestedLocation, int suggestedSide, int circuitCount, IFigure borderItem) {
---
>     protected Point locateOnBorder (Point suggestedLocation, int suggestedSide, int circuitCount, IFigure borderItem) {
177a178,178
>         IFigure conflictingBorderItem = getConflictingBorderItemFigure (recommendedLocation, borderItem);
178,178c179,179
<         if (circuitCount < 4 && conflicts (recommendedLocation, borderItem)) {
---
>         if (circuitCount < 4 && conflictingBorderItem != null) {
180a182,183
>                     recommendedLocation.y = calculateNextNonConflictingPosition (conflictingBorderItem.getBounds ().getBottomLeft ().y, vertical_gap, suggestedSide, borderItem);
>                     conflictingBorderItem = getConflictingBorderItemFigure (recommendedLocation, borderItem);
181,181d181
<                     recommendedLocation.y += borderItemSize.height + vertical_gap;
182,182c184,184
<                 } while (conflicts (recommendedLocation, borderItem));
---
>                 } while (conflictingBorderItem != null);
184a187,188
>                 } else if (recommendedLocation.y < getParentBorder ().getTopLeft ().y - borderItemSize.height) {
>                     return locateOnBorder (recommendedLocation, PositionConstants.NORTH, circuitCount + 1, borderItem);
185a190,190
> 
187a193,194
>                     recommendedLocation.x = calculateNextNonConflictingPosition (conflictingBorderItem.getBounds ().getTopRight ().x, horizontal_gap, suggestedSide, borderItem);
>                     conflictingBorderItem = getConflictingBorderItemFigure (recommendedLocation, borderItem);
188,188d192
<                     recommendedLocation.x += borderItemSize.width + horizontal_gap;
189,189c195,195
<                 } while (conflicts (recommendedLocation, borderItem));
---
>                 } while (conflictingBorderItem != null);
191a198,199
>                 } else if (recommendedLocation.x < getParentBorder ().getBottomLeft ().x - borderItemSize.width) {
>                     return locateOnBorder (recommendedLocation, PositionConstants.WEST, circuitCount + 1, borderItem);
192a201,201
> 
194a204,205
>                     recommendedLocation.y = calculateNextNonConflictingPosition (conflictingBorderItem.getBounds ().getLocation ().y, vertical_gap, suggestedSide, borderItem);
>                     conflictingBorderItem = getConflictingBorderItemFigure (recommendedLocation, borderItem);
195,195d203
<                     recommendedLocation.y -= (borderItemSize.height + vertical_gap);
196,196c206,206
<                 } while (conflicts (recommendedLocation, borderItem));
---
>                 } while (conflictingBorderItem != null);
198a209,210
>                 } else if (recommendedLocation.y > getParentBorder ().getBottomRight ().y) {
>                     return locateOnBorder (recommendedLocation, PositionConstants.SOUTH, circuitCount + 1, borderItem);
199a212,212
> 
201a215,216
>                     recommendedLocation.x = calculateNextNonConflictingPosition (conflictingBorderItem.getBounds ().getLocation ().x, horizontal_gap, suggestedSide, borderItem);
>                     conflictingBorderItem = getConflictingBorderItemFigure (recommendedLocation, borderItem);
202,202d214
<                     recommendedLocation.x -= (borderItemSize.width + horizontal_gap);
203,203c217,217
<                 } while (conflicts (recommendedLocation, borderItem));
---
>                 } while (conflictingBorderItem != null);
205a220,221
>                 } else if (recommendedLocation.x > getParentBorder ().getTopRight ().x) {
>                     return locateOnBorder (recommendedLocation, PositionConstants.EAST, circuitCount + 1, borderItem);
206a223,223
> 
212a230,241
>     protected int calculateNextNonConflictingPosition (int currentPosition, int interval, int currentSide, IFigure borderItem) {
>         switch (currentSide) {
>             case PositionConstants.WEST :
>             case PositionConstants.SOUTH :
>                 return currentPosition + interval;
>             case PositionConstants.EAST :
>             case PositionConstants.NORTH :
>             default :
>                 return currentPosition - interval;
>         }
>     }
> 
