27,27c27,27
< import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.ResourceManager;
---
> import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.DiagramUIPropertiesImages;
27a28,29
> 
> import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.DiagramUIPropertiesMessages;
46a49,50
> import org.eclipse.jface.resource.ImageDescriptor;
> 
92,92c96,96
<     protected static final String FONT_COLOR_COMMAND_NAME = ResourceManager.getI18NString ("FontColor.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
---
>     protected static final String FONT_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.FontColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
93a98,98
>     protected static final String FONT_COMMAND_NAME = DiagramUIPropertiesMessages.Font_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
93,93c97,97
<     protected static final String LINE_COLOR_COMMAND_NAME = ResourceManager.getI18NString ("LineColor.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
---
>     protected static final String LINE_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.LineColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
94,94d97
<     protected static final String FONT_COMMAND_NAME = ResourceManager.getI18NString ("Font.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
95,95c99,99
<     static protected final String FILL_COLOR_COMMAND_NAME = ResourceManager.getI18NString ("FillColor.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
---
>     static protected final String FILL_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.FillColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
96,98d99
<     protected static final String FILL_COLOR_IMAGE_NAME = "fill_color.gif";
<     protected static final String BOLD_IMAGE_NAME = "bold.gif";
<     protected static final String ITALIC_IMAGE_NAME = "italic.gif";
99,99c100,100
<     protected static final String FONTS_AND_COLORS_LABEL = ResourceManager.getI18NString ("FontAndColor.nameLabel");
---
>     protected static final String FONTS_AND_COLORS_LABEL = DiagramUIPropertiesMessages.FontAndColor_nameLabel;
131,132d131
<     private static final String FONT_COLOR_IMAGE_NAME = "font_color.gif";
<     private static final String LINE_COLOR_IMAGE_NAME = "line_color.gif";
203a203,203
>         fontBoldButton.setImage (DiagramUIPropertiesImages.get (DiagramUIPropertiesImages.IMG_BOLD));
204,204d202
<         fontBoldButton.setImage (ResourceManager.getInstance ().getImage (BOLD_IMAGE_NAME));
205a205,205
>         fontItalicButton.setImage (DiagramUIPropertiesImages.get (DiagramUIPropertiesImages.IMG_ITALIC));
206,206d204
<         fontItalicButton.setImage (ResourceManager.getInstance ().getImage (ITALIC_IMAGE_NAME));
226a226,226
>         fontColorButton.setImage (DiagramUIPropertiesImages.get (DiagramUIPropertiesImages.IMG_FONT_COLOR));
227,227d225
<         fontColorButton.setImage (ResourceManager.getInstance ().getImage (FONT_COLOR_IMAGE_NAME));
238a238,238
>         lineColorButton.setImage (DiagramUIPropertiesImages.get (DiagramUIPropertiesImages.IMG_LINE_COLOR));
239,239d237
<         lineColorButton.setImage (ResourceManager.getInstance ().getImage (LINE_COLOR_IMAGE_NAME));
249a249,249
>         fillColorButton.setImage (DiagramUIPropertiesImages.get (DiagramUIPropertiesImages.IMG_FILL_COLOR));
250,250d248
<         fillColorButton.setImage (ResourceManager.getInstance ().getImage (FILL_COLOR_IMAGE_NAME));
268,268c267,267
<         lineColor = changeColor (event, lineColorButton, IPreferenceConstants.PREF_LINE_COLOR, Properties.ID_LINECOLOR, LINE_COLOR_COMMAND_NAME, LINE_COLOR_IMAGE_NAME);
---
>         lineColor = changeColor (event, lineColorButton, IPreferenceConstants.PREF_LINE_COLOR, Properties.ID_LINECOLOR, LINE_COLOR_COMMAND_NAME, DiagramUIPropertiesImages.DESC_LINE_COLOR);
272,272c271,271
<         fontColor = changeColor (event, fontColorButton, IPreferenceConstants.PREF_FONT_COLOR, Properties.ID_FONTCOLOR, FONT_COLOR_COMMAND_NAME, FONT_COLOR_IMAGE_NAME);
---
>         fontColor = changeColor (event, fontColorButton, IPreferenceConstants.PREF_FONT_COLOR, Properties.ID_FONTCOLOR, FONT_COLOR_COMMAND_NAME, DiagramUIPropertiesImages.DESC_FONT_COLOR);
299a299,332
>                 Image overlyedImage = new ColorOverlayImageDescriptor (DiagramUIPropertiesImages.get (imageName).getImageData (), color).createImage ();
>                 button.setImage (overlyedImage);
>             }
>             return color;
>         }
>         return null;
>     }
> 
>     protected RGB changeColor (SelectionEvent event, ToolItem button, String preferenceId, final String propertyId, String commandName, ImageDescriptor imageDescriptor) {
>         ColorPalettePopup popup = new ColorPalettePopup (button.getParent ().getShell (), preferenceId, IDialogConstants.BUTTON_BAR_HEIGHT);
>         Rectangle r = button.getBounds ();
>         Point location = button.getParent ().toDisplay (r.x, r.y);
>         popup.open (new Point (location.x, location.y + r.height));
>         if (popup.getSelectedColor () != null) {
>             final RGB color = popup.getSelectedColor ();
>             if (color != null) {
>                 List commands = new ArrayList ();
>                 Iterator it = getInputIterator ();
>                 while (it.hasNext ()) {
>                     final IGraphicalEditPart ep = (IGraphicalEditPart) it.next ();
>                     commands.add (createCommand (commandName, ((View) ep.getModel ()).eResource (), new Runnable () {
> 
>                         public void run () {
>                             ENamedElement element = (EStructuralFeature) MetaModelUtil.getElement (propertyId);
>                             if (element instanceof EStructuralFeature) ep.setStructuralFeatureValue ((EStructuralFeature) MetaModelUtil.getElement (propertyId), FigureUtilities.RGBToInteger (color));
> 
>                         }
> 
>                     }
> 
>                     ));
>                 }
>                 executeAsCompositeCommand (commandName, commands);
>                 Image overlyedImage = new ColorOverlayImageDescriptor (imageDescriptor.getImageData (), color).createImage ();
300,300d298
<                 Image overlyedImage = new ColorOverlayImageDescriptor (ResourceManager.getInstance ().getImage (imageName).getImageData (), color).createImage ();
387,387c419,419
<             Image overlyedImage = new ColorOverlayImageDescriptor (ResourceManager.getInstance ().getImage (FONT_COLOR_IMAGE_NAME).getImageData (), fontColor).createImage ();
---
>             Image overlyedImage = new ColorOverlayImageDescriptor (DiagramUIPropertiesImages.DESC_FONT_COLOR.getImageData (), fontColor).createImage ();
389,389c421,421
<             overlyedImage = new ColorOverlayImageDescriptor (ResourceManager.getInstance ().getImage (LINE_COLOR_IMAGE_NAME).getImageData (), lineColor).createImage ();
---
>             overlyedImage = new ColorOverlayImageDescriptor (DiagramUIPropertiesImages.DESC_LINE_COLOR.getImageData (), lineColor).createImage ();
