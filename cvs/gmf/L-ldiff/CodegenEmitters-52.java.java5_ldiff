1,1c1,1
< package org.eclipse.gmf.internal.codegen.lite;
---
> package org.eclipse.gmf.codegen.util;
2,3d1
< 
< import java.net.MalformedURLException;
7,12d4
< import java.util.ArrayList;
< 
< import java.util.HashMap;
< 
< import org.eclipse.core.runtime.IStatus;
< 
15,16d6
< import org.eclipse.core.runtime.Status;
< 
25,26d14
< import org.eclipse.emf.common.CommonPlugin;
< 
29,29c27,27
< import org.eclipse.gmf.common.UnexpectedBehaviourException;
---
> import org.eclipse.gmf.codegen.templates.application.WorkbenchAdvisorGenerator;
30a183,204
> import org.eclipse.gmf.codegen.templates.providers.ValidationDecoratorProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ValidationProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ViewFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ViewProviderGenerator;
> 
> import org.eclipse.gmf.common.UnexpectedBehaviourException;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.CachingEmitterFactory;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactory;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactoryImpl;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.NoSuchTemplateException;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.StaticTemplateRegistry;
> 
> import org.eclipse.gmf.internal.codegen.dispatch.TemplateRegistry;
> 
31,31c205,205
< import org.eclipse.gmf.internal.common.codegen.BinaryEmitter;
---
> import org.eclipse.gmf.internal.common.codegen.BinaryEmitter;
31a206,230
> 
> import org.eclipse.gmf.internal.common.codegen.DefaultTextMerger;
> 
> import org.eclipse.gmf.internal.common.codegen.GIFEmitter;
> 
> import org.eclipse.gmf.internal.common.codegen.JETEmitterAdapter;
> 
> import org.eclipse.gmf.internal.common.codegen.JETGIFEmitterAdapter;
> 
> import org.eclipse.gmf.internal.common.codegen.TextEmitter;
> 
> import org.eclipse.gmf.internal.common.codegen.TextMerger;
> 
> import org.osgi.framework.Bundle;
> 
> public class CodegenEmitters {
>     private static final String TEMPLATES_PLUGIN_ID = "org.eclipse.gmf.codegen";
>     private final EmitterFactory myFactory;
>     private final String [] myTemplatePath;
> 
>     public CodegenEmitters (boolean usePrecompiled, String templateDirectory) {
>         TemplateRegistry registry = initRegistry ();
>         String [] variables = new String [] {"org.eclipse.emf.codegen", "org.eclipse.emf.codegen.ecore", "org.eclipse.emf.common", "org.eclipse.emf.ecore", "org.eclipse.gmf.common", "org.eclipse.gmf.codegen"};
>         myTemplatePath = new String [] {usePrecompiled ? null : templateDirectory != null && templateDirectory.indexOf (":") == - 1 ? URI.createPlatformResourceURI (templateDirectory).toString () : templateDirectory, getTemplatesBundle ().getEntry ("/templates/").toString ()};
>         myFactory = new CachingEmitterFactory (new EmitterFactoryImpl (getTemplatePath (), registry, usePrecompiled, variables));
32a81,158
> import org.eclipse.gmf.codegen.templates.expressions.AbstractExpressionGenerator;
> 
> import org.eclipse.gmf.codegen.templates.expressions.OCLExpressionFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.expressions.RegexpExpressionFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.helpers.BaseEditHelperGenerator;
> 
> import org.eclipse.gmf.codegen.templates.helpers.EditHelperAdviceGenerator;
> 
> import org.eclipse.gmf.codegen.templates.helpers.EditHelperGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.AbstractNavigatorItemGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorActionProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorContentProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorGroupGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorItemGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorLabelProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorLinkHelperGenerator;
> 
> import org.eclipse.gmf.codegen.templates.navigator.NavigatorSorterGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.ChildNodeEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.CompartmentEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.DiagramEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.DiagramExternalNodeLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.EditPartFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.ExternalNodeLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.LinkEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.LinkLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.NodeEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.parts.NodeLabelEditPartGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.ChildContainerCanonicalEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.CompartmentItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.DiagramCanonicalEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.DiagramItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.ExternalNodeLabelHostLayoutEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.GraphicalNodeEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.ItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.LinkItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.NodeItemSemanticEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.OpenDiagramPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.TextNonResizableEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.policies.TextSelectionEditPolicyGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.AbstractParserGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ContributionItemProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.EditPartProviderGenerator;
> 
33,33c159,159
< import org.eclipse.gmf.internal.common.codegen.DefaultTextMerger;
---
> import org.eclipse.gmf.codegen.templates.providers.ElementTypesGenerator;
33a160,181
> 
> import org.eclipse.gmf.codegen.templates.providers.IconProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.LabelTextViewFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.LabelViewFactoryGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.MarkerNavigationProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.MetricProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ModelingAssistantProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ParserProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ShortcutsDecoratorProviderGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.ShortcutsPropertyTester;
> 
> import org.eclipse.gmf.codegen.templates.providers.StructuralFeatureParserGenerator;
> 
> import org.eclipse.gmf.codegen.templates.providers.StructuralFeaturesParserGenerator;
35,35c17,17
< import org.eclipse.gmf.internal.common.codegen.GIFEmitter;
---
> import org.eclipse.gmf.codegen.templates.application.ActionBarAdvisorGenerator;
37,37c19,19
< import org.eclipse.gmf.internal.common.codegen.JETGIFEmitterAdapter;
---
> import org.eclipse.gmf.codegen.templates.application.ApplicationGenerator;
39,39c21,21
< import org.eclipse.gmf.internal.common.codegen.TextEmitter;
---
> import org.eclipse.gmf.codegen.templates.application.PerspectiveGenerator;
41,41c23,23
< import org.eclipse.gmf.internal.common.codegen.TextMerger;
---
> import org.eclipse.gmf.codegen.templates.application.URIDiagramDocumentProviderGenerator;
43,43c25,25
< import org.eclipse.gmf.internal.common.codegen.XpandTextEmitter;
---
> import org.eclipse.gmf.codegen.templates.application.URIEditorInputProxyGenerator;
44a33,33
> import org.eclipse.gmf.codegen.templates.commands.ReorientConnectionViewCommandGenerator;
45,45c29,29
< import org.eclipse.gmf.internal.xpand.ResourceManager;
---
> import org.eclipse.gmf.codegen.templates.application.WorkbenchWindowAdvisorGenerator;
46a35,35
> import org.eclipse.gmf.codegen.templates.editor.ActionBarContributorGenerator;
47,47c31,31
< import org.eclipse.gmf.internal.xpand.util.BundleResourceManager;
---
> import org.eclipse.gmf.codegen.templates.commands.CreateShortcutDecorationsCommand;
48a37,37
> import org.eclipse.gmf.codegen.templates.editor.BuildPropertiesGenerator;
49,49d36
< import org.osgi.framework.Bundle;
50a39,39
> import org.eclipse.gmf.codegen.templates.editor.CreateShortcutActionGenerator;
51,54d38
< public class CodegenEmitters {
<     private static final String CODEGEN_PLUGIN_ID = "org.eclipse.gmf.codegen";
<     private final String [] myTemplatePath;
<     private ResourceManager myResourceManager;
55a41,41
> import org.eclipse.gmf.codegen.templates.editor.CreationWizardGenerator;
56,73d40
<     public CodegenEmitters (boolean usePrecompiled, String templateDirectory) {
<         ArrayList < URL > templatesURI = new ArrayList < URL > (3);
<         templatesURI.add (getTemplatesBundle ().getEntry ("/templates/"));
<         templatesURI.add (getCodegenTemplatesBundle ().getEntry ("/templates/"));
<         URL dynamicTemplatesPath = getDynamicTemplatesURL (templateDirectory);
<         if (dynamicTemplatesPath != null) {
<             templatesURI.add (dynamicTemplatesPath);
<         }
<         myResourceManager = new BundleResourceManager (templatesURI.toArray (new URL [templatesURI.size ()]));
<         myTemplatePath = new String [templatesURI.size ()];
<         for (int i = 0;
<         i < templatesURI.size (); i ++) {
<             myTemplatePath [i] = templatesURI.get (i).toString ();
<         }
<         if (usePrecompiled) {
<             myCachedXpandEmitters = new HashMap < String, TextEmitter > ();
<         }
<     }
74a43,43
> import org.eclipse.gmf.codegen.templates.editor.CreationWizardPageGenerator;
75,85d42
<     private static URL getDynamicTemplatesURL (String templateDirectory) {
<         if (templateDirectory != null) {
<             URI templatesURI = templateDirectory.indexOf (":") == - 1 ? URI.createPlatformResourceURI (templateDirectory, true) : URI.createURI (templateDirectory);
<             try {
<                 return new URL (CommonPlugin.resolve (templatesURI).toString ());
<             } catch (MalformedURLException e) {
<                 Activator.getInstance ().getLog ().log (new Status (IStatus.ERROR, Activator.getPluginID (), 0, "Incorrect dynamic templates location", e));
<             }
<         }
<         return null;
<     }
86a45,45
> import org.eclipse.gmf.codegen.templates.editor.DiagramEditorUtilGenerator;
87,87c233,233
<     public TextMerger createMergeService () {
---
>     public TextMerger createMergeService () {
88,88c234,234
<         URL controlFile = getJMergeControlFile ();
---
>         URL controlFile = getJMergeControlFile ();
89,89c235,235
<         if (controlFile != null) {
---
>         if (controlFile != null) {
90,90c236,236
<             JControlModel controlModel = new JControlModel ();
---
>             JControlModel controlModel = new JControlModel ();
91,91c237,237
<             controlModel.initialize (CodeGenUtil.instantiateFacadeHelper (JMerger.DEFAULT_FACADE_HELPER_CLASS), controlFile.toString ());
---
>             controlModel.initialize (CodeGenUtil.instantiateFacadeHelper (JMerger.DEFAULT_FACADE_HELPER_CLASS), controlFile.toString ());
92,92c238,238
<             if (! controlModel.canMerge ()) {
---
>             if (! controlModel.canMerge ()) {
93,93c239,239
<                 throw new IllegalStateException ("Can not initialize JControlModel");
---
>                 throw new IllegalStateException ("Can not initialize JControlModel");
94,94c240,240
<             }
---
>             }
95,95c241,241
<             return new DefaultTextMerger (controlModel);
---
>             return new DefaultTextMerger (controlModel);
96,96c242,242
<         }
---
>         }
97,97c243,243
<         return null;
---
>         return null;
98,98d243
<     }
99a47,47
> import org.eclipse.gmf.codegen.templates.editor.DocumentProviderGenerator;
100,102d46
<     public TextEmitter getCreateNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateNodeCommand::CreateNodeCommand");
<     }
103a49,49
> import org.eclipse.gmf.codegen.templates.editor.EditorGenerator;
104,104c362,362
<     public TextEmitter getCreateNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getReorientConnectionViewCommandEmitter () throws UnexpectedBehaviourException {
105,105c363,363
<         return retrieveXpand ("xpt::commands::CreateNodeCommand::qualifiedClassName");
---
>         return retrieve (ReorientConnectionViewCommandGenerator.class);
106,106d363
<     }
107a51,51
> import org.eclipse.gmf.codegen.templates.editor.ElementChooserGenerator;
108,110d50
<     public TextEmitter getAddNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::AddNodeCommand::AddNodeCommand");
<     }
111a53,53
> import org.eclipse.gmf.codegen.templates.editor.InitDiagramFileActionGenerator;
112,112c366,366
<     public TextEmitter getAddNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getBaseEditHelperEmitter () throws UnexpectedBehaviourException {
113,113c367,367
<         return retrieveXpand ("xpt::commands::AddNodeCommand::qualifiedClassName");
---
>         return retrieve (BaseEditHelperGenerator.class);
114,114d367
<     }
115a55,55
> import org.eclipse.gmf.codegen.templates.editor.LoadResourceActionGenerator;
116,118d54
<     public TextEmitter getCloneNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CloneNodeCommand::CloneNodeCommand");
<     }
119a57,57
> import org.eclipse.gmf.codegen.templates.editor.ManifestGenerator;
120,120c370,370
<     public TextEmitter getCloneNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getEditHelperEmitter () throws UnexpectedBehaviourException {
121,121c371,371
<         return retrieveXpand ("xpt::commands::CloneNodeCommand::qualifiedClassName");
---
>         return retrieve (EditHelperGenerator.class);
122,122d371
<     }
123a59,59
> import org.eclipse.gmf.codegen.templates.editor.MatchingStrategyGenerator;
124,126d58
<     public TextEmitter getCreateLinkStartCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateLinkStartCommand::CreateLinkStartCommand");
<     }
127a61,61
> import org.eclipse.gmf.codegen.templates.editor.NewDiagramFileWizardGenerator;
128,128c374,374
<     public TextEmitter getCreateLinkStartCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getEditHelperAdviceEmitter () throws UnexpectedBehaviourException {
129,129c375,375
<         return retrieveXpand ("xpt::commands::CreateLinkStartCommand::qualifiedClassName");
---
>         return retrieve (EditHelperAdviceGenerator.class);
130,130d375
<     }
131a63,63
> import org.eclipse.gmf.codegen.templates.editor.OptionsFileGenerator;
132,134d62
<     public TextEmitter getCreateLinkCompleteCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateLinkCompleteCommand::CreateLinkCompleteCommand");
<     }
135a65,65
> import org.eclipse.gmf.codegen.templates.editor.PaletteFactoryGenerator;
136,136c378,378
<     public TextEmitter getCreateLinkCompleteCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getDiagramEditPartEmitter () throws UnexpectedBehaviourException {
137,137c379,379
<         return retrieveXpand ("xpt::commands::CreateLinkCompleteCommand::qualifiedClassName");
---
>         return retrieve (DiagramEditPartGenerator.class);
138,138d379
<     }
139a67,67
> import org.eclipse.gmf.codegen.templates.editor.PluginGenerator;
140,142d66
<     public TextEmitter getReconnectLinkSourceCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::ReconnectLinkSourceCommand::ReconnectLinkSourceCommand");
<     }
143a69,69
> import org.eclipse.gmf.codegen.templates.editor.PluginPropertiesGenerator;
144a383,383
>         return retrieve (DiagramExternalNodeLabelEditPartGenerator.class);
144,144c382,382
<     public TextEmitter getReconnectLinkSourceCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getDiagramExternalNodeLabelEditPartEmitter () throws UnexpectedBehaviourException {
145,146d382
<         return retrieveXpand ("xpt::commands::ReconnectLinkSourceCommand::qualifiedClassName");
<     }
147a71,71
> import org.eclipse.gmf.codegen.templates.editor.PluginXML;
148,150d70
<     public TextEmitter getReconnectLinkTargetCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::ReconnectLinkTargetCommand::ReconnectLinkTargetCommand");
<     }
151a73,73
> import org.eclipse.gmf.codegen.templates.editor.PreferencesInitializerGenerator;
152,152c386,386
<     public TextEmitter getReconnectLinkTargetCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getNodeEditPartEmitter () throws UnexpectedBehaviourException {
153,153c387,387
<         return retrieveXpand ("xpt::commands::ReconnectLinkTargetCommand::qualifiedClassName");
---
>         return retrieve (NodeEditPartGenerator.class);
154,154d387
<     }
155a75,75
> import org.eclipse.gmf.codegen.templates.editor.PropertySectionGenerator;
156,158d74
<     public TextEmitter getViewFactoryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::viewfactories::ViewFactory::ViewFactory");
<     }
159a77,77
> import org.eclipse.gmf.codegen.templates.editor.SheetLabelProviderGenerator;
160,162d76
<     public TextEmitter getComponentEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ComponentEditPolicy::ComponentEditPolicy");
<     }
163a79,79
> import org.eclipse.gmf.codegen.templates.editor.VisualIDRegistryGenerator;
164,166d78
<     public TextEmitter getComponentEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ComponentEditPolicy::qualifiedClassName");
<     }
168,170d80
<     public TextEmitter getLayoutEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::LayoutEditPolicy::LayoutEditPolicy");
<     }
172,173d182
<     public TextEmitter getLayoutEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::LayoutEditPolicy::qualifiedClassName");
176,177d232
<     public TextEmitter getGraphicalEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::GraphicalNodeEditPolicy::GraphicalNodeEditPolicy");
179a246,335
>     private static TemplateRegistry initRegistry () {
>         final StaticTemplateRegistry tr = new StaticTemplateRegistry (CodegenEmitters.class.getClassLoader ());
>         put (tr, "/commands/ReorientConnectionViewCommand.javajet", ReorientConnectionViewCommandGenerator.class);
>         put (tr, "/helpers/BaseEditHelper.javajet", BaseEditHelperGenerator.class);
>         put (tr, "/helpers/EditHelper.javajet", EditHelperGenerator.class);
>         put (tr, "/helpers/EditHelperAdvice.javajet", EditHelperAdviceGenerator.class);
>         put (tr, "/parts/DiagramEditPart.javajet", DiagramEditPartGenerator.class);
>         put (tr, "/parts/DiagramExternalNodeLabelEditPart.javajet", DiagramExternalNodeLabelEditPartGenerator.class);
>         put (tr, "/parts/NodeEditPart.javajet", NodeEditPartGenerator.class);
>         put (tr, "/parts/NodeLabelEditPart.javajet", NodeLabelEditPartGenerator.class);
>         put (tr, "/parts/ExternalNodeLabelEditPart.javajet", ExternalNodeLabelEditPartGenerator.class);
>         put (tr, "/parts/ChildNodeEditPart.javajet", ChildNodeEditPartGenerator.class);
>         put (tr, "/parts/CompartmentEditPart.javajet", CompartmentEditPartGenerator.class);
>         put (tr, "/parts/LinkEditPart.javajet", LinkEditPartGenerator.class);
>         put (tr, "/parts/LinkLabelEditPart.javajet", LinkLabelEditPartGenerator.class);
>         put (tr, "/parts/EditPartFactory.javajet", EditPartFactoryGenerator.class);
>         put (tr, "/policies/ItemSemanticEditPolicy.javajet", ItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/GraphicalNodeEditPolicy.javajet", GraphicalNodeEditPolicyGenerator.class);
>         put (tr, "/policies/OpenDiagram.javajet", OpenDiagramPolicyGenerator.class);
>         put (tr, "/policies/DiagramCanonicalEditPolicy.javajet", DiagramCanonicalEditPolicyGenerator.class);
>         put (tr, "/policies/ChildContainerCanonicalEditPolicy.javajet", ChildContainerCanonicalEditPolicyGenerator.class);
>         put (tr, "/policies/DiagramItemSemanticEditPolicy.javajet", DiagramItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/CompartmentItemSemanticEditPolicy.javajet", CompartmentItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/NodeItemSemanticEditPolicy.javajet", NodeItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/LinkItemSemanticEditPolicy.javajet", LinkItemSemanticEditPolicyGenerator.class);
>         put (tr, "/policies/TextSelectionEditPolicy.javajet", TextSelectionEditPolicyGenerator.class);
>         put (tr, "/policies/TextNonResizableEditPolicy.javajet", TextNonResizableEditPolicyGenerator.class);
>         put (tr, "/policies/ExternalNodeLabelHostLayoutEditPolicy.javajet", ExternalNodeLabelHostLayoutEditPolicyGenerator.class);
>         put (tr, "/providers/AbstractParser.javajet", AbstractParserGenerator.class);
>         put (tr, "/providers/StructuralFeatureParser.javajet", StructuralFeatureParserGenerator.class);
>         put (tr, "/providers/StructuralFeaturesParser.javajet", StructuralFeaturesParserGenerator.class);
>         put (tr, "/providers/ViewFactory.javajet", ViewFactoryGenerator.class);
>         put (tr, "/providers/LabelViewFactory.javajet", LabelViewFactoryGenerator.class);
>         put (tr, "/providers/LabelTextViewFactory.javajet", LabelTextViewFactoryGenerator.class);
>         put (tr, "/providers/ElementTypes.javajet", ElementTypesGenerator.class);
>         put (tr, "/providers/ViewProvider.javajet", ViewProviderGenerator.class);
>         put (tr, "/providers/EditPartProvider.javajet", EditPartProviderGenerator.class);
>         put (tr, "/providers/ContributionItemProvider.javajet", ContributionItemProviderGenerator.class);
>         put (tr, "/providers/ModelingAssistantProvider.javajet", ModelingAssistantProviderGenerator.class);
>         put (tr, "/providers/IconProvider.javajet", IconProviderGenerator.class);
>         put (tr, "/providers/ParserProvider.javajet", ParserProviderGenerator.class);
>         put (tr, "/providers/ValidationProvider.javajet", ValidationProviderGenerator.class);
>         put (tr, "/providers/ValidationDecoratorProvider.javajet", ValidationDecoratorProviderGenerator.class);
>         put (tr, "/providers/ShortcutsDecoratorProvider.javajet", ShortcutsDecoratorProviderGenerator.class);
>         put (tr, "/editor/ShortcutPropertyTester.javajet", ShortcutsPropertyTester.class);
>         put (tr, "/providers/MetricProvider.javajet", MetricProviderGenerator.class);
>         put (tr, "/providers/MarkerNavigationProvider.javajet", MarkerNavigationProviderGenerator.class);
>         put (tr, "/editor/InitDiagramFileAction.javajet", InitDiagramFileActionGenerator.class);
>         put (tr, "/editor/NewDiagramFileWizard.javajet", NewDiagramFileWizardGenerator.class);
>         put (tr, "/editor/PaletteFactory.javajet", PaletteFactoryGenerator.class);
>         put (tr, "/editor/DiagramEditorUtil.javajet", DiagramEditorUtilGenerator.class);
>         put (tr, "/editor/VisualIDRegistry.javajet", VisualIDRegistryGenerator.class);
>         put (tr, "/editor/CreationWizard.javajet", CreationWizardGenerator.class);
>         put (tr, "/editor/CreationWizardPage.javajet", CreationWizardPageGenerator.class);
>         put (tr, "/editor/Editor.javajet", EditorGenerator.class);
>         put (tr, "/editor/CreateShortcutAction.javajet", CreateShortcutActionGenerator.class);
>         put (tr, "/commands/CreateShortcutDecorationsCommand.javajet", CreateShortcutDecorationsCommand.class);
>         put (tr, "/editor/LoadResourceAction.javajet", LoadResourceActionGenerator.class);
>         put (tr, "/editor/ElementChooser.javajet", ElementChooserGenerator.class);
>         put (tr, "/editor/DocumentProvider.javajet", DocumentProviderGenerator.class);
>         put (tr, "/editor/ActionBarContributor.javajet", ActionBarContributorGenerator.class);
>         put (tr, "/editor/MatchingStrategy.javajet", MatchingStrategyGenerator.class);
>         put (tr, "/editor/PreferenceInitializer.javajet", PreferencesInitializerGenerator.class);
>         put (tr, "/navigator/NavigatorContentProvider.javajet", NavigatorContentProviderGenerator.class);
>         put (tr, "/navigator/NavigatorLabelProvider.javajet", NavigatorLabelProviderGenerator.class);
>         put (tr, "/navigator/NavigatorLinkHelper.javajet", NavigatorLinkHelperGenerator.class);
>         put (tr, "/navigator/NavigatorSorter.javajet", NavigatorSorterGenerator.class);
>         put (tr, "/navigator/NavigatorActionProvider.javajet", NavigatorActionProviderGenerator.class);
>         put (tr, "/navigator/AbstractNavigatorItem.javajet", AbstractNavigatorItemGenerator.class);
>         put (tr, "/navigator/NavigatorGroup.javajet", NavigatorGroupGenerator.class);
>         put (tr, "/navigator/NavigatorItem.javajet", NavigatorItemGenerator.class);
>         put (tr, "/editor/Plugin.javajet", PluginGenerator.class);
>         put (tr, "/editor/plugin.xmljet", PluginXML.class);
>         put (tr, "/editor/plugin.propertiesjet", PluginPropertiesGenerator.class);
>         put (tr, "/editor/.optionsjet", OptionsFileGenerator.class);
>         put (tr, "/editor/manifest.mfjet", ManifestGenerator.class);
>         put (tr, "/editor/build.propertiesjet", BuildPropertiesGenerator.class);
>         put (tr, "/propsheet/PropertySection.javajet", PropertySectionGenerator.class);
>         put (tr, "/propsheet/SheetLabelProvider.javajet", SheetLabelProviderGenerator.class);
>         put (tr, "/expressions/AbstractExpression.javajet", AbstractExpressionGenerator.class);
>         put (tr, "/expressions/OCLExpressionFactory.javajet", OCLExpressionFactoryGenerator.class);
>         put (tr, "/expressions/RegexpExpressionFactory.javajet", RegexpExpressionFactoryGenerator.class);
>         put (tr, "/application/ActionBarAdvisor.javajet", ActionBarAdvisorGenerator.class);
>         put (tr, "/application/Application.javajet", ApplicationGenerator.class);
>         put (tr, "/application/Perspective.javajet", PerspectiveGenerator.class);
>         put (tr, "/application/WorkbenchAdvisor.javajet", WorkbenchAdvisorGenerator.class);
>         put (tr, "/application/WorkbenchWindowAdvisor.javajet", WorkbenchWindowAdvisorGenerator.class);
>         put (tr, "/application/URIDiagramDocumentProvider.javajet", URIDiagramDocumentProviderGenerator.class);
>         put (tr, "/application/URIEditorInputProxy.javajet", URIEditorInputProxyGenerator.class);
>         return tr;
180,181d245
<     public TextEmitter getGraphicalEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::GraphicalNodeEditPolicy::qualifiedClassName");
183a338,339
>     private static void put (StaticTemplateRegistry tr, String path, Class precompiledTemplate) {
>         tr.put (precompiledTemplate, path, precompiledTemplate);
184,185d337
<     public TextEmitter getConnectionEndpointEditPolicyEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ConnectionEndpointEditPolicy::ConnectionEndpointEditPolicy");
187a342,347
>     private TextEmitter retrieve (Class key) throws UnexpectedBehaviourException {
>         try {
>             return new JETEmitterAdapter (myFactory.acquireEmitter (key));
>         } catch (NoSuchTemplateException ex) {
>             throw new UnexpectedBehaviourException (ex.getMessage (), ex);
>         }
188,189d341
<     public TextEmitter getConnectionEndpointEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::policies::ConnectionEndpointEditPolicy::qualifiedClassName");
192,193d349
<     public TextEmitter getValidationProviderGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ValidationProvider::ValidationProvider");
196,197d353
<     public TextEmitter getValidateActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ValidateAction::ValidateAction");
200,200c390,390
<     public TextEmitter getValidateActionQualifiedNameGenerator () throws UnexpectedBehaviourException {
---
>     public TextEmitter getNodeLabelEditPartEmitter () throws UnexpectedBehaviourException {
201,201c391,391
<         return retrieveXpand ("xpt::providers::ValidateAction::qualifiedClassName");
---
>         return retrieve (NodeLabelEditPartGenerator.class);
204,204c542,542
<     public TextEmitter getMetricProviderEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getMetricProviderEmitter () throws UnexpectedBehaviourException {
205,205c543,543
<         return retrieveXpand ("xpt::providers::MetricProvider::MetricProvider");
---
>         return retrieve (MetricProviderGenerator.class);
208,209d365
<     public TextEmitter getMetricsActionEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::MetricsAction::MetricsAction");
212,212c394,394
<     public TextEmitter getMetricsActionQualifiedNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getExternalNodeLabelEditPartEmitter () throws UnexpectedBehaviourException {
213,213c395,395
<         return retrieveXpand ("xpt::providers::MetricsAction::qualifiedClassName");
---
>         return retrieve (ExternalNodeLabelEditPartGenerator.class);
216,217d373
<     public TextEmitter getDomainElementInitializerGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::DomainElementInitializer::DomainElementInitializer");
220,220c398,398
<     public TextEmitter getDomainElementInitializerQualifiedNameGenerator () throws UnexpectedBehaviourException {
---
>     public TextEmitter getChildNodeEditPartEmitter () throws UnexpectedBehaviourException {
221,221c399,399
<         return retrieveXpand ("xpt::providers::DomainElementInitializer::qualifiedClassName");
---
>         return retrieve (ChildNodeEditPartGenerator.class);
224,225d381
<     public TextEmitter getCompartmentEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::CompartmentEditPart::CompartmentEditPart");
228,229d385
<     public TextEmitter getDiagramEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::DiagramEditPart::DiagramEditPart");
232,233d389
<     public TextEmitter getEditPartFactoryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::EditPartFactory::EditPartFactory");
236,237d393
<     public TextEmitter getLinkEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::LinkEditPart::LinkEditPart");
240,241d397
<     public TextEmitter getLinkLabelEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::LinkLabelEditPart::LinkLabelEditPart");
244,245d401
<     public TextEmitter getChildNodeEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::ChildNodeEditPart::ChildNodeEditPart");
248,249d405
<     public TextEmitter getNodeEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::NodeEditPart::NodeEditPart");
252,253d409
<     public TextEmitter getNodeLabelEditPartGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::diagram::parts::NodeLabelEditPart::NodeLabelEditPart");
256,257d413
<     public TextEmitter getPluginGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::Plugin::Plugin");
260,261d417
<     public TextEmitter getActionBarContributorGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ActionBarContributor::ActionBarContributor");
264,265d421
<     public TextEmitter getOpenDiagramInViewActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::OpenDiagramInViewAction::OpenDiagramInViewAction");
268,268c402,402
<     public TextEmitter getOpenDiagramInViewActionQualifiedClassNameGenerator () throws UnexpectedBehaviourException {
---
>     public TextEmitter getCompartmentEditPartEmitter () throws UnexpectedBehaviourException {
269,269c403,403
<         return retrieveXpand ("xpt::editor::OpenDiagramInViewAction::qualifiedClassName");
---
>         return retrieve (CompartmentEditPartGenerator.class);
272,273d429
<     public TextEmitter getEditorGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::Editor::Editor");
276,277d433
<     public TextEmitter getMatchingStrategyEmitter () {
<         return retrieveXpand ("xpt::editor::MatchingStrategy::MatchingStrategy");
280,281d437
<     public TextEmitter getCreationWizardGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::CreationWizard::CreationWizard");
284,285d441
<     public TextEmitter getCreationWizardPageGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::CreationWizardPage::CreationWizardPage");
288,289d445
<     public TextEmitter getDiagramEditorUtilGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::DiagramEditorUtil::DiagramEditorUtil");
292,293d449
<     public TextEmitter getPaletteFactoryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::palette::PaletteFactory::Factory");
296,297d453
<     public TextEmitter getVisualIDRegistryGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::VisualIDRegistry::VisualIDRegistry");
299a458,459
>     public TextEmitter getTextNonResizableEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (TextNonResizableEditPolicyGenerator.class);
300,300c442,442
<     public TextEmitter getManifestGenerator () throws UnexpectedBehaviourException {
---
>     public TextEmitter getGraphicalNodeEditPolicyEmitter () throws UnexpectedBehaviourException {
301,301c443,443
<         return retrieveXpand ("xpt::manifest::manifest");
---
>         return retrieve (GraphicalNodeEditPolicyGenerator.class);
303a462,463
>     public TextEmitter getExternalNodeLabelHostLayoutEditPolicyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ExternalNodeLabelHostLayoutEditPolicyGenerator.class);
304,304c446,446
<     public TextEmitter getBuildPropertiesGenerator () throws UnexpectedBehaviourException {
---
>     public TextEmitter getNodeItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
305,305c447,447
<         return retrieveXpand ("xpt::buildProperties::buildProperties");
---
>         return retrieve (NodeItemSemanticEditPolicyGenerator.class);
307a466,467
>     public TextEmitter getAbstractParserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (AbstractParserGenerator.class);
308,308c450,450
<     public TextEmitter getPluginXML () throws UnexpectedBehaviourException {
---
>     public TextEmitter getLinkItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
309,309c451,451
<         return retrieveXpand ("xpt::plugin::plugin");
---
>         return retrieve (LinkItemSemanticEditPolicyGenerator.class);
311a470,471
>     public TextEmitter getStructuralFeatureParserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (StructuralFeatureParserGenerator.class);
312,313d469
<     public TextEmitter getModelElementSelectionPageEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ModelElementSelectionPage::ModelElementSelectionPage");
315a474,475
>     public TextEmitter getStructuralFeaturesParserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (StructuralFeaturesParserGenerator.class);
316,316c406,406
<     public TextEmitter getModelElementSelectionPageQualifiedNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getLinkEditPartEmitter () throws UnexpectedBehaviourException {
317,317c407,407
<         return retrieveXpand ("xpt::editor::ModelElementSelectionPage::qualifiedClassName");
---
>         return retrieve (LinkEditPartGenerator.class);
319a478,479
>     public TextEmitter getViewFactoryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ViewFactoryGenerator.class);
320,321d477
<     public TextEmitter getInitDiagramFileActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::InitDiagramFileAction::InitDiagramFileAction");
323a482,483
>     public TextEmitter getLabelViewFactoryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LabelViewFactoryGenerator.class);
324,325d481
<     public TextEmitter getNewDiagramFileWizardGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::NewDiagramFileWizard::NewDiagramFileWizard");
327a486,487
>     public TextEmitter getLabelTextViewFactoryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LabelTextViewFactoryGenerator.class);
328,329d485
<     public TextEmitter getURISelectorPageGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::URISelectorPage::URISelectorPage");
331a490,491
>     public TextEmitter getElementTypesEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ElementTypesGenerator.class);
332,332c410,410
<     public TextEmitter getURISelectorPageQualifiedClassNameGenerator () throws UnexpectedBehaviourException {
---
>     public TextEmitter getLinkLabelEditPartEmitter () throws UnexpectedBehaviourException {
333,333c411,411
<         return retrieveXpand ("xpt::editor::URISelectorPage::qualifiedClassName");
---
>         return retrieve (LinkLabelEditPartGenerator.class);
335a494,495
>     public TextEmitter getViewProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ViewProviderGenerator.class);
336,337d493
<     public TextEmitter getShortcutPropertyTesterEmitter () {
<         return retrieveXpand ("xpt::editor::ShortcutPropertyTester::ShortcutPropertyTester");
339a498,499
>     public TextEmitter getEditPartProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (EditPartProviderGenerator.class);
340,341d497
<     public TextEmitter getShortcutCreationWizardEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::ShortcutCreationWizard::ShortcutCreationWizard");
343a502,503
>     public TextEmitter getContributionItemProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ContributionItemProviderGenerator.class);
344,344c414,414
<     public TextEmitter getShortcutCreationWizardQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getEditPartFactoryEmitter () throws UnexpectedBehaviourException {
345,345c415,415
<         return retrieveXpand ("xpt::editor::ShortcutCreationWizard::qualifiedClassName");
---
>         return retrieve (EditPartFactoryGenerator.class);
347a506,507
>     public TextEmitter getModelingAssistantProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ModelingAssistantProviderGenerator.class);
348,348c594,594
<     public TextEmitter getCreateShortcutActionEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getCreateShortcutActionEmitter () throws UnexpectedBehaviourException {
349,349c595,595
<         return retrieveXpand ("xpt::editor::CreateShortcutAction::CreateShortcutAction");
---
>         return retrieve (CreateShortcutActionGenerator.class);
352,353d509
<     public TextEmitter getShortcutProviderEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ShortcutProvider::ShortcutProvider");
356,356c418,418
<     public TextEmitter getShortcutProviderQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getBaseItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
357,357c419,419
<         return retrieveXpand ("xpt::providers::ShortcutProvider::qualifiedClassName");
---
>         return retrieve (ItemSemanticEditPolicyGenerator.class);
359a518,519
>     public TextEmitter getIconProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (IconProviderGenerator.class);
360,361d517
<     public TextEmitter getCreateShortcutNodeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateShortcutNodeCommand::CreateShortcutNodeCommand");
363a522,523
>     public TextEmitter getParserProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ParserProviderGenerator.class);
364,364c426,426
<     public TextEmitter getCreateShortcutNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getDiagramCanonicalEditPolicyEmitter () throws UnexpectedBehaviourException {
365,365c427,427
<         return retrieveXpand ("xpt::commands::CreateShortcutNodeCommand::qualifiedClassName");
---
>         return retrieve (DiagramCanonicalEditPolicyGenerator.class);
367a526,527
>     public TextEmitter getValidationProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ValidationProviderGenerator.class);
368,369d525
<     public TextEmitter getCreateShortcutEdgeCommandEmitter () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::commands::CreateShortcutEdgeCommand::CreateShortcutEdgeCommand");
371a530,531
>     public TextEmitter getValidationDecoratorProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ValidationDecoratorProviderGenerator.class);
372,372c430,430
<     public TextEmitter getCreateShortcutEdgeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getChildContainerCanonicalEditPolicyEmitter () throws UnexpectedBehaviourException {
373,373c431,431
<         return retrieveXpand ("xpt::commands::CreateShortcutEdgeCommand::qualifiedClassName");
---
>         return retrieve (ChildContainerCanonicalEditPolicyGenerator.class);
375a534,535
>     public TextEmitter getShortcutsDecoratorProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ShortcutsDecoratorProviderGenerator.class);
376,377d533
<     public TextEmitter getElementChooserEmitter () {
<         return retrieveXpand ("xpt::editor::ElementChooser::ElementChooser");
379a538,539
>     public TextEmitter getShortcutPropertyTesterEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ShortcutsPropertyTester.class);
380,381d537
<     public TextEmitter getLoadResourceActionGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::editor::LoadResourceAction::LoadResourceAction");
384,385d541
<     public TextEmitter getElementTypesGenerator () throws UnexpectedBehaviourException {
<         return retrieveXpand ("xpt::providers::ElementTypes::ElementTypes");
388,388c454,454
<     public TextEmitter getPluginPropertiesGenerator () throws UnexpectedBehaviourException {
---
>     public TextEmitter getTextSelectionEditPolicyEmitter () throws UnexpectedBehaviourException {
389,389c455,455
<         return retrieveXpand ("xpt::properties::properties");
---
>         return retrieve (TextSelectionEditPolicyGenerator.class);
392a551,551
>         return retrieve (AbstractExpressionGenerator.class);
393,393d550
<         return retrieveXpand ("xpt::expressions::AbstractExpression::AbstractExpression");
396a555,555
>         return retrieve (OCLExpressionFactoryGenerator.class);
397,397d554
<         return retrieveXpand ("xpt::expressions::OCLExpressionFactory::OCLExpressionFactory");
400a559,559
>         return retrieve (RegexpExpressionFactoryGenerator.class);
401,401d558
<         return retrieveXpand ("xpt::expressions::RegexpExpressionFactory::RegexpExpressionFactory");
403a562,563
>     public TextEmitter getInitDiagramFileActionEmitter () throws UnexpectedBehaviourException {
>         return retrieve (InitDiagramFileActionGenerator.class);
404,404c422,422
<     public TextEmitter getOpenDiagramEditPolicyEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getOpenDiagramEditPolicyEmitter () throws UnexpectedBehaviourException {
405,405c423,423
<         return retrieveXpand ("xpt::diagram::policies::OpenDiagramEditPolicy::OpenDiagramEditPolicy");
---
>         return retrieve (OpenDiagramPolicyGenerator.class);
407a566,567
>     public TextEmitter getNewDiagramFileWizardEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NewDiagramFileWizardGenerator.class);
408,409d565
<     public TextEmitter getAppearancePreferencePageEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::AppearancePreferencePage::AppearancePreferencePage");
411a570,571
>     public TextEmitter getPaletteEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PaletteFactoryGenerator.class);
412,413d569
<     public TextEmitter getAppearancePreferencePageQualifiedClassNameEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::AppearancePreferencePage::qualifiedClassName");
415a574,575
>     public TextEmitter getDiagramEditorUtilEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DiagramEditorUtilGenerator.class);
416,417d573
<     public TextEmitter getGeneralPreferencePageEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::GeneralPreferencePage::GeneralPreferencePage");
419a578,579
>     public TextEmitter getVisualIDRegistryEmitter () throws UnexpectedBehaviourException {
>         return retrieve (VisualIDRegistryGenerator.class);
420,421d577
<     public TextEmitter getGeneralPreferencePageQualifiedClassNameEmitter () {
<         return retrieveXpand ("xpt::diagram::preferences::GeneralPreferencePage::qualifiedClassName");
423a582,583
>     public TextEmitter getCreationWizardEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CreationWizardGenerator.class);
424,424c690,690
<     public BinaryEmitter getDiagramIconEmitter () throws UnexpectedBehaviourException {
---
>     public BinaryEmitter getDiagramIconEmitter () throws UnexpectedBehaviourException {
425,425c691,691
<         return newGIFEmitterAdapter ("/xpt/editor/diagram.gif");
---
>         return newGIFEmitterAdapter ("/editor/diagram.gif");
427a586,587
>     public TextEmitter getCreationWizardPageEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CreationWizardPageGenerator.class);
428,428c694,694
<     public BinaryEmitter getWizardBannerImageEmitter () throws UnexpectedBehaviourException {
---
>     public BinaryEmitter getWizardBannerImageEmitter () throws UnexpectedBehaviourException {
429,429c695,695
<         return newGIFEmitterAdapter ("/xpt/editor/wizban.gif");
---
>         return newGIFEmitterAdapter ("/editor/wizban.gif");
431a590,591
>     public TextEmitter getEditorEmitter () throws UnexpectedBehaviourException {
>         return retrieve (EditorGenerator.class);
432,432c434,434
<     public TextEmitter getWizardBannerStemEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getDiagramItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
433,433c435,435
<         return retrieveXpand ("xpt::editor::CreationWizard::wizardBannerStem");
---
>         return retrieve (DiagramItemSemanticEditPolicyGenerator.class);
436,436c438,438
<     public TextEmitter getWizardBannerLocationEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getCompartmentItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException {
437,437c439,439
<         return retrieveXpand ("xpt::editor::CreationWizard::wizardBannerLocation");
---
>         return retrieve (CompartmentItemSemanticEditPolicyGenerator.class);
439a598,599
>     public TextEmitter getCreateShortcutDecorationCommandEmitter () throws UnexpectedBehaviourException {
>         return retrieve (CreateShortcutDecorationsCommand.class);
440,440c726,726
<     private BinaryEmitter newGIFEmitter (String relativePath) throws UnexpectedBehaviourException {
---
>     private BinaryEmitter newGIFEmitter (String relativePath) throws UnexpectedBehaviourException {
441,441c727,727
<         return new GIFEmitter (checkTemplateLocation (relativePath));
---
>         return new GIFEmitter (checkTemplateLocation (relativePath));
443a602,603
>     public TextEmitter getLoadResourceActionEmitter () throws UnexpectedBehaviourException {
>         return retrieve (LoadResourceActionGenerator.class);
444,444c730,730
<     private BinaryEmitter newGIFEmitterAdapter (String relativePath) throws UnexpectedBehaviourException {
---
>     private BinaryEmitter newGIFEmitterAdapter (String relativePath) throws UnexpectedBehaviourException {
445,445c731,731
<         return new JETGIFEmitterAdapter (new org.eclipse.emf.codegen.util.GIFEmitter (checkTemplateLocation (relativePath)));
---
>         return new JETGIFEmitterAdapter (new org.eclipse.emf.codegen.util.GIFEmitter (checkTemplateLocation (relativePath)));
447a606,607
>     public TextEmitter getElementChooserEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ElementChooserGenerator.class);
448,448c734,734
<     private String checkTemplateLocation (String relativePath) throws UnexpectedBehaviourException {
---
>     private String checkTemplateLocation (String relativePath) throws UnexpectedBehaviourException {
449,449c735,735
<         String templateLocation = JETCompiler.find (getTemplatePath (), relativePath);
---
>         String templateLocation = JETCompiler.find (getTemplatePath (), relativePath);
450,450c736,736
<         if (templateLocation == null) {
---
>         if (templateLocation == null) {
451,451c737,737
<             throw new UnexpectedBehaviourException ("Template " + relativePath + " not found");
---
>             throw new UnexpectedBehaviourException ("Template " + relativePath + " not found");
451a738,739
>         }
>         return templateLocation;
452a609,611
> 
>     public TextEmitter getDocumentProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (DocumentProviderGenerator.class);
453,453d608
<         return templateLocation;
455a614,615
>     public TextEmitter getActionBarContributorEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ActionBarContributorGenerator.class);
456,456c350,350
<     private String [] getTemplatePath () {
---
>     private String [] getTemplatePath () {
457,457c351,351
<         return myTemplatePath;
---
>         return myTemplatePath;
459a618,619
>     public TextEmitter getMatchingStrategyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (MatchingStrategyGenerator.class);
460,461d617
<     private static Bundle getTemplatesBundle () {
<         return Activator.getDefault ();
463a622,623
>     public TextEmitter getPreferencesInitializerEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PreferencesInitializerGenerator.class);
464,464c354,354
<     private static Bundle getCodegenTemplatesBundle () {
---
>     private static Bundle getTemplatesBundle () {
465,465c355,355
<         return Platform.getBundle (CODEGEN_PLUGIN_ID);
---
>         return Platform.getBundle (TEMPLATES_PLUGIN_ID);
467a626,627
>     public TextEmitter getNavigatorContentProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorContentProviderGenerator.class);
468,468c358,358
<     public URL getJMergeControlFile () {
---
>     public URL getJMergeControlFile () {
469,469c359,359
<         return getCodegenTemplatesBundle ().getEntry ("/templates/emf-merge.xml");
---
>         return getTemplatesBundle ().getEntry ("/templates/emf-merge.xml");
472,472c682,682
<     public BinaryEmitter getShortcutImageEmitter () throws UnexpectedBehaviourException {
---
>     public BinaryEmitter getShortcutImageEmitter () throws UnexpectedBehaviourException {
473,473c683,683
<         return newGIFEmitter ("/xpt/editor/shortcut.gif");
---
>         return newGIFEmitter ("/editor/shortcut.gif");
475a634,635
>     public TextEmitter getNavigatorLinkHelperEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorLinkHelperGenerator.class);
476,477d633
<     public TextEmitter getNavigatorContentProviderEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorContentProvider::NavigatorContentProvider");
480,481d637
<     public TextEmitter getDomainNavigatorContentProviderEmitter () {
<         return retrieveXpand ("xpt::navigator::DomainNavigatorContentProvider::DomainNavigatorContentProvider");
484,485d641
<     public TextEmitter getDomainNavigatorLabelProviderEmitter () {
<         return retrieveXpand ("xpt::navigator::DomainNavigatorLabelProvider::DomainNavigatorLabelProvider");
488,489d645
<     public TextEmitter getDomainNavigatorItemEmitter () {
<         return retrieveXpand ("xpt::navigator::DomainNavigatorItem::DomainNavigatorItem");
491a650,651
>     public TextEmitter getNavigatorGroupEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorGroupGenerator.class);
492,493d649
<     public TextEmitter getDomainModelElementTesterEmitter () {
<         return retrieveXpand ("xpt::editor::DomainModelElementTester::DomainModelElementTester");
495a654,655
>     public TextEmitter getNavigatorItemEmitter () throws UnexpectedBehaviourException {
>         return retrieve (NavigatorItemGenerator.class);
496,497d653
<     public TextEmitter getURIEditorInputTesterEmitter () {
<         return retrieveXpand ("xpt::editor::UriEditorInputTester::UriEditorInputTester");
499a658,659
>     public TextEmitter getPluginClassEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PluginGenerator.class);
500,500c630,630
<     public TextEmitter getNavigatorLabelProviderEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getNavigatorLabelProviderEmitter () throws UnexpectedBehaviourException {
501,501c631,631
<         return retrieveXpand ("xpt::navigator::NavigatorLabelProvider::NavigatorLabelProvider");
---
>         return retrieve (NavigatorLabelProviderGenerator.class);
503a662,663
>     public TextEmitter getPluginXmlEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PluginXML.class);
504,505d661
<     public TextEmitter getNavigatorLinkHelperEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorLinkHelper::NavigatorLinkHelper");
507a666,667
>     public TextEmitter getPluginPropertiesEmitter () throws UnexpectedBehaviourException {
>         return retrieve (PluginPropertiesGenerator.class);
508,508c638,638
<     public TextEmitter getNavigatorSorterEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getNavigatorSorterEmitter () throws UnexpectedBehaviourException {
509,509c639,639
<         return retrieveXpand ("xpt::navigator::NavigatorSorter::NavigatorSorter");
---
>         return retrieve (NavigatorSorterGenerator.class);
511a670,671
>     public TextEmitter getOptionsFileEmitter () throws UnexpectedBehaviourException {
>         return retrieve (OptionsFileGenerator.class);
512,512c642,642
<     public TextEmitter getNavigatorActionProviderEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getNavigatorActionProviderEmitter () throws UnexpectedBehaviourException {
513,513c643,643
<         return retrieveXpand ("xpt::navigator::NavigatorActionProvider::NavigatorActionProvider");
---
>         return retrieve (NavigatorActionProviderGenerator.class);
515a674,675
>     public TextEmitter getBundleManifestEmitter () throws UnexpectedBehaviourException {
>         return retrieve (ManifestGenerator.class);
516,516c646,646
<     public TextEmitter getAbstractNavigatorItemEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getAbstractNavigatorItemEmitter () throws UnexpectedBehaviourException {
517,517c647,647
<         return retrieveXpand ("xpt::navigator::AbstractNavigatorItem::AbstractNavigatorItem");
---
>         return retrieve (AbstractNavigatorItemGenerator.class);
519a678,679
>     public TextEmitter getBuildPropertiesEmitter () throws UnexpectedBehaviourException {
>         return retrieve (BuildPropertiesGenerator.class);
520,521d677
<     public TextEmitter getNavigatorGroupEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorGroup::NavigatorGroup");
524,525d681
<     public TextEmitter getNavigatorItemEmitter () {
<         return retrieveXpand ("xpt::navigator::NavigatorItem::NavigatorItem");
529,529c687,687
<         return newGIFEmitter ("/xpt/navigator/navigatorGroup.gif");
---
>         return newGIFEmitter ("/navigator/navigatorGroup.gif");
532,532c510,510
<     public TextEmitter getPropertySheetLabelProviderEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getPropertySheetLabelProviderEmitter () throws UnexpectedBehaviourException {
533,533c511,511
<         return retrieveXpand ("xpt::propsheet::SheetLabelProvider::SheetLabelProvider");
---
>         return retrieve (SheetLabelProviderGenerator.class);
536,536c514,514
<     public TextEmitter getPropertySectionEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getPropertySectionEmitter () throws UnexpectedBehaviourException {
537,537c515,515
<         return retrieveXpand ("xpt::propsheet::PropertySection::PropertySection");
---
>         return retrieve (PropertySectionGenerator.class);
540,540c702,702
<     public TextEmitter getApplicationEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getApplicationEmitter () throws UnexpectedBehaviourException {
541,541c703,703
<         return retrieveXpand ("xpt::application::Application::Application");
---
>         return retrieve (ApplicationGenerator.class);
544,544c698,698
<     public TextEmitter getActionBarAdvisorEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getActionBarAdvisorEmitter () throws UnexpectedBehaviourException {
545,545c699,699
<         return retrieveXpand ("xpt::application::ActionBarAdvisor::ActionBarAdvisor");
---
>         return retrieve (ActionBarAdvisorGenerator.class);
548a707,707
>         return retrieve (PerspectiveGenerator.class);
549,549d706
<         return retrieveXpand ("xpt::application::Perspective::Perspective");
552a711,711
>         return retrieve (WorkbenchAdvisorGenerator.class);
553,553d710
<         return retrieveXpand ("xpt::application::WorkbenchAdvisor::WorkbenchAdvisor");
556a715,715
>         return retrieve (WorkbenchWindowAdvisorGenerator.class);
557,557d714
<         return retrieveXpand ("xpt::application::WorkbenchWindowAdvisor::WorkbenchWindowAdvisor");
559a718,719
>     public TextEmitter getURIDiagramDocumentProviderEmitter () throws UnexpectedBehaviourException {
>         return retrieve (URIDiagramDocumentProviderGenerator.class);
560,560c546,546
<     public TextEmitter getMarkerNavigationProviderEmitter () throws UnexpectedBehaviourException {
---
>     public TextEmitter getMarkerNavigationProviderEmitter () throws UnexpectedBehaviourException {
561,561c547,547
<         return retrieveXpand ("xpt::providers::MarkerNavigationProvider::MarkerNavigationProvider");
---
>         return retrieve (MarkerNavigationProviderGenerator.class);
563a722,723
>     public TextEmitter getURIEditorInputProxyEmitter () throws UnexpectedBehaviourException {
>         return retrieve (URIEditorInputProxyGenerator.class);
564,565d721
<     public TextEmitter getExternalizeEmitter () {
<         return retrieveXpand ("xpt::Externalizer::Access");
568,569d725
<     public TextEmitter getMessagesEmitter () {
<         return retrieveXpand ("xpt::Externalizer::Values");
572,581d729
<     private TextEmitter retrieveXpand (String templateFQN) {
<         if (myCachedXpandEmitters == null) {
<             return newXpandEmitter (templateFQN);
<         }
<         TextEmitter result = myCachedXpandEmitters.get (templateFQN);
<         if (result == null) {
<             result = newXpandEmitter (templateFQN);
<             myCachedXpandEmitters.put (templateFQN, result);
<         }
<         return result;
584,585d733
<     private TextEmitter newXpandEmitter (String templateFQN) {
<         return new XpandTextEmitter (myResourceManager, templateFQN, getClass ().getClassLoader ());
588,588d741
<     private HashMap < String, TextEmitter > myCachedXpandEmitters;
