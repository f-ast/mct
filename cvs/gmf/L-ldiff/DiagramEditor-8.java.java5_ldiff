28a29,30
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
32a35,36
> import org.eclipse.emf.transaction.util.TransactionUtil;
> 
44a51,51
> import org.eclipse.gef.commands.CommandStackEvent;
45,45d50
< import org.eclipse.gef.commands.Command;
46,46c52,52
< 
---
> 
46a53,54
> import org.eclipse.gef.commands.CommandStackEventListener;
> 
159a191,191
>         getCommandStack ().addCommandStackEventListener (mySaveListener);
165a198,198
>             getCommandStack ().removeCommandStackEventListener (mySaveListener);
169a203,208
>         ForceTrackingModificationAdapter adapter = (ForceTrackingModificationAdapter) EcoreUtil.getExistingAdapter (getEditingDomain ().getResourceSet (), ForceTrackingModificationAdapter.class);
>         assert adapter != null;
>         adapter.release ();
>         if (adapter.isReleased ()) {
>             getEditingDomain ().getResourceSet ().eAdapters ().remove (adapter);
>         }
238a278,290
>     protected TransactionalEditingDomain getEditingDomain (IEditorInput input) {
>         if (input instanceof DiagramEditorInput) {
>             TransactionalEditingDomain result = TransactionUtil.getEditingDomain (((DiagramEditorInput) input).getDiagram ());
>             if (result != null) {
>                 ForceTrackingModificationAdapter adapter = (ForceTrackingModificationAdapter) EcoreUtil.getExistingAdapter (result.getResourceSet (), ForceTrackingModificationAdapter.class);
>                 if (adapter == null) {
>                     adapter = new ForceTrackingModificationAdapter ();
>                     result.getResourceSet ().eAdapters ().add (adapter);
>                 }
>                 adapter.acquire ();
>             }
>             return result;
>         }
239,239d277
<     protected TransactionalEditingDomain getEditingDomain (IEditorInput editorInput) {
257a103,103
>     private CommandStackEventListener mySaveListener = new CommandStackEventListener () {
258,258d102
<         domain.setCommandStack (new CommandStack () {
259a105,107
>         public void stackChanged (CommandStackEvent event) {
>             if (event.isPostChangeEvent () && isSaved ()) {
>                 getCommandStack ().markSaveLocation ();
259,259c104,104
< 
---
> 
260,265d104
<             @Override
<             public void execute (Command command) {
<                 super.execute (command);
<                 if (isSaved ()) {
<                     markSaveLocation ();
<                 }
266a109,109
>         }
266,266c108,108
<             }
---
>             }
267a111,116
>         private boolean isSaved () {
>             for (Iterator it = getEditingDomain ().getResourceSet ().getResources ().iterator ();
>             it.hasNext ();) {
>                 Resource next = (Resource) it.next ();
>                 if (! next.isLoaded ()) {
>                     continue;
267,267c110,110
< 
---
> 
268,272d110
<             @Override
<             public void undo () {
<                 super.undo ();
<                 if (isSaved ()) {
<                     markSaveLocation ();
273,273c117,117
<                 }
---
>                 }
273a118,120
>                 if (! next.isTrackingModification () || next.isModified ()) {
>                     return false;
>                 }
274,274c121,121
<             }
---
>             }
274a122,123
>             return true;
>         }
275a125,125
>     }
275,275c124,124
< 
---
> 
276,282d124
<             @Override
<             public void redo () {
<                 super.redo ();
<                 if (isSaved ()) {
<                     markSaveLocation ();
<                 }
<             }
283,283c126,126
< 
---
> 
284,299d126
<             private boolean isSaved () {
<                 for (Iterator it = getEditingDomain ().getResourceSet ().getResources ().iterator ();
<                 it.hasNext ();) {
<                     Resource next = (Resource) it.next ();
<                     if (! next.isLoaded ()) {
<                         continue;
<                     }
<                     if (! next.isTrackingModification () || next.isModified ()) {
<                         return false;
<                     }
<                 }
<                 return true;
<             }
< 
<         }
< 
300,300c127,127
<         );
---
>     ;
345a354,374
>         @Override
>         public boolean isAdapterForType (Object type) {
>             return ForceTrackingModificationAdapter.class.equals (type);
>         }
> 
>         public void acquire () {
>             myRefCount ++;
>         }
> 
>         public void release () {
>             if (myRefCount == 0) {
>                 throw new IllegalStateException ();
>             }
>             myRefCount --;
>         }
> 
>         public boolean isReleased () {
>             return myRefCount == 0;
>         }
> 
>         private int myRefCount;
