4a5,6
> import java.util.Collections;
> 
77a80,80
>                 break;
148,148d150
<         figure.translateToAbsolute (bounds);
159a162,180
>         if (epStart instanceof DiagramEditPart) {
>             Point location = viewport.getViewLocation ().getCopy ();
>             switch (direction) {
>                 case PositionConstants.NORTH :
>                     location.translate (0, - pageDistance);
>                     break;
>                 case PositionConstants.SOUTH :
>                     location.translate (0, pageDistance);
>                     break;
>                 case PositionConstants.EAST :
>                     location.translate (pageDistance, 0);
>                     break;
>                 case PositionConstants.WEST :
>                     location.translate (- pageDistance, 0);
>                     break;
>             }
>             viewport.setViewLocation (location);
>         }
>         List < GraphicalEditPart > editParts = findPageSibling (getPartNavigationSiblings (), pStart, pageDistance, direction, epStart);
160,160d161
<         List editParts = findPageSibling (getPartNavigationSiblings (), pStart, pageDistance, direction, epStart);
163a184,184
>             Iterator < GraphicalEditPart > parts = editParts.iterator ();
164,164d183
<             Iterator parts = editParts.iterator ();
165,165c185,185
<             while (parts.hasNext ()) navigateToPart ((EditPart) parts.next (), event);
---
>             while (parts.hasNext ()) navigateToPart (parts.next (), event);
168,168c188,188
<             EditPart part = (EditPart) editParts.get (editParts.size () - 1);
---
>             EditPart part = editParts.get (editParts.size () - 1);
175a196,208
>         if (epStart instanceof DiagramEditPart) {
>             Viewport viewport = findViewport (epStart);
>             switch (direction) {
>                 case PositionConstants.NORTH :
>                 case PositionConstants.WEST :
>                     viewport.setViewLocation (viewport.getHorizontalRangeModel ().getMinimum (), viewport.getVerticalRangeModel ().getMinimum ());
>                     break;
>                 case PositionConstants.SOUTH :
>                 case PositionConstants.EAST :
>                     viewport.setViewLocation (viewport.getHorizontalRangeModel ().getMaximum (), viewport.getVerticalRangeModel ().getMaximum ());
>                     break;
>             }
>         }
179,179c212,212
<         List editParts = findEndSibling (getPartNavigationSiblings (), pStart, direction, epStart);
---
>         List < GraphicalEditPart > editParts = findEndSibling (getPartNavigationSiblings (), pStart, direction, epStart);
182a216,216
>             Iterator < GraphicalEditPart > parts = editParts.iterator ();
183,183d215
<             Iterator parts = editParts.iterator ();
184,184c217,217
<             while (parts.hasNext ()) navigateToPart ((EditPart) parts.next (), event);
---
>             while (parts.hasNext ()) navigateToPart (parts.next (), event);
187,187c220,220
<             EditPart part = (EditPart) editParts.get (editParts.size () - 1);
---
>             EditPart part = editParts.get (editParts.size () - 1);
193,193c226,226
<     private List findPageSibling (List siblings, Point pStart, int pageDistance, int direction, EditPart exclude) {
---
>     private List < GraphicalEditPart > findPageSibling (List siblings, Point pStart, int pageDistance, int direction, EditPart exclude) {
196,196c270,270
<         List selection = new ArrayList ();
---
>         List < GraphicalEditPart > selection = new ArrayList < GraphicalEditPart > ();
198a233,233
>         int distance = Integer.MAX_VALUE;
199,199c234,234
<         int distance = 0;
---
>         int furthestDistance = 0;
208,208c243,243
<             if (pStart.getPosition (pCurrent) != direction) continue;
---
>             if (! isInDirection (direction, pStart, pCurrent)) continue;
211,211c246,246
<             if (d <= pageDistance) {
---
>             if (d >= pageDistance) {
213,213c248,248
<                 if (d > distance) {
---
>                 if (d < distance) {
217a253,255
>             if (d > furthestDistance) {
>                 epFurthest = epCurrent;
>             }
222a261,263
>         if (selection.isEmpty () && epFurthest != null) {
>             return Collections.singletonList (epFurthest);
>         }
226,226c267,267
<     private List findEndSibling (List siblings, Point pStart, int direction, EditPart exclude) {
---
>     private List < GraphicalEditPart > findEndSibling (List siblings, Point pStart, int direction, EditPart exclude) {
228a229,229
>         GraphicalEditPart epFurthest = null;
229,229c230,230
<         List selection = new ArrayList ();
---
>         List < GraphicalEditPart > selection = new ArrayList < GraphicalEditPart > ();
241,241c282,282
<             if (pStart.getPosition (pCurrent) != direction) continue;
---
>             if (! isInDirection (direction, pStart, pCurrent)) continue;
321a363,376
>     private boolean isInDirection (int direction, Point start, Point point) {
>         switch (direction) {
>             case PositionConstants.WEST :
>                 return start.x > point.x;
>             case PositionConstants.EAST :
>                 return start.x < point.x;
>             case PositionConstants.NORTH :
>                 return start.y > point.y;
>             case PositionConstants.SOUTH :
>                 return start.y < point.y;
>         }
>         return false;
>     }
> 
