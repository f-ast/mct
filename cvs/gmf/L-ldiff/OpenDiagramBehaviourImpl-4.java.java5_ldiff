28a29,30
>     protected static final boolean OPEN_AS_ECLIPSE_EDITOR_EDEFAULT = true;
>     protected boolean openAsEclipseEditor = OPEN_AS_ECLIPSE_EDITOR_EDEFAULT;
83a86,96
>     public boolean isOpenAsEclipseEditor () {
>         return openAsEclipseEditor;
>     }
> 
>     public void setOpenAsEclipseEditor (boolean newOpenAsEclipseEditor) {
>         boolean oldOpenAsEclipseEditor = openAsEclipseEditor;
>         openAsEclipseEditor = newOpenAsEclipseEditor;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.OPEN_DIAGRAM_BEHAVIOUR__OPEN_AS_ECLIPSE_EDITOR, oldOpenAsEclipseEditor, openAsEclipseEditor));
> 
>     }
> 
123a137,138
>             case GMFGenPackage.OPEN_DIAGRAM_BEHAVIOUR__OPEN_AS_ECLIPSE_EDITOR :
>                 return isOpenAsEclipseEditor () ? Boolean.TRUE : Boolean.FALSE;
138a154,156
>             case GMFGenPackage.OPEN_DIAGRAM_BEHAVIOUR__OPEN_AS_ECLIPSE_EDITOR :
>                 setOpenAsEclipseEditor (((Boolean) newValue).booleanValue ());
>                 return;
153a172,174
>             case GMFGenPackage.OPEN_DIAGRAM_BEHAVIOUR__OPEN_AS_ECLIPSE_EDITOR :
>                 setOpenAsEclipseEditor (OPEN_AS_ECLIPSE_EDITOR_EDEFAULT);
>                 return;
167a189,190
>             case GMFGenPackage.OPEN_DIAGRAM_BEHAVIOUR__OPEN_AS_ECLIPSE_EDITOR :
>                 return openAsEclipseEditor != OPEN_AS_ECLIPSE_EDITOR_EDEFAULT;
181a205,206
>         result.append (", openAsEclipseEditor: ");
>         result.append (openAsEclipseEditor);
