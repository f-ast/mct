5,6d4
< import java.util.HashMap;
< 
18a17,18
> import org.eclipse.core.runtime.IExtension;
> 
55,55c55,55
<                     Log.info (corePlugin, CommonCoreStatusCodes.OK, "Activating provider '" + getElement ().getAttribute (A_CLASS) + "'...");
---
>                     Log.info (corePlugin, CommonCoreStatusCodes.OK, "Activating provider '" + element.getAttribute (A_CLASS) + "'...");
56,56c56,56
<                     provider = (IProvider) getElement ().createExecutableExtension (A_CLASS);
---
>                     provider = (IProvider) element.createExecutableExtension (A_CLASS);
58,58c58,58
<                     Trace.trace (corePlugin, CommonCoreDebugOptions.SERVICES_ACTIVATE, "Provider '" + String.valueOf (provider) + "' activated.");
---
>                     Trace.trace (corePlugin, CommonCoreDebugOptions.SERVICES_ACTIVATE, "Provider '" + provider + "' activated.");
70,70c70,70
<                 IConfigurationElement [] elements = getElement ().getChildren (E_POLICY);
---
>                 IConfigurationElement [] elements = element.getChildren (E_POLICY);
81,81c81,81
<                             policy = (IProviderPolicy) getElement ().createExecutableExtension (E_POLICY);
---
>                             policy = (IProviderPolicy) element.createExecutableExtension (E_POLICY);
82,82c82,82
<                             Trace.trace (corePlugin, CommonCoreDebugOptions.SERVICES_ACTIVATE, "Provider policy '" + String.valueOf (policy) + "' activated.");
---
>                             Trace.trace (corePlugin, CommonCoreDebugOptions.SERVICES_ACTIVATE, "Provider policy '" + policy + "' activated.");
110,110c110,110
<     private static final int cacheSize;
---
>     private static final int priorityCount;
121,121c121,121
<         cacheSize = maxOrdinal + 1;
---
>         priorityCount = maxOrdinal + 1;
125,125c125,125
<     private final Map providers = new HashMap ();
---
>     private final ArrayList [] providers;
138a139,139
>             cache = new Map [priorityCount];
139,139d138
<             cache = new Map [cacheSize];
140,140c140,140
<             for (int ordinal = cacheSize;
---
>             for (int ordinal = priorityCount;
147a148,151
>         providers = new ArrayList [priorityCount];
>         for (int ordinal = priorityCount;
>         -- ordinal >= 0;) providers [ordinal] = new ArrayList (0);
> 
168,168c172,172
<             for (int ordinal = cacheSize;
---
>             for (int ordinal = priorityCount;
175,175c179,179
<     List getProviders (ProviderPriority priority) {
---
>     final List getProviders (ProviderPriority priority) {
176,178d179
<         List result = (List) providers.get (priority);
<         if (null == result) {
<             result = new ArrayList ();
179,179c180,180
<             providers.put (priority, result);
---
>         return providers [priority.getOrdinal ()];
180,181d180
<         }
<         return result;
188,188d186
<         if (! isOptimized ()) {
190a190,190
>             Object cachingKey = getCachingKey (operation);
191a192,200
>             providerList = (List) map.get (cachingKey);
>             if (null != providerList) {
>                 if (optimistic) return providerList;
> 
>                 int n = providerList.size ();
>                 if (n != 0) {
>                     for (int i = 0;
>                     ;) {
>                         IProvider provider = (IProvider) providerList.get (i);
192,199d191
<             providerList = (List) map.get (getCachingKey (operation));
<             if (! isOptimistic () && null != providerList) {
<                 if (providerList.isEmpty ()) {
<                     providerList = null;
<                 } else {
<                     for (Iterator i = providerList.iterator ();
<                     i.hasNext ();) {
<                         IProvider provider = (IProvider) i.next ();
200a202,202
> 
200,200c201,201
<                         if (! provider.provides (operation)) {
---
>                         if (! provider.provides (operation)) break;
201,201c203,203
<                             providerList = null;
---
>                         if (++ i == n) return providerList;
201a204,204
> 
202,203d203
<                             break;
<                         }
207,207c187,187
<             if (null == providerList) {
---
>         if (null == cache) {
209,209c209,209
<                 map.put (getCachingKey (operation), providerList);
---
>             map.put (cachingKey, providerList);
210,210d209
<             }
215a215,219
>         int i;
>         int n = priorityCount;
>         int total;
>         for (i = n, total = 0; -- i >= 0;) total += providers [i].size ();
> 
216,216c220,220
<         List allProviders = new ArrayList ();
---
>         List allProviders = new ArrayList (total);
217,218d220
<         for (Iterator i = providers.values ().iterator ();
<         i.hasNext ();) {
219a222,222
> 
219,219c221,221
<             allProviders.addAll ((List) i.next ());
---
>         for (i = 0; i < n; ++ i) allProviders.addAll (providers [i]);
220,220d221
<         }
226a229,229
>         int ordinal = priority.getOrdinal ();
228,228c231,231
<             cache [priority.getOrdinal ()].clear ();
---
>             cache [ordinal].clear ();
230,230c233,233
<         getProviders (priority).add (provider);
---
>         providers [ordinal].add (provider);
235a239,240
>         for (int i = 0, n = priorityCount;
>         i < n; ++ i) {
236,237d238
<         for (Iterator i = providers.values ().iterator ();
<         i.hasNext ();) {
238,238c241,241
<             if (((List) i.next ()).remove (provider)) {
---
>             if (providers [i].remove (provider)) {
251,251c254,254
<             Trace.trace (CommonCorePlugin.getDefault (), CommonCoreDebugOptions.SERVICES_EXECUTE, "Operation '" + String.valueOf (operation) + "' executed using strategy '" + String.valueOf (strategy) + "'.");
---
>             Trace.trace (CommonCorePlugin.getDefault (), CommonCoreDebugOptions.SERVICES_EXECUTE, "Operation '" + operation + "' executed using strategy '" + strategy + "'.");
262a266,272
>         for (int priority = 0, n = priorityCount;
>         priority < n; ++ priority) {
>             List providerList = providers [priority];
>             int providerCount = providerList.size ();
>             for (int provider = 0;
>             provider < providerCount; ++ provider) if (((IProvider) providerList.get (provider)).provides (operation)) return true;
> 
263,270d265
<         for (Iterator list = providers.values ().iterator ();
<         list.hasNext ();) {
<             for (Iterator provider = ((List) list.next ()).iterator ();
<             provider.hasNext ();) {
<                 if (((IProvider) provider.next ()).provides (operation)) {
<                     return true;
<                 }
<             }
279,279c281,281
<         i < ExecutionStrategy.PRIORITIES.length; i ++) {
---
>         i < ExecutionStrategy.PRIORITIES.length; ++ i) {
282a285,285
>             for (int provider = 0;
282,282c284,284
<             for (Iterator provider = providerList.iterator ();
---
>             int providerCount = providerList.size ();
283,283d284
<             provider.hasNext ();) {
284a287,287
> 
284,284c286,286
<                 if (((IProvider) provider.next ()).provides (operation)) {
---
>             provider < providerCount; ++ provider) if (((IProvider) providerList.get (provider)).provides (operation)) return true;
285,287d286
<                     return true;
<                 }
<             }
297a298,301
>     public final void configureProviders (String namespace, String extensionPointName) {
>         configureProviders (Platform.getExtensionRegistry ().getExtensionPoint (namespace, extensionPointName).getConfigurationElements ());
>     }
> 
301,301c305,305
<         i < elements.length; i ++) {
---
>         i < elements.length; ++ i) {
301a306,307
>             IConfigurationElement element = elements [i];
>             try {
302,302c308,308
<             addProvider (ProviderPriority.parse (getPriority (elements [i])), newProviderDescriptor (elements [i]));
---
>                 addProvider (ProviderPriority.parse (getPriority (element)), newProviderDescriptor (element));
302a309,315
>             } finally {
>                 if (Trace.shouldTrace (CommonCorePlugin.getDefault (), CommonCoreDebugOptions.SERVICES_CONFIG)) {
>                     IExtension extension = element.getDeclaringExtension ();
>                     String identifier = extension.getUniqueIdentifier ();
>                     if (identifier == null) identifier = String.valueOf (extension.getNamespace ());
> 
>                     extension.getExtensionPointUniqueIdentifier ();
303a317,317
>                 }
303,303c316,316
<             Trace.trace (CommonCorePlugin.getDefault (), CommonCoreDebugOptions.SERVICES_CONFIG, "Provider configured from extension '" + String.valueOf (elements [i].getDeclaringExtension ()) + "'.");
---
>                     Trace.trace (CommonCorePlugin.getDefault (), CommonCoreDebugOptions.SERVICES_CONFIG, "Provider of '" + extension.getExtensionPointUniqueIdentifier () + "' configured from extension '" + identifier + "'.");
305a320,323
>         for (int i = priorityCount;
>         -- i >= 0;) providers [i].trimToSize ();
> 
>     }
