150a151,154
> import org.eclipse.gmf.runtime.notation.TextAlignment;
> 
> import org.eclipse.gmf.runtime.notation.TextStyle;
> 
211a216,216
>     private EClass textStyleEClass = null;
220a226,226
>     private EEnum textAlignmentEEnum = null;
830a837,844
>     public EClass getTextStyle () {
>         return textStyleEClass;
>     }
> 
>     public EAttribute getTextStyle_TextAlignment () {
>         return (EAttribute) textStyleEClass.getEStructuralFeatures ().get (0);
>     }
> 
866a881,884
>     public EEnum getTextAlignment () {
>         return textAlignmentEEnum;
>     }
> 
1035a1054,1055
>         textStyleEClass = createEClass (TEXT_STYLE);
>         createEAttribute (textStyleEClass, TEXT_STYLE__TEXT_ALIGNMENT);
1044a1065,1065
>         textAlignmentEEnum = createEEnum (TEXT_ALIGNMENT);
1118a1140,1140
>         textStyleEClass.getESuperTypes ().add (this.getStyle ());
1311a1334,1335
>         initEClass (textStyleEClass, TextStyle.class, "TextStyle", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getTextStyle_TextAlignment (), this.getTextAlignment (), "textAlignment", null, 0, 1, TextStyle.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
1349a1374,1377
>         initEEnum (textAlignmentEEnum, TextAlignment.class, "TextAlignment");
>         addEEnumLiteral (textAlignmentEEnum, TextAlignment.LEFT_LITERAL);
>         addEEnumLiteral (textAlignmentEEnum, TextAlignment.RIGHT_LITERAL);
>         addEEnumLiteral (textAlignmentEEnum, TextAlignment.CENTER_LITERAL);
