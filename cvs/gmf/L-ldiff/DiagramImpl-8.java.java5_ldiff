18a19,20
> import org.eclipse.emf.ecore.EObject;
> 
49a52,52
>     protected static final EStructuralFeature [] edgesFeatures = new EStructuralFeature [] {NotationPackage.Literals.DIAGRAM__PERSISTED_EDGES, NotationPackage.Literals.DIAGRAM__TRANSIENT_EDGES};
95a99,99
>             allEdges = new EContentsEList (this, edgesFeatures);
96,96d98
<             allEdges = new EContentsEList (this, new EStructuralFeature [] {NotationPackage.eINSTANCE.getDiagram_PersistedEdges (), NotationPackage.eINSTANCE.getDiagram_TransientEdges ()});
122a126,137
>             case NotationPackage.DIAGRAM__EANNOTATIONS :
>                 return ((InternalEList) getEAnnotations ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.DIAGRAM__SOURCE_EDGES :
>                 return ((InternalEList) getSourceEdges ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.DIAGRAM__TARGET_EDGES :
>                 return ((InternalEList) getTargetEdges ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.DIAGRAM__PERSISTED_CHILDREN :
>                 return ((InternalEList) getPersistedChildren ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.DIAGRAM__STYLES :
>                 return ((InternalEList) getStyles ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.DIAGRAM__TRANSIENT_CHILDREN :
>                 return ((InternalEList) getTransientChildren ()).basicRemove (otherEnd, msgs);
128,128c143,143
<         return super.eInverseRemove (otherEnd, featureID, msgs);
---
>         return eDynamicInverseRemove (otherEnd, featureID, msgs);
132a148,173
>             case NotationPackage.DIAGRAM__EANNOTATIONS :
>                 return getEAnnotations ();
>             case NotationPackage.DIAGRAM__VISIBLE :
>                 return isVisible () ? Boolean.TRUE : Boolean.FALSE;
>             case NotationPackage.DIAGRAM__TYPE :
>                 return getType ();
>             case NotationPackage.DIAGRAM__MUTABLE :
>                 return isMutable () ? Boolean.TRUE : Boolean.FALSE;
>             case NotationPackage.DIAGRAM__SOURCE_EDGES :
>                 return getSourceEdges ();
>             case NotationPackage.DIAGRAM__TARGET_EDGES :
>                 return getTargetEdges ();
>             case NotationPackage.DIAGRAM__PERSISTED_CHILDREN :
>                 return getPersistedChildren ();
>             case NotationPackage.DIAGRAM__STYLES :
>                 return getStyles ();
>             case NotationPackage.DIAGRAM__ELEMENT :
>                 if (resolve) return getElement ();
> 
>                 return basicGetElement ();
>             case NotationPackage.DIAGRAM__DIAGRAM :
>                 if (resolve) return getDiagram ();
> 
>                 return basicGetDiagram ();
>             case NotationPackage.DIAGRAM__TRANSIENT_CHILDREN :
>                 return getTransientChildren ();
142,142c183,183
<         return super.eGet (featureID, resolve, coreType);
---
>         return eDynamicGet (featureID, resolve, coreType);
146a188,223
>             case NotationPackage.DIAGRAM__EANNOTATIONS :
>                 getEAnnotations ().clear ();
>                 getEAnnotations ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.DIAGRAM__VISIBLE :
>                 setVisible (((Boolean) newValue).booleanValue ());
>                 return;
>             case NotationPackage.DIAGRAM__TYPE :
>                 setType ((String) newValue);
>                 return;
>             case NotationPackage.DIAGRAM__MUTABLE :
>                 setMutable (((Boolean) newValue).booleanValue ());
>                 return;
>             case NotationPackage.DIAGRAM__SOURCE_EDGES :
>                 getSourceEdges ().clear ();
>                 getSourceEdges ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.DIAGRAM__TARGET_EDGES :
>                 getTargetEdges ().clear ();
>                 getTargetEdges ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.DIAGRAM__PERSISTED_CHILDREN :
>                 getPersistedChildren ().clear ();
>                 getPersistedChildren ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.DIAGRAM__STYLES :
>                 getStyles ().clear ();
>                 getStyles ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.DIAGRAM__ELEMENT :
>                 setElement ((EObject) newValue);
>                 return;
>             case NotationPackage.DIAGRAM__TRANSIENT_CHILDREN :
>                 getTransientChildren ().clear ();
>                 getTransientChildren ().addAll ((Collection) newValue);
>                 return;
162,162c239,239
<         super.eSet (featureID, newValue);
---
>         eDynamicSet (featureID, newValue);
166a244,273
>             case NotationPackage.DIAGRAM__EANNOTATIONS :
>                 getEAnnotations ().clear ();
>                 return;
>             case NotationPackage.DIAGRAM__VISIBLE :
>                 setVisible (VISIBLE_EDEFAULT);
>                 return;
>             case NotationPackage.DIAGRAM__TYPE :
>                 setType (TYPE_EDEFAULT);
>                 return;
>             case NotationPackage.DIAGRAM__MUTABLE :
>                 setMutable (MUTABLE_EDEFAULT);
>                 return;
>             case NotationPackage.DIAGRAM__SOURCE_EDGES :
>                 getSourceEdges ().clear ();
>                 return;
>             case NotationPackage.DIAGRAM__TARGET_EDGES :
>                 getTargetEdges ().clear ();
>                 return;
>             case NotationPackage.DIAGRAM__PERSISTED_CHILDREN :
>                 getPersistedChildren ().clear ();
>                 return;
>             case NotationPackage.DIAGRAM__STYLES :
>                 getStyles ().clear ();
>                 return;
>             case NotationPackage.DIAGRAM__ELEMENT :
>                 unsetElement ();
>                 return;
>             case NotationPackage.DIAGRAM__TRANSIENT_CHILDREN :
>                 getTransientChildren ().clear ();
>                 return;
179a287,287
>         eDynamicUnset (featureID);
180,180d286
<         super.eUnset (featureID);
184a292,313
>             case NotationPackage.DIAGRAM__EANNOTATIONS :
>                 return eAnnotations != null && ! eAnnotations.isEmpty ();
>             case NotationPackage.DIAGRAM__VISIBLE :
>                 return ((eFlags & VISIBLE_EFLAG) != 0) != VISIBLE_EDEFAULT;
>             case NotationPackage.DIAGRAM__TYPE :
>                 return TYPE_EDEFAULT == null ? type != null : ! TYPE_EDEFAULT.equals (type);
>             case NotationPackage.DIAGRAM__MUTABLE :
>                 return ((eFlags & MUTABLE_EFLAG) != 0) != MUTABLE_EDEFAULT;
>             case NotationPackage.DIAGRAM__SOURCE_EDGES :
>                 return sourceEdges != null && ! sourceEdges.isEmpty ();
>             case NotationPackage.DIAGRAM__TARGET_EDGES :
>                 return targetEdges != null && ! targetEdges.isEmpty ();
>             case NotationPackage.DIAGRAM__PERSISTED_CHILDREN :
>                 return persistedChildren != null && ! persistedChildren.isEmpty ();
>             case NotationPackage.DIAGRAM__STYLES :
>                 return styles != null && ! styles.isEmpty ();
>             case NotationPackage.DIAGRAM__ELEMENT :
>                 return isSetElement ();
>             case NotationPackage.DIAGRAM__DIAGRAM :
>                 return basicGetDiagram () != null;
>             case NotationPackage.DIAGRAM__TRANSIENT_CHILDREN :
>                 return transientChildren != null && ! transientChildren.isEmpty ();
194,194c323,323
<         return super.eIsSet (featureID);
---
>         return eDynamicIsSet (featureID);
249,249c378,378
<         if (edge.eContainingFeature () == NotationPackage.eINSTANCE.getDiagram_TransientEdges ()) {
---
>         if (edge.eContainingFeature () == NotationPackage.Literals.DIAGRAM__TRANSIENT_EDGES) {
253,253c382,382
<         } else if (edge.eContainingFeature () == NotationPackage.eINSTANCE.getDiagram_PersistedEdges ()) {
---
>         } else if (edge.eContainingFeature () == NotationPackage.Literals.DIAGRAM__PERSISTED_EDGES) {
