6a35,35
> import org.eclipse.jface.action.IMenuManager;
7,7d34
< import org.eclipse.jface.action.IContributionItem;
8a37,37
> import org.eclipse.jface.viewers.ISelection;
8,8c36,36
< 
---
> 
9,9d36
< import org.eclipse.jface.action.IContributionManager;
10a39,39
> import org.eclipse.ui.IActionBars;
10,10c38,38
< 
---
> 
11,11d38
< import org.eclipse.jface.action.IMenuManager;
12a41,41
> import org.eclipse.ui.IPluginContribution;
12,12c40,40
< 
---
> 
13,13d40
< import org.eclipse.jface.viewers.ISelection;
14,14c42,42
< 
---
> 
14a43,43
> import org.eclipse.ui.IWorkbenchPart;
15,15d42
< import org.eclipse.ui.IActionBars;
16,16c44,44
< 
---
> 
16a45,45
> import org.osgi.framework.Bundle;
17,17d44
< import org.eclipse.ui.IWorkbenchPart;
18,18c46,46
< 
---
> 
19,20d46
< import org.osgi.framework.Bundle;
< 
40a27,30
> import org.eclipse.gmf.runtime.common.ui.services.action.internal.contributionitem.UpdateActionBarsOperation;
> 
> import org.eclipse.gmf.runtime.common.ui.services.util.ActivityFilterProviderDescriptor;
> 
46,46c48,48
<     protected static class ProviderDescriptor extends Service.ProviderDescriptor {
---
>     protected static class ProviderDescriptor extends ActivityFilterProviderDescriptor {
60a63,65
>             if (! super.provides (operation)) {
>                 return false;
>             }
61,61c66,66
<             if (checkPluginLoaded && ! isPluginLoaded ()) return false;
---
>             if (checkPluginLoaded && ! isPluginLoaded ()) {
61a67,68
>                 return false;
>             }
62,62d66
< 
63,63c69,69
<             if (! contributionDescriptor.hasContributions ()) return super.provides (operation);
---
>             if (! contributionDescriptor.hasContributions ()) {
63a70,76
>                 if (getPolicy () != null) {
>                     return getPolicy ().provides (operation);
>                 }
>                 if (getProvider () != null) {
>                     return getProvider ().provides (operation);
>                 }
>             }
64,64d69
< 
86a99,113
>                 if (provider instanceof AbstractContributionItemProvider) {
>                     ((AbstractContributionItemProvider) provider).setPluginContribution (new IPluginContribution () {
> 
>                         public String getLocalId () {
>                             return getElement ().getDeclaringExtension ().getSimpleIdentifier ();
>                         }
> 
>                         public String getPluginId () {
>                             return getElement ().getNamespace ();
>                         }
> 
>                     }
> 
>                     );
>                 }
128a156,159
>     public void updateActionBars (IActionBars actionBars, IWorkbenchPartDescriptor workbenchPartDescriptor) {
>         execute (new UpdateActionBarsOperation (actionBars, workbenchPartDescriptor));
>     }
> 
137,147d167
<     public void removeDisabledContributions (IContributionManager manager) {
<         IContributionItem [] contributions = manager.getItems ();
<         for (int i = 0;
<         i < contributions.length; i ++) {
<             if (contributions [i] instanceof IContributionManager) removeDisabledContributions ((IContributionManager) contributions [i]);
< 
<             if (! contributions [i].isEnabled ()) manager.remove (contributions [i]);
< 
<         }
<     }
< 
