2a3,3
> import java.util.Collection;
3,3c5,5
< import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
---
> import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
5a10,10
> 
5,5c9,9
< import org.eclipse.emf.common.notify.Notification;
---
> import org.eclipse.emf.common.util.EList;
15,15c17,17
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
---
> import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
16a19,19
> import org.eclipse.emf.ecore.util.InternalEList;
17,17d18
< import org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind;
23,24d24
< import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
< 
25,25c25,25
< import org.eclipse.gmf.codegen.gmfgen.GenNode;
---
> import org.eclipse.gmf.codegen.gmfgen.GenChildNode;
28a29,30
> public abstract class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
>     protected EList childNodes = null;
29,41d28
< public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
<     protected static final String GROUP_ID_EDEFAULT = null;
<     protected String groupID = GROUP_ID_EDEFAULT;
<     protected static final String TITLE_KEY_EDEFAULT = null;
<     protected String titleKey = TITLE_KEY_EDEFAULT;
<     protected static final boolean CAN_COLLAPSE_EDEFAULT = true;
<     protected boolean canCollapse = CAN_COLLAPSE_EDEFAULT;
<     protected static final boolean HIDE_IF_EMPTY_EDEFAULT = true;
<     protected boolean hideIfEmpty = HIDE_IF_EMPTY_EDEFAULT;
<     protected static final boolean NEEDS_TITLE_EDEFAULT = true;
<     protected boolean needsTitle = NEEDS_TITLE_EDEFAULT;
<     protected static final CompartmentLayoutKind LAYOUT_KIND_EDEFAULT = CompartmentLayoutKind.BORDER_LITERAL;
<     protected CompartmentLayoutKind layoutKind = LAYOUT_KIND_EDEFAULT;
50a40,42
>     public EList getChildNodes () {
>         if (childNodes == null) {
>             childNodes = new EObjectContainmentWithInverseEList (GenChildNode.class, this, GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES, GMFGenPackage.GEN_CHILD_NODE__CONTAINER);
51,96d39
<     public String getGroupID () {
<         return groupID;
<     }
< 
<     public void setGroupID (String newGroupID) {
<         String oldGroupID = groupID;
<         groupID = newGroupID;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID, oldGroupID, groupID));
< 
<     }
< 
<     public String getTitleKey () {
<         return titleKey;
<     }
< 
<     public void setTitleKey (String newTitleKey) {
<         String oldTitleKey = titleKey;
<         titleKey = newTitleKey;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY, oldTitleKey, titleKey));
< 
<     }
< 
<     public boolean isCanCollapse () {
<         return canCollapse;
<     }
< 
<     public void setCanCollapse (boolean newCanCollapse) {
<         boolean oldCanCollapse = canCollapse;
<         canCollapse = newCanCollapse;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE, oldCanCollapse, canCollapse));
< 
<     }
< 
<     public boolean isHideIfEmpty () {
<         return hideIfEmpty;
<     }
< 
<     public void setHideIfEmpty (boolean newHideIfEmpty) {
<         boolean oldHideIfEmpty = hideIfEmpty;
<         hideIfEmpty = newHideIfEmpty;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY, oldHideIfEmpty, hideIfEmpty));
< 
<     }
< 
<     public boolean isNeedsTitle () {
<         return needsTitle;
97a44,44
>         return childNodes;
98,120d43
< 
<     public void setNeedsTitle (boolean newNeedsTitle) {
<         boolean oldNeedsTitle = needsTitle;
<         needsTitle = newNeedsTitle;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE, oldNeedsTitle, needsTitle));
< 
<     }
< 
<     public CompartmentLayoutKind getLayoutKind () {
<         return layoutKind;
<     }
< 
<     public void setLayoutKind (CompartmentLayoutKind newLayoutKind) {
<         CompartmentLayoutKind oldLayoutKind = layoutKind;
<         layoutKind = newLayoutKind == null ? LAYOUT_KIND_EDEFAULT : newLayoutKind;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND, oldLayoutKind, layoutKind));
< 
<     }
< 
<     public GenNode getParentNode () {
<         if (eContainerFeatureID != GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE) return null;
< 
<         return (GenNode) eContainer;
126,126c50,50
<                 case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE :
---
>                 case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES :
127,127c51,51
<                     if (eContainer != null) msgs = eBasicRemoveFromContainer (msgs);
---
>                     return ((InternalEList) getChildNodes ()).basicAdd (otherEnd, msgs);
128,129d51
< 
<                     return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE, msgs);
143a66,67
>                 case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES :
>                     return ((InternalEList) getChildNodes ()).basicRemove (otherEnd, msgs);
144,145d65
<                 case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE :
<                     return eBasicSetContainer (null, GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE, msgs);
153,164d74
<     public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs) {
<         if (eContainerFeatureID >= 0) {
<             switch (eContainerFeatureID) {
<                 case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE :
<                     return eContainer.eInverseRemove (this, GMFGenPackage.GEN_NODE__CHILD_CONTAINERS, GenNode.class, msgs);
<                 default :
<                     return eDynamicBasicRemoveFromContainer (msgs);
<             }
<         }
<         return eContainer.eInverseRemove (this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
<     }
< 
179,192d88
<             case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID :
<                 return getGroupID ();
<             case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY :
<                 return getTitleKey ();
<             case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE :
<                 return isCanCollapse () ? Boolean.TRUE : Boolean.FALSE;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY :
<                 return isHideIfEmpty () ? Boolean.TRUE : Boolean.FALSE;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE :
<                 return isNeedsTitle () ? Boolean.TRUE : Boolean.FALSE;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND :
<                 return getLayoutKind ();
<             case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE :
<                 return getParentNode ();
213a112,114
>             case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES :
>                 getChildNodes ().clear ();
>                 getChildNodes ().addAll ((Collection) newValue);
214,230d111
<             case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID :
<                 setGroupID ((String) newValue);
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY :
<                 setTitleKey ((String) newValue);
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE :
<                 setCanCollapse (((Boolean) newValue).booleanValue ());
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY :
<                 setHideIfEmpty (((Boolean) newValue).booleanValue ());
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE :
<                 setNeedsTitle (((Boolean) newValue).booleanValue ());
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND :
<                 setLayoutKind ((CompartmentLayoutKind) newValue);
252a137,138
>             case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES :
>                 getChildNodes ().clear ();
253,255d88
<             case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID :
<                 setGroupID (GROUP_ID_EDEFAULT);
<                 return;
256,256c89,89
<             case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY :
---
>             case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES :
257,257d89
<                 setTitleKey (TITLE_KEY_EDEFAULT);
258,258c90,90
<                 return;
---
>                 return getChildNodes ();
259,269d90
<             case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE :
<                 setCanCollapse (CAN_COLLAPSE_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY :
<                 setHideIfEmpty (HIDE_IF_EMPTY_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE :
<                 setNeedsTitle (NEEDS_TITLE_EDEFAULT);
<                 return;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND :
<                 setLayoutKind (LAYOUT_KIND_EDEFAULT);
287,298d155
<             case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID :
<                 return GROUP_ID_EDEFAULT == null ? groupID != null : ! GROUP_ID_EDEFAULT.equals (groupID);
<             case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY :
<                 return TITLE_KEY_EDEFAULT == null ? titleKey != null : ! TITLE_KEY_EDEFAULT.equals (titleKey);
<             case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE :
<                 return canCollapse != CAN_COLLAPSE_EDEFAULT;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY :
<                 return hideIfEmpty != HIDE_IF_EMPTY_EDEFAULT;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE :
<                 return needsTitle != NEEDS_TITLE_EDEFAULT;
<             case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND :
<                 return layoutKind != LAYOUT_KIND_EDEFAULT;
299,299c156,156
<             case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE :
---
>             case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES :
300,300c157,157
<                 return getParentNode () != null;
---
>                 return childNodes != null && ! childNodes.isEmpty ();
305,344d161
<     public String toString () {
<         if (eIsProxy ()) return super.toString ();
< 
<         StringBuffer result = new StringBuffer (super.toString ());
<         result.append (" (groupID: ");
<         result.append (groupID);
<         result.append (", titleKey: ");
<         result.append (titleKey);
<         result.append (", canCollapse: ");
<         result.append (canCollapse);
<         result.append (", hideIfEmpty: ");
<         result.append (hideIfEmpty);
<         result.append (", needsTitle: ");
<         result.append (needsTitle);
<         result.append (", layoutKind: ");
<         result.append (layoutKind);
<         result.append (')');
<         return result.toString ();
<     }
< 
<     public String getClassNamePrefix () {
<         return getGroupID () == null ? "GenContainer$" + hashCode () : getGroupID ();
<     }
< 
<     public String getClassNameSuffux () {
<         return "Container";
<     }
< 
<     public GenDiagram getDiagram () {
<         GenNode parentNode = getParentNode ();
<         if (parentNode == null) {
<             return null;
<         }
<         return parentNode.getDiagram ();
<     }
< 
<     public String getUniqueIdentifier () {
<         return getGroupID () + "_" + getVisualID ();
<     }
< 
