14a15,16
> import java.util.LinkedList;
> 
35,36d36
< import org.eclipse.emf.common.util.EMap;
< 
190,190c190,190
<                     List nameSeq = new ArrayList < String > (Arrays.asList (typeName));
---
>                     ArrayList < String > nameSeq = new ArrayList < String > (Arrays.asList (typeName));
267,267c267,267
<                 List < EClassifier > subTypes = getSubTypes (getRootEPackage (referencedClass.getEPackage ()), referencedClass, new ArrayList < EClassifier > ());
---
>                 List < EClass > subTypes = getSubTypes (getRootEPackage (referencedClass.getEPackage ()), referencedClass, new LinkedList < EClass > ());
269,269c269,269
<                 for (Iterator it = subTypes.iterator ();
---
>                 for (Iterator < EClass > it = subTypes.iterator ();
271,271c271,271
<                     EClass nextClass = (EClass) it.next ();
---
>                     EClass nextClass = it.next ();
279,279c279,279
<                 for (Iterator it = subTypes.iterator ();
---
>                 for (Iterator < EClass > it = subTypes.iterator ();
281,281c281,281
<                     EClass nextClass = (EClass) it.next ();
---
>                     EClass nextClass = it.next ();
316a317,317
>                 for (EClass nextClass : contextProviderEClass.getESuperTypes ()) {
317,318d316
<                 for (Iterator it = contextProviderEClass.getESuperTypes ().iterator ();
<                 it.hasNext ();) {
319,319c318,318
<                     ContextProvider nextProvider = referencedContexts.get (it.next ());
---
>                     ContextProvider nextProvider = referencedContexts.get (nextClass);
437,437c436,436
<         List children = diagnostic.getChildren ();
---
>         List < Diagnostic > children = diagnostic.getChildren ();
440a440,440
>             for (Diagnostic next : children) {
441,442d439
<             for (Iterator it = children.iterator ();
<             it.hasNext ();) {
443,443c441,441
<                 mergeAndFlatten ((Diagnostic) it.next (), diagnosticChain);
---
>                 mergeAndFlatten (next, diagnosticChain);
497,497c495,495
<             Class rightClass = right.getInstanceClass ();
---
>             Class < ? > rightClass = right.getInstanceClass ();
516,517d513
<         for (Iterator it = eModelElement.getEAnnotations ().iterator ();
<         it.hasNext ();) {
518,518c514,514
<             EAnnotation nextAnnotation = (EAnnotation) it.next ();
---
>         for (EAnnotation nextAnnotation : eModelElement.getEAnnotations ()) {
526,526c522,522
<     public static Map.Entry findAnnotationDetailEntry (EModelElement eModelElement, String sourceURI, String key, String val) {
---
>     public static Map.Entry < String, String > findAnnotationDetailEntry (EModelElement eModelElement, String sourceURI, String key, String val) {
527,528d522
<         for (Iterator it = eModelElement.getEAnnotations ().iterator ();
<         it.hasNext ();) {
529,529c523,523
<             EAnnotation nextAnnotation = (EAnnotation) it.next ();
---
>         for (EAnnotation nextAnnotation : eModelElement.getEAnnotations ()) {
531,531c525,525
<                 for (Iterator entryIt = nextAnnotation.getDetails ().iterator ();
---
>                 for (Map.Entry < String, String > nextEntry : nextAnnotation.getDetails ()) {
532,533d525
<                 entryIt.hasNext ();) {
<                     Map.Entry nextEntry = (Map.Entry) entryIt.next ();
542a535,536
>     public static Map.Entry < String, String > getKeyPrefixAnnotation (EAnnotation annotation, String keyPrefix) {
>         for (Map.Entry < String, String > nextEntry : annotation.getDetails ()) {
543,546d534
<     public static Map.Entry getKeyPreffixAnnotation (EAnnotation annotation, String keyPrefix) {
<         for (Iterator it = annotation.getDetails ().entrySet ().iterator ();
<         it.hasNext ();) {
<             Map.Entry nextEntry = (Map.Entry) it.next ();
547,547c537,537
<             if (((String) nextEntry.getKey ()).startsWith (keyPrefix)) {
---
>             if (nextEntry.getKey ().startsWith (keyPrefix)) {
554,554d543
<     @SuppressWarnings("unchecked")
555,555c544,544
<     public static List getAnnotationsWithKeyAndValue (EModelElement eModelElement, String sourceURI, String key, String value) {
---
>     public static List < EAnnotation > getAnnotationsWithKeyAndValue (EModelElement eModelElement, String sourceURI, String key, String value) {
556,556c545,545
<         List annotations = null;
---
>         ArrayList < EAnnotation > annotations = null;
557,558d545
<         for (Iterator it = eModelElement.getEAnnotations ().iterator ();
<         it.hasNext ();) {
559,559c546,546
<             EAnnotation nextAnnotation = (EAnnotation) it.next ();
---
>         for (EAnnotation nextAnnotation : eModelElement.getEAnnotations ()) {
564,564c551,551
<                         annotations = new ArrayList (eModelElement.getEAnnotations ().size ());
---
>                         annotations = new ArrayList < EAnnotation > (eModelElement.getEAnnotations ().size ());
569a557,560
>         if (annotations != null) {
>             return annotations;
>         }
>         return Collections.emptyList ();
570,570d556
<         return annotations != null ? annotations : Collections.EMPTY_LIST;
609,616d598
<     public static String getAnnotationDetailValue (EMap detail, String key) {
<         if (detail == null || key == null) {
<             throw new IllegalArgumentException ("null detail map or key");
<         }
<         Object val = detail.get (key);
<         return val instanceof String ? (String) val : null;
<     }
< 
621a604,604
>             for (Map.Entry < String, String > nextDetail : ctxAnnotation.getDetails ()) {
622,624d603
<             for (Iterator it = ctxAnnotation.getDetails ().entrySet ().iterator ();
<             it.hasNext ();) {
<                 Map.Entry nextDetail = (Map.Entry) it.next ();
625,625c605,605
<                 Object key = nextDetail.getKey ();
---
>                 String key = nextDetail.getKey ();
626,626c606,606
<                 String value = nextDetail.getValue () instanceof String ? (String) nextDetail.getValue () : "";
---
>                 String value = nextDetail.getValue () != null ? nextDetail.getValue () : "";
648,648c628,628
<     static List < EClassifier > getSubTypes (EPackage ePackage, EClass superType, List < EClassifier > foundSubTypes) {
---
>     static List < EClass > getSubTypes (EPackage ePackage, EClass superType, List < EClass > foundSubTypes) {
649,650d628
<         for (Iterator it = ePackage.getEClassifiers ().iterator ();
<         it.hasNext ();) {
651,651c629,629
<             EClassifier classifier = (EClassifier) it.next ();
---
>         for (EClassifier classifier : ePackage.getEClassifiers ()) {
653,653c631,631
<                 foundSubTypes.add (classifier);
---
>                 foundSubTypes.add ((EClass) classifier);
655a634,634
>         for (EPackage next : ePackage.getESubpackages ()) {
656,657d633
<         for (Iterator it = ePackage.getESubpackages ().iterator ();
<         it.hasNext ();) {
658,658c635,635
<             getSubTypes ((EPackage) it.next (), superType, foundSubTypes);
---
>             getSubTypes (next, superType, foundSubTypes);
