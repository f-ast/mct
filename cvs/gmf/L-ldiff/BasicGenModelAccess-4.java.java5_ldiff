5,8d4
< import java.util.Collections;
< 
< import java.util.HashSet;
< 
15,16d10
< import java.util.Map;
< 
23,26d16
< import org.eclipse.emf.codegen.ecore.genmodel.GenModelFactory;
< 
< import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
< 
31,32d20
< import org.eclipse.emf.ecore.EClass;
< 
43,44d30
< import org.eclipse.emf.ecore.util.EcoreUtil;
< 
134,134c120,120
<         return createDummy (false, null);
---
>         return createDummy (null);
136a123,126
>     public IStatus createDummy (Collection < EPackage > additionalPackages) {
>         genModel = new DummyGenModel (model, additionalPackages).create ();
>         confineInResource ();
>         return Status.OK_STATUS;
137,154d122
<     @SuppressWarnings("unchecked")
<     public IStatus createDummy (boolean includeAllReferencedPackages, Collection < EPackage > additionalPackages) {
<         if (additionalPackages == null) {
<             additionalPackages = Collections.emptyList ();
<         }
<         String pluginID = "org.sample." + model.getName ();
<         genModel = GenModelFactory.eINSTANCE.createGenModel ();
<         if (includeAllReferencedPackages) {
<             HashSet < EPackage > allPacks = new HashSet < EPackage > ();
<             allPacks.add (model);
<             allPacks.addAll (additionalPackages);
<             Map m = EcoreUtil.ExternalCrossReferencer.find (model);
<             for (Iterator it = m.keySet ().iterator ();
<             it.hasNext ();) {
<                 Object next = it.next ();
<                 if (next instanceof EClass) {
<                     allPacks.add (((EClass) next).getEPackage ());
<                 }
155a128,131
> 
>     @SuppressWarnings("unchecked")
>     private void confineInResource () {
>         Resource r = new ResourceSetImpl ().createResource (URI.createGenericURI ("uri", genModel.getModelPluginID (), null));
156,164d127
<             genModel.initialize (allPacks);
<         } else {
<             genModel.initialize (Collections.singleton (model));
<         }
<         genModel.setModelName (model.getName () + "Gen");
<         genModel.setModelPluginID (pluginID);
<         genModel.setModelDirectory ("/" + pluginID + "/src/");
<         genModel.setEditDirectory (genModel.getModelDirectory ());
<         Resource r = new ResourceSetImpl ().createResource (URI.createGenericURI ("uri", pluginID, null));
166,171d132
<         for (Iterator it = genModel.getGenPackages ().iterator ();
<         it.hasNext ();) {
<             GenPackage genPackage = (GenPackage) it.next ();
<             genPackage.setPrefix (genPackage.getEcorePackage ().getName () + "Gen");
<         }
<         return Status.OK_STATUS;
