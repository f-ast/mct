60,60c60,60
<     private Map mySavingOptions;
---
>     private Map < String, String > mySavingOptions;
77,77c77,77
<     private Map getSavingOptions () {
---
>     private Map < ?, ? > getSavingOptions () {
79,79c79,79
<             mySavingOptions = new HashMap ();
---
>             mySavingOptions = new HashMap < String, String > ();
108,108c108,108
<         for (Iterator it = myTraceModel.getLinkTraces ().iterator ();
---
>         for (GenLinkTrace trace : myTraceModel.getLinkTraces ()) {
109,110d108
<         it.hasNext ();) {
<             GenLinkTrace trace = (GenLinkTrace) it.next ();
116,116c114,114
<     private void initNodeChildrenCounters (Collection nodeTraces) {
---
>     private void initNodeChildrenCounters (Collection < ? extends GenNodeTrace > nodeTraces) {
117,118d114
<         for (Iterator it = nodeTraces.iterator ();
<         it.hasNext ();) {
119,119c115,115
<             GenNodeTrace trace = (GenNodeTrace) it.next ();
---
>         for (GenNodeTrace trace : nodeTraces) {
125,125c121,121
<     private int getMaxVid (Collection abstractTraces) {
---
>     private int getMaxVid (Collection < ? extends AbstractTrace > abstractTraces) {
126a123,124
>         for (AbstractTrace trace : abstractTraces) {
>             id = Math.max (id, trace.getVisualID ());
127,130d122
<         for (Iterator it = abstractTraces.iterator ();
<         it.hasNext ();) {
<             AbstractTrace nextTrace = (AbstractTrace) it.next ();
<             id = Math.max (id, nextTrace.getVisualID ());
131,131c125,125
<             myOverflowCount = Math.max (myOverflowCount, nextTrace.getVisualID ());
---
>             myOverflowCount = Math.max (myOverflowCount, trace.getVisualID ());
241,241c235,235
<     private int getMatchingVID (Object context, Collection matchingTraces) {
---
>     private int getMatchingVID (Object context, Collection < ? extends MatchingTrace > matchingTraces) {
242,243d235
<         for (Iterator it = matchingTraces.iterator ();
<         it.hasNext ();) {
244,244c236,236
<             MatchingTrace trace = (MatchingTrace) it.next ();
---
>         for (MatchingTrace trace : matchingTraces) {
