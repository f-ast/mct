54a59,60
> import org.eclipse.gmf.mappings.Measurable;
> 
56a63,66
> import org.eclipse.gmf.mappings.MetricContainer;
> 
> import org.eclipse.gmf.mappings.MetricRule;
> 
66a23,23
> import org.eclipse.gmf.mappings.Auditable;
67,67d22
< import org.eclipse.gmf.mappings.RuleTarget;
68a25,26
> import org.eclipse.gmf.mappings.AuditedMetricTarget;
> 
68,68c24,24
< 
---
> 
102a114,116
>     private EClass metricContainerEClass = null;
>     private EClass metricRuleEClass = null;
>     private EClass auditedMetricTargetEClass = null;
103a118,118
>     private EClass measurableEClass = null;
103,103c117,117
<     private EClass ruleTargetEClass = null;
---
>     private EClass auditableEClass = null;
455a472,473
>     public EReference getAuditRule_Target () {
>         return (EReference) auditRuleEClass.getEStructuralFeatures ().get (2);
455a496,496
>     public EAttribute getRuleBase_Name () {
456,456d495
<     public EAttribute getAuditRule_Name () {
457,457c497,497
<         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (2);
---
>         return (EAttribute) ruleBaseEClass.getEStructuralFeatures ().get (0);
471a500,500
>     public EAttribute getRuleBase_Description () {
472,472d499
<     public EAttribute getAuditRule_Description () {
473,473c501,501
<         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (6);
---
>         return (EAttribute) ruleBaseEClass.getEStructuralFeatures ().get (1);
474,475d501
<     }
< 
477,477c489,489
<         return (EReference) auditRuleEClass.getEStructuralFeatures ().get (7);
---
>         return (EReference) auditRuleEClass.getEStructuralFeatures ().get (6);
483a528,529
>     public EClass getMetricContainer () {
>         return metricContainerEClass;
484,485d527
<     public EReference getRuleBase_Target () {
<         return (EReference) ruleBaseEClass.getEStructuralFeatures ().get (0);
486,486c530,530
<     }
---
>     }
487a532,563
>     public EReference getMetricContainer_Metrics () {
>         return (EReference) metricContainerEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EClass getMetricRule () {
>         return metricRuleEClass;
>     }
> 
>     public EAttribute getMetricRule_Key () {
>         return (EAttribute) metricRuleEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EReference getMetricRule_Rule () {
>         return (EReference) metricRuleEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EReference getMetricRule_Target () {
>         return (EReference) metricRuleEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EReference getMetricRule_Container () {
>         return (EReference) metricRuleEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EClass getAuditedMetricTarget () {
>         return auditedMetricTargetEClass;
>     }
> 
>     public EReference getAuditedMetricTarget_Metric () {
>         return (EReference) auditedMetricTargetEClass.getEStructuralFeatures ().get (0);
>     }
> 
487,487c531,531
< 
---
> 
488,488c564,564
<     public EClass getRuleTarget () {
---
>     public EClass getAuditable () {
489,489c565,565
<         return ruleTargetEClass;
---
>         return auditableEClass;
489a566,571
>     }
> 
>     public EClass getMeasurable () {
>         return measurableEClass;
>     }
> 
491a344,344
>     public EReference getMapping_Metrics () {
492,492d343
<     public EReference getRuleTarget_Rule () {
493a346,347
>     }
> 
493,493c345,345
<         return (EReference) ruleTargetEClass.getEStructuralFeatures ().get (0);
---
>         return (EReference) mappingEClass.getEStructuralFeatures ().get (5);
539a592,592
>         createEReference (mappingEClass, MAPPING__METRICS);
613a667,668
>         createEAttribute (ruleBaseEClass, RULE_BASE__NAME);
>         createEAttribute (ruleBaseEClass, RULE_BASE__DESCRIPTION);
614,614d666
<         createEReference (ruleBaseEClass, RULE_BASE__TARGET);
617a672,672
>         createEReference (auditRuleEClass, AUDIT_RULE__TARGET);
618,618d671
<         createEAttribute (auditRuleEClass, AUDIT_RULE__NAME);
622,622d675
<         createEAttribute (auditRuleEClass, AUDIT_RULE__DESCRIPTION);
624,625d676
<         ruleTargetEClass = createEClass (RULE_TARGET);
<         createEReference (ruleTargetEClass, RULE_TARGET__RULE);
631a683,693
>         metricContainerEClass = createEClass (METRIC_CONTAINER);
>         createEReference (metricContainerEClass, METRIC_CONTAINER__METRICS);
>         metricRuleEClass = createEClass (METRIC_RULE);
>         createEAttribute (metricRuleEClass, METRIC_RULE__KEY);
>         createEReference (metricRuleEClass, METRIC_RULE__RULE);
>         createEReference (metricRuleEClass, METRIC_RULE__TARGET);
>         createEReference (metricRuleEClass, METRIC_RULE__CONTAINER);
>         auditedMetricTargetEClass = createEClass (AUDITED_METRIC_TARGET);
>         createEReference (auditedMetricTargetEClass, AUDITED_METRIC_TARGET__METRIC);
>         auditableEClass = createEClass (AUDITABLE);
>         measurableEClass = createEClass (MEASURABLE);
661a724,727
>         domainElementTargetEClass.getESuperTypes ().add (this.getAuditable ());
>         domainElementTargetEClass.getESuperTypes ().add (this.getMeasurable ());
>         diagramElementTargetEClass.getESuperTypes ().add (this.getAuditable ());
>         diagramElementTargetEClass.getESuperTypes ().add (this.getMeasurable ());
662,663d723
<         domainElementTargetEClass.getESuperTypes ().add (this.getRuleTarget ());
<         diagramElementTargetEClass.getESuperTypes ().add (this.getRuleTarget ());
664a729,731
>         notationElementTargetEClass.getESuperTypes ().add (this.getMeasurable ());
>         metricRuleEClass.getESuperTypes ().add (this.getRuleBase ());
>         auditedMetricTargetEClass.getESuperTypes ().add (this.getAuditable ());
664,664c728,728
<         notationElementTargetEClass.getESuperTypes ().add (this.getRuleTarget ());
---
>         notationElementTargetEClass.getESuperTypes ().add (this.getAuditable ());
747,747c820,820
<         initEReference (getRuleBase_Target (), this.getRuleTarget (), this.getRuleTarget_Rule (), "target", null, 1, 1, RuleBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getAuditRule_Target (), this.getAuditable (), null, "target", null, 1, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
751a816,816
>         initEAttribute (getRuleBase_Description (), ecorePackage.getEString (), "description", null, 0, 1, RuleBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
751,751c815,815
<         initEAttribute (getAuditRule_Name (), ecorePackage.getEString (), "name", null, 0, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEAttribute (getRuleBase_Name (), ecorePackage.getEString (), "name", null, 0, 1, RuleBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
755,755c738,738
<         initEAttribute (getAuditRule_Description (), ecorePackage.getEString (), "description", null, 0, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getMapping_Metrics (), this.getMetricContainer (), null, "metrics", null, 0, 1, Mapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
756a831,839
>         initEClass (metricContainerEClass, MetricContainer.class, "MetricContainer", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getMetricContainer_Metrics (), this.getMetricRule (), this.getMetricRule_Container (), "metrics", null, 1, - 1, MetricContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (metricRuleEClass, MetricRule.class, "MetricRule", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getMetricRule_Key (), ecorePackage.getEString (), "key", null, 1, 1, MetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getMetricRule_Rule (), this.getValueExpression (), null, "rule", null, 1, 1, MetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getMetricRule_Target (), this.getMeasurable (), null, "target", null, 1, 1, MetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getMetricRule_Container (), this.getMetricContainer (), this.getMetricContainer_Metrics (), "container", null, 1, 1, MetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (auditedMetricTargetEClass, AuditedMetricTarget.class, "AuditedMetricTarget", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getAuditedMetricTarget_Metric (), this.getMetricRule (), null, "metric", null, 1, 1, AuditedMetricTarget.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
757a841,841
>         initEClass (measurableEClass, Measurable.class, "Measurable", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
757,757c840,840
<         initEClass (ruleTargetEClass, RuleTarget.class, "RuleTarget", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
---
>         initEClass (auditableEClass, Auditable.class, "Auditable", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
758,758d840
<         initEReference (getRuleTarget_Rule (), this.getRuleBase (), this.getRuleBase_Target (), "rule", null, 1, 1, RuleTarget.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
795a873,873
>         addAnnotation (getMetricRule_Rule (), source, new String [] {"def", "context", "ocl", "target.getContext()"});
