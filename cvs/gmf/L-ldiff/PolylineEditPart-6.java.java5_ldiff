4a5,6
> import java.util.Collection;
> 
32a39,40
> import org.eclipse.emf.ecore.EObject;
> 
54a35,35
> import org.eclipse.draw2d.geometry.Rectangle;
55,55d34
< import org.eclipse.gmf.gmfgraph.Layout;
56,56c36,36
< 
---
> 
57,60d36
< import org.eclipse.gmf.gmfgraph.LayoutData;
< 
< import org.eclipse.gmf.gmfgraph.LineKind;
< 
128,128c130,130
<         final NotificationListener layoutListener = new NotificationListener () {
---
>         final NotificationListener Layoutable_LayoutData_PropertiesListener = new NotificationListener () {
131,132d132
<                 Layout layout = (Layout) notification.getNotifier ();
<                 layoutPropertyChanged (layout);
139,139c165,165
<             addListenerFilter ("LayoutPropertiesListener", layoutListener, modelElement.getLayout ());
---
>             addListenerFilter ("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout ());
141,141c167,167
<         addListenerFilter ("ModelElementLayoutListener", new NotificationListener () {
---
>         addListenerFilter ("Layoutable_Layout_Listener", new NotificationListener () {
143a170,172
>                 removeListenerFilter ("Layoutable_Layout_PropertiesListener");
>                 if (modelElement.getLayout () != null) {
>                     addListenerFilter ("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout ());
144,147d169
<                 Layout newLayout = (Layout) notification.getNewValue ();
<                 removeListenerFilter ("LayoutPropertiesListener");
<                 if (newLayout != null) {
<                     addListenerFilter ("LayoutPropertiesListener", layoutListener, newLayout);
149,149d173
<                 layoutChanged (newLayout, true);
155,155c247,247
<         final NotificationListener layoutDataListener = new NotificationListener () {
---
>         addListenerFilter ("Polyline_Template_Listener", new NotificationListener () {
158,158d182
<                 layoutDataPropertyChanged ();
162a188,192
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_Outline ());
>         addListenerFilter ("Shape_Fill_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 myFigure.setFill (modelElement.isFill ());
162a133,137
>                 layoutDataChanged (modelElement.getLayoutData ());
>             }
> 
>         }
> 
163,163c138,138
<         ;
---
>         ;
164,164c139,139
<         if (modelElement.getLayoutData () != null) {
---
>         if (modelElement.getLayoutData () != null) {
165a141,158
>         }
>         addListenerFilter ("Layoutable_LayoutData_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 removeListenerFilter ("Layoutable_LayoutData_PropertiesListener");
>                 if (modelElement.getLayoutData () != null) {
>                     addListenerFilter ("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData ());
>                 }
>                 layoutDataChanged (modelElement.getLayoutData ());
>             }
> 
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData ());
>         final NotificationListener Layoutable_Layout_PropertiesListener = new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 layoutChanged (modelElement.getLayout ());
165,165c140,140
<             addListenerFilter ("LayoutDataPropertiesListener", layoutDataListener, modelElement.getLayoutData ());
---
>             addListenerFilter ("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData ());
167,167c180,180
<         addListenerFilter ("ModelElementLayoutDataListener", new NotificationListener () {
---
>         addListenerFilter ("Shape_Outline_Listener", new NotificationListener () {
170,173d200
<                 LayoutData newLayoutData = (LayoutData) notification.getNewValue ();
<                 removeListenerFilter ("LayoutDataPropertiesListener");
<                 if (newLayoutData != null) {
<                     addListenerFilter ("LayoutDataPropertiesListener", layoutDataListener, newLayoutData);
174a203,203
> 
175,175c508,508
<                 layoutDataChanged ();
---
>                 layoutDataChanged (modelElement.getLayoutData ());
177a206,210
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_LineWidth ());
>         addListenerFilter ("Shape_LineKind_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 myFigure.setLineStyle (getLineStyle (modelElement.getLineKind ()));
179a213,216
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_LineKind ());
>         addListenerFilter ("Shape_XorFill_Listener", new NotificationListener () {
179a194,197
> 
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_Fill ());
180,180d193
<         , modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData ());
181,181c198,198
<         addListenerFilter ("ModelElementPropertiesListener", new NotificationListener () {
---
>         addListenerFilter ("Shape_LineWidth_Listener", new NotificationListener () {
183a219,239
>                 myFigure.setFillXOR (modelElement.isXorFill ());
>             }
> 
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_XorFill ());
>         addListenerFilter ("Shape_XorOutline_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 myFigure.setOutlineXOR (modelElement.isXorOutline ());
>             }
> 
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_XorOutline ());
>         final NotificationListener Polyline_Template_PropertiesListener = new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 myFigure.setPoints (getPointList (modelElement.getTemplate ()));
>             }
> 
184,216d218
<                 switch (notification.getFeatureID (Polyline.class)) {
<                     case org.eclipse.gmf.gmfgraph.GMFGraphPackage.POLYLINE__OUTLINE :
<                         {
<                             boolean value = modelElement.isOutline ();
<                             myFigure.setOutline (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.POLYLINE__FILL :
<                         {
<                             boolean value = modelElement.isFill ();
<                             myFigure.setFill (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.POLYLINE__LINE_WIDTH :
<                         {
<                             int value = modelElement.getLineWidth ();
<                             myFigure.setLineWidth (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.POLYLINE__LINE_KIND :
<                         {
<                             LineKind value = modelElement.getLineKind ();
<                             myFigure.setLineStyle ("LINE_DASH".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DOT : "LINE_DASHDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT : "LINE_DASHDOTDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT : "LINE_CUSTOM".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.POLYLINE__XOR_FILL :
<                         {
<                             boolean value = modelElement.isXorFill ();
<                             myFigure.setFillXOR (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.POLYLINE__XOR_OUTLINE :
<                         {
<                             boolean value = modelElement.isXorOutline ();
<                             myFigure.setOutlineXOR (value);
<                             break;
<                         }}
<                 myFigure.repaint ();
218a242,245
>         ;
>         for (int i = 0;
>         i < modelElement.getTemplate ().size (); i ++) {
>             addListenerFilter ("Polyline_Template_PropertiesListener#" + i, Polyline_Template_PropertiesListener, (EObject) modelElement.getTemplate ().get (i));
220a249,269
>             public void notifyChanged (Notification notification) {
>                 int listSize = modelElement.getTemplate ().size ();
>                 if (notification.getOldValue () instanceof Collection) {
>                     listSize += ((Collection) notification.getOldValue ()).size ();
>                 } else {
>                     listSize ++;
>                 }
>                 for (int i = 0;
>                 i < listSize; i ++) {
>                     removeListenerFilter ("Polyline_Template_PropertiesListener#" + i);
>                 }
>                 for (int i = 0;
>                 i < modelElement.getTemplate ().size (); i ++) {
>                     addListenerFilter ("Polyline_Template_PropertiesListener#" + i, Polyline_Template_PropertiesListener, (EObject) modelElement.getTemplate ().get (i));
>                 }
>                 myFigure.setPoints (getPointList (modelElement.getTemplate ()));
>             }
> 
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getPolyline_Template ());
221,221c510,510
<         , modelElement);
---
>                 layoutChanged (modelElement.getLayout ());
460,460c183,183
<                 boolean value = modelElement.isOutline ();
---
>                 myFigure.setOutline (modelElement.isOutline ());
461,461d183
<                 myFigure.setOutline (value);
463,463c514,514
<                 boolean value = modelElement.isFill ();
---
>                 myFigure.setFill (modelElement.isFill ());
464,464d514
<                 myFigure.setFill (value);
465a512,512
>                 myFigure.setOutline (modelElement.isOutline ());
466,466c201,201
<                 int value = modelElement.getLineWidth ();
---
>                 myFigure.setLineWidth (modelElement.getLineWidth ());
467,467d201
<                 myFigure.setLineWidth (value);
468a25,26
> import org.eclipse.draw2d.Graphics;
> 
469,470d24
<                 LineKind value = modelElement.getLineKind ();
<                 myFigure.setLineStyle ("LINE_DASH".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DOT : "LINE_DASHDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT : "LINE_DASHDOTDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT : "LINE_CUSTOM".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
471a516,516
>                 myFigure.setLineWidth (modelElement.getLineWidth ());
471a518,519
>                 myFigure.setLineStyle (getLineStyle (modelElement.getLineKind ()));
>             } {
472a521,521
>             } {
472,472c520,520
<                 boolean value = modelElement.isXorFill ();
---
>                 myFigure.setFillXOR (modelElement.isXorFill ());
473a523,525
>             } {
>                 myFigure.setPoints (getPointList (modelElement.getTemplate ()));
>             }}
473,473c522,522
<                 myFigure.setFillXOR (value);
---
>                 myFigure.setOutlineXOR (modelElement.isXorOutline ());
475,476d173
<                 boolean value = modelElement.isXorOutline ();
<                 myFigure.setOutlineXOR (value);
477,477c174,174
<             } layoutChanged (modelElement.getLayout (), false);
---
>                 layoutChanged (modelElement.getLayout ());
478,478d174
<         }
544a592,592
>         private Rectangle myBounds;
552a601,642
>         protected void outlineShape (Graphics g) {
>             Rectangle bounds = getBounds ();
>             g.translate (bounds.x, bounds.y);
>             super.outlineShape (g);
>             g.translate (- bounds.x, - bounds.y);
>         }
> 
>         public Rectangle getBounds () {
>             if (myBounds == null) {
>                 myBounds = new Rectangle (0, 0, 0, 0);
>             }
>             return myBounds;
>         }
> 
>         public void primTranslate (int dx, int dy) {
>             getBounds ().x += dx;
>             getBounds ().y += dy;
>             if (useLocalCoordinates ()) {
>                 fireCoordinateSystemChanged ();
>                 return;
>             }
>         }
> 
>         public void setBounds (Rectangle rect) {
>             boolean resize = (rect.width != getBounds ().width) || (rect.height != getBounds ().height), translate = (rect.x != getBounds ().x) || (rect.y != getBounds ().y);
>             if ((resize || translate) && isVisible ()) erase ();
> 
>             if (translate) {
>                 int dx = rect.x - getBounds ().x;
>                 int dy = rect.y - getBounds ().y;
>                 primTranslate (dx, dy);
>             }
>             getBounds ().width = rect.width;
>             getBounds ().height = rect.height;
>             if (translate || resize) {
>                 if (resize) invalidate ();
> 
>                 fireFigureMoved ();
>                 repaint ();
>             }
>         }
> 
