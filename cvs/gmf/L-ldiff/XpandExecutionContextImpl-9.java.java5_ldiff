67a68,70
>         String templateName;
>         if (name.indexOf (SyntaxConstants.NS_DELIM) < 0) {
>             templateName = ((XpandResource) currentResource ()).getFullyQualifiedName ();
68,70d67
<         XpandResource tpl = null;
<         if (name.indexOf (SyntaxConstants.NS_DELIM) != - 1) {
<             tpl = findTemplate (TypeNameUtil.withoutLastSegment (name));
71a72,72
>             templateName = TypeNameUtil.withoutLastSegment (name);
71a74,74
>         XpandResource tpl = findTemplate (templateName);
72,72d73
<             tpl = (XpandResource) currentResource ();
81a83,90
>         XpandAdvice [] advicesInResource = tpl.getAdvices ();
>         for (int x = advicesInResource.length - 1;
>         x >= 0; x --) {
>             final XpandAdvice adv = advicesInResource [x];
>             if (adv.matches (def, this)) {
>                 def = new AdvicedDefinition (adv, def);
>             }
>         }
136,136d144
<                 installAspectsFor (templateName);
143,150d150
<     private void installAspectsFor (String templateName) {
<         String aspectsTemplateName = "aspects" + SyntaxConstants.NS_DELIM + templateName;
<         XpandResource aspects = getResourceManager ().loadXpandResource (aspectsTemplateName);
<         if (aspects != null) {
<             registeredAdvices.addAll (Arrays.asList (aspects.getAdvices ()));
<         }
<     }
< 
174,174c174,174
<     private XpandDefinition findDefinition (final XpandDefinition [] definitions, final String name, final EClassifier target, EClassifier [] paramTypes, final XpandExecutionContext ctx) {
---
>     private static XpandDefinition findDefinition (final XpandDefinition [] definitions, final String name, final EClassifier target, EClassifier [] paramTypes, final XpandExecutionContext ctx) {
