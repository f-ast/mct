4a5,6
> import org.eclipse.emf.common.notify.Notification;
> 
14a17,18
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> 
28a33,34
> import org.eclipse.gmf.codegen.gmfgen.ViewmapLayoutType;
> 
30a38,39
>     protected static final ViewmapLayoutType LAYOUT_TYPE_EDEFAULT = ViewmapLayoutType.UNKNOWN_LITERAL;
>     protected ViewmapLayoutType layoutType = LAYOUT_TYPE_EDEFAULT;
30,30c37,37
<     protected EList requiredPluginIDs = null;
---
>     protected EList requiredPluginIDs = null;
47a56,66
>     public ViewmapLayoutType getLayoutType () {
>         return layoutType;
>     }
> 
>     public void setLayoutType (ViewmapLayoutType newLayoutType) {
>         ViewmapLayoutType oldLayoutType = layoutType;
>         layoutType = newLayoutType == null ? LAYOUT_TYPE_EDEFAULT : newLayoutType;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.VIEWMAP__LAYOUT_TYPE, oldLayoutType, layoutType));
> 
>     }
> 
79a99,100
>             case GMFGenPackage.VIEWMAP__LAYOUT_TYPE :
>                 return getLayoutType ();
93a115,117
>             case GMFGenPackage.VIEWMAP__LAYOUT_TYPE :
>                 setLayoutType ((ViewmapLayoutType) newValue);
>                 return;
105a130,132
>             case GMFGenPackage.VIEWMAP__LAYOUT_TYPE :
>                 setLayoutType (LAYOUT_TYPE_EDEFAULT);
>                 return;
115a143,144
>             case GMFGenPackage.VIEWMAP__LAYOUT_TYPE :
>                 return layoutType != LAYOUT_TYPE_EDEFAULT;
125a155,156
>         result.append (", layoutType: ");
>         result.append (layoutType);
