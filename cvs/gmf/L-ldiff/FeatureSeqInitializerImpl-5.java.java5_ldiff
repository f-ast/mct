4a5,6
> import org.eclipse.emf.common.notify.Notification;
> 
12a15,16
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> 
15a20,21
> 
> import org.eclipse.emf.ecore.util.EcoreUtil;
15,15c19,19
< import org.eclipse.emf.ecore.util.EObjectContainmentEList;
---
> import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
24a31,32
> import org.eclipse.gmf.mappings.MappingEntry;
> 
35a44,65
>     public MappingEntry getMappingEntry () {
>         if (eContainerFeatureID != GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY) return null;
> 
>         return (MappingEntry) eContainer ();
>     }
> 
>     public void setMappingEntry (MappingEntry newMappingEntry) {
>         if (newMappingEntry != eInternalContainer () || (eContainerFeatureID != GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY && newMappingEntry != null)) {
>             if (EcoreUtil.isAncestor (this, newMappingEntry)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newMappingEntry != null) msgs = ((InternalEObject) newMappingEntry).eInverseAdd (this, GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, MappingEntry.class, msgs);
> 
>             msgs = eBasicSetContainer ((InternalEObject) newMappingEntry, GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY, newMappingEntry, newMappingEntry));
> 
>     }
> 
38,38c68,68
<             initializers = new EObjectContainmentEList (FeatureValueSpec.class, this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS);
---
>             initializers = new EObjectContainmentWithInverseEList (FeatureValueSpec.class, this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER);
42a73,84
>     public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY :
>                 if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>                 return eBasicSetContainer (otherEnd, GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY, msgs);
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS :
>                 return ((InternalEList) getInitializers ()).basicAdd (otherEnd, msgs);
>         }
>         return super.eInverseAdd (otherEnd, featureID, msgs);
>     }
> 
44a87,88
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY :
>                 return eBasicSetContainer (null, GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY, msgs);
50a95,102
>     public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
>         switch (eContainerFeatureID) {
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY :
>                 return eInternalContainer ().eInverseRemove (this, GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, MappingEntry.class, msgs);
>         }
>         return super.eBasicRemoveFromContainerFeature (msgs);
>     }
> 
52a105,106
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY :
>                 return getMappingEntry ();
60a115,117
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY :
>                 setMappingEntry ((MappingEntry) newValue);
>                 return;
70a128,130
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY :
>                 setMappingEntry ((MappingEntry) null);
>                 return;
79a140,141
>             case GMFMapPackage.FEATURE_SEQ_INITIALIZER__MAPPING_ENTRY :
>                 return getMappingEntry () != null;
