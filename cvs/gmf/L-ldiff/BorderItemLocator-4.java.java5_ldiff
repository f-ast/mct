17,18d16
< import org.eclipse.gmf.runtime.diagram.ui.util.DrawConstant;
< 
41,77d38
<     public BorderItemLocator (IFigure parentFigure, DrawConstant preferredSide) {
<         this (parentFigure);
<         if (preferredSide == DrawConstant.BOTTOM) {
<             this.preferredSide = PositionConstants.BOTTOM;
<         } else if (preferredSide == DrawConstant.CENTER) {
<             this.preferredSide = PositionConstants.CENTER;
<         } else if (preferredSide == DrawConstant.EAST) {
<             this.preferredSide = PositionConstants.EAST;
<         } else if (preferredSide == DrawConstant.HORIZONTAL) {
<             this.preferredSide = PositionConstants.HORIZONTAL;
<         } else if (preferredSide == DrawConstant.LEFT) {
<             this.preferredSide = PositionConstants.LEFT;
<         } else if (preferredSide == DrawConstant.NORTH) {
<             this.preferredSide = PositionConstants.NORTH;
<         } else if (preferredSide == DrawConstant.NORTH_EAST) {
<             this.preferredSide = PositionConstants.NORTH_EAST;
<         } else if (preferredSide == DrawConstant.NORTH_WEST) {
<             this.preferredSide = PositionConstants.NORTH_WEST;
<         } else if (preferredSide == DrawConstant.RIGHT) {
<             this.preferredSide = PositionConstants.RIGHT;
<         } else if (preferredSide == DrawConstant.SOUTH) {
<             this.preferredSide = PositionConstants.SOUTH;
<         } else if (preferredSide == DrawConstant.SOUTH_EAST) {
<             this.preferredSide = PositionConstants.SOUTH_EAST;
<         } else if (preferredSide == DrawConstant.SOUTH_WEST) {
<             this.preferredSide = PositionConstants.SOUTH_WEST;
<         } else if (preferredSide == DrawConstant.TOP) {
<             this.preferredSide = PositionConstants.TOP;
<         } else if (preferredSide == DrawConstant.VERTICAL) {
<             this.preferredSide = PositionConstants.VERTICAL;
<         } else if (preferredSide == DrawConstant.WEST) {
<             this.preferredSide = PositionConstants.WEST;
<         }
< 
<         this.preferredSide = PositionConstants.WEST;
<     }
< 
114,139d74
<     protected Point getPreferredLocation (DrawConstant side, IFigure borderItem) {
<         Rectangle bounds = getParentBorder ();
<         int parentFigureWidth = bounds.width;
<         int parentFigureHeight = bounds.height;
<         int parentFigureX = bounds.x;
<         int parentFigureY = bounds.y;
<         int x = parentFigureX;
<         int y = parentFigureY;
<         Rectangle borderItemBounds = borderItem.getBounds ();
<         if (side == DrawConstant.WEST) {
<             x = parentFigureX - borderItemBounds.width + getBorderItemOffset ().width;
<             y += parentFigureHeight / 2;
<         } else if (side == DrawConstant.EAST) {
<             x = parentFigureX + parentFigureWidth - getBorderItemOffset ().width;
<             y += parentFigureHeight / 2;
<         } else if (side == DrawConstant.NORTH) {
<             y = parentFigureY - borderItemBounds.height + getBorderItemOffset ().height;
<             x += parentFigureWidth / 2;
<         } else if (side == DrawConstant.SOUTH) {
<             x += parentFigureWidth / 2;
<             y = parentFigureY + parentFigureHeight - getBorderItemOffset ().height;
<         }
< 
<         return new Point (x, y);
<     }
< 
293,330d227
<     public static DrawConstant findClosestSide (Rectangle proposedLocation, Rectangle parentBorder) {
<         Point parentCenter = parentBorder.getCenter ();
<         Point childCenter = proposedLocation.getCenter ();
<         if (childCenter.x < parentCenter.x) {
<             if (childCenter.y < parentCenter.y) {
<                 Point parentTopLeft = parentBorder.getTopLeft ();
<                 if ((childCenter.x - parentTopLeft.x) <= (childCenter.y - parentTopLeft.y)) {
<                     return DrawConstant.WEST;
<                 } else {
<                     return DrawConstant.NORTH;
<                 }
<             } else {
<                 Point parentBottomLeft = parentBorder.getBottomLeft ();
<                 if ((childCenter.x - parentBottomLeft.x) <= (parentBottomLeft.y - childCenter.y)) {
<                     return DrawConstant.WEST;
<                 } else {
<                     return DrawConstant.SOUTH;
<                 }
<             }
<         } else {
<             if (childCenter.y < parentCenter.y) {
<                 Point parentTopRight = parentBorder.getTopRight ();
<                 if ((parentTopRight.x - childCenter.x) <= (childCenter.y - parentTopRight.y)) {
<                     return DrawConstant.EAST;
<                 } else {
<                     return DrawConstant.NORTH;
<                 }
<             } else {
<                 Point parentBottomRight = parentBorder.getBottomRight ();
<                 if ((parentBottomRight.x - childCenter.x) <= (parentBottomRight.y - childCenter.y)) {
<                     return DrawConstant.EAST;
<                 } else {
<                     return DrawConstant.SOUTH;
<                 }
<             }
<         }
<     }
< 
390,425d286
<     public DrawConstant getPreferredSide () {
<         if (preferredSide == PositionConstants.BOTTOM) {
<             return DrawConstant.BOTTOM;
<         } else if (preferredSide == PositionConstants.CENTER) {
<             return DrawConstant.CENTER;
<         } else if (preferredSide == PositionConstants.EAST) {
<             return DrawConstant.EAST;
<         } else if (preferredSide == PositionConstants.HORIZONTAL) {
<             return DrawConstant.HORIZONTAL;
<         } else if (preferredSide == PositionConstants.LEFT) {
<             return DrawConstant.LEFT;
<         } else if (preferredSide == PositionConstants.NORTH) {
<             return DrawConstant.NORTH;
<         } else if (preferredSide == PositionConstants.NORTH_EAST) {
<             return DrawConstant.NORTH_EAST;
<         } else if (preferredSide == PositionConstants.NORTH_WEST) {
<             return DrawConstant.NORTH_WEST;
<         } else if (preferredSide == PositionConstants.RIGHT) {
<             return DrawConstant.RIGHT;
<         } else if (preferredSide == PositionConstants.SOUTH) {
<             return DrawConstant.SOUTH;
<         } else if (preferredSide == PositionConstants.SOUTH_EAST) {
<             return DrawConstant.SOUTH_EAST;
<         } else if (preferredSide == PositionConstants.SOUTH_WEST) {
<             return DrawConstant.SOUTH_WEST;
<         } else if (preferredSide == PositionConstants.TOP) {
<             return DrawConstant.TOP;
<         } else if (preferredSide == PositionConstants.VERTICAL) {
<             return DrawConstant.VERTICAL;
<         } else if (preferredSide == PositionConstants.WEST) {
<             return DrawConstant.WEST;
<         }
< 
<         return DrawConstant.WEST;
<     }
< 
430,466d290
<     public void setPreferredSide (DrawConstant preferredSide) {
<         if (preferredSide == DrawConstant.BOTTOM) {
<             this.preferredSide = PositionConstants.BOTTOM;
<         } else if (preferredSide == DrawConstant.CENTER) {
<             this.preferredSide = PositionConstants.CENTER;
<         } else if (preferredSide == DrawConstant.EAST) {
<             this.preferredSide = PositionConstants.EAST;
<         } else if (preferredSide == DrawConstant.HORIZONTAL) {
<             this.preferredSide = PositionConstants.HORIZONTAL;
<         } else if (preferredSide == DrawConstant.LEFT) {
<             this.preferredSide = PositionConstants.LEFT;
<         } else if (preferredSide == DrawConstant.NORTH) {
<             this.preferredSide = PositionConstants.NORTH;
<         } else if (preferredSide == DrawConstant.NORTH_EAST) {
<             this.preferredSide = PositionConstants.NORTH_EAST;
<         } else if (preferredSide == DrawConstant.NORTH_WEST) {
<             this.preferredSide = PositionConstants.NORTH_WEST;
<         } else if (preferredSide == DrawConstant.RIGHT) {
<             this.preferredSide = PositionConstants.RIGHT;
<         } else if (preferredSide == DrawConstant.SOUTH) {
<             this.preferredSide = PositionConstants.SOUTH;
<         } else if (preferredSide == DrawConstant.SOUTH_EAST) {
<             this.preferredSide = PositionConstants.SOUTH_EAST;
<         } else if (preferredSide == DrawConstant.SOUTH_WEST) {
<             this.preferredSide = PositionConstants.SOUTH_WEST;
<         } else if (preferredSide == DrawConstant.TOP) {
<             this.preferredSide = PositionConstants.TOP;
<         } else if (preferredSide == DrawConstant.VERTICAL) {
<             this.preferredSide = PositionConstants.VERTICAL;
<         } else if (preferredSide == DrawConstant.WEST) {
<             this.preferredSide = PositionConstants.WEST;
<         }
< 
<         this.preferredSide = PositionConstants.WEST;
<         setCurrentSideOfParent (this.preferredSide);
<     }
< 
472,507d295
<     public DrawConstant getCurrentSide () {
<         if (currentSide == PositionConstants.BOTTOM) {
<             return DrawConstant.BOTTOM;
<         } else if (currentSide == PositionConstants.CENTER) {
<             return DrawConstant.CENTER;
<         } else if (currentSide == PositionConstants.EAST) {
<             return DrawConstant.EAST;
<         } else if (currentSide == PositionConstants.HORIZONTAL) {
<             return DrawConstant.HORIZONTAL;
<         } else if (currentSide == PositionConstants.LEFT) {
<             return DrawConstant.LEFT;
<         } else if (currentSide == PositionConstants.NORTH) {
<             return DrawConstant.NORTH;
<         } else if (currentSide == PositionConstants.NORTH_EAST) {
<             return DrawConstant.NORTH_EAST;
<         } else if (currentSide == PositionConstants.NORTH_WEST) {
<             return DrawConstant.NORTH_WEST;
<         } else if (currentSide == PositionConstants.RIGHT) {
<             return DrawConstant.RIGHT;
<         } else if (currentSide == PositionConstants.SOUTH) {
<             return DrawConstant.SOUTH;
<         } else if (currentSide == PositionConstants.SOUTH_EAST) {
<             return DrawConstant.SOUTH_EAST;
<         } else if (currentSide == PositionConstants.SOUTH_WEST) {
<             return DrawConstant.SOUTH_WEST;
<         } else if (currentSide == PositionConstants.TOP) {
<             return DrawConstant.TOP;
<         } else if (currentSide == PositionConstants.VERTICAL) {
<             return DrawConstant.VERTICAL;
<         } else if (currentSide == PositionConstants.WEST) {
<             return DrawConstant.WEST;
<         }
< 
<         return DrawConstant.WEST;
<     }
< 
512,547d299
<     public void setCurrentSide (DrawConstant side) {
<         if (side == DrawConstant.BOTTOM) {
<             currentSide = PositionConstants.BOTTOM;
<         } else if (side == DrawConstant.CENTER) {
<             currentSide = PositionConstants.CENTER;
<         } else if (side == DrawConstant.EAST) {
<             currentSide = PositionConstants.EAST;
<         } else if (side == DrawConstant.HORIZONTAL) {
<             currentSide = PositionConstants.HORIZONTAL;
<         } else if (side == DrawConstant.LEFT) {
<             currentSide = PositionConstants.LEFT;
<         } else if (side == DrawConstant.NORTH) {
<             currentSide = PositionConstants.NORTH;
<         } else if (side == DrawConstant.NORTH_EAST) {
<             currentSide = PositionConstants.NORTH_EAST;
<         } else if (side == DrawConstant.NORTH_WEST) {
<             currentSide = PositionConstants.NORTH_WEST;
<         } else if (side == DrawConstant.RIGHT) {
<             currentSide = PositionConstants.RIGHT;
<         } else if (side == DrawConstant.SOUTH) {
<             currentSide = PositionConstants.SOUTH;
<         } else if (side == DrawConstant.SOUTH_EAST) {
<             currentSide = PositionConstants.SOUTH_EAST;
<         } else if (side == DrawConstant.SOUTH_WEST) {
<             currentSide = PositionConstants.SOUTH_WEST;
<         } else if (side == DrawConstant.TOP) {
<             currentSide = PositionConstants.TOP;
<         } else if (side == DrawConstant.VERTICAL) {
<             currentSide = PositionConstants.VERTICAL;
<         } else if (side == DrawConstant.WEST) {
<             currentSide = PositionConstants.WEST;
<         }
< 
<         currentSide = PositionConstants.WEST;
<     }
< 
