3,4d2
< import java.util.ArrayList;
< 
9,12d6
< import java.util.ListIterator;
< 
< import java.util.Map;
< 
15,16d8
< import org.eclipse.draw2d.geometry.Dimension;
< 
18a43,43
> import org.eclipse.jface.util.Assert;
19,19d42
< import org.eclipse.gef.GraphicalEditPart;
20,20c44,44
< 
---
> 
20a45,45
> import org.eclipse.ui.IEditorPart;
21,21d44
< import org.eclipse.jface.util.Assert;
22,22c46,46
< 
---
> 
22a47,47
> import org.eclipse.ui.IWorkbenchWindow;
23,23d46
< import org.eclipse.ui.IEditorPart;
24,24c48,48
< 
---
> 
24a49,49
> import org.eclipse.ui.PlatformUI;
25,25d48
< import org.eclipse.ui.IWorkbenchWindow;
26,26c50,50
< 
---
> 
27,30d50
< import org.eclipse.ui.PlatformUI;
< 
< import org.eclipse.gmf.runtime.common.core.util.ObjectAdapter;
< 
37,37c21,21
< import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
---
> import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
39,39c17,17
< import org.eclipse.gmf.runtime.diagram.ui.internal.services.layout.LayoutNode;
---
> import org.eclipse.gmf.runtime.diagram.core.util.ViewType;
41,41c29,29
< import org.eclipse.gmf.runtime.diagram.ui.internal.services.layout.LayoutService;
---
> import org.eclipse.gmf.runtime.diagram.ui.services.layout.LayoutService;
49,49c19,19
< import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
---
> import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
108a97,97
>         return LayoutService.getInstance ().getLayoutNode (node);
109,137d96
<         if (null == node) {
<             throw new NullPointerException ("Argument 'node' is null");
<         }
<         Diagram diagram = node.getDiagram ();
<         DiagramEditPart diagramEP = OffscreenEditPartFactory.getInstance ().createDiagramEditPart (diagram);
<         Map registry = diagramEP.getViewer ().getEditPartRegistry ();
<         GraphicalEditPart gep = (GraphicalEditPart) registry.get (node);
<         Dimension size = gep.getFigure ().getBounds ().getSize ();
<         return new LayoutNode (node, size.width, size.height);
<     }
< 
<     private static void checkValidNodes (List nodes) {
<         if (null == nodes) {
<             throw new NullPointerException ("Argument 'nodes' is null");
<         }
<         if (nodes.size () == 0) {
<             throw new IllegalArgumentException ("Argument 'nodes' is empty");
<         }
<         ListIterator li = nodes.listIterator ();
<         EObject parent = null;
<         while (li.hasNext ()) {
<             Object next = li.next ();
<             if (! (next instanceof Node)) throw new IllegalArgumentException ("Argument 'nodes' contains objects which aren't of type 'Node'");
< 
<             Node node = (Node) next;
<             if (parent == null) parent = ViewUtil.getContainerView (node);
<             else if (ViewUtil.getContainerView (node) != parent) throw new IllegalArgumentException ("Argument 'nodes' contains objects which have a different parent containment");
< 
<         }
140a101,101
>         return LayoutService.getInstance ().getLayoutNodes (diagramEP, nodes);
141,155d100
<         checkValidNodes (nodes);
<         if (diagramEP == null) {
<             Diagram diagram = ((Node) nodes.get (0)).getDiagram ();
<             diagramEP = OffscreenEditPartFactory.getInstance ().createDiagramEditPart (diagram);
<         }
<         Map registry = diagramEP.getViewer ().getEditPartRegistry ();
<         List layoutNodes = new ArrayList (nodes.size ());
<         ListIterator li = nodes.listIterator ();
<         while (li.hasNext ()) {
<             Node node = (Node) li.next ();
<             GraphicalEditPart gep = (GraphicalEditPart) registry.get (node);
<             Dimension size = gep.getFigure ().getBounds ().getSize ();
<             layoutNodes.add (new LayoutNode (node, size.width, size.height));
<         }
<         return layoutNodes;
158a105,105
>         LayoutService.getInstance ().layout (view, hint);
159,172d104
<         if (null == view) {
<             throw new NullPointerException ("Argument 'view' is null");
<         }
<         if (null == hint) {
<             throw new NullPointerException ("Argument 'hint' is null");
<         }
<         Diagram diagram = view.getDiagram ();
<         DiagramEditPart diagramEP = OffscreenEditPartFactory.getInstance ().createDiagramEditPart (diagram);
<         List hints = new ArrayList (2);
<         hints.add (hint);
<         hints.add (diagramEP);
<         IAdaptable layoutHint = new ObjectAdapter (hints);
<         final Runnable layoutRun = LayoutService.getInstance ().layoutNodes (getLayoutNodes (diagramEP, view.getChildren ()), false, layoutHint);
<         layoutRun.run ();
175a109,109
>         LayoutService.getInstance ().layoutNodes (nodes, true, hint);
176,188d108
<         checkValidNodes (nodes);
<         if (null == hint) {
<             throw new NullPointerException ("Argument 'hint' is null");
<         }
<         Node nodeFirst = (Node) nodes.get (0);
<         Diagram diagram = nodeFirst.getDiagram ();
<         DiagramEditPart diagramEP = OffscreenEditPartFactory.getInstance ().createDiagramEditPart (diagram);
<         List hints = new ArrayList (2);
<         hints.add (hint);
<         hints.add (diagramEP);
<         IAdaptable layoutHint = new ObjectAdapter (hints);
<         final Runnable layoutRun = LayoutService.getInstance ().layoutNodes (getLayoutNodes (diagramEP, nodes), true, layoutHint);
<         layoutRun.run ();
