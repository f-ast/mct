32,32c34,34
<     private final GMFGenPackage GMFGEN = GMFGenPackage.eINSTANCE;
---
>         final GMFGenPackage GMFGEN = GMFGenPackage.eINSTANCE;
91,91c91,91
<         preserveIfSet (GMFGEN.getGenCompartment (), GMFGEN.getGenCompartment_ListLayout ());
---
>         restore (GMFGEN.getGenCompartment (), GMFGEN.getGenCompartment_ListLayout ());
103a104,104
>         preserveIfSet (GMFGEN.getGenLink (), GMFGEN.getGenLink_TreeBranch ());
104,115d103
<         addDecision (GMFGEN.getGenLink (), new Decision (GMFGEN.getGenLink_TreeBranch ()) {
< 
<             @Override
<             public void apply (EObject current, EObject old) {
<                 if (! ((GenLink) old).isTreeBranch ()) {
<                     ((GenLink) current).setTreeBranch (false);
<                 }
<             }
< 
<         }
< 
<         );
167,167c156,156
<         preserveIfSet (GMFGEN.getGenCustomPropertyTab (), GMFGEN.getGenPropertyTab_Label ());
---
>         addDecision (GMFGEN.getGenCustomPropertyTab (), new KeepOldIfNewIsByPatternOrNotSet (GMFGEN.getGenPropertyTab_Label (), "^Core$"));
208,208c197,197
<                 if (false == current instanceof GenStandardPreferencePage) {
---
>                 assert current instanceof GenStandardPreferencePage;
209,210d197
<                     return false;
<                 }
211,211c198,198
<                 if (false == old instanceof GenStandardPreferencePage) {
---
>                 assert old instanceof GenStandardPreferencePage;
212,213d198
<                     return false;
<                 }
227a213,216
>         setMatcher (GMFGEN.getDynamicModelAccess (), ALWAYS_MATCH);
>         preserveIfSet (GMFGEN.getDynamicModelAccess (), GMFGEN.getDynamicModelAccess_ClassName ());
>         preserveIfSet (GMFGEN.getDynamicModelAccess (), GMFGEN.getDynamicModelAccess_PackageName ());
>         setCopier (GMFGEN.getDynamicModelAccess (), Copier.COMPLETE_COPY);
