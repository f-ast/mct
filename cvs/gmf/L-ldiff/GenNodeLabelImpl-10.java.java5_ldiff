2a3,4
> import org.eclipse.emf.common.notify.Notification;
> 
8a11,14
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> 
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
33a40,60
>     public NotificationChain basicSetNode (GenNode newNode, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newNode, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
>         return msgs;
>     }
> 
>     public void setNode (GenNode newNode) {
>         if (newNode != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_NODE_LABEL__NODE && newNode != null)) {
>             if (EcoreUtil.isAncestor (this, newNode)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newNode != null) msgs = ((InternalEObject) newNode).eInverseAdd (this, GMFGenPackage.GEN_NODE__LABELS, GenNode.class, msgs);
> 
>             msgs = basicSetNode (newNode, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NODE_LABEL__NODE, newNode, newNode));
> 
>     }
> 
40,40c67,67
<                 return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
---
>                 return basicSetNode ((GenNode) otherEnd, msgs);
49,49c76,76
<                 return eBasicSetContainer (null, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
---
>                 return basicSetNode (null, msgs);
72a100,119
>     public void eSet (int featureID, Object newValue) {
>         switch (featureID) {
>             case GMFGenPackage.GEN_NODE_LABEL__NODE :
>                 setNode ((GenNode) newValue);
>                 return;
>         }
>         super.eSet (featureID, newValue);
>     }
> 
>     @Override
>     public void eUnset (int featureID) {
>         switch (featureID) {
>             case GMFGenPackage.GEN_NODE_LABEL__NODE :
>                 setNode ((GenNode) null);
>                 return;
>         }
>         super.eUnset (featureID);
>     }
> 
>     @Override
