297a298,302
>                     String [] declaredImportsAsStrings = new String [declaredImports.length];
>                     for (int i = 0;
>                     i < declaredImports.length; i ++) {
>                         declaredImportsAsStrings [i] = declaredImports [i].getElementName ();
>                     }
298,298d297
<                     copyImports (cu, declaredImports, new SubProgressMonitor (pm, 1));
299,299c303,303
<                     getImportsPostrocessor ().organizeImports (cu, new SubProgressMonitor (pm, 1));
---
>                     getImportsPostrocessor ().organizeImports (cu, declaredImportsAsStrings, new SubProgressMonitor (pm, 1));
315,315c319,319
<                 getImportsPostrocessor ().organizeImports (cu, new SubProgressMonitor (pm, 1));
---
>                 getImportsPostrocessor ().organizeImports (cu, null, new SubProgressMonitor (pm, 1));
333,352d336
<     private static void copyImports (ICompilationUnit cu, IImportDeclaration [] importsToCopy, IProgressMonitor progress) throws JavaModelException {
<         if (importsToCopy == null || importsToCopy.length == 0) {
<             return;
<         }
<         progress.beginTask (null, importsToCopy.length + 1);
<         final String [] imports = new String [importsToCopy.length];
<         final int [] flags = new int [imports.length];
<         for (int i = 0;
<         i < importsToCopy.length; i ++) {
<             imports [i] = importsToCopy [i].getElementName ();
<             flags [i] = importsToCopy [i].getFlags ();
<         }
<         cu.save (new SubProgressMonitor (progress, 1), true);
<         for (int i = 0;
<         i < imports.length; i ++) {
<             cu.createImport (imports [i], null, flags [i], new SubProgressMonitor (progress, 1));
<         }
<         progress.done ();
<     }
< 
