37,37c21,21
< import org.eclipse.gmf.runtime.draw2d.ui.internal.l10n.Draw2dResourceManager;
---
> import org.eclipse.gmf.runtime.draw2d.ui.internal.l10n.Draw2dResourceManager;
38,38c22,22
< 
---
> 
40,40c72,72
<     protected static class State {
---
>     protected static class State {
41,41d72
<         private double zoom;
42,42c73,73
<         private double appliedX;
---
>         private double appliedX;
43,43c74,74
<         private double appliedY;
---
>         private double appliedY;
44,44c75,75
<         private Font font;
---
>         private Font font;
45a77,77
>         private double zoom;
45,45c76,76
<         private int lineWidth;
---
>         private int lineWidth;
46,46c78,78
< 
---
> 
47,47c79,79
<         protected State () {
---
>         protected State () {
48,48c80,80
<         }
---
>         }
49,49c81,81
< 
---
> 
50,50c82,82
<         protected State (double zoom, double x, double y, Font font, int lineWidth) {
---
>         protected State (double zoom, double x, double y, Font font, int lineWidth) {
51,51c83,83
<             this.zoom = zoom;
---
>             this.zoom = zoom;
52,52c84,84
<             this.appliedX = x;
---
>             this.appliedX = x;
53,53c85,85
<             this.appliedY = y;
---
>             this.appliedY = y;
54,54c86,86
<             this.font = font;
---
>             this.font = font;
55,55c87,87
<             this.lineWidth = lineWidth;
---
>             this.lineWidth = lineWidth;
56,56c88,88
<         }
---
>         }
57,57c89,89
< 
---
> 
58,58c90,90
<         protected void setValues (double zoom, double x, double y, Font font, int lineWidth) {
---
>         protected void setValues (double zoom, double x, double y, Font font, int lineWidth) {
59,59c91,91
<             this.zoom = zoom;
---
>             this.zoom = zoom;
60,60c92,92
<             this.appliedX = x;
---
>             this.appliedX = x;
61,61c93,93
<             this.appliedY = y;
---
>             this.appliedY = y;
62,62c94,94
<             this.font = font;
---
>             this.font = font;
63,63c95,95
<             this.lineWidth = lineWidth;
---
>             this.lineWidth = lineWidth;
64,64c96,96
<         }
---
>         }
65,65c97,97
< 
---
> 
95,95c40,40
<     private static class FontHeightCache {
---
>     private static class FontHeightCache {
96,96c41,41
<         Font font;
---
>         Font font;
97,97c42,42
<         int height;
---
>         int height;
99a109,109
>     private boolean allowText = true;
100,100d108
<     private static final Rectangle TEMP = new Rectangle ();
101,101c110,110
<     private Map fontDataCache = new HashMap ();
---
>     private Map fontDataCache = new HashMap ();
101a111,114
>     private FontKey fontKey = new FontKey ();
>     private double fractionalX;
>     private double fractionalY;
>     private Graphics graphics;
102,102c115,115
<     private FontHeightCache localCache = new FontHeightCache ();
---
>     private FontHeightCache localCache = new FontHeightCache ();
103,104d115
<     private FontHeightCache targetCache = new FontHeightCache ();
<     private Graphics graphics;
105,105c116,116
<     private Font localFont;
---
>     private Font localFont;
106,106c117,117
<     private int localLineWidth;
---
>     private int localLineWidth;
107,109d117
<     private double fractionalX;
<     private double fractionalY;
<     double zoom = 1.0;
110,110c118,118
<     private List stack = new ArrayList ();
---
>     private List stack = new ArrayList ();
111,111c119,119
<     private int stackPointer = 0;
---
>     private int stackPointer = 0;
112,112c120,120
<     private FontKey fontKey = new FontKey ();
---
>     private FontHeightCache targetCache = new FontHeightCache ();
112a121,122
>     double zoom = 1.0;
> 
113,113d120
<     private boolean allowText = true;
114a101,101
>     private final Rectangle tempRECT = new Rectangle ();
145,145c222,222
<     public void fillArc (int x, int y, int w, int h, int offset, int sweep) {
---
>     public void fillArc (int x, int y, int w, int h, int offset, int sweep) {
146,146c223,223
<         Rectangle z = zoomFillRect (x, y, w, h);
---
>         Rectangle z = zoomFillRect (x, y, w, h);
147,147c224,224
<         if (z.isEmpty () || sweep == 0) return;
---
>         if (z.isEmpty () || sweep == 0) return;
148,148c225,225
< 
---
> 
149,149c226,226
<         graphics.fillArc (z, offset, sweep);
---
>         graphics.fillArc (z, offset, sweep);
150,150c227,227
<     }
---
>     }
151,151c228,228
< 
---
> 
152,152c229,229
<     public void fillGradient (int x, int y, int w, int h, boolean vertical) {
---
>     public void fillGradient (int x, int y, int w, int h, boolean vertical) {
153,153c230,230
<         graphics.fillGradient (zoomFillRect (x, y, w, h), vertical);
---
>         graphics.fillGradient (zoomFillRect (x, y, w, h), vertical);
154,154c231,231
<     }
---
>     }
155,155c232,232
< 
---
> 
155a233,257
>     public void fillOval (int x, int y, int w, int h) {
>         graphics.fillOval (zoomFillRect (x, y, w, h));
>     }
> 
>     public void fillPolygon (int [] points) {
>         graphics.fillPolygon (zoomPointList (points));
>     }
> 
>     public void fillPolygon (PointList points) {
>         graphics.fillPolygon (zoomPointList (points.toIntArray ()));
>     }
> 
>     public void fillRectangle (int x, int y, int w, int h) {
>         graphics.fillRectangle (zoomFillRect (x, y, w, h));
>     }
> 
>     public void fillRoundRectangle (Rectangle r, int arcWidth, int arcHeight) {
>         graphics.fillRoundRectangle (zoomFillRect (r.x, r.y, r.width, r.height), (int) (arcWidth * zoom), (int) (arcHeight * zoom));
>     }
> 
>     public void fillString (String s, int x, int y) {
>         if (allowText) graphics.fillString (s, zoomTextPoint (x, y));
> 
>     }
> 
179,180d172
<     public void fillOval (int x, int y, int w, int h) {
<         graphics.fillOval (zoomFillRect (x, y, w, h));
191,191c173,173
<     public void drawPoint (int x, int y) {
---
>     public void drawPoint (int x, int y) {
192,192c174,174
<         graphics.drawPoint ((int) Math.floor (x * zoom + fractionalX), (int) Math.floor (y * zoom + fractionalY));
---
>         graphics.drawPoint ((int) Math.floor (x * zoom + fractionalX), (int) Math.floor (y * zoom + fractionalY));
193,202d174
<     }
< 
<     public void fillPolygon (int [] points) {
<         graphics.fillPolygon (zoomPointList (points));
<     }
< 
<     public void fillPolygon (PointList points) {
<         graphics.fillPolygon (zoomPointList (points.toIntArray ()));
<     }
< 
215,218d196
<     public void fillRectangle (int x, int y, int w, int h) {
<         graphics.fillRectangle (zoomFillRect (x, y, w, h));
<     }
< 
223,226d200
<     public void fillRoundRectangle (Rectangle r, int arcWidth, int arcHeight) {
<         graphics.fillRoundRectangle (zoomFillRect (r.x, r.y, r.width, r.height), (int) (arcWidth * zoom), (int) (arcHeight * zoom));
<     }
< 
232,236d205
<     public void fillString (String s, int x, int y) {
<         if (allowText) graphics.fillString (s, zoomTextPoint (x, y));
< 
<     }
< 
272a305,308
>     public int getFillRule () {
>         return graphics.getFillRule ();
>     }
> 
284a321,332
>     public int getInterpolation () {
>         return graphics.getInterpolation ();
>     }
> 
>     public int getLineCap () {
>         return graphics.getLineCap ();
>     }
> 
>     public int getLineJoin () {
>         return graphics.getLineJoin ();
>     }
> 
300a349,350
>     public int getTextAntialias () {
>         return graphics.getTextAntialias ();
301,301c263,263
<     public double getAbsoluteScale () {
---
>     public double getAbsoluteScale () {
302,302c264,264
<         return zoom * graphics.getAbsoluteScale ();
---
>         return zoom * graphics.getAbsoluteScale ();
302a265,274
>     }
> 
>     public int getAlpha () {
>         return graphics.getAlpha ();
>     }
> 
>     public int getAntialias () {
>         return graphics.getAntialias ();
>     }
> 
343a279,283
>     Font getCachedFont (FontKey key) {
>         FontData data = key.font.getFontData () [0];
>         data.setHeight (key.height);
>         return Draw2dResourceManager.getInstance ().getFont (Display.getCurrent (), data);
>     }
343a392,393
>     public void setAlpha (int alpha) {
>         graphics.setAlpha (alpha);
344,345d278
<     void setScale (double value) {
<         if (zoom == value) return;
346,346c284,284
< 
---
> 
346a285,287
>     FontData getCachedFontData (Font f) {
>         FontData data = (FontData) fontDataCache.get (f);
>         if (data != null) return data;
347,350d284
<         this.zoom = value;
<         graphics.setFont (zoomFont (getLocalFont ()));
<         graphics.setLineWidth (zoomLineWidth (localLineWidth));
<     }
351a289,291
>         data = getLocalFont ().getFontData () [0];
>         fontDataCache.put (f, data);
>         return data;
351,351c288,288
< 
---
> 
352,355d288
<     Font getCachedFont (FontKey key) {
<         FontData data = key.font.getFontData () [0];
<         data.setHeight (key.height);
<         return Draw2dResourceManager.getInstance ().getFont (Display.getCurrent (), data);
356,356c292,292
<     }
---
>     }
357,357c293,293
< 
---
> 
358,364d293
<     FontData getCachedFontData (Font f) {
<         FontData data = (FontData) fontDataCache.get (f);
<         if (data != null) return data;
< 
<         data = getLocalFont ().getFontData () [0];
<         fontDataCache.put (f, data);
<         return data;
366a396,397
>     public void setAntialias (int value) {
>         graphics.setAntialias (value);
367,367c133,133
<     Font createFont (FontData data) {
---
>     Font createFont (FontData data) {
368,368c134,134
<         return new Font (Display.getCurrent (), data);
---
>         return new Font (Display.getCurrent (), data);
368a135,136
>     }
> 
378a408,411
>     public void setFillRule (int rule) {
>         graphics.setFillRule (rule);
>     }
> 
386a420,435
>     public void setInterpolation (int interpolation) {
>         graphics.setInterpolation (interpolation);
>     }
> 
>     public void setLineCap (int cap) {
>         graphics.setLineCap (cap);
>     }
> 
>     public void setLineDash (int [] dash) {
>         graphics.setLineDash (dash);
>     }
> 
>     public void setLineJoin (int join) {
>         graphics.setLineJoin (join);
>     }
> 
404a454,465
>     void setScale (double value) {
>         if (zoom == value) return;
> 
>         this.zoom = value;
>         graphics.setFont (zoomFont (getLocalFont ()));
>         graphics.setLineWidth (zoomLineWidth (localLineWidth));
>     }
> 
>     public void setTextAntialias (int value) {
>         graphics.setTextAntialias (value);
>     }
> 
453,453c581,581
<     private Point zoomTextPoint (int x, int y) {
---
>     Point zoomTextPoint (int x, int y) {
466a595,596
>     protected Graphics getGraphics () {
>         return graphics;
466a478,483
>     private Rectangle zoomClipRect (Rectangle r) {
>         tempRECT.x = (int) (Math.floor (r.x * zoom + fractionalX));
>         tempRECT.y = (int) (Math.floor (r.y * zoom + fractionalY));
>         tempRECT.width = (int) (Math.ceil (((r.x + r.width) * zoom + fractionalX))) - tempRECT.x;
>         tempRECT.height = (int) (Math.ceil (((r.y + r.height) * zoom + fractionalY))) - tempRECT.y;
>         return tempRECT;
467,489d477
<     private int [] zoomPointList (int [] points) {
<         int [] scaled = null;
<         for (int i = 0;
<         i < intArrayCache.length; i ++) {
<             if (intArrayCache [i].length == points.length) {
<                 scaled = intArrayCache [i];
<                 if (i != 0) {
<                     int [] temp = intArrayCache [i - 1];
<                     intArrayCache [i - 1] = scaled;
<                     intArrayCache [i] = temp;
<                 }
<             }
<         }
<         if (scaled == null) {
<             intArrayCache [intArrayCache.length - 1] = new int [points.length];
<             scaled = intArrayCache [intArrayCache.length - 1];
<         }
<         for (int i = 0;
<         (i + 1) < points.length; i += 2) {
<             scaled [i] = (int) (Math.floor ((points [i] * zoom + fractionalX)));
<             scaled [i + 1] = (int) (Math.floor ((points [i + 1] * zoom + fractionalY)));
<         }
<         return scaled;
490,490c484,484
<     }
---
>     }
491,491c485,485
< 
---
> 
492,492c486,486
<     private Rectangle zoomFillRect (int x, int y, int w, int h) {
---
>     private Rectangle zoomFillRect (int x, int y, int w, int h) {
492a487,491
>         tempRECT.x = (int) (Math.floor ((x * zoom + fractionalX)));
>         tempRECT.y = (int) (Math.floor ((y * zoom + fractionalY)));
>         tempRECT.width = (int) (Math.floor (((x + w - 1) * zoom + fractionalX))) - tempRECT.x + 1;
>         tempRECT.height = (int) (Math.floor (((y + h - 1) * zoom + fractionalY))) - tempRECT.y + 1;
>         return tempRECT;
493,497d486
<         TEMP.x = (int) (Math.floor ((x * zoom + fractionalX)));
<         TEMP.y = (int) (Math.floor ((y * zoom + fractionalY)));
<         TEMP.width = (int) (Math.floor (((x + w - 1) * zoom + fractionalX))) - TEMP.x + 1;
<         TEMP.height = (int) (Math.floor (((y + h - 1) * zoom + fractionalY))) - TEMP.y + 1;
<         return TEMP;
498,498c492,492
<     }
---
>     }
499,499c493,493
< 
---
> 
500,500c494,494
<     Font zoomFont (Font f) {
---
>     Font zoomFont (Font f) {
501,501c495,495
<         if (f == null) f = Display.getCurrent ().getSystemFont ();
---
>         if (f == null) f = Display.getCurrent ().getSystemFont ();
502,502c496,496
< 
---
> 
503,503c497,497
<         FontData data = getCachedFontData (f);
---
>         FontData data = getCachedFontData (f);
504,504c498,498
<         int zoomedFontHeight = zoomFontHeight (data.getHeight ());
---
>         int zoomedFontHeight = zoomFontHeight (data.getHeight ());
505,505c499,499
<         allowText = zoomedFontHeight > 0;
---
>         allowText = zoomedFontHeight > 0;
506,506c500,500
<         fontKey.setValues (f, zoomedFontHeight);
---
>         fontKey.setValues (f, zoomedFontHeight);
507,507c501,501
<         return getCachedFont (fontKey);
---
>         return getCachedFont (fontKey);
508,508c502,502
<     }
---
>     }
509,509c503,503
< 
---
> 
510,510c504,504
<     int zoomFontHeight (int height) {
---
>     int zoomFontHeight (int height) {
511,511c505,505
<         return (int) (zoom * height);
---
>         return (int) (zoom * height);
512,512c506,506
<     }
---
>     }
513a508,509
>     int zoomLineWidth (int w) {
>         return w;
513,513c507,507
< 
---
> 
514,519d507
<     private Rectangle zoomClipRect (Rectangle r) {
<         TEMP.x = (int) (Math.floor (r.x * zoom + fractionalX));
<         TEMP.y = (int) (Math.floor (r.y * zoom + fractionalY));
<         TEMP.width = (int) (Math.ceil (((r.x + r.width) * zoom + fractionalX))) - TEMP.x;
<         TEMP.height = (int) (Math.ceil (((r.y + r.height) * zoom + fractionalY))) - TEMP.y;
<         return TEMP;
520,520c510,510
<     }
---
>     }
521,521c511,511
< 
---
> 
521a512,534
>     private int [] zoomPointList (int [] points) {
>         int [] scaled = null;
>         for (int i = 0;
>         i < intArrayCache.length; i ++) {
>             if (intArrayCache [i].length == points.length) {
>                 scaled = intArrayCache [i];
>                 if (i != 0) {
>                     int [] temp = intArrayCache [i - 1];
>                     intArrayCache [i - 1] = scaled;
>                     intArrayCache [i] = temp;
>                 }
>             }
>         }
>         if (scaled == null) {
>             intArrayCache [intArrayCache.length - 1] = new int [points.length];
>             scaled = intArrayCache [intArrayCache.length - 1];
>         }
>         for (int i = 0;
>         (i + 1) < points.length; i += 2) {
>             scaled [i] = (int) (Math.floor ((points [i] * zoom + fractionalX)));
>             scaled [i + 1] = (int) (Math.floor ((points [i + 1] * zoom + fractionalY)));
>         }
>         return scaled;
522,527d511
<     private Rectangle zoomRect (int x, int y, int w, int h) {
<         TEMP.x = (int) (Math.floor (x * zoom + fractionalX));
<         TEMP.y = (int) (Math.floor (y * zoom + fractionalY));
<         TEMP.width = (int) (Math.floor (((x + w) * zoom + fractionalX))) - TEMP.x;
<         TEMP.height = (int) (Math.floor (((y + h) * zoom + fractionalY))) - TEMP.y;
<         return TEMP;
528,528c535,535
<     }
---
>     }
529,529c536,536
< 
---
> 
529a537,542
>     protected Rectangle zoomRect (int x, int y, int w, int h) {
>         tempRECT.x = (int) (Math.floor (x * zoom + fractionalX));
>         tempRECT.y = (int) (Math.floor (y * zoom + fractionalY));
>         tempRECT.width = (int) (Math.floor (((x + w) * zoom + fractionalX))) - tempRECT.x;
>         tempRECT.height = (int) (Math.floor (((y + h) * zoom + fractionalY))) - tempRECT.y;
>         return tempRECT;
530,531d536
<     int zoomLineWidth (int w) {
<         return w;
532,532c543,543
<     }
---
>     }
533,533c544,544
< 
---
> 
534,535d544
<     public void setLineDash (int [] dash) {
<         graphics.setLineDash (dash);
