20a21,22
> import org.eclipse.emf.codegen.util.CodeGenUtil;
> 
47a50,53
> 
> import org.eclipse.gmf.internal.common.codegen.ImportUtil;
> 
> import org.eclipse.gmf.internal.common.codegen.TextEmitter;
47,47c49,49
< import org.eclipse.gmf.common.codegen.GeneratorBase;
---
> import org.eclipse.gmf.internal.common.codegen.GeneratorBase;
78a85,91
>         doGenerateFile (myEmitters.getManifestGenerator (), new Path ("META-INF/MANIFEST.MF"), new Object [] {myEditorGen.getPlugin ()});
>         doGenerateFile (myEmitters.getBuildPropertiesGenerator (), new Path ("build.properties"), new Object [] {myEditorGen.getPlugin ()});
>         doGenerateFile (myEmitters.getPluginXML (), new Path ("plugin.xml"), new Object [] {myEditorGen.getPlugin ()});
>         doGenerateFile (myEmitters.getPluginPropertiesGenerator (), new Path ("plugin.properties"), new Object [] {myEditorGen.getPlugin ()});
>         internalGenerateJavaClass (myEmitters.getCreationWizardGenerator (), myDiagram.getCreationWizardQualifiedClassName (), myDiagram);
>         internalGenerateJavaClass (myEmitters.getCreationWizardPageGenerator (), myDiagram.getCreationWizardPageQualifiedClassName (), myDiagram);
>         internalGenerateJavaClass (myEmitters.getPluginGenerator (), myEditorGen.getPlugin ().getActivatorQualifiedClassName (), myEditorGen.getPlugin ());
79,85d84
<         doGenerateFile (myEmitters.getManifestGenerator (), new Path ("META-INF/MANIFEST.MF"), myEditorGen.getPlugin ());
<         doGenerateFile (myEmitters.getBuildPropertiesGenerator (), new Path ("build.properties"), myEditorGen.getPlugin ());
<         doGenerateFile (myEmitters.getPluginXML (), new Path ("plugin.xml"), myEditorGen.getPlugin ());
<         doGenerateFile (myEmitters.getPluginPropertiesGenerator (), new Path ("plugin.properties"), myEditorGen.getPlugin ());
<         doGenerateJavaClass (myEmitters.getCreationWizardGenerator (), myDiagram.getCreationWizardQualifiedClassName (), myDiagram);
<         doGenerateJavaClass (myEmitters.getCreationWizardPageGenerator (), myDiagram.getCreationWizardPageQualifiedClassName (), myDiagram);
<         doGenerateJavaClass (myEmitters.getPluginGenerator (), myEditorGen.getPlugin ().getActivatorQualifiedClassName (), myEditorGen.getPlugin ());
86a93,94
>         internalGenerateJavaClass (myEmitters.getDiagramEditorUtilGenerator (), myDiagram.getDiagramEditorUtilQualifiedClassName (), myDiagram);
>         internalGenerateJavaClass (myEmitters.getEditorGenerator (), myEditorGen.getEditor ().getQualifiedClassName (), myEditorGen.getEditor ());
86,86c92,92
<         doGenerateJavaClass (myEmitters.getActionBarContributorGenerator (), myEditorGen.getEditor ().getActionBarContributorQualifiedClassName (), myEditorGen.getEditor ());
---
>         internalGenerateJavaClass (myEmitters.getActionBarContributorGenerator (), myEditorGen.getEditor ().getActionBarContributorQualifiedClassName (), myEditorGen.getEditor ());
87,88d92
<         doGenerateJavaClass (myEmitters.getDiagramEditorUtilGenerator (), myDiagram.getDiagramEditorUtilQualifiedClassName (), myDiagram);
<         doGenerateJavaClass (myEmitters.getEditorGenerator (), myEditorGen.getEditor ().getQualifiedClassName (), myEditorGen.getEditor ());
89,89c95,95
<         doGenerateJavaClass (myEmitters.getPropertySourceProviderGenerator (), myDiagram.getPropertyProviderQualifiedClassName (), myDiagram);
---
>         internalGenerateJavaClass (myEmitters.getPropertySourceProviderGenerator (), myDiagram.getPropertyProviderQualifiedClassName (), myDiagram);
91,91c97,97
<             doGenerateJavaClass (myEmitters.getPaletteFactoryGenerator (), myDiagram.getPalette ().getFactoryQualifiedClassName (), myDiagram);
---
>             internalGenerateJavaClass (myEmitters.getPaletteFactoryGenerator (), myDiagram.getPalette ().getFactoryQualifiedClassName (), myDiagram);
93,93c99,99
<         doGenerateJavaClass (myEmitters.getUpdatableEditPartGenerator (), myDiagram.getEditPartsPackageName (), "IUpdatableEditPart", myDiagram);
---
>         internalGenerateJavaClass (myEmitters.getUpdatableEditPartGenerator (), myDiagram.getEditPartsPackageName (), "IUpdatableEditPart", myDiagram);
94,94c100,100
<         doGenerateJavaClass (myEmitters.getEditPartFactoryGenerator (), myDiagram.getEditPartFactoryQualifiedClassName (), myDiagram);
---
>         internalGenerateJavaClass (myEmitters.getEditPartFactoryGenerator (), myDiagram.getEditPartFactoryQualifiedClassName (), myDiagram);
95,95c101,101
<         doGenerateJavaClass (myEmitters.getDiagramEditPartGenerator (), myDiagram.getEditPartQualifiedClassName (), myDiagram);
---
>         internalGenerateJavaClass (myEmitters.getDiagramEditPartGenerator (), myDiagram.getEditPartQualifiedClassName (), myDiagram);
100,100c106,106
<                 doGenerateJavaClass (myEmitters.getNodeEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
---
>                 internalGenerateJavaClass (myEmitters.getNodeEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
103a110,110
>                     internalGenerateJavaClass (myEmitters.getNodeLabelEditPartGenerator (), label.getEditPartQualifiedClassName (), label);
104,104d109
<                     doGenerateJavaClass (myEmitters.getNodeLabelEditPartGenerator (), label.getEditPartQualifiedClassName (), label);
105,105c111,111
<                     doGenerateJavaClass (myEmitters.getLabelViewFactoryGenerator (), label.getNotationViewFactoryQualifiedClassName (), label);
---
>                     internalGenerateJavaClass (myEmitters.getLabelViewFactoryGenerator (), label.getNotationViewFactoryQualifiedClassName (), label);
107,107c113,113
<                 doGenerateJavaClass (myEmitters.getNodeViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
---
>                 internalGenerateJavaClass (myEmitters.getNodeViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
108a115,115
>                 internalGenerateJavaClass (myEmitters.getChildNodeEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
109,109d114
<                 doGenerateJavaClass (myEmitters.getChildNodeEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
110,110c116,116
<                 doGenerateJavaClass (myEmitters.getLabelViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
---
>                 internalGenerateJavaClass (myEmitters.getLabelViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
113,113c119,119
<         doGenerateJavaClass (myEmitters.getAbstractParserGenerator (), myDiagram.getAbstractParserQualifiedClassName (), myDiagram);
---
>         internalGenerateJavaClass (myEmitters.getAbstractParserGenerator (), myDiagram.getAbstractParserQualifiedClassName (), myDiagram);
117,117c123,123
<             doGenerateJavaClass (myEmitters.getLinkEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
---
>             internalGenerateJavaClass (myEmitters.getLinkEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
120a127,127
>                 internalGenerateJavaClass (myEmitters.getLinkLabelEditPartGenerator (), label.getEditPartQualifiedClassName (), label);
121,121d126
<                 doGenerateJavaClass (myEmitters.getLinkLabelEditPartGenerator (), label.getEditPartQualifiedClassName (), label);
122,122c128,128
<                 doGenerateJavaClass (myEmitters.getLabelViewFactoryGenerator (), label.getNotationViewFactoryQualifiedClassName (), label);
---
>                 internalGenerateJavaClass (myEmitters.getLabelViewFactoryGenerator (), label.getNotationViewFactoryQualifiedClassName (), label);
124,124c130,130
<             doGenerateJavaClass (myEmitters.getLinkViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
---
>             internalGenerateJavaClass (myEmitters.getLinkViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
129,130d134
<             doGenerateJavaClass (myEmitters.getCompartmentEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
<             doGenerateJavaClass (myEmitters.getCompartmentViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
131a135,138
>             internalGenerateJavaClass (myEmitters.getCompartmentEditPartGenerator (), next.getEditPartQualifiedClassName (), next);
>             internalGenerateJavaClass (myEmitters.getCompartmentViewFactoryGenerator (), next.getNotationViewFactoryQualifiedClassName (), next);
>         }
>         internalGenerateJavaClass (myEmitters.getDiagramViewFactoryGenerator (), myDiagram.getNotationViewFactoryQualifiedClassName (), myDiagram);
131a142,149
> 
>     private void internalGenerateJavaClass (TextEmitter emitter, String qualifiedClassName, Object argument) throws InterruptedException {
>         internalGenerateJavaClass (emitter, CodeGenUtil.getPackageName (qualifiedClassName), CodeGenUtil.getSimpleClassName (qualifiedClassName), argument);
>     }
> 
>     private void internalGenerateJavaClass (TextEmitter emitter, String packageName, String className, Object argument) throws InterruptedException {
>         ImportUtil importUtil = new ImportUtil (packageName, className);
>         doGenerateJavaClass (emitter, packageName, className, new Object [] {new Object [] {argument, importUtil}});
132,132d134
<         doGenerateJavaClass (myEmitters.getDiagramViewFactoryGenerator (), myDiagram.getNotationViewFactoryQualifiedClassName (), myDiagram);
133,133c139,139
<         doGenerateJavaClass (myEmitters.getDomainElementInitializerGenerator (), myDiagram.getNotationViewFactoriesPackageName (), "DomainElementInitializer", myDiagram);
---
>         internalGenerateJavaClass (myEmitters.getDomainElementInitializerGenerator (), myDiagram.getNotationViewFactoriesPackageName (), "DomainElementInitializer", myDiagram);
134,134c140,140
<         doGenerateJavaClass (myEmitters.getVisualIDRegistryGenerator (), myDiagram.getVisualIDRegistryQualifiedClassName (), myDiagram);
---
>         internalGenerateJavaClass (myEmitters.getVisualIDRegistryGenerator (), myDiagram.getVisualIDRegistryQualifiedClassName (), myDiagram);
