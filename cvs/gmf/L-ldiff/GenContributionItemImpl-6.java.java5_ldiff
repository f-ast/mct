3,4d2
< import org.eclipse.emf.common.notify.Notification;
< 
11,12d8
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
< 
15,16d10
< import org.eclipse.emf.ecore.util.EcoreUtil;
< 
42,62d35
<     public NotificationChain basicSetOwner (GenContributionManager newOwner, NotificationChain msgs) {
<         msgs = eBasicSetContainer ((InternalEObject) newOwner, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, msgs);
<         return msgs;
<     }
< 
<     public void setOwner (GenContributionManager newOwner) {
<         if (newOwner != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER && newOwner != null)) {
<             if (EcoreUtil.isAncestor (this, newOwner)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
< 
<             NotificationChain msgs = null;
<             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
< 
<             if (newOwner != null) msgs = ((InternalEObject) newOwner).eInverseAdd (this, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS, GenContributionManager.class, msgs);
< 
<             msgs = basicSetOwner (newOwner, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, newOwner, newOwner));
< 
<     }
< 
73,73c46,46
<                 return basicSetOwner ((GenContributionManager) otherEnd, msgs);
---
>                 return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, msgs);
82,82c55,55
<                 return basicSetOwner (null, msgs);
---
>                 return eBasicSetContainer (null, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, msgs);
108,127d80
<     public void eSet (int featureID, Object newValue) {
<         switch (featureID) {
<             case GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER :
<                 setOwner ((GenContributionManager) newValue);
<                 return;
<         }
<         super.eSet (featureID, newValue);
<     }
< 
<     @Override
<     public void eUnset (int featureID) {
<         switch (featureID) {
<             case GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER :
<                 setOwner ((GenContributionManager) null);
<                 return;
<         }
<         super.eUnset (featureID);
<     }
< 
<     @Override
