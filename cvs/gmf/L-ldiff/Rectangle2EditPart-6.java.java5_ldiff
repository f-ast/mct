57,62d56
< import org.eclipse.gmf.gmfgraph.Layout;
< 
< import org.eclipse.gmf.gmfgraph.LayoutData;
< 
< import org.eclipse.gmf.gmfgraph.LineKind;
< 
128,128c122,122
<         final NotificationListener layoutListener = new NotificationListener () {
---
>         final NotificationListener Layoutable_LayoutData_PropertiesListener = new NotificationListener () {
131,132d124
<                 Layout layout = (Layout) notification.getNotifier ();
<                 layoutPropertyChanged (layout);
139,139c157,157
<             addListenerFilter ("LayoutPropertiesListener", layoutListener, modelElement.getLayout ());
---
>             addListenerFilter ("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout ());
141,141c159,159
<         addListenerFilter ("ModelElementLayoutListener", new NotificationListener () {
---
>         addListenerFilter ("Layoutable_Layout_Listener", new NotificationListener () {
143a162,164
>                 removeListenerFilter ("Layoutable_Layout_PropertiesListener");
>                 if (modelElement.getLayout () != null) {
>                     addListenerFilter ("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout ());
144,147d161
<                 Layout newLayout = (Layout) notification.getNewValue ();
<                 removeListenerFilter ("LayoutPropertiesListener");
<                 if (newLayout != null) {
<                     addListenerFilter ("LayoutPropertiesListener", layoutListener, newLayout);
149,149d165
<                 layoutChanged (newLayout, true);
155,155d171
<         final NotificationListener layoutDataListener = new NotificationListener () {
158,158d174
<                 layoutDataPropertyChanged ();
162a125,129
>                 layoutDataChanged (modelElement.getLayoutData ());
>             }
> 
>         }
> 
162a180,195
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_Outline ());
>         addListenerFilter ("Shape_Fill_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 myFigure.setFill (modelElement.isFill ());
>             }
> 
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_Fill ());
>         addListenerFilter ("Shape_LineWidth_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 myFigure.setLineWidth (modelElement.getLineWidth ());
>             }
> 
163,163c130,130
<         ;
---
>         ;
164,164c131,131
<         if (modelElement.getLayoutData () != null) {
---
>         if (modelElement.getLayoutData () != null) {
165,165c132,132
<             addListenerFilter ("LayoutDataPropertiesListener", layoutDataListener, modelElement.getLayoutData ());
---
>             addListenerFilter ("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData ());
165a133,150
>         }
>         addListenerFilter ("Layoutable_LayoutData_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 removeListenerFilter ("Layoutable_LayoutData_PropertiesListener");
>                 if (modelElement.getLayoutData () != null) {
>                     addListenerFilter ("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData ());
>                 }
>                 layoutDataChanged (modelElement.getLayoutData ());
>             }
> 
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData ());
>         final NotificationListener Layoutable_Layout_PropertiesListener = new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 layoutChanged (modelElement.getLayout ());
167,167c172,172
<         addListenerFilter ("ModelElementLayoutDataListener", new NotificationListener () {
---
>         addListenerFilter ("Shape_Outline_Listener", new NotificationListener () {
169a202,202
>                 myFigure.setLineStyle (getLineStyle (modelElement.getLineKind ()));
170,173d201
<                 LayoutData newLayoutData = (LayoutData) notification.getNewValue ();
<                 removeListenerFilter ("LayoutDataPropertiesListener");
<                 if (newLayoutData != null) {
<                     addListenerFilter ("LayoutDataPropertiesListener", layoutDataListener, newLayoutData);
174a204,204
> 
175,175c475,475
<                 layoutDataChanged ();
---
>                 layoutDataChanged (modelElement.getLayoutData ());
177a207,211
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_LineKind ());
>         addListenerFilter ("Shape_XorFill_Listener", new NotificationListener () {
> 
>             public void notifyChanged (Notification notification) {
>                 myFigure.setFillXOR (modelElement.isXorFill ());
179a197,197
> 
179a214,217
>         }
> 
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_XorFill ());
>         addListenerFilter ("Shape_XorOutline_Listener", new NotificationListener () {
180,180c198,198
<         , modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData ());
---
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_LineWidth ());
181,181c199,199
<         addListenerFilter ("ModelElementPropertiesListener", new NotificationListener () {
---
>         addListenerFilter ("Shape_LineKind_Listener", new NotificationListener () {
184,216d219
<                 switch (notification.getFeatureID (Rectangle.class)) {
<                     case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__OUTLINE :
<                         {
<                             boolean value = modelElement.isOutline ();
<                             myFigure.setOutline (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__FILL :
<                         {
<                             boolean value = modelElement.isFill ();
<                             myFigure.setFill (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__LINE_WIDTH :
<                         {
<                             int value = modelElement.getLineWidth ();
<                             myFigure.setLineWidth (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__LINE_KIND :
<                         {
<                             LineKind value = modelElement.getLineKind ();
<                             myFigure.setLineStyle ("LINE_DASH".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DOT : "LINE_DASHDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT : "LINE_DASHDOTDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT : "LINE_CUSTOM".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__XOR_FILL :
<                         {
<                             boolean value = modelElement.isXorFill ();
<                             myFigure.setFillXOR (value);
<                             break;
<                         } case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__XOR_OUTLINE :
<                         {
<                             boolean value = modelElement.isXorOutline ();
<                             myFigure.setOutlineXOR (value);
<                             break;
<                         }}
<                 myFigure.repaint ();
220a225,225
>         , modelElement, GMFGraphPackage.eINSTANCE.getShape_XorOutline ());
221,221c166,166
<         , modelElement);
---
>                 layoutChanged (modelElement.getLayout ());
471,471c175,175
<                 boolean value = modelElement.isOutline ();
---
>                 myFigure.setOutline (modelElement.isOutline ());
472,472d175
<                 myFigure.setOutline (value);
473a477,477
>                 layoutChanged (modelElement.getLayout ());
474,474c481,481
<                 boolean value = modelElement.isFill ();
---
>                 myFigure.setFill (modelElement.isFill ());
475,475d481
<                 myFigure.setFill (value);
476a479,479
>                 myFigure.setOutline (modelElement.isOutline ());
477,477c483,483
<                 int value = modelElement.getLineWidth ();
---
>                 myFigure.setLineWidth (modelElement.getLineWidth ());
478,478d483
<                 myFigure.setLineWidth (value);
480,481d480
<                 LineKind value = modelElement.getLineKind ();
<                 myFigure.setLineStyle ("LINE_DASH".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DOT : "LINE_DASHDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT : "LINE_DASHDOTDOT".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT : "LINE_CUSTOM".equals (value.getName ()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
482a485,486
>                 myFigure.setLineStyle (getLineStyle (modelElement.getLineKind ()));
>             } {
483a488,488
>             } {
483,483c487,487
<                 boolean value = modelElement.isXorFill ();
---
>                 myFigure.setFillXOR (modelElement.isXorFill ());
484a490,490
>             }}
484,484c489,489
<                 myFigure.setFillXOR (value);
---
>                 myFigure.setOutlineXOR (modelElement.isXorOutline ());
486,486c220,220
<                 boolean value = modelElement.isXorOutline ();
---
>                 myFigure.setOutlineXOR (modelElement.isXorOutline ());
487,489d220
<                 myFigure.setOutlineXOR (value);
<             } layoutChanged (modelElement.getLayout (), false);
<         }
