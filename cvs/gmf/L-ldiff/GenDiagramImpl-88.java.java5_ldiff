8a9,12
> import java.util.LinkedList;
> 
> import java.util.List;
> 
40a45,46
> import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;
> 
3090a3097,3097
>         for (Iterator it = getAllNodes ().iterator ();
3091,3092d3096
<         if (getEditorGen () != null && getEditorGen ().getDiagram () != null) {
<             for (Iterator it = getEditorGen ().getDiagram ().eAllContents ();
3094,3094c3099,3099
<                 Object next = it.next ();
---
>             GenNode next = (GenNode) it.next ();
3096,3096d3100
<                 if (next instanceof GenNode) {
3097,3097c3101,3101
<                     modelFacet = ((GenNode) next).getModelFacet ();
---
>             modelFacet = next.getModelFacet ();
3099,3099c3103,3103
<                         resultMap.put (modelFacet, (GenNode) next);
---
>                 resultMap.put (modelFacet, next);
3100a3105,3109
>         }
>         for (Iterator it = getLinks ().iterator ();
>         it.hasNext ();) {
>             GenLink next = (GenLink) it.next ();
>             if (next.getModelFacet () instanceof TypeLinkModelFacet) {
3101,3101d3104
<                 } else if (next instanceof GenLink && ((GenLink) next).getModelFacet () instanceof TypeLinkModelFacet) {
3102,3102c3110,3110
<                     modelFacet = (TypeLinkModelFacet) ((GenLink) next).getModelFacet ();
---
>                 TypeLinkModelFacet modelFacet = (TypeLinkModelFacet) next.getModelFacet ();
3103a3112,3126
>                     resultMap.put (modelFacet, next);
>                 }
>             }
>         }
>         return resultMap;
>     }
> 
>     public Map < GenClass, GenTopLevelNode > getGenClass2PhantomMap () {
>         LinkedHashMap < GenClass, GenTopLevelNode > genClass2Phantom = new LinkedHashMap < GenClass, GenTopLevelNode > ();
>         for (Iterator topLevelNodes = getTopLevelNodes ().iterator ();
>         topLevelNodes.hasNext ();) {
>             GenTopLevelNode nextTopLevelNode = (GenTopLevelNode) topLevelNodes.next ();
>             TypeModelFacet nextModelFacet = nextTopLevelNode.getModelFacet ();
>             if (nextModelFacet == null || ! nextModelFacet.isPhantomElement ()) {
>                 continue;
3104,3104d3111
<                         resultMap.put (modelFacet, (GenLink) next);
3105a3128,3130
>             genClass2Phantom.put (nextModelFacet.getMetaClass (), nextTopLevelNode);
>         }
>         return genClass2Phantom;
3107a3133,3141
>     public List < GenLink > getPhantomLinks () {
>         LinkedList < GenLink > phantomLinks = new LinkedList < GenLink > ();
>         for (Iterator it = getLinks ().iterator ();
>         it.hasNext ();) {
>             GenLink nextLink = (GenLink) it.next ();
>             if (nextLink.getModelFacet () instanceof FeatureModelFacet) {
>                 FeatureModelFacet nextModelFacet = (FeatureModelFacet) nextLink.getModelFacet ();
>                 if (nextModelFacet.getMetaFeature ().isContains ()) {
>                     phantomLinks.add (nextLink);
3109a3144,3144
>         }
3110,3110c3145,3145
<         return resultMap;
---
>         return phantomLinks;
