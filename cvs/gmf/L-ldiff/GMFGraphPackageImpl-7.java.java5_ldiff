14a15,16
> import org.eclipse.gmf.gmfgraph.Alignment;
> 
18a21,24
> import org.eclipse.gmf.gmfgraph.BorderLayout;
> 
> import org.eclipse.gmf.gmfgraph.BorderLayoutData;
> 
36a43,44
> import org.eclipse.gmf.gmfgraph.CustomAttribute;
> 
46a55,58
> import org.eclipse.gmf.gmfgraph.CustomLayout;
> 
> import org.eclipse.gmf.gmfgraph.CustomLayoutData;
> 
76a89,92
> import org.eclipse.gmf.gmfgraph.GridLayout;
> 
> import org.eclipse.gmf.gmfgraph.GridLayoutData;
> 
84a101,106
> import org.eclipse.gmf.gmfgraph.Layout;
> 
> import org.eclipse.gmf.gmfgraph.LayoutData;
> 
> import org.eclipse.gmf.gmfgraph.Layoutable;
> 
159a182,191
>     private EClass layoutDataEClass = null;
>     private EClass customLayoutDataEClass = null;
>     private EClass gridLayoutDataEClass = null;
>     private EClass borderLayoutDataEClass = null;
>     private EClass layoutableEClass = null;
>     private EClass layoutEClass = null;
>     private EClass customLayoutEClass = null;
>     private EClass gridLayoutEClass = null;
>     private EClass borderLayoutEClass = null;
>     private EClass customAttributeEClass = null;
163a196,196
>     private EEnum alignmentEEnum = null;
346,349d378
<     public EAttribute getFigure_LayoutManager () {
<         return (EAttribute) figureEClass.getEStructuralFeatures ().get (12);
<     }
< 
473a503,506
>     public EReference getCustomClass_Attributes () {
>         return (EReference) customClassEClass.getEStructuralFeatures ().get (2);
>     }
> 
621a655,782
>     public EClass getLayoutData () {
>         return layoutDataEClass;
>     }
> 
>     public EReference getLayoutData_Owner () {
>         return (EReference) layoutDataEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EClass getCustomLayoutData () {
>         return customLayoutDataEClass;
>     }
> 
>     public EClass getGridLayoutData () {
>         return gridLayoutDataEClass;
>     }
> 
>     public EAttribute getGridLayoutData_GrabExcessHorizontalSpace () {
>         return (EAttribute) gridLayoutDataEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getGridLayoutData_GrabExcessVerticalSpace () {
>         return (EAttribute) gridLayoutDataEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EAttribute getGridLayoutData_VerticalAlignment () {
>         return (EAttribute) gridLayoutDataEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EAttribute getGridLayoutData_HorizontalAlignment () {
>         return (EAttribute) gridLayoutDataEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EAttribute getGridLayoutData_VerticalSpan () {
>         return (EAttribute) gridLayoutDataEClass.getEStructuralFeatures ().get (4);
>     }
> 
>     public EAttribute getGridLayoutData_HorizontalSpan () {
>         return (EAttribute) gridLayoutDataEClass.getEStructuralFeatures ().get (5);
>     }
> 
>     public EAttribute getGridLayoutData_HorizontalIndent () {
>         return (EAttribute) gridLayoutDataEClass.getEStructuralFeatures ().get (6);
>     }
> 
>     public EReference getGridLayoutData_SizeHint () {
>         return (EReference) gridLayoutDataEClass.getEStructuralFeatures ().get (7);
>     }
> 
>     public EClass getBorderLayoutData () {
>         return borderLayoutDataEClass;
>     }
> 
>     public EAttribute getBorderLayoutData_Alignment () {
>         return (EAttribute) borderLayoutDataEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getBorderLayoutData_Vertical () {
>         return (EAttribute) borderLayoutDataEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EClass getLayoutable () {
>         return layoutableEClass;
>     }
> 
>     public EReference getLayoutable_LayoutData () {
>         return (EReference) layoutableEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EReference getLayoutable_Layout () {
>         return (EReference) layoutableEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EClass getLayout () {
>         return layoutEClass;
>     }
> 
>     public EClass getCustomLayout () {
>         return customLayoutEClass;
>     }
> 
>     public EClass getGridLayout () {
>         return gridLayoutEClass;
>     }
> 
>     public EAttribute getGridLayout_NumColumns () {
>         return (EAttribute) gridLayoutEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getGridLayout_EqualWidth () {
>         return (EAttribute) gridLayoutEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EReference getGridLayout_Margins () {
>         return (EReference) gridLayoutEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EReference getGridLayout_Spacing () {
>         return (EReference) gridLayoutEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EClass getBorderLayout () {
>         return borderLayoutEClass;
>     }
> 
>     public EReference getBorderLayout_Spacing () {
>         return (EReference) borderLayoutEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EClass getCustomAttribute () {
>         return customAttributeEClass;
>     }
> 
>     public EAttribute getCustomAttribute_Name () {
>         return (EAttribute) customAttributeEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getCustomAttribute_Value () {
>         return (EAttribute) customAttributeEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EAttribute getCustomAttribute_DirectAccess () {
>         return (EAttribute) customAttributeEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EAttribute getCustomAttribute_MultiStatementValue () {
>         return (EAttribute) customAttributeEClass.getEStructuralFeatures ().get (3);
>     }
> 
633a795,798
>     public EEnum getAlignment () {
>         return alignmentEEnum;
>     }
> 
685,685d849
<         createEAttribute (figureEClass, FIGURE__LAYOUT_MANAGER);
716a881,881
>         createEReference (customClassEClass, CUSTOM_CLASS__ATTRIBUTES);
752a918,949
>         layoutDataEClass = createEClass (LAYOUT_DATA);
>         createEReference (layoutDataEClass, LAYOUT_DATA__OWNER);
>         customLayoutDataEClass = createEClass (CUSTOM_LAYOUT_DATA);
>         gridLayoutDataEClass = createEClass (GRID_LAYOUT_DATA);
>         createEAttribute (gridLayoutDataEClass, GRID_LAYOUT_DATA__GRAB_EXCESS_HORIZONTAL_SPACE);
>         createEAttribute (gridLayoutDataEClass, GRID_LAYOUT_DATA__GRAB_EXCESS_VERTICAL_SPACE);
>         createEAttribute (gridLayoutDataEClass, GRID_LAYOUT_DATA__VERTICAL_ALIGNMENT);
>         createEAttribute (gridLayoutDataEClass, GRID_LAYOUT_DATA__HORIZONTAL_ALIGNMENT);
>         createEAttribute (gridLayoutDataEClass, GRID_LAYOUT_DATA__VERTICAL_SPAN);
>         createEAttribute (gridLayoutDataEClass, GRID_LAYOUT_DATA__HORIZONTAL_SPAN);
>         createEAttribute (gridLayoutDataEClass, GRID_LAYOUT_DATA__HORIZONTAL_INDENT);
>         createEReference (gridLayoutDataEClass, GRID_LAYOUT_DATA__SIZE_HINT);
>         borderLayoutDataEClass = createEClass (BORDER_LAYOUT_DATA);
>         createEAttribute (borderLayoutDataEClass, BORDER_LAYOUT_DATA__ALIGNMENT);
>         createEAttribute (borderLayoutDataEClass, BORDER_LAYOUT_DATA__VERTICAL);
>         layoutableEClass = createEClass (LAYOUTABLE);
>         createEReference (layoutableEClass, LAYOUTABLE__LAYOUT_DATA);
>         createEReference (layoutableEClass, LAYOUTABLE__LAYOUT);
>         layoutEClass = createEClass (LAYOUT);
>         customLayoutEClass = createEClass (CUSTOM_LAYOUT);
>         gridLayoutEClass = createEClass (GRID_LAYOUT);
>         createEAttribute (gridLayoutEClass, GRID_LAYOUT__NUM_COLUMNS);
>         createEAttribute (gridLayoutEClass, GRID_LAYOUT__EQUAL_WIDTH);
>         createEReference (gridLayoutEClass, GRID_LAYOUT__MARGINS);
>         createEReference (gridLayoutEClass, GRID_LAYOUT__SPACING);
>         borderLayoutEClass = createEClass (BORDER_LAYOUT);
>         createEReference (borderLayoutEClass, BORDER_LAYOUT__SPACING);
>         customAttributeEClass = createEClass (CUSTOM_ATTRIBUTE);
>         createEAttribute (customAttributeEClass, CUSTOM_ATTRIBUTE__NAME);
>         createEAttribute (customAttributeEClass, CUSTOM_ATTRIBUTE__VALUE);
>         createEAttribute (customAttributeEClass, CUSTOM_ATTRIBUTE__DIRECT_ACCESS);
>         createEAttribute (customAttributeEClass, CUSTOM_ATTRIBUTE__MULTI_STATEMENT_VALUE);
756a954,954
>         alignmentEEnum = createEEnum (ALIGNMENT);
776a975,975
>         figureMarkerEClass.getESuperTypes ().add (this.getLayoutable ());
808a1008,1015
>         customLayoutDataEClass.getESuperTypes ().add (this.getLayoutData ());
>         customLayoutDataEClass.getESuperTypes ().add (this.getCustomClass ());
>         gridLayoutDataEClass.getESuperTypes ().add (this.getLayoutData ());
>         borderLayoutDataEClass.getESuperTypes ().add (this.getLayoutData ());
>         customLayoutEClass.getESuperTypes ().add (this.getLayout ());
>         customLayoutEClass.getESuperTypes ().add (this.getCustomClass ());
>         gridLayoutEClass.getESuperTypes ().add (this.getLayout ());
>         borderLayoutEClass.getESuperTypes ().add (this.getLayout ());
850,850c1088,1088
<         initEAttribute (getFigure_LayoutManager (), ecorePackage.getEString (), "layoutManager", null, 0, 1, Figure.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getCustomClass_Attributes (), this.getCustomAttribute (), null, "attributes", null, 0, - 1, CustomClass.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
917a1125,1156
>         initEClass (layoutDataEClass, LayoutData.class, "LayoutData", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getLayoutData_Owner (), this.getLayoutable (), this.getLayoutable_LayoutData (), "owner", null, 1, 1, LayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (customLayoutDataEClass, CustomLayoutData.class, "CustomLayoutData", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEClass (gridLayoutDataEClass, GridLayoutData.class, "GridLayoutData", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getGridLayoutData_GrabExcessHorizontalSpace (), ecorePackage.getEBoolean (), "grabExcessHorizontalSpace", "false", 1, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGridLayoutData_GrabExcessVerticalSpace (), ecorePackage.getEBoolean (), "grabExcessVerticalSpace", "false", 1, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGridLayoutData_VerticalAlignment (), this.getAlignment (), "verticalAlignment", "CENTER", 1, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGridLayoutData_HorizontalAlignment (), this.getAlignment (), "horizontalAlignment", "CENTER", 1, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGridLayoutData_VerticalSpan (), ecorePackage.getEInt (), "verticalSpan", "1", 1, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGridLayoutData_HorizontalSpan (), ecorePackage.getEInt (), "horizontalSpan", "1", 1, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGridLayoutData_HorizontalIndent (), ecorePackage.getEInt (), "horizontalIndent", null, 1, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getGridLayoutData_SizeHint (), this.getDimension (), null, "sizeHint", null, 0, 1, GridLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (borderLayoutDataEClass, BorderLayoutData.class, "BorderLayoutData", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getBorderLayoutData_Alignment (), this.getAlignment (), "alignment", "CENTER", 1, 1, BorderLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getBorderLayoutData_Vertical (), ecorePackage.getEBoolean (), "vertical", "false", 0, 1, BorderLayoutData.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (layoutableEClass, Layoutable.class, "Layoutable", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getLayoutable_LayoutData (), this.getLayoutData (), this.getLayoutData_Owner (), "layoutData", "", 0, 1, Layoutable.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getLayoutable_Layout (), this.getLayout (), null, "layout", null, 0, 1, Layoutable.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (layoutEClass, Layout.class, "Layout", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEClass (customLayoutEClass, CustomLayout.class, "CustomLayout", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEClass (gridLayoutEClass, GridLayout.class, "GridLayout", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getGridLayout_NumColumns (), ecorePackage.getEInt (), "numColumns", "1", 1, 1, GridLayout.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGridLayout_EqualWidth (), ecorePackage.getEBoolean (), "equalWidth", "true", 1, 1, GridLayout.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getGridLayout_Margins (), this.getDimension (), null, "margins", null, 0, 1, GridLayout.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getGridLayout_Spacing (), this.getDimension (), null, "spacing", null, 0, 1, GridLayout.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (borderLayoutEClass, BorderLayout.class, "BorderLayout", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getBorderLayout_Spacing (), this.getDimension (), null, "spacing", null, 0, 1, BorderLayout.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (customAttributeEClass, CustomAttribute.class, "CustomAttribute", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getCustomAttribute_Name (), ecorePackage.getEString (), "name", null, 1, 1, CustomAttribute.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getCustomAttribute_Value (), ecorePackage.getEString (), "value", "null", 1, 1, CustomAttribute.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getCustomAttribute_DirectAccess (), ecorePackage.getEBoolean (), "directAccess", "false", 1, 1, CustomAttribute.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getCustomAttribute_MultiStatementValue (), ecorePackage.getEBoolean (), "multiStatementValue", "false", 1, 1, CustomAttribute.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
956a1196,1200
>         initEEnum (alignmentEEnum, Alignment.class, "Alignment");
>         addEEnumLiteral (alignmentEEnum, Alignment.BEGINNING_LITERAL);
>         addEEnumLiteral (alignmentEEnum, Alignment.CENTER_LITERAL);
>         addEEnumLiteral (alignmentEEnum, Alignment.END_LITERAL);
>         addEEnumLiteral (alignmentEEnum, Alignment.FILL_LITERAL);
