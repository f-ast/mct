3,4d2
< import java.util.HashMap;
< 
7,8d4
< import java.util.Map;
< 
11,12d6
< import org.eclipse.core.runtime.IProgressMonitor;
< 
21,22d14
< import org.eclipse.emf.ecore.xmi.XMLResource;
< 
27,28d18
< import org.eclipse.gmf.gmfgraph.provider.GMFGraphEditPlugin;
< 
44a25,25
> import org.eclipse.gmf.internal.bridge.ui.Plugin;
45,45d24
< import org.eclipse.ui.actions.WorkspaceModifyOperation;
46,46c26,26
< 
---
> 
49a40,44
>     protected WizardOperationMode mode = new WizardOperationMode ("gmfgraph", WizardOperationMode.CREATE);
> 
>     public void setMode (String mode) {
>         this.mode.setMode (mode);
>     }
59,59c54,54
<                 saveModel (graphicalModelSelectionPage.getResource ());
---
>                 WizardUtil.saveModel (getContainer (), graphicalModelSelectionPage.getResource ());
61,61c56,56
<                 GMFGraphEditPlugin.INSTANCE.log (exception);
---
>                 Plugin.log (exception);
92,113d86
<     @SuppressWarnings("unchecked")
<     protected void saveModel (final Resource resource) throws Exception {
<         WorkspaceModifyOperation operation = new WorkspaceModifyOperation () {
< 
<             protected void execute (IProgressMonitor progressMonitor) {
<                 try {
<                     Map options = new HashMap ();
<                     options.put (XMLResource.OPTION_ENCODING, "UTF-8");
<                     resource.save (options);
<                 } catch (Exception exception) {
<                     GMFGraphEditPlugin.INSTANCE.log (exception);
<                 } finally {
<                     progressMonitor.done ();
<                 }
<             }
< 
<         }
< 
<         ;
<         getContainer ().run (false, false, operation);
<     }
< 
115a89,89
>         if (mode.detectReconcile (rloc)) {
116,117d88
<         final boolean reconcileMode = ! rloc.getSelectedURIs ("gmfgraph", true).isEmpty ();
<         if (reconcileMode) {
