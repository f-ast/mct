9,9c11,11
< import org.eclipse.draw2d.FigureUtilities;
---
> import org.eclipse.draw2d.AncestorListener;
11,11c13,13
< import org.eclipse.draw2d.IFigure;
---
> import org.eclipse.draw2d.IFigure;
13,13c51,51
< import org.eclipse.draw2d.Label;
---
> import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
36a43,43
> import org.eclipse.gmf.runtime.diagram.ui.label.ILabelDelegate;
37,37d42
< import org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart;
38,38c44,44
< 
---
> 
49,49c47,47
< import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
---
> import org.eclipse.gmf.runtime.draw2d.ui.figures.FigureUtilities;
49a48,48
> 
69,69c9,9
< import org.eclipse.jface.util.Assert;
---
> import org.eclipse.core.runtime.Assert;
70,70d9
< 
80a85,85
> import org.eclipse.swt.widgets.Composite;
81,81d84
< import org.eclipse.swt.graphics.Image;
82,82c86,86
< 
---
> 
107,108d106
< import com.ibm.icu.util.StringTokenizer;
< 
119a118,119
>     private AncestorListener textFigureListener;
>     private Class editorType;
120,122d117
<     private CellEditorLocator locator;
<     static private class TextCellEditorLocator implements CellEditorLocator {
<         private WrapLabel wrapLabel;
124,126d120
<         public TextCellEditorLocator (WrapLabel wrapLabel) {
<             super ();
<             this.wrapLabel = wrapLabel;
129,130d124
<         public WrapLabel getWrapLabel () {
<             return wrapLabel;
132a130,134
>     public static CellEditorLocator getTextCellEditorLocator (final ITextAwareEditPart source) {
>         final ILabelDelegate label = (ILabelDelegate) source.getAdapter (ILabelDelegate.class);
>         if (label != null) {
>             return new CellEditorLocator () {
> 
134a137,145
>                     Rectangle rect = label.getTextBounds ().getCopy ();
>                     if (label.getText ().length () <= 0) {
>                         rect.setSize (new Dimension (text.computeSize (SWT.DEFAULT, SWT.DEFAULT)));
>                         if (label.isTextWrapOn ()) {
>                             if (label.getTextJustification () == PositionConstants.RIGHT) {
>                                 rect.translate (- rect.width, 0);
>                             } else if (label.getTextJustification () == PositionConstants.CENTER) {
>                                 rect.translate (- rect.width / 2, 0);
>                             }
135,135d170
<             WrapLabel fig = getWrapLabel ();
136,136c171,171
<             Rectangle rect = fig.getTextBounds ().getCopy ();
---
>                 Rectangle rect = source.getFigure ().getBounds ().getCopy ();
136a172,172
>                 source.getFigure ().translateToAbsolute (rect);
137,142d171
<             fig.translateToAbsolute (rect);
<             int avrWidth = FigureUtilities.getFontMetrics (text.getFont ()).getAverageCharWidth ();
<             if (fig.isTextWrapped () && fig.getText ().length () > 0) rect.setSize (new Dimension (rect.width, rect.height + FigureUtilities.getFontMetrics (text.getFont ()).getDescent ()));
<             else rect.setSize (new Dimension (text.computeSize (SWT.DEFAULT, SWT.DEFAULT)).expand (avrWidth * 2, 0));
< 
<             org.eclipse.swt.graphics.Rectangle newRect = text.computeTrim (rect.x, rect.y, rect.width, rect.height);
143,143c173,173
<             Rectangle textBounds = new Rectangle (text.getBounds ());
---
>                 if (! rect.equals (new Rectangle (text.getBounds ()))) {
144,147d173
<             if (! newRect.equals (textBounds)) {
<                 if (! (fig.getTextWrapAlignment () == PositionConstants.LEFT || fig.getTextAlignment () == PositionConstants.LEFT)) text.setBounds (newRect.x, newRect.y, newRect.width + avrWidth * 3, newRect.height);
<                 else {
<                     if (text.getBounds ().x == 0 || Math.abs (text.getBounds ().x - newRect.x) >= avrWidth) text.setBounds (newRect.x, newRect.y, newRect.width + avrWidth * 3, newRect.height);
148,148c174,174
<                     else text.setBounds (text.getBounds ().x, newRect.y, newRect.width + avrWidth * 3, newRect.height);
---
>                     text.setBounds (rect.x, rect.y, rect.width, rect.height);
152a165,165
>             ;
153,153d164
< 
156,160d162
<     private static class LabelCellEditorLocator implements CellEditorLocator {
<         private Label label;
< 
<         public LabelCellEditorLocator (Label label) {
<             this.label = label;
163,164d164
<         public Label getLabel () {
<             return label;
165a167,167
>         return new CellEditorLocator () {
168a149,156
>                     if (label.isTextWrapOn ()) {
>                         int charHeight = FigureUtilities.getFontMetrics (text.getFont ()).getHeight ();
>                         rect.resize (0, charHeight / 2);
>                     } else {
>                         rect.setSize (new Dimension (text.computeSize (SWT.DEFAULT, SWT.DEFAULT)));
>                         int avr = FigureUtilities.getFontMetrics (text.getFont ()).getAverageCharWidth ();
>                         rect.setSize (new Dimension (text.computeSize (SWT.DEFAULT, SWT.DEFAULT)).expand (avr * 2, 0));
>                     }
169,172d148
<             Rectangle rect = getLabel ().getTextBounds ().getCopy ();
<             getLabel ().translateToAbsolute (rect);
<             int avr = FigureUtilities.getFontMetrics (text.getFont ()).getAverageCharWidth ();
<             rect.setSize (new Dimension (text.computeSize (SWT.DEFAULT, SWT.DEFAULT)).expand (avr * 2, 0));
173,173c157,157
<             org.eclipse.swt.graphics.Rectangle newRect = text.computeTrim (rect.x, rect.y, rect.width, rect.height);
---
>                     org.eclipse.swt.graphics.Rectangle newRect = text.computeTrim (rect.x, rect.y, rect.width, rect.height);
173a158,158
>                     if (! newRect.equals (text.getBounds ())) {
174,174c159,159
<             if (! newRect.equals (new Rectangle (text.getBounds ()))) text.setBounds (newRect.x, newRect.y, newRect.width, newRect.height);
---
>                         text.setBounds (newRect.x, newRect.y, newRect.width, newRect.height);
175,177d159
< 
<         }
< 
179,179d120
< 
180,180c121,121
<     public TextDirectEditManager (ITextAwareEditPart source) {
---
>     public TextDirectEditManager (ITextAwareEditPart source) {
181,181c122,122
<         this (source, getTextCellEditorClass (source), getTextCellEditorLocator (source));
---
>         this (source, null, getTextCellEditorLocator (source));
184,184c125,125
<     public TextDirectEditManager (GraphicalEditPart source, Class editorType, CellEditorLocator locator) {
---
>     public TextDirectEditManager (GraphicalEditPart source, Class editorType, CellEditorLocator locator) {
185,185c126,126
<         super (source, editorType, locator);
---
>         super (source, editorType, locator);
186,186c127,127
<         this.locator = locator;
---
>         this.editorType = editorType;
188a180,180
>         ;
189,195d179
<     public static CellEditorLocator getTextCellEditorLocator (ITextAwareEditPart source) {
<         if (source instanceof TextCompartmentEditPart) return new TextCellEditorLocator (((TextCompartmentEditPart) source).getLabel ());
<         else {
<             IFigure figure = source.getFigure ();
<             assert figure instanceof Label;
<             return new LabelCellEditorLocator ((Label) figure);
<         }
204a190,215
>     protected CellEditor createCellEditorOn (Composite composite) {
>         if (editorType != null) {
>             return super.createCellEditorOn (composite);
>         }
>         ILabelDelegate label = (ILabelDelegate) getEditPart ().getAdapter (ILabelDelegate.class);
>         if (label != null && label.isTextWrapOn ()) {
>             int style = SWT.WRAP | SWT.MULTI;
>             switch (label.getTextJustification ()) {
>                 case PositionConstants.LEFT :
>                     style = style | SWT.LEAD;
>                     break;
>                 case PositionConstants.RIGHT :
>                     style = style | SWT.TRAIL;
>                     break;
>                 case PositionConstants.CENTER :
>                     style = style | SWT.CENTER;
>                     break;
>                 default :
>                     break;
>             }
>             return new WrapTextCellEditor (composite, style);
>         } else {
>             return new TextCellEditorEx (composite);
>         }
>     }
> 
351,362d361
<     private Dimension getTextExtents (String s, Font font, IMapMode mm) {
<         Dimension d = FigureUtilities.getTextExtents (s, font);
<         int lineCount = getLineCount (s);
<         d.height = FigureUtilities.getFontMetrics (font).getHeight () * lineCount;
<         return new Dimension (mm.DPtoLP (d.width), mm.DPtoLP (d.height));
<     }
< 
<     private int getLineCount (String s) {
<         StringTokenizer tokenizer = new StringTokenizer (s, "\n");
<         return tokenizer.countTokens ();
<     }
< 
369,369c368,368
<         locator.relocate (getCellEditor ());
---
>         getLocator ().relocate (getCellEditor ());
374,426d372
<         Rectangle iconBounds;
<         Image icon;
<         int textPlacement;
<         String subStringText;
<         String text;
<         IFigure fig = getEditPart ().getFigure ();
<         if (fig instanceof WrapLabel) {
<             WrapLabel label = (WrapLabel) fig;
<             iconBounds = label.getIconBounds ().getCopy ();
<             icon = label.getIcon ();
<             textPlacement = label.getTextPlacement ();
<             subStringText = label.getSubStringText ();
<             text = label.getText ();
<         } else if (fig instanceof Label) {
<             Label label = (Label) fig;
<             iconBounds = label.getIconBounds ().getCopy ();
<             icon = label.getIcon ();
<             textPlacement = label.getTextPlacement ();
<             subStringText = label.getSubStringText ();
<             text = label.getText ();
<         } else {
<             sendClickToCellEditor (location);
<             return;
<         }
< 
<         Text textControl = (Text) getCellEditor ().getControl ();
<         Rectangle restoreRect = fig.getBounds ().getCopy ();
<         Rectangle rect = fig.getBounds ();
<         fig.translateToAbsolute (rect);
<         if (! rect.contains (new org.eclipse.draw2d.geometry.Point (location.x, location.y))) {
<             textControl.setSelection (0, textControl.getText ().length ());
<             fig.setBounds (restoreRect);
<             return;
<         }
<         fig.translateToAbsolute (iconBounds);
<         double avrLines = fig.getBounds ().height / (double) FigureUtilities.getFontMetrics (this.zoomLevelFont).getHeight ();
<         int xWidth = location.x - rect.x;
<         if (icon != null && textPlacement == PositionConstants.EAST) xWidth -= iconBounds.width;
< 
<         double yPercentage = (location.y - rect.y) / (double) rect.height;
<         int lineNum = (int) Math.ceil (avrLines * yPercentage);
<         int charCount = 0;
<         StringTokenizer tokenizer = new StringTokenizer (subStringText, "\n");
<         for (int lineCount = 1;
<         lineCount < lineNum; lineCount ++) {
<             if (tokenizer.hasMoreTokens ()) {
<                 charCount += tokenizer.nextToken ().length ();
<                 if (charCount >= text.length ()) break;
< 
<                 String newLineCheck = text.substring (charCount, charCount + 1);
<                 if (newLineCheck.equals ("\r") || newLineCheck.equals ("\n")) charCount ++;
< 
<             } else {
428,448d373
<                 fig.setBounds (restoreRect);
<                 return;
<             }
<         }
<         if (tokenizer.hasMoreTokens ()) {
<             String currentLineText = tokenizer.nextToken ();
<             IMapMode mm = MapModeUtil.getMapMode (fig);
<             for (int i = 1;
<             i <= currentLineText.length (); i ++) {
<                 Dimension textExtent = getTextExtents (currentLineText.substring (0, i), this.zoomLevelFont, mm);
<                 fig.translateToAbsolute (textExtent);
<                 charCount ++;
<                 if (textExtent.width >= xWidth) break;
< 
<             }
<             textControl.setSelection (charCount);
<             fig.setBounds (restoreRect);
<         } else {
<             sendClickToCellEditor (location);
<             fig.setBounds (restoreRect);
<         }
477a403,418
>     protected void hookListeners () {
>         super.hookListeners ();
>         ILabelDelegate label = (ILabelDelegate) getEditPart ().getAdapter (ILabelDelegate.class);
>         if (label != null && getEditPart ().getFigure () instanceof WrappingLabel) {
>             textFigureListener = new AncestorListener.Stub () {
> 
>                 public void ancestorMoved (IFigure ancestor) {
>                     getLocator ().relocate (getCellEditor ());
>                 }
> 
>             };
> 
>             ((IFigure) ((WrappingLabel) getEditPart ().getFigure ()).getTextFigure ().getChildren ().get (0)).addAncestorListener (textFigureListener);
>         }
>     }
> 
481a423,427
>             ILabelDelegate label = (ILabelDelegate) getEditPart ().getAdapter (ILabelDelegate.class);
>             if (label != null && textFigureListener != null) {
>                 ((IFigure) ((WrappingLabel) getEditPart ().getFigure ()).getTextFigure ().getChildren ().get (0)).removeAncestorListener (textFigureListener);
>                 textFigureListener = null;
>             }
526,530d471
<     public void setLocator (CellEditorLocator locator) {
<         super.setLocator (locator);
<         this.locator = locator;
<     }
< 
