2a3,4
> import java.util.Collection;
> 
4a7,10
> import org.eclipse.emf.common.notify.NotificationChain;
> 
> import org.eclipse.emf.common.util.EList;
> 
10a17,20
> import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
> 
> import org.eclipse.emf.ecore.util.InternalEList;
> 
12a23,28
> import org.eclipse.gmf.mappings.AppearanceSteward;
> 
> import org.eclipse.gmf.mappings.ChildReference;
> 
> import org.eclipse.gmf.mappings.CompartmentMapping;
> 
14a31,32
> import org.eclipse.gmf.mappings.MenuOwner;
> 
16a35,46
> import org.eclipse.gmf.mappings.ToolOwner;
> 
> import org.eclipse.gmf.tooldef.AbstractTool;
> 
> import org.eclipse.gmf.tooldef.ContextMenu;
> 
> import org.eclipse.gmf.tooldef.StyleSelector;
> 
> public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
>     protected ContextMenu contextMenu = null;
>     protected AbstractTool tool = null;
>     protected StyleSelector appearanceStyle = null;
17,17d34
< public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
18a48,49
>     protected EList children = null;
>     protected EList compartments = null;
27a59,127
>     public ContextMenu getContextMenu () {
>         if (contextMenu != null && contextMenu.eIsProxy ()) {
>             InternalEObject oldContextMenu = (InternalEObject) contextMenu;
>             contextMenu = (ContextMenu) eResolveProxy (oldContextMenu);
>             if (contextMenu != oldContextMenu) {
>                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__CONTEXT_MENU, oldContextMenu, contextMenu));
> 
>             }
>         }
>         return contextMenu;
>     }
> 
>     public ContextMenu basicGetContextMenu () {
>         return contextMenu;
>     }
> 
>     public void setContextMenu (ContextMenu newContextMenu) {
>         ContextMenu oldContextMenu = contextMenu;
>         contextMenu = newContextMenu;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__CONTEXT_MENU, oldContextMenu, contextMenu));
> 
>     }
> 
>     public AbstractTool getTool () {
>         if (tool != null && tool.eIsProxy ()) {
>             InternalEObject oldTool = (InternalEObject) tool;
>             tool = (AbstractTool) eResolveProxy (oldTool);
>             if (tool != oldTool) {
>                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__TOOL, oldTool, tool));
> 
>             }
>         }
>         return tool;
>     }
> 
>     public AbstractTool basicGetTool () {
>         return tool;
>     }
> 
>     public void setTool (AbstractTool newTool) {
>         AbstractTool oldTool = tool;
>         tool = newTool;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__TOOL, oldTool, tool));
> 
>     }
> 
>     public StyleSelector getAppearanceStyle () {
>         if (appearanceStyle != null && appearanceStyle.eIsProxy ()) {
>             InternalEObject oldAppearanceStyle = (InternalEObject) appearanceStyle;
>             appearanceStyle = (StyleSelector) eResolveProxy (oldAppearanceStyle);
>             if (appearanceStyle != oldAppearanceStyle) {
>                 if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE, oldAppearanceStyle, appearanceStyle));
> 
>             }
>         }
>         return appearanceStyle;
>     }
> 
>     public StyleSelector basicGetAppearanceStyle () {
>         return appearanceStyle;
>     }
> 
>     public void setAppearanceStyle (StyleSelector newAppearanceStyle) {
>         StyleSelector oldAppearanceStyle = appearanceStyle;
>         appearanceStyle = newAppearanceStyle;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE, oldAppearanceStyle, appearanceStyle));
> 
>     }
> 
50a151,184
>     public EList getChildren () {
>         if (children == null) {
>             children = new EObjectContainmentWithInverseEList (ChildReference.class, this, GMFMapPackage.NODE_MAPPING__CHILDREN, GMFMapPackage.CHILD_REFERENCE__PARENT_NODE);
>         }
>         return children;
>     }
> 
>     public EList getCompartments () {
>         if (compartments == null) {
>             compartments = new EObjectContainmentWithInverseEList (CompartmentMapping.class, this, GMFMapPackage.NODE_MAPPING__COMPARTMENTS, GMFMapPackage.COMPARTMENT_MAPPING__PARENT_NODE);
>         }
>         return compartments;
>     }
> 
>     public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
>             case GMFMapPackage.NODE_MAPPING__CHILDREN :
>                 return ((InternalEList) getChildren ()).basicAdd (otherEnd, msgs);
>             case GMFMapPackage.NODE_MAPPING__COMPARTMENTS :
>                 return ((InternalEList) getCompartments ()).basicAdd (otherEnd, msgs);
>         }
>         return super.eInverseAdd (otherEnd, featureID, msgs);
>     }
> 
>     public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
>             case GMFMapPackage.NODE_MAPPING__CHILDREN :
>                 return ((InternalEList) getChildren ()).basicRemove (otherEnd, msgs);
>             case GMFMapPackage.NODE_MAPPING__COMPARTMENTS :
>                 return ((InternalEList) getCompartments ()).basicRemove (otherEnd, msgs);
>         }
>         return super.eInverseRemove (otherEnd, featureID, msgs);
>     }
> 
52a187,198
>             case GMFMapPackage.NODE_MAPPING__CONTEXT_MENU :
>                 if (resolve) return getContextMenu ();
> 
>                 return basicGetContextMenu ();
>             case GMFMapPackage.NODE_MAPPING__TOOL :
>                 if (resolve) return getTool ();
> 
>                 return basicGetTool ();
>             case GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE :
>                 if (resolve) return getAppearanceStyle ();
> 
>                 return basicGetAppearanceStyle ();
56a203,206
>             case GMFMapPackage.NODE_MAPPING__CHILDREN :
>                 return getChildren ();
>             case GMFMapPackage.NODE_MAPPING__COMPARTMENTS :
>                 return getCompartments ();
62a213,221
>             case GMFMapPackage.NODE_MAPPING__CONTEXT_MENU :
>                 setContextMenu ((ContextMenu) newValue);
>                 return;
>             case GMFMapPackage.NODE_MAPPING__TOOL :
>                 setTool ((AbstractTool) newValue);
>                 return;
>             case GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE :
>                 setAppearanceStyle ((StyleSelector) newValue);
>                 return;
65a225,232
>             case GMFMapPackage.NODE_MAPPING__CHILDREN :
>                 getChildren ().clear ();
>                 getChildren ().addAll ((Collection) newValue);
>                 return;
>             case GMFMapPackage.NODE_MAPPING__COMPARTMENTS :
>                 getCompartments ().clear ();
>                 getCompartments ().addAll ((Collection) newValue);
>                 return;
71a239,247
>             case GMFMapPackage.NODE_MAPPING__CONTEXT_MENU :
>                 setContextMenu ((ContextMenu) null);
>                 return;
>             case GMFMapPackage.NODE_MAPPING__TOOL :
>                 setTool ((AbstractTool) null);
>                 return;
>             case GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE :
>                 setAppearanceStyle ((StyleSelector) null);
>                 return;
74a251,256
>             case GMFMapPackage.NODE_MAPPING__CHILDREN :
>                 getChildren ().clear ();
>                 return;
>             case GMFMapPackage.NODE_MAPPING__COMPARTMENTS :
>                 getCompartments ().clear ();
>                 return;
80a263,268
>             case GMFMapPackage.NODE_MAPPING__CONTEXT_MENU :
>                 return contextMenu != null;
>             case GMFMapPackage.NODE_MAPPING__TOOL :
>                 return tool != null;
>             case GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE :
>                 return appearanceStyle != null;
82a271,274
>             case GMFMapPackage.NODE_MAPPING__CHILDREN :
>                 return children != null && ! children.isEmpty ();
>             case GMFMapPackage.NODE_MAPPING__COMPARTMENTS :
>                 return compartments != null && ! compartments.isEmpty ();
86a279,338
>     public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass) {
>         if (baseClass == MenuOwner.class) {
>             switch (derivedFeatureID) {
>                 case GMFMapPackage.NODE_MAPPING__CONTEXT_MENU :
>                     return GMFMapPackage.MENU_OWNER__CONTEXT_MENU;
>                 default :
>                     return - 1;
>             }
>         }
>         if (baseClass == ToolOwner.class) {
>             switch (derivedFeatureID) {
>                 case GMFMapPackage.NODE_MAPPING__TOOL :
>                     return GMFMapPackage.TOOL_OWNER__TOOL;
>                 default :
>                     return - 1;
>             }
>         }
>         if (baseClass == AppearanceSteward.class) {
>             switch (derivedFeatureID) {
>                 case GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE :
>                     return GMFMapPackage.APPEARANCE_STEWARD__APPEARANCE_STYLE;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
>     }
> 
>     public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass) {
>         if (baseClass == MenuOwner.class) {
>             switch (baseFeatureID) {
>                 case GMFMapPackage.MENU_OWNER__CONTEXT_MENU :
>                     return GMFMapPackage.NODE_MAPPING__CONTEXT_MENU;
>                 default :
>                     return - 1;
>             }
>         }
>         if (baseClass == ToolOwner.class) {
>             switch (baseFeatureID) {
>                 case GMFMapPackage.TOOL_OWNER__TOOL :
>                     return GMFMapPackage.NODE_MAPPING__TOOL;
>                 default :
>                     return - 1;
>             }
>         }
>         if (baseClass == AppearanceSteward.class) {
>             switch (baseFeatureID) {
>                 case GMFMapPackage.APPEARANCE_STEWARD__APPEARANCE_STYLE :
>                     return GMFMapPackage.NODE_MAPPING__APPEARANCE_STYLE;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
>     }
> 
>     public EClass getDomainContext () {
>         return getDomainMetaElement ();
>     }
> 
