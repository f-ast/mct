4a5,6
> import java.util.List;
> 
24a27,30
> import org.eclipse.emf.transaction.impl.InternalTransaction;
> 
> import org.eclipse.emf.transaction.impl.InternalTransactionalEditingDomain;
> 
55a69,74
>         List styles = createStyles (node);
>         if (styles.size () > 0) {
>             node.getStyles ().addAll (styles);
>         }
>         LayoutConstraint layoutConstraint = createLayoutConstraint ();
>         if (layoutConstraint != null) {
56,56d68
<         node.getStyles ().addAll (createStyles (node));
57,57c75,75
<         node.setLayoutConstraint (createLayoutConstraint ());
---
>             node.setLayoutConstraint (layoutConstraint);
57a76,76
>         }
65a58,60
>     private static final Map options = new HashMap ();
> 
>     static {
66,66d57
<         Map options = new HashMap ();
67,67c61,61
<         options.put (Transaction.OPTION_UNPROTECTED, Boolean.TRUE);
---
>         options.put (Transaction.OPTION_UNPROTECTED, Boolean.TRUE);
68,68c62,62
<         options.put (Transaction.OPTION_NO_NOTIFICATIONS, Boolean.TRUE);
---
>         options.put (Transaction.OPTION_NO_NOTIFICATIONS, Boolean.TRUE);
69,69c63,63
<         options.put (Transaction.OPTION_NO_TRIGGERS, Boolean.TRUE);
---
>         options.put (Transaction.OPTION_NO_TRIGGERS, Boolean.TRUE);
69a64,64
>     }
71a87,89
>             if (isUnProtectedSilentTransactionInProgress (domain)) {
>                 decorateView (containerView, node, semanticAdapter, semanticHint, index, true);
>             } else {
88a107,107
>         }
103a123,140
>     protected static boolean isUnProtectedSilentTransactionInProgress (TransactionalEditingDomain domain) {
>         if (domain instanceof InternalTransactionalEditingDomain) {
>             InternalTransactionalEditingDomain internalEditingDomain = (InternalTransactionalEditingDomain) domain;
>             InternalTransaction transaction = internalEditingDomain.getActiveTransaction ();
>             if (transaction != null && ! transaction.isReadOnly ()) {
>                 Object unprotectedMode = transaction.getOptions ().get (Transaction.OPTION_UNPROTECTED);
>                 if (unprotectedMode != null && unprotectedMode == Boolean.TRUE) {
>                     Object noNotificationMode = transaction.getOptions ().get (Transaction.OPTION_NO_NOTIFICATIONS);
>                     Object noTriggersMode = transaction.getOptions ().get (Transaction.OPTION_NO_TRIGGERS);
>                     if (unprotectedMode != null && noNotificationMode == Boolean.TRUE && noTriggersMode != null && noTriggersMode == Boolean.TRUE) {
>                         return true;
>                     }
>                 }
>             }
>         }
>         return false;
>     }
> 
