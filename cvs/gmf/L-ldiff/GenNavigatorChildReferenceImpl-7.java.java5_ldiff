2a3,8
> import java.util.ArrayList;
> 
> import java.util.Collection;
> 
> import java.util.List;
> 
4a11,16
> import org.eclipse.emf.common.notify.NotificationChain;
> 
> import org.eclipse.emf.common.util.EList;
> 
> import org.eclipse.emf.common.util.BasicEList.UnmodifiableEList;
> 
12a25,26
> import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
> 
16a31,32
> import org.eclipse.gmf.codegen.gmfgen.GenNavigator;
> 
18a35,38
> import org.eclipse.gmf.codegen.gmfgen.GenNavigatorPath;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenNavigatorPathSegment;
> 
20a41,42
> import org.eclipse.gmf.codegen.util.GenModelGraphAnalyzer;
> 
40a63,68
>     public GenNavigator getNavigator () {
>         if (eContainerFeatureID != GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR) return null;
> 
>         return (GenNavigator) eContainer ();
>     }
> 
148a177,218
>     public EList findConnectionPaths () {
>         Collection < GenNavigatorPath > result = new ArrayList < GenNavigatorPath > ();
>         for (List < GenCommonBase > nextPath : GenModelGraphAnalyzer.getConnectionPaths (this)) {
>             GenNavigatorPath navigatorPath = GMFGenFactory.eINSTANCE.createGenNavigatorPath ();
>             for (int i = 0;
>             i < nextPath.size () - 1;) {
>                 GenNavigatorPathSegment nextSegment = GMFGenFactory.eINSTANCE.createGenNavigatorPathSegment ();
>                 nextSegment.setFrom (nextPath.get (i));
>                 nextSegment.setTo (nextPath.get (++ i));
>                 navigatorPath.getSegments ().add (nextSegment);
>             }
>             result.add (navigatorPath);
>         }
>         return new UnmodifiableEList (result.size (), result.toArray ());
>     }
> 
>     public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
>             case GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR :
>                 if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>                 return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR, msgs);
>         }
>         return super.eInverseAdd (otherEnd, featureID, msgs);
>     }
> 
>     public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
>         switch (featureID) {
>             case GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR :
>                 return eBasicSetContainer (null, GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR, msgs);
>         }
>         return super.eInverseRemove (otherEnd, featureID, msgs);
>     }
> 
>     public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
>         switch (eContainerFeatureID) {
>             case GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR :
>                 return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_NAVIGATOR__CHILD_REFERENCES, GenNavigator.class, msgs);
>         }
>         return super.eBasicRemoveFromContainerFeature (msgs);
>     }
> 
150a221,222
>             case GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR :
>                 return getNavigator ();
220a293,294
>             case GMFGenPackage.GEN_NAVIGATOR_CHILD_REFERENCE__NAVIGATOR :
>                 return getNavigator () != null;
