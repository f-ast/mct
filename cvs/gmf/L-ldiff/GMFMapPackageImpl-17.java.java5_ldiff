6a7,8
> import org.eclipse.emf.ecore.EEnum;
> 
14a19,19
> import org.eclipse.gmf.mappings.AuditContainer;
15,15d18
< import org.eclipse.gmf.gmfgraph.impl.GMFGraphPackageImpl;
16,16c20,20
< 
---
> 
16a21,22
> import org.eclipse.gmf.mappings.AuditRule;
> 
50a55,56
> import org.eclipse.gmf.mappings.Severity;
> 
75a82,84
>     private EClass auditContainerEClass = null;
>     private EClass auditRuleEClass = null;
>     private EEnum severityEEnum = null;
87a97,97
>         GMFGraphPackage.eINSTANCE.eClass ();
88,88d96
<         GMFGraphPackageImpl.init ();
258a268,271
>     public EReference getMapping_Audits () {
>         return (EReference) mappingEClass.getEStructuralFeatures ().get (4);
>     }
> 
338a352,423
>     public EClass getAuditContainer () {
>         return auditContainerEClass;
>     }
> 
>     public EAttribute getAuditContainer_Id () {
>         return (EAttribute) auditContainerEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getAuditContainer_Name () {
>         return (EAttribute) auditContainerEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EAttribute getAuditContainer_Description () {
>         return (EAttribute) auditContainerEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EReference getAuditContainer_ParentContainer () {
>         return (EReference) auditContainerEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EReference getAuditContainer_Audits () {
>         return (EReference) auditContainerEClass.getEStructuralFeatures ().get (4);
>     }
> 
>     public EReference getAuditContainer_ChildContainers () {
>         return (EReference) auditContainerEClass.getEStructuralFeatures ().get (5);
>     }
> 
>     public EClass getAuditRule () {
>         return auditRuleEClass;
>     }
> 
>     public EAttribute getAuditRule_Id () {
>         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EReference getAuditRule_Rule () {
>         return (EReference) auditRuleEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EReference getAuditRule_Target () {
>         return (EReference) auditRuleEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EAttribute getAuditRule_Name () {
>         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EAttribute getAuditRule_Severity () {
>         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (4);
>     }
> 
>     public EAttribute getAuditRule_UseInLiveMode () {
>         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (5);
>     }
> 
>     public EAttribute getAuditRule_Message () {
>         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (6);
>     }
> 
>     public EAttribute getAuditRule_Description () {
>         return (EAttribute) auditRuleEClass.getEStructuralFeatures ().get (7);
>     }
> 
>     public EReference getAuditRule_Container () {
>         return (EReference) auditRuleEClass.getEStructuralFeatures ().get (8);
>     }
> 
>     public EEnum getSeverity () {
>         return severityEEnum;
>     }
> 
389a475,475
>         createEReference (mappingEClass, MAPPING__AUDITS);
409a496,513
>         auditContainerEClass = createEClass (AUDIT_CONTAINER);
>         createEAttribute (auditContainerEClass, AUDIT_CONTAINER__ID);
>         createEAttribute (auditContainerEClass, AUDIT_CONTAINER__NAME);
>         createEAttribute (auditContainerEClass, AUDIT_CONTAINER__DESCRIPTION);
>         createEReference (auditContainerEClass, AUDIT_CONTAINER__PARENT_CONTAINER);
>         createEReference (auditContainerEClass, AUDIT_CONTAINER__AUDITS);
>         createEReference (auditContainerEClass, AUDIT_CONTAINER__CHILD_CONTAINERS);
>         auditRuleEClass = createEClass (AUDIT_RULE);
>         createEAttribute (auditRuleEClass, AUDIT_RULE__ID);
>         createEReference (auditRuleEClass, AUDIT_RULE__RULE);
>         createEReference (auditRuleEClass, AUDIT_RULE__TARGET);
>         createEAttribute (auditRuleEClass, AUDIT_RULE__NAME);
>         createEAttribute (auditRuleEClass, AUDIT_RULE__SEVERITY);
>         createEAttribute (auditRuleEClass, AUDIT_RULE__USE_IN_LIVE_MODE);
>         createEAttribute (auditRuleEClass, AUDIT_RULE__MESSAGE);
>         createEAttribute (auditRuleEClass, AUDIT_RULE__DESCRIPTION);
>         createEReference (auditRuleEClass, AUDIT_RULE__CONTAINER);
>         severityEEnum = createEEnum (SEVERITY);
421,421c525,525
<         GMFGraphPackageImpl theGMFGraphPackage = (GMFGraphPackageImpl) EPackage.Registry.INSTANCE.getEPackage (GMFGraphPackage.eNS_URI);
---
>         GMFGraphPackage theGMFGraphPackage = (GMFGraphPackage) EPackage.Registry.INSTANCE.getEPackage (GMFGraphPackage.eNS_URI);
441,441c545,545
<         addEOperation (abstractNodeMappingEClass, ecorePackage.getEClass (), "getDomainMetaClass");
---
>         addEOperation (abstractNodeMappingEClass, ecorePackage.getEClass (), "getDomainMetaClass", 0, 1);
465,465c569,569
<         addEOperation (linkMappingEClass, ecorePackage.getEClass (), "getDomainMetaClass");
---
>         addEOperation (linkMappingEClass, ecorePackage.getEClass (), "getDomainMetaClass", 0, 1);
474a579,579
>         initEReference (getMapping_Audits (), this.getAuditContainer (), null, "audits", null, 0, 1, Mapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
494a600,620
>         initEClass (auditContainerEClass, AuditContainer.class, "AuditContainer", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getAuditContainer_Id (), ecorePackage.getEString (), "id", null, 1, 1, AuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getAuditContainer_Name (), ecorePackage.getEString (), "name", null, 0, 1, AuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getAuditContainer_Description (), ecorePackage.getEString (), "description", null, 0, 1, AuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getAuditContainer_ParentContainer (), this.getAuditContainer (), this.getAuditContainer_ChildContainers (), "parentContainer", null, 0, 1, AuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getAuditContainer_Audits (), this.getAuditRule (), this.getAuditRule_Container (), "audits", null, 0, - 1, AuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getAuditContainer_ChildContainers (), this.getAuditContainer (), this.getAuditContainer_ParentContainer (), "childContainers", null, 0, - 1, AuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (auditRuleEClass, AuditRule.class, "AuditRule", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getAuditRule_Id (), ecorePackage.getEString (), "id", null, 1, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getAuditRule_Rule (), this.getConstraint (), null, "rule", null, 1, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getAuditRule_Target (), ecorePackage.getEClass (), null, "target", null, 1, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getAuditRule_Name (), ecorePackage.getEString (), "name", null, 0, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getAuditRule_Severity (), this.getSeverity (), "severity", "ERROR", 0, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getAuditRule_UseInLiveMode (), ecorePackage.getEBoolean (), "useInLiveMode", "false", 0, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getAuditRule_Message (), ecorePackage.getEString (), "message", null, 0, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getAuditRule_Description (), ecorePackage.getEString (), "description", null, 0, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getAuditRule_Container (), this.getAuditContainer (), this.getAuditContainer_Audits (), "container", null, 1, 1, AuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEEnum (severityEEnum, Severity.class, "Severity");
>         addEEnumLiteral (severityEEnum, Severity.INFO_LITERAL);
>         addEEnumLiteral (severityEEnum, Severity.WARNING_LITERAL);
>         addEEnumLiteral (severityEEnum, Severity.ERROR_LITERAL);
521a648,648
>         addAnnotation (getAuditRule_Rule (), source, new String [] {"def", "context", "ocl", "target"});
