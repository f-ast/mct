6a7,8
> import org.eclipse.emf.common.util.BasicEList;
> 
14a17,18
> import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
> 
22,22c26,26
<     protected EList genNodes = null;
---
>     protected EList < GenNode > genNodes = null;
23,23c27,27
<     protected EList genLinks = null;
---
>     protected EList < GenLink > genLinks = null;
28a33,33
>     @Override
33,33c38,38
<     public EList getGenNodes () {
---
>     public EList < GenNode > getGenNodes () {
35,35c40,40
<             genNodes = new EObjectResolvingEList (GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
---
>             genNodes = new EObjectResolvingEList < GenNode > (GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
40,40c45,45
<     public EList getGenLinks () {
---
>     public EList < GenLink > getGenLinks () {
42,42c47,47
<             genLinks = new EObjectResolvingEList (GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
---
>             genLinks = new EObjectResolvingEList < GenLink > (GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
47a53,53
>         EList < ? extends GenCommonBase > picked;
47,47c52,52
<     public EList getElements () {
---
>     public EList < GenCommonBase > getElements () {
48a55,57
>             picked = getGenLinks ();
>         } else {
>             picked = getGenNodes ();
49,49d54
<             return getGenLinks ();
50a59,59
>         return new BasicEList.UnmodifiableEList < GenCommonBase > (picked.size (), picked.toArray ());
51,51d58
<         return getGenNodes ();
53a62,62
>     @Override
65a75,76
>     @SuppressWarnings("unchecked")
>     @Override
70,70c81,81
<                 getGenNodes ().addAll ((Collection) newValue);
---
>                 getGenNodes ().addAll ((Collection < ? extends GenNode >) newValue);
74,74c85,85
<                 getGenLinks ().addAll ((Collection) newValue);
---
>                 getGenLinks ().addAll ((Collection < ? extends GenLink >) newValue);
79a91,91
>     @Override
91a104,104
>     @Override
