1,1c1,1
< package org.eclipse.gmf.mappings.impl;
---
> package org.eclipse.gmf.codegen.gmfgen.impl;
11,11c11,11
< import org.eclipse.gmf.mappings.GMFMapPackage;
---
> import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
13,13c13,13
< import org.eclipse.gmf.mappings.Language;
---
> import org.eclipse.gmf.codegen.gmfgen.GenLanguage;
15a16,17
> 
> import org.eclipse.gmf.internal.common.codegen.Conversions;
15,15c15,15
< import org.eclipse.gmf.mappings.ValueExpression;
---
> import org.eclipse.gmf.codegen.gmfgen.ValueExpression;
19a22,22
>     protected static final GenLanguage LANGUAGE_EDEFAULT = GenLanguage.OCL_LITERAL;
20,20d21
<     protected static final Language LANGUAGE_EDEFAULT = Language.OCL_LITERAL;
21,21c23,23
<     protected Language language = LANGUAGE_EDEFAULT;
---
>     protected GenLanguage language = LANGUAGE_EDEFAULT;
29,29c31,31
<         return GMFMapPackage.eINSTANCE.getValueExpression ();
---
>         return GMFGenPackage.eINSTANCE.getValueExpression ();
29a32,35
>     }
> 
>     public boolean isOCLExpression () {
>         return GenLanguage.OCL_LITERAL.equals (getLanguage ());
39,39c45,45
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.VALUE_EXPRESSION__BODY, oldBody, body));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.VALUE_EXPRESSION__BODY, oldBody, body));
43,43c49,49
<     public Language getLanguage () {
---
>     public GenLanguage getLanguage () {
47,47c53,53
<     public void setLanguage (Language newLanguage) {
---
>     public void setLanguage (GenLanguage newLanguage) {
48,48c54,54
<         Language oldLanguage = language;
---
>         GenLanguage oldLanguage = language;
50,50c56,56
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.VALUE_EXPRESSION__LANGUAGE, oldLanguage, language));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.VALUE_EXPRESSION__LANGUAGE, oldLanguage, language));
55,55c61,61
<         Language langEnum = getLanguage ();
---
>         GenLanguage langEnum = getLanguage ();
58a65,68
>     public String getBodyString () {
>         return Conversions.toStringLiteral (getBody ());
>     }
> 
61,61c71,71
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
63,63c73,73
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
65,65c75,75
<             case GMFMapPackage.VALUE_EXPRESSION__LANG_NAME :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANG_NAME :
73,73c83,83
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
76,76c86,86
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
77,77c87,87
<                 setLanguage ((Language) newValue);
---
>                 setLanguage ((GenLanguage) newValue);
85,85c95,95
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
88,88c98,98
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
97,97c107,107
<             case GMFMapPackage.VALUE_EXPRESSION__BODY :
---
>             case GMFGenPackage.VALUE_EXPRESSION__BODY :
99,99c109,109
<             case GMFMapPackage.VALUE_EXPRESSION__LANGUAGE :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANGUAGE :
101,101c111,111
<             case GMFMapPackage.VALUE_EXPRESSION__LANG_NAME :
---
>             case GMFGenPackage.VALUE_EXPRESSION__LANG_NAME :
