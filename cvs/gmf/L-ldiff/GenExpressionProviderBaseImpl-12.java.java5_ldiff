4a5,6
> import org.eclipse.emf.common.notify.Notification;
> 
12a15,16
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> 
16a21,22
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
53a60,80
>     public NotificationChain basicSetContainer (GenExpressionProviderContainer newContainer, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newContainer, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, msgs);
>         return msgs;
>     }
> 
>     public void setContainer (GenExpressionProviderContainer newContainer) {
>         if (newContainer != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER && newContainer != null)) {
>             if (EcoreUtil.isAncestor (this, newContainer)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newContainer != null) msgs = ((InternalEObject) newContainer).eInverseAdd (this, GMFGenPackage.GEN_EXPRESSION_PROVIDER_CONTAINER__PROVIDERS, GenExpressionProviderContainer.class, msgs);
> 
>             msgs = basicSetContainer (newContainer, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, newContainer, newContainer));
> 
>     }
> 
60,60c87,87
<                 return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, msgs);
---
>                 return basicSetContainer ((GenExpressionProviderContainer) otherEnd, msgs);
68a96,96
>                 return basicSetContainer (null, msgs);
69a143,144
>                 setContainer ((GenExpressionProviderContainer) null);
>                 return;
69,69c142,142
<                 return eBasicSetContainer (null, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, msgs);
---
>             case GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER :
101a129,131
>             case GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER :
>                 setContainer ((GenExpressionProviderContainer) newValue);
>                 return;
