3,10d2
< import java.util.List;
< 
< import org.eclipse.emf.common.notify.Notification;
< 
< import org.eclipse.emf.ecore.EObject;
< 
< import org.eclipse.emf.ecore.resource.Resource;
< 
13,18d4
< import org.eclipse.gmf.runtime.emf.core.edit.MFilter;
< 
< import org.eclipse.gmf.runtime.emf.core.edit.MListener;
< 
< import org.eclipse.gmf.runtime.emf.core.util.ResourceUtil;
< 
21,21c7,7
< public class DiagramDocument extends AbstractDocument implements IDiagramDocument {
---
> public final class DiagramDocument extends AbstractDocument implements IDiagramDocument {
22,22d7
<     boolean fListenerEnabled = true;
38,87d22
<     MFilter diagramResourceFilter = new MFilter () {
< 
<         public boolean matches (Notification notification) {
<             Diagram diagram = getDiagram ();
<             Object notifier = notification.getNotifier ();
<             if (diagram != null && notifier instanceof Resource) {
<                 Resource diagramResource = diagram.eResource ();
<                 Resource notifierResource = (Resource) notifier;
<                 if (notifierResource == diagramResource) {
<                     if (notification.getEventType () == Notification.SET) {
<                         Resource resource = (Resource) notifier;
<                         EObject root = ResourceUtil.getFirstRoot (resource);
<                         int featureID = notification.getFeatureID (Resource.class);
<                         if (featureID == Resource.RESOURCE__IS_MODIFIED && notification.getNewBooleanValue () != notification.getOldBooleanValue ()) {
<                             if (resource != null && root != null && root.eResource () != null && root.eResource ().equals (resource) && resource.isLoaded ()) {
<                                 if (notification.getNewBooleanValue ()) {
<                                     return true;
<                                 }
<                             }
<                         }
<                     }
<                 }
<             }
<             return false;
<         }
< 
<         ;
<     }
< 
<     ;
<     MListener diagramChangeListener = null;
< 
<     public boolean enableDiagramListener () {
<         boolean oldState = fListenerEnabled;
<         if (! oldState) {
<             diagramChangeListener.startListening ();
<         }
<         fListenerEnabled = true;
<         return oldState;
<     }
< 
<     public boolean disableDiagramListener () {
<         boolean oldState = fListenerEnabled;
<         if (oldState) {
<             diagramChangeListener.stopListening ();
<         }
<         fListenerEnabled = false;
<         return oldState;
<     }
< 
90,103d24
<         if (fListenerEnabled) {
<             if (diagramChangeListener == null) {
<                 diagramChangeListener = new MListener (diagramResourceFilter) {
< 
<                     public void onEvent (List events) {
<                         fireDocumentChanged (new DocumentEvent (DiagramDocument.this, DocumentEvent.CONTENT_MODIFIED, events));
<                     }
< 
<                 }
< 
<                 ;
<             }
<             diagramChangeListener.startListening ();
<         }
113,127d33
<         if (fDomain != domain) {
<             if (diagramChangeListener != null) diagramChangeListener.stopListening ();
< 
<             diagramChangeListener = new MListener (domain, diagramResourceFilter) {
< 
<                 public void onEvent (List events) {
<                     fireDocumentChanged (new DocumentEvent (DiagramDocument.this, DocumentEvent.CONTENT_MODIFIED, events));
<                 }
< 
<             }
< 
<             ;
<             if (fListenerEnabled) diagramChangeListener.startListening ();
< 
<         }
