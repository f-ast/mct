5,5c5,5
< import java.util.Iterator;
---
> import java.util.HashMap;
8a9,10
> import java.util.Map;
> 
24a27,28
> import org.eclipse.gmf.runtime.emf.type.core.internal.requests.RequestCacheEntries;
> 
38a43,46
>         Map cacheMaps = (Map) request.getParameter (RequestCacheEntries.Cache_Maps);
>         if (cacheMaps != null) {
>             return (List) cacheMaps.get (RequestCacheEntries.Affected_Files);
>         }
40a49,51
>         int size;
>         if (elements != null && ((size = elements.size ()) > 0)) {
>             if (size == 1) {
41,43d48
<         if (elements != null) {
<             for (Iterator i = elements.iterator ();
<             i.hasNext ();) {
44,44c52,52
<                 Resource resource = ((EObject) i.next ()).eResource ();
---
>                 Resource resource = ((EObject) elements.get (0)).eResource ();
50a59,74
>             } else {
>                 Map resourcesToFileMap = new HashMap ();
>                 for (int i = 0;
>                 i < size; ++ i) {
>                     Resource resource = ((EObject) elements.get (i)).eResource ();
>                     if (resource != null) {
>                         Object file = resourcesToFileMap.get (resource);
>                         if (file == null) {
>                             file = WorkspaceSynchronizer.getFile (resource);
>                             if (file != null) {
>                                 resourcesToFileMap.put (resource, file);
>                                 result.add (file);
>                             }
>                         }
>                     }
>                 }
