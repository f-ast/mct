949,949c949,949
<         addAnnotation (childReferenceEClass, source, new String [] {"ocl", "let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in (((child.labelMappings->size() = 1) and child.labelMappings->forAll( soleLabel: LabelMapping | soleLabel.diagramLabel = child.diagramNode)) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NSEW))", "description", "Side-affixed children can not be pure labels"});
---
>         addAnnotation (childReferenceEClass, source, new String [] {"ocl", "let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in (((child.labelMappings->size() = 1) and child.labelMappings->forAll( soleLabel: LabelMapping | soleLabel.diagramLabel = child.diagramNode)) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NONE))", "description", "Side-affixed children can not be pure labels"});
950,950c950,950
<         addAnnotation (childReferenceEClass, source, new String [] {"ocl", "let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in ((not compartment.oclIsUndefined()) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NSEW))", "description", "Side-affixed children can not be placed in compartments"});
---
>         addAnnotation (childReferenceEClass, source, new String [] {"ocl", "let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in ((not compartment.oclIsUndefined()) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NONE))", "description", "Side-affixed children can not be placed in compartments"});
