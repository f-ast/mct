7,10d6
< import org.eclipse.draw2d.geometry.PrecisionPoint;
< 
< import org.eclipse.draw2d.geometry.PrecisionRectangle;
< 
53a50,50
>         origin = new Point (ptStart);
54,54d49
<         origin = ptStart.getCopy ();
55,55c51,51
<         terminus = ptEnd.getCopy ();
---
>         terminus = new Point (ptEnd);
98,98c94,94
<         return origin.getCopy ();
---
>         return new Point (origin);
102,102c98,98
<         return terminus.getCopy ();
---
>         return new Point (terminus);
106,106c102,102
<         this.origin = origin.getCopy ();
---
>         this.origin = new Point (origin);
110,110c106,106
<         this.terminus = terminus.getCopy ();
---
>         this.terminus = new Point (terminus);
164a161,163
>         Point theOrigin = getOrigin ();
>         Point theTerminus = getTerminus ();
>         return (theOrigin.getDistance (aPoint) + aPoint.getDistance (theTerminus) <= length () + tolerance);
165,165c345,345
<         double lengthOfSegment = Math.sqrt ((origin.x - terminus.x) * (origin.x - terminus.x) + (origin.y - terminus.y) * (origin.y - terminus.y));
---
>         return getLineEquation (origin.x, origin.y, terminus.x, terminus.y);
166,168d345
<         double lengthFromOriginToPoint = Math.sqrt ((origin.x - aPoint.x) * (origin.x - aPoint.x) + (origin.y - aPoint.y) * (origin.y - aPoint.y));
<         double lengthFromTerminusToPoint = Math.sqrt ((terminus.x - aPoint.x) * (terminus.x - aPoint.x) + (terminus.y - aPoint.y) * (terminus.y - aPoint.y));
<         return lengthFromTerminusToPoint + lengthFromOriginToPoint - lengthOfSegment < tolerance;
350,352d344
<         PrecisionPoint preciseOrigin = new PrecisionPoint (origin);
<         PrecisionPoint preciseTerminus = new PrecisionPoint (terminus);
<         return getLineEquation (preciseOrigin.preciseX, preciseOrigin.preciseY, preciseTerminus.preciseX, preciseTerminus.preciseY);
356,356d348
<         PrecisionPointList intersections = new PrecisionPointList ();
367a361,361
>                 intersections.addPoint (new Point (line.getOrigin ().getCopy ()));
368,368d360
<                 intersections.addPoint (line.getOrigin ().getCopy ());
369,369c362,362
<                 intersections.addPoint (line.getTerminus ().getCopy ());
---
>                 intersections.addPoint (new Point (line.getTerminus ().getCopy ()));
372,372c365,365
<             intersections.addPoint (new PrecisionPoint ((c1 * b2 - b1 * c2) / det, (a1 * c2 - c1 * a2) / det));
---
>             intersections.addPoint (new Point (Math.round ((c1 * b2 - b1 * c2) / det), Math.round ((a1 * c2 - c1 * a2) / det)));
377a371,378
>         PointList intersections = new PointList ();
>         if (ellipseBounds.width == 0 || ellipseBounds.height == 0) return intersections;
> 
>         double xl1 = getOrigin ().x - ellipseBounds.getCenter ().x;
>         double xl2 = getTerminus ().x - ellipseBounds.getCenter ().x;
>         double yl1 = getOrigin ().y - ellipseBounds.getCenter ().y;
>         double yl2 = getTerminus ().y - ellipseBounds.getCenter ().y;
>         double [] equation = getLineEquation (xl1, yl1, xl2, yl2);
378,389d370
<         PointList intersections = new PrecisionPointList ();
<         PrecisionPoint preciseOrigin = new PrecisionPoint (origin);
<         PrecisionPoint preciseTerminus = new PrecisionPoint (terminus);
<         PrecisionRectangle preciseEllipseBounds = new PrecisionRectangle (ellipseBounds);
<         if (preciseEllipseBounds.preciseWidth == 0 || preciseEllipseBounds.preciseHeight == 0) return intersections;
< 
<         PrecisionPoint ellipsePreciseCenter = new PrecisionPoint (preciseEllipseBounds.getCenter ());
<         double xl1 = preciseOrigin.preciseX - ellipsePreciseCenter.preciseX;
<         double xl2 = preciseTerminus.preciseX - ellipsePreciseCenter.preciseX;
<         double yl1 = preciseOrigin.preciseY - ellipsePreciseCenter.preciseY;
<         double yl2 = preciseTerminus.preciseY - ellipsePreciseCenter.preciseY;
<         double [] equation = LineSeg.getLineEquation (xl1, yl1, xl2, yl2);
394a384,384
>         double w = ellipseBounds.width;
395,395d383
<         double w = preciseEllipseBounds.preciseWidth;
396,396c385,385
<         double h = preciseEllipseBounds.preciseHeight;
---
>         double h = ellipseBounds.height;
401a391,391
>             intersections.addPoint (new Point (Math.round (x + ellipseBounds.getCenter ().x), Math.round (Math.sqrt (y) + ellipseBounds.getCenter ().y)));
402,402d390
<             intersections.addPoint (new PrecisionPoint (x + ellipsePreciseCenter.preciseX, Math.sqrt (y) + ellipsePreciseCenter.preciseY));
403,403c392,392
<             intersections.addPoint (new PrecisionPoint (x + ellipsePreciseCenter.preciseX, - Math.sqrt (y) + ellipsePreciseCenter.preciseY));
---
>             intersections.addPoint (new Point (Math.round (x + ellipseBounds.getCenter ().x), Math.round (- Math.sqrt (y) + ellipseBounds.getCenter ().y)));
412a402,403
>             intersections.addPoint (new Point (Math.round (x1 + ellipseBounds.getCenter ().x), Math.round ((c - a * x1) / b + ellipseBounds.getCenter ().y)));
>             intersections.addPoint (new Point (Math.round (x2 + ellipseBounds.getCenter ().x), Math.round ((c - a * x2) / b + ellipseBounds.getCenter ().y)));
413,414d401
<             intersections.addPoint (new PrecisionPoint (x1 + ellipsePreciseCenter.preciseX, (c - a * x1) / b + ellipsePreciseCenter.preciseY));
<             intersections.addPoint (new PrecisionPoint (x2 + ellipsePreciseCenter.preciseX, (c - a * x2) / b + ellipsePreciseCenter.preciseY));
419a409,413
>         double temp [] = getEquation ();
>         double a = temp [0];
>         double b = temp [1];
>         double c = temp [2];
>         PointList intersections = new PointList ();
420,420c349,349
<         PointList intersections = new PrecisionPointList ();
---
>         PointList intersections = new PointList ();
421a415,418
>             if (a * points.getPoint (0).x + b * points.getPoint (0).y == c) {
>                 intersections.addPoint (points.getPoint (0).getCopy ());
>             }
>             return intersections;
422,423d414
<             if (containsPoint (points.getFirstPoint (), DEFAULT_INTERSECTION_TOLERANCE)) {
<                 intersections.addPoint (points.getFirstPoint ());
425,425d419
<         } else {
427a422,422
>             LineSeg line = new LineSeg (points.getPoint (i).getCopy (), points.getPoint (i + 1).getCopy ());
428,428d421
<                 LineSeg seg = new LineSeg (points.getPoint (i), points.getPoint (i + 1));
429,429c423,423
<                 PointList currentIntersections = getLinesIntersections (seg);
---
>             PointList currentIntersections = getLinesIntersections (line);
433,433c427,427
<                     if (seg.containsPoint (intersection, DEFAULT_INTERSECTION_TOLERANCE)) {
---
>                 if (line.containsPoint (intersection, DEFAULT_INTERSECTION_TOLERANCE)) intersections.addPoint (currentIntersections.getPoint (j));
433a428,428
> 
434,436d427
<                         intersections.addPoint (currentIntersections.getPoint (j));
<                     }
<                 }
