3a4,5
> 
> import java.util.HashMap;
3,3c3,3
< import java.io.InputStream;
---
> import java.io.IOException;
6a9,10
> import java.util.Map;
> 
24a37,37
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
25,25d36
< import org.eclipse.emf.ecore.xmi.ClassNotFoundException;
26,26c38,38
< 
---
> 
46a25,25
> import org.eclipse.emf.common.util.URI;
47,47d24
< import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;
48,48c26,26
< 
---
> 
51,52d54
< import org.eclipse.gmf.runtime.emf.core.exceptions.MSLRuntimeException;
< 
75,75c77,77
<         public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
---
>         public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
87,87c89,89
<         public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException {
---
>         public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException {
88a91,92
>             URI uri = URI.createPlatformResourceURI (fFile.getFullPath ().toString (), true);
>             Resource resource = domain.getResourceSet ().getResource (uri, true);
89,90d90
<             String fileName = fFile.getLocation ().toOSString ();
<             Resource resource = domain.loadResource (fileName);
104,104c106,106
<         public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException {
---
>         public Resource load (TransactionalEditingDomain editingDomain, int loadOptions, IProgressMonitor monitor) throws CoreException {
105,105d106
<             InputStream contents = fStorage.getContents ();
106a108,108
>             Resource resource = editingDomain.getResourceSet ().getResource (URI.createPlatformResourceURI (storagePath, true), true);
107,111d107
<             Resource resource = domain.findResource (storagePath, loadOptions);
<             if (resource == null) {
<                 resource = domain.createResource (storagePath);
<             }
<             domain.loadResource (resource, loadOptions, contents);
117,117c114,114
<     static public Diagram load (final MEditingDomain domain, final IFile file, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException {
---
>     static public Diagram load (final TransactionalEditingDomain domain, final IFile file, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException {
122,122c119,119
<     static public Diagram load (final MEditingDomain domain, final IStorage storage, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException {
---
>     static public Diagram load (final TransactionalEditingDomain domain, final IStorage storage, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException {
132,132c129,129
<     static private Diagram load (final MEditingDomain domain, final ILoader loader, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException {
---
>     static private Diagram load (final TransactionalEditingDomain domain, final ILoader loader, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException {
137,137c134,134
<             } catch (MSLRuntimeException e) {
---
>             } catch (Exception e) {
185,185c182,182
<     static public void save (MEditingDomain domain, IFile file, Diagram diagram, boolean bOverwrite, boolean bKeepUnrecognizedData, IProgressMonitor progressMonitor) throws CoreException {
---
>     static public void save (TransactionalEditingDomain domain, IFile file, Diagram diagram, boolean bKeepUnrecognizedData, IProgressMonitor progressMonitor) throws CoreException {
185a183,183
>         Map options = new HashMap ();
187,188d184
<         if (bOverwrite) nOptions = MResourceOption.OVERWRITE_READONLY;
< 
191,191c187,187
<         save (domain, file, diagram, progressMonitor, nOptions);
---
>         save (domain, file, diagram, progressMonitor, options);
194,194c190,190
<     static public void save (MEditingDomain domain, IFile file, Diagram diagram, IProgressMonitor progressMonitor, int nOptions) throws CoreException {
---
>     static public void save (TransactionalEditingDomain domain, IFile file, Diagram diagram, IProgressMonitor progressMonitor, Map options) throws CoreException {
195a192,198
>         String fileName = file.getFullPath ().toOSString ();
>         notationModel.setURI (URI.createPlatformResourceURI (fileName, true));
>         try {
>             notationModel.save (options);
>         } catch (IOException e) {
>             throw new CoreException (new Status (IStatus.ERROR, EditorPlugin.getPluginId (), EditorStatusCodes.RESOURCE_FAILURE, e.getLocalizedMessage (), null));
>         }
196,197d191
<         String fileName = file.getLocation ().toOSString ();
<         domain.saveResourceAs (notationModel, fileName, nOptions);
236,236c237,237
<     public static void unload (MEditingDomain domain, Diagram diagram) {
---
>     public static void unload (TransactionalEditingDomain domain, Diagram diagram) {
237,237d237
<         Resource resource = diagram.eResource ();
238,238c238,238
<         domain.unloadResource (resource);
---
>         diagram.eResource ().unload ();
