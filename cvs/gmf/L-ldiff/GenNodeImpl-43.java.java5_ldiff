60a61,62
>     protected static final String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
>     protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
77a80,83
>     public String getCreateCommandQualifiedClassName () {
>         return getDiagram ().getEditCommandsPackageName () + '.' + getCreateCommandClassName ();
>     }
> 
109a116,117
>             case GMFGenPackage.GEN_NODE__CREATE_COMMAND_CLASS_NAME :
>                 return getCreateCommandClassName ();
129a138,140
>             case GMFGenPackage.GEN_NODE__CREATE_COMMAND_CLASS_NAME :
>                 setCreateCommandClassName ((String) newValue);
>                 return;
147a159,161
>             case GMFGenPackage.GEN_NODE__CREATE_COMMAND_CLASS_NAME :
>                 setCreateCommandClassName (CREATE_COMMAND_CLASS_NAME_EDEFAULT);
>                 return;
161a176,177
>             case GMFGenPackage.GEN_NODE__CREATE_COMMAND_CLASS_NAME :
>                 return CREATE_COMMAND_CLASS_NAME_EDEFAULT == null ? createCommandClassName != null : ! CREATE_COMMAND_CLASS_NAME_EDEFAULT.equals (createCommandClassName);
194a211,225
>     public String getCreateCommandClassNameGen () {
>         return createCommandClassName;
>     }
> 
>     public String getCreateCommandClassName () {
>         return GenCommonBaseImpl.getValidClassName (getCreateCommandClassNameGen (), this, CREATE_COMMAND_SUFFIX);
>     }
> 
>     public void setCreateCommandClassName (String newCreateCommandClassName) {
>         String oldCreateCommandClassName = createCommandClassName;
>         createCommandClassName = newCreateCommandClassName;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NODE__CREATE_COMMAND_CLASS_NAME, oldCreateCommandClassName, createCommandClassName));
> 
>     }
> 
230a262,263
>         result.append (", createCommandClassName: ");
>         result.append (createCommandClassName);
