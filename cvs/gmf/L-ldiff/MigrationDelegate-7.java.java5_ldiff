22a23,24
> import org.eclipse.gmf.mappings.FeatureValueSpec;
> 
28a31,32
> import org.eclipse.gmf.mappings.Language;
> 
30a35,36
> import org.eclipse.gmf.mappings.ValueExpression;
> 
35a42,43
>     private EAttribute myFeatureValueSpec_Body;
>     private EAttribute myFeatureValueSpec_Language;
50a59,65
>         } myFeatureValueSpec_Body = (EAttribute) EcoreUtil.copy (GMFMapPackage.eINSTANCE.getValueExpression_Body ());
>         myFeatureValueSpec_Language = (EAttribute) EcoreUtil.copy (GMFMapPackage.eINSTANCE.getValueExpression_Language ());
>         {
>             Map < String, EStructuralFeature > renamings = new HashMap < String, EStructuralFeature > ();
>             renamings.put (myFeatureValueSpec_Body.getName (), myFeatureValueSpec_Body);
>             renamings.put (myFeatureValueSpec_Language.getName (), myFeatureValueSpec_Language);
>             registerRenamedAttributes (GMFMapPackage.eINSTANCE.getFeatureValueSpec (), renamings);
73a89,100
>         } else if (myFeatureValueSpec_Body.equals (feature)) {
>             FeatureValueSpec featureRef = (FeatureValueSpec) object;
>             String body = (String) value;
>             ValueExpression constraint = getOrCreateValueExpression (featureRef);
>             constraint.setBody (body);
>             fireMigrationApplied (true);
>         } else if (myFeatureValueSpec_Language.equals (feature)) {
>             FeatureValueSpec featureRef = (FeatureValueSpec) object;
>             ValueExpression constraint = getOrCreateValueExpression (featureRef);
>             Language lang = Language.get ((String) value);
>             constraint.setLanguage (lang);
>             fireMigrationApplied (true);
80a108,116
>     private ValueExpression getOrCreateValueExpression (FeatureValueSpec featureRef) {
>         ValueExpression constraint = featureRef.getValue ();
>         if (constraint == null) {
>             constraint = GMFMapFactory.eINSTANCE.createValueExpression ();
>             featureRef.setValue (constraint);
>         }
>         return constraint;
>     }
> 
