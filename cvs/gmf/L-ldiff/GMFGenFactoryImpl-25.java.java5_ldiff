16a29,29
> import org.eclipse.gmf.codegen.gmfgen.GenAuditContainer;
16a17,17
> import org.eclipse.gmf.codegen.gmfgen.ColorAttributes;
17,17d28
< import org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind;
18,18c30,30
< 
---
> 
19a32,32
> 
19,19c31,31
< import org.eclipse.gmf.codegen.gmfgen.CompartmentPlacementKind;
---
> import org.eclipse.gmf.codegen.gmfgen.GenAuditRule;
36a39,40
> import org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel;
> 
46a53,53
> import org.eclipse.gmf.codegen.gmfgen.GenSeverity;
47,47d52
< import org.eclipse.gmf.codegen.gmfgen.GenNode;
48a55,58
> import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;
> 
> import org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap;
> 
48,48c54,54
< 
---
> 
95,96d106
<             case GMFGenPackage.GEN_NODE :
<                 return createGenNode ();
97,97c107,107
<             case GMFGenPackage.GEN_COMPARTMENT :
---
>             case GMFGenPackage.GEN_COMPARTMENT :
98,98c108,108
<                 return createGenCompartment ();
---
>                 return createGenCompartment ();
156,156c103,103
<             case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND :
---
>             case GMFGenPackage.GEN_TOP_LEVEL_NODE :
157,158d103
<                 return createCompartmentPlacementKindFromString (eDataType, initialValue);
<             case GMFGenPackage.COMPARTMENT_LAYOUT_KIND :
159,159c104,104
<                 return createCompartmentLayoutKindFromString (eDataType, initialValue);
---
>                 return createGenTopLevelNode ();
171,174d174
<             case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND :
<                 return convertCompartmentPlacementKindToString (eDataType, instanceValue);
<             case GMFGenPackage.COMPARTMENT_LAYOUT_KIND :
<                 return convertCompartmentLayoutKindToString (eDataType, instanceValue);
188a189,191
>     public GenTopLevelNode createGenTopLevelNode () {
>         GenTopLevelNodeImpl genTopLevelNode = new GenTopLevelNodeImpl ();
>         return genTopLevelNode;
189,193d198
<     public GenNode createGenNode () {
<         GenNodeImpl genNode = new GenNodeImpl ();
<         return genNode;
<     }
< 
194,194c199,199
<     public GenCompartment createGenCompartment () {
---
>     public GenCompartment createGenCompartment () {
195,195c200,200
<         GenCompartmentImpl genCompartment = new GenCompartmentImpl ();
---
>         GenCompartmentImpl genCompartment = new GenCompartmentImpl ();
196a202,203
>     }
> 
196,196c201,201
<         return genCompartment;
---
>         return genCompartment;
324,345d323
<     public CompartmentPlacementKind createCompartmentPlacementKindFromString (EDataType eDataType, String initialValue) {
<         CompartmentPlacementKind result = CompartmentPlacementKind.get (initialValue);
<         if (result == null) throw new IllegalArgumentException ("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName () + "'");
< 
<         return result;
<     }
< 
<     public String convertCompartmentPlacementKindToString (EDataType eDataType, Object instanceValue) {
<         return instanceValue == null ? null : instanceValue.toString ();
<     }
< 
<     public CompartmentLayoutKind createCompartmentLayoutKindFromString (EDataType eDataType, String initialValue) {
<         CompartmentLayoutKind result = CompartmentLayoutKind.get (initialValue);
<         if (result == null) throw new IllegalArgumentException ("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName () + "'");
< 
<         return result;
<     }
< 
<     public String convertCompartmentLayoutKindToString (EDataType eDataType, Object instanceValue) {
<         return instanceValue == null ? null : instanceValue.toString ();
<     }
< 
