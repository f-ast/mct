20a21,22
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
53a56,76
>     public NotificationChain basicSetGroup (ToolGroup newGroup, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newGroup, GMFGenPackage.TOOL_GROUP__GROUP, msgs);
>         return msgs;
>     }
> 
>     public void setGroup (ToolGroup newGroup) {
>         if (newGroup != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.TOOL_GROUP__GROUP && newGroup != null)) {
>             if (EcoreUtil.isAncestor (this, newGroup)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newGroup != null) msgs = ((InternalEObject) newGroup).eInverseAdd (this, GMFGenPackage.TOOL_GROUP__ENTRIES, ToolGroup.class, msgs);
> 
>             msgs = basicSetGroup (newGroup, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TOOL_GROUP__GROUP, newGroup, newGroup));
> 
>     }
> 
67a91,111
>     public NotificationChain basicSetPalette (Palette newPalette, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newPalette, GMFGenPackage.TOOL_GROUP__PALETTE, msgs);
>         return msgs;
>     }
> 
>     public void setPalette (Palette newPalette) {
>         if (newPalette != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.TOOL_GROUP__PALETTE && newPalette != null)) {
>             if (EcoreUtil.isAncestor (this, newPalette)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newPalette != null) msgs = ((InternalEObject) newPalette).eInverseAdd (this, GMFGenPackage.PALETTE__GROUPS, Palette.class, msgs);
> 
>             msgs = basicSetPalette (newPalette, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TOOL_GROUP__PALETTE, newPalette, newPalette));
> 
>     }
> 
91,91c135,135
<                 return eBasicSetContainer (otherEnd, GMFGenPackage.TOOL_GROUP__GROUP, msgs);
---
>                 return basicSetGroup ((ToolGroup) otherEnd, msgs);
95,95c139,139
<                 return eBasicSetContainer (otherEnd, GMFGenPackage.TOOL_GROUP__PALETTE, msgs);
---
>                 return basicSetPalette ((Palette) otherEnd, msgs);
128,128c172,172
<                 return eBasicSetContainer (null, GMFGenPackage.TOOL_GROUP__GROUP, msgs);
---
>                 return basicSetGroup (null, msgs);
130,130c174,174
<                 return eBasicSetContainer (null, GMFGenPackage.TOOL_GROUP__PALETTE, msgs);
---
>                 return basicSetPalette (null, msgs);
170a215,220
>             case GMFGenPackage.TOOL_GROUP__GROUP :
>                 setGroup ((ToolGroup) newValue);
>                 return;
>             case GMFGenPackage.TOOL_GROUP__PALETTE :
>                 setPalette ((Palette) newValue);
>                 return;
187a238,243
>             case GMFGenPackage.TOOL_GROUP__GROUP :
>                 setGroup ((ToolGroup) null);
>                 return;
>             case GMFGenPackage.TOOL_GROUP__PALETTE :
>                 setPalette ((Palette) null);
>                 return;
