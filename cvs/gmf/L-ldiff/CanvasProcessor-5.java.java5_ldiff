2a3,4
> import java.util.Collection;
> 
4a7,10
> import java.util.LinkedList;
> 
> import org.eclipse.emf.ecore.EStructuralFeature;
> 
24a31,32
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
> 
133,133c141,141
<         if (figure instanceof CustomFigure) {
---
>         if (figure instanceof CustomFigure && isPlainBareCustomFigure ((CustomFigure) figure)) {
140a149,173
>     private static boolean isPlainBareCustomFigure (CustomFigure figure) {
>         if (! figure.getChildren ().isEmpty ()) {
>             return false;
>         }
>         final Collection featuresToCheck = new LinkedList (figure.eClass ().getEAllStructuralFeatures ());
>         featuresToCheck.remove (GMFGraphPackage.eINSTANCE.getIdentity_Name ());
>         featuresToCheck.remove (GMFGraphPackage.eINSTANCE.getFigure_Children ());
>         featuresToCheck.remove (GMFGraphPackage.eINSTANCE.getFigureMarker_Parent ());
>         featuresToCheck.remove (GMFGraphPackage.eINSTANCE.getFigureHandle_ReferencingElements ());
>         featuresToCheck.remove (GMFGraphPackage.eINSTANCE.getCustomClass_BundleName ());
>         featuresToCheck.remove (GMFGraphPackage.eINSTANCE.getCustomClass_QualifiedClassName ());
>         featuresToCheck.remove (GMFGraphPackage.eINSTANCE.getCustomFigure_CustomChildren ());
>         for (Iterator it = featuresToCheck.iterator ();
>         it.hasNext ();) {
>             final EStructuralFeature next = (EStructuralFeature) it.next ();
>             if (next.isDerived ()) {
>                 continue;
>             }
>             if (figure.eIsSet (next)) {
>                 return false;
>             }
>         }
>         return true;
>     }
> 
