3,8d2
< import java.io.IOException;
< 
< import java.io.Reader;
< 
< import java.util.Collection;
< 
37,38d30
< import org.eclipse.core.runtime.Path;
< 
47,52d38
< import org.eclipse.gmf.internal.xpand.expression.SyntaxConstants;
< 
< import org.eclipse.gmf.internal.xpand.util.ResourceManagerImpl;
< 
< import org.eclipse.gmf.internal.xpand.util.StreamConverter;
< 
100,100c86,86
<         if (result != null) {
---
>         assert result != null;
103,127d88
<         return new ResourceManagerImpl () {
< 
<             @Override
<             protected boolean shouldCache () {
<                 return false;
<             }
< 
<             @Override
<             protected Reader resolve (String fullyQualifiedName, String extension) throws IOException {
<                 if (extension.equals (file.getFileExtension ()) && fullyQualifiedName.replace (SyntaxConstants.NS_DELIM, "/").equals (file.getProjectRelativePath ().toString ())) {
<                     try {
<                         return new StreamConverter ().toContentsReader (file);
<                     } catch (CoreException ex) {
<                         IOException wrap = new IOException (ex.getStatus ().getMessage ());
<                         wrap.initCause (ex);
<                         throw wrap;
<                     }
<                 }
<                 return null;
<             }
< 
<         }
< 
<         ;
<     }
