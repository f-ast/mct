84a85,90
> import org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase;
> 
> import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer;
> 
90a97,98
> import org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider;
> 
244a253,256
>     private EClass genExpressionProviderContainerEClass = null;
>     private EClass genExpressionProviderBaseEClass = null;
>     private EClass genJavaExpressionProviderEClass = null;
>     private EClass genExpressionInterpreterEClass = null;
327a340,343
>     public EReference getGenEditorGenerator_ExpressionProviders () {
>         return (EReference) genEditorGeneratorEClass.getEStructuralFeatures ().get (14);
>     }
> 
1399a1416,1467
>     public EClass getGenExpressionProviderContainer () {
>         return genExpressionProviderContainerEClass;
>     }
> 
>     public EAttribute getGenExpressionProviderContainer_ExpressionsPackageName () {
>         return (EAttribute) genExpressionProviderContainerEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getGenExpressionProviderContainer_AbstractExpressionClassName () {
>         return (EAttribute) genExpressionProviderContainerEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EReference getGenExpressionProviderContainer_Providers () {
>         return (EReference) genExpressionProviderContainerEClass.getEStructuralFeatures ().get (2);
>     }
> 
>     public EReference getGenExpressionProviderContainer_EditorGen () {
>         return (EReference) genExpressionProviderContainerEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EClass getGenExpressionProviderBase () {
>         return genExpressionProviderBaseEClass;
>     }
> 
>     public EReference getGenExpressionProviderBase_Expressions () {
>         return (EReference) genExpressionProviderBaseEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EReference getGenExpressionProviderBase_Container () {
>         return (EReference) genExpressionProviderBaseEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EClass getGenJavaExpressionProvider () {
>         return genJavaExpressionProviderEClass;
>     }
> 
>     public EClass getGenExpressionInterpreter () {
>         return genExpressionInterpreterEClass;
>     }
> 
>     public EAttribute getGenExpressionInterpreter_Language () {
>         return (EAttribute) genExpressionInterpreterEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getGenExpressionInterpreter_ClassName () {
>         return (EAttribute) genExpressionInterpreterEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EAttribute getGenExpressionInterpreter_RequiredPluginIDs () {
>         return (EAttribute) genExpressionInterpreterEClass.getEStructuralFeatures ().get (2);
>     }
> 
1436a1505,1505
>         createEReference (genEditorGeneratorEClass, GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS);
1704a1774,1786
>         genExpressionProviderContainerEClass = createEClass (GEN_EXPRESSION_PROVIDER_CONTAINER);
>         createEAttribute (genExpressionProviderContainerEClass, GEN_EXPRESSION_PROVIDER_CONTAINER__EXPRESSIONS_PACKAGE_NAME);
>         createEAttribute (genExpressionProviderContainerEClass, GEN_EXPRESSION_PROVIDER_CONTAINER__ABSTRACT_EXPRESSION_CLASS_NAME);
>         createEReference (genExpressionProviderContainerEClass, GEN_EXPRESSION_PROVIDER_CONTAINER__PROVIDERS);
>         createEReference (genExpressionProviderContainerEClass, GEN_EXPRESSION_PROVIDER_CONTAINER__EDITOR_GEN);
>         genExpressionProviderBaseEClass = createEClass (GEN_EXPRESSION_PROVIDER_BASE);
>         createEReference (genExpressionProviderBaseEClass, GEN_EXPRESSION_PROVIDER_BASE__EXPRESSIONS);
>         createEReference (genExpressionProviderBaseEClass, GEN_EXPRESSION_PROVIDER_BASE__CONTAINER);
>         genJavaExpressionProviderEClass = createEClass (GEN_JAVA_EXPRESSION_PROVIDER);
>         genExpressionInterpreterEClass = createEClass (GEN_EXPRESSION_INTERPRETER);
>         createEAttribute (genExpressionInterpreterEClass, GEN_EXPRESSION_INTERPRETER__LANGUAGE);
>         createEAttribute (genExpressionInterpreterEClass, GEN_EXPRESSION_INTERPRETER__CLASS_NAME);
>         createEAttribute (genExpressionInterpreterEClass, GEN_EXPRESSION_INTERPRETER__REQUIRED_PLUGIN_IDS);
1781a1864,1865
>         genJavaExpressionProviderEClass.getESuperTypes ().add (this.getGenExpressionProviderBase ());
>         genExpressionInterpreterEClass.getESuperTypes ().add (this.getGenExpressionProviderBase ());
1796a1881,1881
>         initEReference (getGenEditorGenerator_ExpressionProviders (), this.getGenExpressionProviderContainer (), this.getGenExpressionProviderContainer_EditorGen (), "expressionProviders", null, 0, 1, GenEditorGenerator.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
2162a2248,2270
>         initEClass (genExpressionProviderContainerEClass, GenExpressionProviderContainer.class, "GenExpressionProviderContainer", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getGenExpressionProviderContainer_ExpressionsPackageName (), ecorePackage.getEString (), "expressionsPackageName", null, 0, 1, GenExpressionProviderContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGenExpressionProviderContainer_AbstractExpressionClassName (), ecorePackage.getEString (), "abstractExpressionClassName", null, 0, 1, GenExpressionProviderContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getGenExpressionProviderContainer_Providers (), this.getGenExpressionProviderBase (), this.getGenExpressionProviderBase_Container (), "providers", null, 0, - 1, GenExpressionProviderContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getGenExpressionProviderContainer_EditorGen (), this.getGenEditorGenerator (), this.getGenEditorGenerator_ExpressionProviders (), "editorGen", null, 1, 1, GenExpressionProviderContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         op = addEOperation (genExpressionProviderContainerEClass, this.getGenExpressionProviderBase (), "getProvider", 0, 1);
>         addEParameter (op, this.getValueExpression (), "expression", 1, 1);
>         addEOperation (genExpressionProviderContainerEClass, ecorePackage.getEString (), "getAbstractExpressionQualifiedClassName", 1, 1);
>         initEClass (genExpressionProviderBaseEClass, GenExpressionProviderBase.class, "GenExpressionProviderBase", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getGenExpressionProviderBase_Expressions (), this.getValueExpression (), null, "expressions", null, 0, - 1, GenExpressionProviderBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEReference (getGenExpressionProviderBase_Container (), this.getGenExpressionProviderContainer (), this.getGenExpressionProviderContainer_Providers (), "container", null, 1, 1, GenExpressionProviderBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         addEOperation (genExpressionProviderBaseEClass, ecorePackage.getEString (), "getRequiredPluginIDs", 0, - 1);
>         addEOperation (genExpressionProviderBaseEClass, ecorePackage.getEString (), "getLanguage", 1, 1);
>         initEClass (genJavaExpressionProviderEClass, GenJavaExpressionProvider.class, "GenJavaExpressionProvider", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         op = addEOperation (genJavaExpressionProviderEClass, ecorePackage.getEString (), "getOperationName", 0, 1);
>         addEParameter (op, this.getValueExpression (), "expression", 1, 1);
>         initEClass (genExpressionInterpreterEClass, GenExpressionInterpreter.class, "GenExpressionInterpreter", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getGenExpressionInterpreter_Language (), ecorePackage.getEString (), "language", null, 0, 1, GenExpressionInterpreter.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGenExpressionInterpreter_ClassName (), ecorePackage.getEString (), "className", null, 0, 1, GenExpressionInterpreter.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getGenExpressionInterpreter_RequiredPluginIDs (), ecorePackage.getEString (), "requiredPluginIDs", null, 0, - 1, GenExpressionInterpreter.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         addEOperation (genExpressionInterpreterEClass, ecorePackage.getEString (), "getQualifiedClassName", 1, 1);
>         op = addEOperation (genExpressionInterpreterEClass, ecorePackage.getEString (), "getExpressionAccessor", 0, 1);
>         addEParameter (op, this.getValueExpression (), "expression", 1, 1);
