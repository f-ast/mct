38,38d37
<     protected static final String CONTENT_EXTENSION_ID_EDEFAULT = null;
67a67,81
>     protected static final boolean GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT = true;
>     protected boolean generateDomainModelNavigator = GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT;
>     protected static final String DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT = null;
>     protected String domainContentExtensionID = DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT;
>     protected static final String DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT = null;
>     protected String domainContentExtensionName = DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT;
>     protected static final String DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT = null;
>     protected String domainContentExtensionPriority = DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT;
>     protected static final String DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT = null;
>     protected String domainContentProviderClassName = DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT;
>     protected static final String DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT = null;
>     protected String domainLabelProviderClassName = DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT;
>     protected static final String DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT = null;
>     protected String domainModelElementTesterClassName = DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT;
>     protected static final String CONTENT_EXTENSION_ID_EDEFAULT = null;
369a384,508
>     public boolean isGenerateDomainModelNavigator () {
>         return generateDomainModelNavigator;
>     }
> 
>     public void setGenerateDomainModelNavigator (boolean newGenerateDomainModelNavigator) {
>         boolean oldGenerateDomainModelNavigator = generateDomainModelNavigator;
>         generateDomainModelNavigator = newGenerateDomainModelNavigator;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR, oldGenerateDomainModelNavigator, generateDomainModelNavigator));
> 
>     }
> 
>     public String getDomainContentExtensionIDGen () {
>         return domainContentExtensionID;
>     }
> 
>     public String getDomainContentExtensionID () {
>         String value = getDomainContentExtensionIDGen ();
>         if (isEmpty (value)) {
>             value = getEditorGen ().getPlugin ().getID () + ".domainResourceContent";
>         }
>         return value;
>     }
> 
>     public void setDomainContentExtensionID (String newDomainContentExtensionID) {
>         String oldDomainContentExtensionID = domainContentExtensionID;
>         domainContentExtensionID = newDomainContentExtensionID;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID, oldDomainContentExtensionID, domainContentExtensionID));
> 
>     }
> 
>     public String getDomainContentExtensionNameGen () {
>         return domainContentExtensionName;
>     }
> 
>     public String getDomainContentExtensionName () {
>         String value = getDomainContentExtensionNameGen ();
>         if (isEmpty (value)) {
>             value = "%domainNavigatorContentName";
>         }
>         return value;
>     }
> 
>     public void setDomainContentExtensionName (String newDomainContentExtensionName) {
>         String oldDomainContentExtensionName = domainContentExtensionName;
>         domainContentExtensionName = newDomainContentExtensionName;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME, oldDomainContentExtensionName, domainContentExtensionName));
> 
>     }
> 
>     public String getDomainContentExtensionPriorityGen () {
>         return domainContentExtensionPriority;
>     }
> 
>     public String getDomainContentExtensionPriority () {
>         String value = getDomainContentExtensionPriorityGen ();
>         if (isEmpty (value)) {
>             value = "normal";
>         }
>         return value;
>     }
> 
>     public void setDomainContentExtensionPriority (String newDomainContentExtensionPriority) {
>         String oldDomainContentExtensionPriority = domainContentExtensionPriority;
>         domainContentExtensionPriority = newDomainContentExtensionPriority;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY, oldDomainContentExtensionPriority, domainContentExtensionPriority));
> 
>     }
> 
>     public String getDomainContentProviderClassNameGen () {
>         return domainContentProviderClassName;
>     }
> 
>     public String getDomainContentProviderClassName () {
>         String value = getDomainContentProviderClassNameGen ();
>         if (isEmpty (value)) {
>             value = getDomainPackageCapName () + "DomainNavigatorContentProvider";
>         }
>         return value;
>     }
> 
>     public void setDomainContentProviderClassName (String newDomainContentProviderClassName) {
>         String oldDomainContentProviderClassName = domainContentProviderClassName;
>         domainContentProviderClassName = newDomainContentProviderClassName;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME, oldDomainContentProviderClassName, domainContentProviderClassName));
> 
>     }
> 
>     public String getDomainLabelProviderClassNameGen () {
>         return domainLabelProviderClassName;
>     }
> 
>     public String getDomainLabelProviderClassName () {
>         String value = getDomainLabelProviderClassNameGen ();
>         if (isEmpty (value)) {
>             value = getDomainPackageCapName () + "DomainNavigatorLabelProvider";
>         }
>         return value;
>     }
> 
>     public void setDomainLabelProviderClassName (String newDomainLabelProviderClassName) {
>         String oldDomainLabelProviderClassName = domainLabelProviderClassName;
>         domainLabelProviderClassName = newDomainLabelProviderClassName;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME, oldDomainLabelProviderClassName, domainLabelProviderClassName));
> 
>     }
> 
>     public String getDomainModelElementTesterClassNameGen () {
>         return domainModelElementTesterClassName;
>     }
> 
>     public String getDomainModelElementTesterClassName () {
>         String value = getDomainModelElementTesterClassNameGen ();
>         if (isEmpty (value)) {
>             value = getDomainPackageCapName () + "DomainModelElementTester";
>         }
>         return value;
>     }
> 
>     public void setDomainModelElementTesterClassName (String newDomainModelElementTesterClassName) {
>         String oldDomainModelElementTesterClassName = domainModelElementTesterClassName;
>         domainModelElementTesterClassName = newDomainModelElementTesterClassName;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME, oldDomainModelElementTesterClassName, domainModelElementTesterClassName));
> 
>     }
> 
408a548,559
>     public String getDomainContentProviderQualifiedClassName () {
>         return getPackageName () + '.' + getDomainContentProviderClassName ();
>     }
> 
>     public String getDomainLabelProviderQualifiedClassName () {
>         return getPackageName () + '.' + getDomainLabelProviderClassName ();
>     }
> 
>     public String getDomainModelElementTesterQualifiedClassName () {
>         return getEditorGen ().getEditor ().getPackageName () + '.' + getDomainModelElementTesterClassName ();
>     }
> 
455a607,620
>             case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR :
>                 return isGenerateDomainModelNavigator () ? Boolean.TRUE : Boolean.FALSE;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID :
>                 return getDomainContentExtensionID ();
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME :
>                 return getDomainContentExtensionName ();
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY :
>                 return getDomainContentExtensionPriority ();
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME :
>                 return getDomainContentProviderClassName ();
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME :
>                 return getDomainLabelProviderClassName ();
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME :
>                 return getDomainModelElementTesterClassName ();
497a663,683
>             case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR :
>                 setGenerateDomainModelNavigator (((Boolean) newValue).booleanValue ());
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID :
>                 setDomainContentExtensionID ((String) newValue);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME :
>                 setDomainContentExtensionName ((String) newValue);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY :
>                 setDomainContentExtensionPriority ((String) newValue);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME :
>                 setDomainContentProviderClassName ((String) newValue);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME :
>                 setDomainLabelProviderClassName ((String) newValue);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME :
>                 setDomainModelElementTesterClassName ((String) newValue);
>                 return;
553a740,760
>             case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR :
>                 setGenerateDomainModelNavigator (GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID :
>                 setDomainContentExtensionID (DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME :
>                 setDomainContentExtensionName (DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY :
>                 setDomainContentExtensionPriority (DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME :
>                 setDomainContentProviderClassName (DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME :
>                 setDomainLabelProviderClassName (DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT);
>                 return;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME :
>                 setDomainModelElementTesterClassName (DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT);
>                 return;
608a816,829
>             case GMFGenPackage.GEN_NAVIGATOR__GENERATE_DOMAIN_MODEL_NAVIGATOR :
>                 return generateDomainModelNavigator != GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT;
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_ID :
>                 return DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT == null ? domainContentExtensionID != null : ! DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT.equals (domainContentExtensionID);
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_NAME :
>                 return DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT == null ? domainContentExtensionName != null : ! DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT.equals (domainContentExtensionName);
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_EXTENSION_PRIORITY :
>                 return DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT == null ? domainContentExtensionPriority != null : ! DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT.equals (domainContentExtensionPriority);
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_CONTENT_PROVIDER_CLASS_NAME :
>                 return DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT == null ? domainContentProviderClassName != null : ! DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT.equals (domainContentProviderClassName);
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_LABEL_PROVIDER_CLASS_NAME :
>                 return DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT == null ? domainLabelProviderClassName != null : ! DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT.equals (domainLabelProviderClassName);
>             case GMFGenPackage.GEN_NAVIGATOR__DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME :
>                 return DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT == null ? domainModelElementTesterClassName != null : ! DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT.equals (domainModelElementTesterClassName);
651a873,887
>         result.append (" (generateDomainModelNavigator: ");
>         result.append (generateDomainModelNavigator);
>         result.append (", domainContentExtensionID: ");
>         result.append (domainContentExtensionID);
>         result.append (", domainContentExtensionName: ");
>         result.append (domainContentExtensionName);
>         result.append (", domainContentExtensionPriority: ");
>         result.append (domainContentExtensionPriority);
>         result.append (", domainContentProviderClassName: ");
>         result.append (domainContentProviderClassName);
>         result.append (", domainLabelProviderClassName: ");
>         result.append (domainLabelProviderClassName);
>         result.append (", domainModelElementTesterClassName: ");
>         result.append (domainModelElementTesterClassName);
>         result.append (", contentExtensionID: ");
652,652d872
<         result.append (" (contentExtensionID: ");
