8a9,10
> import java.util.Collections;
> 
40a43,44
> import org.eclipse.gef.ConnectionEditPart;
> 
419a424,461
>     public List getPrimaryEditParts () {
>         List connections = new ArrayList ();
>         Object diagramEditPart = getViewer ().getEditPartRegistry ().get (getDiagramView ());
>         List shapes = getChildren ();
>         Set connectableEditParts = new HashSet (shapes);
>         Iterator iter = shapes.iterator ();
>         while (iter.hasNext ()) {
>             getBorderItemEditParts ((EditPart) iter.next (), connectableEditParts);
>         }
>         if (diagramEditPart instanceof DiagramEditPart) {
>             Iterator diagramConnections = ((DiagramEditPart) diagramEditPart).getConnections ().iterator ();
>             while (diagramConnections.hasNext ()) {
>                 ConnectionEditPart connection = (ConnectionEditPart) diagramConnections.next ();
>                 if (connectableEditParts.contains (connection.getSource ()) || connectableEditParts.contains (connection.getTarget ())) connections.add (connection);
> 
>             }
>         }
>         if (connections.size () > 0 || shapes.size () > 0) {
>             List primaryEditParts = new ArrayList ();
>             primaryEditParts.addAll (shapes);
>             primaryEditParts.addAll (connections);
>             return primaryEditParts;
>         }
>         return Collections.EMPTY_LIST;
>     }
> 
>     private void getBorderItemEditParts (EditPart parent, Set retval) {
>         Iterator iter = parent.getChildren ().iterator ();
>         while (iter.hasNext ()) {
>             EditPart child = (EditPart) iter.next ();
>             if (child instanceof IBorderItemEditPart) {
>                 retval.add (child);
>                 retval.addAll (child.getChildren ());
>             }
>             getBorderItemEditParts (child, retval);
>         }
>     }
> 
