5,5d4
< import java.util.List;
13,13c5,5
< import org.eclipse.gef.commands.CompoundCommand;
---
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
14,14d5
< 
16a21,22
> import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionEditPart;
> 
17,17c23,23
< import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
---
> import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
17a24,25
> 
> import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
18a15,18
> import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
> 
> import org.eclipse.gmf.runtime.diagram.core.commands.SetPropertyCommand;
> 
19,19c19,19
< import org.eclipse.gmf.runtime.diagram.ui.editparts.LabelEditPart;
---
> import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
24a35,35
> import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
25,25d34
< import org.eclipse.gmf.runtime.diagram.ui.requests.ChangePropertyValueRequest;
26a37,46
> import org.eclipse.gmf.runtime.notation.LayoutConstraint;
> 
> import org.eclipse.gmf.runtime.notation.Location;
> 
> import org.eclipse.gmf.runtime.notation.Node;
> 
> import org.eclipse.gmf.runtime.notation.NotationPackage;
> 
> import org.eclipse.gmf.runtime.notation.View;
> 
26,26c36,36
< 
---
> 
39a56,60
>             CompositeCommand cc = new CompositeCommand (DiagramUIMessages.Command_hideLabel_Label);
>             Object model = getHost ().getModel ();
>             if (model instanceof View) {
>                 View hostView = (View) model;
>                 Iterator iter = hostView.getChildren ().iterator ();
40,42d55
<             CompoundCommand cc = new CompoundCommand ();
<             List children = getHost ().getChildren ();
<             Iterator iter = children.iterator ();
43a62,65
>                     View childView = (View) iter.next ();
>                     if (isLabelView (getHost (), hostView, childView)) {
>                         cc.add (new SetPropertyCommand (getEditingDomain (), new EObjectAdapter (childView), Properties.ID_ISVISIBLE, DiagramUIMessages.Command_hideLabel_Label, Boolean.valueOf (showHide)));
>                     }
44,49d61
<                 GraphicalEditPart ep = (GraphicalEditPart) iter.next ();
<                 if (ep instanceof LabelEditPart) {
<                     ChangePropertyValueRequest req = new ChangePropertyValueRequest (DiagramUIMessages.Command_hideLabel_Label, Properties.ID_ISVISIBLE, Boolean.valueOf (showHide));
<                     Command setLabelVisCmd = ep.getCommand (req);
<                     if (setLabelVisCmd != null && setLabelVisCmd.canExecute ()) cc.add (setLabelVisCmd);
< 
52,52c67,67
<             return cc;
---
>                 return new ICommandProxy (cc);
56a73,97
>     protected TransactionalEditingDomain getEditingDomain () {
>         return ((IGraphicalEditPart) getHost ()).getEditingDomain ();
>     }
> 
>     protected boolean isLabelView (EditPart containerEditPart, View parentView, View view) {
>         if ((containerEditPart instanceof ShapeNodeEditPart || containerEditPart instanceof ConnectionEditPart) && view instanceof Node) {
>             Node node = (Node) view;
>             String nodeType = node.getType ();
>             if (! isCompartment (node) && (nodeType != null && nodeType.length () > 0)) {
>                 LayoutConstraint lContraint = node.getLayoutConstraint ();
>                 if (lContraint instanceof Location) {
>                     return true;
>                 }
>             }
>         }
>         return false;
>     }
> 
>     protected boolean isCompartment (Node node) {
>         if (node.getStyle (NotationPackage.eINSTANCE.getDrawerStyle ()) != null) {
>             return true;
>         }
>         return false;
>     }
> 
