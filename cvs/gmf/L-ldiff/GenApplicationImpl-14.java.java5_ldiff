21,22d20
< import org.eclipse.emf.ecore.util.EcoreUtil;
< 
73,93d70
<     public NotificationChain basicSetEditorGen (GenEditorGenerator newEditorGen, NotificationChain msgs) {
<         msgs = eBasicSetContainer ((InternalEObject) newEditorGen, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
<         return msgs;
<     }
< 
<     public void setEditorGen (GenEditorGenerator newEditorGen) {
<         if (newEditorGen != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_APPLICATION__EDITOR_GEN && newEditorGen != null)) {
<             if (EcoreUtil.isAncestor (this, newEditorGen)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
< 
<             NotificationChain msgs = null;
<             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
< 
<             if (newEditorGen != null) msgs = ((InternalEObject) newEditorGen).eInverseAdd (this, GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION, GenEditorGenerator.class, msgs);
< 
<             msgs = basicSetEditorGen (newEditorGen, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, newEditorGen, newEditorGen));
< 
<     }
< 
309,309c286,286
<                 return basicSetEditorGen ((GenEditorGenerator) otherEnd, msgs);
---
>                 return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
318,318d294
<                 return basicSetEditorGen (null, msgs);
377,379d353
<             case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN :
<                 setEditorGen ((GenEditorGenerator) newValue);
<                 return;
415,415c295,295
<             case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN :
---
>                 return eBasicSetContainer (null, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
416,417d295
<                 setEditorGen ((GenEditorGenerator) null);
<                 return;
