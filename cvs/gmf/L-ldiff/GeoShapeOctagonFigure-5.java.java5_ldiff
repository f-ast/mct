6a7,8
> import org.eclipse.draw2d.geometry.PrecisionPoint;
> 
8a11,12
> import org.eclipse.gmf.runtime.draw2d.ui.geometry.PrecisionPointList;
> 
9a14,14
>     private static double factor = 1.0 / (2.0 + Math.sqrt (2.0));
14a20,23
>     public GeoShapeOctagonFigure (int size, int spacing) {
>         super (size, size, spacing);
>     }
> 
15a25,26
>         double xOffset = rect.preciseWidth () * factor;
>         double yOffset = rect.preciseHeight () * factor;
16,17d24
<         int xOffset = (int) (rect.width * 0.275);
<         int yOffset = (int) (rect.height * 0.275);
18,18c27,27
<         PointList points = new PointList ();
---
>         PointList points = new PrecisionPointList ();
19,25d27
<         Point p1 = new Point (rect.x, rect.y + yOffset);
<         Point p2 = new Point (rect.x + xOffset, rect.y);
<         Point p3 = new Point (rect.x + rect.width - xOffset, rect.y);
<         Point p4 = new Point (rect.x + rect.width - 1, rect.y + yOffset);
<         Point p5 = new Point (rect.x + rect.width - 1, rect.y + rect.height - yOffset);
<         Point p6 = new Point (rect.x + rect.width - xOffset, rect.y + rect.height - 1);
<         Point p7 = new Point (rect.x + xOffset, rect.y + rect.height - 1);
26,26c28,28
<         Point p8 = new Point (rect.x, rect.y + rect.height - yOffset);
---
>         Point p1 = new PrecisionPoint (rect.preciseX (), rect.preciseY () + yOffset);
26a29,35
>         Point p2 = new PrecisionPoint (rect.preciseX () + xOffset, rect.preciseY ());
>         Point p3 = new PrecisionPoint (rect.preciseX () + rect.preciseWidth () - xOffset, rect.preciseY ());
>         Point p4 = new PrecisionPoint (rect.preciseX () + rect.preciseWidth () - 1, rect.preciseY () + yOffset);
>         Point p5 = new PrecisionPoint (p4.preciseX (), rect.preciseY () + rect.preciseHeight () - yOffset);
>         Point p6 = new PrecisionPoint (p3.preciseX (), rect.preciseY () + rect.preciseHeight () - 1);
>         Point p7 = new PrecisionPoint (p2.preciseX (), p6.preciseY ());
>         Point p8 = new PrecisionPoint (rect.preciseX (), p5.preciseY ());
