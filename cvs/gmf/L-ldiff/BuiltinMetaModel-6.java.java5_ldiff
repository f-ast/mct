427a428,430
>         subStringOp = opf.createReflective (String.class, "substring", int.class);
>         subStringOp.metaOp.setName ("subString");
>         stringOps.add (subStringOp);
582,582c585,585
<         collectionOps.add (new InternalOperation < Collection > (opf.create ("add", collectionTypes.getCollectionType (ecorePkg.getEJavaObject ()), ecorePkg.getEJavaObject ())) {
---
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("add", CollectionTypesSupport.COLLECTION_OF_OBJECT, ecorePkg.getEJavaObject ())) {
592a596,606
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("addAll", CollectionTypesSupport.COLLECTION_OF_OBJECT, CollectionTypesSupport.COLLECTION_OF_OBJECT)) {
> 
>             @Override
>             public Object evaluate (Collection target, Object [] params) {
>                 target.addAll ((Collection) params [0]);
>                 return target;
>             }
> 
>         }
> 
>         );
603,603c617,617
<         collectionOps.add (new InternalOperation < Collection > (opf.create ("union", collectionTypes.getSetType (ecorePkg.getEJavaObject ()), collectionTypes.getCollectionType (ecorePkg.getEJavaObject ()))) {
---
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("union", CollectionTypesSupport.COLLECTION_OF_OBJECT, CollectionTypesSupport.COLLECTION_OF_OBJECT)) {
615,615c629,629
<         collectionOps.add (new InternalOperation < Collection > (opf.create ("intersect", collectionTypes.getSetType (ecorePkg.getEJavaObject ()), collectionTypes.getCollectionType (ecorePkg.getEJavaObject ()))) {
---
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("intersect", CollectionTypesSupport.COLLECTION_OF_OBJECT, CollectionTypesSupport.COLLECTION_OF_OBJECT)) {
627,627c641,641
<         collectionOps.add (new InternalOperation < Collection > (opf.create ("without", collectionTypes.getSetType (ecorePkg.getEJavaObject ()), collectionTypes.getCollectionType (ecorePkg.getEJavaObject ()))) {
---
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("without", CollectionTypesSupport.COLLECTION_OF_OBJECT, CollectionTypesSupport.COLLECTION_OF_OBJECT)) {
639,639c653,653
<         collectionOps.add (new InternalOperation < Collection > (opf.create ("toSet", collectionTypes.getSetType (ecorePkg.getEJavaObject ()))) {
---
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("toSet", CollectionTypesSupport.SET_OF_OBJECT)) {
649,649c663,663
<         collectionOps.add (new InternalOperation < Collection > (opf.create ("toList", collectionTypes.getListType (ecorePkg.getEJavaObject ()))) {
---
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("toList", CollectionTypesSupport.LIST_OF_OBJECT)) {
669,669c683,683
<         collectionOps.add (new InternalOperation < Collection > (opf.create ("containsAll", ecorePkg.getEBoolean (), collectionTypes.getCollectionType (ecorePkg.getEJavaObject ()))) {
---
>         collectionOps.add (new InternalOperation < Collection > (opf.create ("containsAll", ecorePkg.getEBoolean (), CollectionTypesSupport.COLLECTION_OF_OBJECT)) {
