12a13,14
> import org.eclipse.emf.ecore.EStructuralFeature;
> 
24a27,30
> import org.eclipse.emf.edit.provider.ViewerNotification;
> 
> import org.eclipse.gmf.mappings.GMFMapFactory;
> 
26a33,34
> import org.eclipse.gmf.mappings.NodeMapping;
> 
27,27c35,35
< public class NodeMappingItemProvider extends AbstractNodeMappingItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
---
> public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
35a44,46
>             addContextMenuPropertyDescriptor (object);
>             addToolPropertyDescriptor (object);
>             addAppearanceStylePropertyDescriptor (object);
40a52,63
>     protected void addContextMenuPropertyDescriptor (Object object) {
>         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_MenuOwner_contextMenu_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_MenuOwner_contextMenu_feature", "_UI_MenuOwner_type"), GMFMapPackage.eINSTANCE.getMenuOwner_ContextMenu (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null));
>     }
> 
>     protected void addToolPropertyDescriptor (Object object) {
>         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_ToolOwner_tool_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_ToolOwner_tool_feature", "_UI_ToolOwner_type"), GMFMapPackage.eINSTANCE.getToolOwner_Tool (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null));
>     }
> 
>     protected void addAppearanceStylePropertyDescriptor (Object object) {
>         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_AppearanceSteward_appearanceStyle_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_AppearanceSteward_appearanceStyle_feature", "_UI_AppearanceSteward_type"), GMFMapPackage.eINSTANCE.getAppearanceSteward_AppearanceStyle (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null));
>     }
> 
44a68,80
>     public Collection getChildrenFeatures (Object object) {
>         if (childrenFeatures == null) {
>             super.getChildrenFeatures (object);
>             childrenFeatures.add (GMFMapPackage.eINSTANCE.getNodeMapping_Children ());
>             childrenFeatures.add (GMFMapPackage.eINSTANCE.getNodeMapping_Compartments ());
>         }
>         return childrenFeatures;
>     }
> 
>     protected EStructuralFeature getChildFeature (Object object, Object child) {
>         return super.getChildFeature (object, child);
>     }
> 
49a86,94
>         if (object instanceof NodeMapping) {
>             NodeMapping mapping = (NodeMapping) object;
>             String result = " <";
>             if (mapping.getDiagramNode () != null) {
>                 result += mapping.getDiagramNode ().getName ();
>             }
>             result += ">";
>             return getString ("_UI_NodeMapping_type") + result;
>         }
54a100,105
>         switch (notification.getFeatureID (NodeMapping.class)) {
>             case GMFMapPackage.NODE_MAPPING__CHILDREN :
>             case GMFMapPackage.NODE_MAPPING__COMPARTMENTS :
>                 fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), true, false));
>                 return;
>         }
59a111,112
>         newChildDescriptors.add (createChildParameter (GMFMapPackage.eINSTANCE.getNodeMapping_Children (), GMFMapFactory.eINSTANCE.createChildReference ()));
>         newChildDescriptors.add (createChildParameter (GMFMapPackage.eINSTANCE.getNodeMapping_Compartments (), GMFMapFactory.eINSTANCE.createCompartmentMapping ()));
