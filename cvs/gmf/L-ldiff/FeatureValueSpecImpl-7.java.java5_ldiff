14a15,15
> import org.eclipse.gmf.mappings.FeatureInitializer;
15,15d14
< import org.eclipse.emf.ecore.util.EcoreUtil;
63,83d62
<     public NotificationChain basicSetFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs) {
<         msgs = eBasicSetContainer ((InternalEObject) newFeatureSeqInitializer, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
<         return msgs;
<     }
< 
<     public void setFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer) {
<         if (newFeatureSeqInitializer != eInternalContainer () || (eContainerFeatureID != GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER && newFeatureSeqInitializer != null)) {
<             if (EcoreUtil.isAncestor (this, newFeatureSeqInitializer)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
< 
<             NotificationChain msgs = null;
<             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
< 
<             if (newFeatureSeqInitializer != null) msgs = ((InternalEObject) newFeatureSeqInitializer).eInverseAdd (this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS, FeatureSeqInitializer.class, msgs);
< 
<             msgs = basicSetFeatureSeqInitializer (newFeatureSeqInitializer, msgs);
<             if (msgs != null) msgs.dispatch ();
< 
<         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, newFeatureSeqInitializer, newFeatureSeqInitializer));
< 
<     }
< 
88a68,68
>                 return eBasicSetContainer (otherEnd, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
89,89d67
<                 return basicSetFeatureSeqInitializer ((FeatureSeqInitializer) otherEnd, msgs);
97,97d75
<                 return basicSetFeatureSeqInitializer (null, msgs);
127,129d105
<             case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER :
<                 setFeatureSeqInitializer ((FeatureSeqInitializer) newValue);
<                 return;
139,139c76,76
<             case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER :
---
>                 return eBasicSetContainer (null, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
140,141d76
<                 setFeatureSeqInitializer ((FeatureSeqInitializer) null);
<                 return;
155a129,156
>     public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass) {
>         if (baseClass == FeatureInitializer.class) {
>             switch (derivedFeatureID) {
>                 case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE :
>                     return GMFMapPackage.FEATURE_INITIALIZER__FEATURE;
>                 case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER :
>                     return GMFMapPackage.FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
>     }
> 
>     public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass) {
>         if (baseClass == FeatureInitializer.class) {
>             switch (baseFeatureID) {
>                 case GMFMapPackage.FEATURE_INITIALIZER__FEATURE :
>                     return GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE;
>                 case GMFMapPackage.FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER :
>                     return GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER;
>                 default :
>                     return - 1;
>             }
>         }
>         return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
>     }
> 
