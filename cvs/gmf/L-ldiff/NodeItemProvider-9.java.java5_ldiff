1,1c1,1
< package org.eclipse.gmf.runtime.notation.provider;
---
> package org.eclipse.gmf.gmfgraph.provider;
10a19,19
> import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
11,11d18
< import org.eclipse.emf.ecore.EObject;
12,12c20,20
< 
---
> 
15,16d12
< import org.eclipse.emf.ecore.EStructuralFeature;
< 
33,33c33,33
< import org.eclipse.gmf.runtime.notation.Node;
---
> import org.eclipse.gmf.gmfgraph.Node;
34,37d33
< 
< import org.eclipse.gmf.runtime.notation.NotationEditPlugin;
< 
< import org.eclipse.gmf.runtime.notation.NotationFactory;
39,39c31,31
< import org.eclipse.gmf.runtime.notation.NotationPackage;
---
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
41,41c35,35
< public class NodeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
---
> public class NodeItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
46a41,41
>     @Override
47,47c42,42
<     public List getPropertyDescriptors (Object object) {
---
>     public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
50a46,46
>             addAffixedParentSidePropertyDescriptor (object);
50,50c45,45
<             addLayoutConstraintPropertyDescriptor (object);
---
>             addResizeConstraintPropertyDescriptor (object);
55,64d50
<     public Collection getChildrenFeatures (Object object) {
<         if (childrenFeatures == null) {
<             super.getChildrenFeatures (object);
<             childrenFeatures.add (NotationPackage.Literals.NODE__LAYOUT_CONSTRAINT);
<         }
<         return childrenFeatures;
<     }
< 
<     protected EStructuralFeature getChildFeature (Object object, Object child) {
<         return super.getChildFeature (object, child);
66a55,56
>     protected void addAffixedParentSidePropertyDescriptor (Object object) {
>         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_Node_affixedParentSide_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_Node_affixedParentSide_feature", "_UI_Node_type"), GMFGraphPackage.eINSTANCE.getNode_AffixedParentSide (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
67,67c51,51
<     protected void addLayoutConstraintPropertyDescriptor (Object object) {
---
>     protected void addResizeConstraintPropertyDescriptor (Object object) {
68,68c52,52
<         itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getString ("_UI_Node_layoutConstraint_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_Node_layoutConstraint_feature", "_UI_Node_type"), NotationPackage.Literals.NODE__LAYOUT_CONSTRAINT, false, null));
---
>         itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_Node_resizeConstraint_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_Node_resizeConstraint_feature", "_UI_Node_type"), GMFGraphPackage.eINSTANCE.getNode_ResizeConstraint (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
70a59,59
>     @Override
74a64,64
>     @Override
75a66,67
>         String label = ((Node) object).getName ();
>         return label == null || label.length () == 0 ? getString ("_UI_Node_type") : getString ("_UI_Node_type") + " " + label;
76,77d65
<         Node node = (Node) object;
<         return getString ("_UI_Node_type") + " " + node.isVisible ();
79a70,70
>     @Override
82a74,75
>             case GMFGraphPackage.NODE__RESIZE_CONSTRAINT :
>             case GMFGraphPackage.NODE__AFFIXED_PARENT_SIDE :
83,83d73
<             case NotationPackage.NODE__LAYOUT_CONSTRAINT :
84,84c76,76
<                 fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), true, false));
---
>                 fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
89a82,82
>     @Override
90,90c83,83
<     protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object) {
---
>     protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
92,95d84
<         newChildDescriptors.add (createChildParameter (NotationPackage.Literals.NODE__LAYOUT_CONSTRAINT, NotationFactory.eINSTANCE.createSize ()));
<         newChildDescriptors.add (createChildParameter (NotationPackage.Literals.NODE__LAYOUT_CONSTRAINT, NotationFactory.eINSTANCE.createLocation ()));
<         newChildDescriptors.add (createChildParameter (NotationPackage.Literals.NODE__LAYOUT_CONSTRAINT, NotationFactory.eINSTANCE.createBounds ()));
<         newChildDescriptors.add (createChildParameter (NotationPackage.Literals.NODE__LAYOUT_CONSTRAINT, NotationFactory.eINSTANCE.createRatio ()));
97a87,89
>     @Override
>     public ResourceLocator getResourceLocator () {
>         return GMFGraphEditPlugin.INSTANCE;
98,105d86
<     public String getCreateChildText (Object owner, Object feature, Object child, Collection selection) {
<         Object childFeature = feature;
<         Object childObject = child;
<         boolean qualify = childFeature == NotationPackage.Literals.VIEW__PERSISTED_CHILDREN || childFeature == NotationPackage.Literals.VIEW__TRANSIENT_CHILDREN;
<         if (qualify) {
<             return getString ("_UI_CreateChild_text2", new Object [] {getTypeText (childObject), getFeatureText (childFeature), getTypeText (owner)});
<         }
<         return super.getCreateChildText (owner, feature, child, selection);
