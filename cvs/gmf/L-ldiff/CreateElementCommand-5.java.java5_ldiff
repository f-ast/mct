2a3,5
> import org.eclipse.core.commands.ExecutionException;
> 
> import org.eclipse.core.runtime.IAdaptable;
3,3d2
< import java.util.Collection;
18a21,24
> import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
> 
> import org.eclipse.gmf.runtime.emf.core.util.PackageUtil;
> 
37a44,44
>     protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
38,38d43
<     protected CommandResult doExecute (IProgressMonitor progressMonitor) {
42,42c48,48
<         if (configureCommand != null && configureCommand.isExecutable ()) {
---
>         if (configureCommand != null && configureCommand.canExecute ()) {
43,43c49,49
<             configureCommand.execute (progressMonitor);
---
>             configureCommand.execute (monitor, info);
46,46c52,52
<         return newOKCommandResult (newElement);
---
>         return CommandResult.newOKCommandResult (newElement);
50,50c56,56
<         ConfigureRequest configureRequest = new ConfigureRequest (newElement, getElementType ());
---
>         ConfigureRequest configureRequest = new ConfigureRequest (getEditingDomain (), newElement, getElementType ());
55a62,62
>         EReference containment = getContainmentFeature ();
56a64,64
>         if (containment != null) {
57,58d63
<         EObject element = eClass.getEPackage ().getEFactoryInstance ().create (eClass);
<         if (getContainmentFeature () != null) {
59a66,67
>             if (element != null) return EMFCoreUtil.create (element, containment, eClass);
> 
59,59c65,65
<             EObject container = getElementToEdit ();
---
>             EObject element = getElementToEdit ();
60,66d65
<             if (container != null) {
<                 if (getContainmentFeature ().isMany ()) {
<                     ((Collection) container.eGet (getContainmentFeature ())).add (element);
<                 } else {
<                     container.eSet (getContainmentFeature (), element);
<                 }
<             }
67a69,69
>         return null;
68,68d68
<         return element;
93a95,103
>         if (containmentFeature == null) {
>             EClass classToEdit = getEClassToEdit ();
>             if (classToEdit != null) {
>                 IElementType type = getElementType ();
>                 if (type != null) {
>                     containmentFeature = PackageUtil.findFeature (classToEdit, type.getEClass ());
>                 }
>             }
>         }
109,109c119,119
<     public boolean isExecutable () {
---
>     public boolean canExecute () {
118a129,129
>             result = result && PackageUtil.canContain (getEClassToEdit (), getContainmentFeature (), getElementType ().getEClass (), false);
119,119c130,130
<             return result && super.isExecutable ();
---
>             return result && super.canExecute ();
