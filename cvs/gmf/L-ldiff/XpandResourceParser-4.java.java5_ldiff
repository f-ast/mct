5,5c5,5
< import java.io.UnsupportedEncodingException;
---
> import java.io.Reader;
6a7,7
> import java.util.ArrayList;
7,11d6
< import org.eclipse.core.resources.IFile;
< 
< import org.eclipse.core.runtime.CoreException;
< 
< import org.eclipse.gmf.internal.xpand.Activator;
22a19,19
>     public XpandResource parse (final Reader source, final String qualifiedTemplateName) throws IOException, ParserException {
23,23d18
<     public XpandResource parse (final IFile file) {
26a23,24
>         final ArrayList < ParserException.ErrorLocationInfo > errors = new ArrayList < ParserException.ErrorLocationInfo > ();
>         final char [] buffer = new StreamConverter ().toCharArray (source);
27,27d22
<         char [] buffer;
28a26,31
>             scanner = new XpandLexer (buffer, qualifiedTemplateName) {
> 
>                 @Override
>                 public void reportError (int left_loc, int right_loc) {
>                     errors.add (XtendResourceParser.createError (this, left_loc, right_loc));
>                     super.reportError (left_loc, right_loc);
29,39d25
<             StreamConverter sc = new StreamConverter ();
<             buffer = sc.toCharArray (file);
<         } catch (final CoreException ex) {
<             Activator.log (ex.getStatus ());
<             return null;
<         } catch (UnsupportedEncodingException ex) {
<             Activator.logError (ex);
<             return null;
<         } catch (IOException ex) {
<             Activator.logError (ex);
<             return null;
40a33,36
> 
>             }
> 
>             ;
41,42d32
<         try {
<             scanner = new XpandLexer (buffer, file.getName ());
46a41,45
>             if (errors.isEmpty ()) {
>                 throw new IOException ("Unexpected exception while parsing");
>             } else {
>                 throw new ParserException (errors);
>             }
47,50d40
<             final int start = scanner.getStreamIndex () - 1;
<             final int end = start + 1;
<             OawMarkerManager.deleteMarkers (file);
<             OawMarkerManager.addErrorMarker (file, e.getMessage (), start, end);
53,53c48,48
<             tpl.setFullyQualifiedName (Activator.getQualifiedName (file));
---
>             tpl.setFullyQualifiedName (qualifiedTemplateName);
