30a31,32
> import org.eclipse.gmf.gmfgraph.DiagramLabel;
> 
40a43,44
> import org.eclipse.gmf.gmfgraph.Label;
> 
68a73,74
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelEditPart;
> 
80a87,92
> import org.eclipse.gmf.graphdef.editor.edit.parts.Label2EditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.Label3EditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelEditPart;
> 
186a199,201
>             if (visualID == Label2EditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>             }
219a235,238
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
253a273,276
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
287a311,314
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
321a349,352
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
391a423,426
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
425a461,464
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
495a535,538
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
529a573,576
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
563a611,614
>             if (visualID == LabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
646a698,701
>             if (visualID == Label3EditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
692a748,756
>         for (Iterator it = modelElement.getLabels ().iterator ();
>         it.hasNext ();) {
>             DiagramLabel childElement = (DiagramLabel) it.next ();
>             int visualID = GMFGraphVisualIDRegistry.getNodeVisualID (view, childElement);
>             if (visualID == DiagramLabelEditPart.VISUAL_ID) {
>                 result.add (new GMFGraphNodeDescriptor (childElement, visualID));
>                 continue;
>             }
>         }
707a772,773
>             case DiagramLabelEditPart.VISUAL_ID :
>                 return getDiagramLabel_2009ContainedLinks (view);
723a790,791
>             case LabelEditPart.VISUAL_ID :
>                 return getLabel_3026ContainedLinks (view);
731a800,801
>             case Label2EditPart.VISUAL_ID :
>                 return getLabel_3027ContainedLinks (view);
741a812,813
>             case Label3EditPart.VISUAL_ID :
>                 return getLabel_3028ContainedLinks (view);
757a830,831
>             case DiagramLabelEditPart.VISUAL_ID :
>                 return getDiagramLabel_2009IncomingLinks (view);
773a848,849
>             case LabelEditPart.VISUAL_ID :
>                 return getLabel_3026IncomingLinks (view);
781a858,859
>             case Label2EditPart.VISUAL_ID :
>                 return getLabel_3027IncomingLinks (view);
791a870,871
>             case Label3EditPart.VISUAL_ID :
>                 return getLabel_3028IncomingLinks (view);
807a888,889
>             case DiagramLabelEditPart.VISUAL_ID :
>                 return getDiagramLabel_2009OutgoingLinks (view);
823a906,907
>             case LabelEditPart.VISUAL_ID :
>                 return getLabel_3026OutgoingLinks (view);
831a916,917
>             case Label2EditPart.VISUAL_ID :
>                 return getLabel_3027OutgoingLinks (view);
841a928,929
>             case Label3EditPart.VISUAL_ID :
>                 return getLabel_3028OutgoingLinks (view);
878a967,975
>     public static List getDiagramLabel_2009ContainedLinks (View view) {
>         DiagramLabel modelElement = (DiagramLabel) view.getElement ();
>         List result = new LinkedList ();
>         result.addAll (getOutgoingFeatureModelFacetLinks_DiagramLabel_Accessor_4004 (modelElement));
>         result.addAll (getOutgoingFeatureModelFacetLinks_Node_ContentPane_4006 (modelElement));
>         result.addAll (getOutgoingFeatureModelFacetLinks_DiagramElement_Figure_4005 (modelElement));
>         return result;
>     }
> 
913a1011,1014
>     public static List getLabel_3026ContainedLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
929a1031,1034
>     public static List getLabel_3027ContainedLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
949a1055,1058
>     public static List getLabel_3028ContainedLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
969a1079,1082
>     public static List getDiagramLabel_2009IncomingLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
1029a1143,1150
>     public static List getLabel_3026IncomingLinks (View view) {
>         Label modelElement = (Label) view.getElement ();
>         Map crossReferences = EcoreUtil.CrossReferencer.find (view.eResource ().getResourceSet ().getResources ());
>         List result = new LinkedList ();
>         result.addAll (getIncomingTypeModelFacetLinks_ChildAccess_4002 (modelElement, crossReferences));
>         return result;
>     }
> 
1061a1183,1190
>     public static List getLabel_3027IncomingLinks (View view) {
>         Label modelElement = (Label) view.getElement ();
>         Map crossReferences = EcoreUtil.CrossReferencer.find (view.eResource ().getResourceSet ().getResources ());
>         List result = new LinkedList ();
>         result.addAll (getIncomingTypeModelFacetLinks_ChildAccess_4002 (modelElement, crossReferences));
>         return result;
>     }
> 
1101a1231,1238
>     public static List getLabel_3028IncomingLinks (View view) {
>         Label modelElement = (Label) view.getElement ();
>         Map crossReferences = EcoreUtil.CrossReferencer.find (view.eResource ().getResourceSet ().getResources ());
>         List result = new LinkedList ();
>         result.addAll (getIncomingTypeModelFacetLinks_ChildAccess_4002 (modelElement, crossReferences));
>         return result;
>     }
> 
1138a1276,1284
>     public static List getDiagramLabel_2009OutgoingLinks (View view) {
>         DiagramLabel modelElement = (DiagramLabel) view.getElement ();
>         List result = new LinkedList ();
>         result.addAll (getOutgoingFeatureModelFacetLinks_DiagramLabel_Accessor_4004 (modelElement));
>         result.addAll (getOutgoingFeatureModelFacetLinks_Node_ContentPane_4006 (modelElement));
>         result.addAll (getOutgoingFeatureModelFacetLinks_DiagramElement_Figure_4005 (modelElement));
>         return result;
>     }
> 
1173a1320,1323
>     public static List getLabel_3026OutgoingLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
1189a1340,1343
>     public static List getLabel_3027OutgoingLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
1209a1364,1367
>     public static List getLabel_3028OutgoingLinks (View view) {
>         return Collections.EMPTY_LIST;
>     }
> 
1315a1474,1483
>     private static Collection getOutgoingFeatureModelFacetLinks_DiagramLabel_Accessor_4004 (DiagramLabel source) {
>         Collection result = new LinkedList ();
>         ChildAccess destination = source.getAccessor ();
>         if (destination == null) {
>             return result;
>         }
>         result.add (new GMFGraphLinkDescriptor (source, destination, GMFGraphElementTypes.DiagramLabelAccessor_4004, DiagramLabelAccessorEditPart.VISUAL_ID));
>         return result;
>     }
> 
