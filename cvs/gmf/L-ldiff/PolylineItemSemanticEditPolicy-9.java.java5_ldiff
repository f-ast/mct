2a3,6
> import java.util.Iterator;
> 
> import org.eclipse.emf.ecore.EAnnotation;
> 
6a11,12
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
> 
10a17,18
> import org.eclipse.gmf.graphdef.editor.edit.commands.PointCreateCommand;
> 
12a21,24
> import org.eclipse.gmf.graphdef.editor.edit.parts.PointEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
> 
16a29,30
> import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
> 
22a37,40
> import org.eclipse.gmf.runtime.notation.Node;
> 
> import org.eclipse.gmf.runtime.notation.View;
> 
24a43,52
>     protected Command getCreateCommand (CreateElementRequest req) {
>         if (GMFGraphElementTypes.Point_3022 == req.getElementType ()) {
>             if (req.getContainmentFeature () == null) {
>                 req.setContainmentFeature (GMFGraphPackage.eINSTANCE.getPolyline_Template ());
>             }
>             return getGEFWrapper (new PointCreateCommand (req));
>         }
>         return super.getCreateCommand (req);
>     }
> 
26a55,55
>         addDestroyChildNodesCommand (cc);
31a61,77
>     protected void addDestroyChildNodesCommand (CompoundCommand cmd) {
>         View view = (View) getHost ().getModel ();
>         EAnnotation annotation = view.getEAnnotation ("Shortcut");
>         if (annotation != null) {
>             return;
>         }
>         for (Iterator it = view.getChildren ().iterator ();
>         it.hasNext ();) {
>             Node node = (Node) it.next ();
>             switch (GMFGraphVisualIDRegistry.getVisualID (node)) {
>                 case PointEditPart.VISUAL_ID :
>                     cmd.add (getDestroyElementCommand (node));
>                     break;
>             }
>         }
>     }
> 
