64a65,66
> import org.eclipse.gef.EditPolicy;
> 
72a75,76
> import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
> 
222a227,258
>         if (! supportsBorderNodes ()) {
>             return;
>         }
>         boolean borderNodesAdded = false;
>         Rectangle parentRect = new Rectangle (parentNode.x, parentNode.y, parentNode.width, parentNode.height);
>         Rectangle extendedRect = parentRect.getCopy ();
>         for (Iterator itr = parentEP.getChildren ().iterator ();
>         itr.hasNext ();) {
>             EditPart ep = (EditPart) itr.next ();
>             if (ep instanceof IBorderItemEditPart && canCreateBorderNode ((IBorderItemEditPart) ep)) {
>                 IBorderItemEditPart bep = (IBorderItemEditPart) ep;
>                 BorderNode bn = new BorderNode (bep, parentNode);
>                 setNodeMetrics (bn, bep.getFigure ().getBounds ());
>                 bn.setOutsideRatio (1f - ((float) bep.getFigure ().getBounds ().getCopy ().intersect (parentEP.getFigure ().getBounds ()).getSize ().getArea ()) / bep.getFigure ().getSize ().getArea ());
>                 editPartToNodeDict.put (bep, bn);
>                 borderNodesAdded = true;
>                 extendedRect.union (new Rectangle (bn.x, bn.y, bn.width, bn.height));
>                 bn.setMinIncomingPadding (getMapMode ().DPtoLP (MIN_EDGE_END_POINTS_PADDING));
>                 bn.setMinOutgoingPadding (getMapMode ().DPtoLP (MIN_EDGE_END_POINTS_PADDING));
>             }
>         }
>         if (borderNodesAdded) {
>             parentNode.getPadding ().add (new Insets (Math.max (extendedRect.width - parentRect.width, extendedRect.height - parentRect.height)));
>         }
>     }
> 
>     protected boolean canCreateBorderNode (IBorderItemEditPart ep) {
>         return ep.getEditPolicy (EditPolicy.PRIMARY_DRAG_ROLE) instanceof NonResizableEditPolicy;
>     }
> 
>     protected boolean supportsBorderNodes () {
>         return false;
