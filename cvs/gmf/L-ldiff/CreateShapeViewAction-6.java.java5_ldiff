2a3,18
> import java.util.ArrayList;
> 
> import java.util.Collection;
> 
> import java.util.Iterator;
> 
> import java.util.List;
> 
> import java.util.Map;
> 
> import org.eclipse.core.runtime.IAdaptable;
> 
> import org.eclipse.core.runtime.IProgressMonitor;
> 
> import org.eclipse.gef.EditPart;
> 
4a21,24
> import org.eclipse.gef.RequestConstants;
> 
> import org.eclipse.gef.requests.CreateRequest;
> 
6a27,30
> import org.eclipse.jface.viewers.StructuredSelection;
> 
> import org.eclipse.swt.widgets.Display;
> 
10a35,36
> import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramGraphicalViewer;
> 
16a43,44
> import org.eclipse.gmf.runtime.notation.View;
> 
46a75,120
>     protected void updateTargetRequest () {
>         super.updateTargetRequest ();
>         CreateViewRequest req = (CreateViewRequest) getTargetRequest ();
>         req.setLocation (getMouseLocation ());
>     }
> 
>     protected void doRun (IProgressMonitor progressMonitor) {
>         super.doRun (progressMonitor);
>         selectAddedObject ();
>     }
> 
>     protected void selectAddedObject () {
>         Object result = ((CreateRequest) getTargetRequest ()).getNewObject ();
>         if (! (result instanceof Collection)) {
>             return;
>         }
>         final List editparts = new ArrayList (1);
>         IDiagramGraphicalViewer viewer = getDiagramGraphicalViewer ();
>         if (viewer == null) {
>             return;
>         }
>         Map editpartRegistry = viewer.getEditPartRegistry ();
>         for (Iterator iter = ((Collection) result).iterator ();
>         iter.hasNext ();) {
>             Object viewAdaptable = iter.next ();
>             if (viewAdaptable instanceof IAdaptable) {
>                 Object editPart = editpartRegistry.get (((IAdaptable) viewAdaptable).getAdapter (View.class));
>                 if (editPart != null) editparts.add (editPart);
> 
>             }
>         }
>         if (! editparts.isEmpty ()) {
>             viewer.setSelection (new StructuredSelection (editparts));
>             Display.getCurrent ().asyncExec (new Runnable () {
> 
>                 public void run () {
>                     EditPart editPart = (EditPart) editparts.get (0);
>                     editPart.performRequest (new Request (RequestConstants.REQ_DIRECT_EDIT));
>                 }
> 
>             }
> 
>             );
>         }
>     }
> 
