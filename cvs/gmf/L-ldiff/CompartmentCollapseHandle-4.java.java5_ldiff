1,1c1,1
< package org.eclipse.gmf.runtime.lite.handles;
---
> package org.eclipse.gmf.runtime.diagram.ui.handles;
2a3,3
> import java.beans.PropertyChangeEvent;
3a12,19
> 
> import org.eclipse.draw2d.StackLayout;
> 
> import org.eclipse.draw2d.TreeSearch;
> 
> import org.eclipse.draw2d.geometry.Dimension;
> 
> import org.eclipse.draw2d.geometry.Rectangle;
3,3c11,11
< import org.eclipse.emf.transaction.NotificationFilter;
---
> import org.eclipse.draw2d.Locator;
4a5,5
> import java.beans.PropertyChangeListener;
5,5c7,7
< import org.eclipse.emf.transaction.ResourceSetChangeEvent;
---
> import org.eclipse.draw2d.Cursors;
7,7c9,9
< import org.eclipse.emf.transaction.ResourceSetListener;
---
> import org.eclipse.draw2d.IFigure;
9,9d8
< import org.eclipse.emf.transaction.ResourceSetListenerImpl;
11,11d10
< import org.eclipse.emf.transaction.util.TransactionUtil;
15,15c23,23
< import org.eclipse.gef.GraphicalEditPart;
---
> import org.eclipse.gef.handles.AbstractHandle;
17,17c33,33
< import org.eclipse.gmf.internal.runtime.lite.PluginImages;
---
> import org.eclipse.gmf.runtime.diagram.ui.internal.figures.CollapseFigure;
18a27,27
> import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
19,19c41,41
< import org.eclipse.gmf.runtime.notation.DrawerStyle;
---
> import org.eclipse.gmf.runtime.notation.DrawerStyle;
20a29,29
> import org.eclipse.gmf.runtime.diagram.ui.editparts.IResizableCompartmentEditPart;
21,21c43,43
< import org.eclipse.gmf.runtime.notation.NotationPackage;
---
> import org.eclipse.gmf.runtime.notation.NotationPackage;
22a31,31
> import org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure;
23,23c25,25
< import org.eclipse.gmf.runtime.notation.View;
---
> import org.eclipse.gmf.runtime.diagram.core.listener.PresentationListener;
25,25d32
< import org.eclipse.swt.graphics.Image;
26a35,35
> import org.eclipse.gmf.runtime.diagram.ui.internal.tools.CompartmentCollapseTracker;
27,28d34
< public class CompartmentCollapseHandle extends CompartmentNameHandle {
<     private ResourceSetListener myResourceSetListener;
29a37,37
> import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
30,41d36
<     public CompartmentCollapseHandle (GraphicalEditPart owner, String title) {
<         super (owner, title);
<         View ownerView = getOwnerView ();
<         NotificationFilter filter = NotificationFilter.createNotifierFilter (ownerView).and (NotificationFilter.createFeatureFilter (NotationPackage.eINSTANCE.getView_Styles ()));
<         NotificationFilter childrenFilter = NotificationFilter.createNotifierFilter (ownerView).and (NotificationFilter.createFeatureFilter (NotationPackage.eINSTANCE.getView_PersistedChildren ()).or (NotificationFilter.createFeatureFilter (NotationPackage.eINSTANCE.getView_TransientChildren ())));
<         filter = filter.or (childrenFilter);
<         DrawerStyle drawerStyle = (DrawerStyle) ownerView.getStyle (NotationPackage.eINSTANCE.getDrawerStyle ());
<         if (drawerStyle != null) {
<             NotificationFilter styleFilter = NotificationFilter.createNotifierFilter (drawerStyle).and (NotificationFilter.createFeatureFilter (NotationPackage.eINSTANCE.getDrawerStyle_Collapsed ()));
<             filter = filter.or (styleFilter);
<         }
<         myResourceSetListener = new ResourceSetListenerImpl (filter) {
42a39,39
> import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;
43,46d38
<             @Override
<             public boolean isAggregatePrecommitListener () {
<                 return true;
<             }
48,51d40
<             @Override
<             public void resourceSetChanged (ResourceSetChangeEvent event) {
<                 updateIcon ();
<             }
53,53d42
<         }
54a45,54
> import org.eclipse.gmf.runtime.notation.View;
> 
> public class CompartmentCollapseHandle extends AbstractHandle implements PropertyChangeListener {
>     private class CollapseHandleLocator implements Locator {
> 
>         public void relocate (IFigure target) {
>             Rectangle theBounds = getOwnerFigure ().getClientArea ().getCopy ();
>             getOwnerFigure ().translateToAbsolute (theBounds);
>             target.translateToRelative (theBounds);
>             target.setLocation (theBounds.getLocation ());
55,56d44
<         ;
<         updateIcon ();
59,60d56
<     private void updateIcon () {
<         getLabel ().setIcon (getCollapseIcon ());
62a59,74
>     public static Dimension SIZE = new Dimension (MapMode.LPtoDP (ResizableCompartmentFigure.MIN_CLIENT_SIZE), MapMode.LPtoDP (ResizableCompartmentFigure.MIN_CLIENT_SIZE));
>     protected CollapseFigure collapseFigure = null;
> 
>     public CompartmentCollapseHandle (IGraphicalEditPart owner) {
>         setOwner (owner);
>         setLocator (new CollapseHandleLocator ());
>         setCursor (Cursors.ARROW);
>         setSize (SIZE);
>         setLayoutManager (new StackLayout ());
>         add (collapseFigure = new CollapseFigure ());
>         View view = owner.getNotationView ();
>         if (view != null) {
>             DrawerStyle style = (DrawerStyle) view.getStyle (NotationPackage.eINSTANCE.getDrawerStyle ());
>             if (style != null) {
>                 collapseFigure.setCollapsed (style.isCollapsed ());
>                 return;
63,65d58
<     private Image getCollapseIcon () {
<         if (isEmptyContents ()) {
<             return null;
67,70d75
<         if (isCollapsed ()) {
<             return PluginImages.get (PluginImages.IMG_HANDLE_COLLAPSE);
<         } else {
<             return PluginImages.get (PluginImages.IMG_HANDLE_EXPAND);
71a77,77
>         collapseFigure.setCollapsed (false);
73a80,82
>     public IFigure findFigureAt (int x, int y, TreeSearch search) {
>         IFigure found = super.findFigureAt (x, y, search);
>         return (collapseFigure.equals (found)) ? this : found;
74,77d79
<     private boolean isCollapsed () {
<         View ownerView = getOwnerView ();
<         if (ownerView == null) {
<             return false;
78a84,86
> 
>     protected DragTracker createDragTracker () {
>         return new CompartmentCollapseTracker ((IResizableCompartmentEditPart) getOwner ());
79,80d83
<         DrawerStyle drawerStyle = (DrawerStyle) ownerView.getStyle (NotationPackage.eINSTANCE.getDrawerStyle ());
<         return drawerStyle != null && drawerStyle.isCollapsed ();
82a89,91
>     public void propertyChange (PropertyChangeEvent evt) {
>         if (evt.getPropertyName ().equals (Properties.ID_COLLAPSED)) collapseFigure.setCollapsed (((Boolean) evt.getNewValue ()).booleanValue ());
> 
83,84d88
<     private View getOwnerView () {
<         return getOwner ().getModel () instanceof View ? (View) getOwner ().getModel () : null;
87,87d93
<     @Override
89a96,100
>         IGraphicalEditPart owner = (IGraphicalEditPart) getOwner ();
>         View view = owner.getNotationView ();
>         if (view != null) {
>             PresentationListener.getInstance ().addPropertyChangeListener (owner.getNotationView (), CompartmentCollapseHandle.this);
>         }
90,91d95
<         View ownerView = getOwnerView ();
<         TransactionUtil.getEditingDomain (ownerView).addResourceSetListener (myResourceSetListener);
94,94d102
<     @Override
95a104,105
>         IGraphicalEditPart owner = (IGraphicalEditPart) getOwner ();
>         PresentationListener.getInstance ().removePropertyChangeListener (owner.getNotationView (), this);
96,97d103
<         View ownerView = getOwnerView ();
<         TransactionUtil.getEditingDomain (ownerView).removeResourceSetListener (myResourceSetListener);
101,116d108
<     @Override
<     public DragTracker getDragTracker () {
<         if (getOwnerView () != null && ! isEmptyContents ()) {
<             return new CompartmentCollapseTracker (getOwner ());
<         }
<         return null;
<     }
< 
<     protected boolean isEmptyContents () {
<         if (isCollapsed ()) {
<             return getOwnerView () == null || getOwnerView ().getVisibleChildren ().isEmpty ();
<         } else {
<             return getOwner ().getChildren ().isEmpty ();
<         }
<     }
< 
