6a7,8
> import java.util.Map;
> 
34a37,38
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
> 
38a43,48
> import org.eclipse.gmf.graphdef.editor.expressions.GMFGraphAbstractExpression;
> 
> import org.eclipse.gmf.graphdef.editor.expressions.GMFGraphOCLFactory;
> 
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphDiagramEditorPlugin;
> 
281a292,292
>         private static GMFGraphAbstractExpression NodeContentPane_4006_SourceExpression;
335a347,358
>             try {
>                 if (source == null) {
>                     return true;
>                 }
>                 if (NodeContentPane_4006_SourceExpression == null) {
>                     Map env = Collections.singletonMap (OPPOSITE_END_VAR, GMFGraphPackage.eINSTANCE.getChildAccess ());
>                     NodeContentPane_4006_SourceExpression = GMFGraphOCLFactory.getExpression ("not self.oclIsKindOf(gmfgraph::DiagramLabel)", GMFGraphPackage.eINSTANCE.getNode (), env);
>                 }
>                 Object sourceVal = NodeContentPane_4006_SourceExpression.evaluate (source, Collections.singletonMap (OPPOSITE_END_VAR, target));
>                 if (false == sourceVal instanceof Boolean || ! ((Boolean) sourceVal).booleanValue ()) {
>                     return false;
>                 }
336a360,363
>             } catch (Exception e) {
>                 GMFGraphDiagramEditorPlugin.getInstance ().logError ("Link constraint evaluation error", e);
>                 return false;
>             }
