4a5,6
> import java.util.Collection;
> 
42a45,46
> import org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet;
> 
190a195,196
> import org.eclipse.gmf.mappings.DesignLabelMapping;
> 
200a207,208
> import org.eclipse.gmf.mappings.FeatureLabelMapping;
> 
634a643,644
>         if (mapping instanceof FeatureLabelMapping) {
>             FeatureLabelMapping flMapping = (FeatureLabelMapping) mapping;
635,635d642
<         if (mapping.getFeatures ().size () > 0) {
636a646,646
>             for (EAttribute attr : (Collection < ? extends EAttribute >) flMapping.getFeatures ()) {
637,638d645
<             for (Iterator features = mapping.getFeatures ().iterator ();
<             features.hasNext ();) {
639,639c647,647
<                 modelFacet.getMetaFeatures ().add (findGenFeature ((EAttribute) features.next ()));
---
>                 modelFacet.getMetaFeatures ().add (findGenFeature (attr));
641,641c649,649
<             modelFacet.setViewPattern (mapping.getViewPattern ());
---
>             modelFacet.setViewPattern (flMapping.getViewPattern ());
642,642c650,650
<             modelFacet.setEditPattern (mapping.getEditPattern ());
---
>             modelFacet.setEditPattern (flMapping.getEditPattern ());
644a653,655
>         if (mapping instanceof DesignLabelMapping) {
>             DesignLabelModelFacet modelFacet = GMFGenFactory.eINSTANCE.createDesignLabelModelFacet ();
>             return modelFacet;
645,645d652
<         if (! mapping.isReadOnly ()) {
721a732,738
>         for (LabelMapping labelMapping : (Collection < ? extends LabelMapping >) entry.getLabelMappings ()) {
>             if (labelMapping instanceof FeatureLabelMapping) {
>                 final EClass domainElement = labelMapping.getMapEntry ().getDomainContext ();
>                 for (EAttribute attr : (Collection < ? extends EAttribute >) ((FeatureLabelMapping) labelMapping).getFeatures ()) {
>                     if (! attr.getEContainingClass ().isSuperTypeOf (domainElement)) {
>                         return false;
>                     }
722,725d731
<         boolean ok = true;
<         for (Iterator it = entry.getLabelMappings ().iterator ();
<         ok && it.hasNext ();) {
<             ok = checkLabelFeatureValidity ((LabelMapping) it.next ());
727,727c742,742
<         return ok;
---
>         return true;
729,736d740
< 
<     private static boolean checkLabelFeatureValidity (LabelMapping labelMapping) {
<         final EClass domainElement = labelMapping.getMapEntry ().getDomainContext ();
<         boolean isOk = true;
<         for (Iterator it = labelMapping.getFeatures ().iterator ();
<         isOk && it.hasNext ();) {
<             EClass attrContainer = ((EAttribute) it.next ()).getEContainingClass ();
<             isOk = attrContainer.isSuperTypeOf (domainElement);
738,738d741
<         return isOk;
