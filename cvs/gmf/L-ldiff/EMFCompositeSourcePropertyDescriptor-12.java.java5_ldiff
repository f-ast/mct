14a15,16
> import org.eclipse.emf.common.ui.celleditor.ExtendedDialogCellEditor;
> 
32a35,36
> import org.eclipse.emf.edit.ui.celleditor.FeatureEditorDialog;
> 
54a59,60
> import org.eclipse.swt.widgets.Control;
> 
130,130c136,136
<             final Collection choiceOfValues = getChoiceOfValues ();
---
>             final List choiceOfValues = getChoiceOfValues ();
132,132c138,138
<                 if (feature.isMany ()) {
---
>                 if (getItemDescriptor ().isMany (getObject ())) {
141a148,148
>                     if (valid) {
142a150,150
>                     }
142,142c149,149
<                     if (valid) result = createComboBoxCellEditor (composite);
---
>                         result = createDialogCellEditor (composite, feature, choiceOfValues);
143,143d149
< 
150a158,158
>                         if (getItemDescriptor ().isMany (getObject ())) {
151,151d157
<                         if (feature.isMany ()) {
152,152c159,159
<                             result = createComboBoxCellEditor (composite);
---
>                             result = createDialogCellEditor (composite, feature, choiceOfValues);
217a225,238
>     protected CellEditor createDialogCellEditor (Composite composite, final EStructuralFeature feature, final List choiceOfValues) {
>         return new ExtendedDialogCellEditor (composite, getEditLabelProvider ()) {
> 
>             protected Object openDialogBox (Control cellEditorWindow) {
>                 FeatureEditorDialog dialog = new FeatureEditorDialog (cellEditorWindow.getShell (), getLabelProvider (), getObject (), feature.getEType (), (List) ((IItemPropertySource) itemPropertyDescriptor.getPropertyValue (object)).getEditableValue (object), getDisplayName (), choiceOfValues);
>                 dialog.open ();
>                 return dialog.getResult ();
>             }
> 
>         }
> 
>         ;
>     }
> 
267a289,291
>         if (value instanceof IItemPropertySource) {
>             return (IItemPropertySource) value;
>         }
