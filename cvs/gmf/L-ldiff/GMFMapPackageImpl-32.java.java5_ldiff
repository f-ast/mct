547a548,555
>     public EAttribute getMetricRule_LowLimit () {
>         return (EAttribute) metricRuleEClass.getEStructuralFeatures ().get (3);
>     }
> 
>     public EAttribute getMetricRule_HighLimit () {
>         return (EAttribute) metricRuleEClass.getEStructuralFeatures ().get (4);
>     }
> 
549,549c557,557
<         return (EReference) metricRuleEClass.getEStructuralFeatures ().get (3);
---
>         return (EReference) metricRuleEClass.getEStructuralFeatures ().get (5);
683a692,693
>         createEAttribute (metricRuleEClass, METRIC_RULE__LOW_LIMIT);
>         createEAttribute (metricRuleEClass, METRIC_RULE__HIGH_LIMIT);
829a840,841
>         initEAttribute (getMetricRule_LowLimit (), ecorePackage.getEDoubleObject (), "lowLimit", null, 0, 1, MetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getMetricRule_HighLimit (), ecorePackage.getEDoubleObject (), "highLimit", null, 0, 1, MetricRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
896a909,909
>         addAnnotation (metricRuleEClass, source, new String [] {"ocl", "not lowLimit.oclIsUndefined() and not highLimit.oclIsUndefined()  implies lowLimit < highLimit", "description", "Metric value \'lowLimit\' must be smaller then \'highLimit\'"});
