13,16d12
< import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;
< 
< import org.eclipse.gmf.codegen.gmfgen.GenNode;
< 
23,24d18
< import org.eclipse.gmf.internal.common.reconcile.Matcher;
< 
59a50,53
>         restore (GMFGEN.getGenDiagram (), GMFGEN.getGenCommonBase_NotationViewFactoryClassName ());
>         restore (GMFGEN.getGenDiagram (), GMFGEN.getGenCommonBase_EditPartClassName ());
>         restore (GMFGEN.getGenDiagram (), GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName ());
>         restore (GMFGEN.getGenDiagram (), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName ());
60,60c54,54
<         preserveIfSet (GMFGEN.getGenDiagram (), GMFGEN.getGenDiagram_Synchronized ());
---
>         preserveIfSet (GMFGEN.getGenDiagram (), GMFGEN.getGenDiagram_Synchronized ());
69a68,79
>         for (EClass node : new EClass [] {GMFGEN.getGenTopLevelNode (), GMFGEN.getGenChildNode (), GMFGEN.getGenChildLabelNode (), GMFGEN.getGenChildSideAffixedNode ()}) {
>             setMatcher (node, new VisualIDMatcher ());
>             restore (node, GMFGEN.getGenCommonBase_NotationViewFactoryClassName ());
>             restore (node, GMFGEN.getGenCommonBase_EditPartClassName ());
>             restore (node, GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName ());
>             restore (node, GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName ());
>             restore (node, GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName ());
>             restore (node, GMFGEN.getGenNode_GraphicalNodeEditPolicyClassName ());
>             restore (node, GMFGEN.getGenNode_CreateCommandClassName ());
>         }
>         setMatcher (GMFGEN.getGenCompartment (), new VisualIDMatcher ());
>         restore (GMFGEN.getGenCompartment (), GMFGEN.getGenCommonBase_NotationViewFactoryClassName ());
70,70c80,80
<         restore (GMFGEN.getGenDiagram (), GMFGEN.getGenCommonBase_EditPartClassName ());
---
>         restore (GMFGEN.getGenCompartment (), GMFGEN.getGenCommonBase_EditPartClassName ());
71,78d80
<         setMatcher (GMFGEN.getGenTopLevelNode (), getGenNodeMatcher ());
<         preserveIfNotByPattern (GMFGEN.getGenTopLevelNode (), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName (), ".*" + GenChildContainer.CANONICAL_EDIT_POLICY_SUFFIX);
<         preserveIfNotByPattern (GMFGEN.getGenTopLevelNode (), GMFGEN.getGenNode_GraphicalNodeEditPolicyClassName (), ".*" + GenNode.GRAPHICAL_NODE_EDIT_POLICY_SUFFIX);
<         restore (GMFGEN.getGenTopLevelNode (), GMFGEN.getGenCommonBase_EditPartClassName ());
<         preserveIfSet (GMFGEN.getGenTopLevelNode (), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName ());
<         setMatcher (GMFGEN.getGenChildNode (), getGenNodeMatcher ());
<         preserveIfNotByPattern (GMFGEN.getGenChildNode (), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName (), ".*" + GenChildContainer.CANONICAL_EDIT_POLICY_SUFFIX);
<         preserveIfNotByPattern (GMFGEN.getGenChildNode (), GMFGEN.getGenNode_GraphicalNodeEditPolicyClassName (), ".*" + GenNode.GRAPHICAL_NODE_EDIT_POLICY_SUFFIX);
79,79c81,81
<         restore (GMFGEN.getGenChildNode (), GMFGEN.getGenCommonBase_EditPartClassName ());
---
>         restore (GMFGEN.getGenCompartment (), GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName ());
80,80c82,82
<         preserveIfSet (GMFGEN.getGenChildNode (), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName ());
---
>         restore (GMFGEN.getGenCompartment (), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName ());
81,85d82
<         setMatcher (GMFGEN.getGenChildLabelNode (), getGenNodeMatcher ());
<         preserveIfSet (GMFGEN.getGenChildLabelNode (), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName ());
<         setMatcher (GMFGEN.getGenChildSideAffixedNode (), getGenNodeMatcher ());
<         preserveIfSet (GMFGEN.getGenChildSideAffixedNode (), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName ());
<         setMatcher (GMFGEN.getGenCompartment (), new ReflectiveMatcher (GMFGEN.getGenCompartment_Title ()));
90,90c129,129
<         restore (GMFGEN.getGenCompartment (), GMFGEN.getGenCommonBase_EditPartClassName ());
---
>         restore (GMFGEN.getMetamodelType (), GMFGEN.getMetamodelType_EditHelperClassName ());
94a91,97
>         restore (GMFGEN.getGenLink (), GMFGEN.getGenLink_ReorientCommandClassName ());
>         for (EClass label : new EClass [] {GMFGEN.getGenLinkLabel (), GMFGEN.getGenNodeLabel (), GMFGEN.getGenExternalNodeLabel ()}) {
>             setMatcher (label, new VisualIDMatcher ());
>             restore (label, GMFGEN.getGenCommonBase_NotationViewFactoryClassName ());
>             restore (label, GMFGEN.getGenCommonBase_EditPartClassName ());
>             restore (label, GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName ());
>         }
128a133,133
>         restore (GMFGEN.getSpecializationType (), GMFGEN.getSpecializationType_EditHelperAdviceClassName ());
166a172,173
>         setMatcher (GMFGEN.getGenDiagramPreferences (), ALWAYS_MATCH);
>         setCopier (GMFGEN.getGenDiagramPreferences (), Copier.COMPLETE_COPY);
167,179d171
<     }
< 
<     private Matcher getGenNodeMatcher () {
<         return new ReflectiveMatcher (GMFGEN.getGenNode (), new ReflectiveMatcher.Reflector () {
< 
<             public Object reflect (EObject target) {
<                 GenNode genNode = (GenNode) target;
<                 return genNode.getDomainMetaClass ();
<             }
< 
<         }
< 
<         );
194,197d187
<     private void preserveIfNotByPattern (EClass eClass, EAttribute feature, String pattern) {
<         addDecision (eClass, new StringPatternDecision (pattern, feature));
<     }
< 
