46a47,47
>     private final ProposalComparator comparator;
49a51,51
>         this.comparator = new ProposalComparator ();
63,63c65,65
<             List < ICompletionProposal > proposals = new ArrayList < ICompletionProposal > ();
---
>             List < ICompletionProposal > proposals = new ArrayList < ICompletionProposal > (20);
67a70,70
>                 Collections.sort (proposals, comparator);
70a74,76
>                 List < ICompletionProposal > ep = new ExpressionProposalComputer ().computeProposals (expression, ctx, f);
>                 Collections.sort (ep, comparator);
>                 proposals.addAll (ep);
71,71d73
<                 proposals.addAll (new ExpressionProposalComputer ().computeProposals (expression, ctx, f));
72a78,79
>                 Collections.sort (kp, comparator);
>                 proposals.addAll (kp);
72,72c77,77
<                 proposals.addAll (new KeywordProposalComputer (textPastInsertionPoint).computeProposals (txt, ctx, f));
---
>                 List < ICompletionProposal > kp = new KeywordProposalComputer (textPastInsertionPoint).computeProposals (txt, ctx, f);
75,75c82,82
<                 proposals.addAll (new ExpandProposalComputer ().computeProposals (txt, ctx, f));
---
>                 List < ICompletionProposal > ep = new ExpandProposalComputer ().computeProposals (txt, ctx, f);
75a83,84
>                 Collections.sort (ep, comparator);
>                 proposals.addAll (ep);
79,79c88,88
<                 proposals.addAll (new StatementProposalComputer ().computeProposals (txt, ctx, f));
---
>                 List < ICompletionProposal > sp = new StatementProposalComputer ().computeProposals (txt, ctx, f);
79a89,90
>                 Collections.sort (sp, comparator);
>                 proposals.addAll (sp);
82a121,121
>     private static class ProposalComparator implements Comparator < ICompletionProposal > {
83,83d120
<             Collections.sort (proposals, new Comparator < ICompletionProposal > () {
84,84c122,122
< 
---
> 
84a123,125
>         public int compare (final ICompletionProposal p1, final ICompletionProposal p2) {
>             return p1.getDisplayString ().compareTo (p2.getDisplayString ());
>         }
85,87d122
<                 public int compare (final ICompletionProposal p1, final ICompletionProposal p2) {
<                     return p1.getDisplayString ().compareTo (p2.getDisplayString ());
<                 }
88,88c126,126
< 
---
> 
88a127,127
>     }
89,89d126
<             }
90,90c128,128
< 
---
> 
91,91d128
<             );
