15,15c21,21
< import org.eclipse.emf.ecore.EObject;
---
> import org.eclipse.emf.ecore.EObject;
16,19d21
< 
< import org.eclipse.gef.commands.Command;
< 
< import org.eclipse.jface.viewers.IStructuredSelection;
20a61,62
> import org.eclipse.jface.viewers.IStructuredSelection;
> 
21,21c63,63
< import org.eclipse.jface.viewers.StructuredSelection;
---
> import org.eclipse.jface.viewers.StructuredSelection;
21a64,70
> 
> import org.eclipse.ui.IObjectActionDelegate;
> 
> import org.eclipse.ui.IWorkbenchPart;
> 
> import org.eclipse.ui.IWorkbenchWindowActionDelegate;
> 
23a12,12
> 
23,23c11,11
< import org.eclipse.ui.IObjectActionDelegate;
---
> import org.eclipse.core.commands.ExecutionException;
25,25c19,19
< import org.eclipse.ui.IWorkbenchPart;
---
> import org.eclipse.core.runtime.Status;
26a25,25
> import org.eclipse.emf.transaction.util.TransactionUtil;
27,27c23,23
< import org.eclipse.ui.IWorkbenchWindowActionDelegate;
---
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
28a27,27
> import org.eclipse.gef.commands.Command;
29,29c31,31
< import org.eclipse.gmf.runtime.common.core.command.CommandResult;
---
> import org.eclipse.gmf.runtime.common.core.util.Log;
32a39,42
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
> 
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
> 
33,33c43,43
< import org.eclipse.gmf.runtime.diagram.core.internal.services.semantic.DuplicateElementsRequest;
---
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
33a44,44
> 
34a17,17
> import org.eclipse.core.runtime.IStatus;
34a33,33
> import org.eclipse.gmf.runtime.common.core.util.Trace;
35,35d16
< import org.eclipse.gmf.runtime.diagram.core.internal.services.semantic.SemanticService;
46a51,56
> import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
> 
> import org.eclipse.gmf.runtime.emf.type.core.IElementType;
> 
> import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;
> 
60,60c80,80
<             request = new DuplicateElementsRequest ();
---
>             request = new DuplicateElementsRequest (getEditingDomain (getStructuredSelection ()));
63,63c83,83
<         if (cmd != null && cmd.isExecutable ());
---
>         if (cmd != null && cmd.canExecute ()) {
63a84,86
>             try {
>                 IStatus status = cmd.execute (progressMonitor, null);
>                 setStatus (status);
64,66d83
< 
<         {
<             CommandResult result = getCommandManager ().execute (cmd);
67,67c87,87
<             if (result.getStatus ().isOK ()) {
---
>                 if (status.isOK ()) {
72a93,100
>             } catch (ExecutionException e) {
>                 IStatus status = new Status (Status.ERROR, DiagramUIPlugin.getPluginId (), DiagramUIStatusCodes.COMMAND_FAILURE, e.getLocalizedMessage (), e);
>                 setStatus (status);
>                 Trace.catching (DiagramUIPlugin.getInstance (), DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass (), "doRun", e);
>                 Log.error (DiagramUIPlugin.getInstance (), DiagramUIStatusCodes.COMMAND_FAILURE, e.getLocalizedMessage (), e);
>             }
>         }
>     }
73,73d92
<         }}
76,76c103,103
<         ICommand cmd = (workbenchPart instanceof IDiagramWorkbenchPart) ? getDuplicateViewCommand (selection, workbenchPart, new DuplicateRequest ()) : getDuplicateElementsCommand (selection, new DuplicateElementsRequest ());
---
>         ICommand cmd = (workbenchPart instanceof IDiagramWorkbenchPart) ? getDuplicateViewCommand (selection, workbenchPart, new DuplicateRequest ()) : getDuplicateElementsCommand (selection, new DuplicateElementsRequest (getEditingDomain (selection)));
77,77c104,104
<         return (cmd != null && cmd.isExecutable ());
---
>         return (cmd != null && cmd.canExecute ());
90a118,121
>             IElementType elementType = ElementTypeRegistry.getInstance ().getElementType (request.getEditHelperContext ());
>             if (elementType != null) {
>                 return elementType.getEditCommand (request);
>             }
91,91d117
<             return SemanticService.getInstance ().getCommand (request);
134a165,182
>     public static TransactionalEditingDomain getEditingDomain (IStructuredSelection selection) {
>         for (Iterator i = selection.iterator ();
>         i.hasNext ();) {
>             EObject element = (EObject) ((IAdaptable) i.next ()).getAdapter (EObject.class);
>             if (element != null) {
>                 TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain (element);
>                 if (editingDomain != null) {
>                     return editingDomain;
>                 }
>             }
>         }
>         return null;
>     }
> 
>     protected TransactionalEditingDomain getEditingDomain () {
>         return getEditingDomain (getStructuredSelection ());
>     }
> 
