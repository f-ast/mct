51,52d54
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
< 
66a33,33
> import org.eclipse.emf.transaction.DemultiplexingListener;
67,67d32
< import org.eclipse.gmf.runtime.emf.core.edit.DemuxingMListener;
68,68c34,34
< 
---
> 
68a35,35
> import org.eclipse.emf.transaction.NotificationFilter;
69,69d34
< import org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener;
70,70c36,36
< 
---
> 
71,78d36
< import org.eclipse.gmf.runtime.emf.core.edit.MFilter;
< 
< import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
< 
< import org.eclipse.gmf.runtime.emf.core.edit.MUndoInterval;
< 
< import org.eclipse.gmf.runtime.emf.core.exceptions.MSLActionAbandonedException;
< 
97,97c87,87
< public abstract class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {
---
> public abstract class AbstractModelerPropertySection extends AbstractPropertySection {
98a89,97
>     protected DemultiplexingListener eventListener = new DemultiplexingListener (getFilter ()) {
> 
>         protected void handleNotification (TransactionalEditingDomain domain, Notification notification) {
>             update (notification, (EObject) notification.getNotifier ());
>         }
> 
>     }
> 
>     ;
99,99d88
<     protected DemuxingMListener eventListener = new DemuxingMListener (this);
106a105,105
>     private TransactionalEditingDomain editingDomain = null;
175a175,178
>         try {
>             getEditingDomain ().runExclusive (code);
>         } catch (InterruptedException e) {
>             Trace.catching (DiagramPropertiesPlugin.getDefault (), DiagramPropertiesDebugOptions.EXCEPTIONS_CATCHING, getClass (), "executeAsReadAction", e);
176,185d174
<         executeAsReadAction (new MRunnable () {
< 
<             public Object run () {
<                 code.run ();
<                 return null;
<             }
< 
<         }
< 
<         );
187,189d179
< 
<     protected Object executeAsReadAction (MRunnable code) {
<         return MEditingDomainGetter.getMEditingDomain (getEObjectList ()).runAsRead (code);
216a207,209
>         if (editingDomain != null) {
>             editingDomain.removeResourceSetListener (getEventListener ());
>         }
217,217d206
<         eventListener.stopListening ();
221a214,217
>         editingDomain = getEditingDomain ();
>         if (editingDomain != null) {
>             editingDomain.addResourceSetListener (getEventListener ());
>         }
222,222d213
<         eventListener.startListening ();
241a237,238
>     public NotificationFilter getFilter () {
>         return NotificationFilter.createEventTypeFilter (Notification.SET).and (NotificationFilter.createNotifierTypeFilter (EObject.class));
242,267d236
<     public MFilter getFilter () {
<         return MFilter.ELEMENT_MODIFIED_FILTER;
<     }
< 
<     public void handleResourceLoadedEvent (Notification notification, Resource resource) {
<     }
< 
<     public void handleResourceUnloadedEvent (Notification notification, Resource resource, EObject modelRoot) {
<     }
< 
<     public void handleResourceDirtiedEvent (Notification notification, Resource resource) {
<     }
< 
<     public void handleResourceSavedEvent (Notification notification, Resource resource) {
<     }
< 
<     public void handleResourceImportedEvent (Notification notification, Resource resource) {
<     }
< 
<     public void handleResourceExportedEvent (Notification notification, Resource resource) {
<     }
< 
<     public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement) {
<     }
< 
<     public void handleElementDeletedEvent (Notification notification, EObject owner, EObject oldElement) {
301,311d271
<     protected void handleException (MSLActionAbandonedException exception) {
<         Trace.catching (DiagramPropertiesPlugin.getDefault (), DiagramPropertiesDebugOptions.EXCEPTIONS_CATCHING, getClass (), exception.getMessage (), exception);
<         Log.warning (DiagramPropertiesPlugin.getDefault (), DiagramPropertiesStatusCodes.IGNORED_EXCEPTION_WARNING, exception.getMessage (), exception);
<     }
< 
<     public void handleUndoIntervalClosedEvent (Notification notification, MUndoInterval undoInterval) {
<     }
< 
<     public void handleUndoIntervalsFlushedEvent (Notification notification, MUndoInterval undoInterval) {
<     }
< 
320,320c280,280
<     protected DemuxingMListener getEventListener () {
---
>     protected DemultiplexingListener getEventListener () {
349a310,311
>         } else if (! getEObjectList ().isEmpty ()) {
>             return TransactionUtil.getEditingDomain (getEObjectList ().get (0));
350a313,313
> 
