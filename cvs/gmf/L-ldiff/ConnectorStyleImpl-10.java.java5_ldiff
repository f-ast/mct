32,33d31
<     protected static final byte [] UUID_EDEFAULT = null;
<     protected byte [] uUID = UUID_EDEFAULT;
34a33,36
>     protected static final int ROUTING_EFLAG_OFFSET = 8;
>     protected static final int ROUTING_EFLAG_DEFAULT = Routing.VALUES.indexOf (ROUTING_EDEFAULT) << ROUTING_EFLAG_OFFSET;
>     private static final Routing [] ROUTING_EFLAG_VALUES = (Routing []) Routing.VALUES.toArray (new Routing [Routing.VALUES.size ()]);
>     protected static final int ROUTING_EFLAG = 0x3 << ROUTING_EFLAG_OFFSET;
35,35d32
<     protected Routing routing = ROUTING_EDEFAULT;
36a38,41
>     protected static final int SMOOTHNESS_EFLAG_OFFSET = 10;
>     protected static final int SMOOTHNESS_EFLAG_DEFAULT = Smoothness.VALUES.indexOf (SMOOTHNESS_EDEFAULT) << SMOOTHNESS_EFLAG_OFFSET;
>     private static final Smoothness [] SMOOTHNESS_EFLAG_VALUES = (Smoothness []) Smoothness.VALUES.toArray (new Smoothness [Smoothness.VALUES.size ()]);
>     protected static final int SMOOTHNESS_EFLAG = 0x3 << SMOOTHNESS_EFLAG_OFFSET;
37,37d37
<     protected Smoothness smoothness = SMOOTHNESS_EDEFAULT;
39,39c43,43
<     protected static final int AVOID_OBSTRUCTIONS_EFLAG = 1 << 8;
---
>     protected static final int AVOID_OBSTRUCTIONS_EFLAG = 1 << 12;
41,41c45,45
<     protected static final int CLOSEST_DISTANCE_EFLAG = 1 << 9;
---
>     protected static final int CLOSEST_DISTANCE_EFLAG = 1 << 13;
42a47,50
>     protected static final int JUMP_LINK_STATUS_EFLAG_OFFSET = 14;
>     protected static final int JUMP_LINK_STATUS_EFLAG_DEFAULT = JumpLinkStatus.VALUES.indexOf (JUMP_LINK_STATUS_EDEFAULT) << JUMP_LINK_STATUS_EFLAG_OFFSET;
>     private static final JumpLinkStatus [] JUMP_LINK_STATUS_EFLAG_VALUES = (JumpLinkStatus []) JumpLinkStatus.VALUES.toArray (new JumpLinkStatus [JumpLinkStatus.VALUES.size ()]);
>     protected static final int JUMP_LINK_STATUS_EFLAG = 0x3 << JUMP_LINK_STATUS_EFLAG_OFFSET;
43,43d46
<     protected JumpLinkStatus jumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
44a52,55
>     protected static final int JUMP_LINK_TYPE_EFLAG_OFFSET = 16;
>     protected static final int JUMP_LINK_TYPE_EFLAG_DEFAULT = JumpLinkType.VALUES.indexOf (JUMP_LINK_TYPE_EDEFAULT) << JUMP_LINK_TYPE_EFLAG_OFFSET;
>     private static final JumpLinkType [] JUMP_LINK_TYPE_EFLAG_VALUES = (JumpLinkType []) JumpLinkType.VALUES.toArray (new JumpLinkType [JumpLinkType.VALUES.size ()]);
>     protected static final int JUMP_LINK_TYPE_EFLAG = 0x3 << JUMP_LINK_TYPE_EFLAG_OFFSET;
45,45d51
<     protected JumpLinkType jumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
47,47c57,57
<     protected static final int JUMP_LINKS_REVERSE_EFLAG = 1 << 10;
---
>     protected static final int JUMP_LINKS_REVERSE_EFLAG = 1 << 18;
61,71d70
<     public byte [] getUUID () {
<         return uUID;
<     }
< 
<     public void setUUID (byte [] newUUID) {
<         byte [] oldUUID = uUID;
<         uUID = newUUID;
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__UUID, oldUUID, uUID));
< 
<     }
< 
72a72,72
>         return ROUTING_EFLAG_VALUES [(eFlags & ROUTING_EFLAG)>>> ROUTING_EFLAG_OFFSET];
73,73d71
<         return routing;
76a76,79
>         Routing oldRouting = ROUTING_EFLAG_VALUES [(eFlags & ROUTING_EFLAG)>>> ROUTING_EFLAG_OFFSET];
>         if (newRouting == null) newRouting = ROUTING_EDEFAULT;
> 
>         eFlags = eFlags & ~ ROUTING_EFLAG | Routing.VALUES.indexOf (newRouting) << ROUTING_EFLAG_OFFSET;
77,78d75
<         Routing oldRouting = routing;
<         routing = newRouting == null ? ROUTING_EDEFAULT : newRouting;
79,79c80,80
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__ROUTING, oldRouting, routing));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__ROUTING, oldRouting, newRouting));
83a85,85
>         return SMOOTHNESS_EFLAG_VALUES [(eFlags & SMOOTHNESS_EFLAG)>>> SMOOTHNESS_EFLAG_OFFSET];
84,84d84
<         return smoothness;
87a89,92
>         Smoothness oldSmoothness = SMOOTHNESS_EFLAG_VALUES [(eFlags & SMOOTHNESS_EFLAG)>>> SMOOTHNESS_EFLAG_OFFSET];
>         if (newSmoothness == null) newSmoothness = SMOOTHNESS_EDEFAULT;
> 
>         eFlags = eFlags & ~ SMOOTHNESS_EFLAG | Smoothness.VALUES.indexOf (newSmoothness) << SMOOTHNESS_EFLAG_OFFSET;
88,89d88
<         Smoothness oldSmoothness = smoothness;
<         smoothness = newSmoothness == null ? SMOOTHNESS_EDEFAULT : newSmoothness;
90,90c93,93
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__SMOOTHNESS, oldSmoothness, smoothness));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__SMOOTHNESS, oldSmoothness, newSmoothness));
120a124,124
>         return JUMP_LINK_STATUS_EFLAG_VALUES [(eFlags & JUMP_LINK_STATUS_EFLAG)>>> JUMP_LINK_STATUS_EFLAG_OFFSET];
121,121d123
<         return jumpLinkStatus;
124a128,131
>         JumpLinkStatus oldJumpLinkStatus = JUMP_LINK_STATUS_EFLAG_VALUES [(eFlags & JUMP_LINK_STATUS_EFLAG)>>> JUMP_LINK_STATUS_EFLAG_OFFSET];
>         if (newJumpLinkStatus == null) newJumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
> 
>         eFlags = eFlags & ~ JUMP_LINK_STATUS_EFLAG | JumpLinkStatus.VALUES.indexOf (newJumpLinkStatus) << JUMP_LINK_STATUS_EFLAG_OFFSET;
125,126d127
<         JumpLinkStatus oldJumpLinkStatus = jumpLinkStatus;
<         jumpLinkStatus = newJumpLinkStatus == null ? JUMP_LINK_STATUS_EDEFAULT : newJumpLinkStatus;
127,127c132,132
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__JUMP_LINK_STATUS, oldJumpLinkStatus, jumpLinkStatus));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__JUMP_LINK_STATUS, oldJumpLinkStatus, newJumpLinkStatus));
131a137,137
>         return JUMP_LINK_TYPE_EFLAG_VALUES [(eFlags & JUMP_LINK_TYPE_EFLAG)>>> JUMP_LINK_TYPE_EFLAG_OFFSET];
132,132d136
<         return jumpLinkType;
135a141,144
>         JumpLinkType oldJumpLinkType = JUMP_LINK_TYPE_EFLAG_VALUES [(eFlags & JUMP_LINK_TYPE_EFLAG)>>> JUMP_LINK_TYPE_EFLAG_OFFSET];
>         if (newJumpLinkType == null) newJumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
> 
>         eFlags = eFlags & ~ JUMP_LINK_TYPE_EFLAG | JumpLinkType.VALUES.indexOf (newJumpLinkType) << JUMP_LINK_TYPE_EFLAG_OFFSET;
136,137d140
<         JumpLinkType oldJumpLinkType = jumpLinkType;
<         jumpLinkType = newJumpLinkType == null ? JUMP_LINK_TYPE_EDEFAULT : newJumpLinkType;
138,138c145,145
<         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__JUMP_LINK_TYPE, oldJumpLinkType, jumpLinkType));
---
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CONNECTOR_STYLE__JUMP_LINK_TYPE, oldJumpLinkType, newJumpLinkType));
179,180d185
<             case NotationPackage.CONNECTOR_STYLE__UUID :
<                 return getUUID ();
205,207d209
<             case NotationPackage.CONNECTOR_STYLE__UUID :
<                 setUUID ((byte []) newValue);
<                 return;
241,243d242
<             case NotationPackage.CONNECTOR_STYLE__UUID :
<                 setUUID (UUID_EDEFAULT);
<                 return;
277,278d275
<             case NotationPackage.CONNECTOR_STYLE__UUID :
<                 return UUID_EDEFAULT == null ? uUID != null : ! UUID_EDEFAULT.equals (uUID);
279a277,277
>                 return (eFlags & ROUTING_EFLAG) != ROUTING_EFLAG_DEFAULT;
280,280d276
<                 return routing != ROUTING_EDEFAULT;
281a279,279
>                 return (eFlags & SMOOTHNESS_EFLAG) != SMOOTHNESS_EFLAG_DEFAULT;
282,282d278
<                 return smoothness != SMOOTHNESS_EDEFAULT;
287a285,285
>                 return (eFlags & JUMP_LINK_STATUS_EFLAG) != JUMP_LINK_STATUS_EFLAG_DEFAULT;
288,288d284
<                 return jumpLinkStatus != JUMP_LINK_STATUS_EDEFAULT;
289a287,287
>                 return (eFlags & JUMP_LINK_TYPE_EFLAG) != JUMP_LINK_TYPE_EFLAG_DEFAULT;
290,290d286
<                 return jumpLinkType != JUMP_LINK_TYPE_EDEFAULT;
302,309d298
<         if (baseClass == NotationObject.class) {
<             switch (derivedFeatureID) {
<                 case NotationPackage.CONNECTOR_STYLE__UUID :
<                     return NotationPackage.NOTATION_OBJECT__UUID;
<                 default :
<                     return - 1;
<             }
<         }
350,357d338
<         if (baseClass == NotationObject.class) {
<             switch (baseFeatureID) {
<                 case NotationPackage.NOTATION_OBJECT__UUID :
<                     return NotationPackage.CONNECTOR_STYLE__UUID;
<                 default :
<                     return - 1;
<             }
<         }
401,402d381
<         result.append (" (uUID: ");
<         result.append (uUID);
403,403c382,382
<         result.append (", routing: ");
---
>         result.append (" (routing: ");
403a383,383
>         result.append (ROUTING_EFLAG_VALUES [(eFlags & ROUTING_EFLAG)>>> ROUTING_EFLAG_OFFSET]);
404,404d382
<         result.append (routing);
405a385,385
>         result.append (SMOOTHNESS_EFLAG_VALUES [(eFlags & SMOOTHNESS_EFLAG)>>> SMOOTHNESS_EFLAG_OFFSET]);
406,406d384
<         result.append (smoothness);
411a391,391
>         result.append (JUMP_LINK_STATUS_EFLAG_VALUES [(eFlags & JUMP_LINK_STATUS_EFLAG)>>> JUMP_LINK_STATUS_EFLAG_OFFSET]);
412,412d390
<         result.append (jumpLinkStatus);
413a393,393
>         result.append (JUMP_LINK_TYPE_EFLAG_VALUES [(eFlags & JUMP_LINK_TYPE_EFLAG)>>> JUMP_LINK_TYPE_EFLAG_OFFSET]);
414,414d392
<         result.append (jumpLinkType);
