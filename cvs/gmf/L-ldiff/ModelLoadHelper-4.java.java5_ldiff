9,10d8
< import org.eclipse.core.runtime.Status;
< 
16a15,16
> import org.eclipse.emf.common.util.WrappedException;
> 
29a30,30
>     private Diagnostic diagnostic;
32a58,59
>     public Diagnostic getDiagnostics () {
>         return diagnostic;
33,39d57
<     public ModelLoadHelper (ResourceSet targetResSet, URI resourceURI) {
<         if (targetResSet == null || resourceURI == null) {
<             throw new IllegalArgumentException ("null resourceSet or resourceURI");
<         }
<         this.resourceSet = targetResSet;
<         this.uri = resourceURI;
<         this.status = internalLoad (targetResSet, uri);
40,40c60,60
<     }
---
>     }
41a62,98
>     static Resource.Diagnostic createDiagnostic (Resource resource, Exception exception) {
>         if (exception == null) {
>             throw new IllegalArgumentException ("null diagnostic exception");
>         }
>         final String location = resource.getURI () == null ? null : resource.getURI ().toString ();
>         class ExceptionDiagnostic extends WrappedException implements Resource.Diagnostic {
> 
>             public ExceptionDiagnostic (Exception exception) {
>                 super (exception);
>             }
> 
>             public String getLocation () {
>                 return location;
>             }
> 
>             public int getColumn () {
>                 return 0;
>             }
> 
>             public int getLine () {
>                 return 0;
>             }
> 
>         }
> 
>         return new ExceptionDiagnostic (exception);
>     }
> 
>     public ModelLoadHelper (ResourceSet targetResSet, URI resourceURI) {
>         if (targetResSet == null || resourceURI == null) {
>             throw new IllegalArgumentException ("null resourceSet or resourceURI");
>         }
>         this.resourceSet = targetResSet;
>         this.uri = resourceURI;
>         this.diagnostic = internalLoad (targetResSet, uri);
>     }
> 
41,41c61,61
< 
---
> 
54a47,50
>     public boolean isOK () {
>         return diagnostic.getSeverity () == Diagnostic.OK;
>     }
> 
55a52,54
>         if (status == null) {
>             status = BasicDiagnostic.toIStatus (diagnostic);
>         }
60,60c100,100
<     private static IStatus internalLoad (ResourceSet resourceSet, URI uri) {
---
>     private static Diagnostic internalLoad (ResourceSet resourceSet, URI uri) {
61,61c101,101
<         IStatus loadStatus = Status.OK_STATUS;
---
>         Diagnostic diagnostic = Diagnostic.OK_INSTANCE;
71,71c111,111
<             resource.getErrors ().add (MigrationUtil.createDiagnostic (resource, e));
---
>             resource.getErrors ().add (ModelLoadHelper.createDiagnostic (resource, e));
78a119,119
>             diagnostic = loadDiagnostic;
79,79d118
<             loadStatus = BasicDiagnostic.toIStatus (loadDiagnostic);
81,81c121,121
<         return loadStatus;
---
>         return diagnostic;
