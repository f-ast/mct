16a17,18
> import org.eclipse.emf.common.util.URI;
> 
18a21,24
> import org.eclipse.emf.ecore.resource.Resource.Factory;
> 
> import org.eclipse.emf.ecore.resource.Resource.Factory.Registry;
> 
38a45,46
> import org.eclipse.gmf.runtime.emf.core.internal.util.EMFCoreConstants;
> 
79,79c87,87
<         ResourceSet rset = domain.getResourceSet ();
---
>         final ResourceSet rset = domain.getResourceSet ();
83a92,124
>             final Registry existingRegistry = rset.getResourceFactoryRegistry ();
>             rset.setResourceFactoryRegistry (new Registry () {
>                 private Registry delegateRegistry = existingRegistry;
> 
>                 public Map < String, Object > getContentTypeToFactoryMap () {
>                     return delegateRegistry.getContentTypeToFactoryMap ();
>                 }
> 
>                 public Map < String, Object > getExtensionToFactoryMap () {
>                     return delegateRegistry.getExtensionToFactoryMap ();
>                 }
> 
>                 public Factory getFactory (URI uri, String contentType) {
>                     if (uri != null && uri.scheme ().equals (EMFCoreConstants.PATH_MAP_SCHEME)) {
>                         uri = rset.getURIConverter ().normalize (uri);
>                     }
>                     return delegateRegistry.getFactory (uri, contentType);
>                 }
> 
>                 public Factory getFactory (URI uri) {
>                     if (uri != null && uri.scheme ().equals (EMFCoreConstants.PATH_MAP_SCHEME)) {
>                         uri = rset.getURIConverter ().normalize (uri);
>                     }
>                     return delegateRegistry.getFactory (uri);
>                 }
> 
>                 public Map < String, Object > getProtocolToFactoryMap () {
>                     return delegateRegistry.getProtocolToFactoryMap ();
>                 }
> 
>             }
> 
>             );
