28a29,30
> import org.eclipse.emf.ecore.EStructuralFeature;
> 
30a33,34
> import org.eclipse.emf.ecore.EStructuralFeature.Setting;
> 
125a130,135
>         Collection settings = crossReferenceAdapter.getInverseReferences (eObject);
>         if (settings.isEmpty () == false) {
>             ArrayList referencers = new ArrayList ();
>             int count;
>             if ((features != null) && ((count = features.length) != 0)) {
>                 Iterator it = settings.iterator ();
126,131d129
<         if ((features != null) && (features.length != 0)) {
<             Collection referencers = new ArrayList ();
<             for (int i = 0, count = features.length;
<             i < count; i ++) {
<                 EReference feature = features [i];
<                 Iterator j = crossReferenceAdapter.getInverseReferencers (eObject, feature, null).iterator ();
132,132c136,136
<                 while (j.hasNext ()) {
---
>                 while (it.hasNext ()) {
132a137,141
>                     Setting setting = (Setting) it.next ();
>                     EStructuralFeature feature = setting.getEStructuralFeature ();
>                     for (int i = 0;
>                     i < count; ++ i) {
>                         if (feature == features [i]) {
133,133d136
<                     EObject referencer = (EObject) j.next ();
134a143,150
>                             break;
>                         }
>                     }
>                 }
>             } else {
>                 Iterator it = settings.iterator ();
>                 while (it.hasNext ()) {
>                     referencers.add (((Setting) it.next ()).getEObject ());
134,134c142,142
<                     referencers.add (referencer);
---
>                             referencers.add (setting.getEObject ());
137a154,155
>         }
>         return Collections.EMPTY_LIST;
138,139d153
<         } else return crossReferenceAdapter.getInverseReferencers (eObject, null, null);
< 
300a317,319
>                 if (id == null || id.length () == 0) {
>                     return res.getURIFragment (proxy);
>                 }
300,300c316,316
<                 return res.getID (proxy);
---
>                 String id = res.getID (proxy);
