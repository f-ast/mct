6a13,13
> import org.eclipse.emf.ecore.EObject;
7,7c43,43
< import org.eclipse.ui.views.properties.IPropertySource;
---
> import org.eclipse.ui.views.properties.IPropertySource;
7a44,44
> 
8a15,17
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
> 
> import org.eclipse.emf.transaction.util.TransactionUtil;
9a24,29
> 
> import org.eclipse.gmf.runtime.common.core.util.Log;
> 
> import org.eclipse.gmf.runtime.common.core.util.Trace;
> 
> import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
9,9c23,23
< import org.eclipse.gmf.runtime.common.core.command.CommandManager;
---
> import org.eclipse.gmf.runtime.common.core.command.ICompositeCommand;
15a6,10
> 
> import org.eclipse.core.commands.operations.IOperationHistory;
> 
> import org.eclipse.core.runtime.IAdaptable;
> 
15,15c5,5
< import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand;
---
> import org.eclipse.core.commands.ExecutionException;
20a35,40
> import org.eclipse.gmf.runtime.emf.ui.properties.internal.EMFPropertiesDebugOptions;
> 
> import org.eclipse.gmf.runtime.emf.ui.properties.internal.EMFPropertiesPlugin;
> 
> import org.eclipse.gmf.runtime.emf.ui.properties.internal.EMFPropertiesStatusCodes;
> 
23a46,47
>     private final IOperationHistory operationHistory;
>     private TransactionalEditingDomain editingDomain;
24a49,50
>     public UndoableModelPropertySheetEntry (IOperationHistory operationHistory) {
>         this.operationHistory = operationHistory;
25,26d48
<     public UndoableModelPropertySheetEntry (CommandManager manager) {
<         commandManager = manager;
28a53,63
>     public void setEditingDomain (TransactionalEditingDomain editingDomain) {
>         this.editingDomain = editingDomain;
>     }
> 
>     public TransactionalEditingDomain getEditingDomain () {
>         UndoableModelPropertySheetEntry parentEntry = getParentEntry ();
>         if (parentEntry == null || editingDomain != null) {
>             return editingDomain;
>         }
>         return parentEntry.getEditingDomain ();
>     }
29,29d52
<     private CommandManager commandManager;
66,66c100,100
<                 restoreCommand = new RestoreDefaultPropertyValueCommand (propertyName, parentValues [i], source, propertyId);
---
>                 restoreCommand = new RestoreDefaultPropertyValueCommand (getEditingDomain (), propertyName, parentValues [i], source, propertyId);
71a106,111
>             try {
>                 getOperationHistory ().execute (cc, new NullProgressMonitor (), null);
>             } catch (ExecutionException e) {
>                 Trace.catching (EMFPropertiesPlugin.getDefault (), EMFPropertiesDebugOptions.EXCEPTIONS_CATCHING, UndoableModelPropertySheetEntry.class, "resetPropertyValue", e);
>                 Log.error (EMFPropertiesPlugin.getDefault (), EMFPropertiesStatusCodes.COMMAND_FAILURE, e.getLocalizedMessage (), e);
>             }
72,72d105
<             getCommandManager ().execute (cc);
81a121,121
>         editValue = newValue;
84,84c124,124
<     protected void valueChanged (UndoableModelPropertySheetEntry child, CompositeCommand command) {
---
>     protected void valueChanged (UndoableModelPropertySheetEntry child, ICommand command) {
92a133,157
>             try {
>                 getOperationHistory ().execute (command, new NullProgressMonitor (), null);
>             } catch (ExecutionException e) {
>                 Trace.catching (EMFPropertiesPlugin.getDefault (), EMFPropertiesDebugOptions.EXCEPTIONS_CATCHING, UndoableModelPropertySheetEntry.class, "valueChanged", e);
>                 Log.error (EMFPropertiesPlugin.getDefault (), EMFPropertiesStatusCodes.COMMAND_FAILURE, e.getLocalizedMessage (), e);
>             }
>         }
>     }
> 
>     public void setValues (Object [] objects) {
>         super.setValues (objects);
>         if (getParentEntry () == null) {
>             for (int i = 0;
>             i < objects.length; i ++) {
>                 EObject eObject = null;
>                 if (objects [i] instanceof EObject) {
>                     eObject = (EObject) objects [i];
>                 } else if (objects [i] instanceof IAdaptable) {
>                     eObject = (EObject) ((IAdaptable) objects [i]).getAdapter (EObject.class);
>                 }
> 
>                 if (eObject != null) {
>                     setEditingDomain (TransactionUtil.getEditingDomain (eObject));
>                 }
>             }
93,93d132
<             command.execute (new NullProgressMonitor ());
96a161,162
>     protected final IOperationHistory getOperationHistory () {
>         return operationHistory;
97,98d160
<     protected CommandManager getCommandManager () {
<         return commandManager;
106,106c170,170
<         return new SetModelPropertyValueCommand (propertyName, object, getPropertySource (object), propertyId, value);
---
>         return new SetModelPropertyValueCommand (getEditingDomain (), propertyName, object, getPropertySource (object), propertyId, value);
109,109c173,173
<     protected CompositeCommand getCompositeCommand (String propertyName) {
---
>     protected ICompositeCommand getCompositeCommand (String propertyName) {
110,110c174,174
<         return new CompositeModelCommand (propertyName);
---
>         return new CompositeTransactionalCommand (getEditingDomain (), propertyName);
118,118c182,182
<         return new UndoableModelPropertySheetEntry (getCommandManager ());
---
>         return new UndoableModelPropertySheetEntry (getOperationHistory ());
