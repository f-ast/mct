2a3,4
> import java.util.Collection;
> 
8a11,12
> import org.eclipse.emf.ecore.EObject;
> 
12a17,18
> import org.eclipse.emf.ecore.util.InternalEList;
> 
42a49,57
>         if (eContainingFeature () == NotationPackage.eINSTANCE.getDiagram_PersistedEdges ()) {
>             if (newSource != null && newSource.eContainingFeature () == NotationPackage.eINSTANCE.getView_TransientChildren ()) {
>                 EObject container = newSource.eContainer ();
>                 if (container != null && container instanceof View) {
>                     View parent = (View) container;
>                     parent.persistChildren ();
>                 }
>             }
>         }
72a88,96
>         if (eContainingFeature () == NotationPackage.eINSTANCE.getDiagram_PersistedEdges ()) {
>             if (newTarget != null && newTarget.eContainingFeature () == NotationPackage.eINSTANCE.getView_TransientChildren ()) {
>                 EObject container = newTarget.eContainer ();
>                 if (container != null && container instanceof View) {
>                     View parent = (View) container;
>                     parent.persistChildren ();
>                 }
>             }
>         }
207a232,237
>             case NotationPackage.EDGE__EANNOTATIONS :
>                 return ((InternalEList) getEAnnotations ()).basicAdd (otherEnd, msgs);
>             case NotationPackage.EDGE__SOURCE_EDGES :
>                 return ((InternalEList) getSourceEdges ()).basicAdd (otherEnd, msgs);
>             case NotationPackage.EDGE__TARGET_EDGES :
>                 return ((InternalEList) getTargetEdges ()).basicAdd (otherEnd, msgs);
217,217c247,247
<         return super.eInverseAdd (otherEnd, featureID, msgs);
---
>         return eDynamicInverseAdd (otherEnd, featureID, msgs);
221a252,263
>             case NotationPackage.EDGE__EANNOTATIONS :
>                 return ((InternalEList) getEAnnotations ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.EDGE__SOURCE_EDGES :
>                 return ((InternalEList) getSourceEdges ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.EDGE__TARGET_EDGES :
>                 return ((InternalEList) getTargetEdges ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.EDGE__PERSISTED_CHILDREN :
>                 return ((InternalEList) getPersistedChildren ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.EDGE__STYLES :
>                 return ((InternalEList) getStyles ()).basicRemove (otherEnd, msgs);
>             case NotationPackage.EDGE__TRANSIENT_CHILDREN :
>                 return ((InternalEList) getTransientChildren ()).basicRemove (otherEnd, msgs);
233,233c275,275
<         return super.eInverseRemove (otherEnd, featureID, msgs);
---
>         return eDynamicInverseRemove (otherEnd, featureID, msgs);
237a280,305
>             case NotationPackage.EDGE__EANNOTATIONS :
>                 return getEAnnotations ();
>             case NotationPackage.EDGE__VISIBLE :
>                 return isVisible () ? Boolean.TRUE : Boolean.FALSE;
>             case NotationPackage.EDGE__TYPE :
>                 return getType ();
>             case NotationPackage.EDGE__MUTABLE :
>                 return isMutable () ? Boolean.TRUE : Boolean.FALSE;
>             case NotationPackage.EDGE__SOURCE_EDGES :
>                 return getSourceEdges ();
>             case NotationPackage.EDGE__TARGET_EDGES :
>                 return getTargetEdges ();
>             case NotationPackage.EDGE__PERSISTED_CHILDREN :
>                 return getPersistedChildren ();
>             case NotationPackage.EDGE__STYLES :
>                 return getStyles ();
>             case NotationPackage.EDGE__ELEMENT :
>                 if (resolve) return getElement ();
> 
>                 return basicGetElement ();
>             case NotationPackage.EDGE__DIAGRAM :
>                 if (resolve) return getDiagram ();
> 
>                 return basicGetDiagram ();
>             case NotationPackage.EDGE__TRANSIENT_CHILDREN :
>                 return getTransientChildren ();
249,249c317,317
<         return super.eGet (featureID, resolve, coreType);
---
>         return eDynamicGet (featureID, resolve, coreType);
253a322,357
>             case NotationPackage.EDGE__EANNOTATIONS :
>                 getEAnnotations ().clear ();
>                 getEAnnotations ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.EDGE__VISIBLE :
>                 setVisible (((Boolean) newValue).booleanValue ());
>                 return;
>             case NotationPackage.EDGE__TYPE :
>                 setType ((String) newValue);
>                 return;
>             case NotationPackage.EDGE__MUTABLE :
>                 setMutable (((Boolean) newValue).booleanValue ());
>                 return;
>             case NotationPackage.EDGE__SOURCE_EDGES :
>                 getSourceEdges ().clear ();
>                 getSourceEdges ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.EDGE__TARGET_EDGES :
>                 getTargetEdges ().clear ();
>                 getTargetEdges ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.EDGE__PERSISTED_CHILDREN :
>                 getPersistedChildren ().clear ();
>                 getPersistedChildren ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.EDGE__STYLES :
>                 getStyles ().clear ();
>                 getStyles ().addAll ((Collection) newValue);
>                 return;
>             case NotationPackage.EDGE__ELEMENT :
>                 setElement ((EObject) newValue);
>                 return;
>             case NotationPackage.EDGE__TRANSIENT_CHILDREN :
>                 getTransientChildren ().clear ();
>                 getTransientChildren ().addAll ((Collection) newValue);
>                 return;
270,270c374,374
<         super.eSet (featureID, newValue);
---
>         eDynamicSet (featureID, newValue);
274a379,408
>             case NotationPackage.EDGE__EANNOTATIONS :
>                 getEAnnotations ().clear ();
>                 return;
>             case NotationPackage.EDGE__VISIBLE :
>                 setVisible (VISIBLE_EDEFAULT);
>                 return;
>             case NotationPackage.EDGE__TYPE :
>                 setType (TYPE_EDEFAULT);
>                 return;
>             case NotationPackage.EDGE__MUTABLE :
>                 setMutable (MUTABLE_EDEFAULT);
>                 return;
>             case NotationPackage.EDGE__SOURCE_EDGES :
>                 getSourceEdges ().clear ();
>                 return;
>             case NotationPackage.EDGE__TARGET_EDGES :
>                 getTargetEdges ().clear ();
>                 return;
>             case NotationPackage.EDGE__PERSISTED_CHILDREN :
>                 getPersistedChildren ().clear ();
>                 return;
>             case NotationPackage.EDGE__STYLES :
>                 getStyles ().clear ();
>                 return;
>             case NotationPackage.EDGE__ELEMENT :
>                 unsetElement ();
>                 return;
>             case NotationPackage.EDGE__TRANSIENT_CHILDREN :
>                 getTransientChildren ().clear ();
>                 return;
290a425,425
>         eDynamicUnset (featureID);
291,291d424
<         super.eUnset (featureID);
295a430,451
>             case NotationPackage.EDGE__EANNOTATIONS :
>                 return eAnnotations != null && ! eAnnotations.isEmpty ();
>             case NotationPackage.EDGE__VISIBLE :
>                 return ((eFlags & VISIBLE_EFLAG) != 0) != VISIBLE_EDEFAULT;
>             case NotationPackage.EDGE__TYPE :
>                 return TYPE_EDEFAULT == null ? type != null : ! TYPE_EDEFAULT.equals (type);
>             case NotationPackage.EDGE__MUTABLE :
>                 return ((eFlags & MUTABLE_EFLAG) != 0) != MUTABLE_EDEFAULT;
>             case NotationPackage.EDGE__SOURCE_EDGES :
>                 return sourceEdges != null && ! sourceEdges.isEmpty ();
>             case NotationPackage.EDGE__TARGET_EDGES :
>                 return targetEdges != null && ! targetEdges.isEmpty ();
>             case NotationPackage.EDGE__PERSISTED_CHILDREN :
>                 return persistedChildren != null && ! persistedChildren.isEmpty ();
>             case NotationPackage.EDGE__STYLES :
>                 return styles != null && ! styles.isEmpty ();
>             case NotationPackage.EDGE__ELEMENT :
>                 return isSetElement ();
>             case NotationPackage.EDGE__DIAGRAM :
>                 return basicGetDiagram () != null;
>             case NotationPackage.EDGE__TRANSIENT_CHILDREN :
>                 return transientChildren != null && ! transientChildren.isEmpty ();
307,307c463,463
<         return super.eIsSet (featureID);
---
>         return eDynamicIsSet (featureID);
