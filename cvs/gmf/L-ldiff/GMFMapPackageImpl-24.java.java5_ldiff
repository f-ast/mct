17,17c25,25
< import org.eclipse.gmf.mappings.AbstractNodeMapping;
---
> import org.eclipse.gmf.mappings.ChildReference;
18,18d25
< 
27a54,54
> 
27,27c53,53
< import org.eclipse.gmf.mappings.ChildNodeMapping;
---
> import org.eclipse.gmf.mappings.NeedsContainment;
56a57,58
> import org.eclipse.gmf.mappings.NodeReference;
> 
60a63,64
> import org.eclipse.gmf.mappings.TopNodeReference;
> 
65a71,73
>     private EClass needsContainmentEClass = null;
>     private EClass nodeReferenceEClass = null;
>     private EClass childReferenceEClass = null;
66,66c74,74
<     private EClass abstractNodeMappingEClass = null;
---
>     private EClass topNodeReferenceEClass = null;
69,69d75
<     private EClass childNodeMappingEClass = null;
106a141,142
>     public EClass getNodeReference () {
>         return nodeReferenceEClass;
107,108d140
<     public EClass getAbstractNodeMapping () {
<         return abstractNodeMappingEClass;
109,109c143,143
<     }
---
>     }
110a145,146
>     public EReference getNodeReference_ChildrenFeature () {
>         return (EReference) nodeReferenceEClass.getEStructuralFeatures ().get (0);
110,110c144,144
< 
---
> 
111,112d144
<     public EReference getAbstractNodeMapping_ChildMappings () {
<         return (EReference) abstractNodeMappingEClass.getEStructuralFeatures ().get (0);
113,113c147,147
<     }
---
>     }
114a149,150
>     public EClass getChildReference () {
>         return childReferenceEClass;
114,114c148,148
< 
---
> 
115,116d148
<     public EReference getAbstractNodeMapping_CompartmentMappings () {
<         return (EReference) abstractNodeMappingEClass.getEStructuralFeatures ().get (1);
117,117c151,151
<     }
---
>     }
118,118c152,152
< 
---
> 
118a153,158
>     public EReference getChildReference_ParentNode () {
>         return (EReference) childReferenceEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EReference getChildReference_Compartment () {
>         return (EReference) childReferenceEClass.getEStructuralFeatures ().get (1);
135,135c129,129
<     public EReference getMappingEntry_ContainmentFeature () {
---
>     public EReference getMappingEntry_LabelMappings () {
138a165,165
>     public EReference getChildReference_ReferencedChild () {
139,139d164
<     public EReference getMappingEntry_LabelMappings () {
140,140c166,166
<         return (EReference) mappingEntryEClass.getEStructuralFeatures ().get (4);
---
>         return (EReference) childReferenceEClass.getEStructuralFeatures ().get (3);
143,143c133,133
<     public EClass getNodeMapping () {
---
>     public EClass getNeedsContainment () {
144,144c134,134
<         return nodeMappingEClass;
---
>         return needsContainmentEClass;
146a173,180
>     public EReference getTopNodeReference_OwnedChild () {
>         return (EReference) topNodeReferenceEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EClass getNodeMapping () {
>         return nodeMappingEClass;
>     }
> 
147,147c181,181
<     public EReference getNodeMapping_DiagramNode () {
---
>     public EReference getNodeMapping_DiagramNode () {
148,148c182,182
<         return (EReference) nodeMappingEClass.getEStructuralFeatures ().get (0);
---
>         return (EReference) nodeMappingEClass.getEStructuralFeatures ().get (0);
148a183,190
>     }
> 
>     public EReference getNodeMapping_Children () {
>         return (EReference) nodeMappingEClass.getEStructuralFeatures ().get (1);
>     }
> 
>     public EReference getNodeMapping_Compartments () {
>         return (EReference) nodeMappingEClass.getEStructuralFeatures ().get (2);
151,151c169,169
<     public EClass getChildNodeMapping () {
---
>     public EClass getTopNodeReference () {
152,152c170,170
<         return childNodeMappingEClass;
---
>         return topNodeReferenceEClass;
154a137,137
>     public EReference getNeedsContainment_ContainmentFeature () {
155,155d136
<     public EReference getChildNodeMapping_DiagramNode () {
156,156c138,138
<         return (EReference) childNodeMappingEClass.getEStructuralFeatures ().get (0);
---
>         return (EReference) needsContainmentEClass.getEStructuralFeatures ().get (0);
159,160d168
<     public EReference getChildNodeMapping_Compartment () {
<         return (EReference) childNodeMappingEClass.getEStructuralFeatures ().get (1);
162a161,161
>     public EReference getChildReference_OwnedChild () {
163,163d160
<     public EReference getChildNodeMapping_ParentNode () {
164,164c162,162
<         return (EReference) childNodeMappingEClass.getEStructuralFeatures ().get (2);
---
>         return (EReference) childReferenceEClass.getEStructuralFeatures ().get (2);
171,171c201,201
<     public EReference getCompartmentMapping_ParentNodeMapping () {
---
>     public EReference getCompartmentMapping_ParentNode () {
175,175c197,197
<     public EReference getCompartmentMapping_Compartment () {
---
>     public EReference getCompartmentMapping_Compartment () {
179,179c205,205
<     public EReference getCompartmentMapping_ChildNodes () {
---
>     public EReference getCompartmentMapping_Children () {
467,467d492
<         createEReference (mappingEntryEClass, MAPPING_ENTRY__CONTAINMENT_FEATURE);
468a494,504
>         needsContainmentEClass = createEClass (NEEDS_CONTAINMENT);
>         createEReference (needsContainmentEClass, NEEDS_CONTAINMENT__CONTAINMENT_FEATURE);
>         nodeReferenceEClass = createEClass (NODE_REFERENCE);
>         createEReference (nodeReferenceEClass, NODE_REFERENCE__CHILDREN_FEATURE);
>         childReferenceEClass = createEClass (CHILD_REFERENCE);
>         createEReference (childReferenceEClass, CHILD_REFERENCE__PARENT_NODE);
>         createEReference (childReferenceEClass, CHILD_REFERENCE__COMPARTMENT);
>         createEReference (childReferenceEClass, CHILD_REFERENCE__OWNED_CHILD);
>         createEReference (childReferenceEClass, CHILD_REFERENCE__REFERENCED_CHILD);
>         topNodeReferenceEClass = createEClass (TOP_NODE_REFERENCE);
>         createEReference (topNodeReferenceEClass, TOP_NODE_REFERENCE__OWNED_CHILD);
469,471d493
<         abstractNodeMappingEClass = createEClass (ABSTRACT_NODE_MAPPING);
<         createEReference (abstractNodeMappingEClass, ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS);
<         createEReference (abstractNodeMappingEClass, ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS);
473a507,508
>         createEReference (nodeMappingEClass, NODE_MAPPING__CHILDREN);
>         createEReference (nodeMappingEClass, NODE_MAPPING__COMPARTMENTS);
474,477d506
<         childNodeMappingEClass = createEClass (CHILD_NODE_MAPPING);
<         createEReference (childNodeMappingEClass, CHILD_NODE_MAPPING__DIAGRAM_NODE);
<         createEReference (childNodeMappingEClass, CHILD_NODE_MAPPING__COMPARTMENT);
<         createEReference (childNodeMappingEClass, CHILD_NODE_MAPPING__PARENT_NODE);
479a512,512
>         createEReference (compartmentMappingEClass, COMPARTMENT_MAPPING__CHILDREN);
479,479c511,511
<         createEReference (compartmentMappingEClass, COMPARTMENT_MAPPING__PARENT_NODE_MAPPING);
---
>         createEReference (compartmentMappingEClass, COMPARTMENT_MAPPING__PARENT_NODE);
481,481d510
<         createEReference (compartmentMappingEClass, COMPARTMENT_MAPPING__CHILD_NODES);
554a586,591
>         nodeReferenceEClass.getESuperTypes ().add (this.getNeedsContainment ());
>         childReferenceEClass.getESuperTypes ().add (this.getNodeReference ());
>         topNodeReferenceEClass.getESuperTypes ().add (this.getNodeReference ());
>         nodeMappingEClass.getESuperTypes ().add (this.getMappingEntry ());
>         nodeMappingEClass.getESuperTypes ().add (this.getMenuOwner ());
>         nodeMappingEClass.getESuperTypes ().add (this.getToolOwner ());
555,557d585
<         abstractNodeMappingEClass.getESuperTypes ().add (this.getMappingEntry ());
<         abstractNodeMappingEClass.getESuperTypes ().add (this.getMenuOwner ());
<         abstractNodeMappingEClass.getESuperTypes ().add (this.getToolOwner ());
558,558c592,592
<         abstractNodeMappingEClass.getESuperTypes ().add (this.getAppearanceSteward ());
---
>         nodeMappingEClass.getESuperTypes ().add (this.getAppearanceSteward ());
559,560d592
<         nodeMappingEClass.getESuperTypes ().add (this.getAbstractNodeMapping ());
<         childNodeMappingEClass.getESuperTypes ().add (this.getAbstractNodeMapping ());
561a594,594
>         linkMappingEClass.getESuperTypes ().add (this.getNeedsContainment ());
569,569c602,602
<         initEReference (getMapping_Nodes (), this.getNodeMapping (), null, "nodes", null, 1, - 1, Mapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getMapping_Nodes (), this.getTopNodeReference (), null, "nodes", null, 1, - 1, Mapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
578,578d610
<         initEReference (getMappingEntry_ContainmentFeature (), ecorePackage.getEReference (), null, "containmentFeature", null, 0, 1, MappingEntry.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
580a627,627
>         initEReference (getNodeMapping_Children (), this.getChildReference (), this.getChildReference_ParentNode (), "children", null, 0, - 1, NodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
581,582d626
<         initEClass (abstractNodeMappingEClass, AbstractNodeMapping.class, "AbstractNodeMapping", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
<         initEReference (getAbstractNodeMapping_ChildMappings (), this.getChildNodeMapping (), this.getChildNodeMapping_ParentNode (), "childMappings", null, 0, - 1, AbstractNodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
583,583c628,628
<         initEReference (getAbstractNodeMapping_CompartmentMappings (), this.getCompartmentMapping (), this.getCompartmentMapping_ParentNodeMapping (), "compartmentMappings", null, 0, - 1, AbstractNodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getNodeMapping_Compartments (), this.getCompartmentMapping (), this.getCompartmentMapping_ParentNode (), "compartments", null, 0, - 1, NodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
585a613,619
>         initEClass (needsContainmentEClass, NeedsContainment.class, "NeedsContainment", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getNeedsContainment_ContainmentFeature (), ecorePackage.getEReference (), null, "containmentFeature", null, 0, 1, NeedsContainment.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (nodeReferenceEClass, NodeReference.class, "NodeReference", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getNodeReference_ChildrenFeature (), ecorePackage.getEReference (), null, "childrenFeature", null, 0, 1, NodeReference.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         addEOperation (nodeReferenceEClass, this.getNodeMapping (), "getChild", 0, 1);
>         initEClass (childReferenceEClass, ChildReference.class, "ChildReference", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getChildReference_ParentNode (), this.getNodeMapping (), this.getNodeMapping_Children (), "parentNode", null, 1, 1, ChildReference.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
586,587d612
<         initEClass (childNodeMappingEClass, ChildNodeMapping.class, "ChildNodeMapping", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
<         initEReference (getChildNodeMapping_DiagramNode (), theGMFGraphPackage.getChild (), null, "diagramNode", null, 1, 1, ChildNodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
588,588c620,620
<         initEReference (getChildNodeMapping_Compartment (), this.getCompartmentMapping (), this.getCompartmentMapping_ChildNodes (), "compartment", null, 0, 1, ChildNodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getChildReference_Compartment (), this.getCompartmentMapping (), this.getCompartmentMapping_Children (), "compartment", null, 0, 1, ChildReference.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
589,589c621,621
<         initEReference (getChildNodeMapping_ParentNode (), this.getAbstractNodeMapping (), this.getAbstractNodeMapping_ChildMappings (), "parentNode", null, 1, 1, ChildNodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getChildReference_OwnedChild (), this.getNodeMapping (), null, "ownedChild", null, 0, 1, ChildReference.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
589a622,624
>         initEReference (getChildReference_ReferencedChild (), this.getNodeMapping (), null, "referencedChild", null, 0, 1, ChildReference.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEClass (topNodeReferenceEClass, TopNodeReference.class, "TopNodeReference", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEReference (getTopNodeReference_OwnedChild (), this.getNodeMapping (), null, "ownedChild", null, 1, 1, TopNodeReference.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
591,591d629
<         initEReference (getCompartmentMapping_ParentNodeMapping (), this.getAbstractNodeMapping (), this.getAbstractNodeMapping_CompartmentMappings (), "parentNodeMapping", null, 1, 1, CompartmentMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
592a631,631
>         initEReference (getCompartmentMapping_ParentNode (), this.getNodeMapping (), this.getNodeMapping_Compartments (), "parentNode", null, 1, 1, CompartmentMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
593,593c632,632
<         initEReference (getCompartmentMapping_ChildNodes (), this.getChildNodeMapping (), this.getChildNodeMapping_Compartment (), "childNodes", null, 0, - 1, CompartmentMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
---
>         initEReference (getCompartmentMapping_Children (), this.getChildReference (), this.getChildReference_Compartment (), "children", null, 0, - 1, CompartmentMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
688a728,729
>         addAnnotation (getNeedsContainment_ContainmentFeature (), source, new String [] {"ocl", "not containmentFeature.oclIsUndefined() implies containmentFeature.containment", "description", "Containment EReference expected"});
>         addAnnotation (nodeMappingEClass, source, new String [] {"ocl", "not (domainMetaElement.oclIsUndefined()  and containmentFeature.oclIsUndefined())", "description", "Either domain meta element or containment feature must be set in node mapping"});
689,690d727
<         addAnnotation (getMappingEntry_ContainmentFeature (), source, new String [] {"ocl", "not containmentFeature.oclIsUndefined() implies containmentFeature.containment", "description", "Containment EReference expected"});
<         addAnnotation (abstractNodeMappingEClass, source, new String [] {"ocl", "not (domainMetaElement.oclIsUndefined()  and containmentFeature.oclIsUndefined())", "description", "Either domain meta element or containment feature must be set in node mapping"});
691,691c730,730
<         addAnnotation (abstractNodeMappingEClass, source, new String [] {"ocl", "not domainMetaElement.oclIsUndefined() implies containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)", "description", "\'Domain Element\' must be the same or extend the type referenced by \'Containment Feature\'"});
---
>         addAnnotation (nodeMappingEClass, source, new String [] {"ocl", "not domainMetaElement.oclIsUndefined() implies containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)", "description", "\'Domain Element\' must be the same or extend the type referenced by \'Containment Feature\'"});
692,692d730
<         addAnnotation (childNodeMappingEClass, source, new String [] {"ocl", "not containmentFeature.oclIsUndefined() ", "description", "The child node mapping containmentFeature must be set"});
