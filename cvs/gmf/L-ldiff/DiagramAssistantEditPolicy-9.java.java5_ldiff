2a3,10
> import org.eclipse.core.runtime.IProgressMonitor;
> 
> import org.eclipse.core.runtime.IStatus;
> 
> import org.eclipse.core.runtime.Status;
> 
> import org.eclipse.core.runtime.jobs.Job;
> 
26a43,43
> import org.eclipse.ui.progress.UIJob;
27,27d42
< import org.eclipse.swt.widgets.Display;
28,28c44,44
< 
---
> 
37a46,46
>     private class ShowDiagramAssistantJob extends UIJob {
38,38d45
<     private class ShowDiagramAssistantRunnable implements Runnable {
40a49,53
>         protected ShowDiagramAssistantJob () {
>             super ("Show Diagram Assistant");
>             setSystem (true);
>         }
> 
44a58,58
>         public IStatus runInUIThread (IProgressMonitor monitor) {
45,45d57
<         public void run () {
50a64,67
>                     hideDiagramAssistantJob.cancel ();
>                     if (getDiagramAssistantID () != null) {
>                         Job.getJobManager ().wakeUp (getDiagramAssistantID ());
>                     }
53a71,71
>             return Status.OK_STATUS;
57a76,76
>     private class HideDiagramAssistantJob extends UIJob {
58,58d75
<     private class HideDiagramAssistantRunnable implements Runnable {
59a78,83
>         protected HideDiagramAssistantJob () {
>             super ("Hide Diagram Assistant");
>             setSystem (true);
>         }
> 
>         public IStatus runInUIThread (IProgressMonitor monitor) {
60,60d77
<         public void run () {
63a87,91
>             return Status.OK_STATUS;
>         }
> 
>         public boolean belongsTo (Object family) {
>             return family == getDiagramAssistantID ();
85a114,115
>     private ShowDiagramAssistantJob showDiagramAssistantJob = new ShowDiagramAssistantJob ();
>     private HideDiagramAssistantJob hideDiagramAssistantJob = new HideDiagramAssistantJob ();
86,87d113
<     private ShowDiagramAssistantRunnable showDiagramAssistantRunnable = new ShowDiagramAssistantRunnable ();
<     private HideDiagramAssistantRunnable hideDiagramAssistantRunnable = new HideDiagramAssistantRunnable ();
148a177,181
>         if (delay >= 0) {
>             showDiagramAssistantJob.setOriginalMouseLocation (getMouseLocation ());
>             showDiagramAssistantJob.cancel ();
>             showDiagramAssistantJob.schedule (delay);
>         }
149,150d176
<         showDiagramAssistantRunnable.setOriginalMouseLocation (getMouseLocation ());
<         Display.getCurrent ().timerExec (delay, showDiagramAssistantRunnable);
153a185,187
>         if (isDiagramAssistantShowing () && delay >= 0) {
>             hideDiagramAssistantJob.cancel ();
>             hideDiagramAssistantJob.schedule (delay);
154,155d184
<         if (isDiagramAssistantShowing ()) {
<             Display.getCurrent ().timerExec (delay, hideDiagramAssistantRunnable);
220a253,256
>     protected String getDiagramAssistantID () {
>         return null;
>     }
> 
