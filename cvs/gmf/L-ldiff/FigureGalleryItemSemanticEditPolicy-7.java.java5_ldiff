2a3,3
> import java.util.Iterator;
3,3c5,5
< import org.eclipse.emf.ecore.EAnnotation;
---
> import org.eclipse.emf.ecore.EAnnotation;
5,5d4
< import org.eclipse.emf.ecore.EObject;
10a11,24
> import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureGalleryFiguresEditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;
> 
> import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;
> 
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
> 
14a29,30
> import org.eclipse.gmf.runtime.notation.Node;
> 
19a36,42
>         CompoundCommand cc = getDestroyEdgesCommand ();
>         addDestroyChildNodesCommand (cc);
>         addDestroyShortcutsCommand (cc);
>         View view = (View) getHost ().getModel ();
>         if (view.getEAnnotation ("Shortcut") != null) {
>             req.setElementToDestroy (view);
>         }
20,20d35
<         CompoundCommand cc = getDestroyEdgesCommand (req.isConfirmationRequired ());
21,21c43,43
<         cc.add (getMSLWrapper (new DestroyElementCommand (req) {
---
>         cc.add (getGEFWrapper (new DestroyElementCommand (req)));
21a44,45
>         return cc.unwrap ();
>     }
22a47,47
>     protected void addDestroyChildNodesCommand (CompoundCommand cmd) {
23,23d46
<             protected EObject getElementToDestroy () {
27,27c51,51
<                     return view;
---
>             return;
28a53,79
>         for (Iterator it = view.getChildren ().iterator ();
>         it.hasNext ();) {
>             Node node = (Node) it.next ();
>             switch (GMFGraphVisualIDRegistry.getVisualID (node)) {
>                 case FigureGalleryFiguresEditPart.VISUAL_ID :
>                     for (Iterator cit = node.getChildren ().iterator ();
>                     cit.hasNext ();) {
>                         Node cnode = (Node) cit.next ();
>                         switch (GMFGraphVisualIDRegistry.getVisualID (cnode)) {
>                             case FigureDescriptorEditPart.VISUAL_ID :
>                                 cmd.add (getDestroyElementCommand (cnode));
>                                 break;
>                             case Rectangle3EditPart.VISUAL_ID :
>                                 cmd.add (getDestroyElementCommand (cnode));
>                                 break;
>                             case Ellipse3EditPart.VISUAL_ID :
>                                 cmd.add (getDestroyElementCommand (cnode));
>                                 break;
>                             case RoundedRectangle3EditPart.VISUAL_ID :
>                                 cmd.add (getDestroyElementCommand (cnode));
>                                 break;
>                             case Polyline3EditPart.VISUAL_ID :
>                                 cmd.add (getDestroyElementCommand (cnode));
>                                 break;
>                         }
>                     }
>                     break;
29,29d52
<                 return super.getElementToDestroy ();
31,31d80
< 
33,35d81
< 
<         ));
<         return cc.unwrap ();
