12a13,14
> import org.eclipse.gmf.runtime.notation.*;
> 
426a429,664
>                 } case NotationPackage.PROPERTIES_SET_STYLE :
>                 {
>                     PropertiesSetStyle propertiesSetStyle = (PropertiesSetStyle) theEObject;
>                     Object result = casePropertiesSetStyle (propertiesSetStyle);
>                     if (result == null) result = caseNamedStyle (propertiesSetStyle);
> 
>                     if (result == null) result = caseStyle (propertiesSetStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.STRING_TO_PROPERTY_VALUE_MAP_ENTRY :
>                 {
>                     Map.Entry stringToPropertyValueMapEntry = (Map.Entry) theEObject;
>                     Object result = caseStringToPropertyValueMapEntry (stringToPropertyValueMapEntry);
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.PROPERTY_VALUE :
>                 {
>                     PropertyValue propertyValue = (PropertyValue) theEObject;
>                     Object result = casePropertyValue (propertyValue);
>                     if (result == null) result = caseStringObjectConverter (propertyValue);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.SINGLE_VALUE_STYLE :
>                 {
>                     SingleValueStyle singleValueStyle = (SingleValueStyle) theEObject;
>                     Object result = caseSingleValueStyle (singleValueStyle);
>                     if (result == null) result = caseDataTypeStyle (singleValueStyle);
> 
>                     if (result == null) result = caseNamedStyle (singleValueStyle);
> 
>                     if (result == null) result = caseStringObjectConverter (singleValueStyle);
> 
>                     if (result == null) result = caseStyle (singleValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.LIST_VALUE_STYLE :
>                 {
>                     ListValueStyle listValueStyle = (ListValueStyle) theEObject;
>                     Object result = caseListValueStyle (listValueStyle);
>                     if (result == null) result = caseDataTypeStyle (listValueStyle);
> 
>                     if (result == null) result = caseNamedStyle (listValueStyle);
> 
>                     if (result == null) result = caseStringObjectConverter (listValueStyle);
> 
>                     if (result == null) result = caseStyle (listValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.NAMED_STYLE :
>                 {
>                     NamedStyle namedStyle = (NamedStyle) theEObject;
>                     Object result = caseNamedStyle (namedStyle);
>                     if (result == null) result = caseStyle (namedStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.STRING_OBJECT_CONVERTER :
>                 {
>                     StringObjectConverter stringObjectConverter = (StringObjectConverter) theEObject;
>                     Object result = caseStringObjectConverter (stringObjectConverter);
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.DATA_TYPE_STYLE :
>                 {
>                     DataTypeStyle dataTypeStyle = (DataTypeStyle) theEObject;
>                     Object result = caseDataTypeStyle (dataTypeStyle);
>                     if (result == null) result = caseNamedStyle (dataTypeStyle);
> 
>                     if (result == null) result = caseStringObjectConverter (dataTypeStyle);
> 
>                     if (result == null) result = caseStyle (dataTypeStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.INT_VALUE_STYLE :
>                 {
>                     IntValueStyle intValueStyle = (IntValueStyle) theEObject;
>                     Object result = caseIntValueStyle (intValueStyle);
>                     if (result == null) result = caseNamedStyle (intValueStyle);
> 
>                     if (result == null) result = caseStyle (intValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.INT_LIST_VALUE_STYLE :
>                 {
>                     IntListValueStyle intListValueStyle = (IntListValueStyle) theEObject;
>                     Object result = caseIntListValueStyle (intListValueStyle);
>                     if (result == null) result = caseNamedStyle (intListValueStyle);
> 
>                     if (result == null) result = caseStyle (intListValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.BOOLEAN_VALUE_STYLE :
>                 {
>                     BooleanValueStyle booleanValueStyle = (BooleanValueStyle) theEObject;
>                     Object result = caseBooleanValueStyle (booleanValueStyle);
>                     if (result == null) result = caseNamedStyle (booleanValueStyle);
> 
>                     if (result == null) result = caseStyle (booleanValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.DOUBLE_VALUE_STYLE :
>                 {
>                     DoubleValueStyle doubleValueStyle = (DoubleValueStyle) theEObject;
>                     Object result = caseDoubleValueStyle (doubleValueStyle);
>                     if (result == null) result = caseNamedStyle (doubleValueStyle);
> 
>                     if (result == null) result = caseStyle (doubleValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.DOUBLE_LIST_VALUE_STYLE :
>                 {
>                     DoubleListValueStyle doubleListValueStyle = (DoubleListValueStyle) theEObject;
>                     Object result = caseDoubleListValueStyle (doubleListValueStyle);
>                     if (result == null) result = caseNamedStyle (doubleListValueStyle);
> 
>                     if (result == null) result = caseStyle (doubleListValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.STRING_VALUE_STYLE :
>                 {
>                     StringValueStyle stringValueStyle = (StringValueStyle) theEObject;
>                     Object result = caseStringValueStyle (stringValueStyle);
>                     if (result == null) result = caseNamedStyle (stringValueStyle);
> 
>                     if (result == null) result = caseStyle (stringValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.STRING_LIST_VALUE_STYLE :
>                 {
>                     StringListValueStyle stringListValueStyle = (StringListValueStyle) theEObject;
>                     Object result = caseStringListValueStyle (stringListValueStyle);
>                     if (result == null) result = caseNamedStyle (stringListValueStyle);
> 
>                     if (result == null) result = caseStyle (stringListValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.EOBJECT_VALUE_STYLE :
>                 {
>                     EObjectValueStyle eObjectValueStyle = (EObjectValueStyle) theEObject;
>                     Object result = caseEObjectValueStyle (eObjectValueStyle);
>                     if (result == null) result = caseNamedStyle (eObjectValueStyle);
> 
>                     if (result == null) result = caseStyle (eObjectValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.EOBJECT_LIST_VALUE_STYLE :
>                 {
>                     EObjectListValueStyle eObjectListValueStyle = (EObjectListValueStyle) theEObject;
>                     Object result = caseEObjectListValueStyle (eObjectListValueStyle);
>                     if (result == null) result = caseNamedStyle (eObjectListValueStyle);
> 
>                     if (result == null) result = caseStyle (eObjectListValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.BYTE_ARRAY_VALUE_STYLE :
>                 {
>                     ByteArrayValueStyle byteArrayValueStyle = (ByteArrayValueStyle) theEObject;
>                     Object result = caseByteArrayValueStyle (byteArrayValueStyle);
>                     if (result == null) result = caseNamedStyle (byteArrayValueStyle);
> 
>                     if (result == null) result = caseStyle (byteArrayValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.BOOLEAN_LIST_VALUE_STYLE :
>                 {
>                     BooleanListValueStyle booleanListValueStyle = (BooleanListValueStyle) theEObject;
>                     Object result = caseBooleanListValueStyle (booleanListValueStyle);
>                     if (result == null) result = caseNamedStyle (booleanListValueStyle);
> 
>                     if (result == null) result = caseStyle (booleanListValueStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.HINTED_DIAGRAM_LINK_STYLE :
>                 {
>                     HintedDiagramLinkStyle hintedDiagramLinkStyle = (HintedDiagramLinkStyle) theEObject;
>                     Object result = caseHintedDiagramLinkStyle (hintedDiagramLinkStyle);
>                     if (result == null) result = caseDiagramLinkStyle (hintedDiagramLinkStyle);
> 
>                     if (result == null) result = caseStyle (hintedDiagramLinkStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.DIAGRAM_LINK_STYLE :
>                 {
>                     DiagramLinkStyle diagramLinkStyle = (DiagramLinkStyle) theEObject;
>                     Object result = caseDiagramLinkStyle (diagramLinkStyle);
>                     if (result == null) result = caseStyle (diagramLinkStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
>                 } case NotationPackage.MULTI_DIAGRAM_LINK_STYLE :
>                 {
>                     MultiDiagramLinkStyle multiDiagramLinkStyle = (MultiDiagramLinkStyle) theEObject;
>                     Object result = caseMultiDiagramLinkStyle (multiDiagramLinkStyle);
>                     if (result == null) result = caseStyle (multiDiagramLinkStyle);
> 
>                     if (result == null) result = defaultCase (theEObject);
> 
>                     return result;
567a806,893
>     public Object casePropertiesSetStyle (PropertiesSetStyle object) {
>         return null;
>     }
> 
>     public Object caseStringToPropertyValueMapEntry (Map.Entry object) {
>         return null;
>     }
> 
>     public Object casePropertyValue (PropertyValue object) {
>         return null;
>     }
> 
>     public Object caseSingleValueStyle (SingleValueStyle object) {
>         return null;
>     }
> 
>     public Object caseListValueStyle (ListValueStyle object) {
>         return null;
>     }
> 
>     public Object caseNamedStyle (NamedStyle object) {
>         return null;
>     }
> 
>     public Object caseStringObjectConverter (StringObjectConverter object) {
>         return null;
>     }
> 
>     public Object caseDataTypeStyle (DataTypeStyle object) {
>         return null;
>     }
> 
>     public Object caseIntValueStyle (IntValueStyle object) {
>         return null;
>     }
> 
>     public Object caseIntListValueStyle (IntListValueStyle object) {
>         return null;
>     }
> 
>     public Object caseBooleanValueStyle (BooleanValueStyle object) {
>         return null;
>     }
> 
>     public Object caseDoubleValueStyle (DoubleValueStyle object) {
>         return null;
>     }
> 
>     public Object caseDoubleListValueStyle (DoubleListValueStyle object) {
>         return null;
>     }
> 
>     public Object caseStringValueStyle (StringValueStyle object) {
>         return null;
>     }
> 
>     public Object caseStringListValueStyle (StringListValueStyle object) {
>         return null;
>     }
> 
>     public Object caseEObjectValueStyle (EObjectValueStyle object) {
>         return null;
>     }
> 
>     public Object caseEObjectListValueStyle (EObjectListValueStyle object) {
>         return null;
>     }
> 
>     public Object caseByteArrayValueStyle (ByteArrayValueStyle object) {
>         return null;
>     }
> 
>     public Object caseBooleanListValueStyle (BooleanListValueStyle object) {
>         return null;
>     }
> 
>     public Object caseHintedDiagramLinkStyle (HintedDiagramLinkStyle object) {
>         return null;
>     }
> 
>     public Object caseDiagramLinkStyle (DiagramLinkStyle object) {
>         return null;
>     }
> 
>     public Object caseMultiDiagramLinkStyle (MultiDiagramLinkStyle object) {
>         return null;
>     }
> 
