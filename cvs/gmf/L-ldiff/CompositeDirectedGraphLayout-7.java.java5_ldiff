34a35,36
> import org.eclipse.gmf.runtime.draw2d.ui.graph.GMFDirectedGraphLayout;
> 
83,83d84
<             if (advancedSubgraphParent != null && advancedSubgraphParent.getDirection () != PositionConstants.NONE) {
88,88c90,90
<             DirectedGraphLayout layout = new DirectedGraphLayout ();
---
>             DirectedGraphLayout layout = new GMFDirectedGraphLayout ();
89a92,94
>             if (advancedSubgraphParent != null && advancedSubgraphParent.isAutoSize ()) {
>                 advancedSubgraphParent.width = g.getLayoutSize ().width;
>                 advancedSubgraphParent.height = g.getLayoutSize ().height;
90,90c85,85
<             if (advancedSubgraphParent != null) {
---
>             if (advancedSubgraphParent != null) {
91,91d85
<                 adjustAutoSizeNodeWidthAndHeight (advancedSubgraphParent);
241,278d243
<     private void adjustAutoSizeNodeWidthAndHeight (AdvancedSubGraph subGraph) {
<         if (! subGraph.isAutoSize ()) {
<             return;
<         }
<         NodeList nodes = subGraph.members;
<         if (nodes.isEmpty ()) return;
< 
<         int size = nodes.size ();
<         Node node = nodes.getNode (0);
<         int top = node.y, left = node.x, bottom = top + node.height, right = left + node.width;
<         Node topNode, leftNode;
<         topNode = leftNode = node;
<         for (int index = 1;
<         index < size; index ++) {
<             node = (Node) nodes.get (index);
<             if (top > node.y) {
<                 top = node.y;
<                 topNode = node;
<             }
<             if (bottom < (node.y + node.height)) bottom = node.y + node.height;
< 
<             if (left > node.x) {
<                 left = node.x;
<                 leftNode = node;
<             }
<             if (right < (node.x + node.width)) right = node.x + node.width;
< 
<         }
<         int xDiff = 0;
<         int yDiff = 0;
<         if (subGraph.isHasBufferedZone ()) {
<             xDiff = leftNode.x;
<             yDiff = topNode.y;
<         }
<         subGraph.width = right - left + xDiff;
<         subGraph.height = bottom - top + yDiff;
<     }
< 
