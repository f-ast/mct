2a3,4
> import org.eclipse.emf.common.notify.Notification;
> 
8a11,12
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> 
10a15,16
> import org.eclipse.emf.ecore.util.EcoreUtil;
> 
33a40,60
>     public NotificationChain basicSetGroup (ToolGroup newGroup, NotificationChain msgs) {
>         msgs = eBasicSetContainer ((InternalEObject) newGroup, GMFGenPackage.SEPARATOR__GROUP, msgs);
>         return msgs;
>     }
> 
>     public void setGroup (ToolGroup newGroup) {
>         if (newGroup != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.SEPARATOR__GROUP && newGroup != null)) {
>             if (EcoreUtil.isAncestor (this, newGroup)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());
> 
>             NotificationChain msgs = null;
>             if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);
> 
>             if (newGroup != null) msgs = ((InternalEObject) newGroup).eInverseAdd (this, GMFGenPackage.TOOL_GROUP__ENTRIES, ToolGroup.class, msgs);
> 
>             msgs = basicSetGroup (newGroup, msgs);
>             if (msgs != null) msgs.dispatch ();
> 
>         } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.SEPARATOR__GROUP, newGroup, newGroup));
> 
>     }
> 
40,40c67,67
<                 return eBasicSetContainer (otherEnd, GMFGenPackage.SEPARATOR__GROUP, msgs);
---
>                 return basicSetGroup ((ToolGroup) otherEnd, msgs);
49,49c76,76
<                 return eBasicSetContainer (null, GMFGenPackage.SEPARATOR__GROUP, msgs);
---
>                 return basicSetGroup (null, msgs);
72a100,119
>     public void eSet (int featureID, Object newValue) {
>         switch (featureID) {
>             case GMFGenPackage.SEPARATOR__GROUP :
>                 setGroup ((ToolGroup) newValue);
>                 return;
>         }
>         super.eSet (featureID, newValue);
>     }
> 
>     @Override
>     public void eUnset (int featureID) {
>         switch (featureID) {
>             case GMFGenPackage.SEPARATOR__GROUP :
>                 setGroup ((ToolGroup) null);
>                 return;
>         }
>         super.eUnset (featureID);
>     }
> 
>     @Override
