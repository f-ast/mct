18a19,20
> import org.eclipse.gmf.codegen.gmfgen.GenLink;
> 
23a26,27
>     protected static final String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
>     protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
78a83,101
>     public String getCreateCommandClassNameGen () {
>         return createCommandClassName;
>     }
> 
>     public String getCreateCommandClassName () {
>         return GenCommonBaseImpl.getValidClassName (getCreateCommandClassNameGen (), getLink (), CREATE_COMMAND_SUFFIX);
>     }
> 
>     public void setCreateCommandClassName (String newCreateCommandClassName) {
>         String oldCreateCommandClassName = createCommandClassName;
>         createCommandClassName = newCreateCommandClassName;
>         if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME, oldCreateCommandClassName, createCommandClassName));
> 
>     }
> 
>     public String getCreateCommandQualifiedClassName () {
>         return getDiagramImpl ().getEditCommandsPackageName () + '.' + getCreateCommandClassName ();
>     }
> 
107a131,132
>             case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME :
>                 return getCreateCommandClassName ();
119a145,147
>             case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME :
>                 setCreateCommandClassName ((String) newValue);
>                 return;
131a160,162
>             case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME :
>                 setCreateCommandClassName (CREATE_COMMAND_CLASS_NAME_EDEFAULT);
>                 return;
141a173,174
>             case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME :
>                 return CREATE_COMMAND_CLASS_NAME_EDEFAULT == null ? createCommandClassName != null : ! CREATE_COMMAND_CLASS_NAME_EDEFAULT.equals (createCommandClassName);
145a179,196
>     public String toString () {
>         if (eIsProxy ()) return super.toString ();
> 
>         StringBuffer result = new StringBuffer (super.toString ());
>         result.append (" (createCommandClassName: ");
>         result.append (createCommandClassName);
>         result.append (')');
>         return result.toString ();
>     }
> 
>     private GenLink getLink () {
>         return (GenLink) eContainer ();
>     }
> 
>     private GenDiagramImpl getDiagramImpl () {
>         return ((GenDiagramImpl) getLink ().getDiagram ());
>     }
> 
