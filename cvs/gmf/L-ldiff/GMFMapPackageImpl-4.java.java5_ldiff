2a3,4
> import org.eclipse.emf.ecore.EAttribute;
> 
18a21,22
> import org.eclipse.gmf.mappings.Constraint;
> 
30a35,36
> import org.eclipse.gmf.mappings.ValueExpression;
> 
37a44,45
>     private EClass constraintEClass = null;
>     private EClass valueExpressionEClass = null;
72a81,81
>     public EReference getNodeMapping_DomainSpecialization () {
73,73c85,85
<     public EReference getNodeMapping_ContainmentFeature () {
---
>     public EReference getNodeMapping_ContainmentFeature () {
77,77c89,89
<     public EReference getNodeMapping_EditFeature () {
---
>     public EReference getNodeMapping_EditFeature () {
81a94,96
>         return (EReference) nodeMappingEClass.getEStructuralFeatures ().get (5);
>     }
> 
81,81c93,93
<     public EReference getNodeMapping_ChildMappings () {
---
>     public EReference getNodeMapping_ChildMappings () {
112a125,128
>     public EReference getChildNodeMapping_DomainSpecialization () {
>         return (EReference) childNodeMappingEClass.getEStructuralFeatures ().get (6);
>     }
> 
124a141,141
>     public EReference getLinkMapping_DomainSpecialization () {
125,125c145,145
<     public EReference getLinkMapping_ContainmentFeature () {
---
>     public EReference getLinkMapping_ContainmentFeature () {
129,129c149,149
<     public EReference getLinkMapping_LabelEditFeature () {
---
>     public EReference getLinkMapping_LabelEditFeature () {
133,133c153,153
<     public EReference getLinkMapping_LabelDisplayFeature () {
---
>     public EReference getLinkMapping_LabelDisplayFeature () {
137a158,160
>         return (EReference) linkMappingEClass.getEStructuralFeatures ().get (6);
>     }
> 
137,137c157,157
<     public EReference getLinkMapping_LinkMetaFeature () {
---
>     public EReference getLinkMapping_LinkMetaFeature () {
172a193,208
>     public EClass getConstraint () {
>         return constraintEClass;
>     }
> 
>     public EClass getValueExpression () {
>         return valueExpressionEClass;
>     }
> 
>     public EAttribute getValueExpression_Body () {
>         return (EAttribute) valueExpressionEClass.getEStructuralFeatures ().get (0);
>     }
> 
>     public EAttribute getValueExpression_Language () {
>         return (EAttribute) valueExpressionEClass.getEStructuralFeatures ().get (1);
>     }
> 
186a223,223
>         createEReference (nodeMappingEClass, NODE_MAPPING__DOMAIN_SPECIALIZATION);
196a234,234
>         createEReference (childNodeMappingEClass, CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION);
199a238,238
>         createEReference (linkMappingEClass, LINK_MAPPING__DOMAIN_SPECIALIZATION);
211a251,254
>         constraintEClass = createEClass (CONSTRAINT);
>         valueExpressionEClass = createEClass (VALUE_EXPRESSION);
>         createEAttribute (valueExpressionEClass, VALUE_EXPRESSION__BODY);
>         createEAttribute (valueExpressionEClass, VALUE_EXPRESSION__LANGUAGE);
226a270,270
>         constraintEClass.getESuperTypes ().add (this.getValueExpression ());
230a275,275
>         initEReference (getNodeMapping_DomainSpecialization (), this.getConstraint (), null, "domainSpecialization", null, 0, 1, NodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
240a286,286
>         initEReference (getChildNodeMapping_DomainSpecialization (), this.getConstraint (), null, "domainSpecialization", null, 0, 1, ChildNodeMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
243a290,290
>         initEReference (getLinkMapping_DomainSpecialization (), this.getConstraint (), null, "domainSpecialization", null, 0, 1, LinkMapping.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
255a303,306
>         initEClass (constraintEClass, Constraint.class, "Constraint", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEClass (valueExpressionEClass, ValueExpression.class, "ValueExpression", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
>         initEAttribute (getValueExpression_Body (), ecorePackage.getEString (), "body", null, 1, 1, ValueExpression.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
>         initEAttribute (getValueExpression_Language (), ecorePackage.getEString (), "language", "ocl", 0, 1, ValueExpression.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
273a325,325
>         addAnnotation (constraintEClass, source, new String [] {"text", "body->evaluate() instanceof Boolean"});
