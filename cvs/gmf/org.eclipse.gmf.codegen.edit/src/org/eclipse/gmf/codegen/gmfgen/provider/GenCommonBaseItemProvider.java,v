head	1.21;
access;
symbols
	v20081015-1925:1.21
	v20081008-1925:1.21
	v20080924-1925:1.21
	v20080917-1925:1.21
	v20080903-1520:1.21
	v20080827-1520:1.21
	v20080813-1520:1.21
	v20080722-1827:1.21
	v20080718-1700:1.21
	v20080716-1642:1.21
	R2_1_maintenance:1.21.0.2
	Root_R2_1_maintenance:1.21
	R2_1_0:1.21
	v20080610-1132:1.21
	v20080521:1.21
	v20080512-1200:1.21
	v20080508-2000:1.21
	v20080507-1326:1.21
	v20080425-1959:1.21
	v20080417-1610:1.21
	v20080322-0000:1.21
	v20080222-1200:1.20
	v20071130-1111:1.20
	v20071124-0000:1.19
	v20071003-0000:1.20
	v20070921-0000:1.19
	v20070915-0000:1.19
	v20070903-0000:1.20
	v20070809-0000:1.19
	R2_0_maintenance:1.19.0.2
	R2_0:1.19
	R4_20:1.19
	RC3_20:1.19
	v20070614-1400:1.19
	v20070601-1400:1.19
	v20070525-1500:1.19
	v20070520-1200:1.19
	v20070518-1300:1.19
	v20070504-1000:1.18
	v20070427-0600:1.18
	v20070413-1300:1.18
	v20070403-1500:1.18
	v20070330-1300:1.17
	v20060330-1300:1.17
	v20070322-1100:1.17
	v20060316-0600:1.17
	v20070208-1800:1.16
	v20070103-0300:1.15
	M4_20:1.15
	v20061222-1800:1.15
	v20061218-1200:1.15
	v20061214-0000:1.15
	v20061120-1300:1.15
	M3_20:1.15
	v20061117-0800:1.15
	v20061013-1330:1.15
	M1_20:1.14
	v20060904-1500:1.14
	v20060713-1700:1.13
	R1_0_maintenance:1.13.0.2
	R1_0:1.13
	v20060627-1200:1.13
	v20060626-1420:1.12
	v20060620-0400:1.12
	v20060616-1200:1.12
	v20060609-1400:1.12
	v20060531-1730:1.12
	v20060530-1930:1.12
	v20060526-1200:1.12
	v20060519-0800:1.11
	v20060512-1000:1.10
	I20060512-1000:1.10
	I20060505-1400:1.10
	I20060428-1300:1.10
	I20060424-0500:1.10
	I20060424-0300:1.10
	M6_10:1.10
	I20060407-1200:1.9
	I20060331-1000:1.9
	I20060324-0300:1.9
	I20060317-1300:1.9
	I20060317-1200:1.9
	I20060316-1300:1.9
	I20060309-1300:1.9
	M5_10:1.9
	S20060303-1600:1.9
	I20060227-1730:1.9
	I20060216-1945:1.9
	I20060210-1715:1.9
	I20060209-1815:1.9
	I20060203-0830:1.9
	I20060202-1415:1.9
	I20060129-1145:1.9
	I20060127-0900:1.9
	I20060120-1530:1.9
	I20060113-1700:1.9
	M4_10:1.9
	I20060107-1100:1.9
	I20060105-1630:1.8
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051217-0925:1.7
	I20051208-2000:1.7
	I20051201-1800:1.7
	I20051124-2000:1.7
	M3_10:1.7
	I20051118-1245:1.7
	I20051111-1800:1.7
	I20051106-0900:1.6
	v20051030:1.6
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.21
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.20;
commitid	61fc47cc45964567;

1.20
date	2007.06.28.16.22.06;	author dstadnik;	state Exp;
branches;
next	1.19;
commitid	780d4683e02d4567;

1.19
date	2007.05.18.13.27.58;	author dstadnik;	state Exp;
branches;
next	1.18;
commitid	88b464da9dd4567;

1.18
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.17;
commitid	5ebd461280e04567;

1.17
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.16;
commitid	43e345f808fc4567;

1.16
date	2007.01.29.18.09.15;	author ashatalin;	state Exp;
branches;
next	1.15;
commitid	222f45be384a4567;

1.15
date	2006.09.29.21.26.47;	author atikhomirov;	state Exp;
branches;
next	1.14;

1.14
date	2006.07.07.11.58.58;	author dstadnik;	state Exp;
branches;
next	1.13;

1.13
date	2006.06.27.09.09.48;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.24.09.20.08;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.17.14.22.35;	author dstadnik;	state Exp;
branches;
next	1.10;

1.10
date	2006.04.12.08.48.16;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2006.01.06.17.03.26;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.05.17.30.36;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.08.15.00.23;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.27.11.41.47;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.21.13.32.04;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.11.16.43.46;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.07.13.01.14;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.08.56;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.21.38;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.21
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCommonBase} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenCommonBaseItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenCommonBaseItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addDiagramRunTimeClassPropertyDescriptor(object);
			addVisualIDPropertyDescriptor(object);
			addEditPartClassNamePropertyDescriptor(object);
			addItemSemanticEditPolicyClassNamePropertyDescriptor(object);
			addNotationViewFactoryClassNamePropertyDescriptor(object);
			addStylesPropertyDescriptor(object);
			addSansDomainPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Diagram Run Time Class feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDiagramRunTimeClassPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_diagramRunTimeClass_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_diagramRunTimeClass_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_DiagramRunTimeClass(),
				 true,
				 false,
				 false,
				 null,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Visual ID feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addVisualIDPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_visualID_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_visualID_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_VisualID(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Edit Part Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addEditPartClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_editPartClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_editPartClassName_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_EditPartClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Item Semantic Edit Policy Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addItemSemanticEditPolicyClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_itemSemanticEditPolicyClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_itemSemanticEditPolicyClassName_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_ItemSemanticEditPolicyClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Notation View Factory Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNotationViewFactoryClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_notationViewFactoryClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_notationViewFactoryClassName_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_NotationViewFactoryClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Styles feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addStylesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_styles_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_styles_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_Styles(),
				 true,
				 false,
				 true,
				 null,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Sans Domain feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSansDomainPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_sansDomain_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_sansDomain_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_SansDomain(),
				 false,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenCommonBase_ElementType());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenCommonBase_Behaviour());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenCommonBase)object).getEditPartClassName();
		return label == null || label.length() == 0 ?
			getString("_UI_GenCommonBase_type") :
			getString("_UI_GenCommonBase_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenCommonBase.class)) {
			case GMFGenPackage.GEN_COMMON_BASE__VISUAL_ID:
			case GMFGenPackage.GEN_COMMON_BASE__EDIT_PART_CLASS_NAME:
			case GMFGenPackage.GEN_COMMON_BASE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
			case GMFGenPackage.GEN_COMMON_BASE__NOTATION_VIEW_FACTORY_CLASS_NAME:
			case GMFGenPackage.GEN_COMMON_BASE__SANS_DOMAIN:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.GEN_COMMON_BASE__ELEMENT_TYPE:
			case GMFGenPackage.GEN_COMMON_BASE__VIEWMAP:
			case GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_ElementType(),
				 GMFGenFactory.eINSTANCE.createMetamodelType()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_ElementType(),
				 GMFGenFactory.eINSTANCE.createSpecializationType()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_ElementType(),
				 GMFGenFactory.eINSTANCE.createNotationType()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap(),
				 GMFGenFactory.eINSTANCE.createFigureViewmap()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap(),
				 GMFGenFactory.eINSTANCE.createSnippetViewmap()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap(),
				 GMFGenFactory.eINSTANCE.createInnerClassViewmap()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap(),
				 GMFGenFactory.eINSTANCE.createParentAssignedViewmap()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Behaviour(),
				 GMFGenFactory.eINSTANCE.createCustomBehaviour()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Behaviour(),
				 GMFGenFactory.eINSTANCE.createSharedBehaviour()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Behaviour(),
				 GMFGenFactory.eINSTANCE.createOpenDiagramBehaviour()));
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return ((IChildCreationExtender)adapterFactory).getResourceLocator();
	}

}
@


1.20
log
@[193303] Update categories of gmfgen model properties
@
text
@d18 1
a30 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
d376 1
a376 1
		return EditorPlugin.INSTANCE;
@


1.19
log
@[186339] Allow to specify custom notation styles in view factory
@
text
@d140 1
a140 1
				 getString("_UI_DiagramElementPropertyCategory"),
d162 1
a162 1
				 getString("_UI_DiagramElementPropertyCategory"),
d184 1
a184 1
				 getString("_UI_DiagramElementPropertyCategory"),
d206 1
a206 1
				 null,
d228 1
a228 1
				 null,
@


1.18
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d72 1
d189 22
@


1.17
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a16 2

import org.eclipse.emf.edit.command.CommandParameter;
d284 2
a285 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d291 1
a291 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.16
log
@[167466] - Do not generate ??ItemSemanticEditPolicy for pure-design elements
@
text
@d18 1
d22 1
d64 2
a65 1
	public List getPropertyDescriptors(Object object) {
d219 2
a220 1
	public Collection getChildrenFeatures(Object object) {
d235 1
d249 1
d264 1
d292 2
a293 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d353 1
@


1.15
log
@[119465] support for diagram partitioning - started to reorganize the way we store behaviours in the genmodel - let them be reused. OpenDiagram as an example of new way to add behaviours.
@
text
@d71 1
d187 22
d266 1
@


1.14
log
@add custom behaviour
@
text
@d198 1
a198 1
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenCommonBase_CustomBehaviour());
d247 1
a247 1
			case GMFGenPackage.GEN_COMMON_BASE__CUSTOM_BEHAVIOUR:
d301 1
a301 1
				(GMFGenPackage.eINSTANCE.getGenCommonBase_CustomBehaviour(),
d303 10
@


1.13
log
@add property categories
@
text
@d198 1
d247 1
d298 5
@


1.12
log
@heading towards explicit use of parent's figure in children
@
text
@d93 1
a93 1
				 null,
d115 1
a115 1
				 null,
d137 1
a137 1
				 null,
d159 1
a159 1
				 null,
d181 1
a181 1
				 null,
@


1.11
log
@#139127 Provide an option for labels to display node icon
@
text
@d291 5
@


1.10
log
@#126200 register element types in xml
@
text
@d90 2
d112 2
d134 2
d156 2
d178 2
@


1.9
log
@one more flavor of snippet viewmap - inner class
@
text
@d16 2
d186 1
d193 12
d234 1
d254 15
@


1.8
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d245 5
@


1.7
log
@[dstadnik] #115466 custom semantic edit policies to control link creation
@
text
@d239 1
a239 1
				 GMFGenFactory.eINSTANCE.createBasicNodeViewmap()));
d244 1
a244 16
				 GMFGenFactory.eINSTANCE.createDecoratedConnectionViewmap()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap(),
				 GMFGenFactory.eINSTANCE.createDiagramViewmap()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap(),
				 GMFGenFactory.eINSTANCE.createCompartmentViewmap()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenCommonBase_Viewmap(),
				 GMFGenFactory.eINSTANCE.createLabelViewmap()));
@


1.6
log
@[dsadnik] #113824 marker viewmaps for diagram, label and childcontainer
@
text
@d67 1
d134 20
d215 1
@


1.5
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d223 15
@


1.4
log
@#111775 cleanup in gmfgen - unused attributes gone
@
text
@d25 1
d153 16
d197 3
d213 10
@


1.3
log
@#111775 stale properties in gmfgen
#111784 GenChildContainer extends GenCommonBase
@
text
@d66 1
d132 20
d177 1
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@a65 1
			addMetaInfoProviderClassNamePropertyDescriptor(object);
a130 20
	 * This adds a property descriptor for the Meta Info Provider Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addMetaInfoProviderClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenCommonBase_metaInfoProviderClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_metaInfoProviderClassName_feature", "_UI_GenCommonBase_type"),
				 GMFGenPackage.eINSTANCE.getGenCommonBase_MetaInfoProviderClassName(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a155 1
			case GMFGenPackage.GEN_COMMON_BASE__META_INFO_PROVIDER_CLASS_NAME:
@


1.1
log
@*** empty log message ***
@
text
@a14 1

a15 1

a24 1

a26 1

@

