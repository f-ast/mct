head	1.19;
access;
symbols
	v20081015-1925:1.19
	v20081008-1925:1.19
	v20080924-1925:1.19
	v20080917-1925:1.19
	v20080903-1520:1.19
	v20080827-1520:1.19
	v20080813-1520:1.19
	v20080722-1827:1.19
	v20080718-1700:1.19
	v20080716-1642:1.19
	R2_1_maintenance:1.19.0.2
	Root_R2_1_maintenance:1.19
	R2_1_0:1.19
	v20080610-1132:1.19
	v20080521:1.19
	v20080512-1200:1.19
	v20080508-2000:1.19
	v20080507-1326:1.19
	v20080425-1959:1.19
	v20080417-1610:1.19
	v20080322-0000:1.19
	v20080222-1200:1.18
	v20071130-1111:1.18
	v20071124-0000:1.17
	v20071003-0000:1.18
	v20070921-0000:1.17
	v20070915-0000:1.17
	v20070903-0000:1.18
	v20070809-0000:1.17
	R2_0_maintenance:1.17.0.2
	R2_0:1.17
	R4_20:1.17
	RC3_20:1.17
	v20070614-1400:1.17
	v20070601-1400:1.17
	v20070525-1500:1.17
	v20070520-1200:1.17
	v20070518-1300:1.17
	v20070504-1000:1.17
	v20070427-0600:1.17
	v20070413-1300:1.17
	v20070403-1500:1.17
	v20070330-1300:1.16
	v20060330-1300:1.16
	v20070322-1100:1.16
	v20060316-0600:1.16
	v20070208-1800:1.15
	v20070103-0300:1.15
	M4_20:1.15
	v20061222-1800:1.15
	v20061218-1200:1.15
	v20061214-0000:1.15
	v20061120-1300:1.15
	M3_20:1.15
	v20061117-0800:1.15
	v20061013-1330:1.14
	M1_20:1.12
	v20060904-1500:1.12
	v20060713-1700:1.12
	R1_0_maintenance:1.12.0.2
	R1_0:1.12
	v20060627-1200:1.12
	v20060626-1420:1.11
	v20060620-0400:1.11
	v20060616-1200:1.11
	v20060609-1400:1.11
	v20060531-1730:1.11
	v20060530-1930:1.11
	v20060526-1200:1.11
	v20060519-0800:1.11
	v20060512-1000:1.9
	I20060512-1000:1.9
	I20060505-1400:1.9
	I20060428-1300:1.9
	I20060424-0500:1.9
	I20060424-0300:1.9
	M6_10:1.9
	I20060407-1200:1.9
	I20060331-1000:1.9
	I20060324-0300:1.9
	I20060317-1300:1.9
	I20060317-1200:1.9
	I20060316-1300:1.9
	I20060309-1300:1.9
	M5_10:1.9
	S20060303-1600:1.9
	I20060227-1730:1.9
	I20060216-1945:1.8
	I20060210-1715:1.8
	I20060209-1815:1.8
	I20060203-0830:1.8
	I20060202-1415:1.8
	I20060129-1145:1.8
	I20060127-0900:1.8
	I20060120-1530:1.7
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.6
	I20051124-2000:1.5
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.4
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.19
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.18;
commitid	161e47cc392a4567;

1.18
date	2007.06.28.16.22.06;	author dstadnik;	state Exp;
branches;
next	1.17;
commitid	780d4683e02d4567;

1.17
date	2007.04.03.16.29.56;	author atikhomirov;	state Exp;
branches;
next	1.16;
commitid	5ebd461280e04567;

1.16
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	43e345f808fc4567;

1.15
date	2006.10.27.17.36.38;	author ashatalin;	state Exp;
branches;
next	1.14;

1.14
date	2006.10.06.15.03.20;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.10.06.12.15.33;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2006.06.27.09.09.48;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.17.14.22.35;	author dstadnik;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.17.12.38.51;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.22.12.08.59;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.24.12.00.53;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.19.00.10.38;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.29.18.33.06;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.23.10.11.56;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.27.16.11.17;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.11.10.56.01;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.08.55;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.21.38;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.19
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenChildContainerItemProvider
	extends GenCommonBaseItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenChildContainerItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addCanonicalEditPolicyClassNamePropertyDescriptor(object);
			addChildNodesPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Child Nodes feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addChildNodesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_childNodes_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_childNodes_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_ChildNodes(),
				 true,
				 false,
				 false,
				 null,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Canonical Edit Policy Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addCanonicalEditPolicyClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenContainerBase_canonicalEditPolicyClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenContainerBase_canonicalEditPolicyClassName_feature", "_UI_GenContainerBase_type"),
				 GMFGenPackage.eINSTANCE.getGenContainerBase_CanonicalEditPolicyClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenChildContainer)object).getEditPartClassName();
		return label == null || label.length() == 0 ?
			getString("_UI_GenChildContainer_type") :
			getString("_UI_GenChildContainer_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenChildContainer.class)) {
			case GMFGenPackage.GEN_CHILD_CONTAINER__CANONICAL_EDIT_POLICY_CLASS_NAME:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

}
@


1.18
log
@[193303] Update categories of gmfgen model properties
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a25 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a156 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.17
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d88 1
a88 1
				 getString("_UI_DiagramContainmentPropertyCategory"),
d110 1
a110 1
				 getString("_UI_EditPoliciesPropertyCategory"),
@


1.16
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a15 1
import org.eclipse.emf.edit.command.CommandParameter;
d148 2
a149 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d155 1
a155 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.15
log
@GenContainerBase.containedNodes should be readonly
@
text
@d16 1
d20 1
d60 2
a61 1
	public List getPropertyDescriptors(Object object) {
d121 1
d136 1
d155 2
a156 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d166 1
@


1.14
log
@put property to category
@
text
@a61 1
			addContainedNodesPropertyDescriptor(object);
a68 22
	 * This adds a property descriptor for the Contained Nodes feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addContainedNodesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenContainerBase_containedNodes_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenContainerBase_containedNodes_feature", "_UI_GenContainerBase_type"),
				 GMFGenPackage.eINSTANCE.getGenContainerBase_ContainedNodes(),
				 true,
				 false,
				 false,
				 null,
				 getString("_UI_DiagramContainmentPropertyCategory"),
				 null));
	}

	/**
@


1.13
log
@refactor common attribute (canonical ep name) into shared superclass, get ready to avoid generation of useless canonicalep classes
@
text
@d131 1
a131 1
				 null,
@


1.12
log
@add property categories
@
text
@d63 1
a64 1
			addCanonicalEditPolicyClassNamePropertyDescriptor(object);
d124 3
a126 3
				 getString("_UI_GenChildContainer_canonicalEditPolicyClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_canonicalEditPolicyClassName_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_CanonicalEditPolicyClassName(),
d131 1
a131 1
				 getString("_UI_DiagramContainmentPropertyCategory"),
@


1.11
log
@#139127 Provide an option for labels to display node icon
@
text
@d87 1
a87 1
				 null,
d109 1
a109 1
				 null,
d131 1
a131 1
				 null,
@


1.10
log
@[mgolubev] #140186 XYLayoutEditPolicy should not be installed for editparts that have figure with non-XYLayout in the gmfgraph model
@
text
@d84 2
d106 2
d128 2
@


1.9
log
@- genmodel was regenerated (removing some incorrectly merged properties)
- code with new genmodel was regenerated
@
text
@a64 1
			addListLayoutPropertyDescriptor(object);
a129 20
	 * This adds a property descriptor for the List Layout feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addListLayoutPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_listLayout_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_listLayout_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_ListLayout(),
				 true,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a153 1
			case GMFGenPackage.GEN_CHILD_CONTAINER__LIST_LAYOUT:
@


1.8
log
@rename GenContainerEditPart -> GenContainerBase
@
text
@a23 1
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
d63 1
d91 20
a150 26
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Collection getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenChildContainer_ChildNodes());
		}
		return childrenFeatures;
	}

	/**
	 * This returns GenChildContainer.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object getImage(Object object) {
		return getResourceLocator().getImage("full/obj16/GenChildContainer");
	}

	/**
a177 3
			case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
a190 5

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenChildContainer_ChildNodes(),
				 GMFGenFactory.eINSTANCE.createGenChildNode()));
@


1.7
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d81 3
a83 3
				 getString("_UI_GenContainerEditPart_containedNodes_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenContainerEditPart_containedNodes_feature", "_UI_GenContainerEditPart_type"),
				 GMFGenPackage.eINSTANCE.getGenContainerEditPart_ContainedNodes(),
@


1.6
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d63 1
d65 1
d71 20
d111 20
d181 1
@


1.5
log
@#117660 move canonical edit policy into separate class to shorten it's file name
@
text
@a22 1
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
@


1.4
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@d64 1
d70 20
d139 3
@


1.3
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@d25 1
a63 6
			addGroupIDPropertyDescriptor(object);
			addTitleKeyPropertyDescriptor(object);
			addCanCollapsePropertyDescriptor(object);
			addHideIfEmptyPropertyDescriptor(object);
			addNeedsTitlePropertyDescriptor(object);
			addLayoutKindPropertyDescriptor(object);
d69 3
a71 1
	 * This adds a property descriptor for the Group ID feature.
d76 6
a81 112
	protected void addGroupIDPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_groupID_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_groupID_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_GroupID(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Title Key feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTitleKeyPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_titleKey_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_titleKey_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_TitleKey(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Can Collapse feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addCanCollapsePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_canCollapse_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_canCollapse_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_CanCollapse(),
				 true,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Hide If Empty feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addHideIfEmptyPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_hideIfEmpty_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_hideIfEmpty_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_HideIfEmpty(),
				 true,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Needs Title feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNeedsTitlePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_needsTitle_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_needsTitle_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_NeedsTitle(),
				 true,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Layout Kind feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addLayoutKindPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildContainer_layoutKind_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildContainer_layoutKind_feature", "_UI_GenChildContainer_type"),
				 GMFGenPackage.eINSTANCE.getGenChildContainer_LayoutKind(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
d118 2
a119 7
			case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID:
			case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY:
			case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE:
			case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY:
			case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE:
			case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
d134 5
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d36 1
a36 1
	extends ItemProviderAdapter
d210 1
a210 1
		String label = ((GenChildContainer)object).getGroupID();
@


1.1
log
@*** empty log message ***
@
text
@a14 1

a15 1

a24 1

a26 1

@

