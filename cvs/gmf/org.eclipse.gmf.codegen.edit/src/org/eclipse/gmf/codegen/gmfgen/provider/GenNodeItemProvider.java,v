head	1.26;
access;
symbols
	v20081015-1925:1.26
	v20081008-1925:1.26
	v20080924-1925:1.26
	v20080917-1925:1.26
	v20080903-1520:1.26
	v20080827-1520:1.26
	v20080813-1520:1.25
	v20080722-1827:1.25
	v20080718-1700:1.25
	v20080716-1642:1.25
	R2_1_maintenance:1.25.0.2
	Root_R2_1_maintenance:1.25
	R2_1_0:1.25
	v20080610-1132:1.25
	v20080521:1.25
	v20080512-1200:1.25
	v20080508-2000:1.25
	v20080507-1326:1.25
	v20080425-1959:1.25
	v20080417-1610:1.25
	v20080322-0000:1.25
	v20080222-1200:1.24
	v20071130-1111:1.24
	v20071124-0000:1.23
	v20071003-0000:1.24
	v20070921-0000:1.23
	v20070915-0000:1.23
	v20070903-0000:1.24
	v20070809-0000:1.23
	R2_0_maintenance:1.23.0.2
	R2_0:1.23
	R4_20:1.23
	RC3_20:1.23
	v20070614-1400:1.23
	v20070601-1400:1.23
	v20070525-1500:1.23
	v20070520-1200:1.23
	v20070518-1300:1.23
	v20070504-1000:1.23
	v20070427-0600:1.23
	v20070413-1300:1.23
	v20070403-1500:1.23
	v20070330-1300:1.22
	v20060330-1300:1.22
	v20070322-1100:1.22
	v20060316-0600:1.22
	v20070208-1800:1.21
	v20070103-0300:1.21
	M4_20:1.21
	v20061222-1800:1.21
	v20061218-1200:1.21
	v20061214-0000:1.20
	v20061120-1300:1.18
	M3_20:1.18
	v20061117-0800:1.18
	v20061013-1330:1.18
	M1_20:1.18
	v20060904-1500:1.18
	v20060713-1700:1.18
	R1_0_maintenance:1.18.0.2
	R1_0:1.18
	v20060627-1200:1.18
	v20060626-1420:1.17
	v20060620-0400:1.17
	v20060616-1200:1.17
	v20060609-1400:1.17
	v20060531-1730:1.17
	v20060530-1930:1.17
	v20060526-1200:1.17
	v20060519-0800:1.17
	v20060512-1000:1.16
	I20060512-1000:1.16
	I20060505-1400:1.16
	I20060428-1300:1.16
	I20060424-0500:1.16
	I20060424-0300:1.16
	M6_10:1.16
	I20060407-1200:1.15
	I20060331-1000:1.14
	I20060324-0300:1.14
	I20060317-1300:1.14
	I20060317-1200:1.14
	I20060316-1300:1.14
	I20060309-1300:1.14
	M5_10:1.14
	S20060303-1600:1.14
	I20060227-1730:1.14
	I20060216-1945:1.13
	I20060210-1715:1.13
	I20060209-1815:1.13
	I20060203-0830:1.13
	I20060202-1415:1.13
	I20060129-1145:1.13
	I20060127-0900:1.13
	I20060120-1530:1.13
	I20060113-1700:1.11
	M4_10:1.11
	I20060107-1100:1.10
	I20060105-1630:1.10
	I20051230-1230:1.10
	I20051223-1100:1.10
	I20051217-0925:1.10
	I20051208-2000:1.10
	I20051201-1800:1.10
	I20051124-2000:1.10
	M3_10:1.8
	I20051118-1245:1.8
	I20051111-1800:1.8
	I20051106-0900:1.8
	v20051030:1.8
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.26
date	2008.08.22.15.57.46;	author atikhomirov;	state Exp;
branches;
next	1.25;
commitid	442348aee1f94567;

1.25
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.24;
commitid	161e47cc392a4567;

1.24
date	2007.06.28.16.22.06;	author dstadnik;	state Exp;
branches;
next	1.23;
commitid	780d4683e02d4567;

1.23
date	2007.04.03.16.29.56;	author atikhomirov;	state Exp;
branches;
next	1.22;
commitid	5ebd461280e04567;

1.22
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.21;
commitid	43e345f808fc4567;

1.21
date	2006.12.15.15.48.43;	author dstadnik;	state Exp;
branches;
next	1.20;
commitid	5ebf4582c3d64567;

1.20
date	2006.12.12.12.00.10;	author dstadnik;	state Exp;
branches;
next	1.19;
commitid	2dd2457e99c94567;

1.19
date	2006.12.11.18.40.40;	author ashatalin;	state Exp;
branches;
next	1.18;
commitid	7fae457da6284567;

1.18
date	2006.06.27.09.09.48;	author dstadnik;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.17.14.22.36;	author dstadnik;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.12.08.48.16;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.03.12.52.51;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.02.22.12.08.59;	author ashatalin;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.19.00.10.38;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.01.17.10.55.02;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.12.10.41.16;	author dstadnik;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.24.08.51.28;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.21.09.35.27;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.27.16.11.17;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.26.18.43.50;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.24.13.31.56;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.21.13.32.04;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.11.12.25.37;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.04.13.36.32;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.08.56;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.21.38;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.26
log
@[243151] mgolubev - explicit source/target for links
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenNode;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNode} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenNodeItemProvider
	extends GenChildContainerItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenNodeItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addGenOutgoingLinksPropertyDescriptor(object);
			addGenIncomingLinksPropertyDescriptor(object);
			addCompartmentsPropertyDescriptor(object);
			addPrimaryDragEditPolicyQualifiedClassNamePropertyDescriptor(object);
			addGraphicalNodeEditPolicyClassNamePropertyDescriptor(object);
			addCreateCommandClassNamePropertyDescriptor(object);
			addReorientedIncomingLinksPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Gen Outgoing Links feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGenOutgoingLinksPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLinkEnd_genOutgoingLinks_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLinkEnd_genOutgoingLinks_feature", "_UI_GenLinkEnd_type"),
				 GMFGenPackage.eINSTANCE.getGenLinkEnd_GenOutgoingLinks(),
				 false,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Gen Incoming Links feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGenIncomingLinksPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLinkEnd_genIncomingLinks_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLinkEnd_genIncomingLinks_feature", "_UI_GenLinkEnd_type"),
				 GMFGenPackage.eINSTANCE.getGenLinkEnd_GenIncomingLinks(),
				 false,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Compartments feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addCompartmentsPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_compartments_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_compartments_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_Compartments(),
				 true,
				 false,
				 false,
				 null,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Primary Drag Edit Policy Qualified Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addPrimaryDragEditPolicyQualifiedClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_primaryDragEditPolicyQualifiedClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_primaryDragEditPolicyQualifiedClassName_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_PrimaryDragEditPolicyQualifiedClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Graphical Node Edit Policy Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGraphicalNodeEditPolicyClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_graphicalNodeEditPolicyClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_graphicalNodeEditPolicyClassName_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_GraphicalNodeEditPolicyClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Create Command Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addCreateCommandClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_createCommandClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_createCommandClassName_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_CreateCommandClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Reoriented Incoming Links feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addReorientedIncomingLinksPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_reorientedIncomingLinks_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_reorientedIncomingLinks_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_ReorientedIncomingLinks(),
				 false,
				 false,
				 false,
				 null,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenNode_ModelFacet());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenNode_Labels());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenNode)object).getEditPartClassName();
		return label == null || label.length() == 0 ?
			getString("_UI_GenNode_type") :
			getString("_UI_GenNode_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenNode.class)) {
			case GMFGenPackage.GEN_NODE__PRIMARY_DRAG_EDIT_POLICY_QUALIFIED_CLASS_NAME:
			case GMFGenPackage.GEN_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
			case GMFGenPackage.GEN_NODE__CREATE_COMMAND_CLASS_NAME:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.GEN_NODE__MODEL_FACET:
			case GMFGenPackage.GEN_NODE__LABELS:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_ModelFacet(),
				 GMFGenFactory.eINSTANCE.createTypeModelFacet()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_ModelFacet(),
				 GMFGenFactory.eINSTANCE.createTypeLinkModelFacet()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_Labels(),
				 GMFGenFactory.eINSTANCE.createGenNodeLabel()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_Labels(),
				 GMFGenFactory.eINSTANCE.createGenExternalNodeLabel()));
	}

}
@


1.25
log
@regenerated with EMF 2.4M5
@
text
@d64 2
d76 44
@


1.24
log
@[193303] Update categories of gmfgen model properties
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a27 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a284 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.23
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d93 1
a93 1
				 getString("_UI_DiagramContainmentPropertyCategory"),
d115 1
a115 1
				 null,
d137 1
a137 1
				 getString("_UI_DiagramElementPropertyCategory"),
d159 1
a159 1
				 null,
d181 1
a181 1
				 null,
@


1.22
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a16 1
import org.eclipse.emf.edit.command.CommandParameter;
d256 2
a257 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d263 1
a263 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.21
log
@remove unused edit policy name; add custom primary drag edit policy name
@
text
@d17 1
d21 1
d62 2
a63 1
	public List getPropertyDescriptors(Object object) {
d194 2
a195 1
	public Collection getChildrenFeatures(Object object) {
d209 1
d223 1
d238 1
d263 2
a264 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d294 1
@


1.20
log
@change getRevertedIncomingLinks() method to property for xpand templates
@
text
@d65 1
d96 22
d236 1
@


1.19
log
@[157683] - Generate link creation/initialization command in single separate classes instead of duplication of the code in different SemanticEditPolicy'ies
@
text
@d67 1
d139 22
@


1.18
log
@add property categories
@
text
@d66 1
d116 22
d191 1
@


1.17
log
@#139127 Provide an option for labels to display node icon
@
text
@d88 1
a88 1
				 null,
d110 1
a110 1
				 null,
@


1.16
log
@#126200 register element types in xml
@
text
@d85 2
d107 2
@


1.15
log
@#126200 register element types in xml
@
text
@a63 1
			addEditHelperClassNamePropertyDescriptor(object);
a70 20
	 * This adds a property descriptor for the Edit Helper Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addEditHelperClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ElementType_editHelperClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ElementType_editHelperClassName_feature", "_UI_ElementType_type"),
				 GMFGenPackage.eINSTANCE.getElementType_EditHelperClassName(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a162 1
			case GMFGenPackage.GEN_NODE__EDIT_HELPER_CLASS_NAME:
@


1.14
log
@- genmodel was regenerated (removing some incorrectly merged properties)
- code with new genmodel was regenerated
@
text
@d64 1
d72 20
d184 1
@


1.13
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d64 1
d71 20
a122 1
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenNode_Compartments());
a139 10
	 * This returns GenNode.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object getImage(Object object) {
		return getResourceLocator().getImage("full/obj16/GenNode");
	}

	/**
a167 1
			case GMFGenPackage.GEN_NODE__COMPARTMENTS:
a202 5

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_Compartments(),
				 GMFGenFactory.eINSTANCE.createGenCompartment()));
@


1.12
log
@#123411 Support diagram without palette
cleanup (deprecated attribute removed, as well as incorrect javadoc)
@
text
@a63 1
			addChildContainersPlacementPropertyDescriptor(object);
a69 20
	 * This adds a property descriptor for the Child Containers Placement feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addChildContainersPlacementPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_childContainersPlacement_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_childContainersPlacement_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_ChildContainersPlacement(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a152 1
			case GMFGenPackage.GEN_NODE__CHILD_CONTAINERS_PLACEMENT:
@


1.11
log
@#122054 support external node labels (partial fix)
@
text
@a64 1
			addExplicitContentPanePropertyDescriptor(object);
a90 20
	 * This adds a property descriptor for the Explicit Content Pane feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addExplicitContentPanePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_explicitContentPane_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_explicitContentPane_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_ExplicitContentPane(),
				 true,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a174 1
			case GMFGenPackage.GEN_NODE__EXPLICIT_CONTENT_PANE:
@


1.10
log
@#112318 Do not overwrite paintFigure() method in node edit part when specific figure class is specified
@
text
@d236 5
@


1.9
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@d65 1
d92 20
d196 1
@


1.8
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@d65 1
d91 20
d175 1
@


1.7
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@d37 1
a37 1
	extends GenCommonBaseItemProvider
d102 1
a102 2
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenNode_ChildContainers());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenNode_ChildNodes());
d158 1
a158 2
			case GMFGenPackage.GEN_NODE__CHILD_CONTAINERS:
			case GMFGenPackage.GEN_NODE__CHILD_NODES:
d192 2
a193 7
				(GMFGenPackage.eINSTANCE.getGenNode_ChildContainers(),
				 GMFGenFactory.eINSTANCE.createGenChildContainer()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_ChildNodes(),
				 GMFGenFactory.eINSTANCE.createGenChildNode()));
@


1.6
log
@#112196 model facets in use for GenNode
@
text
@d37 1
a37 1
	extends GenBaseElementItemProvider
@


1.5
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@a63 1
			addDomainMetaClassPropertyDescriptor(object);
a69 20
	 * This adds a property descriptor for the Domain Meta Class feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDomainMetaClassPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_domainMetaClass_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_domainMetaClass_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_DomainMetaClass(),
				 true,
				 null,
				 null,
				 null));
	}

	/**
d100 1
a103 1
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenNode_ModelFacet());
d157 1
a160 1
			case GMFGenPackage.GEN_NODE__MODEL_FACET:
d179 10
a200 10

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_ModelFacet(),
				 GMFGenFactory.eINSTANCE.createTypeModelFacet()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenNode_ModelFacet(),
				 GMFGenFactory.eINSTANCE.createTypeLinkModelFacet()));
@


1.4
log
@#112191 colors as Viewmap's Attributes
@
text
@d121 1
d124 1
d178 1
d181 1
d200 5
d212 10
@


1.3
log
@removed unused property 'affixedStereotypes'
@
text
@a64 1
			addBackgroundColorPropertyDescriptor(object);
a90 20
	 * This adds a property descriptor for the Background Color feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addBackgroundColorPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_backgroundColor_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_backgroundColor_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_BackgroundColor(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a172 1
			case GMFGenPackage.GEN_NODE__BACKGROUND_COLOR:
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@a64 1
			addAffixedStereotypesPropertyDescriptor(object);
a91 20
	 * This adds a property descriptor for the Affixed Stereotypes feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addAffixedStereotypesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_affixedStereotypes_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_affixedStereotypes_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_AffixedStereotypes(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a193 1
			case GMFGenPackage.GEN_NODE__AFFIXED_STEREOTYPES:
@


1.1
log
@*** empty log message ***
@
text
@a14 1

a15 1

a16 1

a24 1

a27 1

a64 3
			addViewmapURIPropertyDescriptor(object);
			addNodeVisualizationKindPropertyDescriptor(object);
			addViewmapClassPropertyDescriptor(object);
a92 60
	 * This adds a property descriptor for the Viewmap URI feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addViewmapURIPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_viewmapURI_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_viewmapURI_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_ViewmapURI(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Node Visualization Kind feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNodeVisualizationKindPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_nodeVisualizationKind_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_nodeVisualizationKind_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_NodeVisualizationKind(),
				 true,
				 ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Viewmap Class feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addViewmapClassPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenNode_viewmapClass_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenNode_viewmapClass_feature", "_UI_GenNode_type"),
				 GMFGenPackage.eINSTANCE.getGenNode_ViewmapClass(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a214 3
			case GMFGenPackage.GEN_NODE__VIEWMAP_URI:
			case GMFGenPackage.GEN_NODE__NODE_VISUALIZATION_KIND:
			case GMFGenPackage.GEN_NODE__VIEWMAP_CLASS:
@

