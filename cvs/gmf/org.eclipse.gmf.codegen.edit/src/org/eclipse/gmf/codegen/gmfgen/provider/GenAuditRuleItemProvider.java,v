head	1.15;
access;
symbols
	v20081015-1925:1.15
	v20081008-1925:1.15
	v20080924-1925:1.15
	v20080917-1925:1.15
	v20080903-1520:1.15
	v20080827-1520:1.15
	v20080813-1520:1.15
	v20080722-1827:1.15
	v20080718-1700:1.15
	v20080716-1642:1.15
	R2_1_maintenance:1.15.0.2
	Root_R2_1_maintenance:1.15
	R2_1_0:1.15
	v20080610-1132:1.15
	v20080521:1.15
	v20080512-1200:1.15
	v20080508-2000:1.14
	v20080507-1326:1.14
	v20080425-1959:1.14
	v20080417-1610:1.14
	v20080322-0000:1.13
	v20080222-1200:1.12
	v20071130-1111:1.12
	v20071124-0000:1.12
	v20071003-0000:1.12
	v20070921-0000:1.12
	v20070915-0000:1.12
	v20070903-0000:1.12
	v20070809-0000:1.12
	R2_0_maintenance:1.12.0.2
	R2_0:1.12
	R4_20:1.12
	RC3_20:1.12
	v20070614-1400:1.12
	v20070601-1400:1.12
	v20070525-1500:1.12
	v20070520-1200:1.12
	v20070518-1300:1.12
	v20070504-1000:1.12
	v20070427-0600:1.12
	v20070413-1300:1.12
	v20070403-1500:1.12
	v20070330-1300:1.11
	v20060330-1300:1.11
	v20070322-1100:1.11
	v20060316-0600:1.11
	v20070208-1800:1.10
	v20070103-0300:1.9
	M4_20:1.9
	v20061222-1800:1.9
	v20061218-1200:1.9
	v20061214-0000:1.9
	v20061120-1300:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061013-1330:1.9
	M1_20:1.9
	v20060904-1500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060620-0400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.9
	v20060530-1930:1.9
	v20060526-1200:1.9
	v20060519-0800:1.9
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.5
	I20060216-1945:1.3
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.15
date	2008.05.09.15.40.02;	author atikhomirov;	state Exp;
branches;
next	1.14;
commitid	11df482470524567;

1.14
date	2008.04.14.08.37.48;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	1b07480317db4567;

1.13
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	161e47cc392a4567;

1.12
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	5ebd461280e04567;

1.11
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	43e345f808fc4567;

1.10
date	2007.02.08.18.06.54;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	59745cb66bc4567;

1.9
date	2006.05.17.14.22.36;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.25.19.15.54;	author radvorak;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.09.13.35.58;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.24.20.23.11;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.22.12.08.59;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.14.18.46.19;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.20.53.06;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.10.12.51.25;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.15
log
@[228913] migration support for ValueExpression metamodel changes - updated genmodel for proper editing
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenAuditRule;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenAuditRuleItemProvider
	extends GenRuleBaseItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenAuditRuleItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addIdPropertyDescriptor(object);
			addRulePropertyDescriptor(object);
			addMessagePropertyDescriptor(object);
			addSeverityPropertyDescriptor(object);
			addUseInLiveModePropertyDescriptor(object);
			addCategoryPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Id feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addIdPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_id_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_id_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Id(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Rule feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addRulePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_rule_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_rule_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Rule(),
				 true,
				 false,
				 true,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Message feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addMessagePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_message_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_message_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Message(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Severity feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSeverityPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_severity_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_severity_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Severity(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Use In Live Mode feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addUseInLiveModePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_useInLiveMode_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_useInLiveMode_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_UseInLiveMode(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Category feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addCategoryPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_category_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_category_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Category(),
				 true,
				 false,
				 true,
				 null,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenAuditRule_Target());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns GenAuditRule.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenAuditRule"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenAuditRule)object).getName();
		return label == null || label.length() == 0 ?
			getString("_UI_GenAuditRule_type") :
			getString("_UI_GenAuditRule_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenAuditRule.class)) {
			case GMFGenPackage.GEN_AUDIT_RULE__ID:
			case GMFGenPackage.GEN_AUDIT_RULE__MESSAGE:
			case GMFGenPackage.GEN_AUDIT_RULE__SEVERITY:
			case GMFGenPackage.GEN_AUDIT_RULE__USE_IN_LIVE_MODE:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.GEN_AUDIT_RULE__TARGET:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Target(),
				 GMFGenFactory.eINSTANCE.createGenDomainElementTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Target(),
				 GMFGenFactory.eINSTANCE.createGenDiagramElementTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Target(),
				 GMFGenFactory.eINSTANCE.createGenDomainAttributeTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Target(),
				 GMFGenFactory.eINSTANCE.createGenNotationElementTarget()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Target(),
				 GMFGenFactory.eINSTANCE.createGenAuditedMetricTarget()));
	}

}
@


1.14
log
@[226149] Refactor Validation/Constraints: explicit context groupings instead of ID matching, unused IClientSelectors implementations are no longer generated, less custom code in the model, odd approach with map (semanticCtxIdMap) replaced with in-place VisualID check.
@
text
@d65 1
d97 22
a217 1
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenAuditRule_Rule());
a278 1
			case GMFGenPackage.GEN_AUDIT_RULE__RULE:
a298 5
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Rule(),
				 GMFGenFactory.eINSTANCE.createGenConstraint()));

		newChildDescriptors.add
			(createChildParameter
@


1.13
log
@regenerated with EMF 2.4M5
@
text
@a63 1
			addContextSelectorLocalClassNamePropertyDescriptor(object);
a73 22
	 * This adds a property descriptor for the Context Selector Local Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addContextSelectorLocalClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_contextSelectorLocalClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_contextSelectorLocalClassName_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_ContextSelectorLocalClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a250 1
			case GMFGenPackage.GEN_AUDIT_RULE__CONTEXT_SELECTOR_LOCAL_CLASS_NAME:
@


1.12
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a27 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a330 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.11
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 1

a16 2

import org.eclipse.emf.edit.command.CommandParameter;
a25 1

a28 1

d292 2
a293 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d299 1
a299 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.10
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d20 1
d24 1
d67 2
a68 1
	public List getPropertyDescriptors(Object object) {
d222 2
a223 1
	public Collection getChildrenFeatures(Object object) {
d237 1
d251 1
d262 1
d277 1
d304 2
a305 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d345 1
@


1.9
log
@#139127 Provide an option for labels to display node icon
@
text
@d69 1
d74 1
d80 22
d190 22
d274 1
@


1.8
log
@#138464 Support EAttribute based target in AuditRule element
@
text
@d92 2
d114 2
d136 2
d158 2
@


1.7
log
@remove warnings
@
text
@d262 5
@


1.6
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@a26 1
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
@


1.5
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@d43 1
a43 1
	extends ItemProviderAdapter
a70 1
			addNamePropertyDescriptor(object);
a71 1
			addDescriptionPropertyDescriptor(object);
a98 20
	 * This adds a property descriptor for the Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_name_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_name_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Name(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a118 20
	 * This adds a property descriptor for the Description feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDescriptionPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_description_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_description_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Description(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a168 1
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenRuleBase_Target());
d170 1
d194 1
a194 1
		return getResourceLocator().getImage("full/obj16/GenAuditRule");
a221 1
			case GMFGenPackage.GEN_AUDIT_RULE__NAME:
a222 1
			case GMFGenPackage.GEN_AUDIT_RULE__DESCRIPTION:
d227 1
a228 1
			case GMFGenPackage.GEN_AUDIT_RULE__RULE:
d247 6
a252 1
				(GMFGenPackage.eINSTANCE.getGenRuleBase_Target(),
d257 1
a257 1
				(GMFGenPackage.eINSTANCE.getGenRuleBase_Target(),
d262 1
a262 1
				(GMFGenPackage.eINSTANCE.getGenRuleBase_Target(),
d267 2
a268 2
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Rule(),
				 GMFGenFactory.eINSTANCE.createGenConstraint()));
@


1.4
log
@- genmodel was regenerated (removing some incorrectly merged properties)
- code with new genmodel was regenerated
@
text
@d18 2
a70 1
			addTargetPropertyDescriptor(object);
a100 20
	 * This adds a property descriptor for the Target feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTargetPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_target_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_target_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Target(),
				 true,
				 null,
				 null,
				 null));
	}

	/**
d211 1
d218 12
d271 1
d291 15
@


1.3
log
@[rdvorak] #127700 Rename genmodel::ModelElementSelector as a generic GenConstraint element
@
text
@a68 1
			addRulePropertyDescriptor(object);
a99 20
	 * This adds a property descriptor for the Rule feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addRulePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenAuditRule_rule_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenAuditRule_rule_feature", "_UI_GenAuditRule_type"),
				 GMFGenPackage.eINSTANCE.getGenAuditRule_Rule(),
				 true,
				 null,
				 null,
				 null));
	}

	/**
@


1.2
log
@[rdvorak] #123656 Added message and description to audit rule
@
text
@d318 1
a318 11
				 GMFGenFactory.eINSTANCE.createValueExpression()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Rule(),
				 GMFGenFactory.eINSTANCE.createModelElementSelector()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenAuditRule_Rule(),
				 GMFGenFactory.eINSTANCE.createGenFeatureValueSpec()));
@


1.1
log
@[rdvorak] #123232 audits (ocl constraints) definition in genmodel
@
text
@d72 2
d161 40
d292 2
@

