head	1.13;
access;
symbols
	v20081015-1925:1.13
	v20081008-1925:1.13
	v20080924-1925:1.13
	v20080917-1925:1.13
	v20080903-1520:1.13
	v20080827-1520:1.13
	v20080813-1520:1.13
	v20080722-1827:1.13
	v20080718-1700:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.2
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080610-1132:1.13
	v20080521:1.13
	v20080512-1200:1.13
	v20080508-2000:1.13
	v20080507-1326:1.13
	v20080425-1959:1.13
	v20080417-1610:1.13
	v20080322-0000:1.13
	v20080222-1200:1.12
	v20071130-1111:1.12
	v20071124-0000:1.11
	v20071003-0000:1.12
	v20070921-0000:1.11
	v20070915-0000:1.11
	v20070903-0000:1.12
	v20070809-0000:1.11
	R2_0_maintenance:1.11.0.2
	R2_0:1.11
	R4_20:1.11
	RC3_20:1.11
	v20070614-1400:1.11
	v20070601-1400:1.11
	v20070525-1500:1.11
	v20070520-1200:1.11
	v20070518-1300:1.11
	v20070504-1000:1.11
	v20070427-0600:1.11
	v20070413-1300:1.11
	v20070403-1500:1.11
	v20070330-1300:1.10
	v20060330-1300:1.10
	v20070322-1100:1.10
	v20060316-0600:1.10
	v20070208-1800:1.9
	v20070103-0300:1.9
	M4_20:1.9
	v20061222-1800:1.9
	v20061218-1200:1.9
	v20061214-0000:1.9
	v20061120-1300:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061013-1330:1.9
	M1_20:1.9
	v20060904-1500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.8
	v20060620-0400:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-0800:1.8
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.4
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.13
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	161e47cc392a4567;

1.12
date	2007.06.28.16.22.06;	author dstadnik;	state Exp;
branches;
next	1.11;
commitid	780d4683e02d4567;

1.11
date	2007.04.03.16.29.56;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	5ebd461280e04567;

1.10
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	43e345f808fc4567;

1.9
date	2006.06.27.09.09.48;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.17.14.22.35;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.19.00.10.38;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.29.18.33.06;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.27.16.11.17;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.26.17.33.03;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.08.56;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.21.38;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.13
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenChildNode;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenChildNodeItemProvider
	extends GenNodeItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenChildNodeItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addContainersPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Containers feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addContainersPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildNode_containers_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildNode_containers_feature", "_UI_GenChildNode_type"),
				 GMFGenPackage.eINSTANCE.getGenChildNode_Containers(),
				 false,
				 false,
				 false,
				 null,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This returns GenChildNode.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenChildNode"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenChildNode)object).getEditPartClassName();
		return label == null || label.length() == 0 ?
			getString("_UI_GenChildNode_type") :
			getString("_UI_GenChildNode_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

}
@


1.12
log
@[193303] Update categories of gmfgen model properties
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a23 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a136 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.11
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d85 1
a85 1
				 getString("_UI_DiagramContainmentPropertyCategory"),
@


1.10
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 2

import org.eclipse.emf.edit.command.CommandParameter;
a22 1

a24 1

d128 2
a129 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d135 1
a135 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.9
log
@add property categories
@
text
@d18 1
d22 1
d62 2
a63 1
	public List getPropertyDescriptors(Object object) {
d100 1
d111 1
d126 1
d139 2
a140 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d150 1
@


1.8
log
@#139127 Provide an option for labels to display node icon
@
text
@d87 1
a87 1
				 null,
@


1.7
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d84 2
@


1.6
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d96 1
a96 1
		return getResourceLocator().getImage("full/obj16/GenChildNode");
@


1.5
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d15 1
d17 2
d24 2
d27 1
d64 1
d70 20
@


1.4
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@a15 1
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
a20 3
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
@


1.3
log
@#113823 childMetaFeature moved to TypeModelFacet
@
text
@a61 1
			addGroupIDPropertyDescriptor(object);
a66 20
	 * This adds a property descriptor for the Group ID feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGroupIDPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildNode_groupID_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildNode_groupID_feature", "_UI_GenChildNode_type"),
				 GMFGenPackage.eINSTANCE.getGenChildNode_GroupID(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a97 6

		switch (notification.getFeatureID(GenChildNode.class)) {
			case GMFGenPackage.GEN_CHILD_NODE__GROUP_ID:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@a62 1
			addChildMetaFeaturePropertyDescriptor(object);
a87 20
	 * This adds a property descriptor for the Child Meta Feature feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addChildMetaFeaturePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenChildNode_childMetaFeature_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenChildNode_childMetaFeature_feature", "_UI_GenChildNode_type"),
				 GMFGenPackage.eINSTANCE.getGenChildNode_ChildMetaFeature(),
				 true,
				 null,
				 null,
				 null));
	}

	/**
@


1.1
log
@*** empty log message ***
@
text
@a14 1

a15 1

a23 1

a25 1

@

