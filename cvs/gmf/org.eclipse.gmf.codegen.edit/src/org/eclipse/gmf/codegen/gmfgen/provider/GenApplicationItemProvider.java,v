head	1.12;
access;
symbols
	v20081015-1925:1.12
	v20081008-1925:1.12
	v20080924-1925:1.11
	v20080917-1925:1.10
	v20080903-1520:1.10
	v20080827-1520:1.10
	v20080813-1520:1.10
	v20080722-1827:1.10
	v20080718-1700:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.2
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080610-1132:1.10
	v20080521:1.10
	v20080512-1200:1.10
	v20080508-2000:1.10
	v20080507-1326:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080322-0000:1.10
	v20080222-1200:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071003-0000:1.9
	v20070921-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070413-1300:1.9
	v20070403-1500:1.9
	v20070330-1300:1.8
	v20060330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070208-1800:1.7
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.7
	v20061218-1200:1.5
	v20061214-0000:1.5
	v20061120-1300:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061013-1330:1.5;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.10.08.18.50.54;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	2d5d148ed010c4567;

1.11
date	2008.09.23.14.54.43;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	256c448d903314567;

1.10
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	61fc47cc45964567;

1.9
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	5ebd461280e04567;

1.8
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	43e345f808fc4567;

1.7
date	2006.12.21.17.14.33;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	7189458ac0f74567;

1.6
date	2006.12.18.18.20.38;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	7d424586dbf54567;

1.5
date	2006.10.09.17.59.21;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.03.08.16.44;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.02.17.30.14;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.02.16.54.40;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.27.10.04.30;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.12
log
@[174961] Menu actions - refactor previously generated actions to match general approach.
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenApplication;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenApplication} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenApplicationItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenApplicationItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addIDPropertyDescriptor(object);
			addTitlePropertyDescriptor(object);
			addPackageNamePropertyDescriptor(object);
			addClassNamePropertyDescriptor(object);
			addWorkbenchAdvisorClassNamePropertyDescriptor(object);
			addWorkbenchWindowAdvisorClassNamePropertyDescriptor(object);
			addActionBarAdvisorClassNamePropertyDescriptor(object);
			addPerspectiveClassNamePropertyDescriptor(object);
			addPerspectiveIdPropertyDescriptor(object);
			addSupportFilesPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the ID feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addIDPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_iD_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_iD_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_ID(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Title feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTitlePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_title_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_title_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_Title(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Package Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addPackageNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_packageName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_packageName_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_PackageName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_className_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_className_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_ClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Workbench Advisor Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addWorkbenchAdvisorClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_workbenchAdvisorClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_workbenchAdvisorClassName_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_WorkbenchAdvisorClassName(),
				 false,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Workbench Window Advisor Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addWorkbenchWindowAdvisorClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_workbenchWindowAdvisorClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_workbenchWindowAdvisorClassName_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_WorkbenchWindowAdvisorClassName(),
				 false,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Action Bar Advisor Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addActionBarAdvisorClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_actionBarAdvisorClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_actionBarAdvisorClassName_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_ActionBarAdvisorClassName(),
				 false,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Perspective Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addPerspectiveClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_perspectiveClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_perspectiveClassName_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_PerspectiveClassName(),
				 false,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Perspective Id feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addPerspectiveIdPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_perspectiveId_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_perspectiveId_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_PerspectiveId(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Support Files feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSupportFilesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenApplication_supportFiles_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_supportFiles_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_SupportFiles(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenApplication_MainMenu());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenApplication_MainToolBar());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns GenApplication.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenApplication"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenApplication)object).getID();
		return label == null || label.length() == 0 ?
			getString("_UI_GenApplication_type") :
			getString("_UI_GenApplication_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenApplication.class)) {
			case GMFGenPackage.GEN_APPLICATION__ID:
			case GMFGenPackage.GEN_APPLICATION__TITLE:
			case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME:
			case GMFGenPackage.GEN_APPLICATION__CLASS_NAME:
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME:
			case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME:
			case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME:
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME:
			case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID:
			case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.GEN_APPLICATION__SHARED_CONTRIBUTION_ITEMS:
			case GMFGenPackage.GEN_APPLICATION__MAIN_MENU:
			case GMFGenPackage.GEN_APPLICATION__MAIN_TOOL_BAR:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenSharedContributionItem()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenGroupMarker()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenSeparator()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenCustomAction()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenCommandAction()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createLoadResourceAction()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createInitDiagramAction()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createCreateShortcutAction()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenActionFactoryContributionItem()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenMenuManager()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems(),
				 GMFGenFactory.eINSTANCE.createGenToolBarManager()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_MainMenu(),
				 GMFGenFactory.eINSTANCE.createGenMenuManager()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenApplication_MainToolBar(),
				 GMFGenFactory.eINSTANCE.createGenToolBarManager()));
	}

	/**
	 * This returns the label text for {@@link org.eclipse.emf.edit.command.CreateChildCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getCreateChildText(Object owner, Object feature, Object child, Collection<?> selection) {
		Object childFeature = feature;
		Object childObject = child;

		boolean qualify =
			childFeature == GMFGenPackage.eINSTANCE.getGenApplication_SharedContributionItems() ||
			childFeature == GMFGenPackage.eINSTANCE.getGenApplication_MainMenu() ||
			childFeature == GMFGenPackage.eINSTANCE.getGenApplication_MainToolBar();

		if (qualify) {
			return getString
				("_UI_CreateChild_text2",
				 new Object[] { getTypeText(childObject), getFeatureText(childFeature), getTypeText(owner) });
		}
		return super.getCreateChildText(owner, feature, child, selection);
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return ((IChildCreationExtender)adapterFactory).getResourceLocator();
	}

}
@


1.11
log
@[174961] Code generation support for custom actions
@
text
@d430 15
@


1.10
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@d420 10
@


1.9
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d18 1
a30 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
d475 1
a475 1
		return EditorPlugin.INSTANCE;
@


1.8
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 1

a16 2

import org.eclipse.emf.edit.command.CommandParameter;
a25 1

a26 1

a29 1

d392 2
a393 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d399 1
a399 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.7
log
@allow to specify ui contributions for rcp application in genmodel
@
text
@d20 1
d24 1
d69 2
a70 1
	public List getPropertyDescriptors(Object object) {
d316 2
a317 1
	public Collection getChildrenFeatures(Object object) {
d332 1
d346 1
d357 1
d372 1
d405 2
a406 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d456 2
a457 1
	public String getCreateChildText(Object owner, Object feature, Object child, Collection selection) {
d480 1
@


1.6
log
@rewrite application templates in xpand; simplify genmodel
@
text
@d18 2
d31 1
d306 30
d381 5
d399 63
@


1.5
log
@#114200 add application id property
@
text
@d70 2
a71 2
			addApplicationPackageNamePropertyDescriptor(object);
			addApplicationClassNamePropertyDescriptor(object);
d77 1
d127 1
a127 1
	 * This adds a property descriptor for the Application Package Name feature.
d132 1
a132 1
	protected void addApplicationPackageNamePropertyDescriptor(Object object) {
d137 3
a139 3
				 getString("_UI_GenApplication_applicationPackageName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_applicationPackageName_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_ApplicationPackageName(),
d149 1
a149 1
	 * This adds a property descriptor for the Application Class Name feature.
d154 1
a154 1
	protected void addApplicationClassNamePropertyDescriptor(Object object) {
d159 3
a161 3
				 getString("_UI_GenApplication_applicationClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenApplication_applicationClassName_feature", "_UI_GenApplication_type"),
				 GMFGenPackage.eINSTANCE.getGenApplication_ApplicationClassName(),
d184 1
a184 1
				 true,
d206 1
a206 1
				 true,
d228 1
a228 1
				 true,
d250 1
a250 1
				 true,
d281 22
d338 2
a339 2
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_PACKAGE_NAME:
			case GMFGenPackage.GEN_APPLICATION__APPLICATION_CLASS_NAME:
d345 1
@


1.4
log
@#114200 add 'title' property for the RCP application
@
text
@d68 1
d82 22
d296 1
a296 1
		String label = ((GenApplication)object).getApplicationPackageName();
d313 1
@


1.3
log
@#114200 add RCP application perspective id
@
text
@d68 1
d81 22
d290 1
@


1.2
log
@#114200 add class names for RCP application in genmodel
@
text
@d74 1
d212 22
d273 1
@


1.1
log
@#114200 Provide an option to generate RCP application
@
text
@d18 1
d24 1
d27 5
d68 6
d79 132
d227 4
a230 1
		return getString("_UI_GenApplication_type");
d242 11
@

