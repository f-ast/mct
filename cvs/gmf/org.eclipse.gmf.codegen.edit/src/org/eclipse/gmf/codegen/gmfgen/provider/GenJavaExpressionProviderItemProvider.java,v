head	1.5;
access;
symbols
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080722-1827:1.5
	v20080718-1700:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080521:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080322-0000:1.4
	v20080222-1200:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071003-0000:1.3
	v20070921-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070413-1300:1.3
	v20070403-1500:1.3
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;


1.5
date	2008.05.05.21.06.51;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	4229481f76e84567;

1.4
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	161e47cc392a4567;

1.3
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	5ebd461280e04567;

1.2
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	43e345f808fc4567;

1.1
date	2006.04.13.15.41.28;	author radvorak;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[228913] cleaned isCopy and java provider's getOperationName that are not in use any more; introduced fine-tuning options: use expressions body for java methods and whether to throw exception or fail silently (using reasonable/appropriate for the context default value), latter change obsoleted NoImplException and respective debug options
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id: GenJavaExpressionProviderItemProvider.java,v 1.4 2008/03/03 17:45:17 atikhomirov Exp $
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenJavaExpressionProviderItemProvider
	extends GenExpressionProviderBaseItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenJavaExpressionProviderItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addThrowExceptionPropertyDescriptor(object);
			addInjectExpressionBodyPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Throw Exception feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addThrowExceptionPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenJavaExpressionProvider_throwException_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenJavaExpressionProvider_throwException_feature", "_UI_GenJavaExpressionProvider_type"),
				 GMFGenPackage.eINSTANCE.getGenJavaExpressionProvider_ThrowException(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Inject Expression Body feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addInjectExpressionBodyPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenJavaExpressionProvider_injectExpressionBody_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenJavaExpressionProvider_injectExpressionBody_feature", "_UI_GenJavaExpressionProvider_type"),
				 GMFGenPackage.eINSTANCE.getGenJavaExpressionProvider_InjectExpressionBody(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This returns GenJavaExpressionProvider.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenJavaExpressionProvider"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		GenJavaExpressionProvider genJavaExpressionProvider = (GenJavaExpressionProvider)object;
		return getString("_UI_GenJavaExpressionProvider_type") + " " + genJavaExpressionProvider.isThrowException();
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenJavaExpressionProvider.class)) {
			case GMFGenPackage.GEN_JAVA_EXPRESSION_PROVIDER__THROW_EXCEPTION:
			case GMFGenPackage.GEN_JAVA_EXPRESSION_PROVIDER__INJECT_EXPRESSION_BODY:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

}
@


1.4
log
@regenerated with EMF 2.4M5
@
text
@d5 1
a5 1
 * $Id: GenJavaExpressionProviderItemProvider.java,v 1.3 2007/04/03 16:29:55 atikhomirov Exp $
d15 1
d22 4
d62 2
d69 44
d131 2
a132 1
		return getString("_UI_GenJavaExpressionProvider_type");
d145 7
@


1.3
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d5 1
a5 1
 * $Id$
a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a20 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a107 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.2
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 2

import org.eclipse.emf.edit.command.CommandParameter;
a21 1

d99 2
a100 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d106 1
a106 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.1
log
@[#134511] common access to expressions of different languages
@
text
@d18 1
d21 1
d58 2
a59 1
	public List getPropertyDescriptors(Object object) {
d73 1
d84 1
d96 1
d109 2
a110 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d120 1
@

