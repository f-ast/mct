head	1.7;
access;
symbols
	v20081015-1925:1.7
	v20081008-1925:1.7
	v20080924-1925:1.7
	v20080917-1925:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080722-1827:1.7
	v20080718-1700:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080521:1.7
	v20080512-1200:1.7
	v20080508-2000:1.7
	v20080507-1326:1.7
	v20080425-1959:1.7
	v20080417-1610:1.7
	v20080322-0000:1.7
	v20080222-1200:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071003-0000:1.6
	v20070921-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070504-1000:1.5
	v20070427-0600:1.5
	v20070413-1300:1.5
	v20070403-1500:1.5
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070208-1800:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061218-1200:1.3
	v20061214-0000:1.3
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060620-0400:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	61fc47cc45964567;

1.6
date	2007.05.24.13.35.24;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	16964655949c4567;

1.5
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	5ebd461280e04567;

1.4
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	43e345f808fc4567;

1.3
date	2006.12.12.18.10.37;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	74f3457ef09b4567;

1.2
date	2006.05.17.14.22.36;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.30.20.42.07;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.ResizeConstraints;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ResizeConstraints} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class ResizeConstraintsItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ResizeConstraintsItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addResizeHandlesPropertyDescriptor(object);
			addNonResizeHandlesPropertyDescriptor(object);
			addResizeHandleNamesPropertyDescriptor(object);
			addNonResizeHandleNamesPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Resize Handles feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addResizeHandlesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ResizeConstraints_resizeHandles_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ResizeConstraints_resizeHandles_feature", "_UI_ResizeConstraints_type"),
				 GMFGenPackage.eINSTANCE.getResizeConstraints_ResizeHandles(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Non Resize Handles feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNonResizeHandlesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ResizeConstraints_nonResizeHandles_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ResizeConstraints_nonResizeHandles_feature", "_UI_ResizeConstraints_type"),
				 GMFGenPackage.eINSTANCE.getResizeConstraints_NonResizeHandles(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Resize Handle Names feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addResizeHandleNamesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ResizeConstraints_resizeHandleNames_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ResizeConstraints_resizeHandleNames_feature", "_UI_ResizeConstraints_type"),
				 GMFGenPackage.eINSTANCE.getResizeConstraints_ResizeHandleNames(),
				 false,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Non Resize Handle Names feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNonResizeHandleNamesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ResizeConstraints_nonResizeHandleNames_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ResizeConstraints_nonResizeHandleNames_feature", "_UI_ResizeConstraints_type"),
				 GMFGenPackage.eINSTANCE.getResizeConstraints_NonResizeHandleNames(),
				 false,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This returns ResizeConstraints.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/ResizeConstraints"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	@@Override
	public String getText(Object object) {
		ResizeConstraints resizeConstraints = (ResizeConstraints)object;
		return getString("_UI_ResizeConstraints_type") + " " + resizeConstraints.getResizeHandleNames() + ", " + resizeConstraints.getNonResizeHandleNames();
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(ResizeConstraints.class)) {
			case GMFGenPackage.RESIZE_CONSTRAINTS__RESIZE_HANDLES:
			case GMFGenPackage.RESIZE_CONSTRAINTS__NON_RESIZE_HANDLES:
			case GMFGenPackage.RESIZE_CONSTRAINTS__RESIZE_HANDLE_NAMES:
			case GMFGenPackage.RESIZE_CONSTRAINTS__NON_RESIZE_HANDLE_NAMES:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return ((IChildCreationExtender)adapterFactory).getResourceLocator();
	}

}
@


1.6
log
@fix labels
@
text
@d17 1
a28 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
d226 1
a226 1
		return EditorPlugin.INSTANCE;
@


1.5
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d176 1
a176 1
	 * @@generated
d181 1
a181 1
		return getString("_UI_ResizeConstraints_type") + " " + resizeConstraints.getResizeHandles();
@


1.4
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 2

import org.eclipse.emf.edit.command.CommandParameter;
a25 1

a27 1

d207 2
a208 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d214 1
a214 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.3
log
@convert operations in resize constraints to attributes so they may be used in xpand templates
@
text
@d18 1
d22 1
d65 2
a66 1
	public List getPropertyDescriptors(Object object) {
d172 1
d183 1
d196 1
d218 2
a219 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d229 1
@


1.2
log
@#139127 Provide an option for labels to display node icon
@
text
@d69 2
d120 44
d197 2
@


1.1
log
@#114061 Support shape with fixed horizontal/vertical size. First, 'resize' part of the request was covered.
Obsolete ShapeAttributes class was deleted, same attributes should be set in gmfgraph now.
@
text
@d88 2
d110 2
@

