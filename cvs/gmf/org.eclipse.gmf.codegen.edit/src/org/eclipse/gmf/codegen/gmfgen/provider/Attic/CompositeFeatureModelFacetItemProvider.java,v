head	1.5;
access;
symbols
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20061013-1330:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060620-0400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2006.10.18.14.21.28;	author dstadnik;	state dead;
branches;
next	1.4;

1.4
date	2006.05.17.14.22.36;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.03.12.37.53;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.30.18.26.20;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.5
log
@#161380 simplify feature model facets
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class CompositeFeatureModelFacetItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public CompositeFeatureModelFacetItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public List getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addMetaFeaturesPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Meta Features feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addMetaFeaturesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_CompositeFeatureModelFacet_metaFeatures_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_CompositeFeatureModelFacet_metaFeatures_feature", "_UI_CompositeFeatureModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getCompositeFeatureModelFacet_MetaFeatures(),
				 true,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This returns CompositeFeatureModelFacet.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/CompositeFeatureModelFacet"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getText(Object object) {
		return getString("_UI_CompositeFeatureModelFacet_type");
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

}
@


1.4
log
@#139127 Provide an option for labels to display node icon
@
text
@@


1.3
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d80 2
@


1.2
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@d92 1
a92 1
		return getResourceLocator().getImage("full/obj16/CompositeFeatureModelFacet");
@


1.1
log
@#125729 Support labels based on multiple structural features
@
text
@a14 1

a15 1

a21 1
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
a22 3
import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet;
a23 1

a59 2
			addViewPatternPropertyDescriptor(object);
			addEditPatternPropertyDescriptor(object);
a65 40
	 * This adds a property descriptor for the View Pattern feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addViewPatternPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_LabelModelFacet_viewPattern_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_LabelModelFacet_viewPattern_feature", "_UI_LabelModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getLabelModelFacet_ViewPattern(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Edit Pattern feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addEditPatternPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_LabelModelFacet_editPattern_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_LabelModelFacet_editPattern_feature", "_UI_LabelModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getLabelModelFacet_EditPattern(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
d102 1
a102 4
		String label = ((CompositeFeatureModelFacet)object).getViewPattern();
		return label == null || label.length() == 0 ?
			getString("_UI_CompositeFeatureModelFacet_type") :
			getString("_UI_CompositeFeatureModelFacet_type") + " " + label;
a113 7

		switch (notification.getFeatureID(CompositeFeatureModelFacet.class)) {
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__VIEW_PATTERN:
			case GMFGenPackage.COMPOSITE_FEATURE_MODEL_FACET__EDIT_PATTERN:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
@

