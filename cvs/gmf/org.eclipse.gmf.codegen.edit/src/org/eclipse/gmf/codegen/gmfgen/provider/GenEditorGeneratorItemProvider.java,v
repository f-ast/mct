head	1.21;
access;
symbols
	v20081015-1925:1.21
	v20081008-1925:1.21
	v20080924-1925:1.21
	v20080917-1925:1.20
	v20080903-1520:1.20
	v20080827-1520:1.20
	v20080813-1520:1.19
	v20080722-1827:1.19
	v20080718-1700:1.19
	v20080716-1642:1.19
	R2_1_maintenance:1.19.0.2
	Root_R2_1_maintenance:1.19
	R2_1_0:1.19
	v20080610-1132:1.19
	v20080521:1.19
	v20080512-1200:1.19
	v20080508-2000:1.19
	v20080507-1326:1.19
	v20080425-1959:1.19
	v20080417-1610:1.19
	v20080322-0000:1.19
	v20080222-1200:1.17
	v20071130-1111:1.17
	v20071124-0000:1.17
	v20071003-0000:1.17
	v20070921-0000:1.17
	v20070915-0000:1.17
	v20070903-0000:1.17
	v20070809-0000:1.17
	R2_0_maintenance:1.17.0.2
	R2_0:1.17
	R4_20:1.17
	RC3_20:1.17
	v20070614-1400:1.17
	v20070601-1400:1.17
	v20070525-1500:1.17
	v20070520-1200:1.17
	v20070518-1300:1.17
	v20070504-1000:1.16
	v20070427-0600:1.16
	v20070413-1300:1.16
	v20070403-1500:1.16
	v20070330-1300:1.15
	v20060330-1300:1.15
	v20070322-1100:1.15
	v20060316-0600:1.15
	v20070208-1800:1.14
	v20070103-0300:1.13
	M4_20:1.13
	v20061222-1800:1.13
	v20061218-1200:1.13
	v20061214-0000:1.13
	v20061120-1300:1.13
	M3_20:1.13
	v20061117-0800:1.13
	v20061013-1330:1.13
	M1_20:1.10
	v20060904-1500:1.10
	v20060713-1700:1.10
	R1_0_maintenance:1.10.0.2
	R1_0:1.10
	v20060627-1200:1.10
	v20060626-1420:1.10
	v20060620-0400:1.10
	v20060616-1200:1.10
	v20060609-1400:1.10
	v20060531-1730:1.10
	v20060530-1930:1.10
	v20060526-1200:1.9
	v20060519-0800:1.9
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.4
	I20060209-1815:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.21
date	2008.09.23.14.54.43;	author atikhomirov;	state Exp;
branches;
next	1.20;
commitid	256c448d903314567;

1.20
date	2008.08.25.16.54.53;	author atikhomirov;	state Exp;
branches;
next	1.19;
commitid	58e48b2e3db4567;

1.19
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.18;
commitid	61fc47cc45964567;

1.18
date	2008.02.27.17.30.11;	author atikhomirov;	state Exp;
branches;
next	1.17;
commitid	22c747c59e214567;

1.17
date	2007.05.11.16.01.33;	author ashatalin;	state Exp;
branches;
next	1.16;
commitid	45474644935b4567;

1.16
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	5ebd461280e04567;

1.15
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.14;
commitid	43e345f808fc4567;

1.14
date	2007.02.08.18.06.54;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	59745cb66bc4567;

1.13
date	2006.09.27.10.04.30;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.09.15.20.44.15;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2006.09.11.18.21.39;	author ashatalin;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.29.17.40.45;	author ashatalin;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.17.14.22.35;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.13.15.41.28;	author radvorak;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.07.15.44.35;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.15.18.59.26;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.16.05.54;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.08.13.05.15;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.08.12.27.59;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.08.00.17.17;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.21
log
@[174961] Code generation support for custom actions
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenEditorGeneratorItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenEditorGeneratorItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addDomainGenModelPropertyDescriptor(object);
			addPackageNamePrefixPropertyDescriptor(object);
			addModelIDPropertyDescriptor(object);
			addSameFileForDiagramAndModelPropertyDescriptor(object);
			addDiagramFileExtensionPropertyDescriptor(object);
			addDomainFileExtensionPropertyDescriptor(object);
			addDynamicTemplatesPropertyDescriptor(object);
			addTemplateDirectoryPropertyDescriptor(object);
			addCopyrightTextPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Domain Gen Model feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDomainGenModelPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_domainGenModel_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_domainGenModel_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_DomainGenModel(),
				 true,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Package Name Prefix feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addPackageNamePrefixPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_packageNamePrefix_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_packageNamePrefix_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_PackageNamePrefix(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Model ID feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addModelIDPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_modelID_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_modelID_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_ModelID(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Same File For Diagram And Model feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSameFileForDiagramAndModelPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_sameFileForDiagramAndModel_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_sameFileForDiagramAndModel_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_SameFileForDiagramAndModel(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Diagram File Extension feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDiagramFileExtensionPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_diagramFileExtension_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_diagramFileExtension_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_DiagramFileExtension(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Domain File Extension feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDomainFileExtensionPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_domainFileExtension_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_domainFileExtension_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_DomainFileExtension(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Dynamic Templates feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDynamicTemplatesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_dynamicTemplates_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_dynamicTemplates_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_DynamicTemplates(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Template Directory feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTemplateDirectoryPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_templateDirectory_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_templateDirectory_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_TemplateDirectory(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Copyright Text feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addCopyrightTextPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenEditorGenerator_copyrightText_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenEditorGenerator_copyrightText_feature", "_UI_GenEditorGenerator_type"),
				 GMFGenPackage.eINSTANCE.getGenEditorGenerator_CopyrightText(),
				 true,
				 true,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Audits());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Metrics());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Diagram());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Plugin());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Editor());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Navigator());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_DiagramUpdater());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_PropertySheet());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Application());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_ExpressionProviders());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_ModelAccess());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_LabelParsers());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenEditorGenerator_ContextMenus());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns GenEditorGenerator.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenEditorGenerator"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenEditorGenerator)object).getPackageNamePrefix();
		return label == null || label.length() == 0 ?
			getString("_UI_GenEditorGenerator_type") :
			getString("_UI_GenEditorGenerator_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenEditorGenerator.class)) {
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PACKAGE_NAME_PREFIX:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ID:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__SAME_FILE_FOR_DIAGRAM_AND_MODEL:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_FILE_EXTENSION:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DOMAIN_FILE_EXTENSION:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DYNAMIC_TEMPLATES:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__TEMPLATE_DIRECTORY:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__COPYRIGHT_TEXT:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.GEN_EDITOR_GENERATOR__AUDITS:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__METRICS:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PLUGIN:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__NAVIGATOR:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__DIAGRAM_UPDATER:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__PROPERTY_SHEET:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__EXPRESSION_PROVIDERS:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__MODEL_ACCESS:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__LABEL_PARSERS:
			case GMFGenPackage.GEN_EDITOR_GENERATOR__CONTEXT_MENUS:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Audits(),
				 GMFGenFactory.eINSTANCE.createGenAuditRoot()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Metrics(),
				 GMFGenFactory.eINSTANCE.createGenMetricContainer()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Diagram(),
				 GMFGenFactory.eINSTANCE.createGenDiagram()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Plugin(),
				 GMFGenFactory.eINSTANCE.createGenPlugin()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Editor(),
				 GMFGenFactory.eINSTANCE.createGenEditorView()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Navigator(),
				 GMFGenFactory.eINSTANCE.createGenNavigator()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_DiagramUpdater(),
				 GMFGenFactory.eINSTANCE.createGenDiagramUpdater()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_PropertySheet(),
				 GMFGenFactory.eINSTANCE.createGenPropertySheet()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_Application(),
				 GMFGenFactory.eINSTANCE.createGenApplication()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_ExpressionProviders(),
				 GMFGenFactory.eINSTANCE.createGenExpressionProviderContainer()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_ModelAccess(),
				 GMFGenFactory.eINSTANCE.createDynamicModelAccess()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_LabelParsers(),
				 GMFGenFactory.eINSTANCE.createGenParsers()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenEditorGenerator_ContextMenus(),
				 GMFGenFactory.eINSTANCE.createGenContextMenu()));
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return ((IChildCreationExtender)adapterFactory).getResourceLocator();
	}

}
@


1.20
log
@[235113] alternative parser access, step 1: introduce separate entity into genmodel to keep track of attributes related to parsing
@
text
@d302 1
d379 1
d456 5
@


1.19
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@d301 1
d377 1
d449 5
@


1.18
log
@[150177] phase II, generated facility to perform metamodel operations (like instanceof or metaclass accessors) with dynamic models, new gmfgen options to parameterize codegen.
@
text
@d18 1
a30 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
d457 1
a457 1
		return EditorPlugin.INSTANCE;
@


1.17
log
@GenDiagramUpdater created in .gmfgen model
@
text
@d300 1
d375 1
d442 5
@


1.16
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d296 1
d370 1
d423 5
@


1.15
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 1

a16 2

import org.eclipse.emf.edit.command.CommandParameter;
a26 1

a29 1

d379 2
a380 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d386 1
a386 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.14
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d20 1
d24 1
d68 2
a69 1
	public List getPropertyDescriptors(Object object) {
d292 2
a293 1
	public Collection getChildrenFeatures(Object object) {
d314 1
d328 1
d339 1
d354 1
d391 2
a392 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d447 1
@


1.13
log
@#114200 Provide an option to generate RCP application
@
text
@d389 1
a389 1
				 GMFGenFactory.eINSTANCE.createGenAuditContainer()));
@


1.12
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d299 1
d368 1
d423 5
@


1.11
log
@Model navigator, initial version.
@
text
@d298 1
d366 1
d416 5
@


1.10
log
@#44278 GmfGen model: Copyright Text property should be multiline
@
text
@d297 1
d364 1
d409 5
@


1.9
log
@#139127 Provide an option for labels to display node icon
@
text
@d274 1
a274 1
				 false,
@


1.8
log
@[#134511] common access to expressions of different languages
@
text
@d98 2
d120 2
d142 2
d164 2
d186 2
d208 2
d230 2
d252 2
d274 2
@


1.7
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d279 1
d345 1
d386 5
@


1.6
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d78 1
d244 20
d336 1
@


1.5
log
@#125175 Allow toolsmith to use different (sub)set of templates for editor code generation
@
text
@d254 1
d281 1
a281 1
		return getResourceLocator().getImage("full/obj16/GenEditorGenerator");
d318 1
d345 5
@


1.4
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d76 2
d203 40
d312 2
@


1.3
log
@file extensions moved out from genDiagram. Distinct property captures extension of domain model file now
@
text
@d214 1
d275 1
d306 5
@


1.2
log
@constant used throughout templates to identify diagram (genModel.getModelName) was extracted as explicit attribute
packagePrefix added
@
text
@d73 3
d141 60
d266 3
@


1.1
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d26 1
d71 2
d98 40
d184 4
a187 1
		return getString("_UI_GenEditorGenerator_type");
d201 4
@

