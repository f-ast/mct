head	1.12;
access;
symbols
	v20081015-1925:1.12
	v20081008-1925:1.12
	v20080924-1925:1.12
	v20080917-1925:1.12
	v20080903-1520:1.12
	v20080827-1520:1.12
	v20080813-1520:1.12
	v20080722-1827:1.12
	v20080718-1700:1.12
	v20080716-1642:1.12
	R2_1_maintenance:1.12.0.2
	Root_R2_1_maintenance:1.12
	R2_1_0:1.12
	v20080610-1132:1.12
	v20080521:1.12
	v20080512-1200:1.12
	v20080508-2000:1.12
	v20080507-1326:1.12
	v20080425-1959:1.12
	v20080417-1610:1.12
	v20080322-0000:1.12
	v20080222-1200:1.11
	v20071130-1111:1.11
	v20071124-0000:1.10
	v20071003-0000:1.11
	v20070921-0000:1.10
	v20070915-0000:1.10
	v20070903-0000:1.11
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.10
	v20070520-1200:1.10
	v20070518-1300:1.10
	v20070504-1000:1.10
	v20070427-0600:1.10
	v20070413-1300:1.10
	v20070403-1500:1.10
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070208-1800:1.7
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	v20061120-1300:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061013-1330:1.6
	M1_20:1.6
	v20060904-1500:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.5
	v20060620-0400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	161e47cc392a4567;

1.11
date	2007.06.28.15.32.52;	author dstadnik;	state Exp;
branches;
next	1.10;
commitid	446e4683d4a44567;

1.10
date	2007.04.03.16.29.56;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	5ebd461280e04567;

1.9
date	2007.03.15.16.11.39;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	61af45f9703a4567;

1.8
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	43e345f808fc4567;

1.7
date	2006.11.22.20.09.47;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	29264564ae8a4567;

1.6
date	2006.06.27.09.26.23;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.17.14.22.35;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.19.19.42.10;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.13.17.11.23;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.08.56;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.21.38;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.12
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.ToolEntry;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ToolEntry} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class ToolEntryItemProvider
	extends AbstractToolEntryItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ToolEntryItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addGenNodesPropertyDescriptor(object);
			addGenLinksPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Gen Nodes feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGenNodesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ToolEntry_genNodes_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ToolEntry_genNodes_feature", "_UI_ToolEntry_type"),
				 GMFGenPackage.eINSTANCE.getToolEntry_GenNodes(),
				 true,
				 false,
				 false,
				 null,
				 getString("_UI_ToolPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Gen Links feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGenLinksPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ToolEntry_genLinks_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ToolEntry_genLinks_feature", "_UI_ToolEntry_type"),
				 GMFGenPackage.eINSTANCE.getToolEntry_GenLinks(),
				 true,
				 false,
				 false,
				 null,
				 getString("_UI_ToolPropertyCategory"),
				 null));
	}

	/**
	 * This returns ToolEntry.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/ToolEntry"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((ToolEntry)object).getTitle();
		return label == null || label.length() == 0 ?
			getString("_UI_ToolEntry_type") :
			getString("_UI_ToolEntry_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

}
@


1.11
log
@[193303] Update categories of gmfgen model properties
@
text
@a13 1
import org.eclipse.emf.common.util.ResourceLocator;
a22 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a158 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.10
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d112 11
d130 1
a130 1
		String label = ((ToolEntry)object).getCreateMethodName();
@


1.9
log
@[114348] Generate command to reorient link
@
text
@a14 1
import org.eclipse.emf.edit.command.CommandParameter;
d139 2
a140 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d146 1
a146 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.8
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d9 1
d15 1
d140 12
@


1.7
log
@[164021] allow to choose standard tools
@
text
@a8 2

import java.util.Collection;
d17 1
a20 2
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
d55 2
a56 1
	public List getPropertyDescriptors(Object object) {
d116 1
d131 1
a137 11
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

	/**
d143 1
@


1.6
log
@add property categories
@
text
@d35 1
a35 1
	extends EntryBaseItemProvider
a61 1
			addDefaultPropertyDescriptor(object);
a63 1
			addQualifiedToolNamePropertyDescriptor(object);
a68 22
	 * This adds a property descriptor for the Default feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDefaultPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ToolEntry_default_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ToolEntry_default_feature", "_UI_ToolEntry_type"),
				 GMFGenPackage.eINSTANCE.getToolEntry_Default(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 getString("_UI_ToolPropertyCategory"),
				 null));
	}

	/**
a112 38
	 * This adds a property descriptor for the Qualified Tool Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addQualifiedToolNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ToolEntry_qualifiedToolName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ToolEntry_qualifiedToolName_feature", "_UI_ToolEntry_type"),
				 GMFGenPackage.eINSTANCE.getToolEntry_QualifiedToolName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ToolPropertyCategory"),
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Collection getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getToolEntry_Properties());
		}
		return childrenFeatures;
	}

	/**
a133 10

		switch (notification.getFeatureID(ToolEntry.class)) {
			case GMFGenPackage.TOOL_ENTRY__DEFAULT:
			case GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.TOOL_ENTRY__PROPERTIES:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
@


1.5
log
@#139127 Provide an option for labels to display node icon
@
text
@a64 1
			addElementsPropertyDescriptor(object);
d88 1
a88 1
				 null,
d110 1
a110 1
				 null,
d132 1
a132 23
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Elements feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addElementsPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ToolEntry_elements_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ToolEntry_elements_feature", "_UI_ToolEntry_type"),
				 GMFGenPackage.eINSTANCE.getToolEntry_Elements(),
				 false,
				 false,
				 false,
				 null,
				 null,
d154 1
a154 1
				 null,
@


1.4
log
@#131270 Duplicated tool entries when same tool definition is referenced from gmfmap.
@
text
@d86 2
d108 2
d130 2
d152 2
d174 2
@


1.3
log
@#120553
- Adding accessors for the palette entries factory methods into genmodel
- Refreshing unit-tests
- Fixing some old problems found by this refreshment.
@
text
@d63 4
d92 96
d212 1
d215 3
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d94 4
a97 2
		ToolEntry toolEntry = (ToolEntry)object;
		return getString("_UI_ToolEntry_type") + " " + toolEntry.getOrder();
@


1.1
log
@*** empty log message ***
@
text
@a14 1

a15 1

a23 1

a25 1

@

