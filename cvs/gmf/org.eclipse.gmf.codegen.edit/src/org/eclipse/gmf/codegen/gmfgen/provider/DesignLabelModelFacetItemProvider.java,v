head	1.8;
access;
symbols
	v20081015-1925:1.8
	v20081008-1925:1.8
	v20080924-1925:1.8
	v20080917-1925:1.8
	v20080903-1520:1.8
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080722-1827:1.7
	v20080718-1700:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080521:1.7
	v20080512-1200:1.7
	v20080508-2000:1.7
	v20080507-1326:1.7
	v20080425-1959:1.7
	v20080417-1610:1.7
	v20080322-0000:1.7
	v20080222-1200:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071003-0000:1.6
	v20070921-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.6
	v20070518-1300:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070413-1300:1.6
	v20070403-1500:1.6
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070208-1800:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2008.08.29.16.09.53;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	4a1648b81f4f4567;

1.7
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	61fc47cc45964567;

1.6
date	2007.04.03.16.29.56;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	5ebd461280e04567;

1.5
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	43e345f808fc4567;

1.4
date	2006.11.22.17.35.26;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	122645648a5e4567;

1.3
date	2006.10.18.09.56.52;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.17.13.08.13;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.09.12.31.21;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[244419] Support for custom parser - finalize parsers/labelmodelfacet relationship
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class DesignLabelModelFacetItemProvider
	extends LabelModelFacetItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public DesignLabelModelFacetItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

		}
		return itemPropertyDescriptors;
	}

	/**
	 * This returns DesignLabelModelFacet.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/DesignLabelModelFacet"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		return getString("_UI_DesignLabelModelFacet_type");
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

}
@


1.7
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@a14 2
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
a20 1
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
d29 1
a29 1
	extends ItemProviderAdapter
a107 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return ((IChildCreationExtender)adapterFactory).getResourceLocator();
	}

@


1.6
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d16 1
a23 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
d119 1
a119 1
		return EditorPlugin.INSTANCE;
@


1.5
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a15 1
import org.eclipse.emf.edit.command.CommandParameter;
d100 2
a101 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d107 1
a107 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.4
log
@Removing warnings
@
text
@d16 1
d19 1
d56 2
a57 1
	public List getPropertyDescriptors(Object object) {
d71 1
d82 1
d94 1
d107 2
a108 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d118 1
@


1.3
log
@#161380 move readOnly back to GenLabel
@
text
@a14 1

a15 2

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
a20 1
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
a21 6

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

@


1.2
log
@#160894 Move readOnly property from GenLabel to LabelFeatureModelFacet
@
text
@a67 1
			addReadOnlyPropertyDescriptor(object);
a72 22
	 * This adds a property descriptor for the Read Only feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addReadOnlyPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_LabelModelFacet_readOnly_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_LabelModelFacet_readOnly_feature", "_UI_LabelModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getLabelModelFacet_ReadOnly(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
d89 1
a89 2
		DesignLabelModelFacet designLabelModelFacet = (DesignLabelModelFacet)object;
		return getString("_UI_DesignLabelModelFacet_type") + " " + designLabelModelFacet.isReadOnly();
a100 6

		switch (notification.getFeatureID(DesignLabelModelFacet.class)) {
			case GMFGenPackage.DESIGN_LABEL_MODEL_FACET__READ_ONLY:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
@


1.1
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d18 1
d24 1
d27 5
d68 1
d74 22
d112 2
a113 1
		return getString("_UI_DesignLabelModelFacet_type");
d125 6
@

