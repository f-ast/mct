head	1.26;
access;
symbols
	v20081015-1925:1.26
	v20081008-1925:1.26
	v20080924-1925:1.26
	v20080917-1925:1.26
	v20080903-1520:1.26
	v20080827-1520:1.25
	v20080813-1520:1.24
	v20080722-1827:1.24
	v20080718-1700:1.24
	v20080716-1642:1.24
	R2_1_maintenance:1.24.0.2
	Root_R2_1_maintenance:1.24
	R2_1_0:1.24
	v20080610-1132:1.24
	v20080521:1.24
	v20080512-1200:1.24
	v20080508-2000:1.24
	v20080507-1326:1.24
	v20080425-1959:1.24
	v20080417-1610:1.24
	v20080322-0000:1.24
	v20080222-1200:1.23
	v20071130-1111:1.23
	v20071124-0000:1.20.2.1
	v20071003-0000:1.21
	v20070921-0000:1.20
	v20070915-0000:1.20
	v20070903-0000:1.21
	v20070809-0000:1.20
	R2_0_maintenance:1.20.0.2
	R2_0:1.20
	R4_20:1.20
	RC3_20:1.20
	v20070614-1400:1.20
	v20070601-1400:1.20
	v20070525-1500:1.20
	v20070520-1200:1.20
	v20070518-1300:1.20
	v20070504-1000:1.20
	v20070427-0600:1.20
	v20070413-1300:1.20
	v20070403-1500:1.19
	v20070330-1300:1.18
	v20060330-1300:1.18
	v20070322-1100:1.18
	v20060316-0600:1.18
	v20070208-1800:1.16
	v20070103-0300:1.16
	M4_20:1.16
	v20061222-1800:1.16
	v20061218-1200:1.16
	v20061214-0000:1.16
	v20061120-1300:1.16
	M3_20:1.16
	v20061117-0800:1.16
	v20061013-1330:1.16
	M1_20:1.16
	v20060904-1500:1.16
	v20060713-1700:1.16
	R1_0_maintenance:1.16.0.2
	R1_0:1.16
	v20060627-1200:1.16
	v20060626-1420:1.15
	v20060620-0400:1.15
	v20060616-1200:1.15
	v20060609-1400:1.15
	v20060531-1730:1.15
	v20060530-1930:1.15
	v20060526-1200:1.15
	v20060519-0800:1.15
	v20060512-1000:1.14
	I20060512-1000:1.14
	I20060505-1400:1.14
	I20060428-1300:1.14
	I20060424-0500:1.14
	I20060424-0300:1.14
	M6_10:1.14
	I20060407-1200:1.13
	I20060331-1000:1.12
	I20060324-0300:1.12
	I20060317-1300:1.12
	I20060317-1200:1.12
	I20060316-1300:1.12
	I20060309-1300:1.12
	M5_10:1.12
	S20060303-1600:1.12
	I20060227-1730:1.11
	I20060216-1945:1.10
	I20060210-1715:1.10
	I20060209-1815:1.10
	I20060203-0830:1.10
	I20060202-1415:1.9
	I20060129-1145:1.9
	I20060127-0900:1.9
	I20060120-1530:1.9
	I20060113-1700:1.9
	M4_10:1.9
	I20060107-1100:1.9
	I20060105-1630:1.9
	I20051230-1230:1.9
	I20051223-1100:1.9
	I20051217-0925:1.9
	I20051208-2000:1.9
	I20051201-1800:1.9
	I20051124-2000:1.8
	M3_10:1.7
	I20051118-1245:1.7
	I20051111-1800:1.6
	I20051106-0900:1.6
	v20051030:1.6
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.26
date	2008.08.29.11.42.37;	author dstadnik;	state Exp;
branches;
next	1.25;
commitid	693748b7e0ac4567;

1.25
date	2008.08.22.15.57.46;	author atikhomirov;	state Exp;
branches;
next	1.24;
commitid	442348aee1f94567;

1.24
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.23;
commitid	161e47cc392a4567;

1.23
date	2007.11.19.19.01.44;	author dstadnik;	state Exp;
branches;
next	1.22;
commitid	628b4741dd984567;

1.22
date	2007.11.19.18.59.10;	author dstadnik;	state Exp;
branches;
next	1.21;
commitid	56c04741dcfd4567;

1.21
date	2007.06.28.16.22.06;	author dstadnik;	state Exp;
branches;
next	1.20;
commitid	780d4683e02d4567;

1.20
date	2007.04.11.08.10.31;	author dstadnik;	state Exp;
branches
	1.20.2.1;
next	1.19;
commitid	74ba461c97f54567;

1.19
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.18;
commitid	5ebd461280e04567;

1.18
date	2007.03.15.16.11.39;	author dstadnik;	state Exp;
branches;
next	1.17;
commitid	61af45f9703a4567;

1.17
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.16;
commitid	43e345f808fc4567;

1.16
date	2006.06.27.09.09.48;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.05.17.14.22.35;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.12.08.48.16;	author dstadnik;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.03.12.52.51;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2006.02.22.12.08.59;	author ashatalin;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.03.12.37.53;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.29.18.33.06;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.21.09.35.27;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.18.08.35.32;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.26.18.43.50;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.24.14.58.29;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.21.13.32.05;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.11.10.56.01;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.08.56;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.21.38;	author atikhomirov;	state Exp;
branches;
next	;

1.20.2.1
date	2007.11.20.13.03.25;	author dstadnik;	state Exp;
branches;
next	;
commitid	6bb14742db1c4567;


desc
@@


1.26
log
@[245681] allow to specify whether link is reroutable
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenLink;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLink} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenLinkItemProvider
	extends GenCommonBaseItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenLinkItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addGenOutgoingLinksPropertyDescriptor(object);
			addGenIncomingLinksPropertyDescriptor(object);
			addOutgoingCreationAllowedPropertyDescriptor(object);
			addIncomingCreationAllowedPropertyDescriptor(object);
			addViewDirectionAlignedWithModelPropertyDescriptor(object);
			addTargetReorientingAllowedPropertyDescriptor(object);
			addSourceReorientingAllowedPropertyDescriptor(object);
			addCreateCommandClassNamePropertyDescriptor(object);
			addReorientCommandClassNamePropertyDescriptor(object);
			addTreeBranchPropertyDescriptor(object);
			addSourcesPropertyDescriptor(object);
			addTargetsPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Gen Outgoing Links feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGenOutgoingLinksPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLinkEnd_genOutgoingLinks_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLinkEnd_genOutgoingLinks_feature", "_UI_GenLinkEnd_type"),
				 GMFGenPackage.eINSTANCE.getGenLinkEnd_GenOutgoingLinks(),
				 false,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Gen Incoming Links feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGenIncomingLinksPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLinkEnd_genIncomingLinks_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLinkEnd_genIncomingLinks_feature", "_UI_GenLinkEnd_type"),
				 GMFGenPackage.eINSTANCE.getGenLinkEnd_GenIncomingLinks(),
				 false,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Outgoing Creation Allowed feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addOutgoingCreationAllowedPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_outgoingCreationAllowed_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_outgoingCreationAllowed_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_OutgoingCreationAllowed(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Incoming Creation Allowed feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addIncomingCreationAllowedPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_incomingCreationAllowed_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_incomingCreationAllowed_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_IncomingCreationAllowed(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the View Direction Aligned With Model feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addViewDirectionAlignedWithModelPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_viewDirectionAlignedWithModel_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_viewDirectionAlignedWithModel_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_ViewDirectionAlignedWithModel(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Target Reorienting Allowed feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTargetReorientingAllowedPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_targetReorientingAllowed_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_targetReorientingAllowed_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_TargetReorientingAllowed(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Source Reorienting Allowed feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSourceReorientingAllowedPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_sourceReorientingAllowed_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_sourceReorientingAllowed_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_SourceReorientingAllowed(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Create Command Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addCreateCommandClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_createCommandClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_createCommandClassName_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_CreateCommandClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Reorient Command Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addReorientCommandClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_reorientCommandClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_reorientCommandClassName_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_ReorientCommandClassName(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 getString("_UI_ClassNamesPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Tree Branch feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTreeBranchPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_treeBranch_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_treeBranch_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_TreeBranch(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 getString("_UI_DiagramElementPropertyCategory"),
				 null));
	}

	/**
	 * This adds a property descriptor for the Sources feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSourcesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_sources_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_sources_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_Sources(),
				 false,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Targets feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTargetsPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_targets_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_targets_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_Targets(),
				 false,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenLink_ModelFacet());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenLink_Labels());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenLink_CreationConstraints());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns GenLink.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenLink"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenLink)object).getEditPartClassName();
		return label == null || label.length() == 0 ?
			getString("_UI_GenLink_type") :
			getString("_UI_GenLink_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenLink.class)) {
			case GMFGenPackage.GEN_LINK__OUTGOING_CREATION_ALLOWED:
			case GMFGenPackage.GEN_LINK__INCOMING_CREATION_ALLOWED:
			case GMFGenPackage.GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL:
			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
			case GMFGenPackage.GEN_LINK__CREATE_COMMAND_CLASS_NAME:
			case GMFGenPackage.GEN_LINK__REORIENT_COMMAND_CLASS_NAME:
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.GEN_LINK__MODEL_FACET:
			case GMFGenPackage.GEN_LINK__LABELS:
			case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenLink_ModelFacet(),
				 GMFGenFactory.eINSTANCE.createTypeLinkModelFacet()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenLink_ModelFacet(),
				 GMFGenFactory.eINSTANCE.createFeatureLinkModelFacet()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenLink_Labels(),
				 GMFGenFactory.eINSTANCE.createGenLinkLabel()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenLink_CreationConstraints(),
				 GMFGenFactory.eINSTANCE.createGenLinkConstraints()));
	}

}
@


1.25
log
@[243151] mgolubev - explicit source/target for links
@
text
@d69 2
d191 44
d416 2
@


1.24
log
@regenerated with EMF 2.4M5
@
text
@d64 2
d72 2
d79 44
d255 44
@


1.23
log
@fix property category
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a27 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a323 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.22
log
@[206348] support tree routing
@
text
@d204 1
a204 1
				 null,
@


1.21
log
@[193303] Update categories of gmfgen model properties
@
text
@d71 1
d187 22
d282 1
@


1.20
log
@[181778] Generate standalone creation commands for reference based links
@
text
@d93 1
a93 1
				 getString("_UI_DiagramLinkPropertyCategory"),
d115 1
a115 1
				 getString("_UI_DiagramLinkPropertyCategory"),
d137 1
a137 1
				 getString("_UI_DiagramLinkPropertyCategory"),
d159 1
a159 1
				 null,
d181 1
a181 1
				 null,
@


1.20.2.1
log
@[206348] support tree routing style
@
text
@a70 1
			addTreeBranchPropertyDescriptor(object);
a185 22
	 * This adds a property descriptor for the Tree Branch feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTreeBranchPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_treeBranch_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_treeBranch_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_TreeBranch(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 getString("_UI_DiagramLinkPropertyCategory"),
				 null));
	}

	/**
a258 1
			case GMFGenPackage.GEN_LINK__TREE_BRANCH:
@


1.19
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d69 1
d142 22
d257 1
@


1.18
log
@[114348] Generate command to reorient link
@
text
@a16 1
import org.eclipse.emf.edit.command.CommandParameter;
d247 2
a248 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d254 1
a254 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.17
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d70 1
d142 22
d235 1
@


1.16
log
@add property categories
@
text
@d17 1
d21 1
d62 2
a63 1
	public List getPropertyDescriptors(Object object) {
d148 2
a149 1
	public Collection getChildrenFeatures(Object object) {
d164 1
d178 1
d189 1
d204 1
d230 2
a231 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d261 1
@


1.15
log
@#139127 Provide an option for labels to display node icon
@
text
@d89 1
a89 1
				 null,
d111 1
a111 1
				 null,
d133 1
a133 1
				 null,
@


1.14
log
@#126200 register element types in xml
@
text
@d86 2
d108 2
d130 2
@


1.13
log
@#126200 register element types in xml
@
text
@a63 1
			addEditHelperClassNamePropertyDescriptor(object);
a71 20
	 * This adds a property descriptor for the Edit Helper Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addEditHelperClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ElementType_editHelperClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_ElementType_editHelperClassName_feature", "_UI_ElementType_type"),
				 GMFGenPackage.eINSTANCE.getElementType_EditHelperClassName(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a194 1
			case GMFGenPackage.GEN_LINK__EDIT_HELPER_CLASS_NAME:
@


1.12
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d64 1
d73 20
d216 1
@


1.11
log
@- genmodel was regenerated (removing some incorrectly merged properties)
- code with new genmodel was regenerated
@
text
@d168 1
a168 1
		return getResourceLocator().getImage("full/obj16/GenLink");
@


1.10
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@d162 10
@


1.9
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d212 1
a212 1
				 GMFGenFactory.eINSTANCE.createFeatureModelFacet()));
d217 1
a217 1
				 GMFGenFactory.eINSTANCE.createTypeLinkModelFacet()));
@


1.8
log
@#116797 provide option in gmfgen model for the links to align direction in view with direction in model
@
text
@a16 1

a24 1

d144 1
d192 1
d223 5
@


1.7
log
@#115794 allow to specify directions in which link could be created on diagram
@
text
@d68 1
d114 20
d188 1
@


1.6
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@d18 1
d24 1
d66 2
d73 40
d165 4
@


1.5
log
@[dstadnik] #113525 Get rid of LinkWithClass/LinkWithReference, use parallel hierarchy of modelFacet instead
@
text
@a17 1
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
d37 1
a37 1
	extends GenBaseElementItemProvider
@


1.4
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d16 2
a64 1
			addDomainLinkTargetFeaturePropertyDescriptor(object);
a69 20
	 * This adds a property descriptor for the Domain Link Target Feature feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addDomainLinkTargetFeaturePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_domainLinkTargetFeature_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_domainLinkTargetFeature_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_DomainLinkTargetFeature(),
				 true,
				 null,
				 null,
				 null));
	}

	/**
d80 1
d87 12
d122 1
d142 10
@


1.3
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@d148 1
a148 1
				 GMFGenFactory.eINSTANCE.createLinkLabel()));
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d22 3
d89 16
d126 6
d144 5
@


1.1
log
@*** empty log message ***
@
text
@a14 1

a15 1

a21 3
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;

a23 1

a60 4
			addLineStylePropertyDescriptor(object);
			addFigureQualifiedClassNamePropertyDescriptor(object);
			addSourceDecorationFigureQualifiedClassNamePropertyDescriptor(object);
			addTargetDecorationFigureQualifiedClassNamePropertyDescriptor(object);
a85 80
	 * This adds a property descriptor for the Line Style feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addLineStylePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_lineStyle_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_lineStyle_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_LineStyle(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Figure Qualified Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addFigureQualifiedClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_figureQualifiedClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_figureQualifiedClassName_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_FigureQualifiedClassName(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Source Decoration Figure Qualified Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSourceDecorationFigureQualifiedClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_sourceDecorationFigureQualifiedClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_sourceDecorationFigureQualifiedClassName_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_SourceDecorationFigureQualifiedClassName(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Target Decoration Figure Qualified Class Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addTargetDecorationFigureQualifiedClassNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenLink_targetDecorationFigureQualifiedClassName_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenLink_targetDecorationFigureQualifiedClassName_feature", "_UI_GenLink_type"),
				 GMFGenPackage.eINSTANCE.getGenLink_TargetDecorationFigureQualifiedClassName(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
a106 9

		switch (notification.getFeatureID(GenLink.class)) {
			case GMFGenPackage.GEN_LINK__LINE_STYLE:
			case GMFGenPackage.GEN_LINK__FIGURE_QUALIFIED_CLASS_NAME:
			case GMFGenPackage.GEN_LINK__SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
			case GMFGenPackage.GEN_LINK__TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
@

