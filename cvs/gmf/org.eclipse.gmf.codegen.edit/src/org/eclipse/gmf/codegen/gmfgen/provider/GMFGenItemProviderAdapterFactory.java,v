head	1.62;
access;
symbols
	v20081015-1925:1.62
	v20081008-1925:1.61
	v20080924-1925:1.60
	v20080917-1925:1.59
	v20080903-1520:1.59
	v20080827-1520:1.58
	v20080813-1520:1.57
	v20080722-1827:1.57
	v20080718-1700:1.56
	v20080716-1642:1.57
	R2_1_maintenance:1.56.0.2
	Root_R2_1_maintenance:1.56
	R2_1_0:1.56
	v20080610-1132:1.56
	v20080521:1.56
	v20080512-1200:1.56
	v20080508-2000:1.56
	v20080507-1326:1.56
	v20080425-1959:1.56
	v20080417-1610:1.56
	v20080322-0000:1.55
	v20080222-1200:1.53
	v20071130-1111:1.53
	v20071124-0000:1.53
	v20071003-0000:1.53
	v20070921-0000:1.53
	v20070915-0000:1.53
	v20070903-0000:1.53
	v20070809-0000:1.53
	R2_0_maintenance:1.53.0.2
	R2_0:1.53
	R4_20:1.53
	RC3_20:1.53
	v20070614-1400:1.53
	v20070601-1400:1.53
	v20070525-1500:1.53
	v20070520-1200:1.53
	v20070518-1300:1.53
	v20070504-1000:1.52
	v20070427-0600:1.52
	v20070413-1300:1.52
	v20070403-1500:1.52
	v20070330-1300:1.52
	v20060330-1300:1.52
	v20070322-1100:1.52
	v20060316-0600:1.52
	v20070208-1800:1.51
	v20070103-0300:1.49
	M4_20:1.49
	v20061222-1800:1.47
	v20061218-1200:1.46
	v20061214-0000:1.46
	v20061120-1300:1.45
	M3_20:1.45
	v20061117-0800:1.45
	v20061013-1330:1.44
	M1_20:1.39
	v20060904-1500:1.39
	v20060713-1700:1.37
	R1_0_maintenance:1.37.0.2
	R1_0:1.37
	v20060627-1200:1.37
	v20060626-1420:1.37
	v20060620-0400:1.37
	v20060616-1200:1.36
	v20060609-1400:1.36
	v20060531-1730:1.35
	v20060530-1930:1.35
	v20060526-1200:1.35
	v20060519-0800:1.34
	v20060512-1000:1.34
	I20060512-1000:1.34
	I20060505-1400:1.33
	I20060428-1300:1.33
	I20060424-0500:1.32
	I20060424-0300:1.32
	M6_10:1.30
	I20060407-1200:1.28
	I20060331-1000:1.28
	I20060324-0300:1.27
	I20060317-1300:1.27
	I20060317-1200:1.27
	I20060316-1300:1.27
	I20060309-1300:1.27
	M5_10:1.26
	S20060303-1600:1.26
	I20060227-1730:1.25
	I20060216-1945:1.24
	I20060210-1715:1.23
	I20060209-1815:1.23
	I20060203-0830:1.20
	I20060202-1415:1.19
	I20060129-1145:1.18
	I20060127-0900:1.18
	I20060120-1530:1.17
	I20060113-1700:1.16
	M4_10:1.16
	I20060107-1100:1.14
	I20060105-1630:1.13
	I20051230-1230:1.12
	I20051223-1100:1.12
	I20051217-0925:1.12
	I20051208-2000:1.12
	I20051201-1800:1.12
	I20051124-2000:1.11
	M3_10:1.11
	I20051118-1245:1.11
	I20051111-1800:1.11
	I20051106-0900:1.11
	v20051030:1.11
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.62
date	2008.10.14.17.29.45;	author atikhomirov;	state Exp;
branches;
next	1.61;
commitid	2c8848f4d7074567;

1.61
date	2008.10.08.18.50.54;	author atikhomirov;	state Exp;
branches;
next	1.60;
commitid	2d5d148ed010c4567;

1.60
date	2008.09.23.14.54.43;	author atikhomirov;	state Exp;
branches;
next	1.59;
commitid	256c448d903314567;

1.59
date	2008.08.29.16.09.53;	author atikhomirov;	state Exp;
branches;
next	1.58;
commitid	4a1648b81f4f4567;

1.58
date	2008.08.25.16.54.53;	author atikhomirov;	state Exp;
branches;
next	1.57;
commitid	58e48b2e3db4567;

1.57
date	2008.07.01.11.40.19;	author atikhomirov;	state Exp;
branches;
next	1.56;
commitid	7b9c486a17a14567;

1.56
date	2008.04.14.08.37.48;	author atikhomirov;	state Exp;
branches;
next	1.55;
commitid	1b07480317db4567;

1.55
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.54;
commitid	61fc47cc45964567;

1.54
date	2008.02.27.17.30.11;	author atikhomirov;	state Exp;
branches;
next	1.53;
commitid	22c747c59e214567;

1.53
date	2007.05.11.16.01.33;	author ashatalin;	state Exp;
branches;
next	1.52;
commitid	45474644935b4567;

1.52
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.51;
commitid	43e345f808fc4567;

1.51
date	2007.02.08.18.06.53;	author atikhomirov;	state Exp;
branches;
next	1.50;
commitid	59745cb66bc4567;

1.50
date	2007.01.03.20.34.39;	author dstadnik;	state Exp;
branches;
next	1.49;
commitid	58c8459c135e4567;

1.49
date	2006.12.28.19.45.48;	author ashatalin;	state Exp;
branches;
next	1.48;
commitid	13dc45941eeb4567;

1.48
date	2006.12.27.12.43.16;	author dstadnik;	state Exp;
branches;
next	1.47;
commitid	5b8e45926a624567;

1.47
date	2006.12.21.17.14.33;	author dstadnik;	state Exp;
branches;
next	1.46;
commitid	7189458ac0f74567;

1.46
date	2006.11.22.20.09.47;	author atikhomirov;	state Exp;
branches;
next	1.45;
commitid	29264564ae8a4567;

1.45
date	2006.10.18.14.21.28;	author dstadnik;	state Exp;
branches;
next	1.44;

1.44
date	2006.09.29.21.26.47;	author atikhomirov;	state Exp;
branches;
next	1.43;

1.43
date	2006.09.27.10.04.30;	author dstadnik;	state Exp;
branches;
next	1.42;

1.42
date	2006.09.15.20.44.15;	author atikhomirov;	state Exp;
branches;
next	1.41;

1.41
date	2006.09.11.18.21.39;	author ashatalin;	state Exp;
branches;
next	1.40;

1.40
date	2006.09.05.23.41.18;	author radvorak;	state Exp;
branches;
next	1.39;

1.39
date	2006.08.25.18.32.45;	author atikhomirov;	state Exp;
branches;
next	1.38;

1.38
date	2006.07.07.11.58.58;	author dstadnik;	state Exp;
branches;
next	1.37;

1.37
date	2006.06.19.12.41.59;	author ashatalin;	state Exp;
branches;
next	1.36;

1.36
date	2006.06.09.12.31.21;	author dstadnik;	state Exp;
branches;
next	1.35;

1.35
date	2006.05.24.09.20.08;	author atikhomirov;	state Exp;
branches;
next	1.34;

1.34
date	2006.05.10.11.13.06;	author dstadnik;	state Exp;
branches;
next	1.33;

1.33
date	2006.04.25.19.15.54;	author radvorak;	state Exp;
branches;
next	1.32;

1.32
date	2006.04.20.13.59.34;	author dstadnik;	state Exp;
branches;
next	1.31;

1.31
date	2006.04.19.19.42.10;	author atikhomirov;	state Exp;
branches;
next	1.30;

1.30
date	2006.04.13.15.41.28;	author radvorak;	state Exp;
branches;
next	1.29;

1.29
date	2006.04.12.08.48.16;	author dstadnik;	state Exp;
branches;
next	1.28;

1.28
date	2006.03.30.20.42.07;	author atikhomirov;	state Exp;
branches;
next	1.27;

1.27
date	2006.03.07.14.08.47;	author dstadnik;	state Exp;
branches;
next	1.26;

1.26
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.25;

1.25
date	2006.02.24.20.23.11;	author atikhomirov;	state Exp;
branches;
next	1.24;

1.24
date	2006.02.14.18.46.19;	author ashatalin;	state Exp;
branches;
next	1.23;

1.23
date	2006.02.08.16.05.54;	author atikhomirov;	state Exp;
branches;
next	1.22;

1.22
date	2006.02.08.00.17.17;	author atikhomirov;	state Exp;
branches;
next	1.21;

1.21
date	2006.02.06.10.59.44;	author dstadnik;	state Exp;
branches;
next	1.20;

1.20
date	2006.02.03.12.37.53;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.01.30.18.26.20;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.01.26.13.36.09;	author atikhomirov;	state Exp;
branches;
next	1.17;

1.17
date	2006.01.19.00.10.38;	author ashatalin;	state Exp;
branches;
next	1.16;

1.16
date	2006.01.12.10.41.16;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.01.10.12.51.25;	author atikhomirov;	state Exp;
branches;
next	1.14;

1.14
date	2006.01.06.17.03.26;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.05.17.30.36;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2005.11.29.18.33.06;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.27.16.11.17;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.27.11.41.47;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.24.14.58.30;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.21.13.32.05;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.20.16.04.37;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.13.12.45.45;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.11.12.25.37;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.11.10.56.01;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.07.13.01.14;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.03.19.08.56;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.21.38;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.62
log
@[250772] Support custom preferences
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.ArrayList;
import java.util.Collection;

import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
import org.eclipse.gmf.codegen.gmfgen.util.GMFGenAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(EditorPlugin.INSTANCE, GMFGenPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GMFGenItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenEditorGeneratorItemProvider genEditorGeneratorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenEditorGeneratorAdapter() {
		if (genEditorGeneratorItemProvider == null) {
			genEditorGeneratorItemProvider = new GenEditorGeneratorItemProvider(this);
		}

		return genEditorGeneratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDiagramItemProvider genDiagramItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenDiagramAdapter() {
		if (genDiagramItemProvider == null) {
			genDiagramItemProvider = new GenDiagramItemProvider(this);
		}

		return genDiagramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenEditorView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenEditorViewItemProvider genEditorViewItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenEditorView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenEditorViewAdapter() {
		if (genEditorViewItemProvider == null) {
			genEditorViewItemProvider = new GenEditorViewItemProvider(this);
		}

		return genEditorViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomPreferencePage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenCustomPreferencePageItemProvider genCustomPreferencePageItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomPreferencePage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenCustomPreferencePageAdapter() {
		if (genCustomPreferencePageItemProvider == null) {
			genCustomPreferencePageItemProvider = new GenCustomPreferencePageItemProvider(this);
		}

		return genCustomPreferencePageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenStandardPreferencePage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenStandardPreferencePageItemProvider genStandardPreferencePageItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenStandardPreferencePage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenStandardPreferencePageAdapter() {
		if (genStandardPreferencePageItemProvider == null) {
			genStandardPreferencePageItemProvider = new GenStandardPreferencePageItemProvider(this);
		}

		return genStandardPreferencePageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramPreferences} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDiagramPreferencesItemProvider genDiagramPreferencesItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramPreferences}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenDiagramPreferencesAdapter() {
		if (genDiagramPreferencesItemProvider == null) {
			genDiagramPreferencesItemProvider = new GenDiagramPreferencesItemProvider(this);
		}

		return genDiagramPreferencesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenStandardFont} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenStandardFontItemProvider genStandardFontItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenStandardFont}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenStandardFontAdapter() {
		if (genStandardFontItemProvider == null) {
			genStandardFontItemProvider = new GenStandardFontItemProvider(this);
		}

		return genStandardFontItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomFont} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenCustomFontItemProvider genCustomFontItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomFont}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenCustomFontAdapter() {
		if (genCustomFontItemProvider == null) {
			genCustomFontItemProvider = new GenCustomFontItemProvider(this);
		}

		return genCustomFontItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenRGBColor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenRGBColorItemProvider genRGBColorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenRGBColor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenRGBColorAdapter() {
		if (genRGBColorItemProvider == null) {
			genRGBColorItemProvider = new GenRGBColorItemProvider(this);
		}

		return genRGBColorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenConstantColor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenConstantColorItemProvider genConstantColorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenConstantColor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenConstantColorAdapter() {
		if (genConstantColorItemProvider == null) {
			genConstantColorItemProvider = new GenConstantColorItemProvider(this);
		}

		return genConstantColorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenPreference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenPreferenceItemProvider genPreferenceItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenPreference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenPreferenceAdapter() {
		if (genPreferenceItemProvider == null) {
			genPreferenceItemProvider = new GenPreferenceItemProvider(this);
		}

		return genPreferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramUpdater} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDiagramUpdaterItemProvider genDiagramUpdaterItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramUpdater}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenDiagramUpdaterAdapter() {
		if (genDiagramUpdaterItemProvider == null) {
			genDiagramUpdaterItemProvider = new GenDiagramUpdaterItemProvider(this);
		}

		return genDiagramUpdaterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenPlugin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenPluginItemProvider genPluginItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenPlugin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenPluginAdapter() {
		if (genPluginItemProvider == null) {
			genPluginItemProvider = new GenPluginItemProvider(this);
		}

		return genPluginItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DynamicModelAccessItemProvider dynamicModelAccessItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.DynamicModelAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createDynamicModelAccessAdapter() {
		if (dynamicModelAccessItemProvider == null) {
			dynamicModelAccessItemProvider = new DynamicModelAccessItemProvider(this);
		}

		return dynamicModelAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.CustomBehaviour} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomBehaviourItemProvider customBehaviourItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CustomBehaviour}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomBehaviourAdapter() {
		if (customBehaviourItemProvider == null) {
			customBehaviourItemProvider = new CustomBehaviourItemProvider(this);
		}

		return customBehaviourItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.SharedBehaviour} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SharedBehaviourItemProvider sharedBehaviourItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.SharedBehaviour}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createSharedBehaviourAdapter() {
		if (sharedBehaviourItemProvider == null) {
			sharedBehaviourItemProvider = new SharedBehaviourItemProvider(this);
		}

		return sharedBehaviourItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected OpenDiagramBehaviourItemProvider openDiagramBehaviourItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createOpenDiagramBehaviourAdapter() {
		if (openDiagramBehaviourItemProvider == null) {
			openDiagramBehaviourItemProvider = new OpenDiagramBehaviourItemProvider(this);
		}

		return openDiagramBehaviourItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenTopLevelNodeItemProvider genTopLevelNodeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenTopLevelNodeAdapter() {
		if (genTopLevelNodeItemProvider == null) {
			genTopLevelNodeItemProvider = new GenTopLevelNodeItemProvider(this);
		}

		return genTopLevelNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenChildNodeItemProvider genChildNodeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenChildNodeAdapter() {
		if (genChildNodeItemProvider == null) {
			genChildNodeItemProvider = new GenChildNodeItemProvider(this);
		}

		return genChildNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenChildSideAffixedNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenChildSideAffixedNodeItemProvider genChildSideAffixedNodeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildSideAffixedNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenChildSideAffixedNodeAdapter() {
		if (genChildSideAffixedNodeItemProvider == null) {
			genChildSideAffixedNodeItemProvider = new GenChildSideAffixedNodeItemProvider(this);
		}

		return genChildSideAffixedNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenChildLabelNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenChildLabelNodeItemProvider genChildLabelNodeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildLabelNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenChildLabelNodeAdapter() {
		if (genChildLabelNodeItemProvider == null) {
			genChildLabelNodeItemProvider = new GenChildLabelNodeItemProvider(this);
		}

		return genChildLabelNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenCompartmentItemProvider genCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenCompartmentAdapter() {
		if (genCompartmentItemProvider == null) {
			genCompartmentItemProvider = new GenCompartmentItemProvider(this);
		}

		return genCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLinkItemProvider genLinkItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenLinkAdapter() {
		if (genLinkItemProvider == null) {
			genLinkItemProvider = new GenLinkItemProvider(this);
		}

		return genLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenNodeLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenNodeLabelItemProvider genNodeLabelItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNodeLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenNodeLabelAdapter() {
		if (genNodeLabelItemProvider == null) {
			genNodeLabelItemProvider = new GenNodeLabelItemProvider(this);
		}

		return genNodeLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenExternalNodeLabelItemProvider genExternalNodeLabelItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenExternalNodeLabelAdapter() {
		if (genExternalNodeLabelItemProvider == null) {
			genExternalNodeLabelItemProvider = new GenExternalNodeLabelItemProvider(this);
		}

		return genExternalNodeLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLinkLabelItemProvider genLinkLabelItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenLinkLabelAdapter() {
		if (genLinkLabelItemProvider == null) {
			genLinkLabelItemProvider = new GenLinkLabelItemProvider(this);
		}

		return genLinkLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.MetamodelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected MetamodelTypeItemProvider metamodelTypeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.MetamodelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createMetamodelTypeAdapter() {
		if (metamodelTypeItemProvider == null) {
			metamodelTypeItemProvider = new MetamodelTypeItemProvider(this);
		}

		return metamodelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.SpecializationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SpecializationTypeItemProvider specializationTypeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.SpecializationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createSpecializationTypeAdapter() {
		if (specializationTypeItemProvider == null) {
			specializationTypeItemProvider = new SpecializationTypeItemProvider(this);
		}

		return specializationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.NotationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected NotationTypeItemProvider notationTypeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.NotationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createNotationTypeAdapter() {
		if (notationTypeItemProvider == null) {
			notationTypeItemProvider = new NotationTypeItemProvider(this);
		}

		return notationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.LabelModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LabelModelFacetItemProvider labelModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.LabelModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLabelModelFacetAdapter() {
		if (labelModelFacetItemProvider == null) {
			labelModelFacetItemProvider = new LabelModelFacetItemProvider(this);
		}

		return labelModelFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.TypeModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected TypeModelFacetItemProvider typeModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.TypeModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createTypeModelFacetAdapter() {
		if (typeModelFacetItemProvider == null) {
			typeModelFacetItemProvider = new TypeModelFacetItemProvider(this);
		}

		return typeModelFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected TypeLinkModelFacetItemProvider typeLinkModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createTypeLinkModelFacetAdapter() {
		if (typeLinkModelFacetItemProvider == null) {
			typeLinkModelFacetItemProvider = new TypeLinkModelFacetItemProvider(this);
		}

		return typeLinkModelFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FeatureLinkModelFacetItemProvider featureLinkModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFeatureLinkModelFacetAdapter() {
		if (featureLinkModelFacetItemProvider == null) {
			featureLinkModelFacetItemProvider = new FeatureLinkModelFacetItemProvider(this);
		}

		return featureLinkModelFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FeatureLabelModelFacetItemProvider featureLabelModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFeatureLabelModelFacetAdapter() {
		if (featureLabelModelFacetItemProvider == null) {
			featureLabelModelFacetItemProvider = new FeatureLabelModelFacetItemProvider(this);
		}

		return featureLabelModelFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DesignLabelModelFacetItemProvider designLabelModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createDesignLabelModelFacetAdapter() {
		if (designLabelModelFacetItemProvider == null) {
			designLabelModelFacetItemProvider = new DesignLabelModelFacetItemProvider(this);
		}

		return designLabelModelFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ColorAttributes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ColorAttributesItemProvider colorAttributesItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ColorAttributes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createColorAttributesAdapter() {
		if (colorAttributesItemProvider == null) {
			colorAttributesItemProvider = new ColorAttributesItemProvider(this);
		}

		return colorAttributesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.StyleAttributes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected StyleAttributesItemProvider styleAttributesItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.StyleAttributes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createStyleAttributesAdapter() {
		if (styleAttributesItemProvider == null) {
			styleAttributesItemProvider = new StyleAttributesItemProvider(this);
		}

		return styleAttributesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ResizeConstraints} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ResizeConstraintsItemProvider resizeConstraintsItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ResizeConstraints}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createResizeConstraintsAdapter() {
		if (resizeConstraintsItemProvider == null) {
			resizeConstraintsItemProvider = new ResizeConstraintsItemProvider(this);
		}

		return resizeConstraintsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.DefaultSizeAttributes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DefaultSizeAttributesItemProvider defaultSizeAttributesItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.DefaultSizeAttributes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createDefaultSizeAttributesAdapter() {
		if (defaultSizeAttributesItemProvider == null) {
			defaultSizeAttributesItemProvider = new DefaultSizeAttributesItemProvider(this);
		}

		return defaultSizeAttributesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.LabelOffsetAttributes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LabelOffsetAttributesItemProvider labelOffsetAttributesItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.LabelOffsetAttributes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLabelOffsetAttributesAdapter() {
		if (labelOffsetAttributesItemProvider == null) {
			labelOffsetAttributesItemProvider = new LabelOffsetAttributesItemProvider(this);
		}

		return labelOffsetAttributesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.FigureViewmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FigureViewmapItemProvider figureViewmapItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.FigureViewmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFigureViewmapAdapter() {
		if (figureViewmapItemProvider == null) {
			figureViewmapItemProvider = new FigureViewmapItemProvider(this);
		}

		return figureViewmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.SnippetViewmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SnippetViewmapItemProvider snippetViewmapItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.SnippetViewmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createSnippetViewmapAdapter() {
		if (snippetViewmapItemProvider == null) {
			snippetViewmapItemProvider = new SnippetViewmapItemProvider(this);
		}

		return snippetViewmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected InnerClassViewmapItemProvider innerClassViewmapItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createInnerClassViewmapAdapter() {
		if (innerClassViewmapItemProvider == null) {
			innerClassViewmapItemProvider = new InnerClassViewmapItemProvider(this);
		}

		return innerClassViewmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ParentAssignedViewmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ParentAssignedViewmapItemProvider parentAssignedViewmapItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ParentAssignedViewmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createParentAssignedViewmapAdapter() {
		if (parentAssignedViewmapItemProvider == null) {
			parentAssignedViewmapItemProvider = new ParentAssignedViewmapItemProvider(this);
		}

		return parentAssignedViewmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.Palette} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PaletteItemProvider paletteItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.Palette}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPaletteAdapter() {
		if (paletteItemProvider == null) {
			paletteItemProvider = new PaletteItemProvider(this);
		}

		return paletteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ToolEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ToolEntryItemProvider toolEntryItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ToolEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createToolEntryAdapter() {
		if (toolEntryItemProvider == null) {
			toolEntryItemProvider = new ToolEntryItemProvider(this);
		}

		return toolEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.StandardEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected StandardEntryItemProvider standardEntryItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.StandardEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createStandardEntryAdapter() {
		if (standardEntryItemProvider == null) {
			standardEntryItemProvider = new StandardEntryItemProvider(this);
		}

		return standardEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.Separator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SeparatorItemProvider separatorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.Separator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createSeparatorAdapter() {
		if (separatorItemProvider == null) {
			separatorItemProvider = new SeparatorItemProvider(this);
		}

		return separatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ToolGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ToolGroupItemProvider toolGroupItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ToolGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createToolGroupAdapter() {
		if (toolGroupItemProvider == null) {
			toolGroupItemProvider = new ToolGroupItemProvider(this);
		}

		return toolGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenFeatureSeqInitializerItemProvider genFeatureSeqInitializerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenFeatureSeqInitializerAdapter() {
		if (genFeatureSeqInitializerItemProvider == null) {
			genFeatureSeqInitializerItemProvider = new GenFeatureSeqInitializerItemProvider(this);
		}

		return genFeatureSeqInitializerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenFeatureValueSpecItemProvider genFeatureValueSpecItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenFeatureValueSpecAdapter() {
		if (genFeatureValueSpecItemProvider == null) {
			genFeatureValueSpecItemProvider = new GenFeatureValueSpecItemProvider(this);
		}

		return genFeatureValueSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenReferenceNewElementSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenReferenceNewElementSpecItemProvider genReferenceNewElementSpecItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenReferenceNewElementSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenReferenceNewElementSpecAdapter() {
		if (genReferenceNewElementSpecItemProvider == null) {
			genReferenceNewElementSpecItemProvider = new GenReferenceNewElementSpecItemProvider(this);
		}

		return genReferenceNewElementSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLinkConstraintsItemProvider genLinkConstraintsItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenLinkConstraintsAdapter() {
		if (genLinkConstraintsItemProvider == null) {
			genLinkConstraintsItemProvider = new GenLinkConstraintsItemProvider(this);
		}

		return genLinkConstraintsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenAuditRootItemProvider genAuditRootItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenAuditRootAdapter() {
		if (genAuditRootItemProvider == null) {
			genAuditRootItemProvider = new GenAuditRootItemProvider(this);
		}

		return genAuditRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenAuditContainerItemProvider genAuditContainerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenAuditContainerAdapter() {
		if (genAuditContainerItemProvider == null) {
			genAuditContainerItemProvider = new GenAuditContainerItemProvider(this);
		}

		return genAuditContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenAuditRuleItemProvider genAuditRuleItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenAuditRuleAdapter() {
		if (genAuditRuleItemProvider == null) {
			genAuditRuleItemProvider = new GenAuditRuleItemProvider(this);
		}

		return genAuditRuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDomainElementTargetItemProvider genDomainElementTargetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenDomainElementTargetAdapter() {
		if (genDomainElementTargetItemProvider == null) {
			genDomainElementTargetItemProvider = new GenDomainElementTargetItemProvider(this);
		}

		return genDomainElementTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDiagramElementTargetItemProvider genDiagramElementTargetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenDiagramElementTargetAdapter() {
		if (genDiagramElementTargetItemProvider == null) {
			genDiagramElementTargetItemProvider = new GenDiagramElementTargetItemProvider(this);
		}

		return genDiagramElementTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenDomainAttributeTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenDomainAttributeTargetItemProvider genDomainAttributeTargetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenDomainAttributeTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenDomainAttributeTargetAdapter() {
		if (genDomainAttributeTargetItemProvider == null) {
			genDomainAttributeTargetItemProvider = new GenDomainAttributeTargetItemProvider(this);
		}

		return genDomainAttributeTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenNotationElementTargetItemProvider genNotationElementTargetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenNotationElementTargetAdapter() {
		if (genNotationElementTargetItemProvider == null) {
			genNotationElementTargetItemProvider = new GenNotationElementTargetItemProvider(this);
		}

		return genNotationElementTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenMetricContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenMetricContainerItemProvider genMetricContainerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenMetricContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenMetricContainerAdapter() {
		if (genMetricContainerItemProvider == null) {
			genMetricContainerItemProvider = new GenMetricContainerItemProvider(this);
		}

		return genMetricContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenMetricRule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenMetricRuleItemProvider genMetricRuleItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenMetricRule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenMetricRuleAdapter() {
		if (genMetricRuleItemProvider == null) {
			genMetricRuleItemProvider = new GenMetricRuleItemProvider(this);
		}

		return genMetricRuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditedMetricTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenAuditedMetricTargetItemProvider genAuditedMetricTargetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditedMetricTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenAuditedMetricTargetAdapter() {
		if (genAuditedMetricTargetItemProvider == null) {
			genAuditedMetricTargetItemProvider = new GenAuditedMetricTargetItemProvider(this);
		}

		return genAuditedMetricTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenAuditContextItemProvider genAuditContextItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenAuditContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenAuditContextAdapter() {
		if (genAuditContextItemProvider == null) {
			genAuditContextItemProvider = new GenAuditContextItemProvider(this);
		}

		return genAuditContextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenExpressionProviderContainerItemProvider genExpressionProviderContainerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenExpressionProviderContainerAdapter() {
		if (genExpressionProviderContainerItemProvider == null) {
			genExpressionProviderContainerItemProvider = new GenExpressionProviderContainerItemProvider(this);
		}

		return genExpressionProviderContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenJavaExpressionProviderItemProvider genJavaExpressionProviderItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenJavaExpressionProviderAdapter() {
		if (genJavaExpressionProviderItemProvider == null) {
			genJavaExpressionProviderItemProvider = new GenJavaExpressionProviderItemProvider(this);
		}

		return genJavaExpressionProviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenExpressionInterpreterItemProvider genExpressionInterpreterItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenExpressionInterpreterAdapter() {
		if (genExpressionInterpreterItemProvider == null) {
			genExpressionInterpreterItemProvider = new GenExpressionInterpreterItemProvider(this);
		}

		return genExpressionInterpreterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenLiteralExpressionProvider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLiteralExpressionProviderItemProvider genLiteralExpressionProviderItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLiteralExpressionProvider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenLiteralExpressionProviderAdapter() {
		if (genLiteralExpressionProviderItemProvider == null) {
			genLiteralExpressionProviderItemProvider = new GenLiteralExpressionProviderItemProvider(this);
		}

		return genLiteralExpressionProviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenNavigatorItemProvider genNavigatorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenNavigatorAdapter() {
		if (genNavigatorItemProvider == null) {
			genNavigatorItemProvider = new GenNavigatorItemProvider(this);
		}

		return genNavigatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorChildReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenNavigatorChildReferenceItemProvider genNavigatorChildReferenceItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorChildReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenNavigatorChildReferenceAdapter() {
		if (genNavigatorChildReferenceItemProvider == null) {
			genNavigatorChildReferenceItemProvider = new GenNavigatorChildReferenceItemProvider(this);
		}

		return genNavigatorChildReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenNavigatorPathItemProvider genNavigatorPathItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenNavigatorPathAdapter() {
		if (genNavigatorPathItemProvider == null) {
			genNavigatorPathItemProvider = new GenNavigatorPathItemProvider(this);
		}

		return genNavigatorPathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorPathSegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenNavigatorPathSegmentItemProvider genNavigatorPathSegmentItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNavigatorPathSegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenNavigatorPathSegmentAdapter() {
		if (genNavigatorPathSegmentItemProvider == null) {
			genNavigatorPathSegmentItemProvider = new GenNavigatorPathSegmentItemProvider(this);
		}

		return genNavigatorPathSegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenPropertySheet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenPropertySheetItemProvider genPropertySheetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenPropertySheet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenPropertySheetAdapter() {
		if (genPropertySheetItemProvider == null) {
			genPropertySheetItemProvider = new GenPropertySheetItemProvider(this);
		}

		return genPropertySheetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenStandardPropertyTab} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenStandardPropertyTabItemProvider genStandardPropertyTabItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenStandardPropertyTab}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenStandardPropertyTabAdapter() {
		if (genStandardPropertyTabItemProvider == null) {
			genStandardPropertyTabItemProvider = new GenStandardPropertyTabItemProvider(this);
		}

		return genStandardPropertyTabItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomPropertyTab} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenCustomPropertyTabItemProvider genCustomPropertyTabItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomPropertyTab}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenCustomPropertyTabAdapter() {
		if (genCustomPropertyTabItemProvider == null) {
			genCustomPropertyTabItemProvider = new GenCustomPropertyTabItemProvider(this);
		}

		return genCustomPropertyTabItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.TypeTabFilter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected TypeTabFilterItemProvider typeTabFilterItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.TypeTabFilter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createTypeTabFilterAdapter() {
		if (typeTabFilterItemProvider == null) {
			typeTabFilterItemProvider = new TypeTabFilterItemProvider(this);
		}

		return typeTabFilterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.CustomTabFilter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomTabFilterItemProvider customTabFilterItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CustomTabFilter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomTabFilterAdapter() {
		if (customTabFilterItemProvider == null) {
			customTabFilterItemProvider = new CustomTabFilterItemProvider(this);
		}

		return customTabFilterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenSharedContributionItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenSharedContributionItemItemProvider genSharedContributionItemItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenSharedContributionItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenSharedContributionItemAdapter() {
		if (genSharedContributionItemItemProvider == null) {
			genSharedContributionItemItemProvider = new GenSharedContributionItemItemProvider(this);
		}

		return genSharedContributionItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenGroupMarker} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenGroupMarkerItemProvider genGroupMarkerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenGroupMarker}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenGroupMarkerAdapter() {
		if (genGroupMarkerItemProvider == null) {
			genGroupMarkerItemProvider = new GenGroupMarkerItemProvider(this);
		}

		return genGroupMarkerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenSeparator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenSeparatorItemProvider genSeparatorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenSeparator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenSeparatorAdapter() {
		if (genSeparatorItemProvider == null) {
			genSeparatorItemProvider = new GenSeparatorItemProvider(this);
		}

		return genSeparatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenCustomActionItemProvider genCustomActionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCustomAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenCustomActionAdapter() {
		if (genCustomActionItemProvider == null) {
			genCustomActionItemProvider = new GenCustomActionItemProvider(this);
		}

		return genCustomActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenCommandAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenCommandActionItemProvider genCommandActionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCommandAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenCommandActionAdapter() {
		if (genCommandActionItemProvider == null) {
			genCommandActionItemProvider = new GenCommandActionItemProvider(this);
		}

		return genCommandActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.LoadResourceAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LoadResourceActionItemProvider loadResourceActionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.LoadResourceAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLoadResourceActionAdapter() {
		if (loadResourceActionItemProvider == null) {
			loadResourceActionItemProvider = new LoadResourceActionItemProvider(this);
		}

		return loadResourceActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.InitDiagramAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected InitDiagramActionItemProvider initDiagramActionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.InitDiagramAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createInitDiagramActionAdapter() {
		if (initDiagramActionItemProvider == null) {
			initDiagramActionItemProvider = new InitDiagramActionItemProvider(this);
		}

		return initDiagramActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.CreateShortcutAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CreateShortcutActionItemProvider createShortcutActionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CreateShortcutAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCreateShortcutActionAdapter() {
		if (createShortcutActionItemProvider == null) {
			createShortcutActionItemProvider = new CreateShortcutActionItemProvider(this);
		}

		return createShortcutActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenActionFactoryContributionItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenActionFactoryContributionItemItemProvider genActionFactoryContributionItemItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenActionFactoryContributionItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenActionFactoryContributionItemAdapter() {
		if (genActionFactoryContributionItemItemProvider == null) {
			genActionFactoryContributionItemItemProvider = new GenActionFactoryContributionItemItemProvider(this);
		}

		return genActionFactoryContributionItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenMenuManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenMenuManagerItemProvider genMenuManagerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenMenuManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenMenuManagerAdapter() {
		if (genMenuManagerItemProvider == null) {
			genMenuManagerItemProvider = new GenMenuManagerItemProvider(this);
		}

		return genMenuManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenToolBarManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenToolBarManagerItemProvider genToolBarManagerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenToolBarManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenToolBarManagerAdapter() {
		if (genToolBarManagerItemProvider == null) {
			genToolBarManagerItemProvider = new GenToolBarManagerItemProvider(this);
		}

		return genToolBarManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenContextMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenContextMenuItemProvider genContextMenuItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenContextMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenContextMenuAdapter() {
		if (genContextMenuItemProvider == null) {
			genContextMenuItemProvider = new GenContextMenuItemProvider(this);
		}

		return genContextMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenApplication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenApplicationItemProvider genApplicationItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenApplication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenApplicationAdapter() {
		if (genApplicationItemProvider == null) {
			genApplicationItemProvider = new GenApplicationItemProvider(this);
		}

		return genApplicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenParsers} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenParsersItemProvider genParsersItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenParsers}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenParsersAdapter() {
		if (genParsersItemProvider == null) {
			genParsersItemProvider = new GenParsersItemProvider(this);
		}

		return genParsersItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.PredefinedParser} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PredefinedParserItemProvider predefinedParserItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.PredefinedParser}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPredefinedParserAdapter() {
		if (predefinedParserItemProvider == null) {
			predefinedParserItemProvider = new PredefinedParserItemProvider(this);
		}

		return predefinedParserItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.CustomParser} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomParserItemProvider customParserItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CustomParser}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomParserAdapter() {
		if (customParserItemProvider == null) {
			customParserItemProvider = new CustomParserItemProvider(this);
		}

		return customParserItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ExternalParser} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ExternalParserItemProvider externalParserItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ExternalParser}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createExternalParserAdapter() {
		if (externalParserItemProvider == null) {
			externalParserItemProvider = new ExternalParserItemProvider(this);
		}

		return externalParserItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ValueExpressionItemProvider valueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ValueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createValueExpressionAdapter() {
		if (valueExpressionItemProvider == null) {
			valueExpressionItemProvider = new ValueExpressionItemProvider(this);
		}

		return valueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenConstraintItemProvider genConstraintItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGenConstraintAdapter() {
		if (genConstraintItemProvider == null) {
			genConstraintItemProvider = new GenConstraintItemProvider(this);
		}

		return genConstraintItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@@link #changeNotifier} and to {@@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void dispose() {
		if (genEditorGeneratorItemProvider != null) genEditorGeneratorItemProvider.dispose();
		if (genDiagramItemProvider != null) genDiagramItemProvider.dispose();
		if (genEditorViewItemProvider != null) genEditorViewItemProvider.dispose();
		if (genCustomPreferencePageItemProvider != null) genCustomPreferencePageItemProvider.dispose();
		if (genStandardPreferencePageItemProvider != null) genStandardPreferencePageItemProvider.dispose();
		if (genDiagramPreferencesItemProvider != null) genDiagramPreferencesItemProvider.dispose();
		if (genStandardFontItemProvider != null) genStandardFontItemProvider.dispose();
		if (genCustomFontItemProvider != null) genCustomFontItemProvider.dispose();
		if (genRGBColorItemProvider != null) genRGBColorItemProvider.dispose();
		if (genConstantColorItemProvider != null) genConstantColorItemProvider.dispose();
		if (genPreferenceItemProvider != null) genPreferenceItemProvider.dispose();
		if (genDiagramUpdaterItemProvider != null) genDiagramUpdaterItemProvider.dispose();
		if (genPluginItemProvider != null) genPluginItemProvider.dispose();
		if (dynamicModelAccessItemProvider != null) dynamicModelAccessItemProvider.dispose();
		if (customBehaviourItemProvider != null) customBehaviourItemProvider.dispose();
		if (sharedBehaviourItemProvider != null) sharedBehaviourItemProvider.dispose();
		if (openDiagramBehaviourItemProvider != null) openDiagramBehaviourItemProvider.dispose();
		if (genTopLevelNodeItemProvider != null) genTopLevelNodeItemProvider.dispose();
		if (genChildNodeItemProvider != null) genChildNodeItemProvider.dispose();
		if (genChildSideAffixedNodeItemProvider != null) genChildSideAffixedNodeItemProvider.dispose();
		if (genChildLabelNodeItemProvider != null) genChildLabelNodeItemProvider.dispose();
		if (genCompartmentItemProvider != null) genCompartmentItemProvider.dispose();
		if (genLinkItemProvider != null) genLinkItemProvider.dispose();
		if (genNodeLabelItemProvider != null) genNodeLabelItemProvider.dispose();
		if (genExternalNodeLabelItemProvider != null) genExternalNodeLabelItemProvider.dispose();
		if (genLinkLabelItemProvider != null) genLinkLabelItemProvider.dispose();
		if (metamodelTypeItemProvider != null) metamodelTypeItemProvider.dispose();
		if (specializationTypeItemProvider != null) specializationTypeItemProvider.dispose();
		if (notationTypeItemProvider != null) notationTypeItemProvider.dispose();
		if (labelModelFacetItemProvider != null) labelModelFacetItemProvider.dispose();
		if (typeModelFacetItemProvider != null) typeModelFacetItemProvider.dispose();
		if (typeLinkModelFacetItemProvider != null) typeLinkModelFacetItemProvider.dispose();
		if (featureLinkModelFacetItemProvider != null) featureLinkModelFacetItemProvider.dispose();
		if (featureLabelModelFacetItemProvider != null) featureLabelModelFacetItemProvider.dispose();
		if (designLabelModelFacetItemProvider != null) designLabelModelFacetItemProvider.dispose();
		if (colorAttributesItemProvider != null) colorAttributesItemProvider.dispose();
		if (styleAttributesItemProvider != null) styleAttributesItemProvider.dispose();
		if (resizeConstraintsItemProvider != null) resizeConstraintsItemProvider.dispose();
		if (defaultSizeAttributesItemProvider != null) defaultSizeAttributesItemProvider.dispose();
		if (labelOffsetAttributesItemProvider != null) labelOffsetAttributesItemProvider.dispose();
		if (figureViewmapItemProvider != null) figureViewmapItemProvider.dispose();
		if (snippetViewmapItemProvider != null) snippetViewmapItemProvider.dispose();
		if (innerClassViewmapItemProvider != null) innerClassViewmapItemProvider.dispose();
		if (parentAssignedViewmapItemProvider != null) parentAssignedViewmapItemProvider.dispose();
		if (valueExpressionItemProvider != null) valueExpressionItemProvider.dispose();
		if (genConstraintItemProvider != null) genConstraintItemProvider.dispose();
		if (paletteItemProvider != null) paletteItemProvider.dispose();
		if (toolEntryItemProvider != null) toolEntryItemProvider.dispose();
		if (standardEntryItemProvider != null) standardEntryItemProvider.dispose();
		if (separatorItemProvider != null) separatorItemProvider.dispose();
		if (toolGroupItemProvider != null) toolGroupItemProvider.dispose();
		if (genFeatureSeqInitializerItemProvider != null) genFeatureSeqInitializerItemProvider.dispose();
		if (genFeatureValueSpecItemProvider != null) genFeatureValueSpecItemProvider.dispose();
		if (genReferenceNewElementSpecItemProvider != null) genReferenceNewElementSpecItemProvider.dispose();
		if (genLinkConstraintsItemProvider != null) genLinkConstraintsItemProvider.dispose();
		if (genAuditRootItemProvider != null) genAuditRootItemProvider.dispose();
		if (genAuditContainerItemProvider != null) genAuditContainerItemProvider.dispose();
		if (genAuditRuleItemProvider != null) genAuditRuleItemProvider.dispose();
		if (genDomainElementTargetItemProvider != null) genDomainElementTargetItemProvider.dispose();
		if (genDiagramElementTargetItemProvider != null) genDiagramElementTargetItemProvider.dispose();
		if (genDomainAttributeTargetItemProvider != null) genDomainAttributeTargetItemProvider.dispose();
		if (genNotationElementTargetItemProvider != null) genNotationElementTargetItemProvider.dispose();
		if (genMetricContainerItemProvider != null) genMetricContainerItemProvider.dispose();
		if (genMetricRuleItemProvider != null) genMetricRuleItemProvider.dispose();
		if (genAuditedMetricTargetItemProvider != null) genAuditedMetricTargetItemProvider.dispose();
		if (genAuditContextItemProvider != null) genAuditContextItemProvider.dispose();
		if (genExpressionProviderContainerItemProvider != null) genExpressionProviderContainerItemProvider.dispose();
		if (genJavaExpressionProviderItemProvider != null) genJavaExpressionProviderItemProvider.dispose();
		if (genExpressionInterpreterItemProvider != null) genExpressionInterpreterItemProvider.dispose();
		if (genLiteralExpressionProviderItemProvider != null) genLiteralExpressionProviderItemProvider.dispose();
		if (genNavigatorItemProvider != null) genNavigatorItemProvider.dispose();
		if (genNavigatorChildReferenceItemProvider != null) genNavigatorChildReferenceItemProvider.dispose();
		if (genNavigatorPathItemProvider != null) genNavigatorPathItemProvider.dispose();
		if (genNavigatorPathSegmentItemProvider != null) genNavigatorPathSegmentItemProvider.dispose();
		if (genPropertySheetItemProvider != null) genPropertySheetItemProvider.dispose();
		if (genStandardPropertyTabItemProvider != null) genStandardPropertyTabItemProvider.dispose();
		if (genCustomPropertyTabItemProvider != null) genCustomPropertyTabItemProvider.dispose();
		if (typeTabFilterItemProvider != null) typeTabFilterItemProvider.dispose();
		if (customTabFilterItemProvider != null) customTabFilterItemProvider.dispose();
		if (genSharedContributionItemItemProvider != null) genSharedContributionItemItemProvider.dispose();
		if (genGroupMarkerItemProvider != null) genGroupMarkerItemProvider.dispose();
		if (genSeparatorItemProvider != null) genSeparatorItemProvider.dispose();
		if (genCustomActionItemProvider != null) genCustomActionItemProvider.dispose();
		if (genCommandActionItemProvider != null) genCommandActionItemProvider.dispose();
		if (loadResourceActionItemProvider != null) loadResourceActionItemProvider.dispose();
		if (initDiagramActionItemProvider != null) initDiagramActionItemProvider.dispose();
		if (createShortcutActionItemProvider != null) createShortcutActionItemProvider.dispose();
		if (genActionFactoryContributionItemItemProvider != null) genActionFactoryContributionItemItemProvider.dispose();
		if (genMenuManagerItemProvider != null) genMenuManagerItemProvider.dispose();
		if (genToolBarManagerItemProvider != null) genToolBarManagerItemProvider.dispose();
		if (genContextMenuItemProvider != null) genContextMenuItemProvider.dispose();
		if (genApplicationItemProvider != null) genApplicationItemProvider.dispose();
		if (genParsersItemProvider != null) genParsersItemProvider.dispose();
		if (predefinedParserItemProvider != null) predefinedParserItemProvider.dispose();
		if (customParserItemProvider != null) customParserItemProvider.dispose();
		if (externalParserItemProvider != null) externalParserItemProvider.dispose();
	}

}@


1.61
log
@[174961] Menu actions - refactor previously generated actions to match general approach.
@
text
@d322 23
d2435 1
@


1.60
log
@[174961] Code generation support for custom actions
@
text
@d1955 69
d2485 3
@


1.59
log
@[244419] Support for custom parser - finalize parsers/labelmodelfacet relationship
@
text
@d1909 46
d2024 23
d2414 2
d2419 1
@


1.58
log
@[235113] alternative parser access, step 1: introduce separate entity into genmodel to keep track of attributes related to parsing
@
text
@d736 23
d2292 1
@


1.57
log
@[227127] support literal values for feature initializers. step 1: models updated to specify new possible values
@
text
@d1978 92
d2325 4
@


1.56
log
@[226149] Refactor Validation/Constraints: explicit context groupings instead of ID matching, unused IClientSelectors implementations are no longer generated, less custom code in the model, odd approach with map (semanticCtxIdMap) replaced with in-place VisualID check.
@
text
@d1587 23
d2216 1
@


1.55
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@d1495 23
d2189 1
@


1.54
log
@[150177] phase II, generated facility to perform metamodel operations (like instanceof or metaclass accessors) with dynamic models, new gmfgen options to parameterize codegen.
@
text
@d12 1
d16 2
d19 1
d23 1
d31 2
d44 1
a44 1
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
d62 8
d2036 27
@


1.53
log
@GenDiagramUpdater created in .gmfgen model
@
text
@d353 23
d2073 1
@


1.52
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d307 23
d2048 1
@


1.51
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d60 1
a60 1
	protected Collection supportedTypes = new ArrayList();
d73 1
a73 1
		supportedTypes.add(IItemPropertySource.class);		
d90 1
d113 1
d136 1
d159 1
d182 1
d205 1
d228 1
d251 1
d274 1
d297 1
d320 1
d343 1
d366 1
d389 1
d412 1
d435 1
d458 1
d481 1
d504 1
d527 1
d550 1
d573 1
d596 1
d619 1
d642 1
d665 1
d688 1
d711 1
d734 1
d757 1
d780 1
d803 1
d826 1
d849 1
d872 1
d895 1
d918 1
d941 1
d964 1
d987 1
d1010 1
d1033 1
d1056 1
d1079 1
d1102 1
d1125 1
d1148 1
d1171 1
d1194 1
d1217 1
d1240 1
d1263 1
d1286 1
d1309 1
d1332 1
d1355 1
d1378 1
d1401 1
d1424 1
d1447 1
d1470 1
d1493 1
d1516 1
d1539 1
d1562 1
d1585 1
d1608 1
d1631 1
d1654 1
d1677 1
d1700 1
d1723 1
d1746 1
d1769 1
d1792 1
d1815 1
d1838 1
d1861 1
d1884 1
d1907 1
d1941 1
d1952 1
d1962 1
d1966 1
a1966 1
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
@


1.50
log
@[134107] add entities for preference pages
@
text
@d1155 22
d1983 1
@


1.49
log
@NavigatorContentProvider template reimplemented on xpand
@
text
@d143 44
d1913 2
@


1.48
log
@[134107] Provide preferences for the generated diagram editors
@
text
@d1419 44
d1929 2
@


1.47
log
@allow to specify ui contributions for rcp application in genmodel
@
text
@d143 110
d1825 5
@


1.46
log
@[164021] allow to choose standard tools
@
text
@d1419 132
d1775 6
@


1.45
log
@#161380 simplify feature model facets
@
text
@d847 22
d1617 1
@


1.44
log
@[119465] support for diagram partitioning - started to reorganize the way we store behaviours in the genmodel - let them be reused. OpenDiagram as an example of new way to add behaviours.
@
text
@a516 44
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FeatureModelFacetItemProvider featureModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createFeatureModelFacetAdapter() {
		if (featureModelFacetItemProvider == null) {
			featureModelFacetItemProvider = new FeatureModelFacetItemProvider(this);
		}

		return featureModelFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CompositeFeatureModelFacetItemProvider compositeFeatureModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CompositeFeatureModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createCompositeFeatureModelFacetAdapter() {
		if (compositeFeatureModelFacetItemProvider == null) {
			compositeFeatureModelFacetItemProvider = new CompositeFeatureModelFacetItemProvider(this);
		}

		return compositeFeatureModelFacetItemProvider;
	}

	/**
a582 22
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.CompositeFeatureLabelModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CompositeFeatureLabelModelFacetItemProvider compositeFeatureLabelModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CompositeFeatureLabelModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createCompositeFeatureLabelModelFacetAdapter() {
		if (compositeFeatureLabelModelFacetItemProvider == null) {
			compositeFeatureLabelModelFacetItemProvider = new CompositeFeatureLabelModelFacetItemProvider(this);
		}

		return compositeFeatureLabelModelFacetItemProvider;
	}

	/**
a1577 2
		if (featureModelFacetItemProvider != null) featureModelFacetItemProvider.dispose();
		if (compositeFeatureModelFacetItemProvider != null) compositeFeatureModelFacetItemProvider.dispose();
a1580 1
		if (compositeFeatureLabelModelFacetItemProvider != null) compositeFeatureLabelModelFacetItemProvider.dispose();
@


1.43
log
@#114200 Provide an option to generate RCP application
@
text
@d187 44
d1629 2
@


1.42
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@d1419 22
d1643 1
@


1.41
log
@Model navigator, initial version.
@
text
@d1309 110
d1616 5
@


1.40
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
- updating gmfgen
@
text
@d1265 44
d1504 2
d1508 1
a1508 1
}
@


1.39
log
@[124826] mgolubev - Support nodes with border items
@
text
@d957 22
d1446 1
@


1.38
log
@add custom behaviour
@
text
@d231 22
d1389 1
@


1.37
log
@[mgolubev] #145863 Colors defined in the gmfgraph model should be used by the generated polyline connections
@
text
@d165 22
d1364 1
@


1.36
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d605 22
d1362 1
@


1.35
log
@heading towards explicit use of parent's figure in children
@
text
@d561 22
d1338 1
@


1.34
log
@#133836 Creating a child node without a label causes error
@
text
@d715 22
d1323 1
@


1.33
log
@#138464 Support EAttribute based target in AuditRule element
@
text
@d209 22
d1278 1
@


1.32
log
@#136877 Provide inital offset from the host link for the link label
@
text
@d935 22
d1291 1
@


1.31
log
@#131270 Duplicated tool entries when same tool definition is referenced from gmfmap.
@
text
@d605 22
d1252 1
@


1.30
log
@[#134511] common access to expressions of different languages
@
text
@d693 1
a693 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.NodeEntry} instances.
d698 1
a698 1
	protected NodeEntryItemProvider nodeEntryItemProvider;
d701 1
a701 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.NodeEntry}.
d706 3
a708 3
	public Adapter createNodeEntryAdapter() {
		if (nodeEntryItemProvider == null) {
			nodeEntryItemProvider = new NodeEntryItemProvider(this);
d711 1
a711 1
		return nodeEntryItemProvider;
d715 1
a715 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.LinkEntry} instances.
d720 1
a720 1
	protected LinkEntryItemProvider linkEntryItemProvider;
d723 1
a723 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.LinkEntry}.
d728 3
a730 3
	public Adapter createLinkEntryAdapter() {
		if (linkEntryItemProvider == null) {
			linkEntryItemProvider = new LinkEntryItemProvider(this);
d733 1
a733 1
		return linkEntryItemProvider;
d1236 2
a1237 2
		if (nodeEntryItemProvider != null) nodeEntryItemProvider.dispose();
		if (linkEntryItemProvider != null) linkEntryItemProvider.dispose();
@


1.29
log
@#126200 register element types in xml
@
text
@d1001 66
d1250 3
@


1.28
log
@#114061 Support shape with fixed horizontal/vertical size. First, 'resize' part of the request was covered.
Obsolete ShapeAttributes class was deleted, same attributes should be set in gmfgraph now.
@
text
@d319 66
d1151 3
@


1.27
log
@#130715 Use default label text defined in gmfgraph model
@
text
@d495 1
a495 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ShapeAttributes} instances.
d500 1
a500 1
	protected ShapeAttributesItemProvider shapeAttributesItemProvider;
d503 1
a503 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ShapeAttributes}.
d508 3
a510 3
	public Adapter createShapeAttributesAdapter() {
		if (shapeAttributesItemProvider == null) {
			shapeAttributesItemProvider = new ShapeAttributesItemProvider(this);
d513 1
a513 1
		return shapeAttributesItemProvider;
d1093 1
a1093 1
		if (shapeAttributesItemProvider != null) shapeAttributesItemProvider.dispose();
@


1.26
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@a318 22
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.TextLabelModelFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected TextLabelModelFacetItemProvider textLabelModelFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.TextLabelModelFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createTextLabelModelFacetAdapter() {
		if (textLabelModelFacetItemProvider == null) {
			textLabelModelFacetItemProvider = new TextLabelModelFacetItemProvider(this);
		}

		return textLabelModelFacetItemProvider;
	}

	/**
a1084 1
		if (textLabelModelFacetItemProvider != null) textLabelModelFacetItemProvider.dispose();
@


1.25
log
@[rdvorak] #127446 Enable audit rules on diagram (notation model) elements in gmfgen model
@
text
@d891 66
d1135 3
@


1.24
log
@[rdvorak] #127700 Rename genmodel::ModelElementSelector as a generic GenConstraint element
@
text
@d825 66
d1066 3
@


1.23
log
@GenEditorViewer incapsulates all Eclipse's IEditorPart-related info
@
text
@d847 1
a847 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.ModelElementSelector} instances.
d852 1
a852 1
	protected ModelElementSelectorItemProvider modelElementSelectorItemProvider;
d855 1
a855 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.ModelElementSelector}.
d860 3
a862 3
	public Adapter createModelElementSelectorAdapter() {
		if (modelElementSelectorItemProvider == null) {
			modelElementSelectorItemProvider = new ModelElementSelectorItemProvider(this);
d865 1
a865 1
		return modelElementSelectorItemProvider;
d990 1
a990 1
		if (modelElementSelectorItemProvider != null) modelElementSelectorItemProvider.dispose();
@


1.22
log
@major refactoring of .gmfgen - new top-level entity introduced,  erroneous domainMetaModel feature removed (was deprecated for a while)
moving towards support of domain models defined in different packages - each GenElement uses it's own genPackage.packageInterfaceName
@
text
@d121 22
d966 1
@


1.21
log
@#126533 It should be possible to specify a label with fixed text in gmfgen model
@
text
@d77 22
d942 1
@


1.20
log
@refactor feature model facet; use distinct feature-based model facets for links and labels
@
text
@d275 22
d929 1
@


1.19
log
@#125729 Support labels based on multiple structural features
@
text
@d363 66
d911 3
@


1.18
log
@GenDiagram "slicing" goes on and this time attributes related to plugin activator class were moved into separate entity
@
text
@d319 22
d843 1
@


1.17
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d99 22
d811 1
@


1.16
log
@#122054 support external node labels (partial fix)
@
text
@d99 1
a99 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenNode} instances.
d104 1
a104 1
	protected GenNodeItemProvider genNodeItemProvider;
d107 1
a107 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenNode}.
d112 3
a114 3
	public Adapter createGenNodeAdapter() {
		if (genNodeItemProvider == null) {
			genNodeItemProvider = new GenNodeItemProvider(this);
d117 1
a117 1
		return genNodeItemProvider;
d121 1
a121 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment} instances.
d126 1
a126 1
	protected GenCompartmentItemProvider genCompartmentItemProvider;
d129 1
a129 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenCompartment}.
d134 3
a136 3
	public Adapter createGenCompartmentAdapter() {
		if (genCompartmentItemProvider == null) {
			genCompartmentItemProvider = new GenCompartmentItemProvider(this);
d139 1
a139 1
		return genCompartmentItemProvider;
d143 1
a143 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode} instances.
d148 1
a148 1
	protected GenChildNodeItemProvider genChildNodeItemProvider;
d151 1
a151 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode}.
d156 3
a158 3
	public Adapter createGenChildNodeAdapter() {
		if (genChildNodeItemProvider == null) {
			genChildNodeItemProvider = new GenChildNodeItemProvider(this);
d161 1
a161 1
		return genChildNodeItemProvider;
d789 2
a790 1
		if (genNodeItemProvider != null) genNodeItemProvider.dispose();
a791 1
		if (genChildNodeItemProvider != null) genChildNodeItemProvider.dispose();
@


1.15
log
@[rdvorak] #123232 audits (ocl constraints) definition in genmodel
@
text
@d209 22
d794 1
@


1.14
log
@one more flavor of snippet viewmap - inner class
@
text
@d583 44
d791 2
@


1.13
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@d407 22
d737 1
@


1.12
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d363 1
a363 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap} instances.
d368 1
a368 1
	protected BasicNodeViewmapItemProvider basicNodeViewmapItemProvider;
d371 1
a371 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap}.
d376 3
a378 3
	public Adapter createBasicNodeViewmapAdapter() {
		if (basicNodeViewmapItemProvider == null) {
			basicNodeViewmapItemProvider = new BasicNodeViewmapItemProvider(this);
d381 1
a381 1
		return basicNodeViewmapItemProvider;
d385 1
a385 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap} instances.
d390 1
a390 1
	protected DecoratedConnectionViewmapItemProvider decoratedConnectionViewmapItemProvider;
d393 1
a393 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap}.
d398 3
a400 3
	public Adapter createDecoratedConnectionViewmapAdapter() {
		if (decoratedConnectionViewmapItemProvider == null) {
			decoratedConnectionViewmapItemProvider = new DecoratedConnectionViewmapItemProvider(this);
d403 1
a403 89
		return decoratedConnectionViewmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.LinkDecoration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LinkDecorationItemProvider linkDecorationItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.LinkDecoration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createLinkDecorationAdapter() {
		if (linkDecorationItemProvider == null) {
			linkDecorationItemProvider = new LinkDecorationItemProvider(this);
		}

		return linkDecorationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.DiagramViewmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DiagramViewmapItemProvider diagramViewmapItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.DiagramViewmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createDiagramViewmapAdapter() {
		if (diagramViewmapItemProvider == null) {
			diagramViewmapItemProvider = new DiagramViewmapItemProvider(this);
		}

		return diagramViewmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.CompartmentViewmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CompartmentViewmapItemProvider compartmentViewmapItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.CompartmentViewmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createCompartmentViewmapAdapter() {
		if (compartmentViewmapItemProvider == null) {
			compartmentViewmapItemProvider = new CompartmentViewmapItemProvider(this);
		}

		return compartmentViewmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.LabelViewmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LabelViewmapItemProvider labelViewmapItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.LabelViewmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createLabelViewmapAdapter() {
		if (labelViewmapItemProvider == null) {
			labelViewmapItemProvider = new LabelViewmapItemProvider(this);
		}

		return labelViewmapItemProvider;
d713 2
a714 6
		if (basicNodeViewmapItemProvider != null) basicNodeViewmapItemProvider.dispose();
		if (decoratedConnectionViewmapItemProvider != null) decoratedConnectionViewmapItemProvider.dispose();
		if (linkDecorationItemProvider != null) linkDecorationItemProvider.dispose();
		if (diagramViewmapItemProvider != null) diagramViewmapItemProvider.dispose();
		if (compartmentViewmapItemProvider != null) compartmentViewmapItemProvider.dispose();
		if (labelViewmapItemProvider != null) labelViewmapItemProvider.dispose();
@


1.11
log
@[ashatalin] #113892 flexible compartment hierarchy
@
text
@d627 22
d815 1
@


1.10
log
@[dsadnik] #113824 marker viewmaps for diagram, label and childcontainer
@
text
@d121 1
a121 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode} instances.
d126 1
a126 1
	protected GenChildNodeItemProvider genChildNodeItemProvider;
d129 1
a129 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildNode}.
d134 3
a136 3
	public Adapter createGenChildNodeAdapter() {
		if (genChildNodeItemProvider == null) {
			genChildNodeItemProvider = new GenChildNodeItemProvider(this);
d139 1
a139 1
		return genChildNodeItemProvider;
d143 1
a143 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenLink} instances.
d148 1
a148 1
	protected GenLinkItemProvider genLinkItemProvider;
d151 1
a151 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLink}.
d156 3
a158 3
	public Adapter createGenLinkAdapter() {
		if (genLinkItemProvider == null) {
			genLinkItemProvider = new GenLinkItemProvider(this);
d161 1
a161 1
		return genLinkItemProvider;
d165 1
a165 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer} instances.
d170 1
a170 1
	protected GenChildContainerItemProvider genChildContainerItemProvider;
d173 1
a173 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer}.
d178 3
a180 3
	public Adapter createGenChildContainerAdapter() {
		if (genChildContainerItemProvider == null) {
			genChildContainerItemProvider = new GenChildContainerItemProvider(this);
d183 1
a183 1
		return genChildContainerItemProvider;
d768 1
a768 1
		if (genChildContainerItemProvider != null) genChildContainerItemProvider.dispose();
@


1.9
log
@[dstadnik] #113525 Get rid of LinkWithClass/LinkWithReference, use parallel hierarchy of modelFacet instead
@
text
@d429 66
d782 3
@


1.8
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d143 1
a143 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer} instances.
d148 1
a148 1
	protected GenChildContainerItemProvider genChildContainerItemProvider;
d151 1
a151 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenChildContainer}.
d156 3
a158 3
	public Adapter createGenChildContainerAdapter() {
		if (genChildContainerItemProvider == null) {
			genChildContainerItemProvider = new GenChildContainerItemProvider(this);
d161 1
a161 1
		return genChildContainerItemProvider;
d165 1
a165 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkWithClass} instances.
d170 1
a170 1
	protected GenLinkWithClassItemProvider genLinkWithClassItemProvider;
d173 1
a173 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkWithClass}.
d178 3
a180 3
	public Adapter createGenLinkWithClassAdapter() {
		if (genLinkWithClassItemProvider == null) {
			genLinkWithClassItemProvider = new GenLinkWithClassItemProvider(this);
d183 1
a183 23
		return genLinkWithClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkReferenceOnly} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GenLinkReferenceOnlyItemProvider genLinkReferenceOnlyItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenLinkReferenceOnly}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createGenLinkReferenceOnlyAdapter() {
		if (genLinkReferenceOnlyItemProvider == null) {
			genLinkReferenceOnlyItemProvider = new GenLinkReferenceOnlyItemProvider(this);
		}

		return genLinkReferenceOnlyItemProvider;
d704 1
a704 2
		if (genLinkWithClassItemProvider != null) genLinkWithClassItemProvider.dispose();
		if (genLinkReferenceOnlyItemProvider != null) genLinkReferenceOnlyItemProvider.dispose();
@


1.7
log
@[rdvorak] #113224 Generate custom initialization code for domain model elements
@
text
@d209 1
a209 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.codegen.gmfgen.LinkLabel} instances.
d214 1
a214 1
	protected LinkLabelItemProvider linkLabelItemProvider;
d217 1
a217 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.LinkLabel}.
d222 3
a224 3
	public Adapter createLinkLabelAdapter() {
		if (linkLabelItemProvider == null) {
			linkLabelItemProvider = new LinkLabelItemProvider(this);
d227 89
a315 1
		return linkLabelItemProvider;
d728 5
a732 1
		if (linkLabelItemProvider != null) linkLabelItemProvider.dispose();
@


1.6
log
@[rdvorak] #112097 genmodel support to use expression evaluation to choose editpart (visual representation)
@
text
@d451 44
d653 2
@


1.5
log
@#112191 colors as Viewmap's Attributes
@
text
@d451 44
d603 2
@


1.4
log
@[dstadnik]
#111780 Link labels with read-only flag and relative positioning
@
text
@d231 22
d553 1
@


1.3
log
@#111775 stale properties in gmfgen
#111784 GenChildContainer extends GenCommonBase
@
text
@d209 22
d530 1
@


1.2
log
@figure class could be specified in .gmfgen along with dependent attributes. Notion of "Viewmap" captures that (visualization) information
@
text
@d504 1
a505 1
		if (genChildContainerItemProvider != null) genChildContainerItemProvider.dispose();
@


1.1
log
@*** empty log message ***
@
text
@a14 1

a25 1

d209 110
d508 5
@

