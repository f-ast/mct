head	1.11;
access;
symbols
	v20081015-1925:1.11
	v20081008-1925:1.11
	v20080924-1925:1.11
	v20080917-1925:1.11
	v20080903-1520:1.11
	v20080827-1520:1.11
	v20080813-1520:1.11
	v20080722-1827:1.11
	v20080718-1700:1.11
	v20080716-1642:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080610-1132:1.11
	v20080521:1.11
	v20080512-1200:1.11
	v20080508-2000:1.10
	v20080507-1326:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080322-0000:1.10
	v20080222-1200:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071003-0000:1.9
	v20070921-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070413-1300:1.9
	v20070403-1500:1.9
	v20070330-1300:1.8
	v20060330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070208-1800:1.7
	v20070103-0300:1.7
	M4_20:1.7
	v20061222-1800:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	v20061120-1300:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061013-1330:1.7
	M1_20:1.7
	v20060904-1500:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060626-1420:1.7
	v20060620-0400:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-0800:1.7
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051208-2000:1.4
	I20051201-1800:1.4
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2008.05.09.15.40.02;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	11df482470524567;

1.10
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	61fc47cc45964567;

1.9
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	5ebd461280e04567;

1.8
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	43e345f808fc4567;

1.7
date	2006.05.17.14.22.36;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.14.18.46.19;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.29.18.33.06;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.26.18.43.50;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.26.17.33.03;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.21.13.32.04;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.11
log
@[228913] migration support for ValueExpression metamodel changes - updated genmodel for proper editing
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.TypeModelFacet} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class TypeModelFacetItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public TypeModelFacetItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addMetaClassPropertyDescriptor(object);
			addContainmentMetaFeaturePropertyDescriptor(object);
			addChildMetaFeaturePropertyDescriptor(object);
			addModelElementSelectorPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Meta Class feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addMetaClassPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_TypeModelFacet_metaClass_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_TypeModelFacet_metaClass_feature", "_UI_TypeModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getTypeModelFacet_MetaClass(),
				 true,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Containment Meta Feature feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addContainmentMetaFeaturePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_TypeModelFacet_containmentMetaFeature_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_TypeModelFacet_containmentMetaFeature_feature", "_UI_TypeModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getTypeModelFacet_ContainmentMetaFeature(),
				 true,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Child Meta Feature feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addChildMetaFeaturePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_TypeModelFacet_childMetaFeature_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_TypeModelFacet_childMetaFeature_feature", "_UI_TypeModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getTypeModelFacet_ChildMetaFeature(),
				 true,
				 false,
				 false,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Model Element Selector feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addModelElementSelectorPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_TypeModelFacet_modelElementSelector_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_TypeModelFacet_modelElementSelector_feature", "_UI_TypeModelFacet_type"),
				 GMFGenPackage.eINSTANCE.getTypeModelFacet_ModelElementSelector(),
				 true,
				 false,
				 true,
				 null,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getTypeModelFacet_ModelElementInitializer());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns TypeModelFacet.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/TypeModelFacet"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		return getString("_UI_TypeModelFacet_type");
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(TypeModelFacet.class)) {
			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getTypeModelFacet_ModelElementInitializer(),
				 GMFGenFactory.eINSTANCE.createGenFeatureSeqInitializer()));
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return ((IChildCreationExtender)adapterFactory).getResourceLocator();
	}

}
@


1.10
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@d69 1
d141 22
a173 1
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getTypeModelFacet_ModelElementSelector());
a225 1
			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
a245 5
				(GMFGenPackage.eINSTANCE.getTypeModelFacet_ModelElementSelector(),
				 GMFGenFactory.eINSTANCE.createGenConstraint()));

		newChildDescriptors.add
			(createChildParameter
@


1.9
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d18 1
a29 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
d242 1
a242 1
		return EditorPlugin.INSTANCE;
@


1.8
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a16 1
import org.eclipse.emf.edit.command.CommandParameter;
d213 2
a214 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d220 1
a220 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.7
log
@#139127 Provide an option for labels to display node icon
@
text
@d17 1
d21 1
d62 2
a63 1
	public List getPropertyDescriptors(Object object) {
d148 2
a149 1
	public Collection getChildrenFeatures(Object object) {
d163 1
d177 1
d188 1
d200 1
d220 2
a221 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d241 1
@


1.6
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d86 2
d108 2
d130 2
@


1.5
log
@[rdvorak] #127700 Rename genmodel::ModelElementSelector as a generic GenConstraint element
@
text
@d167 1
a167 1
		return getResourceLocator().getImage("full/obj16/TypeModelFacet");
@


1.4
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d212 1
a212 1
				 GMFGenFactory.eINSTANCE.createModelElementSelector()));
@


1.3
log
@[rdvorak] #113856 refactor features left in GenBaseElement to TypeModelFacet
@
text
@a14 1

a15 1

a16 1

a23 1

a24 1

a26 1

a27 1

@


1.2
log
@#113823 childMetaFeature moved to TypeModelFacet
@
text
@d18 2
d28 3
d33 2
d139 29
d196 7
d215 10
@


1.1
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d66 1
d112 20
@

