head	1.5;
access;
symbols
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080722-1827:1.5
	v20080718-1700:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080521:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080322-0000:1.5
	v20080222-1200:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071003-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070413-1300:1.4
	v20070403-1500:1.4
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070208-1800:1.2
	v20070103-0300:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061013-1330:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060620-0400:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060202-1415:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	161e47cc392a4567;

1.4
date	2007.04.03.16.29.55;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	5ebd461280e04567;

1.3
date	2007.03.14.14.39.04;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	43e345f808fc4567;

1.2
date	2006.03.03.18.32.38;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.19.00.10.38;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenTopLevelNodeItemProvider
	extends GenNodeItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenTopLevelNodeItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

		}
		return itemPropertyDescriptors;
	}

	/**
	 * This returns GenTopLevelNode.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenTopLevelNode"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((GenTopLevelNode)object).getEditPartClassName();
		return label == null || label.length() == 0 ?
			getString("_UI_GenTopLevelNode_type") :
			getString("_UI_GenTopLevelNode_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

}
@


1.4
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a21 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
a111 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return EditorPlugin.INSTANCE;
	}

@


1.3
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 2

import org.eclipse.emf.edit.command.CommandParameter;
a21 1

a22 1

d103 2
a104 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d110 1
a110 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.2
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d18 1
d21 1
d60 2
a61 1
	public List getPropertyDescriptors(Object object) {
d75 1
d86 1
d101 1
d114 2
a115 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d125 1
@


1.1
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d73 1
a73 1
		return getResourceLocator().getImage("full/obj16/GenTopLevelNode");
@

