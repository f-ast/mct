head	1.9;
access;
symbols
	v20081015-1925:1.9
	v20081008-1925:1.9
	v20080924-1925:1.9
	v20080917-1925:1.9
	v20080903-1520:1.9
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080722-1827:1.7
	v20080718-1700:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080521:1.7
	v20080512-1200:1.6
	v20080508-2000:1.6
	v20080507-1326:1.6
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080322-0000:1.6
	v20080222-1200:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071003-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.3
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070413-1300:1.3
	v20070403-1500:1.3
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20070103-0300:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2008.08.29.16.09.53;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	4a1648b81f4f4567;

1.8
date	2008.08.29.16.03.40;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	473b48b81ddb4567;

1.7
date	2008.05.19.11.02.29;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	677548315e434567;

1.6
date	2008.03.03.18.38.20;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	61fc47cc45964567;

1.5
date	2008.03.03.17.45.17;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	161e47cc392a4567;

1.4
date	2007.05.23.17.30.44;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	15fb46547a444567;

1.3
date	2007.04.03.16.29.56;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	5ebd461280e04567;

1.2
date	2007.03.14.14.39.05;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	43e345f808fc4567;

1.1
date	2006.12.27.12.43.16;	author dstadnik;	state Exp;
branches;
next	;
commitid	5b8e45926a624567;


desc
@@


1.9
log
@[244419] Support for custom parser - finalize parsers/labelmodelfacet relationship
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;
import org.eclipse.gmf.codegen.gmfgen.GenDiagramPreferences;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.codegen.gmfgen.GenDiagramPreferences} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GenDiagramPreferencesItemProvider
	extends ItemProviderAdapter
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GenDiagramPreferencesItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addLineStylePropertyDescriptor(object);
			addShowConnectionHandlesPropertyDescriptor(object);
			addShowPopupBarsPropertyDescriptor(object);
			addPromptOnDelFromModelPropertyDescriptor(object);
			addPromptOnDelFromDiagramPropertyDescriptor(object);
			addEnableAnimatedLayoutPropertyDescriptor(object);
			addEnableAnimatedZoomPropertyDescriptor(object);
			addEnableAntiAliasPropertyDescriptor(object);
			addShowGridPropertyDescriptor(object);
			addShowRulersPropertyDescriptor(object);
			addSnapToGridPropertyDescriptor(object);
			addSnapToGeometryPropertyDescriptor(object);
			addGridInFrontPropertyDescriptor(object);
			addRulerUnitsPropertyDescriptor(object);
			addGridSpacingPropertyDescriptor(object);
			addGridLineStylePropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Line Style feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addLineStylePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_lineStyle_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_lineStyle_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_LineStyle(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Show Connection Handles feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addShowConnectionHandlesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_showConnectionHandles_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_showConnectionHandles_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_ShowConnectionHandles(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Show Popup Bars feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addShowPopupBarsPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_showPopupBars_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_showPopupBars_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_ShowPopupBars(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Prompt On Del From Model feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addPromptOnDelFromModelPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_promptOnDelFromModel_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_promptOnDelFromModel_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_PromptOnDelFromModel(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Prompt On Del From Diagram feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addPromptOnDelFromDiagramPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_promptOnDelFromDiagram_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_promptOnDelFromDiagram_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_PromptOnDelFromDiagram(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Enable Animated Layout feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addEnableAnimatedLayoutPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_enableAnimatedLayout_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_enableAnimatedLayout_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_EnableAnimatedLayout(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Enable Animated Zoom feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addEnableAnimatedZoomPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_enableAnimatedZoom_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_enableAnimatedZoom_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_EnableAnimatedZoom(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Enable Anti Alias feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addEnableAntiAliasPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_enableAntiAlias_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_enableAntiAlias_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_EnableAntiAlias(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Show Grid feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addShowGridPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_showGrid_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_showGrid_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_ShowGrid(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Show Rulers feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addShowRulersPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_showRulers_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_showRulers_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_ShowRulers(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Snap To Grid feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSnapToGridPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_snapToGrid_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_snapToGrid_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_SnapToGrid(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Snap To Geometry feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addSnapToGeometryPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_snapToGeometry_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_snapToGeometry_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_SnapToGeometry(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Grid In Front feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGridInFrontPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_gridInFront_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_gridInFront_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_GridInFront(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Ruler Units feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addRulerUnitsPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_rulerUnits_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_rulerUnits_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_RulerUnits(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Grid Spacing feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGridSpacingPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_gridSpacing_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_gridSpacing_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_GridSpacing(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.REAL_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Grid Line Style feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addGridLineStylePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_GenDiagramPreferences_gridLineStyle_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_GenDiagramPreferences_gridLineStyle_feature", "_UI_GenDiagramPreferences_type"),
				 GMFGenPackage.eINSTANCE.getGenDiagramPreferences_GridLineStyle(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_DefaultFont());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FontColor());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FillColor());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_LineColor());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteFillColor());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteLineColor());
			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_GridLineColor());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns GenDiagramPreferences.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/GenDiagramPreferences"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	@@Override
	public String getText(Object object) {
		return getString("_UI_GenDiagramPreferences_type");
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(GenDiagramPreferences.class)) {
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__LINE_STYLE:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__SHOW_CONNECTION_HANDLES:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__SHOW_POPUP_BARS:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__PROMPT_ON_DEL_FROM_MODEL:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__PROMPT_ON_DEL_FROM_DIAGRAM:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__ENABLE_ANIMATED_LAYOUT:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__ENABLE_ANIMATED_ZOOM:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__ENABLE_ANTI_ALIAS:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__SHOW_GRID:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__SHOW_RULERS:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__SNAP_TO_GRID:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__SNAP_TO_GEOMETRY:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__GRID_IN_FRONT:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__RULER_UNITS:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__GRID_SPACING:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__GRID_LINE_STYLE:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__DEFAULT_FONT:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__FONT_COLOR:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__FILL_COLOR:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__LINE_COLOR:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__NOTE_FILL_COLOR:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__NOTE_LINE_COLOR:
			case GMFGenPackage.GEN_DIAGRAM_PREFERENCES__GRID_LINE_COLOR:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_DefaultFont(),
				 GMFGenFactory.eINSTANCE.createGenStandardFont()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_DefaultFont(),
				 GMFGenFactory.eINSTANCE.createGenCustomFont()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FontColor(),
				 GMFGenFactory.eINSTANCE.createGenRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FontColor(),
				 GMFGenFactory.eINSTANCE.createGenConstantColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FillColor(),
				 GMFGenFactory.eINSTANCE.createGenRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FillColor(),
				 GMFGenFactory.eINSTANCE.createGenConstantColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_LineColor(),
				 GMFGenFactory.eINSTANCE.createGenRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_LineColor(),
				 GMFGenFactory.eINSTANCE.createGenConstantColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteFillColor(),
				 GMFGenFactory.eINSTANCE.createGenRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteFillColor(),
				 GMFGenFactory.eINSTANCE.createGenConstantColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteLineColor(),
				 GMFGenFactory.eINSTANCE.createGenRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteLineColor(),
				 GMFGenFactory.eINSTANCE.createGenConstantColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_GridLineColor(),
				 GMFGenFactory.eINSTANCE.createGenRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGenPackage.eINSTANCE.getGenDiagramPreferences_GridLineColor(),
				 GMFGenFactory.eINSTANCE.createGenConstantColor()));
	}

	/**
	 * This returns the label text for {@@link org.eclipse.emf.edit.command.CreateChildCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getCreateChildText(Object owner, Object feature, Object child, Collection<?> selection) {
		Object childFeature = feature;
		Object childObject = child;

		boolean qualify =
			childFeature == GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FontColor() ||
			childFeature == GMFGenPackage.eINSTANCE.getGenDiagramPreferences_FillColor() ||
			childFeature == GMFGenPackage.eINSTANCE.getGenDiagramPreferences_LineColor() ||
			childFeature == GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteFillColor() ||
			childFeature == GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteLineColor() ||
			childFeature == GMFGenPackage.eINSTANCE.getGenDiagramPreferences_GridLineColor();

		if (qualify) {
			return getString
				("_UI_CreateChild_text2",
				 new Object[] { getTypeText(childObject), getFeatureText(childFeature), getTypeText(owner) });
		}
		return super.getCreateChildText(owner, feature, child, selection);
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return ((IChildCreationExtender)adapterFactory).getResourceLocator();
	}

}
@


1.8
log
@organized imports
@
text
@a8 1

@


1.7
log
@[232761] support new diagram prefs
@
text
@a30 1
import org.eclipse.gmf.codegen.gmfgen.Routing;
@


1.6
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@d31 1
d79 2
d83 1
d331 44
d419 22
d458 1
d521 2
d525 1
d534 1
d611 10
d639 2
a640 1
			childFeature == GMFGenPackage.eINSTANCE.getGenDiagramPreferences_NoteLineColor();
@


1.5
log
@regenerated with EMF 2.4M5
@
text
@d18 1
a30 1
import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;
d572 1
a572 1
		return EditorPlugin.INSTANCE;
@


1.4
log
@fix labels
@
text
@a29 1
import org.eclipse.gmf.codegen.gmfgen.Routing;
@


1.3
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d421 1
a421 1
	 * @@generated
d425 1
a425 5
		Routing labelValue = ((GenDiagramPreferences)object).getLineStyle();
		String label = labelValue == null ? null : labelValue.toString();
		return label == null || label.length() == 0 ?
			getString("_UI_GenDiagramPreferences_type") :
			getString("_UI_GenDiagramPreferences_type") + " " + label;
@


1.2
log
@Regenerated gmfgen model with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a14 1

a15 1

a16 2

import org.eclipse.emf.edit.command.CommandParameter;
a26 1

a30 1

d472 2
a473 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d479 1
a479 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.1
log
@[134107] Provide preferences for the generated diagram editors
@
text
@d20 1
d24 1
d69 2
a70 1
	public List getPropertyDescriptors(Object object) {
d385 2
a386 1
	public Collection getChildrenFeatures(Object object) {
d404 1
d418 1
d429 1
d445 1
d484 2
a485 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d555 2
a556 1
	public String getCreateChildText(Object owner, Object feature, Object child, Collection selection) {
d581 1
@

