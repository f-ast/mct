head	1.8;
access;
symbols
	v20081020-0700:1.8
	v20080722-1827:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080507-1326:1.8
	v20080503-1740:1.6
	v20080425-1959:1.5
	v20080407-2250:1.5
	v20080407-1545:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20071130-1111:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	v20070330-1300:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060925-1700:1.3.2.2
	v20060919-0800:1.3.2.2
	M1_20:1.3
	v20060721-1130:1.3.2.1
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.8
date	2008.05.07.01.04.42;	author ahunter;	state Exp;
branches;
next	1.7;
commitid	72c9482100244567;

1.7
date	2008.05.07.00.14.23;	author ahunter;	state Exp;
branches;
next	1.6;
commitid	3e714820f45b4567;

1.6
date	2008.05.03.18.32.43;	author ahunter;	state Exp;
branches;
next	1.5;
commitid	1bf3481cafc54567;

1.5
date	2007.05.17.16.26.43;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	71a8464c82414567;

1.4
date	2006.10.03.15.07.32;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.07.15.21.54;	author mmostafa;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.29.24;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.29;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.07.17.20.27.51;	author ahunter;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2006.09.13.16.48.19;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.runtime.notation.ImageStyle;
import org.eclipse.gmf.runtime.notation.NotationEditPlugin;
import org.eclipse.gmf.runtime.notation.NotationFactory;
import org.eclipse.gmf.runtime.notation.NotationPackage;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.runtime.notation.ImageStyle} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class ImageStyleItemProvider
	extends ItemProviderAdapter
	implements
		IEditingDomainItemProvider,
		IStructuredItemContentProvider,
		ITreeItemContentProvider,
		IItemLabelProvider,
		IItemPropertySource {
    /**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ImageStyleItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

    /**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public List getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addAntiAliasPropertyDescriptor(object);
			addMaintainAspectRatioPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

    /**
	 * This adds a property descriptor for the Anti Alias feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addAntiAliasPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ImageStyle_antiAlias_feature"), //$NON-NLS-1$
				 getString("_UI_PropertyDescriptor_description", "_UI_ImageStyle_antiAlias_feature", "_UI_ImageStyle_type"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				 NotationPackage.Literals.IMAGE_STYLE__ANTI_ALIAS,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

    /**
	 * This adds a property descriptor for the Maintain Aspect Ratio feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addMaintainAspectRatioPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ImageStyle_maintainAspectRatio_feature"), //$NON-NLS-1$
				 getString("_UI_PropertyDescriptor_description", "_UI_ImageStyle_maintainAspectRatio_feature", "_UI_ImageStyle_type"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				 NotationPackage.Literals.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

    /**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Collection getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(NotationPackage.Literals.IMAGE_STYLE__CROP_BOUND);
		}
		return childrenFeatures;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

				/**
	 * This returns ImageStyle.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/ImageStyle")); //$NON-NLS-1$
	}

    /**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getText(Object object) {
		Boolean labelValue = ((ImageStyle)object).getAntiAlias();
		String label = labelValue == null ? null : labelValue.toString();
		return label == null || label.length() == 0 ?
			getString("_UI_ImageStyle_type") : //$NON-NLS-1$
			getString("_UI_ImageStyle_type") + " " + label; //$NON-NLS-1$ //$NON-NLS-2$
	}

    /**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(ImageStyle.class)) {
			case NotationPackage.IMAGE_STYLE__ANTI_ALIAS:
			case NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case NotationPackage.IMAGE_STYLE__CROP_BOUND:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

    /**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(NotationPackage.Literals.IMAGE_STYLE__CROP_BOUND,
				 NotationFactory.eINSTANCE.createBounds()));
	}

    /**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ResourceLocator getResourceLocator() {
		return NotationEditPlugin.INSTANCE;
	}

}
@


1.7
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@a19 1
import org.eclipse.emf.ecore.EObject;
d211 1
a211 1
				/**
@


1.6
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@d45 1
a45 1
	extends NotationObjectItemProvider
d167 1
a167 1
		Object labelValue = ((EObject)object).eGet(NotationPackage.Literals.NOTATION_OBJECT__UUID);
d212 10
@


1.5
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@d20 1
d45 1
a45 1
	extends ItemProviderAdapter
d167 1
a167 1
		Boolean labelValue = ((ImageStyle)object).getAntiAlias();
a211 10
    /**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ResourceLocator getResourceLocator() {
		return NotationEditPlugin.INSTANCE;
	}

@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d21 1
d52 2
a53 2
     * This constructs an instance from a factory and a notifier.
     * <!-- begin-user-doc -->
d55 2
a56 2
     * @@generated
     */
d58 2
a59 2
        super(adapterFactory);
    }
d62 2
a63 2
     * This returns the property descriptors for the adapted class.
     * <!-- begin-user-doc -->
d65 2
a66 2
     * @@generated
     */
d68 2
a69 2
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors(object);
d71 5
a75 5
            addAntiAliasPropertyDescriptor(object);
            addMaintainAspectRatioPropertyDescriptor(object);
        }
        return itemPropertyDescriptors;
    }
d78 2
a79 2
     * This adds a property descriptor for the Anti Alias feature.
     * <!-- begin-user-doc -->
d81 2
a82 2
     * @@generated
     */
d84 14
a97 14
        itemPropertyDescriptors.add
            (createItemPropertyDescriptor
                (((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
                 getResourceLocator(),
                 getString("_UI_ImageStyle_antiAlias_feature"), //$NON-NLS-1$
                 getString("_UI_PropertyDescriptor_description", "_UI_ImageStyle_antiAlias_feature", "_UI_ImageStyle_type"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                 NotationPackage.Literals.IMAGE_STYLE__ANTI_ALIAS,
                 true,
                 false,
                 false,
                 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
                 null,
                 null));
    }
d100 2
a101 2
     * This adds a property descriptor for the Maintain Aspect Ratio feature.
     * <!-- begin-user-doc -->
d103 2
a104 2
     * @@generated
     */
d106 20
a125 20
        itemPropertyDescriptors.add
            (createItemPropertyDescriptor
                (((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
                 getResourceLocator(),
                 getString("_UI_ImageStyle_maintainAspectRatio_feature"), //$NON-NLS-1$
                 getString("_UI_PropertyDescriptor_description", "_UI_ImageStyle_maintainAspectRatio_feature", "_UI_ImageStyle_type"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                 NotationPackage.Literals.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO,
                 true,
                 false,
                 false,
                 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
                 null,
                 null));
    }

    /**
     * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
     * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
     * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
     * <!-- begin-user-doc -->
d127 2
a128 2
     * @@generated
     */
d130 22
a151 10
        if (childrenFeatures == null) {
            super.getChildrenFeatures(object);
            childrenFeatures.add(NotationPackage.Literals.IMAGE_STYLE__CROP_BOUND);
        }
        return childrenFeatures;
    }

    /**
     * This returns ImageStyle.gif.
     * <!-- begin-user-doc -->
d153 2
a154 2
     * @@generated
     */
d156 2
a157 2
        return overlayImage(object, getResourceLocator().getImage("full/obj16/ImageStyle")); //$NON-NLS-1$
    }
d160 2
a161 2
     * This returns the label text for the adapted class.
     * <!-- begin-user-doc -->
d163 2
a164 2
     * @@generated
     */
d166 6
a171 6
        Boolean labelValue = ((ImageStyle)object).getAntiAlias();
        String label = labelValue == null ? null : labelValue.toString();
        return label == null || label.length() == 0 ?
            getString("_UI_ImageStyle_type") : //$NON-NLS-1$
            getString("_UI_ImageStyle_type") + " " + label; //$NON-NLS-1$ //$NON-NLS-2$
    }
d174 3
a176 3
     * This handles model notifications by calling {@@link #updateChildren} to update any cached
     * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
     * <!-- begin-user-doc -->
d178 2
a179 2
     * @@generated
     */
d181 1
a181 1
        updateChildren(notification);
d183 16
a198 16
        switch (notification.getFeatureID(ImageStyle.class)) {
            case NotationPackage.IMAGE_STYLE__ANTI_ALIAS:
            case NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO:
                fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
                return;
            case NotationPackage.IMAGE_STYLE__CROP_BOUND:
                fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
                return;
        }
        super.notifyChanged(notification);
    }

    /**
     * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
     * describing all of the children that can be created under this object.
     * <!-- begin-user-doc -->
d200 2
a201 2
     * @@generated
     */
d203 1
a203 1
        super.collectNewChildDescriptors(newChildDescriptors, object);
d205 5
a209 5
        newChildDescriptors.add
            (createChildParameter
                (NotationPackage.Literals.IMAGE_STYLE__CROP_BOUND,
                 NotationFactory.eINSTANCE.createBounds()));
    }
d212 2
a213 2
     * Return the resource locator for this item provider's resources.
     * <!-- begin-user-doc -->
d215 2
a216 2
     * @@generated
     */
d218 2
a219 2
        return NotationEditPlugin.INSTANCE;
    }
@


1.3
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d91 2
d113 2
d143 1
a143 1
        return getResourceLocator().getImage("full/obj16/ImageStyle"); //$NON-NLS-1$
@


1.3.2.1
log
@[141061] gmf_r1_0_maintenance ylulu 060717 Performance: Notation metamodel can reduce its memory usage
@
text
@a90 2
                 false,
                 false,
a110 2
                 false,
                 false,
d139 1
a139 1
        return overlayImage(object, getResourceLocator().getImage("full/obj16/ImageStyle")); //$NON-NLS-1$
@


1.3.2.2
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d50 3
a52 3
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
d54 2
a55 2
	 * @@generated
	 */
d57 2
a58 2
		super(adapterFactory);
	}
d60 3
a62 3
	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
d64 2
a65 2
	 * @@generated
	 */
d67 2
a68 2
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);
d70 9
a78 9
			addAntiAliasPropertyDescriptor(object);
			addMaintainAspectRatioPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Anti Alias feature.
	 * <!-- begin-user-doc -->
d80 2
a81 2
	 * @@generated
	 */
d83 16
a98 16
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ImageStyle_antiAlias_feature"), //$NON-NLS-1$
				 getString("_UI_PropertyDescriptor_description", "_UI_ImageStyle_antiAlias_feature", "_UI_ImageStyle_type"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				 NotationPackage.eINSTANCE.getImageStyle_AntiAlias(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Maintain Aspect Ratio feature.
	 * <!-- begin-user-doc -->
d100 2
a101 2
	 * @@generated
	 */
d103 18
a120 18
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_ImageStyle_maintainAspectRatio_feature"), //$NON-NLS-1$
				 getString("_UI_PropertyDescriptor_description", "_UI_ImageStyle_maintainAspectRatio_feature", "_UI_ImageStyle_type"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				 NotationPackage.eINSTANCE.getImageStyle_MaintainAspectRatio(),
				 true,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
d122 2
a123 2
	 * @@generated
	 */
d125 10
a134 10
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(NotationPackage.eINSTANCE.getImageStyle_CropBound());
		}
		return childrenFeatures;
	}

	/**
	 * This returns ImageStyle.gif.
	 * <!-- begin-user-doc -->
d136 2
a137 2
	 * @@generated
	 */
d139 2
a140 2
		return getResourceLocator().getImage("full/obj16/ImageStyle"); //$NON-NLS-1$
	}
d142 3
a144 3
	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
d146 2
a147 2
	 * @@generated
	 */
d149 11
a159 11
		Boolean labelValue = ((ImageStyle)object).getAntiAlias();
		String label = labelValue == null ? null : labelValue.toString();
		return label == null || label.length() == 0 ?
			getString("_UI_ImageStyle_type") : //$NON-NLS-1$
			getString("_UI_ImageStyle_type") + " " + label; //$NON-NLS-1$ //$NON-NLS-2$
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
d161 2
a162 2
	 * @@generated
	 */
d164 1
a164 1
		updateChildren(notification);
d166 16
a181 16
		switch (notification.getFeatureID(ImageStyle.class)) {
			case NotationPackage.IMAGE_STYLE__ANTI_ALIAS:
			case NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case NotationPackage.IMAGE_STYLE__CROP_BOUND:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
	 * <!-- begin-user-doc -->
d183 2
a184 2
	 * @@generated
	 */
d186 1
a186 1
		super.collectNewChildDescriptors(newChildDescriptors, object);
d188 9
a196 9
		newChildDescriptors.add
			(createChildParameter
				(NotationPackage.eINSTANCE.getImageStyle_CropBound(),
				 NotationFactory.eINSTANCE.createBounds()));
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
d198 2
a199 2
	 * @@generated
	 */
d201 2
a202 2
		return NotationEditPlugin.INSTANCE;
	}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

