head	1.4;
access;
symbols
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080417-1610:1.4
	v20080322-0000:1.4
	v20080222-1200:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070413-1300:1.3
	v20070405-2000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2008.03.06.12.46.28;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	7e5747cfe7a44567;

1.3
date	2007.04.13.12.10.34;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	183c461f73394567;

1.2
date	2007.04.13.08.41.00;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	1477461f421b4567;

1.1
date	2007.04.05.20.57.03;	author atikhomirov;	state Exp;
branches;
next	;
commitid	47294615629e4567;


desc
@@


1.4
log
@[220711] respect workspace resource models - refactored transformation operation to manage resource set easily
@
text
@/*
 * Copyright (c) 2006, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.ui.dashboard.actions;

import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.gmf.bridge.ui.dashboard.DashboardAction;
import org.eclipse.gmf.bridge.ui.dashboard.DashboardFacade;
import org.eclipse.gmf.bridge.ui.dashboard.DashboardState;
import org.eclipse.gmf.internal.bridge.transform.TransformOptions;
import org.eclipse.gmf.internal.bridge.transform.TransformToGenModelOperation;
import org.eclipse.jface.dialogs.ErrorDialog;

/**
 * @@author dstadnik
 */
public class TransformMap2GenModelAction implements DashboardAction {

	private DashboardFacade context;

	public void init(DashboardFacade context) {
		this.context = context;
	}

	public boolean isEnabled() {
		DashboardState state = context.getState();
		if (context.isStrict()) {
			if (state.getDM() == null || state.getDGM() == null || state.getTDM() == null) {
				return false;
			}
		}
		return state.getMM() != null;
	}

	public void run() {
		DashboardState state = context.getState();
		URI mm = state.getMM();
		URI gm = state.getGM();
		if (gm == null) {
			gm = mm.trimFileExtension().appendFileExtension("gmfgen"); //$NON-NLS-1$
			state.setGM(gm);
		}
		try {
			final ResourceSet rs = new ResourceSetImpl();
			TransformToGenModelOperation op = new TransformToGenModelOperation(rs);
			configureOptions(op.getOptions());
			op.loadMappingModel(mm, new NullProgressMonitor());
			op.loadGenModel(state.getDGM(), new NullProgressMonitor());
			op.setGenURI(gm);
			op.executeTransformation(new NullProgressMonitor());
		} catch (CoreException ce) {
			ErrorDialog.openError(context.getShell(), null, ce.getMessage(), ce.getStatus());
		} finally {
			context.updateStatus();
		}
	}

	protected void configureOptions(TransformOptions options) {
		options.setUseRuntimeFigures(true);
		options.setUseMapMode(true);
		options.setGenerateRCP(context.getState().getOption(DashboardFacade.OPTION_RCP));
	}
}
@


1.3
log
@[168935] Allow to generate gmfgen models for RCP application on dashboard
@
text
@d2 1
a2 1
 * Copyright (c) 2006, 2007 Eclipse.org
d56 2
a57 1
			TransformToGenModelOperation op = new TransformToGenModelOperation();
d59 2
a60 3
			final ResourceSet rs = new ResourceSetImpl();
			op.loadMappingModel(rs, mm, new NullProgressMonitor());
			op.loadGenModel(rs, state.getDGM(), new NullProgressMonitor());
d62 1
a62 1
			op.executeTransformation(rs, new NullProgressMonitor());
@


1.2
log
@provide shell from context
@
text
@d73 1
a73 1
		options.setGenerateRCP(false);
@


1.1
log
@deprecated map->genmodel transformation action removed, dashboard updated to use new one
@
text
@a24 2
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.PlatformUI;
d63 2
a64 4
		} catch (CoreException ex) {
			// XXX Is it legal to show UI from the action? Provide shell from context then.
			final Shell s = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();
			ErrorDialog.openError(s, null, ex.getMessage(), ex.getStatus());
@

