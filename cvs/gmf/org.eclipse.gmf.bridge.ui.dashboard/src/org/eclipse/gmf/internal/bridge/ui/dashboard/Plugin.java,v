head	1.6;
access;
symbols
	v20080722-1827:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080417-1610:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.5
	v20070601-1400:1.5
	v20070413-1300:1.5
	v20070405-2000:1.5
	v20070330-1300:1.5
	v20060316-0600:1.5
	v20070228-2000:1.5
	v20070208-1800:1.5
	M4_20:1.5
	v20061222-1800:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061013-1330:1.5
	v20060925-1700:1.4.2.1
	v20060919-0800:1.4.2.1
	M1_20:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060531-1730:1.4
	v20060519-0800:1.4
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.06.21.13.57.47;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	ba1467a83da4567;

1.5
date	2006.10.03.14.20.39;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.17.10.24.53;	author dstadnik;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2006.05.17.09.51.29;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.05.12.33.42;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.01.14.19.17;	author dstadnik;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.23.07.16;	author rgronback;	state Exp;
branches;
next	;


desc
@@


1.6
log
@fix copyright years
@
text
@/*
 * Copyright (c) 2005, 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.ui.dashboard;

import java.text.MessageFormat;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Platform;
import org.eclipse.core.runtime.Status;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.jface.resource.ImageRegistry;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.osgi.framework.BundleContext;

/**
 * @@author dstadnik
 */
public class Plugin extends AbstractUIPlugin {

	public static final String GMF_LOGO_IMAGE = "/icons/viewban/logo.png"; //$NON-NLS-1$

	public static final String SYNC_ICON = "/icons/cview16/synced.gif"; //$NON-NLS-1$

	public static final String DGM_ICON = "/icons/full/obj16/GenModelModelFile.gif"; //$NON-NLS-1$

	public static final String GDM_ICON = "/icons/full/obj16/GMFGraphModelFile.gif"; //$NON-NLS-1$

	public static final String DM_ICON = "/icons/full/obj16/EcoreModelFile.gif"; //$NON-NLS-1$

	public static final String TDM_ICON = "/icons/full/obj16/GMFToolModelFile.gif"; //$NON-NLS-1$

	public static final String MM_ICON = "/icons/full/obj16/GMFMapModelFile.gif"; //$NON-NLS-1$

	public static final String GM_ICON = "/icons/full/obj16/GMFGenModelFile.gif"; //$NON-NLS-1$

	private static Plugin plugin;

	private DashboardActionRegistry daRegistry;

	public void start(BundleContext context) throws Exception {
		plugin = this;
		super.start(context);
	}

	public void stop(BundleContext context) throws Exception {
		if (daRegistry != null) {
			daRegistry.dispose();
			daRegistry = null;
		}
		super.stop(context);
		plugin = null;
	}

	public static Plugin getDefault() {
		return plugin;
	}

	protected void initializeImageRegistry(ImageRegistry reg) {
		loadImage(reg, GMF_LOGO_IMAGE);
		loadImage(reg, SYNC_ICON);
		loadImage(reg, DGM_ICON, "org.eclipse.emf.codegen.ecore.ui"); //$NON-NLS-1$
		loadImage(reg, GDM_ICON, "org.eclipse.gmf.graphdef.edit"); //$NON-NLS-1$
		loadImage(reg, DM_ICON, "org.eclipse.emf.ecore.editor"); //$NON-NLS-1$
		loadImage(reg, TDM_ICON, "org.eclipse.gmf.tooldef.edit"); //$NON-NLS-1$
		loadImage(reg, MM_ICON, "org.eclipse.gmf.map.edit"); //$NON-NLS-1$
		loadImage(reg, GM_ICON, "org.eclipse.gmf.codegen.edit"); //$NON-NLS-1$
	}

	protected void loadImage(ImageRegistry registry, String id) {
		loadImage(registry, id, getBundle().getSymbolicName());
	}

	protected void loadImage(ImageRegistry registry, String id, String bundleId) {
		ImageDescriptor descriptor = imageDescriptorFromPlugin(bundleId, id);
		if (descriptor != null) {
			registry.put(id, descriptor);
		}
	}

	public static String getBundleString(String key) {
		return Platform.getResourceBundle(getDefault().getBundle()).getString(key);
	}

	public static String getBundleString(String key, Object[] args) {
		String val = getBundleString(key);
		if (val == null) {
			return key;
		}
		return MessageFormat.format(val, args);
	}

	public DashboardActionRegistry getDashboardActionRegistry() {
		if (daRegistry == null) {
			daRegistry = new DashboardActionRegistry();
		}
		return daRegistry;
	}

	public static IStatus createStatus(int statusCode, String message, Exception ex) {
		return new Status(statusCode, getPluginID(), 0, message, ex);
	}

	public static IStatus createError(String message, Exception ex) {
		return createStatus(IStatus.ERROR, message, ex);
	}

	public static IStatus createWarning(String message) {
		return createStatus(IStatus.WARNING, message, null);
	}

	public static IStatus createInfo(String message) {
		return createStatus(IStatus.INFO, message, null);
	}

	public static String getPluginID() {
		return getDefault().getBundle().getSymbolicName();
	}
}
@


1.5
log
@allow other plugins to contribute actions to the dashboard
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
@


1.4
log
@#137306 nls; complete
@
text
@d47 3
a49 1
	public Plugin() {
d51 1
d55 4
d101 7
@


1.4.2.1
log
@[153901] Updated copyright date from 2005 to 2005, 2006 for those changed in CVS in 2006 (based on Tom/Anthony's script).
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 Borland Software Corporation
@


1.3
log
@#137306 nls; partial
@
text
@d63 6
a68 6
		loadImage(reg, DGM_ICON, "org.eclipse.emf.codegen.ecore.ui");
		loadImage(reg, GDM_ICON, "org.eclipse.gmf.graphdef.edit");
		loadImage(reg, DM_ICON, "org.eclipse.emf.ecore.editor");
		loadImage(reg, TDM_ICON, "org.eclipse.gmf.tooldef.edit");
		loadImage(reg, MM_ICON, "org.eclipse.gmf.map.edit");
		loadImage(reg, GM_ICON, "org.eclipse.gmf.codegen.edit");
@


1.2
log
@#124852 add domain genmodel
@
text
@d29 1
a29 1
	public static final String GMF_LOGO_IMAGE = "/icons/viewban/logo.png";
d31 1
a31 1
	public static final String SYNC_ICON = "/icons/cview16/synced.gif";
d33 1
a33 1
	public static final String DGM_ICON = "/icons/full/obj16/GenModelModelFile.gif";
d35 1
a35 1
	public static final String GDM_ICON = "/icons/full/obj16/GMFGraphModelFile.gif";
d37 1
a37 1
	public static final String DM_ICON = "/icons/full/obj16/EcoreModelFile.gif";
d39 1
a39 1
	public static final String TDM_ICON = "/icons/full/obj16/GMFToolModelFile.gif";
d41 1
a41 1
	public static final String MM_ICON = "/icons/full/obj16/GMFMapModelFile.gif";
d43 1
a43 1
	public static final String GM_ICON = "/icons/full/obj16/GMFGenModelFile.gif";
@


1.1
log
@#129930 moved from oeg.codegen.ui
@
text
@d33 2
d63 1
@

