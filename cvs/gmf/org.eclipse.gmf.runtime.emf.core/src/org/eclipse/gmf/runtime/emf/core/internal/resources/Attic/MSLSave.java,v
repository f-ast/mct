head	1.6;
access;
symbols
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	I20060203-0830:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.4
	I20051217-0925:1.3
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.6
date	2006.02.08.14.52.11;	author ldamus;	state dead;
branches;
next	1.5;

1.5
date	2005.12.23.20.19.04;	author vramaswamy;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.23.14.45.04;	author vramaswamy;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.16.16.11.54;	author vramaswamy;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.25.12;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.48;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[121508] gmf_head cdamus 060208 Refactor MSL using the new transaction API
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.core.internal.resources;

import java.util.List;
import java.util.Map;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.xmi.XMLHelper;
import org.eclipse.emf.ecore.xmi.XMLResource;
import org.eclipse.emf.ecore.xmi.impl.XMISaveImpl;
import org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl;

import org.eclipse.gmf.runtime.emf.core.internal.util.MSLConstants;

/**
 * This class changes the behavior of the default XMISaver so that a ClearCase
 * token is written at the top of the file.
 * 
 * @@author rafikj
 */
public class MSLSave
	extends XMISaveImpl {

	/**
	 * Discards control characters 0x00 - 0x1F except for TAB, CR, and LF, which
	 * are escaped by EMF.
	 * 
	 * @@author khussey
	 * 
	 * @@see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=50403"
	 * @@see "http://greenbytes.de/tech/webdav/rfc3470.html#binary"
	 */
	protected static class Escape
		extends XMLSaveImpl.Escape {

		private static final char[] NOTHING = {};

		public String convert(String input) {
			boolean changed = false;
			int inputLength = input.length();
			grow(inputLength);
			input.getChars(0, inputLength, value, 0);
			int pos = 0;

			while (inputLength-- > 0) {

				switch (value[pos]) {
					case '&':
						pos = replaceChars(pos, AMP, inputLength);
						changed = true;
						break;
					case '<':
						pos = replaceChars(pos, LESS, inputLength);
						changed = true;
						break;
					case '"':
						pos = replaceChars(pos, QUOTE, inputLength);
						changed = true;
						break;
					case '\n':
						pos = replaceChars(pos, LF, inputLength);
						changed = true;
						break;
					case '\r':
						pos = replaceChars(pos, CR, inputLength);
						changed = true;
						break;
					case '\t':
						pos = replaceChars(pos, TAB, inputLength);
						changed = true;
						break;
					default:
						if (value[pos] < 0x20) {
							// these characters are illegal in XML
							pos = replaceChars(pos, NOTHING, inputLength);
							changed = true;
						} else {
							pos++;
						}
						break;
				}
			}

			return changed ? new String(value, 0, pos)
				: input;
		}
	}

	/**
	 * Constructor.
	 */
	public MSLSave(XMLHelper helper) {
		super(helper);
	}

	/**
	 * @@see org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl#init(org.eclipse.emf.ecore.xmi.XMLResource,
	 *      java.util.Map)
	 */
	protected void init(XMLResource resource, Map options) {
		super.init(resource, options);

		if (null != escape) {
			escape = new Escape();
		}
	}

	/**
	 * @@see org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl#writeTopObjects(java.util.List)
	 */
	public Object writeTopObjects(List contents) {

		writeCCToken();
		writeArtifactVersionToken();
		return super.writeTopObjects(contents);
	}

	/**
	 * @@see org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl#writeTopObject(org.eclipse.emf.ecore.EObject)
	 */
	protected Object writeTopObject(EObject top) {

		writeCCToken();
		writeArtifactVersionToken();
		return super.writeTopObject(top);
	}

	private void writeArtifactVersionToken() {
		// TODO The following token will be replaced by a future infrastructure that will
		//  allow client of MSL to specify their application ID and version number for
		//  backward/forward compatibility.
		doc.add("<?RSA version=\"7.0\"?>"); //$NON-NLS-1$
		doc.addLine();
	}

	/**
	 * Write ClearCase token.
	 */
	private void writeCCToken() {
		doc.add("<!--" + MSLConstants.CC_TOKEN + "-->"); //$NON-NLS-1$ //$NON-NLS-2$
		
		doc.addLine();
	}
}@


1.5
log
@[113863], gmf_head,Contributed by cdamus, 051223, Remove the LogicalResource implementation (obsoleted by Cross-Resource Containment in EMF)
@
text
@@


1.4
log
@[121998], gmf_head, vramaswa, 051223, Compiler error using EMF 2.2.0M4
@
text
@d20 1
d32 1
a32 1
	extends LogicalSave {
d124 1
@


1.3
log
@Fixed the gmf.runtime.emf core and tests plugins due to a change in the EMF examples, gmf_head, vramaswa, 051216
@
text
@d58 1
a58 1
						pos = append(pos, AMP, inputLength);
d62 1
a62 1
						pos = append(pos, LESS, inputLength);
d66 1
a66 1
						pos = append(pos, QUOTE, inputLength);
d70 1
a70 1
						pos = append(pos, LF, inputLength);
d74 1
a74 1
						pos = append(pos, CR, inputLength);
d78 1
a78 1
						pos = append(pos, TAB, inputLength);
d84 1
a84 1
							pos = append(pos, NOTHING, inputLength);
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d58 1
a58 1
						pos = replace(pos, AMP, inputLength);
d62 1
a62 1
						pos = replace(pos, LESS, inputLength);
d66 1
a66 1
						pos = replace(pos, QUOTE, inputLength);
d70 1
a70 1
						pos = replace(pos, LF, inputLength);
d74 1
a74 1
						pos = replace(pos, CR, inputLength);
d78 1
a78 1
						pos = replace(pos, TAB, inputLength);
d84 1
a84 1
							pos = replace(pos, NOTHING, inputLength);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

