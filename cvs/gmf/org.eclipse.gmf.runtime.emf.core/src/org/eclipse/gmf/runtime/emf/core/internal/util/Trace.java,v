head	1.4;
access;
symbols
	v20081020-0700:1.4
	v20080722-1827:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080425-1959:1.4
	v20080407-0930:1.4
	v20080404-1111:1.4
	v20080401-1425:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080201-2010:1.4
	v20080201-0201:1.4
	v20080114-2222:1.4
	v20080114-1111:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	RC3_20:1.4
	v20070601-1400:1.4
	v20070330-1300:1.4
	v20070208-1800:1.4
	v20070105-1200:1.3.2.1
	v20070103-0300:1.4
	M4_20:1.4
	v20061218-1500:1.3.2.1
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.3.2.1
	M1_20:1.3
	v20060831-1500:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-0800:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.4
date	2006.10.03.15.05.22;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.08.14.52.12;	author ldamus;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.25.12;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.51;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.09.13.16.46.17;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.emf.core.internal.util;

import org.eclipse.gmf.runtime.emf.core.internal.plugin.EMFCoreDebugOptions;
import org.eclipse.gmf.runtime.emf.core.internal.plugin.EMFCorePlugin;



public class Trace {
	/** Cannot be instantiated. */
	private Trace() {
		super();
	}

	/**
	 * Queries whether the specified trace <code>option</code> is enabled.
	 * 
	 * @@param option a trace option
	 * @@return whether if it is enabled
	 */
	public static boolean isEnabled(String option) {
		return org.eclipse.gmf.runtime.common.core.util.Trace.shouldTrace(
			EMFCorePlugin.getDefault(),
			option);
	}
	
	/**
	 * Traces the specified <code>message</code> under the given
	 * <code>option</code>.
	 * 
	 * @@param option the trace option
	 * @@param message the message to trace
	 * 
	 * @@see #isEnabled(String)
	 */
	public static void trace(String option, String message) {
		org.eclipse.gmf.runtime.common.core.util.Trace.trace(
			EMFCorePlugin.getDefault(),
			option,
			message);
	}
	
	/**
	 * Traces a caught exception.
	 * 
	 * @@param clazz the class that caught the exception
	 * @@param methodName the method in which it was caught
	 * @@param t the exception
	 */
	public static void catching(Class clazz, String methodName, Throwable t) {
		org.eclipse.gmf.runtime.common.core.util.Trace.catching(
			EMFCorePlugin.getDefault(),
			EMFCoreDebugOptions.EXCEPTIONS_CATCHING,
			clazz,
			methodName,
			t);
	}
	
	/**
	 * Traces a thrown exception.
	 * 
	 * @@param clazz the class that is throwing the exception
	 * @@param methodName the method from which it is being thrown
	 * @@param t the exception
	 */
	public static void throwing(Class clazz, String methodName, Throwable t) {
		org.eclipse.gmf.runtime.common.core.util.Trace.throwing(
			EMFCorePlugin.getDefault(),
			EMFCoreDebugOptions.EXCEPTIONS_THROWING,
			clazz,
			methodName,
			t);
	}
}
@


1.3
log
@[121508] gmf_head cdamus 060208 Refactor MSL using the new transaction API
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.3.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d15 3
a17 2
import org.eclipse.gmf.runtime.emf.core.internal.plugin.MSLDebugOptions;
import org.eclipse.gmf.runtime.emf.core.internal.plugin.MSLPlugin;
d34 1
a34 1
			MSLPlugin.getDefault(),
d49 1
a49 1
			MSLPlugin.getDefault(),
d63 2
a64 2
			MSLPlugin.getDefault(),
			MSLDebugOptions.EXCEPTIONS_CATCHING,
d79 2
a80 2
			MSLPlugin.getDefault(),
			MSLDebugOptions.EXCEPTIONS_THROWING,
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

