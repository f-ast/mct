head	1.3;
access;
symbols
	v20081020-0700:1.3
	v20080722-1827:1.3
	v20080716-1600:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.6
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080425-1959:1.3
	v20080407-0930:1.3
	v20080404-1111:1.3
	v20080401-1425:1.3
	v20080222-1200:1.3
	v20080215-1500:1.3
	v20080201-2010:1.3
	v20080201-0201:1.3
	v20080114-2222:1.3
	v20080114-1111:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.4
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070330-1300:1.3
	v20070208-1800:1.3
	v20070105-1200:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061218-1500:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	v20060919-0800:1.3
	M1_20:1.3
	v20060831-1500:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.2
	v20060519-0800:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1;
locks; strict;
comment	@# @;


1.3
date	2006.05.29.18.01.37;	author ldamus;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.23.16.58.02;	author ldamus;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.26.20.14.40;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[144276] gmf_head ldamus 060529 EObjectTester throws NullPointerException if EObject is not in an editing domain
@
text
@/******************************************************************************
 * Copyright (c) 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.core.internal.util;

import org.eclipse.core.expressions.PropertyTester;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.transaction.util.TransactionUtil;

/**
 * Property tester for {@@link EObject}s. Currently supported properties are
 * <dl>
 * <dt>editingDomain</dt>
 * <dd>string-valued property denoting the unique identifier of a
 * <code>TransactionalEditingDomain</code> registered in the
 * {@@link TransactionalEditingDomain.Registry#INSTANCE}.</dd>
 * </dl>
 * 
 * @@author ldamus
 */
public class EObjectTester extends PropertyTester {

	private static final String EDITING_DOMAIN_PROPERTY = "editingDomain"; //$NON-NLS-1$

	public boolean test(Object receiver, String property, Object[] args,
			Object expectedValue) {

		EObject eObject = (EObject) receiver;

		if (property.equals(EDITING_DOMAIN_PROPERTY)) {
			String expectedID = (String) expectedValue;

			if (expectedID != null) {
				TransactionalEditingDomain domain = TransactionUtil.getEditingDomain(eObject);
				
				if (domain != null) {
					return expectedID.equals(domain.getID());
				}
			}
		}

		return false;
	}
}
@


1.2
log
@[143012] gmf_head ldamus 060523  ClientContextManager should compare EditingDomains by ID, but not by "=="
@
text
@d43 5
a47 2
				return expectedID.equals(TransactionUtil.getEditingDomain(
						eObject).getID());
@


1.1
log
@[136760] gmf_head ldamus 060426  ElementTypeRegistry prevents deployment of different applications sharing the same metamodel
@
text
@d40 1
a40 2
			TransactionalEditingDomain expectedDomain = TransactionalEditingDomain.Registry.INSTANCE
					.getEditingDomain((String) expectedValue);
d42 3
a44 3
			if (expectedDomain != null) {
				return expectedDomain == TransactionUtil
						.getEditingDomain(eObject);
@

