head	1.1;
access;
symbols
	v20081020-0700:1.1
	v20080722-1827:1.1
	v20080716-1600:1.1
	v20080716-1642:1.1
	R2_1_maintenance:1.1.0.2
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20080407-0930:1.1
	v20080404-1111:1.1
	v20080401-1425:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.04.01.18.17.27;	author ahunter;	state Exp;
branches;
next	;
commitid	72bb47f27c374567;


desc
@@


1.1
log
@[225031] gmf-head cmcgee 080401 GMF PathmapManager does not allow system pathmap to be set without dirtying resources
@
text
@/******************************************************************************
 * Copyright (c) 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.core.resources;

import java.util.Map;

import org.eclipse.core.runtime.IStatus;

public interface IPathmapManager2 extends IPathmapManager {
	/**
	 * Adds a map of file path variables (not folders).
	 * 
	 * @@param settings A map from variables(String) to values(String).
	 * 
	 * @@return a status indicating success (OK) or failure (ERROR) to set the
	 *     path variable.  In case of error, the status message provides a
	 *     user-friendly explanation of the reason
	 */
	public IStatus addFilePathVariables(Map settings, boolean dirtyResources);
	
	/**
	 * Sets the value of a path variable to a file (not a folder).
	 * 
	 * @@param name the path variable name
	 * @@param value the path variable value pointing to a specific file (not a folder)
	 * 
	 * @@return a status indicating success (OK) or failure (ERROR) to set the
	 *     path variable.  In case of error, the status message provides a
	 *     user-friendly explanation of the reason
	 */
	public IStatus addFilePathVariable(String name, String value, boolean dirtyResources);
	
	/**
	 * Adds a map of folder path variables (not files).
	 * 
	 * @@param settings A map from variables(String) to values(String).
	 * 
	 * @@return a status indicating success (OK) or failure (ERROR) to set the
	 *     path variable.  In case of error, the status message provides a
	 *     user-friendly explanation of the reason
	 */
	public IStatus addFolderPathVariables(Map settings, boolean dirtyResources);
	
	/**
	 * Sets the value of a path variable to a folder (not a file).
	 * 
	 * @@param name the path variable name
	 * @@param value the path variable value pointing to a specific folder (not a file)
	 * 
	 * @@return a status indicating success (OK) or failure (ERROR) to set the
	 *     path variable.  In case of error, the status message provides a
	 *     user-friendly explanation of the reason
	 */
	public IStatus addFolderPathVariable(String name, String value, boolean dirtyResources);
}
@
