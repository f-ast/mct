head	1.3;
access;
symbols
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.3
date	2006.02.08.14.52.12;	author ldamus;	state dead;
branches;
next	1.2;

1.2
date	2005.09.12.21.25.12;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.50;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[121508] gmf_head cdamus 060208 Refactor MSL using the new transaction API
@
text
@/******************************************************************************
 * Copyright (c) 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.core;

import java.util.Set;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.emf.ecore.EObject;

/**
 * An extension of the Eclipse core status interface that provides additional
 * information about the violation of a constraint during the validation of a model.
 * <p>
 * In general, validation status objects will not indicate an
 * {@@link IStatus#isOK() OK}status, because they describe constraint
 * violations. Moreover, validation status objects are never multi-statuses.
 * </p>
 * <p>
 * API clients should <b>not </b> implement this interface.
 * </p>
 */
public interface IValidationStatus
	extends IStatus {

	/**
	 * Obtains the model element on which a constraint was evaluated, that was
	 * violated (or not) according to my {@@link IStatus#getSeverity() severity}.
	 * In the case of a constraint violation, my
	 * {@@link IStatus#getMessage() message}indicates the nature of the problem.
	 * 
	 * @@return the target of a constraint evaluation
	 */
	EObject getTarget();

	/**
	 * In the case of a constraint violation, obtains the set of related
	 * elements that contributed to the problem. This set always includes,
	 * minimally, the {@@link #getTarget() target}of the constraint evaluation.
	 * 
	 * @@return the set of elements that caused the problem, or an empty set in
	 *         case of a successful constraint evaluation
	 */
	Set getRelatedObjects();

	/**
	 * The <code>IValidationStatus</code> interface redefines this method to
	 * always return <code>false</code>.
	 * 
	 * @@return <code>false</code>
	 */
	boolean isMultiStatus();

	/**
	 * The <code>IValidationStatus</code> interface redefines this method to
	 * always return an empty array of child statuses.
	 * 
	 * @@return an empty array of statuses
	 */
	IStatus[] getChildren();

	/**
	 * The rule property defined in the marker resolution extension
	 * 
	 * @@return The id for the marker resolution extension
	 */
	String getRuleID();
}@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

