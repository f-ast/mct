head	1.3;
access;
symbols
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.3
date	2006.02.08.14.52.11;	author ldamus;	state dead;
branches;
next	1.2;

1.2
date	2005.09.12.21.25.12;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.40;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[121508] gmf_head cdamus 060208 Refactor MSL using the new transaction API
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.core.util;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

/**
 * Enumeration of the type-conformance relationships between
 * {@@link org.eclipse.emf.ecore.EClass}es in an EMF metamodel.
 * 
 * @@author rafikj
 * 
 * @@see EObjectContainmentUtil
 */
final class RelationKind
	extends AbstractEnumerator {

	private static int nextOrdinal = 0;

	/**
	 * classes are of same type.
	 */
	public static final RelationKind SAME_TYPE = new RelationKind("Same Type"); //$NON-NLS-1$

	/**
	 * one class is a base-class of the other but not equal.
	 */
	public static final RelationKind STRICT_BASETYPE = new RelationKind(
		"Strict Basetype"); //$NON-NLS-1$

	/**
	 * one class is a sub-class of the other but not equal.
	 */
	public static final RelationKind STRICT_SUBTYPE = new RelationKind(
		"Strict Subtype"); //$NON-NLS-1$

	/**
	 * classes are unrelated.
	 */
	public static final RelationKind UNRELATED_TYPE = new RelationKind(
		"Unrelated Type"); //$NON-NLS-1$

	private static final RelationKind[] VALUES = {SAME_TYPE, STRICT_BASETYPE,
		STRICT_SUBTYPE, UNRELATED_TYPE};

	private RelationKind(String name, int ordinal) {
		super(ordinal, name);
	}

	private RelationKind(String name) {
		this(name, nextOrdinal++);
	}

	/**
	 * Gets the list of all possible values.
	 */
	public static List getValues() {
		return Collections.unmodifiableList(Arrays.asList(VALUES));
	}
}@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

