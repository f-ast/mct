head	1.3;
access;
symbols
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	I20060428-1300:1.2
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1;
locks; strict;
comment	@# @;


1.3
date	2006.05.02.14.11.54;	author vramaswamy;	state dead;
branches;
next	1.2;

1.2
date	2006.04.25.12.48.26;	author vramaswamy;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.08.14.52.11;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[138363], gmf_head, contributed  by cdamus, 060502, Remove deprecated internal API
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.core.internal.resources;

import org.eclipse.emf.ecore.xmi.XMLHelper;
import org.eclipse.emf.ecore.xmi.impl.SAXWrapper;
import org.xml.sax.helpers.DefaultHandler;

/**
 * This class changes the behavior of the default XMILoader so that
 * UnresolvedReferenceExceptions are not thrown back.
 * 
 * @@author rafikj
 * 
 * @@deprecated Use the {@@link org.eclipse.gmf.runtime.emf.core.resources.GMFLoad}
 *     class, instead
 */
public class GMFLoad
	extends org.eclipse.gmf.runtime.emf.core.resources.GMFLoad {

	/**
	 * Constructor.
	 */
	public GMFLoad(XMLHelper helper) {
		super(helper);
	}

	/**
	 * @@see org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl#makeDefaultHandler()
	 */
	protected DefaultHandler makeDefaultHandler() {
		return new SAXWrapper(new GMFHandler(resource, helper, options));
	}
}@


1.2
log
@[137063], gmf_head, contributed  by cdamus, 060425, GMFResource's abort on error load option is internal API
@
text
@@


1.1
log
@[121508] gmf_head cdamus 060208 Refactor MSL using the new transaction API
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
a13 6
import java.io.IOException;
import java.io.InputStream;
import java.util.Map;

import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.xmi.UnresolvedReferenceException;
a14 1
import org.eclipse.emf.ecore.xmi.XMLResource;
a15 2
import org.eclipse.emf.ecore.xmi.impl.XMILoadImpl;
import org.eclipse.gmf.runtime.emf.core.internal.exceptions.AbortResourceLoadException;
d23 3
d28 1
a28 1
	extends XMILoadImpl {
a37 19
	 * @@see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource,
	 *      java.io.InputStream, java.util.Map)
	 */
	public void load(XMLResource r, InputStream s, Map o)
		throws IOException {

		try {

			super.load(r, s, o);

		} catch (Resource.IOWrappedException e) {
			if (!(e.getWrappedException() instanceof UnresolvedReferenceException))
				throw e;
		} catch (AbortResourceLoadException arle) {
			throw new Resource.IOWrappedException((Exception)arle.getCause());
		}
	}

	/**
@

