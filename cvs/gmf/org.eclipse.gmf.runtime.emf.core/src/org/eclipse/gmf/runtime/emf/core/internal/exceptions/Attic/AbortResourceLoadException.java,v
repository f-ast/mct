head	1.4;
access;
symbols
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	I20060428-1300:1.3
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1;
locks; strict;
comment	@# @;


1.4
date	2006.05.02.14.11.55;	author vramaswamy;	state dead;
branches;
next	1.3;

1.3
date	2006.04.25.12.48.27;	author vramaswamy;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.08.14.52.13;	author ldamus;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.21.19.10.19;	author vramaswamy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[138363], gmf_head, contributed  by cdamus, 060502, Remove deprecated internal API
@
text
@/******************************************************************************
 * Copyright (c) 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.core.internal.exceptions;

/**
 * This exception is intended to be thrown during Resource load when an
 * error occurs. This RuntimeException wrapper is required in order to
 * abort loading at any time.
 * 
 * @@author Christian Vogt (cvogt)
 * 
 * @@deprecated Use the {@@link org.eclipse.gmf.runtime.emf.core.resources.AbortResourceLoadException}
 *     exception, instead.
 */
public class AbortResourceLoadException extends org.eclipse.gmf.runtime.emf.core.resources.AbortResourceLoadException {

	private static final long serialVersionUID = 1317448650831196205L;

	/**
	 * Initializes me without any details.
	 */
	public AbortResourceLoadException() {
		super();
	}

	/**
	 * Initializes me with a useful message.
	 * 
	 * @@param message
	 *            a message
	 */
	public AbortResourceLoadException(String message) {
		super(message);
	}

	/**
	 * Initializes me with a cause.
	 * 
	 * @@param cause
	 *            the cause of this exception.
	 */
	public AbortResourceLoadException(Throwable cause) {
		super(cause);
	}
}
@


1.3
log
@[137063], gmf_head, contributed  by cdamus, 060425, GMFResource's abort on error load option is internal API
@
text
@@


1.2
log
@[121508] gmf_head cdamus 060208 Refactor MSL using the new transaction API
@
text
@d20 3
d24 3
a26 1
public class AbortResourceLoadException extends RuntimeException {
d52 1
a52 2
		super(null == cause ? null
			: cause.toString(), cause);
@


1.1
log
@[115704], gmf_head,Contributed by cvogt, 060121, The performance of loading MSL resources with errors could be significantly improved
@
text
@a13 2
import org.eclipse.gmf.runtime.emf.core.exceptions.MSLRuntimeException;

d21 1
a21 1
public class AbortResourceLoadException extends MSLRuntimeException {
@

