head	1.5;
access;
symbols
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.5
date	2006.02.08.14.52.14;	author ldamus;	state dead;
branches;
next	1.4;

1.4
date	2005.12.23.20.19.04;	author vramaswamy;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.22.14.08.17;	author vramaswamy;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.14.18.22.20;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.48;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[121508] gmf_head cdamus 060208 Refactor MSL using the new transaction API
@
text
@<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.gmf.runtime.emf.core">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.gmf.runtime.emf.core" id="resourcePolicies" name="Logical Resource Policies"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
Extension point for registration of logical resource management policies.
&lt;/p&gt;&lt;p&gt;
A policy applies certain metamodel- or application-specific constraints on the management of logical resources.  The policy implements a callback interface defining hooks for these constraints and for insertion of additional behaviour.
&lt;/p&gt;&lt;p&gt;
This extension point also allows metamodel providers to define custom &lt;code&gt;EFactory&lt;/code&gt; implementations to support automatic loading separate elements.  The custom factory creates elements that use special containment lists that automatically load unloaded children.
&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="policy" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="efactory" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="policy">
      <annotation>
         <appInfo>
            <meta.element deprecated="true"/>
         </appInfo>
         <documentation>
            A policy applies certain metamodel- or application-specific constraints on the management of logical resources.  The policy implements a callback interface defining hooks for these constraints and for insertion of additional behaviour.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="epackage" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Name of a class implementing the &lt;code&gt;ILogicalResourcePolicy&lt;/code&gt; interface that provides the call-back hooks for management of logical resources, for one or more EMF metamodels.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.gmf.runtime.emf.core.resources.ILogicalResourcePolicy"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="efactory">
      <annotation>
         <appInfo>
            <meta.element deprecated="true"/>
         </appInfo>
         <documentation>
            A custom &lt;code&gt;EFactory&lt;/code&gt; implementation that the logical resource may use to create model elements that will automatically load their children.  This is commonly done by defining subclasses of the metamodel&apos;s basic &quot;Impl&quot; classes that substitute special containment lists for the default implementations.  These containment lists are defined in the &lt;code&gt;org.eclipse.gmf.runtime.emf.core.util&lt;/code&gt; package.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="nsURI" type="string" use="required">
            <annotation>
               <documentation>
                  Namespace URI identifying the metamodel (&lt;code&gt;EPackage&lt;/code&gt;) for which a logical resource &lt;code&gt;EFactory&lt;/code&gt; is provided.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Name of a class implementing the &lt;code&gt;EFactory&lt;/code&gt; interface that the logical resource should use to create unloaded elements.  This factory implementation is only used for such elements, so it could be combined with a policy to restrict the number of &lt;code&gt;EClass&lt;/code&gt;es that it supports.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.emf.ecore.EFactory"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="epackage">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="nsURI"/>
         </appInfo>
         <documentation>
            Specifies an EMF metamodel (&lt;code&gt;EPackage&lt;/code&gt;) for which a logical resource policy provides support.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="nsURI" type="string" use="required">
            <annotation>
               <documentation>
                  Namespace URI identifying the &lt;code&gt;EPackage&lt;/code&gt;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         7.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         An example extension for the EXT Library example metamodel, defining both a resource policy and a factory for auto-loading elements, looks like:

&lt;pre&gt;
  &lt;extension
        point=&quot;org.eclipse.gmf.runtime.emf.core.resourcePolicies&quot;&gt;
     
     &lt;policy
           class=&quot;org.eclipse.gmf.examples.runtime.emf.resources.LibraryResourcePolicy&quot;&gt;
        &lt;epackage
              nsURI=&quot;http:///org/eclipse/emf/examples/library/extlibrary.ecore/1.0.0&quot;/&gt;
     &lt;/policy&gt;
     
     &lt;efactory
            class=&quot;org.eclipse.gmf.examples.runtime.emf.resources.LoadingEXTLibraryFactoryImpl&quot;
            nsURI=&quot;http:///org/eclipse/emf/examples/library/extlibrary.ecore/1.0.0&quot;/&gt;
  &lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Logical resource policies must implement the
&lt;code&gt;&lt;a href=&quot;../api/common/com/ibm/xtools/emf/msl/core/resources/ILogicalResourcePolicy.html&quot;&gt;ILogicalResourcePolicy&lt;/a&gt;&lt;/code&gt;
interface.  They are invoked by the MSL during operations on
&lt;code&gt;&lt;a href=&quot;../api/common/com/ibm/xtools/emf/msl/core/resources/ILogicalResource.html&quot;&gt;ILogicalResource&lt;/a&gt;&lt;/code&gt;s.
See also the
&lt;code&gt;&lt;a href=&quot;../api/common/com/ibm/xtools/emf/msl/core/resources/AbstractLogicalResourcePolicy.html&quot;&gt;AbstractLogicalResourcePolicy&lt;/a&gt;&lt;/code&gt;
class which it is recommended to extend when implementing a policy.
&lt;p&gt;
The &lt;code&gt;EFactory&lt;/code&gt; registered on this extension point can create &lt;code&gt;EClass&lt;/code&gt; implementations that use the special containment lists defined in the &lt;code&gt;&lt;a href=&quot;../api/common/com/ibm/xtools/emf/msl/core/util/package.html&quot;&gt;org.eclipse.gmf.runtime.emf.core.util&lt;/a&gt;&lt;/code&gt; package instead of the default EMF implementations to get auto-loading behaviour.
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2005  IBM Corporation and others.&lt;br&gt;
 All rights reserved. This program and the accompanying materials 
 are made available under the terms of the Eclipse Public License v1.0 
 which accompanies this distribution, and is available at 
 &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
@


1.4
log
@[113863], gmf_head,Contributed by cdamus, 051223, Remove the LogicalResource implementation (obsoleted by Cross-Resource Containment in EMF)
@
text
@@


1.3
log
@Resolve Bugzilla 109734 The RMPLibrary Metamodel Should Be Refactored September 22nd, 2005
@
text
@d54 3
d80 3
d194 5
a198 6
        Copyright (c) 2005  IBM Corporation and others.&lt;br&gt;
	All rights reserved. This program and the accompanying materials 
	are made available under the terms of the Eclipse Public License v1.0 
	which accompanies this distribution, and is available at 
	&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;

@


1.2
log
@Bugzilla 109527 gmf_head tmacdoug 050914 - GMF runtime and EMFT copyrights in exsd shema files need updating
@
text
@d136 1
a136 1
         An example extension for the RMP Library example metamodel, defining both a resource policy and a factory for auto-loading elements, looks like:
d145 1
a145 1
              nsURI=&quot;http:///com/ibm/xtools/emf/metamodel/example/pde/rmplibrary.ecore/1.0.0&quot;/&gt;
d149 2
a150 2
            class=&quot;org.eclipse.gmf.examples.runtime.emf.resources.LoadingRMPLibraryFactoryImpl&quot;
            nsURI=&quot;http:///com/ibm/xtools/emf/metamodel/example/pde/rmplibrary.ecore/1.0.0&quot;/&gt;
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d188 6
a193 1
         (c) Copyright 2005 IBM Corporation. All Rights Reserved.
@

