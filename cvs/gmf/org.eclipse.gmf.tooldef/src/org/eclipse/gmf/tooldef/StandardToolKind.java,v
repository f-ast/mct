head	1.2;
access;
symbols
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080417-1610:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070330-1300:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	M1_20:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.03.14.12.59.38;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	118445f7f1b74567;

1.1
date	2006.01.09.20.28.41;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.tooldef;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Standard Tool Kind</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.tooldef.GMFToolPackage#getStandardToolKind()
 * @@model
 * @@generated
 */
public enum StandardToolKind implements Enumerator {
	/**
	 * The '<em><b>SELECT</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #SELECT
	 * @@generated
	 * @@ordered
	 */
	SELECT_LITERAL(0, "SELECT", "SELECT"),
	/**
	 * The '<em><b>SELECT PAN</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #SELECT_PAN
	 * @@generated
	 * @@ordered
	 */
	SELECT_PAN_LITERAL(1, "SELECT_PAN", "SELECT_PAN"),
	/**
	 * The '<em><b>MARQUEE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #MARQUEE
	 * @@generated
	 * @@ordered
	 */
	MARQUEE_LITERAL(2, "MARQUEE", "MARQUEE"),
	/**
	 * The '<em><b>ZOOM PAN</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_PAN
	 * @@generated
	 * @@ordered
	 */
	ZOOM_PAN_LITERAL(3, "ZOOM_PAN", "ZOOM_PAN"),
	/**
	 * The '<em><b>ZOOM IN</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_IN
	 * @@generated
	 * @@ordered
	 */
	ZOOM_IN_LITERAL(4, "ZOOM_IN", "ZOOM_IN"),
	/**
	 * The '<em><b>ZOOM OUT</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_OUT
	 * @@generated
	 * @@ordered
	 */
	ZOOM_OUT_LITERAL(5, "ZOOM_OUT", "ZOOM_OUT");
	/**
	 * The '<em><b>SELECT</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>SELECT</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #SELECT_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int SELECT = 0;

	/**
	 * The '<em><b>SELECT PAN</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>SELECT PAN</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #SELECT_PAN_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int SELECT_PAN = 1;

	/**
	 * The '<em><b>MARQUEE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>MARQUEE</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #MARQUEE_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int MARQUEE = 2;

	/**
	 * The '<em><b>ZOOM PAN</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>ZOOM PAN</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_PAN_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int ZOOM_PAN = 3;

	/**
	 * The '<em><b>ZOOM IN</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>ZOOM IN</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_IN_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int ZOOM_IN = 4;

	/**
	 * The '<em><b>ZOOM OUT</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>ZOOM OUT</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_OUT_LITERAL
	 * @@model
	 * @@generated
	 * @@ordered
	 */
	public static final int ZOOM_OUT = 5;

	/**
	 * An array of all the '<em><b>Standard Tool Kind</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private static final StandardToolKind[] VALUES_ARRAY = new StandardToolKind[] { SELECT_LITERAL, SELECT_PAN_LITERAL, MARQUEE_LITERAL, ZOOM_PAN_LITERAL, ZOOM_IN_LITERAL, ZOOM_OUT_LITERAL, };

	/**
	 * A public read-only list of all the '<em><b>Standard Tool Kind</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static final List<StandardToolKind> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Standard Tool Kind</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static StandardToolKind get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			StandardToolKind result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Standard Tool Kind</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static StandardToolKind getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			StandardToolKind result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Standard Tool Kind</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public static StandardToolKind get(int value) {
		switch (value) {
		case SELECT:
			return SELECT_LITERAL;
		case SELECT_PAN:
			return SELECT_PAN_LITERAL;
		case MARQUEE:
			return MARQUEE_LITERAL;
		case ZOOM_PAN:
			return ZOOM_PAN_LITERAL;
		case ZOOM_IN:
			return ZOOM_IN_LITERAL;
		case ZOOM_OUT:
			return ZOOM_OUT_LITERAL;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private StandardToolKind(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getValue() {
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getLiteral() {
		return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		return literal;
	}
}
@


1.1
log
@#114197 tooling definition is out for real world.
@
text
@d13 1
a13 1
import org.eclipse.emf.common.util.AbstractEnumerator;
d24 55
a78 1
public final class StandardToolKind extends AbstractEnumerator {
a169 60
	 * The '<em><b>SELECT</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #SELECT
	 * @@generated
	 * @@ordered
	 */
	public static final StandardToolKind SELECT_LITERAL = new StandardToolKind(SELECT, "SELECT", "SELECT");

	/**
	 * The '<em><b>SELECT PAN</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #SELECT_PAN
	 * @@generated
	 * @@ordered
	 */
	public static final StandardToolKind SELECT_PAN_LITERAL = new StandardToolKind(SELECT_PAN, "SELECT_PAN", "SELECT_PAN");

	/**
	 * The '<em><b>MARQUEE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #MARQUEE
	 * @@generated
	 * @@ordered
	 */
	public static final StandardToolKind MARQUEE_LITERAL = new StandardToolKind(MARQUEE, "MARQUEE", "MARQUEE");

	/**
	 * The '<em><b>ZOOM PAN</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_PAN
	 * @@generated
	 * @@ordered
	 */
	public static final StandardToolKind ZOOM_PAN_LITERAL = new StandardToolKind(ZOOM_PAN, "ZOOM_PAN", "ZOOM_PAN");

	/**
	 * The '<em><b>ZOOM IN</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_IN
	 * @@generated
	 * @@ordered
	 */
	public static final StandardToolKind ZOOM_IN_LITERAL = new StandardToolKind(ZOOM_IN, "ZOOM_IN", "ZOOM_IN");

	/**
	 * The '<em><b>ZOOM OUT</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #ZOOM_OUT
	 * @@generated
	 * @@ordered
	 */
	public static final StandardToolKind ZOOM_OUT_LITERAL = new StandardToolKind(ZOOM_OUT, "ZOOM_OUT", "ZOOM_OUT");

	/**
d183 1
a183 1
	public static final List VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));
d242 21
d269 30
a298 1
		super(value, name, literal);
d301 11
a311 1
} //StandardToolKind
@

