head	1.2;
access;
symbols
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080417-1610:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070330-1300:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	M1_20:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.03.14.12.59.38;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	118445f7f1b74567;

1.1
date	2006.01.09.20.28.41;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.tooldef.util;

import java.util.List;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.tooldef.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.tooldef.GMFToolPackage
 * @@generated
 */
public class GMFToolSwitch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected static GMFToolPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GMFToolSwitch() {
		if (modelPackage == null) {
			modelPackage = GMFToolPackage.eINSTANCE;
		}
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
	public T doSwitch(EObject theEObject) {
		return doSwitch(theEObject.eClass(), theEObject);
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
	protected T doSwitch(EClass theEClass, EObject theEObject) {
		if (theEClass.eContainer() == modelPackage) {
			return doSwitch(theEClass.getClassifierID(), theEObject);
		} else {
			List<EClass> eSuperTypes = theEClass.getESuperTypes();
			return eSuperTypes.isEmpty() ? defaultCase(theEObject) : doSwitch(eSuperTypes.get(0), theEObject);
		}
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
	protected T doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
		case GMFToolPackage.TOOL_REGISTRY: {
			ToolRegistry toolRegistry = (ToolRegistry) theEObject;
			T result = caseToolRegistry(toolRegistry);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.ABSTRACT_TOOL: {
			AbstractTool abstractTool = (AbstractTool) theEObject;
			T result = caseAbstractTool(abstractTool);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.TOOL_CONTAINER: {
			ToolContainer toolContainer = (ToolContainer) theEObject;
			T result = caseToolContainer(toolContainer);
			if (result == null)
				result = caseAbstractTool(toolContainer);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.PALETTE_SEPARATOR: {
			PaletteSeparator paletteSeparator = (PaletteSeparator) theEObject;
			T result = casePaletteSeparator(paletteSeparator);
			if (result == null)
				result = caseAbstractTool(paletteSeparator);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.TOOL_GROUP: {
			ToolGroup toolGroup = (ToolGroup) theEObject;
			T result = caseToolGroup(toolGroup);
			if (result == null)
				result = caseToolContainer(toolGroup);
			if (result == null)
				result = caseAbstractTool(toolGroup);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.PALETTE: {
			Palette palette = (Palette) theEObject;
			T result = casePalette(palette);
			if (result == null)
				result = caseToolContainer(palette);
			if (result == null)
				result = caseAbstractTool(palette);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.STANDARD_TOOL: {
			StandardTool standardTool = (StandardTool) theEObject;
			T result = caseStandardTool(standardTool);
			if (result == null)
				result = caseAbstractTool(standardTool);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.CREATION_TOOL: {
			CreationTool creationTool = (CreationTool) theEObject;
			T result = caseCreationTool(creationTool);
			if (result == null)
				result = caseAbstractTool(creationTool);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.GENERIC_TOOL: {
			GenericTool genericTool = (GenericTool) theEObject;
			T result = caseGenericTool(genericTool);
			if (result == null)
				result = caseAbstractTool(genericTool);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.ITEM_BASE: {
			ItemBase itemBase = (ItemBase) theEObject;
			T result = caseItemBase(itemBase);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.MENU: {
			Menu menu = (Menu) theEObject;
			T result = caseMenu(menu);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.SEPARATOR: {
			Separator separator = (Separator) theEObject;
			T result = caseSeparator(separator);
			if (result == null)
				result = caseItemBase(separator);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.PREDEFINED_ITEM: {
			PredefinedItem predefinedItem = (PredefinedItem) theEObject;
			T result = casePredefinedItem(predefinedItem);
			if (result == null)
				result = caseItemBase(predefinedItem);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.PREDEFINED_MENU: {
			PredefinedMenu predefinedMenu = (PredefinedMenu) theEObject;
			T result = casePredefinedMenu(predefinedMenu);
			if (result == null)
				result = caseMenu(predefinedMenu);
			if (result == null)
				result = casePredefinedItem(predefinedMenu);
			if (result == null)
				result = caseItemBase(predefinedMenu);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.CONTRIBUTION_ITEM: {
			ContributionItem contributionItem = (ContributionItem) theEObject;
			T result = caseContributionItem(contributionItem);
			if (result == null)
				result = caseItemBase(contributionItem);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.MENU_ACTION: {
			MenuAction menuAction = (MenuAction) theEObject;
			T result = caseMenuAction(menuAction);
			if (result == null)
				result = caseContributionItem(menuAction);
			if (result == null)
				result = caseItemBase(menuAction);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.ITEM_REF: {
			ItemRef itemRef = (ItemRef) theEObject;
			T result = caseItemRef(itemRef);
			if (result == null)
				result = caseItemBase(itemRef);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.CONTEXT_MENU: {
			ContextMenu contextMenu = (ContextMenu) theEObject;
			T result = caseContextMenu(contextMenu);
			if (result == null)
				result = caseMenu(contextMenu);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.POPUP_MENU: {
			PopupMenu popupMenu = (PopupMenu) theEObject;
			T result = casePopupMenu(popupMenu);
			if (result == null)
				result = caseMenu(popupMenu);
			if (result == null)
				result = caseContributionItem(popupMenu);
			if (result == null)
				result = caseItemBase(popupMenu);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.MAIN_MENU: {
			MainMenu mainMenu = (MainMenu) theEObject;
			T result = caseMainMenu(mainMenu);
			if (result == null)
				result = caseMenu(mainMenu);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.TOOLBAR: {
			Toolbar toolbar = (Toolbar) theEObject;
			T result = caseToolbar(toolbar);
			if (result == null)
				result = caseMenu(toolbar);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.IMAGE: {
			Image image = (Image) theEObject;
			T result = caseImage(image);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.DEFAULT_IMAGE: {
			DefaultImage defaultImage = (DefaultImage) theEObject;
			T result = caseDefaultImage(defaultImage);
			if (result == null)
				result = caseImage(defaultImage);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.BUNDLE_IMAGE: {
			BundleImage bundleImage = (BundleImage) theEObject;
			T result = caseBundleImage(bundleImage);
			if (result == null)
				result = caseImage(bundleImage);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.STYLE_SELECTOR: {
			StyleSelector styleSelector = (StyleSelector) theEObject;
			T result = caseStyleSelector(styleSelector);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case GMFToolPackage.GENERIC_STYLE_SELECTOR: {
			GenericStyleSelector genericStyleSelector = (GenericStyleSelector) theEObject;
			T result = caseGenericStyleSelector(genericStyleSelector);
			if (result == null)
				result = caseStyleSelector(genericStyleSelector);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		default:
			return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Tool Registry</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Tool Registry</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseToolRegistry(ToolRegistry object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Abstract Tool</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Abstract Tool</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseAbstractTool(AbstractTool object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Tool Container</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Tool Container</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseToolContainer(ToolContainer object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Palette Separator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Palette Separator</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T casePaletteSeparator(PaletteSeparator object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Tool Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Tool Group</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseToolGroup(ToolGroup object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Palette</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Palette</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T casePalette(Palette object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Standard Tool</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Standard Tool</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseStandardTool(StandardTool object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Creation Tool</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Creation Tool</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseCreationTool(CreationTool object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Generic Tool</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Generic Tool</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseGenericTool(GenericTool object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Item Base</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Item Base</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseItemBase(ItemBase object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Menu</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Menu</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseMenu(Menu object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Separator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Separator</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseSeparator(Separator object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Predefined Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Predefined Item</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T casePredefinedItem(PredefinedItem object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Predefined Menu</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Predefined Menu</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T casePredefinedMenu(PredefinedMenu object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Contribution Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Contribution Item</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseContributionItem(ContributionItem object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Menu Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Menu Action</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseMenuAction(MenuAction object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Item Ref</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Item Ref</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseItemRef(ItemRef object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Context Menu</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Context Menu</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseContextMenu(ContextMenu object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Popup Menu</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Popup Menu</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T casePopupMenu(PopupMenu object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Main Menu</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Main Menu</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseMainMenu(MainMenu object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Toolbar</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Toolbar</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseToolbar(Toolbar object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Image</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Image</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseImage(Image object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Default Image</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Default Image</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseDefaultImage(DefaultImage object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Bundle Image</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Bundle Image</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseBundleImage(BundleImage object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Style Selector</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Style Selector</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseStyleSelector(StyleSelector object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Generic Style Selector</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Generic Style Selector</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public T caseGenericStyleSelector(GenericStyleSelector object) {
		return null;
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>EObject</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @@generated
	 */
	public T defaultCase(EObject object) {
		return null;
	}

} //GMFToolSwitch
@


1.1
log
@#114197 tooling definition is out for real world.
@
text
@d29 1
a29 1
public class GMFToolSwitch {
d57 1
a57 1
	public Object doSwitch(EObject theEObject) {
d68 1
a68 1
	protected Object doSwitch(EClass theEClass, EObject theEObject) {
d72 2
a73 2
			List eSuperTypes = theEClass.getESuperTypes();
			return eSuperTypes.isEmpty() ? defaultCase(theEObject) : doSwitch((EClass) eSuperTypes.get(0), theEObject);
d84 1
a84 1
	protected Object doSwitch(int classifierID, EObject theEObject) {
d88 1
a88 1
			Object result = caseToolRegistry(toolRegistry);
d95 1
a95 1
			Object result = caseAbstractTool(abstractTool);
d102 1
a102 1
			Object result = caseToolContainer(toolContainer);
d111 1
a111 1
			Object result = casePaletteSeparator(paletteSeparator);
d120 1
a120 1
			Object result = caseToolGroup(toolGroup);
d131 1
a131 1
			Object result = casePalette(palette);
d142 1
a142 1
			Object result = caseStandardTool(standardTool);
d151 1
a151 1
			Object result = caseCreationTool(creationTool);
d160 1
a160 1
			Object result = caseGenericTool(genericTool);
d169 1
a169 1
			Object result = caseItemBase(itemBase);
d176 1
a176 1
			Object result = caseMenu(menu);
d183 1
a183 1
			Object result = caseSeparator(separator);
d192 1
a192 1
			Object result = casePredefinedItem(predefinedItem);
d201 1
a201 1
			Object result = casePredefinedMenu(predefinedMenu);
d214 1
a214 1
			Object result = caseContributionItem(contributionItem);
d223 1
a223 1
			Object result = caseMenuAction(menuAction);
d234 1
a234 1
			Object result = caseItemRef(itemRef);
d243 1
a243 1
			Object result = caseContextMenu(contextMenu);
d252 1
a252 1
			Object result = casePopupMenu(popupMenu);
d265 1
a265 1
			Object result = caseMainMenu(mainMenu);
d274 1
a274 1
			Object result = caseToolbar(toolbar);
d283 1
a283 1
			Object result = caseImage(image);
d290 1
a290 1
			Object result = caseDefaultImage(defaultImage);
d299 1
a299 1
			Object result = caseBundleImage(bundleImage);
d308 1
a308 1
			Object result = caseStyleSelector(styleSelector);
d315 1
a315 1
			Object result = caseGenericStyleSelector(genericStyleSelector);
d338 1
a338 1
	public Object caseToolRegistry(ToolRegistry object) {
d353 1
a353 1
	public Object caseAbstractTool(AbstractTool object) {
d368 1
a368 1
	public Object caseToolContainer(ToolContainer object) {
d383 1
a383 1
	public Object casePaletteSeparator(PaletteSeparator object) {
d398 1
a398 1
	public Object caseToolGroup(ToolGroup object) {
d413 1
a413 1
	public Object casePalette(Palette object) {
d428 1
a428 1
	public Object caseStandardTool(StandardTool object) {
d443 1
a443 1
	public Object caseCreationTool(CreationTool object) {
d458 1
a458 1
	public Object caseGenericTool(GenericTool object) {
d473 1
a473 1
	public Object caseItemBase(ItemBase object) {
d488 1
a488 1
	public Object caseMenu(Menu object) {
d503 1
a503 1
	public Object caseSeparator(Separator object) {
d518 1
a518 1
	public Object casePredefinedItem(PredefinedItem object) {
d533 1
a533 1
	public Object casePredefinedMenu(PredefinedMenu object) {
d548 1
a548 1
	public Object caseContributionItem(ContributionItem object) {
d563 1
a563 1
	public Object caseMenuAction(MenuAction object) {
d578 1
a578 1
	public Object caseItemRef(ItemRef object) {
d593 1
a593 1
	public Object caseContextMenu(ContextMenu object) {
d608 1
a608 1
	public Object casePopupMenu(PopupMenu object) {
d623 1
a623 1
	public Object caseMainMenu(MainMenu object) {
d638 1
a638 1
	public Object caseToolbar(Toolbar object) {
d653 1
a653 1
	public Object caseImage(Image object) {
d668 1
a668 1
	public Object caseDefaultImage(DefaultImage object) {
d683 1
a683 1
	public Object caseBundleImage(BundleImage object) {
d698 1
a698 1
	public Object caseStyleSelector(StyleSelector object) {
d713 1
a713 1
	public Object caseGenericStyleSelector(GenericStyleSelector object) {
d728 1
a728 1
	public Object defaultCase(EObject object) {
@

