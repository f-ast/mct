head	1.11;
access;
symbols
	v20081020-0700:1.11
	v20080917-1925:1.11
	v20080916-2008:1.11
	v20080722-1827:1.11
	v20080718-1700:1.11
	v20080718-1731:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080603-1553:1.11
	v20080503-1740:1.11
	v20080425-1959:1.11
	v20080409-1326:1.11
	v20080407-2250:1.11
	v20080328-1605:1.11
	v20080222-1200:1.11
	v20080201-2010:1.11
	v20080118-1129:1.9
	v20080114-2222:1.9
	v20071130-1111:1.10
	v20071124-0000:1.9
	v20071108-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.4
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070608-1300:1.9
	v20070601-1400:1.9
	v20070518-1300:1.9
	bugzilla111892_group_support:1.9.0.2
	Root_bugzilla111892_group_support:1.9
	v20070427-0600:1.9
	v20070405-2000:1.9
	v20070330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070119-1200:1.7.2.3
	M4_20:1.9
	v20061218-1500:1.7.2.3
	v20061214-0000:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061027-1200:1.7.2.3
	v20061013-1330:1.8
	v20061012-1100:1.7.2.2
	v20060919-0800:1.7.2.2
	v20060907-1100:1.7.2.2
	M1_20:1.7
	v20060803-1200:1.7.2.2
	v20060721-1130:1.7.2.1
	v20060713-1700:1.7.2.1
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1200:1.7
	v20060531-1730:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051217-0925:1.7
	I20051201-1800:1.7
	I20051124-2000:1.5
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.11
date	2008.01.28.20.36.15;	author ahunter;	state Exp;
branches;
next	1.10;
commitid	221479e3cbf4567;

1.10
date	2007.11.21.17.57.22;	author crevells;	state Exp;
branches;
next	1.9;
commitid	49a2474471824567;

1.9
date	2006.10.31.15.46.30;	author crevells;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2006.10.03.15.01.48;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2005.12.01.15.32.33;	author mmostafa;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2005.11.25.19.38.22;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.21.16.01.25;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.29.16;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.28.13;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.47.54;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.42;	author sshaw;	state Exp;
branches;
next	;

1.7.2.1
date	2006.07.06.18.43.56;	author cmahoney;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2006.08.02.20.00.41;	author ldamus;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2006.10.27.14.19.54;	author ahunter;	state Exp;
branches;
next	;

1.9.2.1
date	2007.05.18.17.36.38;	author crevells;	state Exp;
branches;
next	;
commitid	1849464de4254567;


desc
@@


1.11
log
@[212195] gmf-head mhanner 080128 [DeleteFromSupport] Allow Delete from Diagram for elements in a container
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions.internal;

import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.RequestConstants;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gef.requests.GroupRequest;
import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
import org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsMessages;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.ui.ISharedImages;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.PlatformUI;


/**
 * Action for delete from diagram.  Used by diagram context menus.
 *
 * @@author schafe
 * @@canBeSeenBy %level1
 */
public class DeleteFromDiagramAction extends DiagramAction{
	
	/**
	 * Creates a <code>DeleteFromDiagramAction</code> with a default label.
	 *
	 * @@param editor The part this action will be associated with.
	 */
	public DeleteFromDiagramAction(IWorkbenchPart part) {
		super(part);		
	}
 
	/**
	 * Constructor
	 * @@param workbenchPage
	 */
	public DeleteFromDiagramAction(IWorkbenchPage workbenchPage) {
		super(workbenchPage);		
	}

	/**
	 * Initializes this action's text and images.
	 */
	public void init() {
		super.init();
		setId(ActionIds.ACTION_DELETE_FROM_DIAGRAM);
		setText(DiagramUIActionsMessages.DeleteFromDiagram_ActionLabelText);
		setToolTipText(DiagramUIActionsMessages.DeleteFromDiagram_ActionToolTipText);
		ISharedImages workbenchImages = PlatformUI.getWorkbench().getSharedImages();
		setHoverImageDescriptor(
			workbenchImages.getImageDescriptor(
				ISharedImages.IMG_TOOL_DELETE));
		setImageDescriptor(
			workbenchImages.getImageDescriptor(ISharedImages.IMG_TOOL_DELETE));
		setDisabledImageDescriptor(
			workbenchImages.getImageDescriptor(
				ISharedImages.IMG_TOOL_DELETE_DISABLED));
		
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler#isSelectionListener()
	 */
	protected boolean isSelectionListener() {
		return true;
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createTargetRequest()
	 */
	protected Request createTargetRequest(){
		
		/* Create the delete request */
		GroupRequest deleteReq = new GroupRequest(
			RequestConstants.REQ_DELETE);
		return deleteReq;
		
	}
	
	/**
	 * Gets a command to execute on the operation set based on the target request 
	 * @@return a command to execute
	 */
	protected Command getCommand() {
		/* Get the selected edit parts */
		List objects = createOperationSet();		
		
		if (!supportViews(objects) || isCanonical(objects)){
			return null;
		}
		
		CompoundCommand deleteCC = new CompoundCommand(getLabel());
		for (Iterator iter = objects.iterator(); iter.hasNext();) {
			/* Get the next part */
			EditPart editPart = (EditPart) iter.next();
			/* Send the request to the edit part */
			deleteCC.add(editPart.getCommand(getTargetRequest()));
		}
		return deleteCC;
	}
	
	private boolean supportViews(List objects) {
		for (Iterator iter = objects.iterator(); iter.hasNext();) {
			Object object = iter.next();
			if (object instanceof GraphicalEditPart &&
				!((GraphicalEditPart)object).hasNotationView()){
				return false;
			}
			
		}
		return true;
	}

	/**
	 * Filters the selected objects and returns only editparts.
	 * @@return a list of editparts selected.
	 * 
	 */
	protected List createOperationSet() {
		List selection = getSelectedObjects();
		if (selection.isEmpty() || !(selection.get(0) instanceof IGraphicalEditPart))
			return Collections.EMPTY_LIST;
		return selection;
	}
	
	/**
	 * Return true if any of cntxt's selectedObjects reside in
	 * containers that are canonical.
	 * Returns false if the selectedObjects reside in non-canonical containers, 
	 * or if the selectedObjects do not have semantic elements.
	 * @@param cntxt
	 * @@return
	 */
	private boolean isCanonical(List selectedItems){
    
	    boolean isCanonical = false;
        if ( !selectedItems.isEmpty()) {

            for  (Iterator si = selectedItems.iterator(); si.hasNext() && !isCanonical;) {
                Object selected = si.next();   
                if ( selected instanceof EditPart ) {
                    EditPart child = (EditPart)selected;
                    View view = (View)child.getAdapter(View.class);

                    if (  view == null 
                            || view.getElement() == null
                            || view.getElement() instanceof View ) {
                        // If there is no element or the element is a view (e.g. diagram
                        // link) than we want to support delete from diagram. See
                        // bugzilla#148453.
                        isCanonical = false;
                        continue;
                    }
                    if (child instanceof ConnectionEditPart) {
                        ConnectionEditPart connection = (ConnectionEditPart)child;
                        isCanonical = ( !connection.isSemanticConnection()
                                || (isCanonical(connection.getSource())
                                        && isCanonical(connection.getTarget())) );
                    } 
                    else {
                        isCanonical = isCanonical(child);
                    }
                }
            }
        }
        return isCanonical;

	    
	}
	
	/**
	 * @@param gep
	 * @@return
	 */
	private boolean isCanonical(EditPart ep) {
	    EObject eObject = (EObject)ep.getAdapter(EObject.class);
        EditPart parent = ep.getParent();
        if ( eObject != null && parent != null ) { //sanity checks
            CanonicalEditPolicy cep = (CanonicalEditPolicy)parent.getEditPolicy(EditPolicyRoles.CANONICAL_ROLE);
            return cep != null
                && cep.isEnabled()
                && cep.canCreate(eObject);
        }
        return false;
	}

}
@


1.10
log
@[111892] gmf_head crevells 071121 Group/Ungroup support
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2007 IBM Corporation and others.
a29 1
import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
d159 32
a190 19
		
		if (selectedItems.isEmpty()) {
 			return false;
 		}
 		for (Iterator i = selectedItems.iterator(); i.hasNext();) {
 			Object selectedObject = i.next(); 	
 			
 			if (!(selectedObject instanceof IGraphicalEditPart)){
 				continue;
 			}
 				
 			//If the selectedObject does not have a semanticElement,
 			//the canonical check is irrelevant.  The delete from
 			//diagram should apply.
 			IGraphicalEditPart gep = (IGraphicalEditPart)selectedObject;
 			Object model = gep.getModel();
			if (!(model instanceof View)){
 				continue;
			}
d192 1
a192 31
            EObject element = ((View)model).getElement();
 			if (element == null || element instanceof View){
 				
 				if (selectedObject instanceof ConnectionEditPart) {
 					if (!((ConnectionEditPart) selectedObject).isSemanticConnection()) {
 						// not a reference connection (which has no element, but whose canonical-ness should be checked)
 						continue;
 					}
 				} else {
 	                // If there is no element or the element is a view (e.g. diagram
 	                // link) than we want to support delete from diagram. See
 	                // bugzilla#148453.
 	                continue;
 				}
 			} 				
 			//Check if container of connection is canonical. 
 			//A connection's container is not necessarily the connection editPart's parent.
 			if (selectedObject instanceof ConnectionEditPart){
 				ConnectionEditPart ePart = (ConnectionEditPart)selectedObject;
 				EditPart sEditPart = ePart.getSource();
                EditPart tEditPart = ePart.getTarget();
 				if (isCanonical(sEditPart) && isCanonical(tEditPart))
 					return true;
 			}
 			//Check if container of shape is canonical.
 			else { 				
 				if (isCanonical(gep))
					return true;
 			} 			
 		} 
 		return false;		
d199 8
a206 16
	private boolean isCanonical(EditPart gep) {
		if (gep instanceof IGraphicalEditPart){
			return isCanonical((IGraphicalEditPart)gep);
		}
		return false;
	}


	/**
	 * @@param gep
	 * @@return
	 */
	private boolean isCanonical(IGraphicalEditPart gep) {
		EditPart parent = gep.getParent();
        while (parent instanceof GroupEditPart) {
            parent = parent.getParent();
d208 1
a208 8
		if (parent instanceof IGraphicalEditPart) {
			CanonicalEditPolicy cep = (CanonicalEditPolicy)parent.getEditPolicy(EditPolicyRoles.CANONICAL_ROLE);
			if ( cep != null ) {
				if (cep.isEnabled())
					return true;
			}
		}
		return false;
@


1.9
log
@[159782] gmf_head crevells 061031 Deleting a connection whose source/target is canonical automatically deletes the element
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d30 1
d231 3
@


1.9.2.1
log
@[111892] gmf_head crevells 070518 First milestone of group/ungroup support (painting issues when grouping shapes with border items)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2007 IBM Corporation and others.
a29 1
import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
a229 3
        while (parent instanceof GroupEditPart) {
            parent = parent.getParent();
        }
@


1.8
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d199 2
a200 1
 				if (isCanonical(sEditPart))
@


1.7
log
@ bugzilla 111894 gmf-head mmostafa 051201 Improve memory consumption of opened notation diagram
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
d18 1
d179 14
a192 2
 			if (((View)model).getElement() == null){
 				continue;
@


1.7.2.1
log
@Bugzilla#148453 gmf_R1_0_maintenance cmahoney 060706 Delete from Diagram action does not show up on diagram links on a canonical diagram
@
text
@a17 1
import org.eclipse.emf.ecore.EObject;
d178 2
a179 6
            EObject element = ((View)model).getElement();
 			if (element == null || element instanceof View){
                // If there is no element or the element is a view (e.g. diagram
                // link) than we want to support delete from diagram. See
                // bugzilla#148453.
                continue;
@


1.7.2.2
log
@[144251] gmf_R1_0_maintenance ldamus 060802 Example ecore diagram editor creates invalid ecore file
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d181 4
a184 12
 				
 				if (selectedObject instanceof ConnectionEditPart) {
 					if (!((ConnectionEditPart) selectedObject).isSemanticConnection()) {
 						// not a reference connection (which has no element, but whose canonical-ness should be checked)
 						continue;
 					}
 				} else {
 	                // If there is no element or the element is a view (e.g. diagram
 	                // link) than we want to support delete from diagram. See
 	                // bugzilla#148453.
 	                continue;
 				}
@


1.7.2.3
log
@[159782] gmf_R1_0_maintenance crevells 061027 Deleting a connection whose source/target is canonical automatically deletes the element
@
text
@d199 1
a199 2
                EditPart tEditPart = ePart.getTarget();
 				if (isCanonical(sEditPart) && isCanonical(tEditPart))
@


1.6
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d28 1
a107 2
		CompoundCommand deleteCC = new CompoundCommand(getLabel());

d111 1
a111 1
		if (isCanonical(objects)){
d113 1
a113 1
		}		
d115 1
d125 12
@


1.5
log
@Bugzilla#116030 gmf_head cmahoney 051121 Diagram ActionIds should be public
@
text
@a23 5
import org.eclipse.ui.ISharedImages;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.PlatformUI;

d26 1
a26 1
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramActionsResourceManager;
d32 4
d69 2
a70 2
		setText(DiagramActionsResourceManager.getI18NString("DeleteFromDiagram.ActionLabelText"));//$NON-NLS-1$
		setToolTipText(DiagramActionsResourceManager.getI18NString("DeleteFromDiagram.ActionToolTipText"));//$NON-NLS-1$
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d29 1
a35 1
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.ActionIds;
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d29 1
a29 1
import org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction;
d45 1
a45 1
public class DeleteFromDiagramAction extends PresentationAction{
d70 2
a71 2
		setText(DiagramActionsResourceManager.getI18NString("PresentationGlobalActionHandler.deleteFromDiagram"));//$NON-NLS-1$
		setToolTipText(DiagramActionsResourceManager.getI18NString("PresentationGlobalActionHandler.deleteFromDiagramToolTip"));//$NON-NLS-1$
d92 1
a92 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#createTargetRequest()
d170 2
a171 2
 			//Check if container of connector is canonical. 
 			//A connector's container is not necessarily the connector editPart's parent.
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d34 1
a34 1
import com.ibm.xtools.notation.View;
@

