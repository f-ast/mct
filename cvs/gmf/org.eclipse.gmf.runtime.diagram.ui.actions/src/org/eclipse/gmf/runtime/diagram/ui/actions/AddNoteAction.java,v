head	1.11;
access;
symbols
	v20081020-0700:1.11
	v20080917-1925:1.11
	v20080916-2008:1.11
	v20080722-1827:1.11
	v20080718-1700:1.11
	v20080718-1731:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080603-1553:1.11
	v20080503-1740:1.11
	v20080425-1959:1.11
	v20080409-1326:1.11
	v20080407-2250:1.11
	v20080328-1605:1.11
	v20080222-1200:1.11
	v20080201-2010:1.11
	v20080118-1129:1.10
	v20080114-2222:1.10
	v20071130-1111:1.11
	v20071124-0000:1.10
	v20071108-0000:1.11
	v20070903-0000:1.11
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.4
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070608-1300:1.10
	v20070601-1400:1.10
	v20070518-1300:1.10
	bugzilla111892_group_support:1.10.0.2
	Root_bugzilla111892_group_support:1.10
	v20070427-0600:1.10
	v20070405-2000:1.10
	v20070330-1300:1.10
	v20070322-1100:1.10
	v20060316-0600:1.10
	v20070221-1500:1.10
	v20070208-1800:1.10
	v20070119-1200:1.9.2.1
	M4_20:1.10
	v20061218-1500:1.9.2.1
	v20061214-0000:1.10
	M3_20:1.10
	v20061117-0800:1.10
	v20061027-1200:1.9.2.1
	v20061013-1330:1.10
	v20061012-1100:1.9.2.1
	v20060919-0800:1.9.2.1
	v20060907-1100:1.9
	M1_20:1.9
	v20060803-1200:1.9
	v20060721-1130:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060616-1200:1.9
	v20060531-1730:1.8
	v20060519-0800:1.8
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051217-0925:1.7
	I20051201-1800:1.7
	I20051124-2000:1.6
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.4;
locks; strict;
comment	@# @;


1.11
date	2007.07.31.19.40.53;	author crevells;	state Exp;
branches;
next	1.10;
commitid	3d3f46af90444567;

1.10
date	2006.10.03.15.01.48;	author ahunter;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.14.18.39.55;	author ahunter;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2006.02.13.19.10.30;	author ldamus;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.25.19.38.23;	author cmahoney;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.21.16.01.29;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.02.23.29.17;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.22.15.42.35;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.28.14;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.47.55;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.49;	author sshaw;	state Exp;
branches;
next	;

1.9.2.1
date	2006.09.11.16.35.06;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.11
log
@[144245] gmf_head crevells 070731 [Geoshapes] Make GeoshapeType public
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions;

import java.util.Iterator;
import java.util.List;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
import org.eclipse.gmf.runtime.diagram.core.util.ViewType;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsMessages;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsPluginImages;
import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredCreateConnectionViewCommand;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.INodeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor;
import org.eclipse.gmf.runtime.diagram.ui.type.DiagramNotationType;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.ui.IWorkbenchPage;

/**
 * Concrete implemention of AttachShapeAction which attaches a new Notational Note to the
 * targeted shapes.
 * 
 * @@author jcorchis 
 */
public class AddNoteAction extends AttachShapeAction {

	/**
	 * Constructor
	 * @@param page the active workbenchPage. 
	 */
	public AddNoteAction(IWorkbenchPage page) {
		super(page);

	}
	
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.action.IDisposableAction#init()
	 */
	public void init() {
		super.init();
		setText(DiagramUIActionsMessages.AddNoteAction_ActionLabelText);
		setId(ActionIds.ACTION_ADD_NOTELINK);
		setToolTipText(DiagramUIActionsMessages.AddNoteAction_ActionToolTipText);
		setImageDescriptor(DiagramUIActionsPluginImages.DESC_NOTE_ATTACHMENT);
		setHoverImageDescriptor(getImageDescriptor());
	}

	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#calculateEnabled()
	 */
	protected boolean calculateEnabled() {
		if (getSelectedObjects().isEmpty())
			return true;
		List parts = getSelectedObjects();
		for (int i = 0; i < parts.size(); i++) {
			Object o = parts.get(i);
			if (!(o instanceof INodeEditPart))
				return false;
			else{
				INodeEditPart nodeEditPart = (INodeEditPart)o;
				if (!(nodeEditPart.canAttachNote())){
					return false;
				}
				
				// consider edit mode of selected edit part
				if (nodeEditPart instanceof IEditableEditPart
						&& !((IEditableEditPart) nodeEditPart)
								.isEditModeEnabled()) {
					return false;
				}

				// consider edit mode of selected edit part's container
				EditPart parentPart = nodeEditPart.getParent();
				if (parentPart instanceof IEditableEditPart
						&& !((IEditableEditPart) parentPart)
								.isEditModeEnabled()) {
					return false;
				}
				
			}
		}
		return true;
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler#doRun(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected void doRun(IProgressMonitor progressMonitor) {
		List selectedEditParts = getSelectedObjects();
		IDiagramWorkbenchPart editor = getDiagramWorkbenchPart();

		// note request
		ViewDescriptor viewDescriptor =
			new ViewDescriptor(null, Node.class, DiagramNotationType.NOTE.getSemanticHint(), getPreferencesHint());
		CreateViewRequest noteRequest = new CreateViewRequest(viewDescriptor);
		
		noteRequest.setLocation(getLocation(selectedEditParts));
		
		IGraphicalEditPart primaryPart = (IGraphicalEditPart) selectedEditParts.get(0);
		if (primaryPart instanceof ConnectionEditPart) {
			primaryPart = (IGraphicalEditPart) ((ConnectionEditPart) primaryPart).getSource();
		}		

		Command createNoteCmd =
			getContainer(primaryPart).getCommand(noteRequest);

		// note view adapter
		IAdaptable noteViewAdapter =
			(IAdaptable) ((List)noteRequest.getNewObject()).get(0);

		// create the note attachments commands
		CompositeCommand noteAttachmentCC =
			new CompositeCommand(getToolTipText());

		Iterator iter = selectedEditParts.iterator();
		while (iter.hasNext()) {
			IGraphicalEditPart targetEditPart =
				(IGraphicalEditPart) iter.next();

			noteAttachmentCC.compose(
				new DeferredCreateConnectionViewCommand(targetEditPart.getEditingDomain(),
					ViewType.NOTEATTACHMENT,
					noteViewAdapter,
					new EObjectAdapter((EObject)targetEditPart.getModel()),
					editor.getDiagramGraphicalViewer(),
					getPreferencesHint()));
		}

		CompoundCommand cc =
			new CompoundCommand(getToolTipText());
		cc.add(createNoteCmd);
		cc.add(new ICommandProxy(noteAttachmentCC));

		if (cc.canExecute()) {
			editor.getDiagramEditDomain().getDiagramCommandStack().execute(cc);
			selectAddedObject(editor.getDiagramGraphicalViewer(), noteRequest);
		}
	}

}
@


1.10
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
a32 1
import org.eclipse.gmf.runtime.diagram.ui.internal.util.DiagramNotationType;
d36 1
@


1.9
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d20 1
d32 1
d88 16
d158 4
a161 3
		editor.getDiagramEditDomain().getDiagramCommandStack().execute(cc);
		
		selectAddedObject(editor.getDiagramGraphicalViewer(), noteRequest);
@


1.9.2.1
log
@[156733] gmf_R1_0_maintenance ldamus 060911 org.eclipse.gmf.runtime.diagram.ui.actions AddNoteAction, ZOrderAction, ArrangeAction do not respect org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
a19 1
import org.eclipse.gef.EditPart;
a30 1
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
a85 16
				
				// consider edit mode of selected edit part
				if (nodeEditPart instanceof IEditableEditPart
						&& !((IEditableEditPart) nodeEditPart)
								.isEditModeEnabled()) {
					return false;
				}

				// consider edit mode of selected edit part's container
				EditPart parentPart = nodeEditPart.getParent();
				if (parentPart instanceof IEditableEditPart
						&& !((IEditableEditPart) parentPart)
								.isEditModeEnabled()) {
					return false;
				}
				
d140 3
a142 4
		if (cc.canExecute()) {
			editor.getDiagramEditDomain().getDiagramCommandStack().execute(cc);
			selectAddedObject(editor.getDiagramGraphicalViewer(), noteRequest);
		}
@


1.8
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d27 1
a27 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d138 1
a138 1
		cc.add(new EtoolsProxyCommand(noteAttachmentCC));
@


1.7
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d127 1
a127 1
				new DeferredCreateConnectionViewCommand(
@


1.6
log
@Bugzilla#116030 gmf_head cmahoney 051121 Diagram ActionIds should be public
@
text
@d24 2
a25 1
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramActionsResourceManager;
d62 1
a62 1
		setText(DiagramActionsResourceManager.getI18NString("AddNoteAction.ActionLabelText")); //$NON-NLS-1$
d64 2
a65 4
		setToolTipText(DiagramActionsResourceManager.getI18NString("AddNoteAction.ActionToolTipText")); //$NON-NLS-1$
		setImageDescriptor(
			DiagramActionsResourceManager.getInstance().getImageDescriptor(
				DiagramActionsResourceManager.DESC_NOTE_ATTACHMENT));
@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a29 1
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.ActionIds;
@


1.4
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d25 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredCreateConnectorViewCommand;
d31 1
a31 1
import org.eclipse.gmf.runtime.diagram.ui.internal.util.PresentationNotationType;
d40 1
a40 1
 * Concrete implemention of AttachedShapeAction which attaches a new Notational Note to the
d45 1
a45 1
public class AddNoteAction extends AttachedShapeAction {
d73 1
a73 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#calculateEnabled()
d102 1
a102 1
			new ViewDescriptor(null, Node.class, PresentationNotationType.NOTE.getSemanticHint(), getPreferencesHint());
d129 1
a129 1
				new DeferredCreateConnectorViewCommand(
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a21 2
import org.eclipse.ui.IWorkbenchPage;

d23 1
a32 1
import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
d37 1
d130 1
a130 1
					Properties.NOTEATTACHMENT,
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d36 1
a36 1
import com.ibm.xtools.notation.Node;
@

