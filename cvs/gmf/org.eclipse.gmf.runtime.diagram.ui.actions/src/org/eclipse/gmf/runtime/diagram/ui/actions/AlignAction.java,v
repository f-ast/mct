head	1.6;
access;
symbols
	v20081020-0700:1.6
	v20080917-1925:1.6
	v20080916-2008:1.6
	v20080722-1827:1.6
	v20080718-1700:1.6
	v20080718-1731:1.6
	R2_1_maintenance:1.6.0.8
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080603-1553:1.6
	v20080503-1740:1.6
	v20080425-1959:1.6
	v20080409-1326:1.6
	v20080407-2250:1.6
	v20080328-1605:1.6
	v20080222-1200:1.6
	v20080201-2010:1.6
	v20080118-1129:1.6
	v20080114-2222:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071108-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.6
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070608-1300:1.6
	v20070601-1400:1.6
	v20070518-1300:1.6
	bugzilla111892_group_support:1.6.0.4
	Root_bugzilla111892_group_support:1.6
	v20070427-0600:1.6
	v20070405-2000:1.6
	v20070330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070119-1200:1.6
	M4_20:1.6
	v20061218-1500:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.6
	v20061013-1330:1.6
	v20061012-1100:1.6
	v20060919-0800:1.6
	v20060907-1100:1.6
	M1_20:1.6
	v20060803-1200:1.6
	v20060721-1130:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060616-1200:1.6
	v20060531-1730:1.6
	v20060519-0800:1.6
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.6
date	2006.02.13.19.10.30;	author ldamus;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.25.19.38.23;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.29.17;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.15.20.35.43;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.28.14;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.49;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions;

import java.util.Collections;
import java.util.List;

import org.eclipse.draw2d.PositionConstants;
import org.eclipse.draw2d.geometry.PrecisionRectangle;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.RequestConstants;
import org.eclipse.gef.requests.AlignmentRequest;
import org.eclipse.gef.tools.ToolUtilities;
import org.eclipse.gef.ui.actions.AlignmentAction;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsMessages;
import org.eclipse.ui.IWorkbenchPage;

/**
 * @@author melaasar
 *
 * This action is cloned from the GEF AlignmentAction
 * @@see org.eclipse.gef.actions.AlignmentAction
 */
public class AlignAction extends DiagramAction {

	private String id;
	private int alignment;
	private boolean isToolbarItem = true;

	/**
	 * Constructs an AlignAction with the given part and alignment ID.  The alignment ID
	 * must by one of:
	 * <UL>
	 *   <LI>GEFActionConstants.ALIGN_LEFT
	 *   <LI>GEFActionConstants.ALIGN_RIGHT
	 *   <LI>GEFActionConstants.ALIGN_CENTER
	 *   <LI>GEFActionConstants.ALIGN_TOP
	 *   <LI>GEFActionConstants.ALIGN_BOTTOM
	 *   <LI>GEFActionConstants.ALIGN_MIDDLE
	 * </UL>  
	 * @@param part the workbench part used to obtain context
	 * @@param id the action ID.
	 * @@param align the aligment ID.
	 */
	public AlignAction(IWorkbenchPage workbenchPage, String id, int align) {
		super(workbenchPage);
		this.id = id;
		this.alignment = align;
		initUI();
	}
	
/**
	 * Constructs an AlignAction with the given part and alignment ID.  The alignment ID
	 * must by one of:
	 * <UL>
	 *   <LI>GEFActionConstants.ALIGN_LEFT
	 *   <LI>GEFActionConstants.ALIGN_RIGHT
	 *   <LI>GEFActionConstants.ALIGN_CENTER
	 *   <LI>GEFActionConstants.ALIGN_TOP
	 *   <LI>GEFActionConstants.ALIGN_BOTTOM
	 *   <LI>GEFActionConstants.ALIGN_MIDDLE
	 * </UL>  
	 * @@param part the workbench part used to obtain context
	 * @@param id the action ID.
	 * @@param align the aligment ID.
	 * @@param isToolbarItem the indicator of whether or not this is a toolbar action
	 * -as opposed to a context-menu action.
	 */	
	public AlignAction(IWorkbenchPage workbenchPage, String id, int align, boolean isToolbarItem) {
		super(workbenchPage);
		this.id = id;
		this.alignment = align;
		this.isToolbarItem = isToolbarItem;
		initUI();
	}

	/**
	 * Initializes the actions UI presentation.
	 * Two sets of each align action are required.  One for the toolbar, 
	 * and one for other menus.  The toolbar action has explicit text, 
	 * the other menus do not.  For example: Align Left and Left.
	 * 
	 */
	protected void initUI() {
		
		setId(this.id);
		String text = null;
		String toolTipText = null;
		AlignmentAction gefAlignmentAction = new AlignmentAction(getWorkbenchPart(), alignment);
		setHoverImageDescriptor(gefAlignmentAction.getHoverImageDescriptor());
		setImageDescriptor(gefAlignmentAction.getImageDescriptor());				
		setDisabledImageDescriptor(gefAlignmentAction.getDisabledImageDescriptor());
		gefAlignmentAction.dispose();
		
		switch (alignment) {
			case PositionConstants.LEFT: {
				
				if (isToolbarItem){
					text = DiagramUIActionsMessages.AlignLeftToolbarAction_Label;
					toolTipText = DiagramUIActionsMessages.AlignLeftToolbarAction_Tooltip;
				}
				else{
					text = DiagramUIActionsMessages.AlignLeft;
					toolTipText = DiagramUIActionsMessages.AlignLeft;
				}				
				break;
			}
			case PositionConstants.RIGHT: {
				if (isToolbarItem){
					text = DiagramUIActionsMessages.AlignRightToolbarAction_Label;
					toolTipText = DiagramUIActionsMessages.AlignRightToolbarAction_Tooltip;
				}
				else{
					text = DiagramUIActionsMessages.AlignRight;
					toolTipText = DiagramUIActionsMessages.AlignRight;
				}					
				break;
			}
			case PositionConstants.TOP: {
				if (isToolbarItem){
					text = DiagramUIActionsMessages.AlignTopToolbarAction_Label;
					toolTipText = DiagramUIActionsMessages.AlignTopToolbarAction_Tooltip;
				}
				else{
					text = DiagramUIActionsMessages.AlignTop;
					toolTipText = DiagramUIActionsMessages.AlignTop;
				}				
				break;
			}
			case PositionConstants.BOTTOM: {
				if (isToolbarItem){
					text = DiagramUIActionsMessages.AlignBottomToolbarAction_Label;
					toolTipText = DiagramUIActionsMessages.AlignBottomToolbarAction_Tooltip;
				}
				else{
					text = DiagramUIActionsMessages.AlignBottom;
					toolTipText = DiagramUIActionsMessages.AlignBottom;
				}		
				break;
			}
			case PositionConstants.CENTER: {
				if (isToolbarItem){
					text = DiagramUIActionsMessages.AlignCenterToolbarAction_Label;
					toolTipText = DiagramUIActionsMessages.AlignCenterToolbarAction_Tooltip;
				}
				else{
					text = DiagramUIActionsMessages.AlignCenter;
					toolTipText = DiagramUIActionsMessages.AlignCenter;
				}	
				break;
			}
			case PositionConstants.MIDDLE: {
				if (isToolbarItem){
					text = DiagramUIActionsMessages.AlignMiddleToolbarAction_Label;
					toolTipText = DiagramUIActionsMessages.AlignMiddleToolbarAction_Tooltip;
				}
				else{
					text = DiagramUIActionsMessages.AlignMiddle;
					toolTipText = DiagramUIActionsMessages.AlignMiddle;
				}	
				break;
			}			
		}
		setText(text);
		setToolTipText(toolTipText);
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler#isSelectionListener()
	 */
	protected boolean isSelectionListener() {
		return true;
	}
    
    protected boolean isOperationHistoryListener() {
        return true;
    }

	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createOperationSet()
	 */
	protected List createOperationSet() {
		List editparts = super.createOperationSet();
		editparts = ToolUtilities.getSelectionWithoutDependants(editparts);
		if (editparts.size() < 2)
			return Collections.EMPTY_LIST;
		EditPart parent = ((EditPart)editparts.get(0)).getParent();
		for (int i = 1; i < editparts.size(); i++) {
			EditPart part = (EditPart)editparts.get(i);
			if (part.getParent() != parent)
				return Collections.EMPTY_LIST;
		}
		return editparts;
	}

	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createTargetRequest()
	 */
	protected Request createTargetRequest() {
		AlignmentRequest request = new AlignmentRequest(RequestConstants.REQ_ALIGN);
		request.setAlignment(alignment);
		return request;
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#updateTargetRequest()
	 */
	protected void updateTargetRequest() {
		AlignmentRequest request = (AlignmentRequest) getTargetRequest();
		request.setAlignmentRectangle(calculateAlignmentRectangle());
		super.updateTargetRequest();
	}

	/**
	 * Returns the alignment rectangle to which all selected parts should be aligned.	 
	 * @@return the alignment rectangle
	 */
	protected Rectangle calculateAlignmentRectangle() {
		List editparts = getOperationSet();
		if (editparts == null || editparts.isEmpty())
			return null;
		GraphicalEditPart part = (GraphicalEditPart)editparts.get(editparts.size() - 1);
		Rectangle rect = new PrecisionRectangle(part.getFigure().getBounds());
		part.getFigure().translateToAbsolute(rect);
		return rect;
	}

}
@


1.5
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d186 4
a189 7
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler#isCommandStackListener()
	 */
	protected boolean isCommandStackListener() {
		return true;
	}
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d27 1
a27 1
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramActionsResourceManager;
d111 2
a112 2
					text = DiagramActionsResourceManager.getI18NString("AlignLeftToolbarAction.Label");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignLeftToolbarAction.Tooltip");//$NON-NLS-1$
d115 2
a116 2
					text = DiagramActionsResourceManager.getI18NString("AlignLeft");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignLeft");//$NON-NLS-1$
d122 2
a123 2
					text = DiagramActionsResourceManager.getI18NString("AlignRightToolbarAction.Label");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignRightToolbarAction.Tooltip");//$NON-NLS-1$
d126 2
a127 2
					text = DiagramActionsResourceManager.getI18NString("AlignRight");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignRight");//$NON-NLS-1$
d133 2
a134 2
					text = DiagramActionsResourceManager.getI18NString("AlignTopToolbarAction.Label");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignTopToolbarAction.Tooltip");//$NON-NLS-1$
d137 2
a138 2
					text = DiagramActionsResourceManager.getI18NString("AlignTop");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignTop");//$NON-NLS-1$
d144 2
a145 2
					text = DiagramActionsResourceManager.getI18NString("AlignBottomToolbarAction.Label");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignBottomToolbarAction.Tooltip");//$NON-NLS-1$
d148 2
a149 2
					text = DiagramActionsResourceManager.getI18NString("AlignBottom");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignBottom");//$NON-NLS-1$
d155 2
a156 2
					text = DiagramActionsResourceManager.getI18NString("AlignCenterToolbarAction.Label");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignCenterToolbarAction.Tooltip");//$NON-NLS-1$
d159 2
a160 2
					text = DiagramActionsResourceManager.getI18NString("AlignCenter");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignCenter");//$NON-NLS-1$
d166 2
a167 2
					text = DiagramActionsResourceManager.getI18NString("AlignMiddleToolbarAction.Label");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignMiddleToolbarAction.Tooltip");//$NON-NLS-1$
d170 2
a171 2
					text = DiagramActionsResourceManager.getI18NString("AlignMiddle");//$NON-NLS-1$
					toolTipText = DiagramActionsResourceManager.getI18NString("AlignMiddle");//$NON-NLS-1$
@


1.3
log
@bugzilla 109669 gmf-head sshaw 050915 Internal API usage from GEF in org.eclipse.gmf.runtime.diagram.ui.actions.AlignAction
@
text
@d27 1
a27 1
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.Messages;
d36 1
a36 1
public class AlignAction extends PresentationAction {
d111 2
a112 2
					text = Messages.getString("AlignLeftToolbarAction.Label");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignLeftToolbarAction.Tooltip");//$NON-NLS-1$
d115 2
a116 2
					text = Messages.getString("AlignLeft");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignLeft");//$NON-NLS-1$
d122 2
a123 2
					text = Messages.getString("AlignRightToolbarAction.Label");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignRightToolbarAction.Tooltip");//$NON-NLS-1$
d126 2
a127 2
					text = Messages.getString("AlignRight");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignRight");//$NON-NLS-1$
d133 2
a134 2
					text = Messages.getString("AlignTopToolbarAction.Label");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignTopToolbarAction.Tooltip");//$NON-NLS-1$
d137 2
a138 2
					text = Messages.getString("AlignTop");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignTop");//$NON-NLS-1$
d144 2
a145 2
					text = Messages.getString("AlignBottomToolbarAction.Label");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignBottomToolbarAction.Tooltip");//$NON-NLS-1$
d148 2
a149 2
					text = Messages.getString("AlignBottom");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignBottom");//$NON-NLS-1$
d155 2
a156 2
					text = Messages.getString("AlignCenterToolbarAction.Label");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignCenterToolbarAction.Tooltip");//$NON-NLS-1$
d159 2
a160 2
					text = Messages.getString("AlignCenter");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignCenter");//$NON-NLS-1$
d166 2
a167 2
					text = Messages.getString("AlignMiddleToolbarAction.Label");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignMiddleToolbarAction.Tooltip");//$NON-NLS-1$
d170 2
a171 2
					text = Messages.getString("AlignMiddle");//$NON-NLS-1$
					toolTipText = Messages.getString("AlignMiddle");//$NON-NLS-1$
d196 1
a196 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#createOperationSet()
d214 1
a214 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#createTargetRequest()
d223 1
a223 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#updateTargetRequest()
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a23 1
import org.eclipse.gef.internal.InternalImages;
d26 2
a29 2
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.Messages;

d101 5
a117 3
				setHoverImageDescriptor(InternalImages.DESC_HORZ_ALIGN_LEFT);
				setImageDescriptor(InternalImages.DESC_HORZ_ALIGN_LEFT_DIS);				
				setDisabledImageDescriptor(InternalImages.DESC_HORZ_ALIGN_LEFT_DIS);
a128 3
				setHoverImageDescriptor(InternalImages.DESC_HORZ_ALIGN_RIGHT);
				setImageDescriptor(InternalImages.DESC_HORZ_ALIGN_RIGHT_DIS);
				setDisabledImageDescriptor(InternalImages.DESC_HORZ_ALIGN_RIGHT_DIS);
a139 3
				setHoverImageDescriptor(InternalImages.DESC_VERT_ALIGN_TOP);
				setImageDescriptor(InternalImages.DESC_VERT_ALIGN_TOP_DIS);
				setDisabledImageDescriptor(InternalImages.DESC_VERT_ALIGN_TOP_DIS);
a150 3
				setHoverImageDescriptor(InternalImages.DESC_VERT_ALIGN_BOTTOM);
				setImageDescriptor(InternalImages.DESC_VERT_ALIGN_BOTTOM_DIS);
				setDisabledImageDescriptor(InternalImages.DESC_VERT_ALIGN_BOTTOM_DIS);
a161 3
				setHoverImageDescriptor(InternalImages.DESC_HORZ_ALIGN_CENTER);
				setImageDescriptor(InternalImages.DESC_HORZ_ALIGN_CENTER_DIS);
				setDisabledImageDescriptor(InternalImages.DESC_HORZ_ALIGN_CENTER_DIS);
a172 3
				setHoverImageDescriptor(InternalImages.DESC_VERT_ALIGN_MIDDLE);
				setImageDescriptor(InternalImages.DESC_VERT_ALIGN_MIDDLE_DIS);
				setDisabledImageDescriptor(InternalImages.DESC_VERT_ALIGN_MIDDLE_DIS);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

