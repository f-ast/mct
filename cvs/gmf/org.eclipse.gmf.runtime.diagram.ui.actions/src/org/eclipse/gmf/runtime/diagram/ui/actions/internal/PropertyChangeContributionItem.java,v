head	1.12;
access;
symbols
	v20081020-0700:1.12
	v20080917-1925:1.12
	v20080916-2008:1.12
	v20080722-1827:1.12
	v20080718-1700:1.12
	v20080718-1731:1.12
	R2_1_maintenance:1.12.0.2
	Root_R2_1_maintenance:1.12
	R2_1_0:1.12
	v20080603-1553:1.12
	v20080503-1740:1.12
	v20080425-1959:1.12
	v20080409-1326:1.12
	v20080407-2250:1.12
	v20080328-1605:1.11
	v20080222-1200:1.11
	v20080201-2010:1.11
	v20080118-1129:1.10
	v20080114-2222:1.10
	v20071130-1111:1.11
	v20071124-0000:1.10
	v20071108-0000:1.10
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.4
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070608-1300:1.10
	v20070601-1400:1.10
	v20070518-1300:1.10
	bugzilla111892_group_support:1.10.0.2
	Root_bugzilla111892_group_support:1.10
	v20070427-0600:1.10
	v20070405-2000:1.10
	v20070330-1300:1.10
	v20070322-1100:1.10
	v20060316-0600:1.10
	v20070221-1500:1.10
	v20070208-1800:1.10
	v20070119-1200:1.7.2.2
	M4_20:1.10
	v20061218-1500:1.7.2.2
	v20061214-0000:1.10
	M3_20:1.10
	v20061117-0800:1.10
	v20061027-1200:1.7.2.2
	v20061013-1330:1.9
	v20061012-1100:1.7.2.2
	v20060919-0800:1.7.2.1
	v20060907-1100:1.7
	M1_20:1.7
	v20060803-1200:1.7
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1200:1.7
	v20060531-1730:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051201-1800:1.5
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.4;
locks; strict;
comment	@# @;


1.12
date	2008.04.08.02.16.26;	author ahunter;	state Exp;
branches;
next	1.11;
commitid	4c6947fad57a4567;

1.11
date	2007.11.21.17.57.22;	author crevells;	state Exp;
branches;
next	1.10;
commitid	49a2474471824567;

1.10
date	2006.10.13.19.54.26;	author ahunter;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.12.15.00.23;	author mmostafa;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.03.15.01.47;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.11.13.53.18;	author sshaw;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2006.02.28.02.30.44;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.02.23.29.17;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.23.18.37.33;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.28.14;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.47.54;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.43;	author sshaw;	state Exp;
branches;
next	;

1.7.2.1
date	2006.09.13.16.43.26;	author ahunter;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2006.10.10.14.59.48;	author mmostafa;	state Exp;
branches;
next	;


desc
@@


1.12
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions.internal;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.eclipse.core.runtime.Assert;
import org.eclipse.emf.ecore.ENamedElement;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.transaction.RunnableWithResult;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.actions.CustomContributionItem;
import org.eclipse.gmf.runtime.diagram.ui.requests.ChangePropertyValueRequest;
import org.eclipse.gmf.runtime.emf.core.util.PackageUtil;
import org.eclipse.ui.IWorkbenchPage;

/**
 * An abstract implementation of a custom toolbar contribution item for reflecting
 * and changing properties of the selected objects in a workbench part
 * 
 * @@author melaasar
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.actions.*
 *  
 */
public abstract class PropertyChangeContributionItem
	extends CustomContributionItem {

	// id of the property this action will change
	private String propertyId = null;

	// name of the property this action will change
	private String propertyName = null;

	/**
	 * Constructs a new property change contribution item
	 * 
	 * @@param partService The part service
	 * @@param id The contribution id
	 * @@param propertyId The property id
	 * @@param propertyName The property name
	 */
	public PropertyChangeContributionItem(
		IWorkbenchPage workbenchPage,
		String id,
		String propertyId,
		String propertyName) {
		super(workbenchPage, id);
		Assert.isNotNull(propertyId);
		Assert.isNotNull(propertyName);
		setPropertyId(propertyId);
		setPropertyName(propertyName);
	}

	/**
	 * Returns the propertyId.
	 * @@return - property id
	 */
	protected String getPropertyId() {
		return propertyId;
	}

	/**
	 * Sets the propertyId.
	 * @@param - The propertyId to set
	 */
	protected void setPropertyId(String propertyId) {
		this.propertyId = propertyId;
	}

	/**
	 * Returns the propertyName.
	 * @@return - property name
	 */
	protected String getPropertyName() {
		return propertyName;
	}

	/**
	 * Sets the propertyName.
	 * @@param - The propertyName to set
	 */
	protected void setPropertyName(String string) {
		propertyName = string;
	}

	/**
	 * Creates a new target request
	 * 
	 * @@return the new target request
	 */
	protected Request createTargetRequest() {
		return new ChangePropertyValueRequest(
			getPropertyName(),
			getPropertyId());
	}

	/**
	 * updates the target request. 
	 * Clients should call this method whenever the request 
	 * is expected to be changed
	 */
	protected void updateTargetRequest() {
		ChangePropertyValueRequest request =
			(ChangePropertyValueRequest) getTargetRequest();
		request.setValue(getNewPropertyValue());
	}

	/**
	 * Returns the property value of the given property id of the current operation set's
	 * 
	 * The default implementation returns the current property value of the 
	 * primary object in the operation set if not empty and <code>null</code> otherwise
	 *  
	 * @@see org.eclipse.gmf.runtime.diagram.ui.internal.actions.PropertyChangeAction#getNewPropertyValue()
	 */
	protected Object getOperationSetPropertyValue(String id) {
		List set = getOperationSet();
		if (!set.isEmpty()) {
			IGraphicalEditPart primaryEditPart =
				(IGraphicalEditPart) set.get(set.size() - 1);
			return getPropertyValue(primaryEditPart, id);
		}
		return null;
	}
    
    /**
     * Returns the property value of the given property id of the current operation set's
     * 
     * The default implementation returns the current property value of the 
     * primary object in the operation set if not empty and <code>null</code> otherwise
     *  
     * @@see org.eclipse.gmf.runtime.diagram.ui.internal.actions.PropertyChangeAction#getNewPropertyValue()
     */
    protected Object getOperationSetPropertyValue(String id,boolean useReadExeclusive) {
        List set = getOperationSet();
        if (!set.isEmpty()) {
            IGraphicalEditPart primaryEditPart =
                (IGraphicalEditPart) set.get(set.size() - 1);
            return getPropertyValue(primaryEditPart, id,useReadExeclusive);
        }
        return null;
    }

	/**
	 * A utility method to return the value of a given property for a given editpart
	 * 
	 * @@param editPart The editpart
	 * @@return The current value of the editpart's given property
	 */
	protected Object getPropertyValue(
		final IGraphicalEditPart editPart,
		final String thePropertyId) {

		try {
			return editPart.getEditingDomain().runExclusive(
				new RunnableWithResult.Impl() {

					public void run() {
						setResult(getStructuralFeatureValue(editPart, thePropertyId));
					}
				});
		} catch (InterruptedException e) {
			Trace.catching(DiagramActionsPlugin.getInstance(),
				DiagramActionsDebugOptions.EXCEPTIONS_CATCHING, getClass(),
				"getPropertyValue", e); //$NON-NLS-1$
			Log.error(DiagramActionsPlugin.getInstance(),
				DiagramActionsStatusCodes.IGNORED_EXCEPTION_WARNING,
				"getPropertyValue", e); //$NON-NLS-1$
			return null;
		}
	}
    
    /**
     * A utility method to return the value of a given property for a given editpart
     * 
     * @@param  editPart The editpart
     * @@param  useExclusiveRead indicates if the read process willl be run in a read execlusive 
     *         operation or not
     * @@return The current value of the editpart's given property
     */
    protected Object getPropertyValue(
        final IGraphicalEditPart editPart,
        final String thePropertyId, boolean useExclusiveRead) {
        if (useExclusiveRead){
            return getPropertyValue(editPart,thePropertyId);
        }
        else {
             return getStructuralFeatureValue(editPart, thePropertyId);
        }
    }

	/**
	 * Gets the new property value (usualy from the item's control)
	 * 
	 * @@return the new property value
	 */
	protected abstract Object getNewPropertyValue();

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractContributionItem#isSelectionListener()
	 */
	protected boolean isSelectionListener() {
		return true;
	}
	
    /**
     * Override to return true to have this property action work on the shapes
     * in a <code>GroupEditPart</code> as if the shapes were multi-selected.
     * 
     * @@return true if this property action is to dig into the shapes of groups
     */
    protected boolean digIntoGroups() {
        return false;
    }
    
    /**
     * Gets the structural feature value of the property id on the editpart
     * passed in or one of the children if the editpart is a group and
     * {@@link #digIntoGroups()} returns true.
     * 
     * @@param editpart
     *            the editpart
     * @@param thePropertyId
     *            the property id
     */
    private Object getStructuralFeatureValue(IGraphicalEditPart editpart,
            final String thePropertyId) {
        ENamedElement element = PackageUtil.getElement(thePropertyId);
        if (element instanceof EStructuralFeature) {
            if (digIntoGroups() && editpart instanceof GroupEditPart) {
                editpart = (IGraphicalEditPart) editpart.getChildren().get(0);
            }
            return editpart
                .getStructuralFeatureValue((EStructuralFeature) element);
        }
        return null;
    }

    protected List getTargetEditParts(EditPart editpart) {
        if (digIntoGroups() && editpart instanceof GroupEditPart) {
            List targetEPs = new ArrayList();
            for (Iterator iterator = ((GroupEditPart) editpart)
                .getShapeChildren().iterator(); iterator.hasNext();) {
                EditPart childEP = (EditPart) iterator.next();
                targetEPs.addAll(super.getTargetEditParts(childEP));
            }
            return targetEPs;
        }
        return super.getTargetEditParts(editpart);
    }
    
    

}
@


1.11
log
@[111892] gmf_head crevells 071121 Group/Ungroup support
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2007 IBM Corporation and others.
d18 1
a30 1
import org.eclipse.jface.util.Assert;
@


1.10
log
@[159091] gmf_head ahunter 061013 Merge 1.0.2 fix to HEAD
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d14 2
d21 1
d25 1
d175 1
a175 5
						ENamedElement element = PackageUtil
							.getElement(thePropertyId);
						if (element instanceof EStructuralFeature)
							setResult(editPart
								.getStructuralFeatureValue((EStructuralFeature) element));
d204 1
a204 4
             ENamedElement element = PackageUtil.getElement(thePropertyId);
             if (element instanceof EStructuralFeature){
                 return editPart.getStructuralFeatureValue((EStructuralFeature) element);
             }
a205 1
        return null;
d221 48
@


1.9
log
@[159091] gmf_head mmostafa 061010  Deadlock caused by FontNameContributionItem
@
text
@d137 18
a187 32

	/**
	 * Gets the new property value (usualy from the item's control)
	 * 
	 * @@return the new property value
	 */
	protected abstract Object getNewPropertyValue();

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractContributionItem#isSelectionListener()
	 */
	protected boolean isSelectionListener() {
		return true;
	}
    
    /**
     * Returns the property value of the given property id of the current operation set's
     * 
     * The default implementation returns the current property value of the 
     * primary object in the operation set if not empty and <code>null</code> otherwise
     *  
     * @@see org.eclipse.gmf.runtime.diagram.ui.internal.actions.PropertyChangeAction#getNewPropertyValue()
     */
    protected Object getOperationSetPropertyValue(String id,boolean useReadExeclusive) {
        List set = getOperationSet();
        if (!set.isEmpty()) {
            IGraphicalEditPart primaryEditPart =
                (IGraphicalEditPart) set.get(set.size() - 1);
            return getPropertyValue(primaryEditPart, id,useReadExeclusive);
        }
        return null;
    }
d212 14
@


1.8
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d184 41
@


1.7
log
@bugzilla 111897 gmf-head tmacdoug 060511 No accelerators for line styles or zoom
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.7.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.7.2.2
log
@[159091] gmf_R1_0_maintenace mmostafa 061010  Deadlock caused by FontNameContributionItem
@
text
@a136 18
    
    /**
     * Returns the property value of the given property id of the current operation set's
     * 
     * The default implementation returns the current property value of the 
     * primary object in the operation set if not empty and <code>null</code> otherwise
     *  
     * @@see org.eclipse.gmf.runtime.diagram.ui.internal.actions.PropertyChangeAction#getNewPropertyValue()
     */
    protected Object getOperationSetPropertyValue(String id,boolean useReadExeclusive) {
        List set = getOperationSet();
        if (!set.isEmpty()) {
            IGraphicalEditPart primaryEditPart =
                (IGraphicalEditPart) set.get(set.size() - 1);
            return getPropertyValue(primaryEditPart, id,useReadExeclusive);
        }
        return null;
    }
a169 23
    
    /**
     * A utility method to return the value of a given property for a given editpart
     * 
     * @@param  editPart The editpart
     * @@param  useExclusiveRead indicates if the read process willl be run in a read execlusive 
     *         operation or not
     * @@return The current value of the editpart's given property
     */
    protected Object getPropertyValue(
        final IGraphicalEditPart editPart,
        final String thePropertyId, boolean useExclusiveRead) {
        if (useExclusiveRead){
            return getPropertyValue(editPart,thePropertyId);
        }
        else {
             ENamedElement element = PackageUtil.getElement(thePropertyId);
             if (element instanceof EStructuralFeature){
                 return editPart.getStructuralFeatureValue((EStructuralFeature) element);
             }
        }
        return null;
    }
@


1.6
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d126 1
a126 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.internal.PropertyChangeAction#getNewPropertyValue()
@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d18 1
d20 2
a21 4
import org.eclipse.jface.util.Assert;
import org.eclipse.ui.IWorkbenchPage;

import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
d25 3
a27 3
import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
import org.eclipse.gmf.runtime.emf.core.util.MetaModelUtil;
import org.eclipse.gmf.runtime.notation.View;
d148 21
a168 8
		return MEditingDomainGetter.getMEditingDomain((View)editPart.getModel()).runAsRead(new MRunnable() {
			public Object run() {
				ENamedElement element = MetaModelUtil.getElement(thePropertyId);
				if (element instanceof EStructuralFeature)
					return editPart.getStructuralFeatureValue((EStructuralFeature)element);
				return null;
			}
		});
@


1.4
log
@Bugzilla 109092: gmf_head sshaw 050923 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d24 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.internal.actions.PresentationContributionItem;
d39 1
a39 1
	extends PresentationContributionItem {
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d16 2
d27 1
d151 4
a154 1
				return editPart.getPropertyValue(thePropertyId);
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d23 1
a23 1
import com.ibm.xtools.notation.View;
@

