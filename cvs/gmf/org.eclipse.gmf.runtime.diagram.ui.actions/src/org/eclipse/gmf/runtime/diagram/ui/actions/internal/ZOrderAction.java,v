head	1.8;
access;
symbols
	v20081020-0700:1.8
	v20080917-1925:1.8
	v20080916-2008:1.8
	v20080722-1827:1.8
	v20080718-1700:1.8
	v20080718-1731:1.8
	R2_1_maintenance:1.8.0.6
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080603-1553:1.8
	v20080503-1740:1.8
	v20080425-1959:1.8
	v20080409-1326:1.8
	v20080407-2250:1.8
	v20080328-1605:1.8
	v20080222-1200:1.8
	v20080201-2010:1.8
	v20080118-1129:1.8
	v20080114-2222:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071108-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.4
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070608-1300:1.8
	v20070601-1400:1.8
	v20070518-1300:1.8
	bugzilla111892_group_support:1.8.0.2
	Root_bugzilla111892_group_support:1.8
	v20070427-0600:1.8
	v20070405-2000:1.8
	v20070330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.7
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070119-1200:1.5.2.1
	M4_20:1.6
	v20061218-1500:1.5.2.1
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.5.2.1
	v20061013-1330:1.6
	v20061012-1100:1.5.2.1
	v20060919-0800:1.5.2.1
	v20060907-1100:1.5
	M1_20:1.5
	v20060803-1200:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.8
date	2007.03.19.12.13.16;	author ahunter;	state Exp;
branches;
next	1.7;
commitid	59e545fe7e5b4567;

1.7
date	2007.03.15.14.39.35;	author crevells;	state Exp;
branches;
next	1.6;
commitid	2d3745f95aa74567;

1.6
date	2006.10.03.15.01.47;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.25.19.38.22;	author cmahoney;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2005.11.21.16.01.26;	author cmahoney;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.02.23.29.16;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.28.13;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.43;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.09.11.16.35.06;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[177562] gmf_head crevells 070319 Need updated icons for some actions
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions.internal;

import java.util.Iterator;

import org.eclipse.draw2d.XYLayout;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.UnexecutableCommand;
import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
import org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsMessages;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsPluginImages;
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
import org.eclipse.gmf.runtime.diagram.ui.requests.ZOrderRequest;
import org.eclipse.ui.IWorkbenchPage;

/**
 * This action is used to change the order of views within it's parent container
 */
/*
 * @@canBeSeenBy %level1
 */
public class ZOrderAction
	extends DiagramAction {

	/**
	 * Protected constructor so that object can not be instantiated directly the
	 * client should call the create methods
	 * 
	 * @@param workbenchPage
	 */
	protected ZOrderAction(IWorkbenchPage workbenchPage) {
		super(workbenchPage);
	}

	/**
	 * Creates the Bring to Front Action
	 * 
	 * @@param workbenchPage
	 * @@return ZOrderAction for Bring to Front
	 */
	public static ZOrderAction createBringToFrontAction(
			IWorkbenchPage workbenchPage) {
		ZOrderAction theAction = new ZOrderAction(workbenchPage);
		theAction.setId(ActionIds.ACTION_BRING_TO_FRONT);
		theAction.setText(DiagramUIActionsMessages.ZOrderAction_BringToFront_ActionLabelText);
		theAction.setToolTipText(DiagramUIActionsMessages.ZOrderAction_BringToFront_ActionToolTipText);

		theAction.setImageDescriptor(DiagramUIActionsPluginImages.DESC_BRING_TO_FRONT);
		theAction.setHoverImageDescriptor(DiagramUIActionsPluginImages.DESC_BRING_TO_FRONT);
		return theAction;
	}

	/**
	 * Creates the Bring Forward Action
	 * 
	 * @@param workbenchPage
	 * @@return ZOrderAction for Bring Forward
	 */
	public static ZOrderAction createBringForwardAction(
			IWorkbenchPage workbenchPage) {
		ZOrderAction theAction = new ZOrderAction(workbenchPage);
		theAction.setId(ActionIds.ACTION_BRING_FORWARD);
		theAction.setText(DiagramUIActionsMessages.ZOrderAction_BringForward_ActionLabelText);
		theAction.setToolTipText(DiagramUIActionsMessages.ZOrderAction_BringForward_ActionToolTipText);
		
		theAction.setImageDescriptor(DiagramUIActionsPluginImages.DESC_BRING_FORWARD);
		theAction.setHoverImageDescriptor(DiagramUIActionsPluginImages.DESC_BRING_FORWARD);
		return theAction;
	}

	/**
	 * Creates the Send to Back Action
	 * 
	 * @@param workbenchPage
	 * @@return ZOrderAction for Send to Back
	 */
	public static ZOrderAction createSendToBackAction(
			IWorkbenchPage workbenchPage) {
		ZOrderAction theAction = new ZOrderAction(workbenchPage);
		theAction.setId(ActionIds.ACTION_SEND_TO_BACK);
		theAction.setText(DiagramUIActionsMessages.ZOrderAction_SendToBack_ActionLabelText);
		theAction.setToolTipText(DiagramUIActionsMessages.ZOrderAction_SendToBack_ActionToolTipText);
		theAction.setImageDescriptor(DiagramUIActionsPluginImages.DESC_SEND_TO_BACK);
		theAction.setHoverImageDescriptor(DiagramUIActionsPluginImages.DESC_SEND_TO_BACK);
		return theAction;
	}

	/**
	 * Creates the Send Backward Action
	 * 
	 * @@param workbenchPage
	 * @@return ZOrderAction for Send Backward
	 */
	public static ZOrderAction createSendBackwardAction(
			IWorkbenchPage workbenchPage) {
		ZOrderAction theAction = new ZOrderAction(workbenchPage);
		theAction.setId(ActionIds.ACTION_SEND_BACKWARD);
		theAction.setText(DiagramUIActionsMessages.ZOrderAction_SendBackward_ActionLabelText);
		theAction.setToolTipText(DiagramUIActionsMessages.ZOrderAction_SendBackward_ActionToolTipText);
		theAction.setImageDescriptor(DiagramUIActionsPluginImages.DESC_SEND_BACWARD);
		theAction.setHoverImageDescriptor(DiagramUIActionsPluginImages.DESC_SEND_BACWARD);
		return theAction;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createTargetRequest()
	 */
	protected Request createTargetRequest() {
		return new ZOrderRequest(getId());
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#updateTargetRequest()
	 */
	protected void updateTargetRequest() {
		ZOrderRequest theRequest = (ZOrderRequest) getTargetRequest();
		theRequest.setPartsToOrder(getOperationSet());
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler#isSelectionListener()
	 */
	protected boolean isSelectionListener() {
		return true;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#getCommand()
	 */
	protected Command getCommand() {

		if (getOperationSet().isEmpty()) {
			return UnexecutableCommand.INSTANCE;
		}

		EditPart editPart = (EditPart) getOperationSet().get(0);
		return editPart.getParent().getCommand(getTargetRequest());
	}

	/**
	 * Action is enabled if the operation set's parent has XYLayout and they all
	 * share the same parent
	 * 
	 * @@see org.eclipse.gef.ui.actions.EditorPartAction#calculateEnabled()
	 */
	protected boolean calculateEnabled() {

		// If the selection list is empty
		if (getOperationSet().isEmpty()) {

			// disable this action
			return false;
		}

		// Get the first selected editpart
		EditPart editPart = (EditPart) getOperationSet().get(0);

		// Get the parent of the first selected editpart
		GraphicalEditPart parentEditPart = (GraphicalEditPart) editPart
			.getParent();

		if (parentEditPart == null)
			return false;

		// bugzilla 156733: disable this action if the parent is not editable
		if ((parentEditPart instanceof IEditableEditPart)
				&& !((IEditableEditPart) parentEditPart).isEditModeEnabled()) {
			return false;
		}
		
		// disable this action if the parent doesn't have an XYLayout
		if (!(parentEditPart.getContentPane().getLayoutManager() instanceof XYLayout))
			return false;

		// Iterate over all the selected edit parts
		for (Iterator iter = getOperationSet().iterator(); iter.hasNext();) {

			// Get the next selected editpart
			EditPart selectedEditPart = (EditPart) iter.next();

			// Verify that the editparts share the same parent
			if (parentEditPart != selectedEditPart.getParent()) {
				return false;
			}
			
			// bugzilla 156733: disable this action if the selected edit part is not editable
			if ((selectedEditPart instanceof IEditableEditPart)
					&& !((IEditableEditPart) selectedEditPart)
							.isEditModeEnabled()) {
				return false;
			}
		}

		// Enable this action
		return true;
	}
}
@


1.7
log
@[177562] gmf_head crevells 070315 Need updated icons for some actions
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@a26 1
import org.eclipse.gmf.runtime.diagram.ui.internal.l10n.DiagramUIPluginImages;
d80 2
a81 2
		theAction.setImageDescriptor(DiagramUIPluginImages.DESC_BRING_FORWARD);
		theAction.setHoverImageDescriptor(DiagramUIPluginImages.DESC_BRING_FORWARD);
d97 2
a98 2
		theAction.setImageDescriptor(DiagramUIPluginImages.DESC_SEND_TO_BACK);
		theAction.setHoverImageDescriptor(DiagramUIPluginImages.DESC_SEND_TO_BACK);
d114 2
a115 2
		theAction.setImageDescriptor(DiagramUIPluginImages.DESC_SEND_BACWARD);
		theAction.setHoverImageDescriptor(DiagramUIPluginImages.DESC_SEND_BACWARD);
@


1.5
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d26 1
d188 6
d208 7
@


1.5.2.1
log
@[156733] gmf_R1_0_maintenance ldamus 060911 org.eclipse.gmf.runtime.diagram.ui.actions AddNoteAction, ZOrderAction, ArrangeAction do not respect org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
a25 1
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
a186 6
		// bugzilla 156733: disable this action if the parent is not editable
		if ((parentEditPart instanceof IEditableEditPart)
				&& !((IEditableEditPart) parentEditPart).isEditModeEnabled()) {
			return false;
		}
		
a200 7
			
			// bugzilla 156733: disable this action if the selected edit part is not editable
			if ((selectedEditPart instanceof IEditableEditPart)
					&& !((IEditableEditPart) selectedEditPart)
							.isEditModeEnabled()) {
				return false;
			}
@


1.4
log
@Bugzilla#116030 gmf_head cmahoney 051121 Diagram ActionIds should be public
@
text
@d24 3
a26 2
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramActionsResourceManager;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
a27 1
import org.eclipse.jface.resource.ImageDescriptor;
a38 16
	private static final String BRING_TO_FRONT_LABEL_TEXT = "ZOrderAction.BringToFront.ActionLabelText"; //$NON-NLS-1$

	private static final String BRING_TO_FRONT_TOOLTIP = "ZOrderAction.BringToFront.ActionToolTipText"; //$NON-NLS-1$

	private static final String BRING_FORWARD_LABEL_TEXT = "ZOrderAction.BringForward.ActionLabelText"; //$NON-NLS-1$

	private static final String BRING_FORWARD_TOOLTIP = "ZOrderAction.BringForward.ActionToolTipText"; //$NON-NLS-1$

	private static final String SEND_TO_BACK_LABEL_TEXT = "ZOrderAction.SendToBack.ActionLabelText"; //$NON-NLS-1$

	private static final String SEND_TO_BACK_TOOLTIP = "ZOrderAction.SendToBack.ActionToolTipText"; //$NON-NLS-1$

	private static final String SEND_BACKWARD_LABEL_TEXT = "ZOrderAction.SendBackward.ActionLabelText"; //$NON-NLS-1$

	private static final String SEND_BACKWARD_TOOLTIP = "ZOrderAction.SendBackward.ActionToolTipText"; //$NON-NLS-1$

d59 2
a60 2
		theAction.setText(DiagramActionsResourceManager.getI18NString(BRING_TO_FRONT_LABEL_TEXT));
		theAction.setToolTipText(DiagramActionsResourceManager.getI18NString(BRING_TO_FRONT_TOOLTIP));
d62 2
a63 5
		ImageDescriptor enabledImage = DiagramActionsResourceManager
			.getInstance().getImageDescriptor(
				DiagramActionsResourceManager.IMAGE_BRING_TO_FRONT);
		theAction.setImageDescriptor(enabledImage);
		theAction.setHoverImageDescriptor(enabledImage);
d77 2
a78 2
		theAction.setText(DiagramActionsResourceManager.getI18NString(BRING_FORWARD_LABEL_TEXT));
		theAction.setToolTipText(DiagramActionsResourceManager.getI18NString(BRING_FORWARD_TOOLTIP));
d80 2
a81 4
		ImageDescriptor enabledImage = DiagramResourceManager.getInstance()
			.getImageDescriptor(DiagramResourceManager.IMAGE_BRING_FORWARD);
		theAction.setImageDescriptor(enabledImage);
		theAction.setHoverImageDescriptor(enabledImage);
d95 4
a98 6
		theAction.setText(DiagramActionsResourceManager.getI18NString(SEND_TO_BACK_LABEL_TEXT));
		theAction.setToolTipText(DiagramActionsResourceManager.getI18NString(SEND_TO_BACK_TOOLTIP));
		ImageDescriptor enabledImage = DiagramResourceManager.getInstance()
			.getImageDescriptor(DiagramResourceManager.IMAGE_SEND_TO_BACK);
		theAction.setImageDescriptor(enabledImage);
		theAction.setHoverImageDescriptor(enabledImage);
d112 4
a115 6
		theAction.setText(DiagramActionsResourceManager.getI18NString(SEND_BACKWARD_LABEL_TEXT));
		theAction.setToolTipText(DiagramActionsResourceManager.getI18NString(SEND_BACKWARD_TOOLTIP));
		ImageDescriptor enabledImage = DiagramResourceManager.getInstance()
		.getImageDescriptor(DiagramResourceManager.IMAGE_SEND_BACWARD);
		theAction.setImageDescriptor(enabledImage);
		theAction.setHoverImageDescriptor(enabledImage);
@


1.3
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d22 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.ActionIds;
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a11 1

d22 2
a23 5
import org.eclipse.ui.IWorkbenchPage;

import org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.Images;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.Messages;
d25 1
d27 2
d31 1
a31 2
 * This action is used to change the order of views within it's parent
 * container
d36 2
a37 1
public class ZOrderAction extends PresentationAction {
d40 1
d42 1
d44 1
d46 1
d48 1
d50 1
d52 1
a54 1
	
d58 1
d67 1
d71 2
a72 1
	public static ZOrderAction createBringToFrontAction(IWorkbenchPage workbenchPage) {
d75 8
a82 4
		theAction.setText(Messages.getString( BRING_TO_FRONT_LABEL_TEXT ) );
		theAction.setToolTipText(Messages.getString( BRING_TO_FRONT_TOOLTIP ) );
		theAction.setImageDescriptor(Images.DESC_ACTION_BRING_TO_FRONT);
		theAction.setHoverImageDescriptor(Images.DESC_ACTION_BRING_TO_FRONT);
d88 1
d92 2
a93 1
	public static ZOrderAction createBringForwardAction(IWorkbenchPage workbenchPage) {
d96 7
a102 4
		theAction.setText(Messages.getString( BRING_FORWARD_LABEL_TEXT ) );
		theAction.setToolTipText(Messages.getString( BRING_FORWARD_TOOLTIP ) );
		theAction.setImageDescriptor(Images.DESC_ACTION_BRING_FORWARD);
		theAction.setHoverImageDescriptor(Images.DESC_ACTION_BRING_FORWARD);
d108 1
d112 2
a113 1
	public static ZOrderAction createSendToBackAction(IWorkbenchPage workbenchPage) {
d116 6
a121 4
		theAction.setText(Messages.getString( SEND_TO_BACK_LABEL_TEXT ) );
		theAction.setToolTipText(Messages.getString( SEND_TO_BACK_TOOLTIP ) );
		theAction.setImageDescriptor(Images.DESC_ACTION_SEND_TO_BACK);
		theAction.setHoverImageDescriptor(Images.DESC_ACTION_SEND_TO_BACK);
d127 1
d131 2
a132 1
	public static ZOrderAction createSendBackwardAction(IWorkbenchPage workbenchPage) {
d135 6
a140 4
		theAction.setText(Messages.getString( SEND_BACKWARD_LABEL_TEXT ) );
		theAction.setToolTipText(Messages.getString( SEND_BACKWARD_TOOLTIP ) );
		theAction.setImageDescriptor(Images.DESC_ACTION_SEND_BACWARD);
		theAction.setHoverImageDescriptor(Images.DESC_ACTION_SEND_BACWARD);
d144 4
a147 2
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#createTargetRequest()
d153 4
a156 2
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#updateTargetRequest()
d163 3
a165 1
	/* (non-Javadoc)
d172 4
a175 2
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#getCommand()
d178 1
a178 1
		
d182 1
a182 1
		
d188 3
a190 2
	 * Action is enabled if the operation set's parent has XYLayout 
	 * and they all share the same parent
d196 2
a197 2
		if( getOperationSet().isEmpty() ) {
			
d206 3
a208 2
		GraphicalEditPart parentEditPart = (GraphicalEditPart) editPart.getParent();
		
d211 2
a212 2
		
		// disable this action if the parent doesn't have an XYLayout 
d216 1
a216 1
		// Iterate over all the selected edit parts		
d218 1
a218 1
			
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 7
/****************************************************************************
  Licensed Materials - Property of IBM
  (C) Copyright IBM Corp. 2004. All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or disclosure
  restricted by GSA ADP Schedule Contract with IBM Corp.
*****************************************************************************/
@

