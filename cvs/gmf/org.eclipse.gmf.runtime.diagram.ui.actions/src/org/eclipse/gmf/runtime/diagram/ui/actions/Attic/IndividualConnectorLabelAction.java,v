head	1.6;
access;
symbols
	v20080917-1925:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20051030:1.5;
locks; strict;
comment	@# @;


1.6
date	2005.11.02.23.29.17;	author sshaw;	state dead;
branches;
next	1.5;

1.5
date	2005.09.23.18.37.33;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.22.15.42.35;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.28.14;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.47.55;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.49;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@/******************************************************************************
 * Copyright (c) 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.eclipse.gef.EditPart;
import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.Messages;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;
import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
import org.eclipse.gmf.runtime.emf.core.util.MetaModelUtil;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.jface.util.Assert;
import org.eclipse.ui.IWorkbenchPage;

/**
 * @@author mboos
 * 
 * An action that toggles between showing and hiding labels on connectors and
 * diagrams.
 */
public abstract class IndividualConnectorLabelAction
	extends BooleanPropertyAction {

	private final String[] labelSemanticHints;

	/**
	 * Constructor
	 * @@param workbenchPage the active workbenchPage 
	 * @@param labelSemanticHints the semantic hints to use to figure out the target edit parts for this action 
	 */
	protected IndividualConnectorLabelAction(IWorkbenchPage workbenchPage,
			String[] labelSemanticHints) {
		super(
			workbenchPage,
			MetaModelUtil.getID(NotationPackage.eINSTANCE.getView_Visible()),
			Messages
				.getString("ConstrainedFlowLayoutEditPolicy.changeVisibilityCommand.label")); //$NON-NLS-1$
		Assert.isNotNull(labelSemanticHints);
		this.labelSemanticHints = labelSemanticHints;
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#getTargetEdiParts(org.eclipse.gef.EditPart)
	 */
	protected List getTargetEdiParts(EditPart editpart) {
		EditPart targetEP = null;
		List editParts = new ArrayList();
		if (editpart instanceof ConnectionNodeEditPart) {
			final ConnectionNodeEditPart conEP = (ConnectionNodeEditPart) editpart;
			MEditingDomain editingDomain = MEditingDomainGetter.getMEditingDomain((View)editpart.getModel());
			for (int i = 0; i < getLabelSemanticHints().length; i++) {
				final int index = i;
				targetEP = (EditPart) editingDomain.runAsRead(new MRunnable() {

					public Object run() {
						return conEP
							.getChildBySemanticHint(getLabelSemanticHints()[index]);
					}
				});
				if (targetEP != null)
					editParts.add(targetEP);
			}

		}
		return (editParts.isEmpty()) ? Collections.EMPTY_LIST
			: editParts;
	}

	/**
	 * Returns the request connector label semantic hint
	 * 
	 * @@return The request connector label semantic hint
	 */
	protected String[] getLabelSemanticHints() {
		return labelSemanticHints;
	}

}@


1.5
log
@Bugzilla 109092: gmf_head sshaw 050923 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@@


1.4
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@a18 3
import org.eclipse.jface.util.Assert;
import org.eclipse.ui.IWorkbenchPage;

a21 1
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
d24 2
d27 2
d50 1
a50 1
			Properties.ID_ISVISIBLE,
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d25 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d26 1
a26 1
import com.ibm.xtools.notation.View;
@

