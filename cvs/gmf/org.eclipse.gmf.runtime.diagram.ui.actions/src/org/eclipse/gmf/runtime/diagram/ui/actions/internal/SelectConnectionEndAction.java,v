head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080917-1925:1.2
	v20080916-2008:1.2
	v20080722-1827:1.2
	v20080718-1700:1.2
	v20080718-1731:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080603-1553:1.2
	v20080503-1740:1.2
	v20080425-1959:1.2
	v20080409-1326:1.2
	v20080407-2250:1.2
	v20080328-1605:1.2
	v20080222-1200:1.2
	v20080201-2010:1.2
	v20080118-1129:1.2
	v20080114-2222:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071108-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070608-1300:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	bugzilla111892_group_support:1.1.0.2
	Root_bugzilla111892_group_support:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.05.17.20.57.44;	author mmostafa;	state Exp;
branches;
next	1.1;
commitid	244c464cc1c84567;

1.1
date	2007.05.16.19.47.48;	author mmostafa;	state Exp;
branches;
next	;
commitid	261d464b5fe34567;


desc
@@


1.2
log
@Fixing Java Doc and Copyright
@
text
@/******************************************************************************
 * Copyright (c) 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions.internal;

import java.util.Collections;
import java.util.List;

import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction;
import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsMessages;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.requests.SelectConnectionEndRequest;
import org.eclipse.ui.IWorkbenchPage;


/**
 * @@author mmostafa
 * 
 * Action to select one of the connection's ends
 *
 */
public class SelectConnectionEndAction extends DiagramAction{
	
	private boolean isSource = false;

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createTargetRequest()
	 */
	protected Request createTargetRequest() {
		return new SelectConnectionEndRequest(isSource);
	}
	
	
	/**
     * creats a select connection source action
	 * @@param workbenchPage
	 * @@return action that will select the connection source
	 */
	static SelectConnectionEndAction createSelectConnectionSourceAction(IWorkbenchPage workbenchPage){
		return new SelectConnectionEndAction(workbenchPage,true); 
	}
	
    /**
     * creats a select connection target action
     * @@param workbenchPage
     * @@return action that will select the connection target
     */
	static SelectConnectionEndAction createSelectConnectionTargetAction(IWorkbenchPage workbenchPage){
		return new SelectConnectionEndAction(workbenchPage,false);
	}

	/**
     * constructor
	 * @@param workbenchPage
	 * @@param true means select connection source, false means select connection end
	 */
	public SelectConnectionEndAction(IWorkbenchPage workbenchPage, boolean source) {
	        super(workbenchPage);
	        isSource = source;
	        if (isSource){
	        	setText(DiagramUIActionsMessages.SelectConnectionEndAction_SelectSource_ActionLabelText);
	        	setText(DiagramUIActionsMessages.SelectConnectionEndAction_SelectSource_ActionToolTipText);
	        }else {
	        	setText(DiagramUIActionsMessages.SelectConnectionEndAction_SelectTarget_ActionLabelText);
	        	setText(DiagramUIActionsMessages.SelectConnectionEndAction_SelectTarget_ActionToolTipText);
	        }
	        
			
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#isSelectionListener()
	 */
	protected boolean isSelectionListener() {
		return false;
	}
	
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#calculateEnabled()
	 */
	protected boolean calculateEnabled() {
		List operationSet = getOperationSet();
		if (operationSet.size()!=1)
			return false;
		return true;
	}


	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#doRun(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected void doRun(IProgressMonitor progressMonitor) {
		List operationSet = getOperationSet();
		if (operationSet.isEmpty())
			return;
		ConnectionEditPart connectionEditPart = 
			(ConnectionEditPart)operationSet.get(0);
		GraphicalEditPart editPartToSelect = null;
		if (isSource){
			editPartToSelect = (GraphicalEditPart)connectionEditPart.getSource();
		}
		else {
			editPartToSelect = (GraphicalEditPart)connectionEditPart.getTarget();
		}
		editPartToSelect.getViewer().reveal(editPartToSelect);
        editPartToSelect.getViewer().select(editPartToSelect);
	}


	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#getTargetEditParts(org.eclipse.gef.EditPart)
	 */
	protected List getTargetEditParts(EditPart editpart) {
		return Collections.singletonList(editpart);
	}
	
	
}
@


1.1
log
@[187350] gmf_head mmostafa 070516 We need a Select Connection Source/Target action
@
text
@d1 11
d27 7
d38 3
d46 5
d55 5
d64 5
d83 3
d91 3
d102 3
d123 3
@

