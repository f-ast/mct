head	1.8;
access;
symbols
	v20081020-0700:1.8
	v20080917-1925:1.8
	v20080916-2008:1.8
	v20080722-1827:1.8
	v20080718-1700:1.8
	v20080718-1731:1.8
	R2_1_maintenance:1.8.0.6
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080603-1553:1.8
	v20080503-1740:1.8
	v20080425-1959:1.8
	v20080409-1326:1.8
	v20080407-2250:1.8
	v20080328-1605:1.8
	v20080222-1200:1.8
	v20080201-2010:1.8
	v20080118-1129:1.8
	v20080114-2222:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071108-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.4
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070608-1300:1.8
	v20070601-1400:1.8
	v20070518-1300:1.8
	bugzilla111892_group_support:1.8.0.2
	Root_bugzilla111892_group_support:1.8
	v20070427-0600:1.8
	v20070405-2000:1.8
	v20070330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070221-1500:1.8
	v20070208-1800:1.8
	v20070119-1200:1.6
	M4_20:1.6
	v20061218-1500:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.6
	v20061013-1330:1.6
	v20061012-1100:1.6
	v20060919-0800:1.6
	v20060907-1100:1.6
	M1_20:1.6
	v20060803-1200:1.6
	v20060721-1130:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060616-1200:1.6
	v20060531-1730:1.6
	v20060519-0800:1.6
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051201-1800:1.6
	I20051124-2000:1.6
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.4;
locks; strict;
comment	@# @;


1.8
date	2007.01.12.16.44.54;	author crevells;	state Exp;
branches;
next	1.7;
commitid	69dc45a7bb064567;

1.7
date	2007.01.10.22.07.50;	author crevells;	state Exp;
branches;
next	1.6;
commitid	4a9c45a563b54567;

1.6
date	2005.11.21.16.01.26;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.02.23.29.17;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.22.15.42.35;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.28.13;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.47.54;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.42;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@gmf_head crevells 061012 Updated year in copyright in missed files
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.actions.internal;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.RequestConstants;
import org.eclipse.gef.requests.CreateRequest;
import org.eclipse.gmf.runtime.diagram.core.util.ViewType;
import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
import org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction;
import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramGraphicalViewer;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.swt.widgets.Display;
import org.eclipse.ui.IWorkbenchPage;

/**
 * This is the action handler for the diagram menu.   Adds actions to 
 * create note and text views.
 *
 * @@author schafe
 * @@canBeSeenBy %level1
 */
public class CreateViewAction extends DiagramAction {
	
	protected String semanticHint;
	
	/**
	 * Constructor
	 * 
	 * @@param workbenchPage, the workbench page
	 * @@param id, the id of this action
	 * @@param semanticHint
	 * @@param label, the menu item label the user will see
	 * @@param imageDescriptor, the image next to the label that the user sees
	 */
		public CreateViewAction(
			IWorkbenchPage workbenchPage,
			String actionId,
			String semanticHint,
			String label,
			ImageDescriptor imageDescriptor) {
			
			super(workbenchPage);
			setId(actionId);
			setSemanticHint(semanticHint);
			setText(label);
			setToolTipText(label);
			setImageDescriptor(imageDescriptor);						
		}
		
	/**
	 * Creates a new request to create the shape view.
	 * 
	 * @@return A request to create the shape view.
	 */
	protected Request createTargetRequest() {
		
		ViewDescriptor viewDescriptor;
	
		if (getId().equals(ActionIds.ACTION_ADD_NOTE)) {
			viewDescriptor = new ViewDescriptor(null, Node.class,
				ViewType.NOTE, getPreferencesHint());
		} else {
			viewDescriptor = new ViewDescriptor(null, Node.class,
				ViewType.TEXT, getPreferencesHint());
		}
		
		return new CreateViewRequest(viewDescriptor);
	}	

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler#isSelectionListener()
	 */
	protected boolean isSelectionListener() {
		return true;
	}	
	
	protected void setSemanticHint(String hint){
		this.semanticHint = hint;		
	}
	
	protected String getSemanticHint(){
		return this.semanticHint;
	}

	protected void updateTargetRequest() {
		super.updateTargetRequest();

		CreateViewRequest req = (CreateViewRequest) getTargetRequest();
		req.setLocation(getMouseLocation());
	}
    
    protected void doRun(IProgressMonitor progressMonitor) {
        super.doRun(progressMonitor);
        selectAddedObject();
    }
    
    /**
     * Selects the newly added shape view(s) by default.
     */
    protected void selectAddedObject() {
        Object result = ((CreateRequest) getTargetRequest()).getNewObject();
        if (!(result instanceof Collection)) {
            return;
        }
        final List editparts = new ArrayList(1);

        IDiagramGraphicalViewer viewer = getDiagramGraphicalViewer();
        if (viewer == null) {
            return;
        }

        Map editpartRegistry = viewer.getEditPartRegistry();
        for (Iterator iter = ((Collection) result).iterator(); iter.hasNext();) {
            Object viewAdaptable = iter.next();
            if (viewAdaptable instanceof IAdaptable) {
                Object editPart = editpartRegistry
                    .get(((IAdaptable) viewAdaptable).getAdapter(View.class));
                if (editPart != null)
                    editparts.add(editPart);
            }
        }

        if (!editparts.isEmpty()) {
            viewer.setSelection(new StructuredSelection(editparts));

            // automatically put the first shape into edit-mode
            Display.getCurrent().asyncExec(new Runnable() {

                public void run() {
                    EditPart editPart = (EditPart) editparts.get(0);
                    editPart.performRequest(new Request(
                        RequestConstants.REQ_DIRECT_EDIT));
                }
            });
        }
    }
}
@


1.7
log
@[154286] gmf_head crevells 061010 Random shape position on a diagram when using add from popup
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.6
log
@Bugzilla#116030 gmf_head cmahoney 051121 Diagram ActionIds should be public
@
text
@d14 9
d24 2
d29 1
d33 1
d35 2
d109 52
a160 11
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#updateTargetRequest()
	 */
//	protected void updateTargetRequest() {
//		super.updateTargetRequest();
//
//		Point p = Point.SINGLETON.getCopy();
//		MapMode.translateToDP(p);
//		CreateViewRequest req = (CreateViewRequest)getTargetRequest();
//		req.setLocation(p);
//	}
@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d16 1
a17 1
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.ActionIds;
@


1.4
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d16 1
a16 1
import org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction;
d31 1
a31 1
public class CreateViewAction extends PresentationAction {
d95 1
a95 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#updateTargetRequest()
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d15 1
a15 3
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.ui.IWorkbenchPage;

a17 1
import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
d21 2
d70 1
a70 1
				Properties.NOTE, getPreferencesHint());
d73 1
a73 1
				Properties.TEXT, getPreferencesHint());
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d21 1
a21 1
import com.ibm.xtools.notation.Node;
@

