abstract public class AbstractActionDelegate implements IPartListener, IRepeatableAction {
abstract public class AbstractActionDelegate implements IActionWithProgress, IPartListener {
abstract public class AbstractActionDelegate implements IActionWithProgress, IPartListener {
abstract public class AbstractActionDelegate implements IActionWithProgress, IPartListener {
abstract public class AbstractActionDelegate implements IActionWithProgress, IPartListener {
abstract public class AbstractActionDelegate implements IActionWithProgress, IPartListener {
abstract public class AbstractActionDelegate implements IActionWithProgress, IPartListener {
abstract public class AbstractActionDelegate implements IActionWithProgress, IPartListener {
abstract public class AbstractActionHandler extends Action implements ICommandManagerChangeListener, IDisposableAction, IPropertyListener, IRepeatableAction, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, ICommandManagerChangeListener, IDisposableAction, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, ICommandManagerChangeListener, IDisposableAction, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractActionHandler extends Action implements IActionWithProgress, IDisposableAction, IOperationHistoryListener, IPropertyListener, ISelectionChangedListener {
abstract public class AbstractBorderedShapeEditPart extends ShapeNodeEditPart implements IBorderedShapeEditPart {
abstract public class AbstractBorderedShapeEditPart extends ShapeNodeEditPart implements IBorderedShapeEditPart {
abstract public class AbstractCommand implements ICommand {
    final protected static String CANCELLED_MESSAGE = ResourceManager.getInstance ().getString ("AbstractCommand._INFO_.cancelOperation");
abstract public class AbstractCommand implements ICommand {
abstract public class AbstractCommand implements ICommand {
    protected AbstractCommand (String label) {
    protected CommandResult doRedo ();
    protected CommandResult doUndo ();
    protected CommandResult newCancelledCommandResult ();
    protected CommandResult newErrorCommandResult (String errorMessage);
    protected CommandResult newOKCommandResult ();
    protected CommandResult newOKCommandResult (Object returnValue);
    protected CommandResult newWarningCommandResult (String warningMessage, Object returnValue);
    protected String getPluginId ();
    final protected static String EMPTY_STRING = "";
    public ICommand compose (ICommand command);
abstract public class AbstractCommand extends AbstractOperation implements ICommand {
    abstract protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    abstract protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public AbstractCommand (String label) {
    public AbstractCommand (String label, List affectedFiles) {
    public CommandResult getCommandResult ();
    public ICommand compose (IUndoableOperation operation);
    public ICommand reduce ();
    public IStatus execute (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public IStatus redo (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public IStatus undo (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
abstract public class AbstractCommand extends AbstractOperation implements ICommand {
    public CMValidator getValidator ();
    public boolean involvesReadOnlyNonWorkSpaceFiles ();
    public boolean isExecutable ();
    public boolean isRedoable ();
    public void execute (IProgressMonitor progressMonitor);
    public void redo ();
    public void undo ();
abstract public class AbstractCommand extends AbstractOperation implements ICommand {
abstract public class AbstractCommand extends AbstractOperation implements ICommand {
    public IStatus execute (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public IStatus redo (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
abstract public class AbstractCommand extends AbstractOperation implements ICommand {
    public IStatus execute (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public IStatus redo (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
abstract public class AbstractCommand extends AbstractOperation implements ICommand {
abstract public class AbstractCommand extends AbstractOperation implements ICommand, ICommandWithSettableResult {
    public void internalSetResult (CommandResult result);
abstract public class AbstractContributionItem extends ContributionItem implements ICommandManagerChangeListener, IRepeatableAction, ISelectionChangedListener {
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, ICommandManagerChangeListener, ISelectionChangedListener {
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, ICommandManagerChangeListener, ISelectionChangedListener {
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, ICommandManagerChangeListener, ISelectionChangedListener {
    final public void commandManagerChanged (CommandManagerChangeEvent event) {
        PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
            public void run ();
        );
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, ICommandManagerChangeListener, ISelectionChangedListener {
    final public void commandManagerChanged (CommandManagerChangeEvent event) {
        PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
        );
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
    public void historyNotification (OperationHistoryEvent event) {
        IUndoableOperation operation = event.getOperation ();
        if (operation != null) {
            IUndoContext partContext = getUndoContext ();
            if (partContext != null && operation.hasContext (partContext)) {
                PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
                );
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
    public void historyNotification (OperationHistoryEvent event) {
        IUndoableOperation operation = event.getOperation ();
        if (operation != null) {
            IUndoContext partContext = getUndoContext ();
            if (partContext != null && operation.hasContext (partContext)) {
                PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
                );
abstract public class AbstractContributionItem extends ContributionItem implements IActionWithProgress, IOperationHistoryListener, ISelectionChangedListener {
    public void historyNotification (OperationHistoryEvent event) {
        int type = event.getEventType ();
        if (type == OperationHistoryEvent.UNDONE || type == OperationHistoryEvent.REDONE || type == OperationHistoryEvent.OPERATION_ADDED || type == OperationHistoryEvent.OPERATION_CHANGED || type == OperationHistoryEvent.OPERATION_NOT_OK || type == OperationHistoryEvent.OPERATION_REMOVED) {
            IUndoableOperation operation = event.getOperation ();
            if (operation != null) {
                IUndoContext partContext = getUndoContext ();
                if (partContext != null && operation.hasContext (partContext)) {
                    PlatformUI.getWorkbench ().getDisplay ().syncExec (new Runnable () {
                    );
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
    private class PluginActionContributionItem extends ActionContributionItem {
        public void setPartSelector (IPartSelector partSelector);
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
    private class PluginActionContributionItem extends ActionContributionItem {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
    private class PluginMenuManager implements IMenuManager {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
    private class PluginMenuManager extends MenuManager {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
    private class PluginActionContributionItem extends ActionContributionItem {
        public PluginActionContributionItem (IAction action) {
        public boolean isVisible ();
    private class PluginGroupMarker extends GroupMarker {
        public PluginGroupMarker (String groupName) {
        public boolean isVisible ();
    private class PluginMenuManager implements IMenuManager {
        public IContributionItem [] getItems ();
        public IContributionItem find (String id);
        public IContributionItem findUsingPath (String path);
        public IContributionItem remove (IContributionItem item);
        public IContributionItem remove (String id);
        public IContributionManagerOverrides getOverrides ();
        public IMenuManager findMenuUsingPath (String path);
        public PluginMenuManager (IMenuManager menuManager) {
        public String getId ();
        public boolean getRemoveAllWhenShown ();
        public boolean isDirty ();
        public boolean isDynamic ();
        public boolean isEmpty ();
        public boolean isEnabled ();
        public boolean isGroupMarker ();
        public boolean isSeparator ();
        public boolean isVisible ();
        public void add (IAction action);
        public void add (IContributionItem item);
        public void addMenuListener (IMenuListener listener);
        public void appendToGroup (String groupName, IAction action);
        public void appendToGroup (String groupName, IContributionItem item);
        public void dispose ();
        public void fill (Composite parent);
        public void fill (CoolBar parent, int index);
        public void fill (Menu parent, int index);
        public void fill (ToolBar parent, int index);
        public void insertAfter (String id, IAction action);
        public void insertAfter (String id, IContributionItem item);
        public void insertBefore (String id, IAction action);
        public void insertBefore (String id, IContributionItem item);
        public void markDirty ();
        public void prependToGroup (String groupName, IAction action);
        public void prependToGroup (String groupName, IContributionItem item);
        public void removeAll ();
        public void removeMenuListener (IMenuListener listener);
        public void saveWidgetState ();
        public void setParent (IContributionManager parent);
        public void setRemoveAllWhenShown (boolean removeAll);
        public void setVisible (boolean visible);
        public void update ();
        public void update (String id);
        public void update (boolean force);
        public void updateAll (boolean force);
    private class PluginSeparator extends Separator {
        public PluginSeparator () {
        public PluginSeparator (String groupName) {
        public boolean isVisible ();
    final public void updateActionBars (IActionBars actionBars, IWorkbenchPartDescriptor partDescriptor);
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
    private class ActionContributionItemAdapter implements IAdaptable {
        public ActionContributionItemAdapter (String actionId, IWorkbenchPartDescriptor partDescriptor) {
    private class PluginActionContributionItem extends ActionContributionItem {
abstract public class AbstractContributionItemProvider extends AbstractProvider implements IContributionDescriptorReader, IContributionItemProvider {
    private class ActionContributionItemAdapter implements IAdaptable {
        public ActionContributionItemAdapter (String actionId, IWorkbenchPartDescriptor partDescriptor, IPartSelector partSelector) {
    private class PluginActionContributionItem extends ActionContributionItem {
        public void setPartSelector (IPartSelector partSelector);
abstract public class AbstractCustomSectionParent extends AbstractModelerPropertySection {
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl, int kind);
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl, int kind, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, int leftAlignment);
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl, int kind, boolean lowermost);
    protected Button createRadio (Composite parent, Control topControl, boolean lowermost, Image image, int kind);
    protected Button createRadio (Composite parent, Image image, String label, Control leftControl, int leftAlignment, Control topControl, int topAlignment, Control rightControl, int rightAlignment, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost, int kind);
    protected Button createRadio (Composite parent, Image image, String label, int kind, int leftAlignment, int rightAlignment, Control topControl, int topAlignment, boolean lowermost);
    protected Button createRadio (Composite parent, Image image, String label, int kind, int leftAlignment, int rightAlignment, int topAlignment, boolean lowermost);
    protected Button createRadio (Composite parent, String label, int kind, Control topControl, boolean lowermost);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftControl, Control topControl, boolean lowermost, boolean rightmost, int kind, boolean horizontalNotVertical, int min, int max, int inc, int pageInc);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftWidget, Control topWidget, boolean rightlast, int kind, boolean horizontalNotVertical);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftWidget, int kind);
    protected Text createText (Composite parent, String label, Control leftControl, Control topControl, String initialText, int kind, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost);
    abstract public static class ModelUpdater implements ModifyListener, SelectionListener {
abstract public class AbstractCustomSectionParent extends AbstractModelerPropertySection {
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl);
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, int leftAlignment);
    protected Button createCheckbox (Composite parent, String label, Control topControl, Control leftControl, boolean lowermost);
    protected Button createRadio (Composite parent, Control topControl, boolean lowermost, Image image);
    protected Button createRadio (Composite parent, Image image, String label, Control leftControl, int leftAlignment, Control topControl, int topAlignment, Control rightControl, int rightAlignment, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    protected Button createRadio (Composite parent, Image image, String label, int leftAlignment, int rightAlignment, Control topControl, int topAlignment, boolean lowermost);
    protected Button createRadio (Composite parent, Image image, String label, int leftAlignment, int rightAlignment, int topAlignment, boolean lowermost);
    protected Button createRadio (Composite parent, String label, Control topControl, boolean lowermost);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftControl, Control topControl, boolean lowermost, boolean rightmost, boolean horizontalNotVertical, int min, int max, int inc, int pageInc);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftWidget);
    protected Spinner createSpinnerWidget (Composite parent, String label, Control leftWidget, Control topWidget, boolean rightlast, boolean horizontalNotVertical);
    protected Text createExtendedText (Composite parent, String label, Control leftControl, Control topControl, String initialText, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost);
    protected Text createText (Composite parent, String label, Control leftControl, Control topControl, String initialText, boolean defaultIsTop, boolean defaultIsLeft, boolean lowermost, boolean rightmost);
    public DateTime createDateWidget (Composite parent, String label, Control leftControl, Control topControl, Control rightControl, Control bottomControl, boolean defaultIsLeft, boolean defaultIsTop, boolean lowermost, boolean rightmost);
    public boolean shouldUseExtraSpace (); abstract public static class ModelUpdater implements ModifyListener, SelectionListener {
        public void startListeningTo (CCombo combo);
        public void stopListeningTo (CCombo combo);
abstract public class AbstractDeleteFromAction extends PresentationAction {
abstract public class AbstractDeleteFromAction extends DiagramAction {
abstract public class AbstractDeleteFromAction extends DiagramAction {
abstract public class AbstractDeleteFromAction extends DiagramAction {
abstract public class AbstractEditCommandRequest implements IEditCommandRequest {
abstract public class AbstractEditCommandRequest implements IEditCommandRequest {
    protected AbstractEditCommandRequest (TransactionalEditingDomain editingDomain) {
abstract public class AbstractEditCommandRequest implements IEditCommandRequest {
abstract public class AbstractEditCommandRequest implements IEditCommandRequest {
abstract public class AbstractEditCommandRequest implements IEditCommandRequest {
abstract public class AbstractEditCommandRequest implements IEditCommandRequest {
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
    protected boolean approveRequest (IEditCommandRequest request);
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
abstract public class AbstractEditHelper implements IEditHelper {
public class AbstractEditHelperAdvice implements IEditHelperAdvice {
public class AbstractEditHelperAdvice implements IEditHelperAdvice {
public class AbstractEditHelperAdvice implements IEditHelperAdvice {
public class AbstractEditHelperAdvice implements IEditHelperAdvice {
    public boolean approveRequest (IEditCommandRequest request);
    public void configureRequest (IEditCommandRequest request);
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
abstract public class AbstractEditPartProvider extends AbstractProvider implements IEditPartProvider, Properties {
public class AbstractElementSelectionInput implements IElementSelectionInput {
    public AbstractElementSelectionInput (List types, IAdaptable context, ElementSelectionScope scope, String filter) {
    public List getTypes ();
    public void setTypes (List types);
public class AbstractElementSelectionInput implements IElementSelectionInput {
    public AbstractElementSelectionInput (IFilter filter, IAdaptable context, ElementSelectionScope scope, String input) {
    public IFilter getFilter ();
    public void setFilter (IFilter filter);
abstract public class AbstractElementSelectionProvider extends AbstractProvider implements IElementSelectionProvider {
abstract public class AbstractElementSelectionProvider extends AbstractProvider implements IElementSelectionProvider {
    protected IElementSelectionInput getElementSelectionInput ();
    protected IElementSelectionListener getElementSelectionListener ();
    protected String getJobName ();
    protected void fireEndOfMatchesEvent ();
    protected void fireMatchingObjectEvent (IMatchingObject matchingObject);
    protected void fireMatchingObjectEvent (IMatchingObjectEvent matchingObjectEvent);
    public ElementSelectionServiceJob getMatchingObjects (IElementSelectionInput input, IElementSelectionListener listener);
    public void run (IProgressMonitor monitor);
abstract public class AbstractElementSelectionProvider extends AbstractProvider implements IElementSelectionProvider {
abstract public class AbstractElementSelectionProvider extends AbstractProvider implements IElementSelectionProvider {
abstract public class AbstractExpression implements IModelExpression {
abstract public class AbstractExpression implements IModelExpression {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
    abstract protected LayoutManager getFigureLayoutManager ();
    abstract protected void setFigureLayoutManager (LayoutManager layoutManager);
    protected void layoutChanged (Layout layout);
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
    protected Shape getShape ();
    protected org.eclipse.draw2d.geometry.Dimension getCornerDimensions (int width, int height);
    protected org.eclipse.draw2d.geometry.Dimension getDraw2dDimension (Dimension dimension);
    protected org.eclipse.draw2d.geometry.Point getDraw2DPoint (Point point);
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
abstract public class AbstractFigureEditPart extends ShapeNodeEditPart {
public class AbstractLabelViewFactory extends AbstractNodeViewFactory {
public class AbstractLabelViewFactory extends BasicNodeViewFactory {
public class AbstractLabelViewFactory extends BasicNodeViewFactory {
abstract public class AbstractLabelViewFactory extends BasicNodeViewFactory {
abstract public class AbstractModelActionDelegate extends AbstractActionDelegate {
abstract public class AbstractModelActionDelegate extends AbstractActionDelegate {
    protected IStatus getStatus ();
    abstract protected TransactionalEditingDomain getEditingDomain ();
    protected boolean isReadOnly ();
abstract public class AbstractModelActionDelegate extends AbstractActionDelegate {
abstract public class AbstractModelActionDelegate extends AbstractActionDelegate {
abstract public class AbstractModelActionFilterProvider extends AbstractActionFilterProvider {
abstract public class AbstractModelActionFilterProvider extends AbstractActionFilterProvider {
abstract public class AbstractModelActionHandler extends AbstractActionHandler {
abstract public class AbstractModelActionHandler extends AbstractActionHandler {
    protected IStatus getStatus ();
    abstract protected TransactionalEditingDomain getEditingDomain ();
abstract public class AbstractModelActionHandler extends AbstractActionHandler {
abstract public class AbstractModelActionHandler extends AbstractActionHandler {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
    protected static String VALUE_CHANGED_STRING = EMFUIMessages.AbstractPropertySection_UndoIntervalPropertyString;
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
    protected static String VALUE_CHANGED_STRING = DiagramUIPropertiesMessages.AbstractPropertySection_UndoIntervalPropertyString;
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {
    protected static String VALUE_CHANGED_STRING = ResourceManager.getInstance ().getString ("AbstractPropertySection.UndoIntervalPropertyString");
abstract public class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {
    protected static String VALUE_CHANGED_STRING = EMFUIMessages.AbstractPropertySection_UndoIntervalPropertyString;
abstract public class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {
abstract public class AbstractModelerPropertySection extends AbstractPropertySection implements IDemuxedMListener {
    protected DemuxingMListener eventListener = new DemuxingMListener (this);
    public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement);
    public void handleResourceDirtiedEvent (Notification notification, Resource resource);
    public void handleResourceExportedEvent (Notification notification, Resource resource);
    public void handleResourceImportedEvent (Notification notification, Resource resource);
    public void handleResourceLoadedEvent (Notification notification, Resource resource);
    public void handleResourceSavedEvent (Notification notification, Resource resource);
    public void handleResourceUnloadedEvent (Notification notification, Resource resource, EObject modelRoot);
    public void handleUndoIntervalClosedEvent (Notification notification, MUndoInterval undoInterval);
abstract public class AbstractModelerPropertySection extends AbstractPropertySection {
    protected DemultiplexingListener eventListener = new DemultiplexingListener (getFilter ()) {
        protected void handleNotification (TransactionalEditingDomain domain, Notification notification);
    ;
abstract public class AbstractNamingStrategy implements NamingStrategy {
    public String getForEditFeature (AbstractNodeMapping nme, NodeLabelMapping labelMapping);
abstract public class AbstractNamingStrategy implements NamingStrategy {
abstract public class AbstractNamingStrategy implements NamingStrategy {
abstract public class AbstractNamingStrategy implements NamingStrategy {
abstract public class AbstractNamingStrategy implements NamingStrategy {
    public UniqueValueDispenser getCache ();
    public void setCache (UniqueValueDispenser dispenser);
abstract public class AbstractNamingStrategy implements NamingStrategy {
    public void setNamesDispenser (NamesDispenser dispenser);
abstract public class AbstractNamingStrategy implements NamingStrategy {
abstract public class AbstractNamingStrategy implements NamingStrategy {
abstract public class AbstractNamingStrategy implements NamingStrategy {
    public void setNamesDispenser (NamesDispenser dispenser);
abstract public class AbstractNamingStrategy implements NamingStrategy {
abstract public class AbstractNamingStrategy implements NamingStrategy {
    final protected NamingStrategy getDelegate ();
    protected static boolean isEmpty (String s);
    public AbstractNamingStrategy () {
    public AbstractNamingStrategy (NamingStrategy chained) {
    public String get (CanvasMapping cme);
    public String get (CompartmentMapping cm);
    public String get (LabelMapping labelMapping);
    public String get (LinkMapping lme);
    public String get (NodeMapping nme);
abstract public class AbstractNamingStrategy implements NamingStrategy {
    protected String createClassName (String s);
    protected String getCompartmentHostPrefix (CompartmentMapping mapping);
    protected String getLabelHostPrefix (LabelMapping mapping);
    protected String getValidClassName (String s);
    protected boolean isEmpty (String s);
    final protected NamingStrategy getChainedNamingStrategy ();
    final protected NamingStrategy getPrefixNamingStrategy ();
    public AbstractNamingStrategy (String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
    public String get (CanvasMapping mapping);
    public String get (CompartmentMapping mapping);
    public String get (LabelMapping mapping);
    public String get (LinkMapping mapping);
    public String get (NodeMapping mapping);
abstract public class AbstractNotationPropertiesSection extends AbstractModelerPropertySection {
    protected PaintListener createPainter (); protected PaintListener painter;
    public void dispose ();
abstract public class AbstractNotationPropertiesSection extends AbstractModelerPropertySection {
public class AbstractProviderConfiguration {
    private static class MethodDescriptor {
    private static class StaticMethodDescriptor extends MethodDescriptor {
public class AbstractProviderConfiguration {
    private static class MethodDescriptor {
        protected String dataForIntialize = NULL;
        protected boolean isInitialized ();
    private static class StaticMethodDescriptor extends MethodDescriptor {
        public void initialize ();
public class AbstractProviderConfiguration {
public class AbstractProviderConfiguration {
abstract public class AbstractRenderedImage implements RenderedImage {
    public AbstractRenderedImage (byte [] buff, RenderInfo key) {
abstract public class AbstractRenderedImage implements RenderedImage {
    public AbstractRenderedImage (final byte [] buff, RenderedImageKey key) {
abstract public class AbstractRenderedImage implements RenderedImage {
    protected Image img = null;
abstract public class AbstractRenderedImage implements RenderedImage {
    final public synchronized Image getSWTImage ();
abstract public class AbstractRenderedImage implements RenderedImage {
abstract public class AbstractRenderedImage implements RenderedImage {
abstract public class AbstractRenderedImage implements RenderedImage {
    final public synchronized Image getSWTImage ();
abstract public class AbstractRenderedImage implements RenderedImage {
public class AbstractShapeViewFactory extends AbstractNodeViewFactory {
public class AbstractShapeViewFactory extends BasicNodeViewFactory {
public class AbstractShapeViewFactory extends BasicNodeViewFactory {
abstract public class AbstractShapeViewFactory extends BasicNodeViewFactory {
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
    protected EClass eStaticClass (); protected EMap properties = null;
    public EMap getProperties ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    protected EMap < String, String > properties = null;
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
    protected EMap < String, String > properties = null;
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
    protected EMap < String, String > properties;
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
abstract public class AbstractToolEntryImpl extends EntryBaseImpl implements AbstractToolEntry {
public class AbstractToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
public class AbstractToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object);
public class AbstractToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AbstractToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class AbstractToolItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class AbstractToolItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class AbstractToolItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AbstractToolItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
abstract public class AbstractTransactionalCommand extends AbstractEMFOperation implements ICommand {
    public CMValidator getValidator ();
    public boolean involvesReadOnlyNonWorkSpaceFiles ();
    public boolean isExecutable ();
    public boolean isRedoable ();
    public void execute (IProgressMonitor progressMonitor);
    public void redo ();
    public void undo ();
abstract public class AbstractTransactionalCommand extends AbstractEMFOperation implements ICommand {
abstract public class AbstractTransactionalCommand extends AbstractEMFOperation implements ICommand {
abstract public class AbstractTransactionalCommand extends AbstractEMFOperation implements ICommand {
abstract public class AbstractTransactionalCommand extends AbstractEMFOperation implements ICommand {
abstract public class AbstractTransactionalCommand extends AbstractEMFOperation implements ICommand, ICommandWithSettableResult {
    public void internalSetResult (CommandResult result);
abstract public class AbstractTranscoder {
    public void transcode (InputStream input, OutputStream output) throws TranscoderException;
abstract public class AbstractTranscoder {
    public void transcode (InputStream input, OutputStream output, String url) throws TranscoderException;
abstract public class AbstractTranscoder {
abstract public class AbstractTranscoder {
public class AbstractValidator implements EValidator {
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map context);
public class AbstractValidator implements EValidator {
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
public class AbstractValidator implements EValidator {
    protected static EObject getRootTargetObject (Map context);
    protected static ExpressionCache getExpressionCache (String language, Map context);
    protected static IModelExpression getExpression (String language, String body, EClassifier contextClassifier, IParseEnvironment env, Map context);
    protected static IModelExpression getExpression (String language, String body, EClassifier contextClassifier, Map context);
public class AbstractValidator implements EValidator {
    protected static EObject getRootTargetObject (Map < Object, Object > context);
    protected static ExpressionCache getExpressionCache (String language, Map < Object, Object > context);
    protected static IModelExpression getExpression (String language, String body, EClassifier contextClassifier, IParseEnvironment env, Map < Object, Object > context);
    protected static IModelExpression getExpression (String language, String body, EClassifier contextClassifier, Map < Object, Object > context);
abstract public class AbstractViewFactory implements ViewFactory {
abstract public class AbstractViewFactory implements ViewFactory {
public class AbstractViewProvider extends AbstractProvider implements IViewProvider {
public class AbstractViewProvider extends AbstractProvider implements IViewProvider {
public class AbstractViewProvider extends AbstractProvider implements IViewProvider {
public class AbstractViewProvider extends AbstractProvider implements IViewProvider {
public class AccessibleClassNodeStrategy implements Strategy {
    public void filter (Collection < EObject > soFar, Hierarchy hierarchy);
public class AccessibleClassNodeStrategy implements Strategy < EClass > {
    public void filter (Collection < EClass > soFar, Hierarchy hierarchy);
public class ActionFilterService extends Service implements IActionFilterProvider, ICommandManagerChangeListener {
    public void commandManagerChanged (CommandManagerChangeEvent event);
public class ActionFilterService extends Service implements IActionFilterProvider, IOperationHistoryListener {
    public void historyNotification (OperationHistoryEvent event);
public class ActionFilterService extends Service implements IActionFilterProvider, IOperationHistoryListener {
public class ActionFilterService extends Service implements IActionFilterProvider, IOperationHistoryListener {
public class ActionFilterService extends Service implements IActionFilterProvider, IOperationHistoryListener {
public class ActionFilterService extends Service implements IActionFilterProvider, IOperationHistoryListener {
    private static class CacheKey {
        public CacheKey () {
        public CacheKey (String name, String value) {
        public String name;
        public String value;
        public boolean equals (Object obj);
        public int hashCode ();
public interface ActionIds {
public interface ActionIds {
    final public String ACTION_TEXT_ALIGNMENT_CENTER = "textAlignmentCenterAction";
    final public String ACTION_TEXT_ALIGNMENT_LEFT = "textAlignmentLeftAction";
    final public String ACTION_TEXT_ALIGNMENT_RIGHT = "textAlignmentRightAction";
    final public String MENU_TEXT_ALIGNMENT = "textAlignmentMenu";
public interface ActionIds {
public interface ActionIds {
    final public String ACTION_ARROW_TYPE_SOURCE_NONE = "arrowTypeSourceNoneAction";
    final public String ACTION_ARROW_TYPE_SOURCE_OPEN = "arrowTypeSourceOpenAction";
    final public String ACTION_ARROW_TYPE_SOURCE_SOLID = "arrowTypeSourceSolidAction";
    final public String ACTION_ARROW_TYPE_TARGET_NONE = "arrowTypeTargetNoneAction";
    final public String ACTION_ARROW_TYPE_TARGET_OPEN = "arrowTypeTargetOpenAction";
    final public String ACTION_ARROW_TYPE_TARGET_SOLID = "arrowTypeTargetSolidAction";
    final public String ACTION_LINE_TYPE_DASH = "lineTypeDashAction";
    final public String ACTION_LINE_TYPE_DASH_DOT = "lineTypeDashDotAction";
    final public String ACTION_LINE_TYPE_DASH_DOT_DOT = "lineTypeDashDotDotAction";
    final public String ACTION_LINE_TYPE_DOT = "lineTypeDotAction";
    final public String ACTION_LINE_TYPE_SOLID = "lineTypeSolidAction";
    final public String ACTION_LINE_WIDTH_FIVE = "lineWidthFiveAction";
    final public String ACTION_LINE_WIDTH_FOUR = "lineWidthFourAction";
    final public String ACTION_LINE_WIDTH_ONE = "lineWidthOneAction";
    final public String ACTION_LINE_WIDTH_THREE = "lineWidthThreeAction";
    final public String ACTION_LINE_WIDTH_TWO = "lineWidthTwoAction";
    final public String MENU_ARROW_TYPE = "arrowTypeMenu";
    final public String MENU_ARROW_TYPE_SOURCE = "arrowTypeSourceMenu";
    final public String MENU_ARROW_TYPE_TARGET = "arrowTypeTargetMenu";
    final public String MENU_LINE_TYPE = "lineTypeMenu";
    final public String MENU_LINE_WIDTH = "lineWidthMenu";
public interface ActionIds {
public interface ActionIds {
    final public String MENU_ARRANGE_TOOLBAR = "arrangeMenuToolbar";
    final public String MENU_SELECT_TOOLBAR = "selectMenuToolbar";
public interface ActionIds {
public interface ActionIds {
    final public String SELECT_CONNECTION_SOURCE = "selectConnectionSource";
    final public String SELECT_CONNECTION_TARGET = "selectConnectionTarget";
public interface ActionIds {
public interface ActionIds {
    final public String ACTION_GROUP = "groupAction";
    final public String ACTION_UNGROUP = "ungroupAction";
public class ActionManager {
    private void repeatActionInProgressMonitorDialog (final IRepeatableAction act, boolean cancelable);
    private void runActionInProgressMonitorDialog (final IRepeatableAction act, boolean cancelable);
    public String getRepeatLabel ();
    final public static String REPEAT_LABEL_PREFIX = ResourceManager.getI18NString ("ActionManager.repeat.label.prefix");
    public void repeat ();
    public void run (final IRepeatableAction theAction);
public class ActionManager {
    private void runActionInProgressMonitorDialog (final IActionWithProgress act, boolean cancelable);
    public void run (final IActionWithProgress theAction);
public class ActionManager {
public class ActionManager {
    public ActionManager (IOperationHistory operationHistory) {
public class ActionManager {
    public ActionManager (CommandManager commandManager) {
public class ActionManager {
public class ActionManagerChangeEvent extends EventObject {
    public ActionManagerChangeEvent (ActionManager source, IRepeatableAction action) {
    public IRepeatableAction getAction ();
public class ActionManagerChangeEvent extends EventObject {
    public ActionManagerChangeEvent (ActionManager source, IActionWithProgress action) {
    public IActionWithProgress getAction ();
public class ActionMenuManager extends MenuManager {
public class ActionMenuManager extends MenuManager {
    protected IAction defaultAction = null;
package org.eclipse.gmf.internal.graphdef.codegen;
public class Activator extends Plugin {
    @Override
    public static ResourceManager createResourceEngine (MapModeCodeGenStrategy strategy);
package org.eclipse.gmf.internal.runtime.lite;
public class Activator extends AbstractUIPlugin {
    @Override
    public static Activator getDefault ();
    public static ImageDescriptor getImageDescriptor (String imageFilePath); final public static String PLUGIN_ID = "org.eclipse.gmf.runtime.lite";
    public void logError (String error);
    public void logError (String error, Throwable throwable);
    public void logWarning (String error);
    public void logWarning (String error, Throwable throwable);
    public void start (BundleContext context) throws Exception;
    public void stop (BundleContext context) throws Exception;
package org.eclipse.gmf.internal.runtime.lite;
public class Activator extends AbstractUIPlugin {
    @Override
    public static Activator getDefault ();
    public static ImageDescriptor getImageDescriptor (String imageFilePath); final public static String PLUGIN_ID = "org.eclipse.gmf.runtime.lite";
    public void logError (String error);
    public void logError (String error, Throwable throwable);
    public void logWarning (String error);
    public void logWarning (String error, Throwable throwable);
    public void start (BundleContext context) throws Exception;
    public void stop (BundleContext context) throws Exception;
package org.eclipse.gmf.internal.xpand;
public class Activator extends Plugin {
    @Override
    public void start (BundleContext context) throws Exception;
    @Override
    public static EPackage findMetaModel (String nsURI);
    public static ResourceManager getResourceManager (IProject context);
    public static String getId ();
    public static void log (IStatus status);
    public static void logError (Exception e);
    public static void logWarn (String message);
    public static void registerModelSource (MetaModelSource modelSource);
    public static void registerResourceManager (IProject project, ResourceManager resourceManager);
public class Activator extends Plugin {
    public static void registerResourceManager (IProject project, ResourceManager resourceManager);
public class Activator extends Plugin {
    final private IResourceChangeListener myRootsTracker = new IResourceChangeListener () {
        public synchronized void resourceChanged (IResourceChangeEvent event);
    ;
    public static ResourceManager getResourceManager (final IFile file);
public class ActivityFilterProviderDescriptor extends Service.ProviderDescriptor {
    protected ActivityFilterProviderDescriptor (IConfigurationElement element) {
public class ActivityFilterProviderDescriptor extends Service.ProviderDescriptor {
    public ActivityFilterProviderDescriptor (IConfigurationElement element) {
public class ActivityFilterProviderDescriptor extends Service.ProviderDescriptor {
public class ActivityFilterProviderDescriptor extends Service.ProviderDescriptor {
public class AddCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public AddCommand (IAdaptable parent, IAdaptable child) {
    public AddCommand (IAdaptable parent, IAdaptable child, int index) {
public class AddCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public AddCommand (TransactionalEditingDomain editingDomain, IAdaptable parent, IAdaptable child) {
    public AddCommand (TransactionalEditingDomain editingDomain, IAdaptable parent, IAdaptable child, int index) {
public class AddNoteAction extends AttachedShapeAction {
public class AddNoteAction extends AttachShapeAction {
public class AddPopupBarTool extends AbstractPopupBarTool implements DragTracker {
    protected Command getCommand ();
    protected Request createTargetRequest ();
public class AddPopupBarTool extends PopupBarTool {
package org.eclipse.gmf.runtime.lite.properties;
abstract public class AdvancedPropertySection extends org.eclipse.ui.views.properties.tabbed.AdvancedPropertySection {
    @Override
    public void refresh ();
    protected CommandStack getCommandStack (ArrayList < ? > selection);
    protected Object transformSelection (Object selected);
    protected PropertySourceProvider getPropertySourceProvider ();
    abstract protected AdapterFactory getItemProvidersAdapterFactory ();
package org.eclipse.gmf.runtime.diagram.ui.properties.sections;
public class AdvancedPropertySection extends AbstractModelerPropertySection {
    protected IPropertySourceProvider getPropertySourceProvider (); protected PropertySheetPage page;
    protected String getTableLabel ();
    protected boolean addToEObjectList (Object object);
    protected void handleException (MSLActionAbandonedException exception);
    public MFilter getFilter ();
    public boolean shouldUseExtraSpace ();
    public void createControls (final Composite parent, TabbedPropertySheetPage aTabbedPropertySheetPage);
    public void dispose ();
    public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement);
    public void handleElementDeletedEvent (Notification notification, EObject owner, EObject oldElement);
    public void refresh ();
    public void update (final Notification notification, EObject element);
public class AdvancedPropertySection extends AbstractModelerPropertySection {
    protected void handleException (MSLActionAbandonedException exception);
    public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement);
public class AdvancedPropertySection extends AbstractModelerPropertySection {
public class AdvancedSubGraph extends Subgraph {
public class AdvancedSubGraph extends Subgraph {
public class AdviceBindingDescriptor implements IEditHelperAdviceDescriptor {
public class AdviceBindingDescriptor implements IEditHelperAdviceDescriptor {
    public String toString ();
public class AlignAction extends PresentationAction {
public class AlignAction extends DiagramAction {
public class AlignAction extends DiagramAction {
public class AlignAction extends DiagramAction {
final public class Alignment extends AbstractEnumerator {
    final public static Alignment BOTTOM_LITERAL = new Alignment (BOTTOM, "Bottom");
    final public static Alignment CENTER_LITERAL = new Alignment (CENTER, "Center");
    final public static Alignment LEFT_LITERAL = new Alignment (LEFT, "Left");
    final public static Alignment RIGHT_LITERAL = new Alignment (RIGHT, "Right");
    final public static Alignment TOP_LITERAL = new Alignment (TOP, "Top");
final public class Alignment extends AbstractEnumerator {
    public static Alignment getByName (String name); final public static Alignment BOTTOM_LITERAL = new Alignment (BOTTOM, "Bottom", "Bottom");
    final public static Alignment CENTER_LITERAL = new Alignment (CENTER, "Center", "Center");
    final public static Alignment LEFT_LITERAL = new Alignment (LEFT, "Left", "Left");
    final public static Alignment RIGHT_LITERAL = new Alignment (RIGHT, "Right", "Right");
    final public static Alignment TOP_LITERAL = new Alignment (TOP, "Top", "Top");
public class AlignmentFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class AlignmentFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class AlignmentFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AlignmentFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AllCompartmentsAction extends PropertyChangeAction {
public class AllCompartmentsAction extends PropertyChangeAction {
    @Override
public class AllCompartmentsAction extends PropertyChangeAction {
public class AllCompartmentsAction extends PropertyChangeAction {
public class AnimatableScrollPane extends ScrollPane {
public class AnimatableScrollPane extends ScrollPane {
    public void validate ();
public class AnimatableScrollPane extends ScrollPane {
public class AnimatableScrollPane extends ScrollPane {
    protected void createHorizontalScrollBar ();
    public ScrollBar basicGetHorizontalScrollBar ();
public class AnimatableZoomManager extends ZoomManager {
public class AnimatableZoomManager extends ZoomManager {
    protected void fireAnimatedZoomEnded ();
public class AnnotatedDefinitionValidator extends AbstractValidator implements EValidator {
    private static class ContextData {
        public ContextData (ContextProvider contextProvider, Map environment) {
            this.contextClass = contextProvider;
            this.environment = environment;
    protected boolean validateMetaModel (EModelElement modelElement, DiagnosticChain diagnostics, Map context);
    public ContextData getContextBinding (EObject eObject, EObject [] contextHolder, Map context);
    public ValueSpecDef getDefinition (EClass metaClass, EObject modelElement, DiagnosticChain diagnostics, DefData data, Map context);
    public ValueSpecDef getDefinition (EObject eObject, DiagnosticChain diagnostics, Map context);
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map context);
    public static ContextProvider getContextClass (EStructuralFeature bindFeature, final Map validationContext);
public class AnnotatedDefinitionValidator extends AbstractValidator implements EValidator {
    private static class ContextData {
        public ContextData (ContextProvider contextProvider, Map < String, TypeProvider > environment) {
            this.contextClass = contextProvider;
            this.environment = environment;
    protected boolean validateMetaModel (EModelElement modelElement, DiagnosticChain diagnostics, Map < Object, Object > context);
    public ContextData getContextBinding (EObject eObject, EObject [] contextHolder, Map < Object, Object > context);
    public ValueSpecDef getDefinition (EClass metaClass, EObject modelElement, DiagnosticChain diagnostics, DefData data, Map < Object, Object > context);
    public ValueSpecDef getDefinition (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public static ContextProvider getContextClass (EStructuralFeature bindFeature, final Map < Object, Object > validationContext);
public class AnnotatedOclValidator extends AbstractValidator implements EValidator {
    private static class ConstraintHandler {
public class AnnotatedOclValidator extends AbstractValidator implements EValidator {
    private static class ConstraintHandler {
public class AnnotatedOclValidator extends AbstractValidator implements EValidator {
    private static class ConstraintHandler {
public class AnnotatedOclValidator extends AbstractValidator implements EValidator {
    private static class ConstraintHandler {
public class AnnotatedOclValidator extends AbstractValidator implements EValidator {
    private static class ConstraintHandler {
        protected boolean handleEAnnotation (EAnnotation annotation, DiagnosticChain diagnostics, Map context);
        protected boolean handleEAnnotation (EAnnotation annotation, EObject contextInstance, DiagnosticChain diagnostics, Map context);
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map context);
public class AnnotatedOclValidator extends AbstractValidator implements EValidator {
    private static class ConstraintHandler {
        protected boolean handleEAnnotation (EAnnotation annotation, DiagnosticChain diagnostics, Map < Object, Object > context);
        protected boolean handleEAnnotation (EAnnotation annotation, EObject contextInstance, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
final public class Annotations {
final public class Annotations {
    final public static String SEVERITY = "severity";
    final public static String SEVERITY_ERROR = "error";
    final public static String SEVERITY_INFO = "info";
    final public static String SEVERITY_WARN = "warn";
final public class Annotations {
    final public static class Meta {
final public class Annotations {
    final public static class Meta {
        @SuppressWarnings("hiding")
        final public static String OCL_KEY = "ocl";
public class AppearancePreferencePage extends AbstractPreferencePage {
public class AppearancePreferencePage extends AbstractPreferencePage {
    protected static void setDefaultFontPreference (IPreferenceStore store);
public class ApplyAppearancePropertiesRequest extends Request {
    public Dictionary getPropertiesFor (String semanticHint);
    public Set getSemanticHints ();
    public void setProperties (Map map);
public class ApplyAppearancePropertiesRequest extends Request {
    public View getViewToCopyFrom ();
    public void setViewToCopyFrom (View viewToCopyFrom);
public class ArrangeAction extends DiagramAction {
public class ArrangeAction extends DiagramAction {
public class ArrangeAction extends DiagramAction {
public class ArrangeAction extends DiagramAction {
public class ArrangeAction extends PresentationAction {
public class ArrangeAction extends DiagramAction {
public class ArrangeMenuManager extends ActionMenuManager {
public class ArrangeMenuManager extends ActionMenuManager {
    public ArrangeMenuManager (IAction action) {
interface ArrowStyle extends NotationObject, Style {
interface ArrowStyle extends Style {
public class ArrowStyleImpl extends NotationObjectImpl implements ArrowStyle {
    protected ArrowType arrowSource = ARROW_SOURCE_EDEFAULT;
    protected ArrowType arrowTarget = ARROW_TARGET_EDEFAULT;
public class ArrowStyleImpl extends NotationEObjectImpl implements ArrowStyle {
    final protected static int ARROW_SOURCE_EFLAG = 0x3 << ARROW_SOURCE_EFLAG_OFFSET;
    final protected static int ARROW_SOURCE_EFLAG_DEFAULT = ArrowType.VALUES.indexOf (ARROW_SOURCE_EDEFAULT) << ARROW_SOURCE_EFLAG_OFFSET;
    final protected static int ARROW_SOURCE_EFLAG_OFFSET = 8;
    final protected static int ARROW_TARGET_EFLAG = 0x3 << ARROW_TARGET_EFLAG_OFFSET;
    final protected static int ARROW_TARGET_EFLAG_DEFAULT = ArrowType.VALUES.indexOf (ARROW_TARGET_EDEFAULT) << ARROW_TARGET_EFLAG_OFFSET;
    final protected static int ARROW_TARGET_EFLAG_OFFSET = 10;
public class ArrowStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ArrowStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class AuditContainerImpl extends EObjectImpl implements AuditContainer {
    protected EClass eStaticClass (); protected EList audits = null;
    protected EList childContainers = null;
    public EList getAudits ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class AuditContainerImpl extends EObjectImpl implements AuditContainer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < AuditContainer > childContainers = null;
    protected EList < AuditRule > audits = null;
    public EList < AuditContainer > getChildContainers ();
public class AuditContainerImpl extends EObjectImpl implements AuditContainer {
    protected EList < AuditContainer > childContainers = null;
    protected EList < AuditRule > audits = null;
public class AuditContainerImpl extends EObjectImpl implements AuditContainer {
    protected EList < AuditContainer > childContainers;
    protected EList < AuditRule > audits;
public class AuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class AuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class AuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AuditedMetricTargetImpl extends EObjectImpl implements AuditedMetricTarget {
    protected MetricRule metric = null;
public class AuditedMetricTargetImpl extends EObjectImpl implements AuditedMetricTarget {
    protected MetricRule metric;
public class AuditedMetricTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class AuditedMetricTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class AuditedMetricTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AuditedMetricTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
    protected RuleTarget target = null;
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
    protected Auditable target = null;
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
    protected Auditable target = null;
    protected Constraint rule = null;
public class AuditRuleImpl extends EObjectImpl implements AuditRule {
    protected Auditable target;
    protected Constraint rule;
public class AuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class AuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class AuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class AuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class AuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class AutoSizeAction extends PresentationAction {
public class AutoSizeAction extends DiagramAction {
public class AutoSizeAction extends DiagramAction {
public class AutoSizeAction extends DiagramAction {
public class AutoSizeAction extends DiagramAction {
public class AutoSizeAction extends DiagramAction {
public class AutoSizeAction extends DiagramAction {
public class AutoSizeAction extends DiagramAction {
abstract public class BaseExternalNodeLabelEditPart extends AbstractGraphicalEditPart {
    protected org.eclipse.draw2d.geometry.Point getLabelLocation (org.eclipse.draw2d.IFigure parent); protected org.eclipse.gmf.runtime.lite.edit.parts.update.IUpdatableEditPart.Refresher boundsRefresher = new org.eclipse.gmf.runtime.lite.edit.parts.update.IUpdatableEditPart.Refresher () {
    ;
    public BaseExternalNodeLabelEditPart (org.eclipse.gmf.runtime.notation.View view) {
abstract public class BaseExternalNodeLabelEditPart extends AbstractGraphicalEditPart {
    protected IExternallyUpdatableEditPart.ExternalRefresher boundsRefresher = new IExternallyUpdatableEditPart.ExternalRefresher () {
    ;
    public BaseExternalNodeLabelEditPart (View view) {
abstract public class BaseExternalNodeLabelEditPart extends AbstractGraphicalEditPart {
    protected IExternallyUpdatableEditPart.ExternalRefresher boundsRefresher = new IExternallyUpdatableEditPart.ExternalRefresher () {
        public boolean isAffectingEvent (Notification msg);
        public void refresh ();
    ;
abstract public class BaseExternalNodeLabelEditPart extends BaseExternalLabelEditPart {
public class BaseSlidableAnchor extends AbstractConnectionAnchor {
public class BaseSlidableAnchor extends AbstractConnectionAnchor implements OrthogonalConnectionAnchor {
public class BaseSlidableAnchor extends AbstractConnectionAnchor implements OrthogonalConnectionAnchor {
public class BaseSlidableAnchor extends AbstractConnectionAnchor {
public class BaseSlidableAnchor extends AbstractConnectionAnchor {
public class BaseSlidableAnchor extends AbstractConnectionAnchor implements OrthogonalConnectionAnchor {
[BaseTreeEditPart-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BaseTreeEditPart-3.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'BaseTreeEditPart-4.java' as a [program], at or near:
[BaseTreeEditPart-4.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BaseTreeEditPart-4.java, Txl/api_clone_java.Txl] : TXL0192E line 197 of BaseTreeEditPart-4.java - Syntax error at or near:
[BaseTreeEditPart-5.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BaseTreeEditPart-5.java, Txl/api_clone_java.Txl] : TXL0192E line 197 of BaseTreeEditPart-5.java - Syntax error at or near:
[BaseTreeEditPart-6.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BaseTreeEditPart-6.java, Txl/api_clone_java.Txl] : TXL0192E line 197 of BaseTreeEditPart-6.java - Syntax error at or near:
[BaseTreeEditPart-7.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BaseTreeEditPart-7.java, Txl/api_clone_java.Txl] : TXL0192E line 212 of BaseTreeEditPart-7.java - Syntax error at or near:
[BaseTreeEditPart-8.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BaseTreeEditPart-8.java, Txl/api_clone_java.Txl] : TXL0192E line 215 of BaseTreeEditPart-8.java - Syntax error at or near:
public class BasicFontImpl extends EObjectImpl implements BasicFont {
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class BasicFontImpl extends EObjectImpl implements BasicFont {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class BasicFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class BasicFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class BasicFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BasicFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BasicGenModelAccess implements GenModelAccess {
    @SuppressWarnings("unchecked")
public class BasicGenModelAccess implements GenModelAccess {
public class BasicNodeViewFactory extends AbstractViewFactory {
public class BasicNodeViewFactory extends AbstractViewFactory {
public class BasicNodeViewFactory extends AbstractViewFactory {
public class BasicNodeViewFactory extends AbstractViewFactory {
public class BasicNodeViewFactory extends AbstractViewFactory {
public class BasicNodeViewFactory extends AbstractViewFactory {
public class BendpointEditPolicy extends org.eclipse.gef.editpolicies.BendpointEditPolicy {
    private class BendpointModificationCommand extends AbstractCommand {
public class BendpointEditPolicy extends org.eclipse.gef.editpolicies.BendpointEditPolicy {
    private class BendpointModificationCommand extends AbstractCommand {
        @Override
public class BookmarkDecorator extends AbstractDecorator {
    public class BookmarkObserver implements IFileObserver {
public class BookmarkDecorator extends AbstractDecorator {
    public class BookmarkObserver implements IFileObserver {
public class BooleanListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BooleanListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BooleanListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BooleanListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BooleanValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BooleanValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BooleanValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BooleanValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class BorderedBorderItemEditPart extends AbstractBorderItemEditPart implements IBorderedShapeEditPart {
abstract public class BorderedBorderItemEditPart extends AbstractBorderItemEditPart implements IBorderedShapeEditPart {
public class BorderedNodeFigure extends NodeFigure {
public class BorderedNodeFigure extends NodeFigure implements IExpandableFigure {
public class BorderedNodeFigure extends NodeFigure implements IExpandableFigure {
public class BorderedNodeFigure extends NodeFigure implements IExpandableFigure {
public class BorderItemContainerFigure extends NodeFigure {
public class BorderItemContainerFigure extends NodeFigure {
    public void validate ();
public class BorderItemContainerFigure extends NodeFigure {
    public void validate ();
public class BorderItemContainerFigure extends NodeFigure {
public class BorderItemContainerFigure extends NodeFigure {
public class BorderItemContainerFigure extends NodeFigure {
    public void validate ();
public class BorderItemContainerFigure extends NodeFigure {
public class BorderItemContainerFigure extends NodeFigure {
    private class BorderItemContainerHelper {
        class ChildTracker implements FigureListener {
            public void figureMoved (IFigure source);
        public void hookChild (IFigure child);
        public void unhookChild (IFigure child);
public class BorderItemContainerFigure extends NodeFigure {
public class BorderItemContainerFigure extends NodeFigure {
public class BorderItemLocator implements IBorderItemLocator {
public class BorderItemLocator implements IBorderItemLocator {
    protected Point locateOnBorder (Point suggestedLocation, int suggestedSide, int circuitCount, IFigure borderItem);
public class BorderItemLocator implements IBorderItemLocator {
public class BorderItemLocator implements IBorderItemLocator {
    public BorderItemLocator (IFigure borderItem, IFigure parentFigure, Rectangle constraint, int interval) {
    public BorderItemLocator (IFigure parentFigure, int preferredSide, int interval) {
    public BorderItemLocator (int interval, IFigure parentFigure) {
public class BorderItemLocator implements IBorderItemLocator {
    public BorderItemLocator (IFigure parentFigure, DrawConstant preferredSide) {
    public DrawConstant getCurrentSide ();
public class BorderItemLocator implements IBorderItemLocator {
public class BorderItemLocator implements IBorderItemLocator {
public class BorderItemLocator implements IBorderItemLocator {
public class BorderItemsAwareFreeFormLayer extends FreeformLayer {
public class BorderItemsAwareFreeFormLayer extends FreeformLayer {
    public Rectangle getFreeformExtent (); public class BorderItemAwareFreeFormHelper implements FreeformListener {
        class ChildTracker implements FigureListener {
            public void figureMoved (IFigure source);
        public BorderItemAwareFreeFormHelper (FreeformFigure host) {
        public Rectangle getFreeformExtent ();
        public void hookChild (IFigure child);
        public void notifyFreeformExtentChanged ();
        public void reset ();
        public void setFreeformBounds (Rectangle bounds);
        public void unhookChild (IFigure child);
    public void add (IFigure child, Object constraint, int index);
    public void remove (IFigure child);
public class BorderLayoutDataImpl extends EObjectImpl implements BorderLayoutData {
public class BorderLayoutDataImpl extends EObjectImpl implements BorderLayoutData {
public class BorderLayoutDataImpl extends EObjectImpl implements BorderLayoutData {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class BorderLayoutDataImpl extends EObjectImpl implements BorderLayoutData {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class BorderLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BorderLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BorderLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class BorderLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class BorderLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BorderLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BorderLayoutImpl extends EObjectImpl implements BorderLayout {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class BorderLayoutImpl extends EObjectImpl implements BorderLayout {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class BorderLayoutImpl extends EObjectImpl implements BorderLayout {
    protected Dimension spacing = null;
public class BorderLayoutImpl extends EObjectImpl implements BorderLayout {
    protected Dimension spacing;
public class BorderLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class BorderLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class BorderLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BorderLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BoundsImpl extends LocationImpl implements Bounds {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class BoundsImpl extends LocationImpl implements Bounds {
    public void eSet (int featureID, Object newValue);
public class BoundsItemProvider extends LocationItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BoundsItemProvider extends LocationItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BoundsItemProvider extends LocationItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BoundsItemProvider extends LocationItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class BringForwardCommand extends ZOrderCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public BringForwardCommand (View toMove) {
public class BringForwardCommand extends ZOrderCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public BringForwardCommand (TransactionalEditingDomain editingDomain, View toMove) {
public class BringToFrontCommand extends ZOrderCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public BringToFrontCommand (View toMove) {
public class BringToFrontCommand extends ZOrderCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public BringToFrontCommand (TransactionalEditingDomain editingDomain, View toMove) {
public class BufferedImageEditPart extends AbstractImageEditPart {
public class BufferedImageEditPart extends AbstractImageEditPart {
public class BufferOutput implements Output {
public class BufferOutput implements Output {
    public BufferOutput (StringBuilder buffer) {
public class BufferOutput implements Output {
    public void enterStatement (SyntaxElement stmt);
    public void write (String text);
public class BufferOutput extends AbstractOutput {
    @Override
[BuiltinMetaModel-9.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-9.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-9.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-10.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-10.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-10.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-12.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-12.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-12.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-16.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-16.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-16.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-19.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-19.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-19.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-20.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-20.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-20.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-21.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-21.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-21.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-22.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-22.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-22.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-5.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-5.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-7.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-7.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-7.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
[BuiltinMetaModel-8.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-8.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[BuiltinMetaModel-8.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
public class BundleImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class BundleImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class BundleImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BundleImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class BundleResourceManager extends ResourceManagerImpl {
public class BundleResourceManager extends ResourceManagerImpl {
    @Override
public class BundleResourceManager extends ResourceManagerImpl {
public class BundleResourceManager extends ResourceManagerImpl {
    @Override
public class BundleResourceManager extends ResourceManagerImpl {
    @Override
public class BundleResourceManager extends ResourceManagerImpl {
    @Override
public class ByteArrayValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ByteArrayValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ByteArrayValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ByteArrayValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
    protected EditPart getSourceEditPartFor (EObject connector);
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
    protected EditPart getSourceEditPartFor (EObject connection);
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalConnectionEditPolicy extends CanonicalEditPolicy {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationForEditPartsListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationForEditPartsListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements PropertyChangeListener {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements PropertyChangeListener {
    protected boolean addListenerFilter (String filterId, PropertyChangeListener listener, EObject element);
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements PropertyChangeListener {
    public static class AsyncCommand extends Command {
    final public static class CanonicalElementAdapter extends EObjectAdapter {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements PropertyChangeListener {
    private static class AsyncCommand extends Command {
    final protected static class CanonicalElementAdapter extends EObjectAdapter {
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements PropertyChangeListener {
    protected boolean addListenerFilter (String filterId, PropertyChangeListener listener, EObject element);
    protected boolean shouldHandleNotificationEvent (NotificationEvent event);
    protected void handleNotificationEvent (NotificationEvent event);
abstract public class CanonicalEditPolicy extends AbstractEditPolicy implements NotificationListener {
    protected boolean addListenerFilter (String filterId, NotificationListener listener, EObject element);
    protected boolean shouldHandleNotificationEvent (Notification event);
    protected void handleNotificationEvent (Notification event);
public class CanonicalShapeCompartmentLayout extends FreeformLayout implements ICanonicalShapeCompartmentLayout {
public class CanonicalShapeCompartmentLayout extends FreeFormLayoutEx implements ICanonicalShapeCompartmentLayout {
interface CanonicalStyle extends Style {
interface CanonicalStyle extends NotationObject, Style {
interface CanonicalStyle extends NotationObject, Style {
interface CanonicalStyle extends Style {
public class CanonicalStyleImpl extends EObjectImpl implements CanonicalStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class CanonicalStyleImpl extends EObjectImpl implements CanonicalStyle {
    public void eSet (int featureID, Object newValue);
public class CanonicalStyleImpl extends EObjectImpl implements CanonicalStyle {
public class CanonicalStyleImpl extends FlatEObjectImpl implements CanonicalStyle {
public class CanonicalStyleImpl extends FlatEObjectImpl implements CanonicalStyle {
public class CanonicalStyleImpl extends NotationObjectImpl implements CanonicalStyle {
public class CanonicalStyleImpl extends NotationObjectImpl implements CanonicalStyle {
public class CanonicalStyleImpl extends NotationEObjectImpl implements CanonicalStyle {
public class CanonicalStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CanonicalStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CanonicalStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CanonicalStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CanvasCanonicalEditPolicy extends CanonicalConnectionEditPolicy {
    private class LinkDescriptor {
        protected LinkDescriptor (EObject source, EObject destination, EObject linkElement, int linkVID) {
public class CanvasCanonicalEditPolicy extends CanonicalConnectionEditPolicy {
    private class LinkDescriptor {
        protected LinkDescriptor (EObject source, EObject destination, EObject linkElement, IElementType elementType, int linkVID) {
public class CanvasCanonicalEditPolicy extends CanonicalConnectionEditPolicy {
    private class LinkDescriptor {
        protected EObject getDestination ();
        protected EObject getLinkElement ();
        protected EObject getSource ();
        protected IAdaptable getSemanticAdapter ();
        protected LinkDescriptor (EObject source, EObject destination, EObject linkElement, IElementType elementType, int linkVID) {
        protected LinkDescriptor (EObject source, EObject destination, IElementType elementType, int linkVID) {
        protected int getVisualID ();
public class CanvasCanonicalEditPolicy extends CanonicalConnectionEditPolicy {
public class CanvasEditPart extends DiagramEditPart {
    final public static int VISUAL_ID = 79;
public class CanvasEditPart extends DiagramEditPart {
    final public static int VISUAL_ID = 1000;
public class CanvasEditPart extends DiagramEditPart {
    public static String MODEL_ID = "GMFGraph";
public class CanvasEditPart extends DiagramEditPart {
    final public static String MODEL_ID = "GMFGraph";
public class CanvasImpl extends EObjectImpl implements Canvas {
public class CanvasImpl extends EObjectImpl implements Canvas {
    protected EList labels = null;
public class CanvasImpl extends EObjectImpl implements Canvas {
    protected EList children = null;
public class CanvasImpl extends EObjectImpl implements Canvas {
public class CanvasImpl extends EObjectImpl implements Canvas {
    protected EClass eStaticClass (); protected EList compartments = null;
    protected EList connections = null;
    protected EList figures = null;
    protected EList labels = null;
    protected EList nodes = null;
    public EList getCompartments ();
    public EList getConnections ();
    public EList getFigures ();
    public EList getLabels ();
    public EList getNodes ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class CanvasImpl extends EObjectImpl implements Canvas {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < Compartment > compartments = null;
    protected EList < Connection > connections = null;
    protected EList < DiagramLabel > labels = null;
    protected EList < FigureGallery > figures = null;
    protected EList < Node > nodes = null;
    public EList < Compartment > getCompartments ();
    public EList < Connection > getConnections ();
    public EList < DiagramLabel > getLabels ();
    public EList < FigureGallery > getFigures ();
public class CanvasImpl extends EObjectImpl implements Canvas {
    protected EList < Compartment > compartments = null;
    protected EList < Connection > connections = null;
    protected EList < DiagramLabel > labels = null;
    protected EList < FigureGallery > figures = null;
    protected EList < Node > nodes = null;
public class CanvasImpl extends EObjectImpl implements Canvas {
    protected EList < Compartment > compartments;
    protected EList < Connection > connections;
    protected EList < DiagramLabel > labels;
    protected EList < FigureGallery > figures;
    protected EList < Node > nodes;
public class CanvasItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CanvasItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
public class CanvasItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
public class CanvasItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object);
public class CanvasItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CanvasItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CanvasItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    private static class CreateCompartment_2001Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateCompartment_2001Command (CreateElementRequest req) {
    private static class CreateConnection_2003Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateConnection_2003Command (CreateElementRequest req) {
    private static class CreateFigureGallery_2004Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateFigureGallery_2004Command (CreateElementRequest req) {
    private static class CreateNode_2002Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateNode_2002Command (CreateElementRequest req) {
public class CanvasItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
interface CanvasMapping extends MappingEntry {
interface CanvasMapping extends EObject {
public class CanvasMappingImpl extends MappingEntryImpl implements CanvasMapping {
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class CanvasMappingImpl extends MappingEntryImpl implements CanvasMapping {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class CanvasMappingImpl extends MappingEntryImpl implements CanvasMapping {
public class CanvasMappingImpl extends EObjectImpl implements CanvasMapping {
    protected EList menuContributions = null;
    protected EList toolbarContributions = null;
    protected Palette palette = null;
    public EList getMenuContributions ();
    public Palette basicGetPalette ();
    public void setPalette (Palette newPalette);
public class CanvasMappingImpl extends EObjectImpl implements CanvasMapping {
    protected EClass eStaticClass (); protected EList menuContributions = null;
    protected EList toolbarContributions = null;
    public EList getMenuContributions ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class CanvasMappingImpl extends EObjectImpl implements CanvasMapping {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < MainMenu > menuContributions = null;
    protected EList < Toolbar > toolbarContributions = null;
    public EList < MainMenu > getMenuContributions ();
public class CanvasMappingImpl extends EObjectImpl implements CanvasMapping {
    protected Canvas diagramCanvas = null;
    protected EClass domainMetaElement = null;
    protected EList < MainMenu > menuContributions = null;
    protected EList < Toolbar > toolbarContributions = null;
    protected EPackage domainModel = null;
    protected Palette palette = null;
public class CanvasMappingImpl extends EObjectImpl implements CanvasMapping {
    protected Canvas diagramCanvas;
    protected EClass domainMetaElement;
    protected EList < MainMenu > menuContributions;
    protected EList < Toolbar > toolbarContributions;
    protected EPackage domainModel;
    protected Palette palette;
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDomainModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {
            protected Collection getComboBoxObjects (Object object);
        );
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
    protected void addDomainModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
            protected Collection < ? > getComboBoxObjects (Object object);
        );
    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {
            protected Collection < ? > getComboBoxObjects (Object object);
        );
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {
        );
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {
        );
public class CanvasMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addMenuContributionsPropertyDescriptor (Object object);
    protected void addPalettePropertyDescriptor (Object object);
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDomainMetaElementPropertyDescriptor (Object object);
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDomainMetaElementPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainMetaElement_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainMetaElement_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainMetaElement (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
    protected void addDomainModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {
            protected Collection getComboBoxObjects (Object object);
        );
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDomainMetaElementPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainMetaElement_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainMetaElement_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainMetaElement (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
        );
    protected void addDomainModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
        );
    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {
        );
public class CanvasMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDomainMetaElementPropertyDescriptor (Object object);
    protected void addDomainModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_domainModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_domainModel_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_DomainModel (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
        );
    protected void addPalettePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_CanvasMapping_palette_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_CanvasMapping_palette_feature", "_UI_CanvasMapping_type"), GMFMapPackage.eINSTANCE.getCanvasMapping_Palette (), true, null, null, null) {
        );
public class CanvasProcessor extends Processor {
public class CanvasProcessor extends Processor {
public class CanvasViewFactory extends DiagramViewFactory {
public class CanvasViewFactory extends DiagramViewFactory {
public class CanvasViewFactory extends DiagramViewFactory {
    protected void decorateView (View view, IAdaptable semanticAdapter, String diagramKind);
public class CanvasViewFactory extends DiagramViewFactory {
public class CanvasViewFactory extends DiagramViewFactory {
public class CanvasViewFactory extends DiagramViewFactory {
public class ChangeGuideCommand extends AbstractModelCommand {
    public ChangeGuideCommand (EditPartViewer viewer, IAdaptable part, boolean horizontalGuide) {
    public ChangeGuideCommand (View part, boolean horizontalGuide) {
public class ChangeGuideCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public ChangeGuideCommand (TransactionalEditingDomain editingDomain, EditPartViewer viewer, IAdaptable part, boolean horizontalGuide) {
    public ChangeGuideCommand (TransactionalEditingDomain editingDomain, View part, boolean horizontalGuide) {
public class ChildAccessEditPart extends ConnectionNodeEditPart {
public class ChildAccessEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {
public class ChildAccessImpl extends EObjectImpl implements ChildAccess {
public class ChildAccessImpl extends EObjectImpl implements ChildAccess {
    public void setOwner (FigureDescriptor newOwner);
public class ChildAccessImpl extends EObjectImpl implements ChildAccess {
    public void setOwner (FigureDescriptor newOwner);
public class ChildAccessImpl extends EObjectImpl implements ChildAccess {
abstract public class ChildNotationModelRefresher extends AbstractNotationModelRefresher {
    public Command buildRefreshNotationModelCommand ();
abstract public class ChildNotationModelRefresher extends AbstractNotationModelRefresher {
    @SuppressWarnings("unchecked")
    public Command buildRefreshNotationModelCommand ();
    protected Command getRefreshExternalElementCommand (View externalView);
    abstract protected List < ElementDescriptor > getSemanticChildNodes ();
public class ChildReferenceImpl extends NodeReferenceImpl implements ChildReference {
public class ChildReferenceImpl extends NodeReferenceImpl implements ChildReference {
public class ChildReferenceImpl extends NodeReferenceImpl implements ChildReference {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public void eSet (int featureID, Object newValue);
public class ChildReferenceImpl extends NodeReferenceImpl implements ChildReference {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class ChildReferenceImpl extends NodeReferenceImpl implements ChildReference {
    protected CompartmentMapping compartment = null;
    protected NodeMapping ownedChild = null;
    protected NodeMapping referencedChild = null;
public class ChildReferenceImpl extends NodeReferenceImpl implements ChildReference {
    protected CompartmentMapping compartment;
    protected NodeMapping ownedChild;
    protected NodeMapping referencedChild;
public class ChildReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
public class ChildReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
public class ChildReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ChildReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ChildReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ChildReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CircleFigure extends DefaultSizeNodeFigure implements IOvalAnchorableFigure {
    public CircleFigure () {
public class CircleFigure extends DefaultSizeNodeFigure implements IOvalAnchorableFigure {
public class ClassNamingStrategy extends AbstractNamingStrategy {
    public ClassNamingStrategy (String suffix, NamingStrategy chained, NamesDispenser dispenser) {
public class ClassNamingStrategy extends AbstractNamingStrategy {
    public ClassNamingStrategy (String suffix, NamingStrategy chained, NamesDispenser namesDispenser) {
public class ClassNamingStrategy extends AbstractNamingStrategy {
    protected String createClassName (String name);
    protected static String getValidClassName (String s);
    public ClassNamingStrategy (String suffix) {
    public ClassNamingStrategy (String suffix, NamingStrategy chained, NamesDispenser namesDispenser) {
    public String getAsPrefix (LinkMapping mapping);
    public String getAsPrefix (NodeMapping mapping);
public class ClassNamingStrategy extends AbstractNamingStrategy {
    public ClassNamingStrategy (String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
abstract public class ClipboardCommand extends AbstractModelCommand {
    public ClipboardCommand (String label, View viewContext) {
    public ClipboardCommand (View viewContext) {
abstract public class ClipboardCommand extends AbstractTransactionalCommand {
    public ClipboardCommand (TransactionalEditingDomain editingDomain, String label, View viewContext) {
    public ClipboardCommand (TransactionalEditingDomain editingDomain, View viewContext) {
public class ClipboardPlugin extends EMFPlugin {
    public static class Implementation extends EclipsePlugin {
public class ClipboardPlugin extends EMFPlugin {
    public static class Implementation extends EclipsePlugin {
        public void start (BundleContext context) throws Exception;
public class ClipboardSupportManager {
public class ClipboardSupportManager {
    final public static String EP_CLIPBOARD_SUPPORT = "org.eclipse.gmf.runtime.emf.clipboard.core.clipboardSupport";
final public class ClipboardSupportUtil {
final public class ClipboardSupportUtil {
final public class ClipboardSupportUtil {
final public class ClipboardSupportUtil {
public class ClipboardUtil {
public class ClipboardUtil {
public class CodegenEmitters {
    public TextEmitter getNavigatorGroupEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
    public TextEmitter getNavigatorGroupEmitter ();
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    protected TextEmitter newXpandEmitter (String definition);
    protected static String [] getDefaultVariables ();
    public CodegenEmitters (boolean usePrecompiled, String templateDirectory, String [] variables, StaticTemplateRegistry registry) {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getStructuralFeatureParserEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getCreateNotationalEdgeCommandGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getPropertySourceProviderGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getReconnectNotationalEdgeSourceCommandGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getRemoveNotationalEdgeCommandGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getRemoveNotationalElementCommandGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getReplaceNotationalElementCommandGenerator () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-128.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-129.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-130.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-131.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-133.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-134.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-135.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-136.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-137.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-138.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public BinaryEmitter getDiagramIconEmitter () throws UnexpectedBehaviourException;
[CodegenEmitters-140.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-141.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-142.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-143.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-144.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-145.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-146.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-147.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-150.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-153.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-154.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-155.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-158.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-159.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
[CodegenEmitters-162.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public CodegenEmitters (boolean usePrecompiled, String templateDirectory) {
    public CodegenEmitters (boolean usePrecompiled, String templateDirectory, String [] variables, StaticTemplateRegistry registry) {
public class CodegenEmitters {
    public CodegenEmitters (boolean useBaseTemplatesOnly, String templateDirectory, boolean includeDynamicModelTemplates) {
public class CodegenEmitters {
public class CodegenEmitters {
    public String getDeleteElementActionName (Object...input) throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getCreateLinkCompleteCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateLinkStartCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getReconnectLinkSourceCommandEmitter () throws UnexpectedBehaviourException;
[CodegenEmitters-179.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public String getAppearancePreferencePageName (Object...input) throws UnexpectedBehaviourException;
    public String getPrintingPreferencePageName (Object...input) throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    private static class XpandTextEmitter implements TextEmitter {
        protected Object [] extractArguments (Object [] arguments);
        protected Object extractTarget (Object [] arguments);
        public String generate (IProgressMonitor monitor, Object [] arguments) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
        public XpandTextEmitter (ResourceManager manager, String templateFQN) {
    public TextEmitter getNavigatorActionProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorContentProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorGroupEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorItemEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorLabelProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorLinkHelperEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getPropertySectionEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getWorkbenchAdvisorEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
    private static class XpandTextEmitter implements TextEmitter {
public class CodegenEmitters {
    private static class XpandTextEmitter implements IAutomaticImportManager, TextEmitter {
public class CodegenEmitters {
    private static class XpandTextEmitter implements IAutomaticImportManager, TextEmitter {
        protected Object [] extractArguments (Object [] arguments);
        protected Object extractTarget (Object [] arguments);
        public String generate (IProgressMonitor monitor, Object [] arguments) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
        public XpandTextEmitter (ResourceManager manager, String templateFQN) {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    private static class AutomaticImportManagerXpandTextEmitter extends XpandTextEmitter implements IAutomaticImportManager {
        public AutomaticImportManagerXpandTextEmitter (ResourceManager manager, String templateFQN, ClassLoader context) {
    public TextEmitter getMarkerNavigationProviderEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
    private static class AutomaticImportManagerXpandTextEmitter extends XpandTextEmitter implements IAutomaticImportManager {
        public AutomaticImportManagerXpandTextEmitter (ResourceManager manager, String templateFQN, ClassLoader context) {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getNavigatorContentProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorGroupEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
    public TextEmitter getNavigatorContentProviderEmitter ();
    public TextEmitter getNavigatorGroupEmitter ();
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getDomainModelElementTesterEmitter ();
    public TextEmitter getDomainNavigatorContentProviderEmitter ();
    public TextEmitter getDomainNavigatorItemEmitter ();
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getWizardBannerLocationEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getComponentEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getConnectionEndpointEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getMetricsActionEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getValidateActionGenerator () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getCreateShortcutActionEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutEdgeCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutEdgeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutNodeCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getModelElementSelectionPageEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutCreationWizardEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutCreationWizardQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutPropertyTesterEmitter ();
    public TextEmitter getShortcutProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getURISelectorPageGenerator () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getAppearancePreferencePageEmitter ();
    public TextEmitter getGeneralPreferencePageEmitter ();
package org.eclipse.gmf.internal.codegen.lite;
public class CodegenEmitters {
    public TextEmitter getActionBarContributorGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getAddNodeCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getAddNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getAppearancePreferencePageEmitter ();
    public TextEmitter getBuildPropertiesGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getChildNodeEditPartGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getCloneNodeCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCloneNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCompartmentEditPartGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getComponentEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getComponentEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getConnectionEndpointEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getConnectionEndpointEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateLinkCompleteCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateLinkCompleteCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateLinkStartCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateLinkStartCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateNodeCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutEdgeCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutEdgeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutNodeCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutNodeCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreationWizardGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getCreationWizardPageGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getDiagramEditPartGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getDiagramEditorUtilGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getDomainElementInitializerGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getDomainElementInitializerQualifiedNameGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getDomainModelElementTesterEmitter ();
    public TextEmitter getDomainNavigatorContentProviderEmitter ();
    public TextEmitter getDomainNavigatorItemEmitter ();
    public TextEmitter getDomainNavigatorLabelProviderEmitter ();
    public TextEmitter getEditPartFactoryGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getEditorGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getElementChooserEmitter ();
    public TextEmitter getElementTypesGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getExternalizeEmitter ();
    public TextEmitter getGeneralPreferencePageEmitter ();
    public TextEmitter getGeneralPreferencePageQualifiedClassNameEmitter ();
    public TextEmitter getGraphicalEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getGraphicalEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getInitDiagramFileActionGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getLayoutEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getLayoutEditPolicyQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getLinkEditPartGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getLinkLabelEditPartGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getLoadResourceActionGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getMatchingStrategyEmitter ();
    public TextEmitter getMetricsActionEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getMetricsActionQualifiedNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getModelElementSelectionPageEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorContentProviderEmitter ();
    public TextEmitter getNavigatorGroupEmitter ();
    public TextEmitter getNewDiagramFileWizardGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getNodeEditPartGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getOpenDiagramInViewActionGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getOpenDiagramInViewActionQualifiedClassNameGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getPluginGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getPluginPropertiesGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getReconnectLinkSourceCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getReconnectLinkSourceCommandQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getReconnectLinkTargetCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutCreationWizardEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutCreationWizardQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutPropertyTesterEmitter ();
    public TextEmitter getShortcutProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutProviderQualifiedClassNameEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getURIEditorInputTesterEmitter ();
    public TextEmitter getURISelectorPageGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getURISelectorPageQualifiedClassNameGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getValidateActionGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getValidateActionQualifiedNameGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getValidationProviderGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getViewFactoryGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getVisualIDRegistryGenerator () throws UnexpectedBehaviourException;
    public TextEmitter getWizardBannerLocationEmitter () throws UnexpectedBehaviourException;
package org.eclipse.gmf.codegen.util;
public class CodegenEmitters {
    public TextEmitter getBaseEditHelperEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getBaseItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getBuildPropertiesEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getBundleManifestEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getChildContainerCanonicalEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getChildNodeEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCompartmentEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCompartmentItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreateShortcutDecorationCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreationWizardEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getCreationWizardPageEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getDiagramCanonicalEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getDiagramEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getDiagramEditorUtilEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getDiagramExternalNodeLabelEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getDiagramItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getDocumentProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getEditHelperAdviceEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getEditHelperEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getEditPartFactoryEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getEditPartProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getEditorEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getElementChooserEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getElementTypesEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getExternalNodeLabelEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getExternalNodeLabelHostLayoutEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getGraphicalNodeEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getIconProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getInitDiagramFileActionEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getLabelTextViewFactoryEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getLabelViewFactoryEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getLinkEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getLinkItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getLinkLabelEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorContentProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNavigatorGroupEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNewDiagramFileWizardEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNodeEditPartEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getNodeItemSemanticEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getOptionsFileEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getPaletteEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getPluginClassEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getPluginPropertiesEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getPluginXmlEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getReorientConnectionViewCommandEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutPropertyTesterEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getShortcutsDecoratorProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getStructuralFeatureParserEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getStructuralFeaturesParserEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getTextNonResizableEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getTextSelectionEditPolicyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getURIDiagramDocumentProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getURIEditorInputProxyEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getValidationDecoratorProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getValidationProviderEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getViewFactoryEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getViewProviderEmitter () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    private static class XpandTextEmitter implements TextEmitter {
        protected Object [] extractArguments (Object [] arguments);
        protected Object extractTarget (Object [] arguments);
        public String generate (IProgressMonitor monitor, Object [] arguments) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
        public XpandTextEmitter (ResourceManager manager, String templateFQN) {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public String getAppearancePreferencePageName (Object...input) throws UnexpectedBehaviourException;
    public String getConnectionsPreferencePageName (Object...input) throws UnexpectedBehaviourException;
    public String getPrintingPreferencePageName (Object...input) throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getRemoveNotationalElementCommandGenerator () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
    public String getURIDiagramDocumentProviderName (Object...input) throws UnexpectedBehaviourException;
public class CodegenEmitters {
    private static class XpandTextEmitter implements TextEmitter {
        protected Object [] extractArguments (Object [] arguments);
        protected Object extractTarget (Object [] arguments);
        public String generate (IProgressMonitor monitor, Object [] arguments) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
        public XpandTextEmitter (ResourceManager manager, String templateFQN) {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getReconnectNotationalEdgeSourceCommandGenerator () throws UnexpectedBehaviourException;
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
public class CodegenEmitters {
    public TextEmitter getDocumentProviderEmitter ();
    public TextEmitter getDomainModelElementTesterEmitter ();
    public TextEmitter getDomainNavigatorContentProviderEmitter ();
public class CodegenEmitters {
public class CodegenEmitters {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
    final public static String SYNC_IMAGE = "/icons/full/synced.gif";
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
    final public static String CHECKED_ICON = "/icons/full/obj16/checked.gif";
    final public static String UNCHECKED_ICON = "/icons/full/obj16/unchecked.gif";
public class CodeGenUIPlugin extends AbstractUIPlugin {
    final public static String CHECKED_ICON = "/icons/full/obj16/checked.gif";
    final public static String GMF_LOGO = "/icons/full/logo_banner.png";
    final public static String SYNC_IMAGE = "/icons/full/synced.gif";
    final public static String UNCHECKED_ICON = "/icons/full/obj16/unchecked.gif";
public class CodeGenUIPlugin extends AbstractUIPlugin {
    protected void loadImage (ImageRegistry registry, String id);
    final public static String CHECKED_ICON = "/icons/full/checked.gif";
    final public static String GMF_LOGO_IMAGE = "/icons/full/logo_banner.png";
    final public static String LABEL_ICON = "/icons/full/label.gif";
    final public static String LINK_ICON = "/icons/full/link.gif";
    final public static String NODE_ICON = "/icons/full/node.gif";
    final public static String SYNC_ICON = "/icons/full/synced.gif";
    final public static String UNCHECKED_ICON = "/icons/full/unchecked.gif";
public class CodeGenUIPlugin extends AbstractUIPlugin {
    final public static String CHECKED_ICON = "/icons/full/checked.gif";
    final public static String LABEL_ICON = "/icons/full/label.gif";
    final public static String LINK_ICON = "/icons/full/link.gif";
    final public static String NODE_ICON = "/icons/full/node.gif";
    final public static String UNCHECKED_ICON = "/icons/full/unchecked.gif";
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
    protected void initializeImageRegistry (ImageRegistry reg);
    protected void loadImage (ImageRegistry registry, String id);
    final public static String DM_ICON = "/icons/full/obj16/EcoreModelFile.gif";
    final public static String GDM_ICON = "/icons/full/obj16/GMFGraphModelFile.gif";
    final public static String GMF_LOGO_IMAGE = "/icons/full/logo_banner.png";
    final public static String GM_ICON = "/icons/full/obj16/GMFGenModelFile.gif";
    final public static String MM_ICON = "/icons/full/obj16/GMFMapModelFile.gif";
    final public static String SYNC_ICON = "/icons/full/synced.gif";
    final public static String TDM_ICON = "/icons/full/obj16/GMFToolModelFile.gif";
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
    final public static String GMF_LOGO = "/icons/full/logo_banner.png";
public class CodeGenUIPlugin extends AbstractUIPlugin {
public class CodeGenUIPlugin extends AbstractUIPlugin {
    final public static String DM_ICON = "/icons/full/obj16/EcoreModelFile.gif";
    final public static String GDM_ICON = "/icons/full/obj16/GMFGraphModelFile.gif";
    final public static String GM_ICON = "/icons/full/obj16/GMFGenModelFile.gif";
    final public static String MM_ICON = "/icons/full/obj16/GMFMapModelFile.gif";
    final public static String TDM_ICON = "/icons/full/obj16/GMFToolModelFile.gif";
public class CollapseFigure extends RectangleFigure {
public class CollapseFigure extends RectangleFigure {
    public CollapseFigure () {
    public CollapseFigure (IFigure containerFigure) {
public class ColorAttributesImpl extends EObjectImpl implements ColorAttributes {
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class ColorAttributesImpl extends EObjectImpl implements ColorAttributes {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class ColorAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ColorAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ColorAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ColorAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ColorPalettePopup {
    private ColorPalettePopup (Shell parent, int rowHeight) {
public class ColorPalettePopup {
    public ColorPalettePopup (Shell parent, int rowHeight) {
public class ColorPalettePopup {
public class ColorPalettePopup {
    public void setPreviousColor (int previousColor);
public class ColorPalettePopup {
    final public static Point ICON_SIZE = new Point (20, 20);
public class ColorPalettePopup {
    final public static Point ICON_SIZE = new Point (IDialogConstants.BUTTON_BAR_HEIGHT, IDialogConstants.BUTTON_BAR_HEIGHT);
public class ColorPropertyContributionItem extends PropertyChangeContributionItem implements Listener {
public class ColorPropertyContributionItem extends PropertyChangeContributionItem implements Listener {
    @Override
public class ColorPropertyContributionItem extends PropertyChangeContributionItem implements Listener {
    public ColorPropertyContributionItem (IWorkbenchPage workbenchPage, String id, String propertyId, String propertyName, String preferenceId, String toolTipText, ImageData basicImageData, ImageData disabledBasicImageData) {
public class ColorPropertyContributionItem extends PropertyChangeContributionItem implements Listener {
    public ColorPropertyContributionItem (IWorkbenchPage workbenchPage, String id, String propertyId, String propertyName, String toolTipText, ImageData basicImageData, ImageData disabledBasicImageData) {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    final protected static String BOLD_IMAGE_NAME = "bold.gif";
    final protected static String FILL_COLOR_IMAGE_NAME = "fill_color.gif";
    final protected static String FONTS_AND_COLORS_LABEL = ResourceManager.getI18NString ("FontAndColor.nameLabel");
    final protected static String FONT_COLOR_COMMAND_NAME = ResourceManager.getI18NString ("FontColor.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String FONT_COMMAND_NAME = ResourceManager.getI18NString ("Font.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String ITALIC_IMAGE_NAME = "italic.gif";
    final protected static String LINE_COLOR_COMMAND_NAME = ResourceManager.getI18NString ("LineColor.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String FILL_COLOR_COMMAND_NAME = ResourceManager.getI18NString ("FillColor.commandText") + StringStatics.SPACE + VALUE_CHANGED_STRING;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected RGB changeColor (SelectionEvent event, ToolItem button, String preferenceId, final String propertyId, String commandName, ImageDescriptor imageDescriptor) {
        ColorPalettePopup popup = new ColorPalettePopup (button.getParent ().getShell (), preferenceId, IDialogConstants.BUTTON_BAR_HEIGHT);
        Rectangle r = button.getBounds ();
        Point location = button.getParent ().toDisplay (r.x, r.y);
        popup.open (new Point (location.x, location.y + r.height));
        if (popup.getSelectedColor () != null) {
            final RGB color = popup.getSelectedColor ();
            if (color != null) {
                List commands = new ArrayList ();
                Iterator it = getInputIterator ();
                while (it.hasNext ()) {
                    final IGraphicalEditPart ep = (IGraphicalEditPart) it.next ();
                    commands.add (createCommand (commandName, ((View) ep.getModel ()).eResource (), new Runnable () {
                        public void run ();
                    ));
                executeAsCompositeCommand (commandName, commands);
                Image overlyedImage = new ColorOverlayImageDescriptor (imageDescriptor.getImageData (), color).createImage ();
                button.setImage (overlyedImage);
            return color;
        return null;
    final protected static String FONTS_AND_COLORS_LABEL = DiagramUIPropertiesMessages.FontAndColor_nameLabel;
    final protected static String FONT_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.FontColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String FONT_COMMAND_NAME = DiagramUIPropertiesMessages.Font_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String LINE_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.LineColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
    final protected static String FILL_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.FillColor_commandText + StringStatics.SPACE + VALUE_CHANGED_STRING;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected RGB changeColor (SelectionEvent event, ToolItem button, String preferenceId, final String propertyId, String commandName, ImageDescriptor imageDescriptor) {
        ColorPalettePopup popup = new ColorPalettePopup (button.getParent ().getShell (), preferenceId, IDialogConstants.BUTTON_BAR_HEIGHT);
        Rectangle r = button.getBounds ();
        Point location = button.getParent ().toDisplay (r.x, r.y);
        popup.open (new Point (location.x, location.y + r.height));
        if (popup.getSelectedColor () != null) {
            final RGB color = popup.getSelectedColor ();
            if (color != null) {
                List commands = new ArrayList ();
                Iterator it = getInputIterator ();
                while (it.hasNext ()) {
                    final IGraphicalEditPart ep = (IGraphicalEditPart) it.next ();
                    commands.add (createCommand (commandName, ((View) ep.getModel ()).eResource (), new Runnable () {
                        public void run ();
                    ));
                executeAsCompositeCommand (commandName, commands);
                Image overlyedImage = new ColorOverlayImageDescriptor (imageDescriptor.getImageData (), color).createImage ();
                button.setImage (overlyedImage);
            return color;
        return null;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected ToolBar createFontsGroup (Composite parent); protected ToolItem fillColorButton;
    protected ToolItem fontColorButton;
    protected ToolItem lineColorButton;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected Button fillColorButton;
    protected Button fontColorButton;
    protected Button lineColorButton;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected int previousColor;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected Button fillColorButton;
    protected Button fontColorButton;
    protected Button lineColorButton;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected RGB changeColor (SelectionEvent event, ToolItem toolItem, String preferenceId, final String propertyId, String commandName, ImageDescriptor imageDescriptor);
    protected RGB changeColor (SelectionEvent event, ToolItem toolItem, final String propertyId, String commandName, ImageDescriptor imageDescriptor) {
        ColorPalettePopup popup = new ColorPalettePopup (toolItem.getParent ().getShell (), IDialogConstants.BUTTON_BAR_HEIGHT);
        popup.setPreviousColor (previousColor);
        Rectangle r = toolItem.getBounds ();
        Point location = toolItem.getParent ().toDisplay (r.x, r.y);
        popup.open (new Point (location.x, location.y + r.height));
        if (popup.getSelectedColor () == null && ! popup.useDefaultColor ()) {
            return null;
        final RGB selectedColor = popup.getSelectedColor ();
        final EStructuralFeature feature = (EStructuralFeature) PackageUtil.getElement (propertyId);
        List commands = new ArrayList ();
        Iterator it = getInputIterator ();
        RGB colorToReturn = selectedColor;
        RGB color = selectedColor;
        while (it.hasNext ()) {
            final IGraphicalEditPart ep = (IGraphicalEditPart) it.next ();
            color = selectedColor;
            if (popup.useDefaultColor ()) {
                Object preferredValue = ep.getPreferredValue (feature);
                if (preferredValue instanceof Integer) {
                    color = FigureUtilities.integerToRGB ((Integer) preferredValue);
            if (colorToReturn == null) {
                colorToReturn = color;
            if (color != null) {
                final RGB finalColor = color;
                commands.add (createCommand (commandName, ((View) ep.getModel ()).eResource (), new Runnable () {
                    public void run ();
                ));
        if (! commands.isEmpty ()) {
            executeAsCompositeCommand (commandName, commands);
            Image overlyedImage = new ColorOverlayImageDescriptor (imageDescriptor.getImageData (), color).createImage ();
            disposeImage (toolItem.getImage ());
            toolItem.setImage (overlyedImage);
        return colorToReturn;
    protected ToolItem fillColorButton;
    protected ToolItem fontColorButton;
    protected ToolItem lineColorButton;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected RGB changeColor (SelectionEvent event, ToolItem toolItem, String preferenceId, final String propertyId, String commandName, ImageDescriptor imageDescriptor);
    protected RGB changeColor (SelectionEvent event, ToolItem toolItem, final String propertyId, String commandName, ImageDescriptor imageDescriptor) {
        ColorPalettePopup popup = new ColorPalettePopup (toolItem.getParent ().getShell (), IDialogConstants.BUTTON_BAR_HEIGHT);
        popup.setPreviousColor (previousColor);
        Rectangle r = toolItem.getBounds ();
        Point location = toolItem.getParent ().toDisplay (r.x, r.y);
        popup.open (new Point (location.x, location.y + r.height));
        if (popup.getSelectedColor () == null && ! popup.useDefaultColor ()) {
            return null;
        final RGB selectedColor = popup.getSelectedColor ();
        final EStructuralFeature feature = (EStructuralFeature) PackageUtil.getElement (propertyId);
        List commands = new ArrayList ();
        Iterator it = getInputIterator ();
        RGB colorToReturn = selectedColor;
        RGB color = selectedColor;
        while (it.hasNext ()) {
            final IGraphicalEditPart ep = (IGraphicalEditPart) it.next ();
            color = selectedColor;
            if (popup.useDefaultColor ()) {
                Object preferredValue = ep.getPreferredValue (feature);
                if (preferredValue instanceof Integer) {
                    color = FigureUtilities.integerToRGB ((Integer) preferredValue);
            if (colorToReturn == null) {
                colorToReturn = color;
            if (color != null) {
                final RGB finalColor = color;
                commands.add (createCommand (commandName, ((View) ep.getModel ()).eResource (), new Runnable () {
                    public void run ();
                ));
        if (! commands.isEmpty ()) {
            executeAsCompositeCommand (commandName, commands);
            Image overlyedImage = new ColorOverlayImageDescriptor (imageDescriptor.getImageData (), color).createImage ();
            disposeImage (toolItem.getImage ());
            toolItem.setImage (overlyedImage);
        return colorToReturn;
    protected ToolItem fillColorButton;
    protected ToolItem fontColorButton;
    protected ToolItem lineColorButton;
public class ColorsAndFontsPropertySection extends AbstractNotationPropertiesSection {
    protected Button fillColorButton;
    protected Button fontColorButton;
    protected Button lineColorButton;
public class CommandProxy extends AbstractCommand {
public class CommandProxy extends AbstractCommand {
    public void dispose ();
final public class CommandResult {
final public class CommandResult {
    final public static CommandResult newCancelledCommandResult ();
    final public static CommandResult newErrorCommandResult (String errorMessage);
    final public static CommandResult newErrorCommandResult (Throwable throwable);
    final public static CommandResult newOKCommandResult ();
    final public static CommandResult newOKCommandResult (Object result);
    final public static CommandResult newWarningCommandResult (String warningMessage, Object result);
public class CommandUtilities {
public class CommandUtilities {
final public class CommonCoreMessages extends NLS {
    public static String ComboDirectoryFieldEditor_BrowseButton_label;
    public static String ComboDirectoryFieldEditor_SpecifyLocation_label;
    public static String NavigatorCategoryDescriptor__ERROR__invalidXML;
    public static String NavigatorContentTypeDescriptor__ERROR__invalidXML;
    public static String list_prefix;
    public static String list_separator;
    public static String list_separator_first;
    public static String list_separator_last;
    public static String list_separator_only;
    public static String list_suffix;
final public class CommonCoreMessages extends NLS {
final public class CommonCoreMessages extends NLS {
final public class CommonCoreMessages extends NLS {
    public static String cannotRedo;
    public static String cannotUndo;
    public static String cannotUndoExecuted;
    public static String executeRecoveryFailed;
    public static String redoRecoveryFailed;
    public static String undoRecoveryFailed;
    public static String workspaceCommandFailed;
    public static String workspaceCommandInterrupted;
final public class CommonCoreMessages extends NLS {
final public class CommonCoreMessages extends NLS {
    public static String serviceProviderNotActivated;
final public class CommonCoreMessages extends NLS {
final public class CommonCoreMessages extends NLS {
    public static String NavigatorCategoryDescriptor__ERROR__invalidXML;
    public static String NavigatorContentTypeDescriptor__ERROR__invalidXML;
public class CommonCorePlugin extends XToolsPlugin {
public class CommonCorePlugin extends XToolsPlugin {
public class CommonCorePlugin extends XToolsPlugin {
public class CommonCorePlugin extends Plugin {
    public void start (BundleContext context) throws Exception;
final public class CommonCoreStatusCodes {
final public class CommonCoreStatusCodes {
    final public static int EXECUTE_RECOVERY_FAILED = 20;
    final public static int REDO_RECOVERY_FAILED = 22;
    final public static int UNDO_RECOVERY_FAILED = 21;
public class CommonUIActionIDEPlugin extends XToolsUIPlugin {
public class CommonUIActionIDEPlugin extends AbstractUIPlugin {
public class CommonUIActionPlugin extends XToolsUIPlugin {
public class CommonUIActionPlugin extends AbstractUIPlugin {
final public class CommonUIMessages extends NLS {
    public static String ModelingPreferencePage_OpenUnrecognizedContent_always;
    public static String ModelingPreferencePage_OpenUnrecognizedContent_label;
    public static String ModelingPreferencePage_OpenUnrecognizedContent_never;
    public static String ModelingPreferencePage_OpenUnrecognizedContent_prompt;
    public static String ModelingPreferencePage_SaveUnrecognizedContent_always;
    public static String ModelingPreferencePage_SaveUnrecognizedContent_label;
    public static String ModelingPreferencePage_SaveUnrecognizedContent_never;
    public static String ModelingPreferencePage_SaveUnrecognizedContent_prompt;
final public class CommonUIMessages extends NLS {
final public class CommonUIMessages extends NLS {
final public class CommonUIMessages extends NLS {
    public static String ShowRelatedElementsPredefinedComposite_SaveAs_Title;
final public class CommonUIMessages extends NLS {
final public class CommonUIMessages extends NLS {
    public static String FileModificationValidator_OutOfSyncMessage;
public class CommonUIPlugin extends XToolsUIPlugin {
    protected void doStartup ();
public class CommonUIPlugin extends AbstractUIPlugin {
    public void start (BundleContext context) throws Exception;
public class CommonUIPlugin extends AbstractUIPlugin {
public class CommonUIPlugin extends AbstractUIPlugin {
    public void stop (BundleContext context) throws Exception;
public class CommonUIServicesActionPlugin extends XToolsUIPlugin {
    final protected static String ACTION_FILTER_PROVIDERS_EXT_P_NAME = "actionFilterProviders";
    final protected static String CONTRIBUTION_ITEM_PROVIDERS_EXT_P_NAME = "contributionItemProviders";
    final protected static String GLOBAL_ACTION_HANDLER_PROVIDERS_EXT_P_NAME = "globalActionHandlerProviders";
public class CommonUIServicesActionPlugin extends XToolsUIPlugin {
public class CommonUIServicesActionPlugin extends XToolsUIPlugin {
public class CommonUIServicesActionPlugin extends AbstractUIPlugin {
public class CommonUIServicesDNDIDEPlugin extends XToolsUIPlugin {
public class CommonUIServicesDNDIDEPlugin extends XToolsUIPlugin {
public class CommonUIServicesDNDIDEPlugin extends XToolsUIPlugin {
public class CommonUIServicesDNDIDEPlugin extends AbstractUIPlugin {
public class CommonUIServicesDNDPlugin extends XToolsUIPlugin {
    final protected static String DRAG_DROP_LISTENER_PROVIDERS_EXT_P_NAME = "dragDropListenerProviders";
    final protected static String TRANSFER_ADAPTER_PROVIDERS_EXT_P_NAME = "transferAdapterProviders";
public class CommonUIServicesDNDPlugin extends XToolsUIPlugin {
public class CommonUIServicesDNDPlugin extends XToolsUIPlugin {
public class CommonUIServicesDNDPlugin extends XToolsUIPlugin {
public class CommonUIServicesDNDPlugin extends XToolsUIPlugin {
public class CommonUIServicesDNDPlugin extends AbstractUIPlugin {
public class CommonUIServicesPlugin extends XToolsUIPlugin {
public class CommonUIServicesPlugin extends XToolsUIPlugin {
    final protected static String ELEMENT_SELECTION_PROVIDERS_EXT_P_NAME = "elementSelectionProviders";
public class CommonUIServicesPlugin extends XToolsUIPlugin {
    final protected static String EDITOR_PROVIDERS_EXT_P_NAME = "editorProviders";
    final protected static String ELEMENT_SELECTION_PROVIDERS_EXT_P_NAME = "elementSelectionProviders";
    final protected static String ICON_PROVIDERS_EXT_P_NAME = "iconProviders";
    final protected static String MARKER_NAVIGATION_PROVIDERS_EXT_P_NAME = "markerNavigationProviders";
    final protected static String PARSER_PROVIDERS_EXT_P_NAME = "parserProviders";
public class CommonUIServicesPlugin extends XToolsUIPlugin {
public class CommonUIServicesPlugin extends XToolsUIPlugin {
public class CommonUIServicesPlugin extends AbstractUIPlugin {
public class CompartmentAccessorEditPart extends ConnectionNodeEditPart {
public class CompartmentAccessorEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {
public class CompartmentCollapseHandle extends AbstractHandle implements PropertyChangeListener {
public class CompartmentCollapseHandle extends AbstractHandle implements NotificationListener, PropertyChangeListener {
public class CompartmentCollapseHandle extends AbstractHandle implements NotificationListener, PropertyChangeListener {
    public static Dimension SIZE = new Dimension (MapMode.LPtoDP (ResizableCompartmentFigure.MIN_CLIENT_SIZE), MapMode.LPtoDP (ResizableCompartmentFigure.MIN_CLIENT_SIZE));
public class CompartmentCollapseHandle extends AbstractHandle implements NotificationListener, PropertyChangeListener {
    public static Dimension SIZE = new Dimension (11, 11);
public class CompartmentEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
        public org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class CompartmentEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class CompartmentEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2001;
public class CompartmentEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2005;
public class CompartmentEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class CompartmentEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrappingLabel getFigureDiagramElementFigure_NameLabel ();
public class CompartmentEditPart extends ShapeNodeEditPart {
    public static String VISUAL_ID = "1001";
public class CompartmentEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1001;
public class CompartmentEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
public class CompartmentEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
public class CompartmentEditPart extends ShapeNodeEditPart {
public class CompartmentEditPart extends ShapeNodeEditPart {
public class CompartmentEditPart extends ShapeNodeEditPart {
public class CompartmentEditPart extends ShapeNodeEditPart {
public class CompartmentEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1001;
public class CompartmentEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2001;
public class CompartmentImpl extends DiagramElementImpl implements Compartment {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class CompartmentImpl extends DiagramElementImpl implements Compartment {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class CompartmentImpl extends DiagramElementImpl implements Compartment {
public class CompartmentImpl extends DiagramElementImpl implements Compartment {
    protected ChildAccess accessor;
    public ChildAccess basicGetAccessor ();
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public void notifyChanged (Notification notification);
public class CompartmentItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class CompartmentItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class CompartmentItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class CompartmentItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class CompartmentItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class CompartmentItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class CompartmentItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    protected EList childNodes = null;
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    protected EList children = null;
    public EList getChildren ();
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    protected EClass eStaticClass (); protected EList children = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < ChildReference > children = null;
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    protected Compartment compartment = null;
    protected EList < ChildReference > children = null;
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    protected Compartment compartment;
    protected EList < ChildReference > children;
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    public void setParentNode (NodeMapping newParentNode);
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
    public void setParentNode (NodeMapping newParentNode);
public class CompartmentMappingImpl extends EObjectImpl implements CompartmentMapping {
public class CompartmentMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CompartmentMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CompartmentMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CompartmentMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CompartmentMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
public class CompartmentMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
public class CompartmentNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5001;
public class CompartmentNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5005;
public class CompartmentNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class CompartmentNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class CompartmentNameViewFactory extends BasicNodeViewFactory {
    protected void decorateView (View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted);
public class CompartmentNameViewFactory extends BasicNodeViewFactory {
public class CompartmentViewFactory extends AbstractShapeViewFactory {
public class CompartmentViewFactory extends AbstractShapeViewFactory {
public class CompartmentVisualFacetsEditPart extends ListCompartmentEditPart {
    final public static int VISUAL_ID = 7001;
public class CompartmentVisualFacetsEditPart extends ListCompartmentEditPart {
    final public static int VISUAL_ID = 7005;
public class CompartmentVisualFacetsViewFactory extends ListCompartmentViewFactory {
public class CompartmentVisualFacetsViewFactory extends BasicNodeViewFactory {
public class CompositeCommand implements ICommand {
    final protected static String CANCELLED_MESSAGE = ResourceManager.getInstance ().getString ("AbstractCommand._INFO_.cancelOperation");
public class CompositeCommand implements ICommand {
public class CompositeCommand implements ICommand {
    protected CommandResult newCancelledCommandResult ();
    protected String getPluginId ();
    protected boolean isCanceled (); final protected static String EMPTY_STRING = "";
    protected void setCanceled (boolean canceled);
    protected void undoCancelledCommands (List executedCommands);
    public CMValidator getValidator ();
    public CompositeCommand (String label, List commands) {
    public ICommand unwrap ();
    public boolean involvesReadOnlyNonWorkSpaceFiles ();
    final public Collection getAffectedObjects ();
    final public ICommand compose (ICommand command);
    final public List getCommands ();
    final public boolean isExecutable ();
    final public boolean isRedoable ();
    final public boolean isUndoable ();
    public void execute (IProgressMonitor progressMonitor);
    public void redo ();
    public void undo ();
public class CompositeCommand extends AbstractCommand implements ICompositeCommand {
    private class ChildIterator implements Iterator {
        protected Object last;
        final protected ListIterator iter;
        public Object next ();
        public boolean hasNext ();
        public void remove ();
    private class ChildListIterator extends ChildIterator implements ListIterator {
        public Object previous ();
        public boolean hasPrevious ();
        public int nextIndex ();
        public int previousIndex ();
        public void add (Object o);
        public void set (Object o);
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doUndoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected IStatus aggregateStatuses (List statuses);
    protected List getChildren ();
    protected List getReturnValues ();
    final protected boolean isExecuted ();
    public CompositeCommand (String label, List children) {
    public ICommand reduce ();
    public Iterator iterator ();
    public List getAffectedFiles ();
    public ListIterator listIterator ();
    public ListIterator listIterator (int index);
    public boolean canExecute ();
    public boolean canRedo ();
    public boolean canUndo ();
    public int size ();
    public void add (IUndoableOperation operation);
    public void dispose ();
    public void remove (IUndoableOperation operation);
public class CompositeCommand extends AbstractCommand implements ICompositeCommand {
public class CompositeCommand extends AbstractCommand implements ICompositeCommand {
abstract public class CompositeLayoutProvider extends DefaultProvider {
abstract public class CompositeLayoutProvider extends DefaultProvider {
abstract public class CompositeLayoutProvider extends DefaultProvider {
abstract public class CompositeLayoutProvider extends DefaultProvider {
public class CompositeLeftRightProvider extends CompositeLayoutProvider {
public class CompositeLeftRightProvider extends CompositeLayoutProvider {
    protected int getLayoutDirection (GraphicalEditPart ep);
public class CompositeStrategy implements Strategy {
    public < T extends EObject > void filter (Collection < T > soFar, Hierarchy hierarchy);
    public CompositeStrategy (Strategy...strategies) {
public class CompositeStrategy < T extends EObject > implements Strategy < T > {
    public CompositeStrategy (Strategy < T >...strategies) {
    public void filter (Collection < T > soFar, Hierarchy hierarchy);
public class CompositeTransactionalCommand extends CompositeEMFOperation implements ICompositeCommand {
public class CompositeTransactionalCommand extends CompositeEMFOperation implements ICompositeCommand {
    public boolean canExecute ();
    public boolean canRedo ();
public class CompositeTransactionalCommand extends CompositeEMFOperation implements ICompositeCommand {
public class CompositeTransactionalCommand extends CompositeEMFOperation implements ICommandWithSettableResult, ICompositeCommand {
    public void internalSetResult (CommandResult result);
public class CompoundBorderImpl extends EObjectImpl implements CompoundBorder {
    protected Border inner = null;
    protected Border outer = null;
public class CompoundBorderImpl extends EObjectImpl implements CompoundBorder {
    protected Border inner;
    protected Border outer;
public class CompoundBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CompoundBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class CompoundBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CompoundBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
abstract public class ConfigureRelationshipCommand extends ConfigureElementCommand {
    public boolean isExecutable ();
abstract public class ConfigureRelationshipCommand extends ConfigureElementCommand {
    public boolean canExecute ();
public class ConfigureRequest extends AbstractEditCommandRequest {
public class ConfigureRequest extends AbstractEditCommandRequest {
    public ConfigureRequest (TransactionalEditingDomain editingDomain, EObject elementToConfigure, IElementType typeToConfigure) {
public class ConnectionAppearancePropertySection extends ColorsAndFontsPropertySection {
public class ConnectionAppearancePropertySection extends ColoursAndFontsAndLineStylesPropertySection {
abstract public class ConnectionBendpointEditPolicy extends SelectionHandlesEditPolicy implements PropertyChangeListener {
    protected void showOutsideSourceFeedback (List constraint);
abstract public class ConnectionBendpointEditPolicy extends SelectionHandlesEditPolicy implements PropertyChangeListener {
abstract public class ConnectionBendpointEditPolicy extends SelectionHandlesEditPolicy implements PropertyChangeListener {
abstract public class ConnectionBendpointEditPolicy extends SelectionHandlesEditPolicy implements PropertyChangeListener {
    protected void showOutsideSourceFeedback (List constraint);
abstract public class ConnectionBendpointEditPolicy extends SelectionHandlesEditPolicy implements PropertyChangeListener {
    protected void showOutsideSourceFeedback (List constraint);
abstract public class ConnectionBendpointEditPolicy extends SelectionHandlesEditPolicy implements PropertyChangeListener {
public class ConnectionCreationTool extends org.eclipse.gef.tools.ConnectionCreationTool {
public class ConnectionCreationTool extends org.eclipse.gef.tools.ConnectionCreationTool {
public class ConnectionCreationTool extends org.eclipse.gef.tools.ConnectionCreationTool {
public class ConnectionCreationTool extends org.eclipse.gef.tools.ConnectionCreationTool {
public class ConnectionCreationTool extends org.eclipse.gef.tools.ConnectionCreationTool {
public class ConnectionCreationTool extends org.eclipse.gef.tools.ConnectionCreationTool {
public class ConnectionEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
        public org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class ConnectionEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class ConnectionEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2003;
public class ConnectionEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2007;
public class ConnectionEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class ConnectionEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrappingLabel getFigureDiagramElementFigure_NameLabel ();
package org.eclipse.gmf.graphdef.editor.edit.parts;
public class ConnectionEditPart extends ShapeNodeEditPart {
    protected IFigure contentPane;
    protected IFigure createNodeShape ();
    protected IFigure getContentPaneFor (IGraphicalEditPart editPart); protected IFigure primaryShape;
    protected IFigure setupContentPane (IFigure nodeShape);
    protected LayoutEditPolicy createLayoutEditPolicy ();
    protected NodeFigure createNodeFigure ();
    protected NodeFigure createNodePlate ();
    protected boolean addFixedChild (EditPart childEditPart);
    protected boolean removeFixedChild (EditPart childEditPart);
    public IFigure getContentPane (); public class DiagramElementFigure extends RectangleFigure {
        protected boolean useLocalCoordinates ();
        protected void setUseLocalCoordinates (boolean useLocalCoordinates);
        public DiagramElementFigure () {
        public WrappingLabel getFigureDiagramElementFigure_NameLabel ();
    final public static int VISUAL_ID = 2007;
package org.eclipse.gmf.runtime.diagram.ui.editparts;
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
    abstract protected Connection createConnectionFigure ();
    final protected EditPart createChild (Object model);
    final protected IFigure createFigure ();
    final protected IMapMode getMapMode ();
    final protected org.eclipse.gef.ConnectionEditPart createConnection (Object connectionView);
    final protected void createEditPolicies (); protected AccessibleEditPart accessibleEP;
    protected AccessibleEditPart getAccessibleEditPart ();
    protected Command getPropertyChangeCommand (Object property, Object oldValue, Object newValue);
    protected Diagram getDiagramView ();
    protected Edge getEdge ();
    protected EditDomain getEditDomain ();
    protected List getModelChildren ();
    protected Object getModelSource ();
    protected Object getModelTarget ();
    protected String [] getAppearancePropertyIDs ();
    protected void addListenerFilter (String filterId, NotificationListener listener, EObject element);
    protected void addListenerFilter (String filterId, NotificationListener listener, EObject element, EStructuralFeature feature);
    protected void addNotationalListeners ();
    protected void handlePropertyChangeEvent (PropertyChangeEvent event);
    protected void installRouter ();
    protected void performDirectEditRequest (Request request);
    protected void refreshBendpoints ();
    protected void refreshFont ();
    protected void refreshForegroundColor ();
    protected void refreshJumplinks ();
    protected void refreshRouterChange ();
    protected void refreshRoutingStyles ();
    protected void refreshSmoothness ();
    protected void refreshVisibility ();
    protected void refreshVisuals ();
    protected void registerModel ();
    protected void removeListenerFilter (String filterId);
    protected void removeNotationalListeners ();
    protected void removeSemanticListeners ();
    protected void setFont (FontData fontData);
    protected void setForegroundColor (Color color);
    protected void setVisibility (boolean vis);
    protected void unregisterModel ();
    public DragTracker getDragTracker (Request req);
    public EObject resolveSemanticElement ();
    public IDiagramEditDomain getDiagramEditDomain ();
    public IGraphicalEditPart getChildBySemanticHint (String semanticHint);
    public Map getAppearancePropertiesMap ();
    public Object getAdapter (Class key);
    public Object getPropertyValue (Object id);
    public Object getStructuralFeatureValue (EStructuralFeature feature);
    public PreferencesHint getDiagramPreferencesHint ();
    public TopGraphicEditPart getTopGraphicEditPart ();
    public View getNotationView ();
    public View getPrimaryView ();
    public boolean isEditModeEnabled ();
    public boolean isSelectable ();
    public boolean understandsRequest (Request req);
    final public boolean isCanonical ();
    final public void propertyChange (PropertyChangeEvent event);
    public void activate ();
    public void addNotify ();
    public void deactivate ();
    public void disableEditMode ();
    public void enableEditMode ();
    public void eraseSourceFeedback (Request request);
    public void eraseTargetFeedback (Request request);
    public void fillAppearancePropertiesMap (Map properties);
    public void notifyChanged (Notification notification);
    public void performRequest (Request request);
    public void reactivateSemanticModel ();
    public void refresh ();
    public void setPropertyValue (Object id, Object value);
    public void setStructuralFeatureValue (EStructuralFeature feature, Object value);
    public void showSourceFeedback (Request request);
    public void showTargetFeedback (Request request);
    private static void registerAdapters ();
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationForEditPartsListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationForEditPartsListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
    public void removeNotify ();
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
abstract public class ConnectionEditPart extends AbstractConnectionEditPart implements IContainedEditPart, IGraphicalEditPart, IPrimaryEditPart, NotificationListener, PropertyChangeListener {
    protected int getLineType ();
    protected void refreshArrowSource ();
    protected void refreshLineType ();
    protected void setArrowSource (RotatableDecoration arrowDecoration);
    protected void setLineType (int lineType);
public class ConnectionEditPart extends ShapeNodeEditPart {
    public static String VISUAL_ID = "1003";
public class ConnectionEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1003;
public class ConnectionEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
public class ConnectionEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
public class ConnectionEditPart extends ShapeNodeEditPart {
public class ConnectionEditPart extends ShapeNodeEditPart {
public class ConnectionEditPart extends ShapeNodeEditPart {
public class ConnectionEditPart extends ShapeNodeEditPart {
public class ConnectionEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1003;
public class ConnectionEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2003;
public class ConnectionHandle extends AbstractHandle {
public class ConnectionHandle extends AbstractHandle {
public class ConnectionHandleEditPolicy extends DiagramAssistantEditPolicy {
public class ConnectionHandleEditPolicy extends DiagramAssistantEditPolicy {
public class ConnectionImpl extends DiagramElementImpl implements Connection {
public class ConnectionImpl extends DiagramElementImpl implements Connection {
    public Figure getConnectionFigure ();
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
public class ConnectionImpl extends DiagramElementImpl implements Connection {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
public class ConnectionImpl extends DiagramElementImpl implements Connection {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
public class ConnectionImpl extends DiagramElementImpl implements Connection {
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public Figure getConnectionFigure ();
public class ConnectionImpl extends DiagramElementImpl implements Connection {
public class ConnectionItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ConnectionItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ConnectionItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConnectionItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConnectionItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConnectionItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ConnectionItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class ConnectionItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class ConnectionItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class ConnectionItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class ConnectionItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class ConnectionItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class ConnectionLabelsEditPolicy extends AbstractEditPolicy {
public class ConnectionLabelsEditPolicy extends AbstractEditPolicy {
    protected TransactionalEditingDomain getEditingDomain ();
    protected boolean isCompartment (Node node);
public class ConnectionNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5003;
public class ConnectionNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5007;
public class ConnectionNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class ConnectionNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class ConnectionNameViewFactory extends BasicNodeViewFactory {
    protected void decorateView (View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted);
public class ConnectionNameViewFactory extends BasicNodeViewFactory {
abstract public class ConnectionNodeEditPart extends ConnectionEditPart implements INodeEditPart {
    protected void handleNotificationEvent (NotificationEvent e);
abstract public class ConnectionNodeEditPart extends ConnectionEditPart implements INodeEditPart {
abstract public class ConnectionNodeEditPart extends ConnectionEditPart implements INodeEditPart {
abstract public class ConnectionNodeEditPart extends ConnectionEditPart implements INodeEditPart {
public class ConnectionViewFactory extends AbstractShapeViewFactory {
public class ConnectionViewFactory extends AbstractShapeViewFactory {
public class ConnectionVisualFacetsEditPart extends ListCompartmentEditPart {
    final public static int VISUAL_ID = 7003;
public class ConnectionVisualFacetsEditPart extends ListCompartmentEditPart {
    final public static int VISUAL_ID = 7007;
public class ConnectionVisualFacetsViewFactory extends ListCompartmentViewFactory {
public class ConnectionVisualFacetsViewFactory extends BasicNodeViewFactory {
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    protected JumpLinkStatus jumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
    protected JumpLinkType jumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
    protected Routing routing = ROUTING_EDEFAULT;
    protected Smoothness smoothness = SMOOTHNESS_EDEFAULT;
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
    final protected static int AVOID_OBSTRUCTIONS_EFLAG = 1 << 8;
    final protected static int CLOSEST_DISTANCE_EFLAG = 1 << 9;
    final protected static int JUMP_LINKS_REVERSE_EFLAG = 1 << 10;
    public void setUUID (byte [] newUUID);
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    final protected static int AVOID_OBSTRUCTIONS_EFLAG = 1 << 12;
    final protected static int CLOSEST_DISTANCE_EFLAG = 1 << 13;
    final protected static int JUMP_LINKS_REVERSE_EFLAG = 1 << 18;
    final protected static int JUMP_LINK_STATUS_EFLAG = 0x3 << JUMP_LINK_STATUS_EFLAG_OFFSET;
    final protected static int JUMP_LINK_STATUS_EFLAG_DEFAULT = JumpLinkStatus.VALUES.indexOf (JUMP_LINK_STATUS_EDEFAULT) << JUMP_LINK_STATUS_EFLAG_OFFSET;
    final protected static int JUMP_LINK_STATUS_EFLAG_OFFSET = 14;
    final protected static int JUMP_LINK_TYPE_EFLAG = 0x3 << JUMP_LINK_TYPE_EFLAG_OFFSET;
    final protected static int JUMP_LINK_TYPE_EFLAG_DEFAULT = JumpLinkType.VALUES.indexOf (JUMP_LINK_TYPE_EDEFAULT) << JUMP_LINK_TYPE_EFLAG_OFFSET;
    final protected static int JUMP_LINK_TYPE_EFLAG_OFFSET = 16;
    final protected static int ROUTING_EFLAG = 0x3 << ROUTING_EFLAG_OFFSET;
    final protected static int ROUTING_EFLAG_DEFAULT = Routing.VALUES.indexOf (ROUTING_EDEFAULT) << ROUTING_EFLAG_OFFSET;
    final protected static int ROUTING_EFLAG_OFFSET = 8;
    final protected static int SMOOTHNESS_EFLAG = 0x3 << SMOOTHNESS_EFLAG_OFFSET;
    final protected static int SMOOTHNESS_EFLAG_DEFAULT = Smoothness.VALUES.indexOf (SMOOTHNESS_EDEFAULT) << SMOOTHNESS_EFLAG_OFFSET;
    final protected static int SMOOTHNESS_EFLAG_OFFSET = 10;
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends NotationEObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    public void eSet (int featureID, Object newValue);
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends FlatEObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends FlatEObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    protected int lineWidth = LINE_WIDTH_EDEFAULT;
    final protected static int LINE_WIDTH_EDEFAULT = 1;
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
    public void setUUID (byte [] newUUID);
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    final protected static int LINE_WIDTH_EDEFAULT = 1;
public class ConnectorStyleImpl extends EObjectImpl implements ConnectorStyle {
    final protected static int LINE_WIDTH_EDEFAULT = - 1;
public class ConnectorStyleItemProvider extends EObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ConnectorStyleItemProvider extends EObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ConstantColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public void notifyChanged (Notification notification);
public class ConstantColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class ConstantColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConstantColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConstraintImpl extends ValueExpressionImpl implements Constraint {
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class ConstraintImpl extends ValueExpressionImpl implements Constraint {
public class ConstraintImpl extends ValueExpressionImpl implements Constraint {
    protected EClass eStaticClass ();
public class ConstraintImpl extends ValueExpressionImpl implements Constraint {
    @Override
public class ConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ContainerEditPolicy extends org.eclipse.gef.editpolicies.ContainerEditPolicy {
public class ContainerEditPolicy extends org.eclipse.gef.editpolicies.ContainerEditPolicy {
public class ContainerNodeEditPolicy extends GraphicalNodeEditPolicy {
    protected CreateViewAndOptionallyElementCommand getCreateViewAndOptionallyElementCommand (ObjectAdapter endAdapter, Point location);
public class ContainerNodeEditPolicy extends GraphicalNodeEditPolicy {
    protected CreateViewAndOptionallyElementCommand getCreateOtherEndCommand (IAdaptable endAdapter, Point location);
    protected GetConnectorTypeAndEndCommand getConnectorTypeAndEndPopupCommand (CreateConnectionRequest request);
public class ContainerNodeEditPolicy extends GraphicalNodeEditPolicy {
    protected GetConnectorTypeAndEndCommand getConnectorTypeAndEndPopupCommand (CreateConnectionRequest request);
public class ContainerNodeEditPolicy extends GraphicalNodeEditPolicy {
    protected ICommand getCreateConnectionCommand (CreateRequest request, IAdaptable typeInfoAdapter, IAdaptable sourceViewAdapter, IAdaptable targetViewAdapter);
public class ContainmentClosure {
    public static synchronized boolean contains (EClass root, EClass type, EPackage scope);
public class ContainmentClosure {
    public ContainmentClosure () {
    public synchronized boolean contains (EClass root, EClass type, EPackage scope);
public class ContextFactory {
public class ContextFactory {
    public static XpandExecutionContext createXpandContext (ResourceManager resourceManager, Output output, Collection < Variable > globalVars, ClassLoader context);
public class ContextFactory {
public class ContextFactory {
public class ContextMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ContextMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ContextMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ContextMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
final public class ContributeToActionBarsOperation implements IOperation {
public class ContributeToActionBarsOperation implements IOperation {
public class ContributeToPaletteOperation implements IOperation {
    public ContributeToPaletteOperation (IEditorPart editor, Object content, PaletteRoot root) {
public class ContributeToPaletteOperation implements IOperation {
    public ContributeToPaletteOperation (IEditorPart editor, Object content, PaletteRoot root, Map predefinedEntries) {
public class ContributionItemService extends Service implements IContributionItemProvider {
    protected static class ProviderDescriptor extends Service.ProviderDescriptor {
    public void removeDisabledContributions (IContributionManager manager);
public class ContributionItemService extends Service implements IContributionItemProvider {
    protected static class ProviderDescriptor extends ActivityFilterProviderDescriptor {
    public void updateActionBars (IActionBars actionBars, IWorkbenchPartDescriptor workbenchPartDescriptor);
public class ConverterSection extends OptionTemplateSection {
public class ConverterSection extends OptionTemplateSection {
    final public static String OPTION_OUTPUT_RESOURCE_FULL_PATH = SECTION_ID + ".outputResource";
public class ConverterSection extends OptionTemplateSection {
    private static class CachedInputValidationState {
    final public static String OPTION_OUTPUT_RESOURCE_FULL_PATH = SECTION_ID + ".outputResource";
public class ConverterSection extends OptionTemplateSection {
    private static class InputValidationState {
        public InputValidationState (FileNameOption galleryOption, FileNameOption diagramElementsOption) {
    final public static String OPTION_OUTPUT_DIAGRAM_ELEMENTS_FULL_PATH = SECTION_ID + ".outputDiagramElements";
    final public static String OPTION_OUTPUT_GALLERY_FULL_PATH = SECTION_ID + ".outputGallery";
public class ConverterSection extends OptionTemplateSection {
public class ConverterSection extends OptionTemplateSection {
    final public static String OPTION_USE_RUNTIME_FIGURES = SECTION_ID + ".useRuntimeFigures";
public class ConvexPentagonNodeFigure extends DefaultSizeNodeFigure implements IPolygonAnchorableFigure {
    public ConvexPentagonNodeFigure () {
public class ConvexPentagonNodeFigure extends DefaultSizeNodeFigure implements IPolygonAnchorableFigure {
public interface Copier {
    final public static Copier COMPLETE_COPY = new Copier () {
        @SuppressWarnings("unchecked")
        public EObject copyToCurrent (EObject currentParent, EObject old);
    ;
    final public static Copier NEVER_COPY = new Copier () {
    ;
public interface Copier {
    final public static Copier COMPLETE_COPY = new Copier () {
    ;
    final public static Copier NEVER_COPY = new Copier () {
    ;
public interface Copier {
    public EObject copyToCurrent (EObject currentParent, EObject old); final public static Copier COMPLETE_COPY = new Copier () {
        public EObject copyToCurrent (EObject currentParent, EObject old);
    ;
    final public static Copier NEVER_COPY = new Copier () {
        public EObject copyToCurrent (EObject currentParent, EObject old);
    ;
public interface Copier {
    public EObject copyToCurrent (EObject currentParent, EObject old, Reconciler reconciler); final public static Copier COMPLETE_COPY_NO_CROSSREF = new Copier () {
        public EObject copyToCurrent (EObject currentParent, EObject old, Reconciler reconciler);
    ;
    final public static Copier COMPLETE_COPY_WITH_CROSSREF = new Copier () {
        public EObject copyToCurrent (EObject currentParent, EObject old, Reconciler reconciler);
    ;
    final public static Copier NEVER_COPY = new Copier () {
        public EObject copyToCurrent (EObject currentParent, EObject old, Reconciler reconciler);
    ;
class CopiesBlock extends DialogBlock {
class CopiesBlock extends DialogBlock {
    public void dispose ();
abstract public class CopyAction extends PresentationAction {
abstract public class CopyAction extends DiagramAction {
public class CopyAppearancePropertiesAction extends PresentationAction {
public class CopyAppearancePropertiesAction extends DiagramAction {
public class CopyAppearancePropertiesAction extends DiagramAction {
public class CopyAppearancePropertiesAction extends DiagramAction {
public class CopyCommand extends ClipboardCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public CopyCommand (String label, View viewContext, List source) {
    public CopyCommand (View viewContext, List source) {
public class CopyCommand extends ClipboardCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public CopyCommand (TransactionalEditingDomain editingDomain, String label, View viewContext, List source) {
    public CopyCommand (TransactionalEditingDomain editingDomain, View viewContext, List source) {
public class CopyImageCommand extends AbstractCommand {
public class CopyImageCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public boolean canRedo ();
public class CopyingResource extends XMIResourceImpl {
    public CopyingResource (XMLResource mslResource, URI uri, CopyingResourceSet mslCopyingResourceSet) {
    public CopyingResource (XMLResource mslResource, URI uri, CopyingResourceSet mslCopyingResourceSet, boolean regenerateIds) {
public class CopyingResource extends XMIResourceImpl {
    protected class CopyingHelper extends XMIHelperImpl {
        protected URI getHREF (Resource otherResource, EObject obj);
        public CopyingHelper () {
        public CopyingHelper (XMLResource resource) {
        public String getHREF (EObject obj);
        public URI deresolve (URI anUri);
    public CopyingResource (XMLResource resource, URI uri, CopyingResourceSet copyingResourceSet) {
    public CopyingResource (XMLResource resource, URI uri, CopyingResourceSet copyingResourceSet, boolean regenerateIds) {
    public class CopyingSave extends XMISaveImpl {
        protected int sameDocMany (EObject o, EStructuralFeature f);
        protected int sameDocSingle (EObject o, EStructuralFeature f);
        public CopyingSave (Map options, XMLHelper helper, String encoding) {
        public CopyingSave (Map options, XMLHelper helper, String encoding, String xmlVersion) {
        public CopyingSave (XMLHelper helper) {
class CopyObjects {
public class CopyObjects {
    public Collection originalObjects;
    public CopyObjects (Collection originalObjects) {
    public Map copyAlwaysMap = new HashMap ();
    public Map copyParent2CopyMap = new HashMap ();
    public Map copyParent2ObjectsMap = new HashMap ();
    public Map objectsToCopyParentMap = new HashMap ();
    public Set combinedCopyAlwaysSet = new HashSet ();
    public Set totalCopyObjects = new HashSet ();
    public void clear ();
public class CopyObjects {
public class CopyObjects {
    public boolean sortTotalCopyObjects = true;
public class CopyOperation extends ClipboardOperation {
public class CopyOperation extends ClipboardOperation {
public class CopyToHTMLImageUtil extends CopyToImageUtil {
    private class LineSegmentPointsComparator implements Comparator < Point > {
public class CopyToHTMLImageUtil extends CopyToImageUtil {
    private static class LineSegmentPointsComparator implements Comparator < Point > {
    public class ExportInfo {
        final public DiagramGenerator diagramGenerator;
        final public Dimension tileSize;
        final public IPath directory;
        final public ImageFileFormat imageFormat;
        final public Point tiles;
        final public String commonTileFileName;
public class CopyToHTMLImageUtil extends CopyToImageUtil {
public class CopyToHTMLImageUtil extends CopyToImageUtil {
public class CopyToImageDialog extends Dialog {
public class CopyToImageDialog extends Dialog {
public class CopyToImageUtil {
public class CopyToImageUtil {
    protected DiagramGenerator getDiagramGenerator (DiagramEditPart diagramEP, ImageFileFormat format);
public class CopyToImageUtil {
public class CopyToImageUtil {
public class CopyToImageUtil {
public class CopyToImageUtil {
    public byte [] copyToImageByteArray (Diagram diagram, int maxWidth, int maxHeight, ImageFileFormat format, IProgressMonitor monitor, PreferencesHint preferencesHint, boolean useMargins) throws CoreException;
public class CopyToImageUtil {
public class CopyToImageUtil {
public class CreateCommand extends AbstractModelCommand {
    private class CreateValidator extends CMValidator {
        public boolean okToEdit (ICommand command);
    public CMValidator getValidator ();
    public Collection getAffectedObjects ();
    public CreateCommand (CreateViewRequest.ViewDescriptor viewDescriptor, View containerView) {
public class CreateCommand extends AbstractTransactionalCommand {
    public CreateCommand (TransactionalEditingDomain editingDomain, CreateViewRequest.ViewDescriptor viewDescriptor, View containerView) {
    public List getAffectedFiles ();
public class CreateConnectionViewAndElementRequest extends CreateConnectionViewRequest implements SuppressibleUIRequest {
public class CreateConnectionViewAndElementRequest extends CreateConnectionViewRequest implements SuppressibleUIRequest {
public class CreateConnectionViewRequest extends CreateConnectionRequest {
    public static class ConnectionViewDescriptor extends ViewDescriptor {
public class CreateConnectionViewRequest extends CreateConnectionRequest {
    public CreateConnectionViewRequest (EObject element, boolean persisted, PreferencesHint preferencesHint) {
    public static class ConnectionViewDescriptor extends ViewDescriptor {
        public ConnectionViewDescriptor (IAdaptable elementAdapter, String semanticHint, boolean persisted, PreferencesHint preferencesHint) {
        public ConnectionViewDescriptor (IAdaptable elementAdapter, boolean persisted, PreferencesHint preferencesHint) {
public class CreateDecoratorsOperation extends CreateDecoratorsOperationBase implements IOperation {
    public CreateDecoratorsOperation (IDecoratorTargetBase decoratorTarget) {
public class CreateDecoratorsOperation implements IOperation {
    final protected IDecoratorTarget decoratorTarget;
    public CreateDecoratorsOperation (IDecoratorTarget decoratorTarget) {
public class CreateDiagramCommand extends AbstractModelCommand {
    public CreateDiagramCommand (String label, EObject anElementContext, String aDiagramKindType, PreferencesHint preferencesHint) {
public class CreateDiagramCommand extends AbstractTransactionalCommand {
    public CreateDiagramCommand (TransactionalEditingDomain editingDomain, String label, EObject anElementContext, String aDiagramKindType, PreferencesHint preferencesHint) {
public class CreateDiagramLinkCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public CreateDiagramLinkCommand (String label, View view, Diagram diagram) {
    public boolean isExecutable ();
public class CreateDiagramLinkCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public CreateDiagramLinkCommand (TransactionalEditingDomain editingDomain, String label, View view, Diagram diagram) {
    public boolean canExecute ();
public class CreateElementCommand extends EditElementCommand {
    public boolean isExecutable ();
public class CreateElementCommand extends EditElementCommand {
    public boolean canExecute ();
public class CreateElementRequest extends AbstractEditCommandRequest {
public class CreateElementRequest extends AbstractEditCommandRequest {
    public CreateElementRequest (TransactionalEditingDomain editingDomain, EObject container, IElementType elementType) {
    public CreateElementRequest (TransactionalEditingDomain editingDomain, EObject container, IElementType elementType, EReference containmentFeature) {
    public CreateElementRequest (TransactionalEditingDomain editingDomain, IElementType elementType) {
public class CreateElementRequest extends AbstractEditCommandRequest {
public class CreateElementRequest extends AbstractEditCommandRequest {
public class CreateElementRequest extends AbstractEditCommandRequest {
public class CreateElementRequest extends AbstractEditCommandRequest {
public class CreateElementRequest extends AbstractEditCommandRequest {
public class CreateElementRequest extends AbstractEditCommandRequest {
public class CreateGraphicEditPartOperation extends EditPartOperation {
    final public View getView ();
public class CreateGraphicEditPartOperation extends EditPartOperation {
public class CreateGuideCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public CreateGuideCommand (DiagramRuler parent, int position) {
public class CreateGuideCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public CreateGuideCommand (TransactionalEditingDomain editingDomain, DiagramRuler parent, int position) {
public class CreateNewModelExtension extends Observable implements ModelSelectionPageExtension {
public class CreateNewModelExtension extends Observable implements ModelSelectionPageExtension {
    public void validatePage ();
public class CreateNotationalEdgeCommand extends CreateNotationalElementCommand {
public class CreateNotationalEdgeCommand extends CreateNotationalElementCommand {
public class CreateNotationalNodeCommand extends CreateNotationalElementCommand {
public class CreateNotationalNodeCommand extends CreateNotationalElementCommand {
    public CreateNotationalNodeCommand (View parent, EObject domainElement, Rectangle constraint, IViewDecorator decorator, boolean expose) {
    final public Command myExposeCommand;
public class CreateNotationalNodeCommand extends CreateNotationalElementCommand {
public class CreateNotationalNodeCommand extends CreateNotationalElementCommand {
public class CreateOrSelectElementCommand extends PopupMenuCommand {
public class CreateOrSelectElementCommand extends PopupMenuCommand {
public class CreateOrSelectElementCommand extends PopupMenuCommand {
    final public static String CREATE_WITHOUT_BINDING = ResourceManager.getI18NString ("CreateOrSelectElementCommand.PopupMenu.CreateWithoutBindingMenuItem.Text");
    final public static String SELECT_EXISTING = ResourceManager.getI18NString ("CreateOrSelectElementCommand.PopupMenu.SelectExistingElementMenuItem.Text");
    final public static String UNSPECIFIED = ResourceManager.getI18NString ("CreateOrSelectElementCommand.PopupMenu.UnspecifiedMenuItem.Text");
public class CreateOrSelectElementCommand extends PopupMenuCommand {
    final public static String CREATE_WITHOUT_BINDING = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_CreateWithoutBindingMenuItem_Text;
    final public static String SELECT_EXISTING = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_SelectExistingElementMenuItem_Text;
    final public static String UNSPECIFIED = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_UnspecifiedMenuItem_Text;
public class CreateOrSelectElementCommand extends PopupMenuCommand {
public class CreateOrSelectElementCommand extends PopupMenuCommand {
public class CreateOrSelectElementCommand extends PopupMenuCommand {
    final public static String CREATE_WITHOUT_BINDING = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_CreateWithoutBindingMenuItem_Text;
    final public static String SELECT_EXISTING = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_SelectExistingElementMenuItem_Text;
    final public static String UNSPECIFIED = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_UnspecifiedMenuItem_Text;
public class CreateOrSelectElementCommand extends PopupMenuCommand {
    final public static String CREATE_WITHOUT_BINDING = InternalDiagramUIMessages.CreateOrSelectElementCommand_PopupMenu_CreateWithoutBindingMenuItem_Text;
    final public static String SELECT_EXISTING = InternalDiagramUIMessages.CreateOrSelectElementCommand_PopupMenu_SelectExistingElementMenuItem_Text;
    final public static String UNSPECIFIED = InternalDiagramUIMessages.CreateOrSelectElementCommand_PopupMenu_UnspecifiedMenuItem_Text;
public class CreateRelationshipCommand extends CreateElementCommand {
    public boolean isExecutable ();
public class CreateRelationshipCommand extends CreateElementCommand {
    public boolean canExecute ();
public class CreateRelationshipRequest extends CreateElementRequest {
public class CreateRelationshipRequest extends CreateElementRequest {
    public CreateRelationshipRequest (TransactionalEditingDomain editingDomain, EObject container, EObject source, EObject target, IElementType elementType) {
    public CreateRelationshipRequest (TransactionalEditingDomain editingDomain, EObject container, EObject source, EObject target, IElementType elementType, EReference containmentFeature) {
    public CreateRelationshipRequest (TransactionalEditingDomain editingDomain, EObject source, EObject target, IElementType elementType) {
    public CreateRelationshipRequest (TransactionalEditingDomain editingDomain, IElementType elementType) {
public class CreateShapeViewAction extends PresentationAction {
public class CreateShapeViewAction extends DiagramAction {
public class CreateShapeViewAction extends DiagramAction {
public class CreateShapeViewAction extends DiagramAction {
    protected void doRun (IProgressMonitor progressMonitor);
public class CreateSpecificDiagramRunTimeModelAction implements IObjectActionDelegate {
    @SuppressWarnings("unchecked")
public class CreateSpecificDiagramRunTimeModelAction implements IObjectActionDelegate {
public class CreateSpecificDiagramRunTimeModelAction implements IObjectActionDelegate {
public class CreateSpecificDiagramRunTimeModelAction implements IObjectActionDelegate {
    @SuppressWarnings("unchecked")
public class CreateUnspecifiedTypeConnectionRequest extends CreateConnectionRequest {
public class CreateUnspecifiedTypeConnectionRequest extends CreateConnectionRequest {
public class CreateUnspecifiedTypeRequest extends CreateRequest {
public class CreateUnspecifiedTypeRequest extends CreateRequest {
    public void setExtendedData (Map map);
public class CreateViewAction extends PresentationAction {
public class CreateViewAction extends DiagramAction {
public class CreateViewAction extends DiagramAction {
public class CreateViewAction extends DiagramAction {
    protected void doRun (IProgressMonitor progressMonitor);
public class CreateViewAndElementRequest extends CreateViewRequest {
public class CreateViewAndElementRequest extends CreateViewRequest {
    public void setExtendedData (Map map);
public class CreateViewAndOptionallyElementCommand extends AbstractCommand {
public class CreateViewAndOptionallyElementCommand extends AbstractCommand {
public class CreateViewAndOptionallyElementCommand extends AbstractCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    protected CommandResult doRedo ();
    public boolean isRedoable ();
    public boolean isUndoable ();
public class CreateViewAndOptionallyElementCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public List getAffectedFiles ();
    public boolean canRedo ();
    public boolean canUndo ();
public class CreateViewRequest extends CreateRequest {
    public static class ViewDescriptor implements IAdaptable {
public class CreateViewRequest extends CreateRequest {
    public static class ViewDescriptor implements IAdaptable {
        public ViewDescriptor (IAdaptable elementAdapter, Class viewkind, String semanticHint, boolean persisted, PreferencesHint preferencesHint) {
        public ViewDescriptor (IAdaptable elementAdapter, Class viewkind, boolean persisted, PreferencesHint preferencesHint) {
public class CreationEditPolicy extends AbstractEditPolicy {
public class CreationEditPolicy extends AbstractEditPolicy {
public class CreationTool extends org.eclipse.gef.tools.CreationTool {
public class CreationTool extends org.eclipse.gef.tools.CreationTool {
    final public Request createCreateRequest ();
public class CreationToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CreationToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class CreationToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CreationToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
    public Collection getInverseReferences (EObject eObject, boolean _resolve);
    public Collection getInverseReferencesCrossResource (EObject eObject);
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
public class CrossReferenceAdapter extends ECrossReferenceAdapter {
    public void updateImportsAndExports (Resource resource, EObject value, boolean register);
    public void updateImportsAndExportsForContents (Resource resource, EObject value, boolean register);
public class CustomAttributeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CustomAttributeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class CustomAttributeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomAttributeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomBehaviourImpl extends EObjectImpl implements CustomBehaviour {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class CustomBehaviourImpl extends EObjectImpl implements CustomBehaviour {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class CustomBehaviourImpl extends EObjectImpl implements CustomBehaviour {
public class CustomBehaviourImpl extends EObjectImpl implements CustomBehaviour {
    public void setSubject (GenCommonBase newSubject);
public class CustomBehaviourImpl extends EObjectImpl implements CustomBehaviour {
    public void setSubject (GenCommonBase newSubject);
public class CustomBehaviourImpl extends EObjectImpl implements CustomBehaviour {
public class CustomBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomBorderImpl extends EObjectImpl implements CustomBorder {
    protected EClass eStaticClass (); protected EList attributes = null;
    public EList getAttributes ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class CustomBorderImpl extends EObjectImpl implements CustomBorder {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < CustomAttribute > attributes = null;
public class CustomBorderImpl extends EObjectImpl implements CustomBorder {
    protected EList < CustomAttribute > attributes = null;
    protected String bundleName = BUNDLE_NAME_EDEFAULT;
    final protected static String BUNDLE_NAME_EDEFAULT = null;
public class CustomBorderImpl extends EObjectImpl implements CustomBorder {
    protected EList < CustomAttribute > attributes;
public class CustomBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CustomBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class CustomBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomConnectionImpl extends CustomFigureImpl implements CustomConnection {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class CustomConnectionImpl extends CustomFigureImpl implements CustomConnection {
public class CustomConnectionImpl extends CustomFigureImpl implements CustomConnection {
    protected EClass eStaticClass ();
public class CustomConnectionImpl extends CustomFigureImpl implements CustomConnection {
    @Override
public class CustomConnectionItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CustomConnectionItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class CustomConnectionItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomConnectionItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomConnectionItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomConnectionItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomDecorationImpl extends CustomFigureImpl implements CustomDecoration {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class CustomDecorationImpl extends CustomFigureImpl implements CustomDecoration {
public class CustomDecorationImpl extends CustomFigureImpl implements CustomDecoration {
    protected EClass eStaticClass ();
public class CustomDecorationImpl extends CustomFigureImpl implements CustomDecoration {
    @Override
public class CustomDecorationItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CustomDecorationItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class CustomDecorationItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomDecorationItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomDecorationItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomDecorationItemProvider extends CustomFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface CustomFigure extends CustomClass, Figure {
interface CustomFigure extends CustomClass, RealFigure {
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    protected EList customChildren = null;
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    protected EClass eStaticClass (); protected EList attributes = null;
    protected EList children = null;
    protected EList customChildren = null;
    protected EList referencingElements = null;
    public EList getAttributes ();
    public EList getChildren ();
    public EList getCustomChildren ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < CustomAttribute > attributes = null;
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureAccessor > customChildren = null;
    protected EList < FigureMarker > children = null;
    public EList < CustomAttribute > getAttributes ();
    public EList < DiagramElement > getReferencingElements ();
    public EList < FigureAccessor > getCustomChildren ();
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    @Override
    @SuppressWarnings("unchecked")
    @Override
    protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected EList < CustomAttribute > attributes = null;
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureAccessor > customChildren = null;
    protected EList < FigureMarker > children = null;
    protected Font font = null;
    protected Insets insets = null;
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    protected Point location = null;
    protected Point size = null;
    protected String bundleName = BUNDLE_NAME_EDEFAULT;
    protected String name = NAME_EDEFAULT;
    final protected static String BUNDLE_NAME_EDEFAULT = null;
    final protected static String NAME_EDEFAULT = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public EList < FigureMarker > getChildren ();
    public Figure getParent ();
    public Font getFont ();
    public Insets getInsets ();
    public Layout getLayout ();
    public LayoutData getLayoutData ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetInsets (Insets newInsets, NotificationChain msgs);
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public NotificationChain basicSetLayoutData (LayoutData newLayoutData, NotificationChain msgs);
    public NotificationChain basicSetLocation (Point newLocation, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain basicSetPreferredSize (Dimension newPreferredSize, NotificationChain msgs);
    public NotificationChain basicSetSize (Point newSize, NotificationChain msgs);
    public Point getLocation ();
    public Point getSize ();
    public String getBundleName ();
    public void setBackgroundColor (Color newBackgroundColor);
    public void setBorder (Border newBorder);
    public void setBundleName (String newBundleName);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setInsets (Insets newInsets);
    public void setLayout (Layout newLayout);
    public void setLayoutData (LayoutData newLayoutData);
    public void setLocation (Point newLocation);
    public void setMaximumSize (Dimension newMaximumSize);
    public void setMinimumSize (Dimension newMinimumSize);
    public void setName (String newName);
    public void setSize (Point newSize);
public class CustomFigureImpl extends RealFigureImpl implements CustomFigure {
    protected EList < CustomAttribute > attributes;
    protected EList < FigureAccessor > customChildren;
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    protected ColorStyle colorStyle = null;
    protected FontStyle fontStyle = null;
    protected SizeStyle sizeStyle = null;
    public FontStyle getFontStyle ();
    public NotificationChain basicSetColorStyle (ColorStyle newColorStyle, NotificationChain msgs);
    public NotificationChain basicSetSizeStyle (SizeStyle newSizeStyle, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void setColorStyle (ColorStyle newColorStyle);
    public void setSizeStyle (SizeStyle newSizeStyle);
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected Font font = null;
    protected Insets insets = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public Font getFont ();
    public Insets getInsets ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setBackgroundColor (Color newBackgroundColor);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setMaximumSize (Dimension newMaximumSize);
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    protected String layoutManager = LAYOUT_MANAGER_EDEFAULT;
    final protected static String LAYOUT_MANAGER_EDEFAULT = null;
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    protected EList attributes = null;
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    public Layout getLayout ();
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public void setLayout (Layout newLayout);
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
public class CustomFigureImpl extends EObjectImpl implements CustomFigure {
    protected EList referencingElements = null;
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addBundleNamePropertyDescriptor (Object object);
public class CustomFigureItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomFigureItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomFigureItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomFigureItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomLayoutDataImpl extends EObjectImpl implements CustomLayoutData {
    protected EClass eStaticClass (); protected EList attributes = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class CustomLayoutDataImpl extends EObjectImpl implements CustomLayoutData {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < CustomAttribute > attributes = null;
public class CustomLayoutDataImpl extends EObjectImpl implements CustomLayoutData {
    protected EList < CustomAttribute > attributes = null;
    protected String bundleName = BUNDLE_NAME_EDEFAULT;
    final protected static String BUNDLE_NAME_EDEFAULT = null;
public class CustomLayoutDataImpl extends EObjectImpl implements CustomLayoutData {
    protected EList < CustomAttribute > attributes;
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomLayoutImpl extends EObjectImpl implements CustomLayout {
    protected EList < CustomAttribute > attributes = null;
    protected String bundleName = BUNDLE_NAME_EDEFAULT;
    final protected static String BUNDLE_NAME_EDEFAULT = null;
public class CustomLayoutImpl extends EObjectImpl implements CustomLayout {
    protected EList < CustomAttribute > attributes;
public class CustomLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class CustomLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class CustomLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class CustomTabFilterImpl extends EObjectImpl implements CustomTabFilter {
public class CustomTabFilterImpl extends EObjectImpl implements CustomTabFilter {
    public void setTab (GenCustomPropertyTab newTab);
public class CustomTabFilterImpl extends EObjectImpl implements CustomTabFilter {
    public void setTab (GenCustomPropertyTab newTab);
public class CustomTabFilterImpl extends EObjectImpl implements CustomTabFilter {
public class CustomTabFilterItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class CustomTabFilterItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public interface DashboardFacade {
public interface DashboardFacade {
public interface DashboardFacade {
public interface DashboardFacade {
public interface DashboardFacade {
public interface DashboardFacade {
    final public static String OPTION_RCP = "rcp";
public class DashboardMediator implements DashboardFacade {
public class DashboardMediator implements DashboardFacade {
    public void addDashboardAction (DashboardActionDescriptor descriptor);
public class DashboardMediator implements DashboardFacade {
    private class EditDGMAction extends EditFileAction {
        protected String getFileName ();
    private class EditDMAction extends EditFileAction {
        protected String getFileName ();
    private class EditGDMAction extends EditFileAction {
        protected String getFileName ();
    private class EditGMAction extends EditFileAction {
        protected String getFileName ();
    private class EditMMAction extends EditFileAction {
        protected String getFileName ();
    private class EditTDMAction extends EditFileAction {
        protected String getFileName ();
    private class SelectDGMAction extends SelectFileAction {
        protected String getFileName ();
        protected void setFileName (String fileName);
    private class SelectDMAction extends SelectFileAction {
        protected String getFileName ();
        protected void setFileName (String fileName);
    private class SelectGDMAction extends SelectFileAction {
        protected String getFileName ();
        protected void setFileName (String fileName);
    private class SelectGMAction extends SelectFileAction {
        protected String getFileName ();
        protected void setFileName (String fileName);
    private class SelectMMAction extends SelectFileAction {
        protected String getFileName ();
        protected void setFileName (String fileName);
    private class SelectTDMAction extends SelectFileAction {
        protected String getFileName ();
        protected void setFileName (String fileName);
    abstract protected class EditFileAction implements DashboardAction {
    abstract protected class RunWizardAction implements DashboardAction {
    abstract protected class SelectFileAction implements DashboardAction {
        abstract protected String getFileName ();
public class DashboardMediator implements DashboardFacade {
    private class EditDGMAction extends EditFileAction {
        protected URI getURI ();
    private class EditDMAction extends EditFileAction {
        protected URI getURI ();
    private class EditGDMAction extends EditFileAction {
        protected URI getURI ();
    private class EditGMAction extends EditFileAction {
        protected URI getURI ();
    private class EditMMAction extends EditFileAction {
        protected URI getURI ();
    private class EditTDMAction extends EditFileAction {
        protected URI getURI ();
    private class SelectDGMAction extends SelectFileAction {
        protected URI getURI ();
        protected void setURI (URI uri);
    private class SelectDMAction extends SelectFileAction {
        protected URI getURI ();
        protected void setURI (URI uri);
    private class SelectGDMAction extends SelectFileAction {
        protected URI getURI ();
        protected void setURI (URI uri);
    private class SelectGMAction extends SelectFileAction {
        protected URI getURI ();
        protected void setURI (URI uri);
    private class SelectMMAction extends SelectFileAction {
        protected URI getURI ();
        protected void setURI (URI uri);
    private class SelectTDMAction extends SelectFileAction {
        protected URI getURI ();
        protected void setURI (URI uri);
    abstract protected class EditFileAction implements DashboardAction {
    abstract protected class RunWizardAction implements DashboardAction {
    abstract protected class SelectFileAction implements DashboardAction {
        abstract protected URI getURI ();
public class DashboardMediator implements DashboardFacade {
public class DashboardMediator implements DashboardFacade {
public class DashboardMediator implements DashboardFacade {
public class DashboardMediator implements DashboardFacade {
public class DashboardMediator implements DashboardFacade {
public class DashboardMediator implements DashboardFacade {
public class DashboardMediator {
    abstract protected class RunWizardAction implements DashboardAction {
public class DashboardMediator {
    abstract protected class RunWizardAction implements DashboardAction {
public class DashboardMediator {
    private class DeriveGDMAction extends RunWizardAction {
    private class DeriveTDMAction extends RunWizardAction {
public class DashboardMediator {
    private class DeriveGDMAction extends RunWizardAction {
    private class DeriveTDMAction extends RunWizardAction {
public class DashboardMediator {
    private class GenerateDEAction implements DashboardAction {
    private class GenerateGMAction implements DashboardAction {
    private class ReloadDGMAction implements DashboardAction {
    protected IFile getFile (String fileName);
    protected String getName (IFile file); abstract protected class EditFileAction implements DashboardAction {
    abstract protected class RunWizardAction implements DashboardAction {
    abstract protected class SelectFileAction implements DashboardAction {
public class DashboardMediator implements DashboardFacade {
    private class ReloadDGMAction implements DashboardAction {
    abstract protected class EditFileAction implements DashboardAction {
    abstract protected class RunWizardAction implements DashboardAction {
    abstract protected class SelectFileAction implements DashboardAction {
    public String getName (IFile file);
    public void updateStatus ();
final public class DashboardState {
    public DashboardState (IMemento memento) {
        if (memento != null) {
            read (memento);
    public void write (IMemento memento);
final public class DashboardState {
    public DashboardState (Preferences prefs) {
        this.prefs = prefs;
        dm = read (DM_KEY);
        dgm = read (DGM_KEY);
        gdm = read (GDM_KEY);
        tdm = read (TDM_KEY);
        mm = read (MM_KEY);
        gm = read (GM_KEY);
final public class DashboardState {
    public DashboardState (Preferences prefs) {
        this.prefs = prefs;
        dm = read (DM_KEY);
        dgm = read (DGM_KEY);
        gdm = read (GDM_KEY);
        tdm = read (TDM_KEY);
        mm = read (MM_KEY);
        gm = read (GM_KEY);
final public class DashboardState {
    public DashboardState (IProject project) {
public class DataTypeStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DataTypeStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DataTypeStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DataTypeStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class Decision {
abstract public class Decision {
public class Decoration extends Figure implements AncestorListener, IDecoration {
public class Decoration extends Figure implements AncestorListener, IDecoration {
public class Decoration extends Figure implements AncestorListener, IDecoration {
public class Decoration extends Figure implements AncestorListener, IDecoration {
    public Decoration () {
public class Decoration extends Figure implements AncestorListener, IDecoration {
public class Decoration extends Figure implements AncestorListener, IDecoration {
public class DecoratorProviderConfiguration extends AbstractProviderConfiguration {
    private static class ContextDescriptor {
        public boolean matches (IDecoratorTargetBase decoratorTarget);
public class DecoratorProviderConfiguration extends AbstractProviderConfiguration {
    private static class ContextDescriptor {
        public boolean matches (IDecoratorTarget decoratorTarget);
public class DecoratorService extends Service implements IDecoratorProviderBase {
    public void createDecorators (IDecoratorTargetBase decoratorTarget);
public class DecoratorService extends Service implements IDecoratorProvider {
    public void createDecorators (IDecoratorTarget decoratorTarget);
public class DefaultCompartmentEditPart extends ResizableCompartmentEditPart {
public class DefaultCompartmentEditPart extends ResizableCompartmentEditPart {
public class DefaultImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DefaultImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DefaultImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DefaultImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DefaultNamingStrategy implements NamingStrategy {
    protected String createClassName (String name);
    public DefaultNamingStrategy (String suffix) {
    public DefaultNamingStrategy (String suffix, NamesDispenser namesDispenser) {
public class DefaultNamingStrategy extends AbstractNamingStrategy {
    public DefaultNamingStrategy (String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
public class DefaultNodeEditPart extends ShapeNodeEditPart {
    static class DefaultNodeFigure extends DefaultSizeNodeFigure {
public class DefaultNodeEditPart extends ShapeNodeEditPart {
    static class DefaultNodeFigure extends DefaultSizeNodeFigure {
        public DefaultNodeFigure (int width, int height) {
public class DefaultPaletteProvider extends AbstractProvider implements IPaletteProvider {
    private static class ContributionDescriptor {
        public void contribute (Object content, PaletteRoot root, Map predefinedEntries);
    private static class EntryDescriptor implements IEntryDescriptor {
    private static class PredefinedEntryDescriptor implements IEntryDescriptor {
    private static interface IEntryDescriptor {
public class DefaultPaletteProvider extends AbstractProvider implements IPaletteProvider {
    private static boolean areActivitiesEnabled (final String paletteEntryID, final String pluginID); private static class ContributionDescriptor {
        public void contribute (Object content, PaletteRoot root, Map predefinedEntries, String pluginID);
    private static class EntryDescriptor implements IEntryDescriptor {
    private static class PredefinedEntryDescriptor implements IEntryDescriptor {
    private static interface IEntryDescriptor {
public class DefaultPaletteProvider extends AbstractProvider implements IPaletteProvider {
public class DefaultPaletteProvider extends AbstractProvider implements IPaletteProvider {
public class DefaultPaletteProvider extends AbstractProvider implements IPaletteProvider {
    private static class ContributionDescriptor {
        public void contribute (Object content, PaletteRoot root);
    private static class EntryDescriptor {
        public void contribute (Object content, PaletteRoot root, PaletteFactoryProxy paletteFactory);
public class DefaultPaletteProvider extends AbstractProvider implements IPaletteProvider {
    private static class ContributionDescriptor {
        public void contribute (Object content, PaletteRoot root, Map predefinedEntries);
    private static class EntryDescriptor implements IEntryDescriptor {
        public void contribute (Object content, PaletteRoot root, PaletteFactoryProxy paletteFactory, Map predefinedEntries);
    private static class PredefinedEntryDescriptor implements IEntryDescriptor {
        public PredefinedEntryDescriptor (IConfigurationElement configElement) {
        public void contribute (Object content, PaletteRoot root, PaletteFactoryProxy paletteFactory, Map predefinedEntries);
    private static interface IEntryDescriptor {
        public void contribute (Object content, PaletteRoot root, PaletteFactoryProxy paletteFactory, Map predefinedEntries);
public class DefaultPrintActionHelper {
    public static void doRun (IEditorPart editorPart, DiagramPrinter diagramPrinter);
public class DefaultPrintActionHelper {
    public static void doRun (IEditorPart editorPart, SWTDiagramPrinter diagramPrinter);
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
    protected Command createEdgesChangeBoundsCommands (DirectedGraph g, Point diff);
    protected Command createNodeChangeBoundCommands (DirectedGraph g, Point diff);
    protected Command update_diagram (GraphicalEditPart diagramEP, DirectedGraph g, boolean isLayoutForSelected);
    protected DirectedGraph createGraph ();
    protected DirectedGraphLayout createGraphLayout ();
    protected IMapMode mm;
    protected NodeList build_nodes (List selectedObjects, Map editPartToNodeDict, Subgraph root);
    protected int layoutDefaultMargin = 0;
    final protected static int MAX_EDGE_PADDING = NODE_PADDING * 3;
    final protected static int MIN_EDGE_PADDING = 5;
    final protected static int NODE_PADDING = 30;
    protected void build_graph (DirectedGraph g, List selectedObjects);
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
    final protected static int MIN_EDGE_PADDING = 5;
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
    final protected static int MIN_EDGE_END_POINTS_PADDING = 5;
    final protected static int MIN_EDGE_PADDING = 15;
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
abstract public class DefaultProvider extends AbstractLayoutProvider {
    final protected static int LAYOUTDEFAULTMARGIN = MapMode.DPtoLP (25);
abstract public class DefaultProvider extends AbstractLayoutProvider {
abstract public class DefaultProvider extends AbstractLayoutProvider {
abstract public class DefaultProvider extends AbstractLayoutEditPartProvider {
public class DefaultSizeAttributesImpl extends EObjectImpl implements DefaultSizeAttributes {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class DefaultSizeAttributesImpl extends EObjectImpl implements DefaultSizeAttributes {
    public void eSet (int featureID, Object newValue);
public class DefaultSizeAttributesImpl extends EObjectImpl implements DefaultSizeAttributes {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class DefaultSizeAttributesImpl extends EObjectImpl implements DefaultSizeAttributes {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class DefaultSizeAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DefaultSizeAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DefaultSizeAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DefaultSizeAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DefaultSizeFacetImpl extends EObjectImpl implements DefaultSizeFacet {
    protected Dimension defaultSize = null;
public class DefaultSizeFacetImpl extends EObjectImpl implements DefaultSizeFacet {
    protected Dimension defaultSize;
public class DefaultSizeFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DefaultSizeFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DefaultSizeNodeFigure extends NodeFigure {
    public DefaultSizeNodeFigure () {
public class DefaultSizeNodeFigure extends NodeFigure {
public class DefaultTextMerger extends TextMerger {
public class DefaultTextMerger extends TextMerger {
    @Override
public class DefaultTextMerger extends TextMerger {
public class DefaultTextMerger extends TextMerger {
    @Override
public class DefaultValues {
public class DefaultValues {
    public static double MINIMUM_MARGIN_BOTTOM = 0.25;
    public static double MINIMUM_MARGIN_LEFT = 0.25;
    public static double MINIMUM_MARGIN_RIGHT = 0.25;
    public static double MINIMUM_MARGIN_TOP = 0.25;
public class DefaultValues {
    public static boolean DEFAULT_INCHES = true;
    public static boolean DEFAULT_MILLIM = false;
public class DefaultValues {
    public static boolean DEFAULT_INCHES = ! useDefaultMetricMeasures ();
    public static boolean DEFAULT_MILLIM = useDefaultMetricMeasures ();
    public static boolean useDefaultMetricMeasures ();
public class DefaultViewmapProducer extends ViewmapProducer {
    final protected void setupResizeConstraints (Viewmap viewmap, Node diagramNode);
public class DefaultViewmapProducer extends ViewmapProducer {
    @SuppressWarnings("unchecked")
    final protected void setupDefaultSize (Viewmap viewmap, Node node);
    @SuppressWarnings("unchecked")
    final protected void setupResizeConstraints (Viewmap viewmap, Node diagramNode);
    @SuppressWarnings("unchecked")
public class DefaultViewmapProducer extends ViewmapProducer {
    @SuppressWarnings("unchecked")
    final protected void setupDefaultSize (Viewmap viewmap, Node node);
    @SuppressWarnings("unchecked")
    final protected void setupResizeConstraints (Viewmap viewmap, Node diagramNode);
    @SuppressWarnings("unchecked")
    final protected void setupStyleAttributes (Viewmap viewmap, FigureHandle handle); private static class LayoutTypeSwitch extends GMFGraphSwitch {
        public Object caseFlowLayout (FlowLayout layout);
        public Object caseLayout (Layout object);
public class DefaultViewmapProducer extends ViewmapProducer {
    private static class LayoutTypeSwitch extends GMFGraphSwitch < ViewmapLayoutType > {
        public ViewmapLayoutType caseFlowLayout (FlowLayout layout);
        public ViewmapLayoutType caseLayout (Layout object);
    final protected void setupResizeConstraints (Viewmap viewmap, Node diagramNode);
public class DefaultViewmapProducer extends ViewmapProducer {
public class DefaultViewmapProducer extends ViewmapProducer {
    final protected void setupStyleAttributes (Viewmap viewmap, Figure figure);
public class DefaultViewmapProducer extends ViewmapProducer {
    private static class LayoutTypeSwitch extends GMFGraphSwitch < ViewmapLayoutType > {
        public ViewmapLayoutType caseFlowLayout (FlowLayout layout);
        public ViewmapLayoutType caseLayout (Layout object);
public class DefaultViewmapProducer extends ViewmapProducer {
    private static class LayoutTypeSwitch extends GMFGraphSwitch < ViewmapLayoutType > {
        @Override
        public ViewmapLayoutType caseFlowLayout (FlowLayout layout);
        @Override
        public ViewmapLayoutType caseLayout (Layout object);
        @Override
public class DeferredCreateConnectionViewAndElementCommand extends AbstractCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    protected CommandResult doRedo ();
    public boolean isRedoable ();
    public boolean isUndoable ();
public class DeferredCreateConnectionViewAndElementCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public boolean canRedo ();
    public boolean canUndo ();
public class DeferredLayoutCommand extends AbstractTransactionalCommand {
    protected Command layoutCmd;
public class DeferredLayoutCommand extends AbstractTransactionalCommand {
public class DeferredLayoutCommand extends AbstractModelCommand {
public class DeferredLayoutCommand extends AbstractModelCommand {
public class DeferredLayoutCommand extends AbstractModelCommand {
    public Collection getAffectedObjects ();
    public DeferredLayoutCommand (List viewAdapters, IGraphicalEditPart containerEP) {
    public DeferredLayoutCommand (List viewAdapters, IGraphicalEditPart containerEP, String commandLayoutType) {
public class DeferredLayoutCommand extends AbstractTransactionalCommand {
    public DeferredLayoutCommand (TransactionalEditingDomain editingDomain, List viewAdapters, IGraphicalEditPart containerEP) {
    public DeferredLayoutCommand (TransactionalEditingDomain editingDomain, List viewAdapters, IGraphicalEditPart containerEP, String commandLayoutType) {
    public List getAffectedFiles ();
public class DefUtils {
public class DefUtils {
public class DefUtils {
    public static List getAnnotationValues (EModelElement eModelElement, String sourceURI, String key);
public class DefUtils {
    @SuppressWarnings("unchecked")
    public static List getAnnotationValues (EModelElement eModelElement, String sourceURI, String key);
    @SuppressWarnings("unchecked")
public class DefUtils {
    @SuppressWarnings("unchecked")
    public static Map.Entry findAnnotationDetailEntry (EModelElement eModelElement, String sourceURI, String key, String val);
    public static Map.Entry getKeyPreffixAnnotation (EAnnotation annotation, String keyPrefix);
public class DefUtils {
    public static List < EAnnotation > getAnnotationsWithKeyAndValue (EModelElement eModelElement, String sourceURI, String key, String value);
    public static Map.Entry < String, String > findAnnotationDetailEntry (EModelElement eModelElement, String sourceURI, String key, String val);
public class DefUtils {
public class DefUtils {
public class DeleteCommand extends AbstractModelCommand {
    public DeleteCommand (View view) {
public class DeleteCommand extends AbstractTransactionalCommand {
    public DeleteCommand (TransactionalEditingDomain editingDomain, View view) {
public class DeleteCommand extends AbstractTransactionalCommand {
public class DeleteCommand extends AbstractTransactionalCommand {
    public DeleteCommand (View view) {
public class DeleteFromDiagramAction extends PresentationAction {
public class DeleteFromDiagramAction extends DiagramAction {
public class DeleteFromModelAction extends AbstractDeleteFromAction {
public class DeleteFromModelAction extends AbstractDeleteFromAction {
public class DeleteGuideCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public DeleteGuideCommand (Guide guide) {
public class DeleteGuideCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public DeleteGuideCommand (TransactionalEditingDomain editingDomain, Guide guide) {
public class DescriptionCompartmentEditPart extends TextCompartmentEditPart {
public class DescriptionCompartmentEditPart extends TextCompartmentEditPart {
interface DescriptionStyle extends Style {
interface DescriptionStyle extends NotationObject, Style {
interface DescriptionStyle extends NotationObject, Style {
interface DescriptionStyle extends Style {
public class DescriptionStyleImpl extends EObjectImpl implements DescriptionStyle {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class DescriptionStyleImpl extends EObjectImpl implements DescriptionStyle {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class DescriptionStyleImpl extends EObjectImpl implements DescriptionStyle {
public class DescriptionStyleImpl extends FlatEObjectImpl implements DescriptionStyle {
public class DescriptionStyleImpl extends FlatEObjectImpl implements DescriptionStyle {
public class DescriptionStyleImpl extends NotationObjectImpl implements DescriptionStyle {
public class DescriptionStyleImpl extends NotationObjectImpl implements DescriptionStyle {
public class DescriptionStyleImpl extends NotationEObjectImpl implements DescriptionStyle {
public class DescriptionStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DescriptionStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DescriptionStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DescriptionStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DesignLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DesignLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DesignLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DesignLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DesignLabelModelFacetImpl extends EObjectImpl implements DesignLabelModelFacet {
    protected boolean readOnly = READ_ONLY_EDEFAULT;
    final protected static boolean READ_ONLY_EDEFAULT = false;
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public boolean eIsSet (int featureID);
    public boolean isReadOnly ();
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setReadOnly (boolean newReadOnly);
public class DesignLabelModelFacetImpl extends EObjectImpl implements DesignLabelModelFacet {
public class DesignLabelModelFacetImpl extends EObjectImpl implements DesignLabelModelFacet {
    protected EClass eStaticClass ();
public class DesignLabelModelFacetImpl extends EObjectImpl implements DesignLabelModelFacet {
    @Override
public class DesignLabelModelFacetImpl extends EObjectImpl implements DesignLabelModelFacet {
public class DesignLabelModelFacetImpl extends LabelModelFacetImpl implements DesignLabelModelFacet {
public class DesignLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DesignLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DesignLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DesignLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DesignLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DesignLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DesignLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DesignLabelModelFacetItemProvider extends LabelModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DesignNamingStrategy extends AbstractNamingStrategy {
    protected String createClassName (String name);
    public DesignNamingStrategy (String suffix) {
    public DesignNamingStrategy (String suffix, NamingStrategy chained, NamesDispenser namesDispenser) {
public class DesignNamingStrategy extends AbstractNamingStrategy {
    public DesignNamingStrategy (String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
public class DestroyElementCommand extends EditElementCommand {
    public boolean isExecutable ();
public class DestroyElementCommand extends EditElementCommand {
    public boolean canExecute ();
public class DestroyElementCommand extends EditElementCommand {
public class DestroyElementCommand extends EditElementCommand {
    private static class TearDownVisitor extends ReferenceVisitor {
        protected void visitedReferencer (final EReference reference, final EObject referencer);
    protected void tearDownIncomingReferences (EObject destructee);
    public static void destroy (EObject eObject);
public class DestroyElementCommand extends EditElementCommand {
    private static class TearDownVisitor extends ReferenceVisitor {
        protected void visitedReferencer (final EReference reference, final EObject referencer);
public class DestroyElementCommand extends EditElementCommand {
public class DestroyElementRequest extends DestroyRequest {
public class DestroyElementRequest extends DestroyRequest {
    public DestroyElementRequest (TransactionalEditingDomain editingDomain, EObject elementToDestroy, boolean confirmationRequired) {
    public DestroyElementRequest (TransactionalEditingDomain editingDomain, boolean confirmationRequired) {
public class DestroyElementRequest extends DestroyRequest {
public class DestroyElementRequest extends DestroyRequest {
public class DestroyElementRequest extends DestroyRequest {
public class DestroyElementRequest extends DestroyRequest {
public class DestroyElementRequest extends DestroyRequest {
public class DestroyElementRequest extends DestroyRequest {
    final public static String DESTROY_DEPENDENTS_REQUEST_PARAMETER = "DestroyElementRequest.destroyDependentsRequest";
    final public static String INITIAL_ELEMENT_TO_DESTROY_PARAMETER = "DestroyElementRequest.initialElementToDestroy";
public class DestroyReferenceCommand extends EditElementCommand {
    public boolean isExecutable ();
public class DestroyReferenceCommand extends EditElementCommand {
    public boolean canExecute ();
public class DestroyReferenceRequest extends DestroyRequest {
public class DestroyReferenceRequest extends DestroyRequest {
    public DestroyReferenceRequest (TransactionalEditingDomain editingDomain, EObject container, EReference containingFeature, EObject referencedObject, boolean confirmationRequired) {
abstract public class DestroyRequest extends AbstractEditCommandRequest {
    public DestroyRequest (boolean confirmationRequired) {
abstract public class DestroyRequest extends AbstractEditCommandRequest {
    public DestroyRequest (TransactionalEditingDomain editingDomain, boolean confirmationRequired) {
abstract public class DiagramAction extends AbstractActionHandler implements Disposable {
abstract public class DiagramAction extends AbstractActionHandler implements Disposable {
abstract public class DiagramAction extends AbstractActionHandler implements Disposable {
abstract public class DiagramAction extends AbstractActionHandler implements Disposable {
abstract public class DiagramActionBarContributor extends ActionBarContributor {
abstract public class DiagramActionBarContributor extends ActionBarContributor {
    class ActivityManagerListener implements IActivityManagerListener {
        public void activityManagerChanged (ActivityManagerEvent activityManagerEvent);
public class DiagramActionFilterProvider extends AbstractModelActionFilterProvider {
public class DiagramActionFilterProvider extends AbstractModelActionFilterProvider {
public class DiagramActionsPlugin extends XToolsUIPlugin {
public class DiagramActionsPlugin extends XToolsUIPlugin {
public class DiagramActionsPlugin extends XToolsUIPlugin {
public class DiagramActionsPlugin extends AbstractUIPlugin {
abstract public class DiagramAssistantEditPolicy extends GraphicalEditPolicy implements MouseMotionListener {
abstract public class DiagramAssistantEditPolicy extends GraphicalEditPolicy implements MouseMotionListener {
abstract public class DiagramAssistantEditPolicy extends GraphicalEditPolicy implements MouseMotionListener {
    private Runnable hideDiagramAssistantRunnable = new Runnable () {
    ;
    private class ShowDiagramAssistantRunnable implements Runnable {
        protected ShowDiagramAssistantRunnable (Point originalMouseLocation) {
abstract public class DiagramAssistantEditPolicy extends GraphicalEditPolicy implements MouseMotionListener {
    private class HideDiagramAssistantRunnable implements Runnable {
    private class ShowDiagramAssistantRunnable implements Runnable {
        public void setOriginalMouseLocation (Point originalMouseLocation);
abstract public class DiagramAssistantEditPolicy extends GraphicalEditPolicy implements MouseMotionListener {
    private class HideDiagramAssistantRunnable implements Runnable {
        public void run ();
    private class ShowDiagramAssistantRunnable implements Runnable {
abstract public class DiagramAssistantEditPolicy extends GraphicalEditPolicy implements MouseMotionListener {
    private class HideDiagramAssistantJob extends UIJob {
        protected HideDiagramAssistantJob () {
        public IStatus runInUIThread (IProgressMonitor monitor);
        public boolean belongsTo (Object family);
    private class ShowDiagramAssistantJob extends UIJob {
        protected ShowDiagramAssistantJob () {
public class DiagramColorsAndFontsPropertySection extends ShapeColorsAndFontsPropertySection {
public class DiagramColorsAndFontsPropertySection extends ShapeColorsAndFontsPropertySection {
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
    final private class HistoryEventObject extends EventObject {
        public OperationHistoryEvent getOperationHistoryEvent ();
    public void setOperationHistory (IOperationHistory operationHistory);
public class DiagramCommandStack extends CommandStack {
public class DiagramCommandStack extends CommandStack {
public class DiagramContextMenuProvider extends ContextMenuProvider {
public class DiagramContextMenuProvider extends ContextMenuProvider {
    protected boolean allowItem (IContributionItem itemToAdd);
    public void setExclusionSet (Set exclusionSet);
final public class DiagramCoreMessages extends NLS {
final public class DiagramCoreMessages extends NLS {
    public static String GroupCommand_Label;
    public static String UngroupCommand_Label;
final public class DiagramCoreMessages extends NLS {
final public class DiagramCoreMessages extends NLS {
    public static String UpdateLocation_Label;
public class DiagramDisplayer implements IDiagramOutlineHost {
public class DiagramDisplayer implements IDiagramOutlineHost {
    private static class CommandStackAdapterManager extends AdapterImpl {
        @Override
        public boolean isReleased ();
        public void acquire ();
        public void release ();
public class DiagramDisplayer implements IDiagramOutlineHost {
    private static class CommandStackAdapterManager extends AdapterImpl {
        @Override
        public boolean isReleased ();
        public void acquire ();
        public void release ();
public class DiagramDisplayer implements IDiagramOutlineHost {
public class DiagramDisplayer implements IDiagramOutlineHost {
public class DiagramDisplayer implements IDiagramOutlineHost {
public class DiagramDnDPlugin extends XToolsUIPlugin {
public class DiagramDnDPlugin extends XToolsUIPlugin {
public class DiagramDnDPlugin extends XToolsUIPlugin {
public class DiagramDnDPlugin extends AbstractUIPlugin {
public class DiagramDocument extends AbstractDocument implements IDiagramDocument {
    MFilter diagramResourceFilter = new MFilter () {
        public boolean matches (Notification notification);
    ;
    public boolean disableDiagramListener ();
    public boolean enableDiagramListener ();
    public void setEditingDomain (MEditingDomain domain) {
        if (fDomain != domain) {
            if (diagramChangeListener != null) diagramChangeListener.stopListening ();
            diagramChangeListener = new MListener (domain, diagramResourceFilter) {
                public void onEvent (List events);
            ;
            if (fListenerEnabled) diagramChangeListener.startListening ();
        fDomain = domain;
final public class DiagramDocument extends AbstractDocument implements IDiagramDocument {
    public void setEditingDomain (MEditingDomain domain);
final public class DiagramDocument extends AbstractDocument implements IDiagramDocument {
    public MEditingDomain getEditingDomain ();
    public void setEditingDomain (MEditingDomain domain);
final public class DiagramDocument extends AbstractDocument implements IDiagramDocument {
    public TransactionalEditingDomain getEditingDomain ();
    public void setEditingDomain (TransactionalEditingDomain domain);
public class DiagramDocumentEditor extends DiagramEditorWithFlyOutPalette implements IDocumentEditor, IReusableEditor {
public class DiagramDocumentEditor extends DiagramEditorWithFlyOutPalette implements IDocumentEditor, IReusableEditor {
public class DiagramDocumentEditorMatchingStrategy implements IEditorMatchingStrategy {
public class DiagramDocumentEditorMatchingStrategy implements IEditorMatchingStrategy {
abstract public class DiagramDropTargetListener extends AbstractTransferDropTargetListener {
abstract public class DiagramDropTargetListener extends AbstractTransferDropTargetListener {
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static class DiagramEditingDomain extends TransactionalEditingDomainImpl {
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    protected static class DiagramEditingDomain extends TransactionalEditingDomainImpl {
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static class DiagramEditingDomain extends TransactionalEditingDomainImpl {
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static class DiagramEditingDomain extends TransactionalEditingDomainImpl {
    private static class DiagramEventBrokerCommand extends AbstractCommand {
        protected boolean prepare ();
        public boolean canUndo ();
        final public void execute ();
        final public void redo ();
        final public void undo ();
    final static TriggerCommand NOOP_TRIGGER = new TriggerCommand (Collections.singletonList (new AbstractCommand () {
        protected boolean prepare ();
        public boolean canUndo ();
        public void execute ();
        public void redo ();
        public void undo ();
    ));
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static class DiagramEventBrokerCommand extends AbstractCommand {
    final static TriggerCommand NOOP_TRIGGER = new TriggerCommand (Collections.singletonList (new AbstractCommand () {
    ));
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static class DiagramEventBrokerCommand extends AbstractCommand implements ConditionalRedoCommand {
    final static TriggerCommand NOOP_TRIGGER = new TriggerCommand (Collections.singletonList (new AbstractCommand () {
    ));
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static class DiagramEditingDomain extends TransactionalEditingDomainImpl {
public class DiagramEditingDomainFactory extends GMFEditingDomainFactory {
    private static class DiagramEditingDomain extends TransactionalEditingDomainImpl {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
package org.eclipse.gmf.runtime.lite.parts;
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
    @Override
    public Object getAdapter (Class type);
    @Override
    public boolean isDirty ();
    @Override
    public boolean isSaveAsAllowed ();
    @Override
    public void createPartControl (Composite parent);
    @Override
    public void dispose ();
    @Override
    public void doSaveAs ();
    @Override
    public void init (IEditorSite site, IEditorInput input) throws PartInitException;
    @Override
    public void setFocus (); private CommandStackEventListener mySaveListener = new CommandStackEventListener () {
        public void stackChanged (CommandStackEvent event);
    ;
    private CommandStackListener commandStackListener = new CommandStackListener () {
        public void commandStackChanged (EventObject event);
    ;
    private static class ForceTrackingModificationAdapter extends AdapterImpl {
        @Override
        public boolean isAdapterForType (Object type);
        @Override
        public void notifyChanged (Notification msg);
        @Override
        public void setTarget (Notifier newTarget);
        public boolean isReleased ();
        public void acquire ();
        public void release ();
    protected EditDomain createEditDomain ();
    protected IContentOutlinePage getOutlinePage ();
    protected IDiagramLayouter getDiagramLayouter ();
    protected IPropertySheetPage getPropertySheetPage ();
    protected Map < ?, ? > getSaveOptions ();
    protected TransactionalEditingDomain createEditingDomain ();
    protected TransactionalEditingDomain getEditingDomain (IEditorInput input);
    protected TransactionalEditingDomain reuseEditingDomain (IEditorInput input);
    abstract protected void createActions ();
    protected double [] getZoomLevels ();
    final protected ActionRegistry getActionRegistry ();
    final protected CommandStack getCommandStack ();
    final protected EditDomain getEditDomain ();
    final protected GraphicalViewer getGraphicalViewer ();
    protected void addAction (IAction action);
    protected void addEditPartAction (SelectionAction action);
    protected void addEditorAction (WorkbenchPartAction action);
    protected void addStackAction (StackAction action);
    protected void save (IProgressMonitor monitor) throws CoreException;
    abstract public AdapterFactory getDomainAdapterFactory ();
    abstract public boolean isFlyoutPalette ();
    abstract public void configurePalette (PaletteRoot paletteRoot);
    abstract public void initializeGraphicalViewer ();
    final public TransactionalEditingDomain getEditingDomain ();
    public void configureGraphicalViewer ();
package org.eclipse.gmf.runtime.diagram.ui.parts;
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
    class DiagramOutlinePage extends ContentOutlinePage implements IAdaptable {
        protected Control getEditor ();
        protected void configureOutlineViewer ();
        protected void hookOutlineViewer ();
        protected void initializeOutlineViewer ();
        protected void initializeOverview ();
        protected void showPage (int id);
        protected void unhookOutlineViewer ();
        public Control getControl ();
        public DiagramOutlinePage (EditPartViewer viewer) {
        public Object getAdapter (Class type);
        public void createControl (Composite parent);
        public void dispose ();
        public void init (IPageSite pageSite);
    protected ActionManager getActionManager ();
    protected CommandManager getCommandManager ();
    protected Control getGraphicalControl ();
    protected KeyHandler getKeyHandler ();
    protected List getElements (final ISelection selection); protected PreferenceStore workspaceViewerPreferenceStore = null;
    protected PreferencesHint getPreferencesHint ();
    protected RulerComposite getRulerComposite ();
    protected ScrollingGraphicalViewer createScrollingGraphicalViewer ();
    final protected static int ID_OUTLINE = 0;
    final protected static int ID_OVERVIEW = 1;
    protected void addDefaultPreferences ();
    protected void clearGraphicalViewerContents ();
    protected void closeEditor (final boolean save);
    protected void configureDiagramEditDomain ();
    protected void configureGraphicalViewer ();
    protected void createActions ();
    protected void createDiagramEditDomain ();
    protected void createGraphicalViewer (Composite parent);
    protected void initializeGraphicalViewer ();
    protected void initializeGraphicalViewerContents ();
    protected void setInput (IEditorInput input);
    protected void setRulerComposite (RulerComposite rulerComp);
    protected void setSite (IWorkbenchPartSite site);
    protected void startListening ();
    protected void stopListening ();
    public Diagram getDiagram ();
    public DiagramEditPart getDiagramEditPart ();
    public DiagramEditor () {
    public IDiagramEditDomain getDiagramEditDomain ();
    public IDiagramGraphicalViewer getDiagramGraphicalViewer ();
    public IWorkbenchPartSite getSite ();
    public Object getAdapter (Class type);
    public PreferenceStore getWorkspaceViewerPreferenceStore ();
    public ShowInContext getShowInContext ();
    public String getContributorId ();
    final public void gotoMarker (IMarker marker);
    public static void addDefaultPreferences (PreferenceStore store, PreferencesHint preferencesHint);
    public void dispose ();
    public void init (IEditorSite site, IEditorInput input) throws PartInitException;
    public void persistViewerSettings ();
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
    private IEditingDomainProvider domainProvider = new IEditingDomainProvider () {
        public EditingDomain getEditingDomain ();
    ;
    protected EditingDomain getEditingDomain ();
    protected IOperationHistory createOperationHistory ();
    protected IOperationHistory getOperationHistory ();
    protected IOperationHistoryListener createHistoryListener ();
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
    private class DiagramEventBrokerThreadSafe extends DiagramEventBroker {
        public DiagramEventBrokerThreadSafe () {
        public void resourceSetChanged (ResourceSetChangeEvent event);
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
    private class DiagramEventBrokerThreadSafe extends DiagramEventBroker {
        public DiagramEventBrokerThreadSafe () {
        public void resourceSetChanged (ResourceSetChangeEvent event);
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
    public static String DIAGRAM_CONTEXT_ID = "org.eclipse.gmf.runtime.diagram.ui.diagramContext";
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditor implements IDiagramWorkbenchPart, IShowInSource, ITabbedPropertySheetPageContributor {
abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
    protected class DiagramContentOutlinePage extends Page implements IContentOutlinePage {
        @Override
        public Control getControl ();
        @Override
        public void createControl (Composite parent);
        @Override
        public void dispose ();
        @Override
        public void init (IPageSite pageSite);
        @Override
        public void setFocus ();
        protected void hookOutlineViewer (TreeViewer viewer);
        protected void initializeOverview ();
        protected void showPage (int pageId);
        protected void unhookOutlineViewer (TreeViewer viewer);
        public ISelection getSelection ();
        public void addSelectionChangedListener (ISelectionChangedListener listener);
        public void removeSelectionChangedListener (ISelectionChangedListener listener);
        public void setSelection (ISelection selection);
    protected int getDefaultOutlineViewMode (); final protected static int ID_OUTLINE = 1;
    final protected static int ID_OVERVIEW = 0;
abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
    private static class ForceTrackingModificationAdapter extends AdapterImpl {
        @Override
        public void notifyChanged (Notification msg);
        @Override
        public void setTarget (Notifier newTarget);
abstract public class DiagramEditor extends GraphicalEditorWithFlyoutPalette {
    private ISelectionListener selectionListener = new ISelectionListener () {
        public void selectionChanged (IWorkbenchPart part, ISelection selection);
    ;
    private static class UpdatableActionGroup {
        public void addAction (UpdateAction action);
        public void removeAction (UpdateAction action);
        public void update ();
    protected PaletteRoot getPaletteRoot ();
    protected PropertySheetPage getPropertySheetPage ();
    protected TransactionalEditingDomain getEditingDomain ();
    protected ZoomManager getZoomManager ();
    abstract protected AdapterFactory getDomainAdapterFactory ();
    abstract protected void configurePalette (PaletteRoot paletteRoot); protected class DiagramContentOutlinePage extends Page implements IContentOutlinePage {
        @Override
        public Control getControl ();
        @Override
        @Override
        protected void configureOutlinePage ();
        protected void configureTreeViewer (TreeViewer treeViewer);
        protected void hookOutlineViewer (TreeViewer viewer);
        protected void initializeOverview ();
        protected void showPage (int pageId);
        protected void unhookOutlineViewer (TreeViewer viewer);
        public ISelection getSelection ();
        public void addSelectionChangedListener (ISelectionChangedListener listener);
        public void removeSelectionChangedListener (ISelectionChangedListener listener);
        public void setSelection (ISelection selection);
    final protected static int ID_OUTLINE = 1;
    final protected static int ID_OVERVIEW = 0;
    protected void firePropertyChange (int propertyId);
    protected void save (IProgressMonitor progressMonitor) throws CoreException;
    public Object getAdapter (Class type);
    public boolean isDirty ();
    public boolean isSaveAsAllowed ();
    final public void createPartControl (Composite parent);
    public void dispose ();
    public void doSaveAs ();
    public void init (IEditorSite site, IEditorInput input) throws PartInitException;
    public void setFocus ();
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
    @Override
    public Object getAdapter (Class type);
    @Override
    public boolean isDirty ();
    @Override
    public boolean isSaveAsAllowed ();
    @Override
    @Override
    public void doSaveAs ();
    @Override
    protected IPropertySheetPage getPropertySheetPage ();
    protected TransactionalEditingDomain createEditingDomain ();
    protected TransactionalEditingDomain getEditingDomain (IEditorInput editorInput);
    abstract protected void createActions ();
    final protected ActionRegistry getActionRegistry ();
    final protected CommandStack getCommandStack ();
    final protected EditDomain getEditDomain ();
    final protected GraphicalViewer getGraphicalViewer ();
    final protected TransactionalEditingDomain getEditingDomain ();
    protected void save (IProgressMonitor monitor) throws CoreException;
    abstract public AdapterFactory getDomainAdapterFactory ();
    abstract public boolean isFlyoutPalette ();
    abstract public void configurePalette (PaletteRoot paletteRoot);
    abstract public void initializeGraphicalViewer ();
    public void configureGraphicalViewer ();
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
    private static class ForceTrackingModificationAdapter extends AdapterImpl {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
    private CommandStackEventListener mySaveListener = new CommandStackEventListener () {
        public void stackChanged (CommandStackEvent event);
    ;
    private static class ForceTrackingModificationAdapter extends AdapterImpl {
        @Override
        public boolean isReleased ();
        public void acquire ();
        public void release ();
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
abstract public class DiagramEditor extends EditorPart implements IDiagramManager {
package org.eclipse.gmf.runtime.lite.parts;
public class DiagramEditorInput extends PlatformObject implements IEditorInput {
    @Override
    public boolean equals (Object obj);
    @Override
package org.eclipse.gmf.runtime.diagram.ui.parts;
public class DiagramEditorInput implements IDiagramEditorInput {
    private IFile getStorageUnitFile ();
    public int hashCode ();
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
    protected void configurePaletteViewer () {
        assert fHasFlyoutPalette == true;
        PaletteViewer viewer = getPaletteViewer ();
        if (viewer == null) return;
        ContextMenuProvider paletteContextProvider = new PaletteContextMenuProvider (viewer);
        getPaletteViewer ().setContextMenu (paletteContextProvider);
        viewer.setCustomizer (new PaletteCustomizer () {
            public void revertToSaved ();
            public void save ();
        );
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
    protected void applyCustomizationsToPalette (PaletteRoot paletteRoot);
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
    final private static class FlyoutPreferencesImpl implements FlyoutPaletteComposite.FlyoutPreferences {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
    final private class FlyoutPreferencesImpl implements FlyoutPaletteComposite.FlyoutPreferences {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor implements IActivityManagerListener {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
    class ActivityManagerListener implements IActivityManagerListener {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
abstract public class DiagramEditorWithFlyOutPalette extends DiagramEditor {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
public class DiagramEditPart extends GraphicalEditPart implements ISurfaceEditPart, LayerConstants {
    private class PageBreaksLayoutListener extends LayoutListener.Stub {
        public void postLayout (IFigure container);
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart {
    public class FigureConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart {
    public class FigureConnectionFigure extends PolylineConnectionEx {
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart {
    final public static int VISUAL_ID = 4001;
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart {
    final public static int VISUAL_ID = 4005;
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart {
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart {
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart {
public class DiagramElementFigureEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {
public class DiagramElementFigureReorientCommand extends EditElementCommand {
    protected FigureHandle getNewTarget ();
public class DiagramElementFigureReorientCommand extends EditElementCommand {
    protected FigureDescriptor getNewTarget ();
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
    public NotificationChain basicSetFigure (Figure newFigure, NotificationChain msgs);
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
    protected Figure figure = null;
    public Figure basicGetFigure ();
    public Figure getFigure ();
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
    protected FigureHandle figure = null;
    public FigureHandle basicGetFigure ();
    public FigureHandle getFigure ();
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
    protected EClass eStaticClass (); protected EList facets = null;
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < VisualFacet > facets = null;
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
    @Override
    protected EList < VisualFacet > facets = null;
    protected FigureHandle figure = null;
    public FigureHandle basicGetFigure ();
    public FigureHandle getFigure ();
    public VisualFacet find (Class facetClass);
abstract public class DiagramElementImpl extends EObjectImpl implements DiagramElement {
    protected EList < VisualFacet > facets;
    protected FigureDescriptor figure;
    public FigureDescriptor basicGetFigure ();
public class DiagramElementItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DiagramElementItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DiagramElementItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DiagramElementItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
class DiagramElementsCopier extends EcoreUtil.Copier {
    public boolean isSubstituted (Figure original);
    public void registerSubstitution (Figure original, CustomFigure substituted);
class DiagramElementsCopier extends EcoreUtil.Copier {
    @SuppressWarnings("unchecked")
    public boolean isSubstituted (FigureDescriptor original);
    public void registerSubstitution (FigureDescriptor original, FigureDescriptor substituted);
public class DiagramElementTargetImpl extends EObjectImpl implements DiagramElementTarget {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class DiagramElementTargetImpl extends EObjectImpl implements DiagramElementTarget {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class DiagramElementTargetImpl extends EObjectImpl implements DiagramElementTarget {
    protected MappingEntry element = null;
public class DiagramElementTargetImpl extends EObjectImpl implements DiagramElementTarget {
    protected MappingEntry element;
public class DiagramElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DiagramElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DiagramElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DiagramElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
    protected DiagramEventBroker () {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
    private static class DiagramEventBrokerFactoryImpl implements DiagramEventBrokerFactory {
        public DiagramEventBroker createDiagramEventBroker (TransactionalEditingDomain editingDomain);
    public static interface DiagramEventBrokerFactory {
        public DiagramEventBroker createDiagramEventBroker (TransactionalEditingDomain editingDomain);
public class DiagramEventBroker extends ResourceSetListenerImpl {
    final protected Set getInterestedNotificationListeners (Notification event, boolean preCommit); final private class NotifierToKeyToListenersSetMap {
public class DiagramEventBroker extends ResourceSetListenerImpl {
    final protected Set getInterestedNotificationListeners (Notification event, NotifierToKeyToListenersSetMap listeners); final private class NotifierToKeyToListenersSetMap {
public class DiagramEventBroker extends ResourceSetListenerImpl {
    final protected Set getInterestedNotificationListeners (Notification event, NotifierToKeyToListenersSetMap listeners); final private class NotifierToKeyToListenersSetMap {
    final public void addNotificationListener (EObject target, EStructuralFeature key, NotificationListener listener);
    final public void addNotificationListener (EObject target, EStructuralFeature key, NotificationPreCommitListener listener);
    final public void addNotificationListener (EObject target, NotificationListener listener);
    final public void addNotificationListener (EObject target, NotificationPreCommitListener listener);
    final public void removeNotificationListener (EObject target, NotificationListener listener);
    final public void removeNotificationListener (EObject target, NotificationPreCommitListener listener);
    final public void removeNotificationListener (EObject target, Object key, NotificationListener listener);
public class DiagramEventBroker extends ResourceSetListenerImpl {
    protected NotifierToKeyToListenersSetMap getPostCommitListenersMap ();
    protected NotifierToKeyToListenersSetMap getPreCommitListenersMap ();
    protected Set getInterestedNotificationListeners (Notification event, NotifierToKeyToListenersSetMap listeners);
    protected void fireNotification (Notification event);
    final public class NotifierToKeyToListenersSetMap {
    public void addNotificationListener (EObject target, EStructuralFeature key, NotificationListener listener);
    public void addNotificationListener (EObject target, EStructuralFeature key, NotificationPreCommitListener listener);
    public void addNotificationListener (EObject target, NotificationListener listener);
    public void addNotificationListener (EObject target, NotificationPreCommitListener listener);
    public void removeNotificationListener (EObject target, NotificationListener listener);
    public void removeNotificationListener (EObject target, NotificationPreCommitListener listener);
    public void removeNotificationListener (EObject target, Object key, NotificationListener listener);
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends ResourceSetListenerImpl {
public class DiagramEventBroker extends MUniversalListener {
    protected Set getInterestedNotificationListeners (Notification event);
    protected Set getNotificationListeners (Object notifier);
    protected Set getNotificationListeners (Object notifier, Object key);
    protected void fireNotification (Notification event);
    protected void handleElementEvent (Notification event); final public static MFilter ELEMENT_CREATED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.CREATE));
    final public static MFilter ELEMENT_DELETED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.DESTROY));
    final public static MFilter ELEMENT_INSERTED_INTO_SLOT = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.Or (new MFilter.EventType (EventTypes.ADD), new MFilter.EventType (EventTypes.ADD_MANY)));
    final public static MFilter ELEMENT_REMOVED_FROM_SLOT = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.Or (new MFilter.EventType (EventTypes.REMOVE), new MFilter.EventType (EventTypes.REMOVE_MANY)));
    final public static MFilter ELEMENT_UNCREATED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.UNCREATE));
    final public static MFilter ELEMENT_UNDELETED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.EventType (EventTypes.UNDESTROY));
    final public static MFilter SLOT_MODIFIED = new MFilter.And (new MFilter.NotifierType (EObject.class, false), new MFilter.And (new MFilter.EventType (EventTypes.SET), new MFilter.EventType (EventTypes.UNSET)));
    public static DiagramEventBroker getInstance ();
    public void startListening ();
    public void stopListening ();
public class DiagramEventBroker extends ResourceSetListenerImpl {
    final public void removeNotificationListener (EObject target, Object key, NotificationPreCommitListener listener);
    public static DiagramEventBroker getInstance (TransactionalEditingDomain editingDomain);
    public static void startListening (TransactionalEditingDomain editingDomain);
    public static void stopListening (TransactionalEditingDomain editingDomain);
    public void resourceSetChanged (ResourceSetChangeEvent event);
public class DiagramGeneralPreferencePage extends DiagramsPreferencePage {
public class DiagramGeneralPreferencePage extends DiagramsPreferencePage {
    public static void initDefaults (IPreferenceStore preferenceStore);
public class DiagramGeneralSection extends AbstractBasicTextPropertySection {
    final protected static String DESCRIPTION = ResourceManager.getI18NString ("DiagramGeneralDetails.diagramDescriptionChangeCommand.text");
    final protected static String DESCRIPTION_LABEL = ResourceManager.getI18NString ("DiagramGeneralDetails.diagramDescriptionLabel.text");
    final protected static String DIAGRAM_TYPE_LABEL = ResourceManager.getI18NString ("DiagramGeneralDetails.diagramTypeLabel.text");
    final protected static String NAME = ResourceManager.getI18NString ("DiagramGeneralDetails.nameChangeCommand.text");
    final protected static String NAME_LABEL = ResourceManager.getI18NString ("DiagramGeneralDetails.nameLabel.text");
public class DiagramGeneralSection extends AbstractBasicTextPropertySection {
    final protected static String DESCRIPTION = DiagramUIPropertiesMessages.DiagramGeneralDetails_diagramDescriptionChangeCommand_text;
    final protected static String DESCRIPTION_LABEL = DiagramUIPropertiesMessages.DiagramGeneralDetails_diagramDescriptionLabel_text;
    final protected static String DIAGRAM_TYPE_LABEL = DiagramUIPropertiesMessages.DiagramGeneralDetails_diagramTypeLabel_text;
    final protected static String NAME = DiagramUIPropertiesMessages.DiagramGeneralDetails_nameChangeCommand_text;
    final protected static String NAME_LABEL = DiagramUIPropertiesMessages.DiagramGeneralDetails_nameLabel_text;
abstract public class DiagramGenerator {
abstract public class DiagramGenerator {
    public Image createAWTImageForParts (List editParts, org.eclipse.swt.graphics.Rectangle diagramArea);
    public org.eclipse.swt.graphics.Rectangle calculateImageRectangle (List editparts);
abstract public class DiagramGenerator {
abstract public class DiagramGenerator {
    final public ImageDescriptor createConstrainedSWTImageDecriptorForParts (List editParts, int maxDeviceWidth, int maxDeviceHeight, boolean useMargins) {
        ImageDescriptor imageDesc = new ImageDescriptor () {
            public ImageData getImageData ();
        ;
        Graphics graphics = null;
        try {
            IMapMode mm = getMapMode ();
            Rectangle originalBounds = new PrecisionRectangle (new Rectangle (calculateImageRectangle (editParts)));
            getMapMode ().LPtoDP (originalBounds);
            int deviceMargins = mm.LPtoDP (getImageMargin ());
            int threshold = useMargins ? deviceMargins : 0;
            double xScalingFactor = 1.0, yScalingFactor = xScalingFactor;
            originalBounds.shrink (deviceMargins, deviceMargins);
            if (maxDeviceWidth > threshold) {
                xScalingFactor = (maxDeviceWidth - threshold - threshold) / (originalBounds.preciseWidth ());
            if (maxDeviceHeight > threshold) {
                yScalingFactor = (maxDeviceHeight - threshold - threshold) / (originalBounds.preciseHeight ());
            double scalingFactor = Math.min (Math.min (xScalingFactor, yScalingFactor), 1);
            int imageWidth = originalBounds.width + threshold + threshold;
            int imageHeight = originalBounds.height + threshold + threshold;
            if (scalingFactor < 1) {
                imageWidth = (int) Math.round (originalBounds.preciseWidth () * scalingFactor) + threshold + threshold;
                imageHeight = (int) Math.round (originalBounds.preciseHeight () * scalingFactor) + threshold + threshold;
            graphics = setUpGraphics (imageWidth, imageHeight);
            ScaledGraphics scaledGraphics = new ScaledGraphics (graphics);
            RenderedMapModeGraphics mapModeGraphics = new RenderedMapModeGraphics (scaledGraphics, getMapMode ());
            graphics.translate (threshold, threshold);
            mapModeGraphics.scale (scalingFactor);
            Point location = new PrecisionPoint (originalBounds.preciseX (), originalBounds.preciseY ());
            mm.DPtoLP (location);
            renderToGraphics (mapModeGraphics, location, editParts);
            imageDesc = getImageDescriptor (graphics);
            if (graphics != null) disposeGraphics (graphics);
        return imageDesc;
    public Image createConstrainedAWTImageForParts (List editParts, int maxDeviceWidth, int maxDeviceHeight, boolean useMargins);
abstract public class DiagramGenerator {
    final public ImageDescriptor createConstrainedSWTImageDecriptorForParts (List editParts, int maxDeviceWidth, int maxDeviceHeight, boolean useMargins) {
        ImageDescriptor imageDesc = new ImageDescriptor () {
        ;
        Graphics graphics = null;
        try {
            IMapMode mm = getMapMode ();
            Rectangle originalBounds = new PrecisionRectangle (new Rectangle (calculateImageRectangle (editParts)));
            getMapMode ().LPtoDP (originalBounds);
            int deviceMargins = mm.LPtoDP (getImageMargin ());
            int threshold = useMargins ? deviceMargins : 0;
            double xScalingFactor = 1.0, yScalingFactor = xScalingFactor;
            originalBounds.shrink (deviceMargins, deviceMargins);
            if (maxDeviceWidth > threshold) {
                xScalingFactor = (maxDeviceWidth - threshold - threshold) / (originalBounds.preciseWidth ());
            if (maxDeviceHeight > threshold) {
                yScalingFactor = (maxDeviceHeight - threshold - threshold) / (originalBounds.preciseHeight ());
            double scalingFactor = Math.min (Math.min (xScalingFactor, yScalingFactor), 1);
            int imageWidth = originalBounds.width + threshold + threshold;
            int imageHeight = originalBounds.height + threshold + threshold;
            if (scalingFactor < 1) {
                imageWidth = (int) Math.round (originalBounds.preciseWidth () * scalingFactor) + threshold + threshold;
                imageHeight = (int) Math.round (originalBounds.preciseHeight () * scalingFactor) + threshold + threshold;
            graphics = setUpGraphics (imageWidth, imageHeight);
            ScaledGraphics scaledGraphics = new ScaledGraphics (graphics);
            RenderedMapModeGraphics mapModeGraphics = new RenderedMapModeGraphics (scaledGraphics, getMapMode ());
            graphics.translate (threshold, threshold);
            mapModeGraphics.scale (scalingFactor);
            Point location = new PrecisionPoint (originalBounds.preciseX (), originalBounds.preciseY ());
            mm.DPtoLP (location);
            renderToGraphics (mapModeGraphics, location, editParts);
            imageDesc = getImageDescriptor (graphics);
            if (graphics != null) disposeGraphics (graphics);
        return imageDesc;
abstract public class DiagramGenerator {
    final public ImageDescriptor createConstrainedSWTImageDecriptorForParts (List editParts, int maxDeviceWidth, int maxDeviceHeight, boolean useMargins) {
        ImageDescriptor imageDesc = new ImageDescriptor () {
        ;
        Graphics graphics = null;
        try {
            IMapMode mm = getMapMode ();
            ConstrainedImageRenderingData data = getConstrainedImageRenderingData (editParts, maxDeviceWidth, maxDeviceHeight, useMargins);
            graphics = setUpGraphics (data.imageWidth, data.imageHeight);
            ScaledGraphics scaledGraphics = new ScaledGraphics (graphics);
            RenderedMapModeGraphics mapModeGraphics = new RenderedMapModeGraphics (scaledGraphics, getMapMode ());
            graphics.translate (data.margin, data.margin);
            mapModeGraphics.scale (data.scalingFactor);
            Point location = new PrecisionPoint (data.imageOriginalBounds.preciseX (), data.imageOriginalBounds.preciseY ());
            mm.DPtoLP (location);
            renderToGraphics (mapModeGraphics, location, editParts);
            imageDesc = getImageDescriptor (graphics);
            if (graphics != null) disposeGraphics (graphics);
        return imageDesc;
    public List < PartPositionInfo > getConstrainedDiagramPartInfo (DiagramEditPart diagramEditPart, int maxWidth, int maxHeight, boolean useMargins);
abstract public class DiagramGenerator {
abstract public class DiagramGenerator {
    protected IMapMode getMapMode ();
@SuppressWarnings("unchecked")
public class DiagramGenModelTransformer extends MappingTransformer {
    public DiagramGenModelTransformer (DiagramRunTimeModelHelper drtHelper, GenModelNamingMediator namingStrategy, ViewmapProducer viewmaps, VisualIdentifierDispenser visualIdD) {
@SuppressWarnings("unchecked")
public class DiagramGenModelTransformer extends MappingTransformer {
    public DiagramGenModelTransformer (DiagramRunTimeModelHelper drtHelper, GenModelNamingMediator namingStrategy, ViewmapProducer viewmaps, VisualIdentifierDispenser visualIdD, boolean rcp) {
@SuppressWarnings("unchecked")
public class DiagramGenModelTransformer extends MappingTransformer {
public class DiagramGenModelTransformer extends MappingTransformer {
public class DiagramGenModelTransformer extends MappingTransformer {
@SuppressWarnings("unchecked")
public class DiagramGenModelTransformer extends MappingTransformer {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
    private class LightweightSystemWithUpdateToggle extends LightweightSystem {
        public ToggleUpdateManager getToggleUpdateManager ();
        public void disableUpdates ();
        public void enableUpdates ();
    private class ToggleUpdateManager extends DeferredUpdateManager {
        public boolean shouldDisableUpdates ();
        public synchronized void performUpdate ();
        public void performValidation ();
        public void queueWork ();
        public void setDisableUpdates (boolean disableUpdates);
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
    private class ToggleUpdateManager extends DeferredUpdateManager {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
    private class ToggleUpdateManager extends DeferredUpdateManager {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
    private class ToggleUpdateManager extends DeferredUpdateManager {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
    private class ToggleUpdateManager extends DeferredUpdateManager {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
    private class ToggleUpdateManager extends DeferredUpdateManager {
        public void setDisableUpdates (boolean disableUpdates);
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
    private class ToggleUpdateManager extends DeferredUpdateManager {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
public class DiagramGraphicalViewer extends ScrollingGraphicalViewer implements IDiagramGraphicalViewer {
public class DiagramGraphicalViewerKeyHandler extends GraphicalViewerKeyHandler {
public class DiagramGraphicalViewerKeyHandler extends GraphicalViewerKeyHandler {
public class DiagramImageGenerator extends DiagramGenerator {
public class DiagramImageGenerator extends DiagramGenerator {
    public java.awt.Image createConstrainedAWTImageForParts (List editParts, int maxDeviceWidth, int maxDeviceHeight, boolean useMargins);
public class DiagramImageGenerator extends DiagramGenerator {
    public java.awt.Image createAWTImageForParts (List selectedObjects);
public class DiagramImageGenerator extends DiagramGenerator {
    public java.awt.Image createAWTImageForParts (List selectedObjects, org.eclipse.swt.graphics.Rectangle sourceRect);
public class DiagramImpl extends ViewImpl implements Diagram {
public class DiagramImpl extends ViewImpl implements Diagram {
    protected MeasurementUnit measurementUnit = MEASUREMENT_UNIT_EDEFAULT;
    final protected static MeasurementUnit MEASUREMENT_UNIT_EDEFAULT = MeasurementUnit.HIMETRIC_LITERAL;
public class DiagramImpl extends ViewImpl implements Diagram {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public boolean initializeMeasurementUnit (MeasurementUnit mu);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class DiagramImpl extends ViewImpl implements Diagram {
    final protected static int MEASUREMENT_UNIT_ESETFLAG = 1 << 11;
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public boolean isSetMeasurementUnit ();
    public void eSet (int featureID, Object newValue);
    public void unsetMeasurementUnit ();
public class DiagramImpl extends ViewImpl implements Diagram {
public class DiagramImpl extends ViewImpl implements Diagram {
public class DiagramImpl extends ViewImpl implements Diagram {
    protected EList persistedEdges = null;
    protected EList transientEdges = null;
public class DiagramImpl extends ViewImpl implements Diagram {
    protected EList persistedEdges;
    protected EList transientEdges;
public class DiagramInputDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class DiagramResourceInfo extends ElementInfo {
        public DiagramResourceInfo (IDocument document) {
public class DiagramInputDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class DiagramResourceInfo extends ElementInfo {
        public DiagramModificationListener fListener = null;
        public DiagramResourceInfo (IDocument document, DiagramModificationListener listener) {
public class DiagramInputDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
public class DiagramInputDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    private static class StorageLoader implements ILoader {
    private static interface ILoader {
        public Resource load (MEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    public static void unload (MEditingDomain domain, Diagram diagram);
    public static Diagram load (final MEditingDomain domain, final IFile file, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static Diagram load (final MEditingDomain domain, final IStorage storage, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static void save (MEditingDomain domain, IFile file, Diagram diagram, IProgressMonitor progressMonitor, int nOptions) throws CoreException;
    public static void save (MEditingDomain domain, IFile file, Diagram diagram, boolean bOverwrite, boolean bKeepUnrecognizedData, IProgressMonitor progressMonitor) throws CoreException;
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    private static class StorageLoader implements ILoader {
    private static interface ILoader {
        public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    public static void unload (TransactionalEditingDomain domain, Diagram diagram);
    public static Diagram load (final TransactionalEditingDomain domain, final IFile file, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static Diagram load (final TransactionalEditingDomain domain, final IStorage storage, boolean bTryCompatible, IProgressMonitor monitor) throws CoreException;
    public static void save (TransactionalEditingDomain domain, IFile file, Diagram diagram, IProgressMonitor progressMonitor, Map options) throws CoreException;
    public static void save (TransactionalEditingDomain domain, IFile file, Diagram diagram, boolean bKeepUnrecognizedData, IProgressMonitor progressMonitor) throws CoreException;
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
    private static class StorageLoader implements ILoader {
    private static interface ILoader {
        public Resource load (TransactionalEditingDomain domain, int loadOptions, IProgressMonitor monitor) throws CoreException;
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        public Resource load (TransactionalEditingDomain domain, Map loadOptions, IProgressMonitor monitor) throws CoreException;
    private static class StorageLoader implements ILoader {
    private static interface ILoader {
        public Resource load (TransactionalEditingDomain domain, Map loadOptions, IProgressMonitor monitor) throws CoreException;
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        public Resource load (TransactionalEditingDomain domain, Map loadOptions, IProgressMonitor monitor) throws CoreException;
    private static class StorageLoader implements ILoader {
    private static interface ILoader {
        public Resource load (TransactionalEditingDomain domain, Map loadOptions, IProgressMonitor monitor) throws CoreException;
public class DiagramIOUtil {
    private static class FileLoader implements ILoader {
        public Resource load (TransactionalEditingDomain domain, Map loadOptions, IProgressMonitor monitor) throws CoreException, IOException;
    private static class StorageLoader implements ILoader {
    private static interface ILoader {
        public Resource load (TransactionalEditingDomain domain, Map loadOptions, IProgressMonitor monitor) throws CoreException, IOException;
public class DiagramItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLabelAccessorEditPart extends ConnectionNodeEditPart {
public class DiagramLabelAccessorEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
    protected boolean elementIcon = ELEMENT_ICON_EDEFAULT;
    final protected static boolean ELEMENT_ICON_EDEFAULT = false;
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public boolean eIsSet (int featureID);
    public boolean isElementIcon ();
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setElementIcon (boolean newElementIcon);
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
    final protected static boolean ELEMENT_ICON_EDEFAULT = false;
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
    final protected static boolean ELEMENT_ICON_EDEFAULT = true;
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
public class DiagramLabelImpl extends NodeImpl implements DiagramLabel {
    protected ChildAccess accessor;
    protected ChildAccess container;
    final protected static boolean EXTERNAL_EDEFAULT = false;
    public ChildAccess basicGetAccessor ();
    public ChildAccess basicGetContainer ();
    public ChildAccess getAccessor ();
    public boolean isExternal ();
    public void setAccessor (ChildAccess newAccessor);
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addAccessorPropertyDescriptor (Object object);
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLabelItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DiagramLabelItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
interface DiagramLinkStyle extends Style {
interface DiagramLinkStyle extends NotationObject, Style {
interface DiagramLinkStyle extends NotationObject, Style {
interface DiagramLinkStyle extends Style {
public class DiagramLinkStyleImpl extends FlatEObjectImpl implements DiagramLinkStyle {
public class DiagramLinkStyleImpl extends NotationObjectImpl implements DiagramLinkStyle {
public class DiagramLinkStyleImpl extends NotationObjectImpl implements DiagramLinkStyle {
public class DiagramLinkStyleImpl extends NotationEObjectImpl implements DiagramLinkStyle {
public class DiagramLinkStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLinkStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLinkStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramLinkStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DiagramModificationListener {
    public DiagramModificationListener (final AbstractDocumentProvider documentProvider, final DiagramDocument document) {
public class DiagramModificationListener extends EContentAdapter {
    public DiagramModificationListener (AbstractDocumentProvider documentProvider, DiagramDocument document) {
    public Notifier getTarget ();
    public boolean isAdapterForType (Object type);
    public void notifyChanged (Notification notification);
    public void unsetTarget (Notifier oldTarget);
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramNameCompartmentEditPart extends TextCompartmentEditPart {
public class DiagramPlugin extends XToolsPlugin {
public class DiagramPlugin extends XToolsPlugin {
public class DiagramPlugin extends XToolsPlugin {
public class DiagramPlugin extends XToolsPlugin {
public class DiagramPlugin extends XToolsPlugin {
public class DiagramPlugin extends Plugin {
public class DiagramPopupBarEditPolicy extends PopupBarEditPolicy implements PaletteListener {
public class DiagramPopupBarEditPolicy extends PopupBarEditPolicy implements PaletteListener {
    protected void fillBasedOnLastActivePaletteTool ();
public class DiagramPrinter implements Runnable {
public class DiagramPrinter implements Runnable {
public class DiagramPrinter implements Runnable {
    protected Collection diagrams;
    protected Point getPrinterOffset (); protected Point printerOffset;
    protected PreferencesHint getPreferencesHint (); protected Printer printer;
    protected PrinterGraphics createPrinterGraphics (Graphics theGraphics); protected Rectangle logicalClientArea;
    protected void adjustMargins (PageMargins margins, float scale, Point offset);
    protected void drawHeaderAndFooter (GC gc_, DiagramEditPart dgrmEP, Rectangle figureBounds, Font font, int rowIndex, int colIndex);
    protected void drawPage (GC gc_, DiagramEditPart dgrmEP, IPreferenceStore fPreferences, Rectangle figureBounds, PageMargins margins, Font font, int rowIndex, int colIndex);
    protected void printToPages (DiagramEditPart dgrmEP, boolean loadedPreferences, IPreferenceStore fPreferences);
    protected void printToScale (DiagramEditPart dgrmEP, boolean loadedPreferences, IPreferenceStore fPreferences);
    public DiagramPrinter (PreferencesHint preferencesHint) {
abstract public class DiagramPrinter implements Runnable {
    protected Collection < Diagram > diagrams;
    protected Graphics graphics;
    protected Graphics swtGraphics;
    protected IMapMode mapMode;
    protected Point display_dpi;
    protected Point translated;
    protected PreferencesHint preferencesHint;
    protected boolean fitToPage = false;
    protected boolean isScaledPercent = false;
    protected boolean printRangePageSelection = false;
    protected float userScale;
    protected int calculateColumnFromPage (int pageNum, int totalNumColumns, int cRow);
    protected int calculateRowFromPage (int pageNum, int totalNumColumns); protected int columns = 1;
    protected int pageFrom = 1, pageTo = 1;
    protected int rows = 1;
    protected org.eclipse.draw2d.geometry.Point getPageCount (DiagramEditPart dgrmEP, Rectangle figureBounds, org.eclipse.draw2d.geometry.Point pageSize, boolean applyUserScale);
    protected void dispose ();
    public Graphics getGraphics ();
    public Graphics getSwtGraphics ();
    public IMapMode getMapMode ();
    public Point getDisplayDPI ();
    public Point getTranslated ();
    public PreferencesHint getPreferencesHint ();
    public boolean isFitToPage ();
    public boolean isPrintRangePageSelection ();
    public float getUserScale ();
    public int getColumns ();
    public int getPageFrom ();
    public int getPageTo ();
    public void setGraphics (Graphics graphics);
    public void setMapMode (IMapMode mm);
    public void setPageFrom (int pageFrom);
    public void setPageTo (int pageTo);
    public void setPreferencesHint (PreferencesHint preferencesHint);
    public void setSwtGraphics (Graphics swtGraphics);
    public void setTranslated (Point translated);
public class DiagramPrinter implements Runnable {
public class DiagramPrinter implements Runnable {
    public DiagramPrinter (PreferencesHint preferencesHint, IMapMode mm) {
public class DiagramPrinter implements Runnable {
    protected Graphics graphics;
public class DiagramPrinter implements Runnable {
public class DiagramPrinter implements Runnable {
public class DiagramPrinter implements Runnable {
    public void setPrintRangePageSelection (boolean isPrintRangePageSelected);
public class DiagramPrinterUtil {
    public static void printWithSettings (IEditorPart editorPart, Map diagramMap, DiagramPrinter diagramPrinter);
public class DiagramPrinterUtil {
    public static void printWithSettings (IEditorPart editorPart, Map diagramMap, SWTDiagramPrinter diagramPrinter);
public class DiagramPrintingPlugin extends XToolsUIPlugin {
public class DiagramPrintingPlugin extends XToolsUIPlugin {
public class DiagramPrintingPlugin extends XToolsUIPlugin {
public class DiagramPrintingPlugin extends AbstractUIPlugin {
public class DiagramPropertiesPlugin extends XToolsUIPlugin {
    protected void doShutdown ();
public class DiagramPropertiesPlugin extends AbstractUIPlugin {
    public void start (BundleContext context) throws Exception;
    public void stop (BundleContext context) throws Exception;
public class DiagramProvidersIDEPlugin extends XToolsUIPlugin {
public class DiagramProvidersIDEPlugin extends XToolsUIPlugin {
public class DiagramProvidersIDEPlugin extends XToolsUIPlugin {
public class DiagramProvidersIDEPlugin extends AbstractUIPlugin {
public class DiagramProvidersPlugin extends XToolsUIPlugin {
public class DiagramProvidersPlugin extends XToolsUIPlugin {
public class DiagramProvidersPlugin extends XToolsUIPlugin {
public class DiagramProvidersPlugin extends AbstractUIPlugin {
final public class DiagramProvidersStatusCodes {
final public class DiagramProvidersStatusCodes {
    final public static int L10N_FAILURE = 3;
final public class DiagramProvidersStatusCodes {
final public class DiagramProvidersStatusCodes {
    final public static int SERVICE_FAILURE = 7;
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    protected GridLayer createGridLayer ();
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    private class WrapperMapMode implements IMapMode {
        public Translatable DPtoLP (Translatable t);
        public Translatable LPtoDP (Translatable t);
        public WrapperMapMode () {
        public int DPtoLP (int deviceUnit);
        public int LPtoDP (int logicalUnit);
        public void setContainedMapMode (IMapMode mm);
    public DiagramRootEditPart () {
    public DiagramRootEditPart (MeasurementUnit mu) {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    private class WrapperMapMode implements IMapMode {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    private class WrapperMapMode implements IMapModeHolder {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    protected static class DiagramScalableFreeformLayeredPane extends org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.ScalableFreeformLayeredPane implements ZoomListener {
        public void zoomChanged (double zoom);
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    protected static class DiagramScalableFreeformLayeredPane extends org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.ScalableFreeformLayeredPane implements ZoomListener {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    protected static class DiagramScalableFreeformLayeredPane extends org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.ScalableFreeformLayeredPane implements ZoomListener {
        public DiagramScalableFreeformLayeredPane (IMapMode mm) {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
public class DiagramRootEditPart extends ScalableFreeformRootEditPart implements IDiagramPreferenceSupport, ZoomableEditPart {
    public DiagramRuler getHorizontalRuler ();
public class DiagramRuler {
    public void addPropertyChangeListener (PropertyChangeListener listener);
public class DiagramRuler {
    public void addNotificationListener (NotificationListener listener);
public class DiagramRuler {
public class DiagramRuler {
public class DiagramRuler {
    public void addNotificationListener (NotificationListener listener);
public class DiagramRuler {
    public void addNotificationListener (TransactionalEditingDomain editingDomain, NotificationListener listener);
public class DiagramRulerProvider extends RulerProvider {
    private NotificationListener rulerListener = new NotificationListener () {
    ;
    public DiagramRulerProvider (DiagramRuler ruler, IMapMode mm) {
public class DiagramRulerProvider extends RulerProvider {
    private NotificationListener rulerListener = new NotificationListener () {
    ;
    public DiagramRulerProvider (TransactionalEditingDomain editingDomain, DiagramRuler ruler, IMapMode mm) {
public class DiagramRulerProvider extends RulerProvider {
    private PropertyChangeListener guideListener = new PropertyChangeListener () {
        public void propertyChange (PropertyChangeEvent evt);
    ;
    private PropertyChangeListener rulerListener = new PropertyChangeListener () {
        public void propertyChange (PropertyChangeEvent evt);
    ;
public class DiagramRulerProvider extends RulerProvider {
    private NotificationListener guideListener = new NotificationListener () {
        public void notifyChanged (Notification evt);
    ;
    private NotificationListener rulerListener = new NotificationListener () {
        public void notifyChanged (Notification evt);
    ;
public class DiagramRulerProvider extends RulerProvider {
    private NotificationListener rulerListener = new NotificationListener () {
    ;
    public DiagramRulerProvider (DiagramRuler ruler) {
public class DiagramRulerProvider extends RulerProvider {
    private NotificationListener rulerListener = new NotificationListener () {
    ;
    public DiagramRulerProvider (DiagramRuler ruler, IMapMode mm) {
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
public class DiagramStyleImpl extends FlatEObjectImpl implements DiagramStyle {
public class DiagramStyleImpl extends FlatEObjectImpl implements DiagramStyle {
    protected EList horizontalGuides = null;
    protected EList verticalGuides = null;
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
    protected EList horizontalGuides;
    protected EList verticalGuides;
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
    public void setUUID (byte [] newUUID);
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
    public void setUUID (byte [] newUUID);
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
public class DiagramStyleImpl extends NotationEObjectImpl implements DiagramStyle {
public class DiagramSVGGenerator extends DiagramGenerator {
public class DiagramSVGGenerator extends DiagramGenerator {
public class DiagramSVGGenerator extends DiagramGenerator {
public class DiagramSVGGenerator extends DiagramGenerator {
[DiagramUIActionsMessages-3.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
final public class DiagramUIActionsMessages extends NLS {
final public class DiagramUIActionsMessages extends NLS {
    public static String SelectConnectionEndAction_SelectSource_ActionLabelText;
    public static String SelectConnectionEndAction_SelectSource_ActionToolTipText;
    public static String SelectConnectionEndAction_SelectTarget_ActionLabelText;
    public static String SelectConnectionEndAction_SelectTarget_ActionToolTipText;
[DiagramUIActionsMessages-4.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
final public class DiagramUIActionsMessages extends NLS {
final public class DiagramUIActionsMessages extends NLS {
    public static String TextAlignmentActionMenu_textAlignmentText;
    public static String TextAlignmentActionMenu_textAlignmentToolTip;
    public static String TextAlignmentAction_ChangePropertyValueRequest_label;
    public static String TextAlignmentAction_center;
    public static String TextAlignmentAction_left;
    public static String TextAlignmentAction_right;
[DiagramUIActionsMessages-5.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
final public class DiagramUIActionsMessages extends NLS {
final public class DiagramUIActionsMessages extends NLS {
    public static String ArrowTypeActionMenu_arrowTypeSourceText;
    public static String ArrowTypeActionMenu_arrowTypeSourceToolTip;
    public static String ArrowTypeActionMenu_arrowTypeTargetText;
    public static String ArrowTypeActionMenu_arrowTypeTargetToolTip;
    public static String ArrowTypeActionMenu_arrowTypeText;
    public static String ArrowTypeActionMenu_arrowTypeToolTip;
    public static String ArrowTypeAction_ChangePropertyValueRequest_label;
    public static String ArrowTypeAction_none;
    public static String ArrowTypeAction_open;
    public static String ArrowTypeAction_solid;
    public static String LineTypeActionMenu_lineTypeText;
    public static String LineTypeActionMenu_lineTypeToolTip;
    public static String LineTypeAction_ChangePropertyValueRequest_label;
    public static String LineTypeAction_dash;
    public static String LineTypeAction_dashdot;
    public static String LineTypeAction_dashdotdot;
    public static String LineTypeAction_dot;
    public static String LineTypeAction_solid;
    public static String LineWidthActionMenu_lineWidthText;
    public static String LineWidthActionMenu_lineWidthToolTip;
    public static String LineWidthAction_ChangePropertyValueRequest_label;
    public static String LineWidthAction_five;
    public static String LineWidthAction_four;
    public static String LineWidthAction_one;
    public static String LineWidthAction_three;
    public static String LineWidthAction_two;
public class DiagramUIActionsPluginImages {
public class DiagramUIActionsPluginImages {
    final public static ImageDescriptor DESC_GROUP = create (PREFIX_ENABLED + "group.gif");
    final public static ImageDescriptor DESC_GROUP_DISABLED = create (PREFIX_DISABLED + "group.gif");
    final public static ImageDescriptor DESC_UNGROUP = create (PREFIX_ENABLED + "ungroup.gif");
    final public static ImageDescriptor DESC_UNGROUP_DISABLED = create (PREFIX_DISABLED + "ungroup.gif");
public class DiagramUIActionsPluginImages {
public class DiagramUIActionsPluginImages {
    final public static ImageDescriptor DESC_TEXT_ALIGNMENT_CENTER = create (PREFIX_ENABLED + "aligncenter.gif");
    final public static ImageDescriptor DESC_TEXT_ALIGNMENT_CENTER_DISABLED = create (PREFIX_DISABLED + "aligncenter.gif");
    final public static ImageDescriptor DESC_TEXT_ALIGNMENT_LEFT = create (PREFIX_ENABLED + "alignleft.gif");
    final public static ImageDescriptor DESC_TEXT_ALIGNMENT_LEFT_DISABLED = create (PREFIX_DISABLED + "alignleft.gif");
    final public static ImageDescriptor DESC_TEXT_ALIGNMENT_RIGHT = create (PREFIX_ENABLED + "alignright.gif");
    final public static ImageDescriptor DESC_TEXT_ALIGNMENT_RIGHT_DISABLED = create (PREFIX_DISABLED + "alignright.gif");
public class DiagramUIActionsPluginImages {
public class DiagramUIActionsPluginImages {
    final public static ImageDescriptor DESC_ARROW_TYPE = create (PREFIX_ENABLED + "arrow_type.gif");
    final public static ImageDescriptor DESC_ARROW_TYPE_DISABLED = create (PREFIX_DISABLED + "arrow_type.gif");
    final public static ImageDescriptor DESC_ARROW_TYPE_NONE = create (PREFIX_ENABLED + "arrow_type_none.gif");
    final public static ImageDescriptor DESC_ARROW_TYPE_NONE_DISABLED = create (PREFIX_DISABLED + "arrow_type_none.gif");
    final public static ImageDescriptor DESC_ARROW_TYPE_OPEN = create (PREFIX_ENABLED + "arrow_type_open.gif");
    final public static ImageDescriptor DESC_ARROW_TYPE_OPEN_DISABLED = create (PREFIX_DISABLED + "arrow_type_open.gif");
    final public static ImageDescriptor DESC_ARROW_TYPE_SOLID = create (PREFIX_ENABLED + "arrow_type_solid.gif");
    final public static ImageDescriptor DESC_ARROW_TYPE_SOLID_DISABLED = create (PREFIX_DISABLED + "arrow_type_solid.gif");
    final public static ImageDescriptor DESC_LINE_TYPE = create (PREFIX_ENABLED + "line_type.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DASH = create (PREFIX_ENABLED + "line_type_dash.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DASH_DISABLED = create (PREFIX_DISABLED + "line_type_dash.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DASH_DOT = create (PREFIX_ENABLED + "line_type_dash_dot.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DASH_DOT_DISABLED = create (PREFIX_DISABLED + "line_type_dash_dot.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DASH_DOT_DOT = create (PREFIX_ENABLED + "line_type_dash_dot_dot.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DASH_DOT_DOT_DISABLED = create (PREFIX_DISABLED + "line_type_dash_dot_dot.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DISABLED = create (PREFIX_DISABLED + "line_type.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DOT = create (PREFIX_ENABLED + "line_type_dot.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_DOT_DISABLED = create (PREFIX_DISABLED + "line_type_dot.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_SOLID = create (PREFIX_ENABLED + "line_type_solid.gif");
    final public static ImageDescriptor DESC_LINE_TYPE_SOLID_DISABLED = create (PREFIX_DISABLED + "line_type_solid.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH = create (PREFIX_ENABLED + "line_width.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_DISABLED = create (PREFIX_DISABLED + "line_width.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_FIVE = create (PREFIX_ENABLED + "line_width_five.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_FIVE_DISABLED = create (PREFIX_DISABLED + "line_width_five.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_FOUR = create (PREFIX_ENABLED + "line_width_four.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_FOUR_DISABLED = create (PREFIX_DISABLED + "line_width_four.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_ONE = create (PREFIX_ENABLED + "line_width_one.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_ONE_DISABLED = create (PREFIX_DISABLED + "line_width_one.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_THREE = create (PREFIX_ENABLED + "line_width_three.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_THREE_DISABLED = create (PREFIX_DISABLED + "line_width_three.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_TWO = create (PREFIX_ENABLED + "line_width_two.gif");
    final public static ImageDescriptor DESC_LINE_WIDTH_TWO_DISABLED = create (PREFIX_DISABLED + "line_width_two.gif");
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
final public class DiagramUIMessages extends NLS {
final public class DiagramUIMessages extends NLS {
    public static String DeleteFromModelAction_ErrorDialog_Text;
    public static String DeleteFromModelAction_ErrorDialog_Title;
[DiagramUIMessages-9.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
final public class DiagramUIMessages extends NLS {
    public static String Accessible_Connection_From;
    public static String Accessible_Connection_To;
final public class DiagramUIMessages extends NLS {
[DiagramUIMessages-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 8 garbage recoveries were required (larger size recommended for improved performance)
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
final public class DiagramUIMessages extends NLS {
    public static String GridRulerPreferencePage_gridSpacing_label;
    public static String PageSetupDialog_text_page_height;
    public static String PageSetupDialog_text_page_margin_bottom;
    public static String PageSetupDialog_text_page_margin_left;
    public static String PageSetupDialog_text_page_margin_right;
    public static String PageSetupDialog_text_page_margin_top;
    public static String PageSetupDialog_text_page_width;
final public class DiagramUIMessages extends NLS {
    public static String GridRulerPreferencePage_gridSpacing_label_cm;
    public static String GridRulerPreferencePage_gridSpacing_label_inches;
    public static String GridRulerPreferencePage_gridSpacing_label_pixels;
    public static String PageSetupDialog_text_page_height_inches;
    public static String PageSetupDialog_text_page_height_mm;
    public static String PageSetupDialog_text_page_margin_bottom_inches;
    public static String PageSetupDialog_text_page_margin_bottom_mm;
    public static String PageSetupDialog_text_page_margin_left_inches;
    public static String PageSetupDialog_text_page_margin_left_mm;
    public static String PageSetupDialog_text_page_margin_right_inches;
    public static String PageSetupDialog_text_page_margin_right_mm;
    public static String PageSetupDialog_text_page_margin_top_inches;
    public static String PageSetupDialog_text_page_margin_top_mm;
    public static String PageSetupDialog_text_page_width_inches;
    public static String PageSetupDialog_text_page_width_mm;
[DiagramUIMessages-4.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 8 garbage recoveries were required (larger size recommended for improved performance)
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
final public class DiagramUIMessages extends NLS {
final public class DiagramUIMessages extends NLS {
    public static String OutlineView_OutlineTipText;
    public static String OutlineView_OverviewTipText;
[DiagramUIMessages-5.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
final public class DiagramUIMessages extends NLS {
final public class DiagramUIMessages extends NLS {
    public static String CopyToHTMLImageTask_exportingToHTML;
    public static String CopyToHTMLImageTask_generateImageFile;
    public static String CopyToImageDialog_exportToHTML_label;
[DiagramUIMessages-6.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
final public class DiagramUIMessages extends NLS {
final public class DiagramUIMessages extends NLS {
    public static String SnapCommand_Label;
[DiagramUIMessages-7.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
final public class DiagramUIMessages extends NLS {
    public static String SnapToGrid_toolTip;
final public class DiagramUIMessages extends NLS {
    public static String GridRulerPreferencePage_snapToGeometry_label;
[DiagramUIMessages-8.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
public class DiagramUIPluginImages {
    final public static ImageDescriptor DESC_BRING_FORWARD = create (PREFIX_ROOT + "bring_forward.gif");
    final public static ImageDescriptor DESC_BRING_TO_FRONT = create (PREFIX_ROOT + "bring_to_front.gif");
    final public static ImageDescriptor DESC_SEND_BACWARD = create (PREFIX_ROOT + "send_backward.gif");
    final public static ImageDescriptor DESC_SEND_TO_BACK = create (PREFIX_ROOT + "send_to_back.gif");
public class DiagramUIPluginImages {
public class DiagramUIPluginImages {
    final public static ImageDescriptor DESC_CONNECTION_CURSOR_MASK = create (PREFIX_ENABLED + "connectcursor_mask.bmp");
    final public static ImageDescriptor DESC_CONNECTION_CURSOR_SOURCE = create (PREFIX_ENABLED + "connectcursor_source.bmp");
    final public static ImageDescriptor DESC_NOSHAPECURSOR_MASK = create (PREFIX_DISABLED + "noshapecursor_mask.bmp");
    final public static ImageDescriptor DESC_NOSHAPECURSOR_SOURCE = create (PREFIX_DISABLED + "noshapecursor_source.bmp");
    final public static ImageDescriptor DESC_NO_CONNECTION_CURSOR_MASK = create (PREFIX_DISABLED + "noconnectcursor_mask.bmp");
    final public static ImageDescriptor DESC_NO_CONNECTION_CURSOR_SOURCE = create (PREFIX_DISABLED + "noconnectcursor_source.bmp");
    final public static ImageDescriptor DESC_SHAPECURSOR_MASK = create (PREFIX_ENABLED + "shapecursor_mask.bmp");
    final public static ImageDescriptor DESC_SHAPECURSOR_SOURCE = create (PREFIX_ENABLED + "shapecursor_source.bmp");
public class DiagramUIPluginImages {
    final public static ImageDescriptor DESC_CONNECTION_CURSOR_MASK = create (PREFIX_ENABLED + "connectcursor_mask.gif");
    final public static ImageDescriptor DESC_CONNECTION_CURSOR_SOURCE = create (PREFIX_ENABLED + "connectcursor_source.gif");
    final public static ImageDescriptor DESC_NOSHAPECURSOR_MASK = create (PREFIX_DISABLED + "noshapecursor_mask.gif");
    final public static ImageDescriptor DESC_NOSHAPECURSOR_SOURCE = create (PREFIX_DISABLED + "noshapecursor_source.gif");
    final public static ImageDescriptor DESC_NO_CONNECTION_CURSOR_MASK = create (PREFIX_DISABLED + "noconnectcursor_mask.gif");
    final public static ImageDescriptor DESC_NO_CONNECTION_CURSOR_SOURCE = create (PREFIX_DISABLED + "noconnectcursor_source.gif");
    final public static ImageDescriptor DESC_SHAPECURSOR_MASK = create (PREFIX_ENABLED + "shapecursor_mask.gif");
    final public static ImageDescriptor DESC_SHAPECURSOR_SOURCE = create (PREFIX_ENABLED + "shapecursor_source.gif");
public class DiagramUIPluginImages {
public class DiagramUIPluginImages {
    final public static ImageDescriptor DESC_GROUP = createAndCache (IMG_GROUP);
    final public static String IMG_GROUP = PREFIX_ROOT + "group.gif";
final public class DiagramUIPrintingMessages extends NLS {
final public class DiagramUIPrintingMessages extends NLS {
    public static String JPSOptionsDialog_AdvancedOptions;
    public static String JPSOptionsDialog_ChromaticityColor;
    public static String JPSOptionsDialog_ChromaticityMonochrome;
    public static String JPSOptionsDialog_Color;
    public static String JPSOptionsDialog_JobAttributes;
    public static String JPSOptionsDialog_JobName;
    public static String JPSOptionsDialog_Quality;
    public static String JPSOptionsDialog_QualityHigh;
    public static String JPSOptionsDialog_QualityLow;
    public static String JPSOptionsDialog_QualityMedium;
    public static String JPSOptionsDialog_Sides;
    public static String JPSOptionsDialog_SidesDuplex;
    public static String JPSOptionsDialog_SidesOneSided;
    public static String JPSOptionsDialog_SidesTumble;
final public class DiagramUIPrintingMessages extends NLS {
final public class DiagramUIPrintingMessages extends NLS {
    public static String JPSOptionsDialog_DiagramPrintCurrent;
    public static String JPSOptionsDialog_DiagramPrintRange;
    public static String JPSOptionsDialog_DiagramPrintSelected;
final public class DiagramUIPrintingMessages extends NLS {
final public class DiagramUIPrintingMessages extends NLS {
    public static String PrintPreview_FitToPage_ButtonText;
    public static String PrintPreview_FitToPage_DialogTitle;
public class DiagramUIPrintingRenderPlugin extends XToolsUIPlugin {
public class DiagramUIPrintingRenderPlugin extends XToolsUIPlugin {
public class DiagramUIPrintingRenderPlugin extends XToolsUIPlugin {
public class DiagramUIPrintingRenderPlugin extends AbstractUIPlugin {
final public class DiagramUIPropertiesMessages extends NLS {
final public class DiagramUIPropertiesMessages extends NLS {
    public static String Positive_Number_Error;
    public static String Spaced_Dot_Label_Text;
final public class DiagramUIPropertiesMessages extends NLS {
final public class DiagramUIPropertiesMessages extends NLS {
    public static String AbstractPropertySection_UndoIntervalPropertyString;
final public class DiagramUIPropertiesMessages extends NLS {
final public class DiagramUIPropertiesMessages extends NLS {
    public static String Snap_To_Geometry_Label_Text;
final public class DiagramUIPropertiesMessages extends NLS {
final public class DiagramUIPropertiesMessages extends NLS {
    public static String TextAlignmentPropertySection_AlignCenter;
    public static String TextAlignmentPropertySection_AlignLeft;
    public static String TextAlignmentPropertySection_AlignRight;
    public static String TextAlignmentPropertySection_TextAlignment;
final public class DiagramUIPropertiesMessages extends NLS {
final public class DiagramUIPropertiesMessages extends NLS {
    public static String LineStylesPropertySection_ArrowType;
    public static String LineStylesPropertySection_LineStyles;
    public static String LineStylesPropertySection_LineType;
    public static String LineStylesPropertySection_LineWidth;
    public static String LineStylesPropertySection_SourceArrow_Type;
    public static String LineStylesPropertySection_TargetArrow_Type;
public class DiagramUIRenderEditPartProvider extends AbstractEditPartProvider {
public class DiagramUIRenderEditPartProvider extends AbstractEditPartProvider {
final public class DiagramUIRenderMessages extends NLS {
final public class DiagramUIRenderMessages extends NLS {
    public static String CopyToImageOutOfMemoryDialog_message;
    public static String CopyToImageOutOfMemoryDialog_title;
public class DiagramUIRenderPlugin extends XToolsUIPlugin {
public class DiagramUIRenderPlugin extends XToolsUIPlugin {
public class DiagramUIRenderPlugin extends XToolsUIPlugin {
public class DiagramUIRenderPlugin extends AbstractUIPlugin {
final public class DiagramUIRenderStatusCodes {
final public class DiagramUIRenderStatusCodes {
    final public static int IGNORED_EXCEPTION_WARNING = 9;
public class DiagramUtil {
    public static Diagram createDiagram (EObject context, String kind, PreferencesHint preferencesHint);
    public static Edge createEdge (Diagram diagram, EObject eObject, String type, PreferencesHint preferencesHint);
    public static ILayoutNode getLayoutNode (Node node);
    public static List getLayoutNodes (DiagramEditPart diagramEP, List nodes);
    public static void layout (View view, String hint);
public class DiagramUtil {
public class DiagramUtil {
public class DiagramUtil {
public class DiagramViewerDropAdapter extends DelegatingDropAdapter {
public class DiagramViewerDropAdapter extends DelegatingDropAdapter {
public class DiagramViewFactory implements DiagramFactory {
public class DiagramViewFactory implements DiagramFactory {
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
    private CommandStackEventListener mySaveListener = new CommandStackEventListener () {
        public void stackChanged (CommandStackEvent event);
    ;
    protected void disposeDisplayer (DiagramDisplayer diagramDisplayer);
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
abstract public class DiagramViewPart extends ViewPart implements IDiagramManager {
public class DiamondFigure extends NodeFigure implements IPolygonAnchorableFigure {
    public DiamondFigure () {
public class DiamondFigure extends NodeFigure implements IPolygonAnchorableFigure {
public class DimensionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public void notifyChanged (Notification notification);
public class DimensionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class DimensionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DimensionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
final public class Direction extends AbstractEnumerator {
    final public static Direction EAST_LITERAL = new Direction (EAST, "EAST");
    final public static Direction HORIZONTAL_LITERAL = new Direction (HORIZONTAL, "HORIZONTAL");
    final public static Direction NONE_LITERAL = new Direction (NONE, "NONE");
    final public static Direction NORTH_EAST_LITERAL = new Direction (NORTH_EAST, "NORTH_EAST");
    final public static Direction NORTH_LITERAL = new Direction (NORTH, "NORTH");
    final public static Direction NORTH_WEST_LITERAL = new Direction (NORTH_WEST, "NORTH_WEST");
    final public static Direction SOUTH_EAST_LITERAL = new Direction (SOUTH_EAST, "SOUTH_EAST");
    final public static Direction SOUTH_LITERAL = new Direction (SOUTH, "SOUTH");
    final public static Direction SOUTH_WEST_LITERAL = new Direction (SOUTH_WEST, "SOUTH_WEST");
    final public static Direction VERTICAL_LITERAL = new Direction (VERTICAL, "VERTICAL");
    final public static Direction WEST_LITERAL = new Direction (WEST, "WEST");
final public class Direction extends AbstractEnumerator {
    public static Direction getByName (String name); final public static Direction EAST_LITERAL = new Direction (EAST, "EAST", "EAST");
    final public static Direction HORIZONTAL_LITERAL = new Direction (HORIZONTAL, "HORIZONTAL", "HORIZONTAL");
    final public static Direction NONE_LITERAL = new Direction (NONE, "NONE", "NONE");
    final public static Direction NORTH_EAST_LITERAL = new Direction (NORTH_EAST, "NORTH_EAST", "NORTH_EAST");
    final public static Direction NORTH_LITERAL = new Direction (NORTH, "NORTH", "NORTH");
    final public static Direction NORTH_WEST_LITERAL = new Direction (NORTH_WEST, "NORTH_WEST", "NORTH_WEST");
    final public static Direction SOUTH_EAST_LITERAL = new Direction (SOUTH_EAST, "SOUTH_EAST", "SOUTH_EAST");
    final public static Direction SOUTH_LITERAL = new Direction (SOUTH, "SOUTH", "SOUTH");
    final public static Direction SOUTH_WEST_LITERAL = new Direction (SOUTH_WEST, "SOUTH_WEST", "SOUTH_WEST");
    final public static Direction VERTICAL_LITERAL = new Direction (VERTICAL, "VERTICAL", "VERTICAL");
    final public static Direction WEST_LITERAL = new Direction (WEST, "WEST", "WEST");
final public class Direction extends AbstractEnumerator {
final public class Direction extends AbstractEnumerator {
    final public static Direction ALL_LITERAL = new Direction (ALL, "ALL", "ALL");
    final public static int ALL = 255;
final public class Direction extends AbstractEnumerator {
    final public static Direction ALL_LITERAL = new Direction (ALL, "ALL", "ALL");
    final public static Direction HORIZONTAL_LITERAL = new Direction (HORIZONTAL, "HORIZONTAL", "HORIZONTAL");
    final public static Direction VERTICAL_LITERAL = new Direction (VERTICAL, "VERTICAL", "VERTICAL");
    final public static int ALL = 255;
    final public static int EAST = 4;
    final public static int HORIZONTAL = 12;
    final public static int NORTH_EAST = 32;
    final public static int NORTH_WEST = 16;
    final public static int SOUTH = 2;
    final public static int SOUTH_EAST = 128;
    final public static int SOUTH_WEST = 64;
    final public static int VERTICAL = 3;
final public class Direction extends AbstractEnumerator {
    final public static Direction EAST_WEST_LITERAL = new Direction (EAST_WEST, "EAST_WEST", "EAST_WEST");
    final public static Direction NORTH_SOUTH_LITERAL = new Direction (NORTH_SOUTH, "NORTH_SOUTH", "NORTH_SOUTH");
    final public static Direction NSEW_LITERAL = new Direction (NSEW, "NSEW", "NSEW");
    final public static int EAST = 16;
    final public static int EAST_WEST = 24;
    final public static int NORTH_EAST = 17;
    final public static int NORTH_SOUTH = 5;
    final public static int NORTH_WEST = 9;
    final public static int NSEW = 29;
    final public static int SOUTH = 4;
    final public static int SOUTH_EAST = 20;
    final public static int SOUTH_WEST = 12;
[Direction-6.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'Direction-7.java' as a [program], at or near:
public class DomainAttributeTargetImpl extends EObjectImpl implements DomainAttributeTarget {
    protected EAttribute attribute = null;
public class DomainAttributeTargetImpl extends EObjectImpl implements DomainAttributeTarget {
    protected EAttribute attribute;
public class DomainAttributeTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DomainAttributeTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DomainAttributeTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DomainAttributeTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DomainElementTargetImpl extends EObjectImpl implements DomainElementTarget {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class DomainElementTargetImpl extends EObjectImpl implements DomainElementTarget {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class DomainElementTargetImpl extends EObjectImpl implements DomainElementTarget {
    protected EClass element = null;
public class DomainElementTargetImpl extends EObjectImpl implements DomainElementTarget {
    protected EClass element;
public class DomainElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class DomainElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class DomainElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DomainElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class DomainModelSelectionPage extends ExtensibleModelSelectionPage implements DomainModelSource {
    public DomainModelSelectionPage (String pageId, ResourceLocationProvider rloc) {
public class DomainModelSelectionPage extends ExtensibleModelSelectionPage implements DomainModelSource {
    public DomainModelSelectionPage (String pageId, ResourceLocationProvider rloc, ResourceSet resourceSet) {
public class DomainModelSelectionPage extends ExtensibleModelSelectionPage implements DomainModelSource {
public class DomainModelSelectionPage extends ExtensibleModelSelectionPage implements DomainModelSource {
public class DoubleListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DoubleListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DoubleListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DoubleListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DoubleValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DoubleValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DoubleValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DoubleValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DragEditPartsTrackerEx extends DragEditPartsTracker {
public class DragEditPartsTrackerEx extends DragEditPartsTracker {
public class DragEditPartsTrackerEx extends DragEditPartsTracker {
public class DragEditPartsTrackerEx extends DragEditPartsTracker {
public class DragEditPartsTrackerEx extends DragEditPartsTracker {
public class DragEditPartsTrackerEx extends DragEditPartsTracker {
    protected boolean handleButtonDown (int button);
public class Draw2dPlugin extends XToolsUIPlugin {
public class Draw2dPlugin extends XToolsUIPlugin {
    public static XToolsUIPlugin getInstance ();
public class Draw2dPlugin extends XToolsUIPlugin {
    public static XToolsUIPlugin getInstance ();
public class Draw2dPlugin extends AbstractUIPlugin {
public class Draw2dRenderPlugin extends XToolsUIPlugin {
public class Draw2dRenderPlugin extends XToolsUIPlugin {
public class Draw2dRenderPlugin extends XToolsUIPlugin {
public class Draw2dRenderPlugin extends AbstractUIPlugin {
public interface DrawableRenderedImage {
    abstract public void drawRenderedImage (RenderedImage srcImage, int x, int y, int width, int height);
public interface DrawableRenderedImage {
    abstract public RenderedImage drawRenderedImage (RenderedImage srcImage, int x, int y, int width, int height);
public interface DrawableRenderedImage {
    abstract public RenderedImage drawRenderedImage (RenderedImage srcImage, int x, int y, int width, int height);
public interface DrawableRenderedImage {
    public Dimension getMaximumRenderSize ();
    abstract public RenderedImage drawRenderedImage (RenderedImage srcImage, Rectangle area, RenderingListener listener);
    public boolean shouldAllowDelayRender ();
interface DrawerStyle extends Style {
interface DrawerStyle extends NotationObject, Style {
interface DrawerStyle extends NotationObject, Style {
interface DrawerStyle extends Style {
public class DrawerStyleImpl extends EObjectImpl implements DrawerStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class DrawerStyleImpl extends EObjectImpl implements DrawerStyle {
    public void eSet (int featureID, Object newValue);
public class DrawerStyleImpl extends EObjectImpl implements DrawerStyle {
public class DrawerStyleImpl extends FlatEObjectImpl implements DrawerStyle {
public class DrawerStyleImpl extends FlatEObjectImpl implements DrawerStyle {
public class DrawerStyleImpl extends NotationObjectImpl implements DrawerStyle {
public class DrawerStyleImpl extends NotationObjectImpl implements DrawerStyle {
public class DrawerStyleImpl extends NotationEObjectImpl implements DrawerStyle {
public class DrawerStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DrawerStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DrawerStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DrawerStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class DropShadowButtonBorder extends AbstractBorder {
    protected Insets insets = new Insets (26, 26, 80, 80);
public class DropShadowButtonBorder extends AbstractBorder {
public class DummyEditPart extends GraphicalEditPart {
    public TransactionalEditingDomain getEditingDomain ();
public class DummyEditPart extends GraphicalEditPart {
public class DuplicateActionDelegate extends AbstractModelActionDelegate implements IHandler, IObjectActionDelegate, IWorkbenchWindowActionDelegate {
public class DuplicateActionDelegate extends AbstractActionDelegate implements IHandler, IObjectActionDelegate, IWorkbenchWindowActionDelegate {
public class DuplicateActionDelegate extends AbstractModelActionDelegate implements IObjectActionDelegate, IWorkbenchWindowActionDelegate {
public class DuplicateActionDelegate extends AbstractModelActionDelegate implements IObjectActionDelegate, IWorkbenchWindowActionDelegate {
    public static TransactionalEditingDomain getEditingDomain (IStructuredSelection selection);
public class DuplicateActionDelegate extends AbstractModelActionDelegate implements IObjectActionDelegate, IWorkbenchWindowActionDelegate {
public class DuplicateActionDelegate extends AbstractModelActionDelegate implements IHandler, IObjectActionDelegate, IWorkbenchWindowActionDelegate {
    public Object execute (ExecutionEvent event) throws ExecutionException;
    public boolean isEnabled ();
    public void addHandlerListener (IHandlerListener handlerListener);
    public void removeHandlerListener (IHandlerListener handlerListener);
public class DuplicateElementsRequest extends AbstractEditCommandRequest {
public class DuplicateElementsRequest extends AbstractEditCommandRequest {
    public DuplicateElementsRequest (TransactionalEditingDomain editingDomain) {
    public DuplicateElementsRequest (TransactionalEditingDomain editingDomain, List elementsToDuplicate) {
    public void setElementsToBeDuplicated (List elements);
abstract public class DuplicateEObjectsCommand extends AbstractModelCommand {
    public DuplicateEObjectsCommand (String label, List eObjectsToBeDuplicated) {
    public DuplicateEObjectsCommand (String label, List eObjectsToBeDuplicated, Map allDuplicatedObjectsMap) {
    public boolean isExecutable ();
abstract public class DuplicateEObjectsCommand extends AbstractTransactionalCommand {
    public DuplicateEObjectsCommand (TransactionalEditingDomain editingDomain, String label, List eObjectsToBeDuplicated) {
    public DuplicateEObjectsCommand (TransactionalEditingDomain editingDomain, String label, List eObjectsToBeDuplicated, Map allDuplicatedObjectsMap) {
    public boolean canExecute ();
abstract public class DuplicateEObjectsCommand extends AbstractTransactionalCommand {
abstract public class DuplicateEObjectsCommand extends AbstractTransactionalCommand {
    public DuplicateEObjectsCommand (String label, List eObjectsToBeDuplicated, Map allDuplicatedObjectsMap) {
abstract public class DuplicateEObjectsCommand extends AbstractTransactionalCommand {
    public DuplicateEObjectsCommand (String label, List eObjectsToBeDuplicated, Map allDuplicatedObjectsMap) {
abstract public class DuplicateEObjectsCommand extends AbstractTransactionalCommand {
abstract public class DuplicateEObjectsCommand extends AbstractTransactionalCommand {
abstract public class DuplicateEObjectsCommand extends AbstractTransactionalCommand {
    public DuplicateEObjectsCommand (TransactionalEditingDomain editingDomain, String label, List eObjectsToBeDuplicated, Map allDuplicatedObjectsMap, EObject targetContainer) {
public class DuplicateViewsCommand extends DuplicateEObjectsCommand {
    public DuplicateViewsCommand (String label, DuplicateRequest request, List viewsToDuplicate) {
    public DuplicateViewsCommand (String label, DuplicateRequest request, List viewsToDuplicate, Map duplicatedElements) {
public class DuplicateViewsCommand extends DuplicateEObjectsCommand {
    public DuplicateViewsCommand (String label, DuplicateRequest request, List viewsToDuplicate, Map duplicatedElements, int offset) {
    public DuplicateViewsCommand (String label, DuplicateRequest request, List viewsToDuplicate, int offset) {
public class DuplicateViewsCommand extends DuplicateEObjectsCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public DuplicateViewsCommand (String label, DuplicateRequest request, List viewsToDuplicate, Map duplicatedElements, int offset) {
    public DuplicateViewsCommand (String label, DuplicateRequest request, List viewsToDuplicate, int offset) {
public class DuplicateViewsCommand extends DuplicateEObjectsCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public DuplicateViewsCommand (TransactionalEditingDomain editingDomain, String label, DuplicateRequest request, List viewsToDuplicate, Map duplicatedElements, int offset) {
    public DuplicateViewsCommand (TransactionalEditingDomain editingDomain, String label, DuplicateRequest request, List viewsToDuplicate, int offset) {
public class DuplicateViewsCommand extends DuplicateEObjectsCommand {
    public DuplicateViewsCommand (TransactionalEditingDomain editingDomain, String label, DuplicateRequest request, List viewsToDuplicate, Map duplicatedElements, int offset) {
    public DuplicateViewsCommand (TransactionalEditingDomain editingDomain, String label, DuplicateRequest request, List viewsToDuplicate, int offset) {
public class DuplicateViewsCommand extends DuplicateEObjectsCommand {
    public DuplicateViewsCommand (TransactionalEditingDomain editingDomain, String label, DuplicateRequest request, List viewsToDuplicate, Map duplicatedElements, Point offset) {
    public DuplicateViewsCommand (TransactionalEditingDomain editingDomain, String label, DuplicateRequest request, List viewsToDuplicate, Point offset) {
public class EDataTypeConversion {
    public static boolean isConvertable (EDataType leftDataType, EDataType rightDataType);
public class EDataTypeConversion {
    public EDataTypeConversion () {
    public boolean isConvertable (EDataType leftDataType, EDataType rightDataType);
public class EdgeImpl extends ViewImpl implements Edge {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class EdgeImpl extends ViewImpl implements Edge {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class EdgeImpl extends ViewImpl implements Edge {
    protected Anchor sourceAnchor = null;
    protected Anchor targetAnchor = null;
    protected Bendpoints bendpoints = null;
    protected View source = null;
    protected View target = null;
public class EdgeImpl extends ViewImpl implements Edge {
    protected Anchor sourceAnchor;
    protected Anchor targetAnchor;
    protected Bendpoints bendpoints;
    protected View source;
    protected View target;
public class EdgeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EdgeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EdgeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EdgeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EditCommandRequestWrapper extends Request {
public class EditCommandRequestWrapper extends Request {
    public Map getExtendedData ();
    public void setExtendedData (Map map);
abstract public class EditElementCommand extends AbstractCommand {
    public Collection getAffectedObjects ();
    public boolean isExecutable ();
    public boolean isRedoable ();
    public boolean isUndoable ();
abstract public class EditElementCommand extends AbstractTransactionalCommand {
    public boolean canExecute ();
public class EditHelperAdviceDescriptor implements IEditHelperAdviceDescriptor {
    public EditHelperAdviceDescriptor (String editHelperAdviceName, SpecializationTypeDescriptor specialization) throws CoreException {
public class EditHelperAdviceDescriptor implements IEditHelperAdviceDescriptor {
    public EditHelperAdviceDescriptor (IEditHelperAdvice editHelperAdvice, SpecializationTypeDescriptor specialization) {
    public EditHelperAdviceDescriptor (String editHelperAdviceName, SpecializationTypeDescriptor specialization) {
public class EditHelperAdviceDescriptor implements IEditHelperAdviceDescriptor {
public class EditHelperAdviceDescriptor implements IEditHelperAdviceDescriptor {
public class EditorIDEPlugin extends XToolsUIPlugin {
public class EditorIDEPlugin extends XToolsUIPlugin {
public class EditorIDEPlugin extends XToolsUIPlugin {
    public void doStartup ();
public class EditorIDEPlugin extends AbstractUIPlugin {
public class EditorInputProxy implements IEditorInput, MEditingDomainElement {
public class EditorInputProxy implements IEditorInput, MEditingDomainElement {
    protected IEditorInput fProxied = null;
    protected MEditingDomain editingDomain = null;
public class EditorInputProxy implements IEditorInput, MEditingDomainElement {
    protected MEditingDomain editingDomain = null;
    public EditorInputProxy (IEditorInput input, MEditingDomain domain) {
public class EditorInputProxy implements IEditorInput, MEditingDomainElement {
    protected TransactionalEditingDomain editingDomain = null;
    public EditorInputProxy (IEditorInput input, TransactionalEditingDomain domain) {
final public class EditorMessages extends NLS {
    public static String compatibility_message1_open;
    public static String compatibility_message1_save;
    public static String compatibility_message2_open;
    public static String compatibility_message2_save;
    public static String compatibility_message3_open;
    public static String compatibility_title_open;
    public static String compatibility_title_save;
final public class EditorMessages extends NLS {
final public class EditorPlugin extends EMFPlugin {
    public static class Implementation extends EclipsePlugin {
final public class EditorPlugin extends EMFPlugin {
    public static class Implementation extends EclipseUIPlugin {
final public class EditorPlugin extends EMFPlugin {
final public class EditorPlugin extends EMFPlugin {
    @Override
final public class EditorStatusCodes {
final public class EditorStatusCodes {
    final public static int RESOURCE_FAILURE = 5;
final public class EditorStatusCodes {
final public class EditorStatusCodes {
    final public static int WARNING = 7;
public class EditorUtil {
    final public static DiagramEditPart openDiagram (IFile file, IWorkbenchWindow dWindow, boolean saveDiagram, IProgressMonitor progressMonitor, String diagramId);
    final public static IFile createAndOpenDiagram (DiagramFileCreator diagramFileCreator, IPath containerPath, String fileName, String diagramId, InputStream initialContents, String kind, IWorkbenchWindow dWindow, IProgressMonitor progressMonitor, boolean openEditor, boolean saveDiagram, PreferencesHint preferencesHint);
public class EditorUtil {
abstract public class EditorWizardPage extends WizardNewFileCreationPage {
abstract public class EditorWizardPage extends WizardNewFileCreationPage {
abstract public class EditPartOperation implements IOperation {
abstract public class EditPartOperation implements IOperation {
    protected EditPartOperation (View view) {
    final public View getView ();
abstract public class EditPartOperation implements IOperation {
abstract public class EditPartOperation implements IEditPartOperation {
public class EditPartPropertySectionFilter implements ITypeMapper {
    public Class remapType (Object object, Class effectiveType);
public class EditPartPropertySectionFilter implements IFilter {
    public boolean select (Object object);
final public class EditPartService extends Service implements EditPartFactory, IEditPartProvider {
    protected static class ProviderDescriptor extends Service.ProviderDescriptor {
final public class EditPartService extends Service implements EditPartFactory, IEditPartProvider {
    protected static class ProviderDescriptor extends Service.ProviderDescriptor {
final public class EditPartService extends Service implements EditPartFactory, IEditPartProvider {
    protected EditPartService () {
final public class EditPartService extends Service implements EditPartFactory, IEditPartProvider {
final public class EditPartService extends Service implements EditPartFactory, IEditPartProvider {
final public class EditPartService extends Service implements EditPartFactory, IEditPartProvider {
public class EditPartUtil {
public class EditPartUtil {
    public static boolean isWriteTransactionInProgress (IGraphicalEditPart editPart, boolean otherThread);
    public static void handleRunnableForAccessingSWT (IGraphicalEditPart editPart, Runnable runThreadSafe);
public class EditPartUtil {
    public static void handleRunnableForAccessingSWT (IGraphicalEditPart editPart, Runnable runThreadSafe);
public class EditPartUtil {
    public static void synchronizeRunnableToMainThread (IGraphicalEditPart editPart, Runnable runThreadSafe);
public class EditPartUtil {
public class EditPartUtil {
public class EditPartUtil {
public class EditPartUtil {
public interface EditPolicyRoles {
public interface EditPolicyRoles {
    final public static String CONNECTION_HANDLES_ROLE = "ConnectionHandlesPolicy";
    final public static String CONNECTION_LABELS_ROLE = "ConnectionLabelsPolicy";
    final public static String POPUPBAR_ROLE = "PopupBarEditPolicy";
    final public static String REFRESH_CONNECTIONS_ROLE = "RefreshConnectionsPolicy";
public interface EditPolicyRoles {
    final public static String ACTIONBAR_ROLE = "ActionBarEditPolicy";
    final public static String CONNECTOR_HANDLES_ROLE = "ConnectorHandlesPolicy";
    final public static String CONNECTOR_LABELS = "ConnectorLabels";
    final public static String REFRESH_CONNECTORS_ROLE = "RefreshConnectorsPolicy";
public interface EditPolicyRoles {
public class EditPolicyService extends Service implements IEditPolicyProvider {
    protected static class ProviderDescriptor extends Service.ProviderDescriptor {
public class EditPolicyService extends Service implements IEditPolicyProvider {
    protected static class ProviderDescriptor extends Service.ProviderDescriptor {
class ElementInitializers {
public class ElementInitializers {
    public static void init_Polyline_3014 (Polyline instance);
public class ElementInitializers {
public class ElementInitializers {
abstract public class ElementSelectionComposite {
abstract public class ElementSelectionComposite implements IElementSelectionListener {
    public void cancel ();
    public void matchingObjectEvent (IMatchingObjectEvent matchingObjectEvent);
abstract public class ElementSelectionComposite implements IElementSelectionListener {
abstract public class ElementSelectionComposite implements IElementSelectionListener {
    public ElementSelectionComposite (String title, AbstractElementSelectionInput input, ElementSelectionService elementSelectionService) {
abstract public class ElementSelectionComposite implements IElementSelectionListener {
abstract public class ElementSelectionComposite implements IElementSelectionListener {
public class ElementSelectionScope {
public class ElementSelectionScope {
    final public static ElementSelectionScope PRIMITIVES = new ElementSelectionScope (1 << 5);
public class ElementSelectionService extends Service implements IElementSelectionProvider {
public class ElementSelectionService extends Service implements IElementSelectionListener, IElementSelectionProvider {
    protected String getJobName ();
    protected void cancelAllJobs ();
    protected void fireEndOfMatchesEvent ();
    protected void fireMatchingObjectEvent (final IMatchingObjectEvent matchingObjectEvent);
    public void matchingObjectEvent (IMatchingObjectEvent matchingObjectEvent);
    public void run (IProgressMonitor monitor);
public class ElementSelectionService extends Service implements IElementSelectionListener, IElementSelectionProvider {
public class ElementSelectionService extends Service implements IElementSelectionListener, IElementSelectionProvider {
    private static class ProviderDescriptor extends Service.ProviderDescriptor {
        public ProviderDescriptor (IConfigurationElement element) {
        public boolean provides (IOperation operation);
public class ElementSelectionService extends Service implements IElementSelectionListener, IElementSelectionProvider {
public class ElementSelectionService extends Service implements IElementSelectionListener, IElementSelectionProvider {
    protected String getJobName (JobData data); protected class JobData {
        public HashMap jobs = new HashMap ();
        public IElementSelectionInput elementSelectionInput;
        public IElementSelectionListener elementSelectionListener;
    final public static IJobManager jobManager = Platform.getJobManager ();
public class ElementSelectionService extends Service implements IElementSelectionListener, IElementSelectionProvider {
    protected class JobData {
        public HashMap jobs = new HashMap ();
    final public static IJobManager jobManager = Platform.getJobManager ();
public class ElementSelectionService extends Service implements IElementSelectionListener, IElementSelectionProvider {
    protected class JobData {
        public HashMap < IElementSelectionProvider, ElementSelectionServiceJob > jobs = new HashMap < IElementSelectionProvider, ElementSelectionServiceJob > ();
    final public static IJobManager jobManager = Job.getJobManager ();
abstract public class ElementSelectorExtension implements ModelSelectionPageExtension {
abstract public class ElementSelectorExtension implements ModelSelectionPageExtension {
abstract public class ElementSelectorExtension implements ModelSelectionPageExtension {
abstract public class ElementSelectorExtension extends Observable implements ModelSelectionPageExtension {
abstract public class ElementSelectorExtension extends Observable implements ModelSelectionPageExtension {
    protected List modelElements = new ArrayList ();
abstract public class ElementSelectorExtension extends Observable implements ModelSelectionPageExtension {
    protected List < EObject > modelElements = new ArrayList < EObject > ();
abstract public class ElementSelectorExtension extends Observable implements ModelSelectionPageExtension {
abstract public class ElementSelectorExtension extends Observable implements ModelSelectionPageExtension {
abstract public class ElementType implements IElementType {
abstract public class ElementType implements IElementType {
    public boolean canEdit (IEditCommandRequest req);
abstract public class ElementTypeImpl extends EObjectImpl implements ElementType {
abstract public class ElementTypeImpl extends EObjectImpl implements ElementType {
    protected boolean definedExternally = DEFINED_EXTERNALLY_EDEFAULT;
    final protected static boolean DEFINED_EXTERNALLY_EDEFAULT = false;
abstract public class ElementTypeImpl extends EObjectImpl implements ElementType {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
abstract public class ElementTypeImpl extends EObjectImpl implements ElementType {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class ElementTypeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ElementTypeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ElementTypeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ElementTypeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ElementTypeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ElementTypeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ElementTypeRegistry {
public class ElementTypeRegistry {
    public void shutdown ();
public class ElementTypeRegistry {
    public void shutdown ();
public class ElementTypeRegistry {
public class ElementTypeRegistry {
public class ElementTypeRegistry {
public class ElementTypeRegistry {
public class ElementTypeRegistry {
public class ElementTypeRegistry {
public class ElementTypeRegistry {
    public IMetamodelType [] getMetamodelTypes (IClientContext clientContext);
    public ISpecializationType [] getSpecializationTypes (IClientContext clientContext);
public class ElementTypeRegistry {
public class ElementTypeRegistry {
    public IElementType getElementType (EClass eClass);
public class Ellipse2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class Ellipse2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3006;
public class Ellipse2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3015;
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    public class EllipseFigure extends org.eclipse.draw2d.Ellipse {
public class Ellipse2EditPart extends AbstractFigureEditPart {
    public class EllipseFigure extends Ellipse {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
public class Ellipse2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 2006;
public class Ellipse2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3006;
public class Ellipse2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    private static class CreateEllipse_3003Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateEllipse_3003Command (CreateElementRequest req) {
    private static class CreatePolyline_3005Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreatePolyline_3005Command (CreateElementRequest req) {
    private static class CreateRectangle_3002Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRectangle_3002Command (CreateElementRequest req) {
    private static class CreateRoundedRectangle_3004Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRoundedRectangle_3004Command (CreateElementRequest req) {
public class Ellipse2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Ellipse2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Ellipse2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class Ellipse2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class Ellipse2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class Ellipse2ViewFactory extends AbstractShapeViewFactory {
public class Ellipse2ViewFactory extends AbstractShapeViewFactory {
public class Ellipse2ViewFactory extends AbstractShapeViewFactory {
public class Ellipse2ViewFactory extends AbstractShapeViewFactory {
public class Ellipse2ViewFactory extends AbstractShapeViewFactory {
public class Ellipse2ViewFactory extends AbstractShapeViewFactory {
public class Ellipse3EditPart extends AbstractFigureEditPart {
public class Ellipse3EditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
public class Ellipse3EditPart extends AbstractFigureEditPart {
public class Ellipse3EditPart extends AbstractFigureEditPart {
public class Ellipse3EditPart extends AbstractFigureEditPart {
public class Ellipse3EditPart extends AbstractFigureEditPart {
public class Ellipse3EditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    public class EllipseFigure extends org.eclipse.draw2d.Ellipse {
public class Ellipse3EditPart extends AbstractFigureEditPart {
    public class EllipseFigure extends Ellipse {
public class Ellipse3ViewFactory extends AbstractShapeViewFactory {
public class Ellipse3ViewFactory extends AbstractShapeViewFactory {
public class Ellipse3ViewFactory extends AbstractShapeViewFactory {
public class Ellipse3ViewFactory extends AbstractShapeViewFactory {
public class EllipseCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class EllipseCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3003;
public class EllipseEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3012;
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    public class EllipseFigure extends org.eclipse.draw2d.Ellipse {
public class EllipseEditPart extends AbstractFigureEditPart {
    public class EllipseFigure extends Ellipse {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
public class EllipseEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 2003;
public class EllipseEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3003;
public class EllipseImpl extends ShapeImpl implements Ellipse {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class EllipseImpl extends ShapeImpl implements Ellipse {
public class EllipseImpl extends ShapeImpl implements Ellipse {
public class EllipseImpl extends ShapeImpl implements Ellipse {
    @Override
public class EllipseItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class EllipseItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class EllipseItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class EllipseItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class EllipseItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class EllipseItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EllipseItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    private static class CreateEllipse_3003Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateEllipse_3003Command (CreateElementRequest req) {
    private static class CreatePolyline_3005Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreatePolyline_3005Command (CreateElementRequest req) {
    private static class CreateRectangle_3002Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRectangle_3002Command (CreateElementRequest req) {
    private static class CreateRoundedRectangle_3004Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRoundedRectangle_3004Command (CreateElementRequest req) {
public class EllipseItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class EllipseItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class EllipseItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class EllipseItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class EllipseItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class EllipseViewFactory extends AbstractShapeViewFactory {
public class EllipseViewFactory extends AbstractShapeViewFactory {
public class EllipseViewFactory extends AbstractShapeViewFactory {
public class EllipseViewFactory extends AbstractShapeViewFactory {
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
    protected class TransactionalOperationItemPropertyDescriptor extends ItemPropertyDescriptorDecorator {
        public TransactionalOperationItemPropertyDescriptor (EditingDomain editingDomain, Object object, IItemPropertyDescriptor itemPropertyDescriptor) {
        public void setPropertyValue (Object thisObject, Object newValue);
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
    final public static String UNDO_PROPERTY = EMFPropertiesResourceManager.getInstance ().getString ("EMFCompositeSourcePropertyDescriptor.undoProperty.commandName");
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
public class EMFCompositeSourcePropertyDescriptor extends PropertyDescriptor implements ICompositeSourcePropertyDescriptor {
    protected class TransactionalOperationItemPropertyDescriptor extends ItemPropertyDescriptorDecorator {
        public TransactionalOperationItemPropertyDescriptor (EditingDomain editingDomain, Object object, IItemPropertyDescriptor itemPropertyDescriptor) {
        public void setPropertyValue (Object thisObject, Object newValue);
public class EMFCoreConstants {
    final public static String EPHEMERAL_INVALID_EXTENSION = "@@@@@EphemeralInvalidExtension@@@@@";
    final public static String EPHEMERAL_INVALID_PATH = "@@@@@EphemeralInvalidPath@@@@@." + EPHEMERAL_INVALID_EXTENSION;
    final public static String INVALID_EXTENSION = "@@@@@InvalidExtension@@@@@";
    final public static String INVALID_PATH = "@@@@@InvalidPath@@@@@." + INVALID_EXTENSION;
public class EMFCoreConstants {
public class EMFCoreConstants {
    final public static String SHORTCUT_ANNOTATION = "eObjectShortcut";
public class EMFCoreConstants {
public class EMFCoreMessages extends NLS {
    public static String MultiplicityValue_all_text;
    public static String MultiplicityValue_none_text;
    public static String MultiplicityValue_oneOrMore_text;
    public static String MultiplicityValue_one_text;
    public static String MultiplicityValue_zeroOrOne_text;
public class EMFCoreMessages extends NLS {
public class EMFCoreUtil {
public class EMFCoreUtil {
public class EMFNotationModelFactory {
    public static Diagram load (final IFile file) throws EmfNotationException;
public class EMFNotationModelFactory {
public class EMFPropertiesPlugin extends XToolsUIPlugin {
public class EMFPropertiesPlugin extends XToolsUIPlugin {
public class EMFPropertiesPlugin extends XToolsUIPlugin {
public class EMFPropertiesPlugin extends AbstractUIPlugin {
final public class EMFTypeCoreMessages extends NLS {
final public class EMFTypeCoreMessages extends NLS {
    public static String Request_Label_DestroyDependents;
    public static String defaultEditHelper_name;
    public static String destroyCommandFailed;
final public class EMFTypeCoreMessages extends NLS {
final public class EMFTypeCoreMessages extends NLS {
    public static String binding_both_ref_and_pattern_ERROR_;
    public static String binding_noContextId_ERROR_;
    public static String binding_noSuchContext_ERROR_;
    public static String binding_no_ref_or_pattern_ERROR_;
    public static String clientContext_not_init_WARN_;
    public static String client_matcherFailure_ERROR_;
    public static String context_matcher_wrong_class_ERROR_;
    public static String context_no_id_ERROR_;
    public static String context_no_matcher_ERROR_;
    public static String pattern_invalid_syntax_ERROR_;
    public static String xml_parsing_elementTypeBindings_ERROR_;
public class EMFTypePlugin extends XToolsPlugin {
    protected void doStartup ();
public class EMFTypePlugin extends Plugin {
    public void start (BundleContext context) throws Exception;
public class EMFTypePlugin extends Plugin {
public class EMFTypePlugin extends Plugin {
    public void stop (BundleContext context) throws Exception;
public class EMFTypePlugin extends Plugin {
    public void stop (BundleContext context) throws Exception;
public class EMFTypePlugin extends Plugin {
public class EMFTypePlugin extends Plugin {
    public void start (BundleContext context) throws Exception;
public class EMFTypePlugin extends Plugin {
public class EMFTypePlugin extends Plugin {
public class EMFTypePlugin extends Plugin {
    public static boolean isDynamicAware ();
    public static void startDynamicAwareMode ();
public class EMFTypePluginStatusCodes {
    public static CoreException getAdviceBindingInitException (String adviceId, String argKey);
    public static CoreException getFactoryInitException (String factoryName, String argKey);
    public static CoreException getInitException (String elementId, String argKey, Exception e);
    public static CoreException getMetamodelInitException (String nsURI, String argKey);
    public static CoreException getTypeInitException (String typeId, String argKey, Exception e); final public static String ADVICE_BINDING_INVALID_INHERITANCE = "adviceBinding.reason.invalid-inheritance_WARN_";
    final public static String ADVICE_BINDING_NOT_INITED_KEY = "adviceBinding.not-init_WARN_";
    final public static String ADVICE_BINDING_NO_EDIT_HELPER_ADVICE_KEY = "adviceBinding.reason.no-edit-helper-advice-id_WARN_";
    final public static String ADVICE_BINDING_NO_ID_KEY = "adviceBinding.reason.no-id_WARN_";
    final public static String ADVICE_BINDING_NO_TYPE_ID_KEY = "adviceBinding.reason.no-type-id_WARN_";
    final public static String CONTAINMENT_FEATURE_NOT_REFERENCE_FEATURE_KEY = "eContainmentFeature.not-reference-feature_ERROR_";
    final public static String CONTAINMENT_FEATURE_NO_METAMODEL_KEY = "element.reason.no-econtainmentfeature-metamodel_WARN_";
    final public static String CONTAINMENT_FEATURE_NO_QNAME_KEY = "element.reason.no-econtainmentfeature-qname_WARN_";
    final public static String CONTAINMENT_FEATURE_NO_SUCH_FEATURE_KEY = "eContainmentFeature.no-such-feature_ERROR_";
    final public static String EDIT_HELPER_ADVICE_CLASS_NOT_FOUND_KEY = "editHelperAdvice.class-not-found_ERROR_";
    final public static String EDIT_HELPER_CLASS_NOT_FOUND_KEY = "editHelper.class-not-found_ERROR_";
    final public static String ELEMENT_NOT_INITED_KEY = "element.not-init_WARN_";
    final public static String ELEMENT_TYPE_FACTORY_CLASS_NOT_FOUND_KEY = "elementTypeFactory.class-not-found_ERROR_";
    final public static String ELEMENT_TYPE_FACTORY_NO_FACTORY_KEY = "elementTypeFactory.reason.no-factory_WARN_";
    final public static String ELEMENT_TYPE_FACTORY_NO_KIND_KEY = "elementTypeFactory.reason.no-kind_WARN_";
    final public static String ENABLEMENT_INVALID_EXPRESSION_KEY = "element.reason.invalid-enablement-expression_WARN_";
    final public static String ERROR_PARSING_XML_KEY = "xml.parsing_ERROR_";
    final public static String EXPRESSION_EVALUATION_FAILURE_KEY = "expression.evaluation-failure_ERROR_";
    final public static String FACTORY_NOT_INITED_KEY = "elementTypeFactory.not-init_WARN_";
    final public static String MATCHER_CLASS_NOT_FOUND_KEY = "matcher.class-not-found_ERROR_";
    final public static String MATCHER_NO_CLASS_KEY = "element.reason.matcher-no-class_WARN_";
    final public static String METAMODEL_NOT_INITED_KEY = "metamodel.not-init_WARN_";
    final public static String METAMODEL_NO_NSURI_KEY = "metamodel.reason.no-nsURI_WARN_";
    final public static String METAMODEL_NSURI_NOT_FOUND_KEY = "metamodel.reason.nsURI-not-found_WARN_";
    final public static String SPECIALIZATION_TYPE_SPECIALIZES_INVALID_ID_KEY = "specializationType.specializes-invalid-id_ERROR_";
    final public static String SPECIALIZATION_TYPE_SPECIALIZES_MULTIPLE_METAMODEL_TYPES_KEY = "specializationType.specializes-multiple-metamodel-types_ERROR_";
    final public static String TYPE_DUPLICATE_KEY = "type.reason.duplicate-id_WARN_";
    final public static String TYPE_ECLASS_NOT_FOUND_KEY = "type.reason.eclass-not-found_WARN_";
    final public static String TYPE_NOT_INITED_KEY = "type.not-init_WARN_";
    final public static String TYPE_NO_ECLASS_KEY = "type.reason.no-eclass_WARN_";
    final public static String TYPE_NO_ID_KEY = "type.reason.no-id_WARN_";
    final public static String TYPE_NO_PARAM_NAME_KEY = "type.reason.no-param-name_WARN_";
    final public static String TYPE_NO_PARAM_VALUE_KEY = "type.reason.no-param-value_WARN_";
    final public static String TYPE_NO_SPECIALIZED_ID_KEY = "type.reason.no-specialized-id_WARN_";
    final public static String TYPE_NO_SPECIALIZED_KEY = "type.reason.no-specialized_WARN_";
public class EMFTypePluginStatusCodes {
    public static CoreException getAdviceBindingInitException (String adviceId, String reason);
    public static CoreException getFactoryInitException (String factoryName, String reason);
    public static CoreException getInitException (String elementId, String reason, Exception e);
    public static CoreException getMetamodelInitException (String nsURI, String reason);
public class EMFTypePluginStatusCodes {
public class EMFTypePluginStatusCodes {
    final public static int COMMAND_FAILURE = 4;
public class EMFTypePluginStatusCodes {
public class EMFTypePluginStatusCodes {
    final public static int BINDING_BOTH_REF_AND_PATTERN = 64;
    final public static int BINDING_NO_CONTEXT = 60;
    final public static int BINDING_NO_REF_OR_PATTERN = 63;
    final public static int BINDING_NO_SUCH_CONTEXT = 61;
    final public static int CLIENT_CONTEXT_NOT_INITED = 50;
    final public static int CLIENT_MATCHER_FAILURE = 70;
    final public static int CLIENT_NO_MATCHER = 71;
    final public static int CONTEXT_NOT_INITED = 16;
    final public static int PATTERN_INVALID_SYNTAX = 62;
public class EMFTypeUIPlugin extends XToolsUIPlugin {
    public static String getResourceString (String key);
public class EMFTypeUIPlugin extends XToolsUIPlugin {
public class EMFTypeUIPlugin extends XToolsUIPlugin {
public class EMFTypeUIPlugin extends AbstractUIPlugin {
final public class EMFUIMessages extends NLS {
final public class EMFUIMessages extends NLS {
    public static String PathmapsPreferencePage_addAllChevron;
    public static String PathmapsPreferencePage_addChevron;
    public static String PathmapsPreferencePage_availablePathVariables;
    public static String PathmapsPreferencePage_incompatiblePathVariableErrorMessage;
    public static String PathmapsPreferencePage_mainDescription;
    public static String PathmapsPreferencePage_pathVariablesUsedInModeling;
    public static String PathmapsPreferencePage_removeAllChevron;
    public static String PathmapsPreferencePage_removeChevron;
final public class EMFUIMessages extends NLS {
final public class EMFUIMessages extends NLS {
    public static String PathmapsPreferencePage_registeredPathVariableErrorMessage;
final public class EMFUIMessages extends NLS {
    public static String PathmapsPreferencePage_addAllChevron;
    public static String PathmapsPreferencePage_addChevron;
    public static String PathmapsPreferencePage_pathVariablesUsedInModeling;
    public static String PathmapsPreferencePage_removeAllChevron;
    public static String PathmapsPreferencePage_removeChevron;
final public class EMFUIMessages extends NLS {
    public static String PathVariableDialog_alreadyDefined_ERROR_;
    public static String PathVariableDialog_browseButton;
    public static String PathVariableDialog_browseDialogMessage;
    public static String PathVariableDialog_browseDialogTitle;
    public static String PathVariableDialog_editDialogTitle;
    public static String PathVariableDialog_editMessage;
    public static String PathVariableDialog_editTitle;
    public static String PathVariableDialog_invalidSegment_ERROR_;
    public static String PathVariableDialog_locationLabel;
    public static String PathVariableDialog_nameLabel;
    public static String PathVariableDialog_newDialogTitle;
    public static String PathVariableDialog_newMessage;
    public static String PathVariableDialog_newTitle;
    public static String PathVariableDialog_noSuchFolder_ERROR_;
    public static String PathVariableDialog_notFolder_ERROR_;
    public static String PathVariableDialog_sameLocation_WARN_;
    public static String PathmapsPreferencePage_editVariable;
    public static String PathmapsPreferencePage_newVariable;
    public static String PathmapsPreferencePage_promptTitle;
    public static String PathmapsPreferencePage_removeVariable;
    public static String PathmapsPreferencePage_updateFailed;
    public static String PathmapsPreferencePage_variablePattern;
public class EnhancedPrintActionHelper implements IPrintActionHelper {
public class EnhancedPrintActionHelper implements IPrintActionHelper {
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
    public void eSet (EStructuralFeature eFeature, Object newValue);
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
    public void eSet (int featureID, Object newValue);
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
    protected int entryID = ENTRY_ID_EDEFAULT;
    final protected static int ENTRY_ID_EDEFAULT = 0;
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
    protected String descriptionKey = DESCRIPTION_KEY_EDEFAULT;
    protected String titleKey = TITLE_KEY_EDEFAULT;
    protected int entryID = ENTRY_ID_EDEFAULT;
    protected int order = ORDER_EDEFAULT;
    final protected static String DESCRIPTION_KEY_EDEFAULT = null;
    final protected static String TITLE_KEY_EDEFAULT = null;
    final protected static int ENTRY_ID_EDEFAULT = 0;
    final protected static int ORDER_EDEFAULT = 0;
    public int getEntryID ();
    public void setDescriptionKey (String newDescriptionKey);
    public void setTitleKey (String newTitleKey);
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
    protected String description = DESCRIPTION_EDEFAULT;
    protected String title = TITLE_EDEFAULT;
    final protected static String DESCRIPTION_EDEFAULT = null;
    final protected static String TITLE_EDEFAULT = null;
    public void setTitle (String newTitle);
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
abstract public class EntryBaseImpl extends EObjectImpl implements EntryBase {
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDescriptionKeyPropertyDescriptor (Object object);
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class EnvironmentProvider {
    private static class EvalEnvImpl extends HashMap < String, Object > implements IEvaluationEnvironment {
public class EnvironmentProvider {
    private static class EvalEnvImpl extends HashMap < String, Object > implements IEvaluationEnvironment {
public class EObjectListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EObjectListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EObjectListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EObjectListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EObjectValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EObjectValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EObjectValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class EObjectValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ExcludeDiagramContainerNodeStrategy implements Strategy {
    public void filter (Collection < EObject > soFar, Hierarchy hierarchy);
public class ExcludeDiagramContainerNodeStrategy implements Strategy < EClass > {
    public void filter (Collection < EClass > soFar, Hierarchy hierarchy);
public class ExecuteTemplatesAction implements IObjectActionDelegate, IRunnableWithProgress {
public class ExecuteTemplatesAction implements IObjectActionDelegate, IRunnableWithProgress {
    protected IStatus myRunStatus;
public class ExecuteTemplatesAction implements IObjectActionDelegate, IRunnableWithProgress {
    protected IStatus myRunStatus;
public class ExecuteTemplatesAction implements IObjectActionDelegate {
public class ExecuteTemplatesOperation implements IRunnableWithProgress {
public class ExecuteTemplatesOperation implements IRunnableWithProgress {
public class ExecutionContextImpl implements ExecutionContext {
    @SuppressWarnings("unchecked")
public class ExecutionContextImpl implements ExecutionContext {
    @SuppressWarnings("unchecked")
public class ExecutionContextImpl implements ExecutionContext {
    @SuppressWarnings("unchecked")
    public ExecutionContextImpl (ResourceManager resourceManager, Map < String, Variable > globalVars) {
    public ExecutionContextImpl (ResourceManager resourceManager, ResourceMarker resource, Map < String, Variable > variables, Map < String, Variable > globalVars) {
    public Map < String, Variable > getGlobalVariables ();
public class ExecutionContextImpl implements ExecutionContext {
    @SuppressWarnings("unchecked")
    public ExecutionContext cloneWithVariable (Collection < Variable > v);
    @SuppressWarnings("unchecked")
    protected ExecutionContextImpl (ExecutionContextImpl original) {
    public Collection < Variable > getGlobalVariables ();
    public ExecutionContextImpl (ResourceManager resourceManager, Collection < Variable > globalVars) {
    public ExecutionContextImpl (ResourceManager resourceManager, ResourceMarker resource, Collection < Variable > variables, Collection < Variable > globalVars) {
public class ExecutionContextImpl implements ExecutionContext {
public class ExecutionContextImpl implements ExecutionContext {
    public void setContextClassLoader (ClassLoader classLoader);
public class ExecutionContextImpl implements ExecutionContext {
public class ExecutionContextImpl implements ExecutionContext {
    public void setEvaluationListener (EvaluationListener listener);
public class ExecutionContextImpl implements ExecutionContext {
public class ExecutionContextImpl implements ExecutionContext {
[ExpressionKWLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class ExpressionKWLexerprs implements ExpressionKWLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 109, EOFT_SYMBOL = 26, EOLT_SYMBOL = 55, ERROR_ACTION = 110, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 129, MAX_LA = 0, NT_OFFSET = 54, NUM_NONTERMINALS = 2, NUM_RULES = 19, NUM_STATES = 87, NUM_SYMBOLS = 56, SEGMENT_SIZE = 8192, START_STATE = 20;
    public interface IsKeyword {
    public interface TermCheck {
public class ExpressionKWLexerprs implements ExpressionKWLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 109, EOFT_SYMBOL = 26, EOLT_SYMBOL = 54, ERROR_ACTION = 110, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 129, MAX_LA = 0, NT_OFFSET = 53, NUM_NONTERMINALS = 2, NUM_RULES = 19, NUM_STATES = 87, NUM_SYMBOLS = 55, SEGMENT_SIZE = 8192, START_STATE = 20;
    public interface IsKeyword {
    public interface TermCheck {
public interface ExpressionKWLexersym {
    final public static int Char_A = 22, Char_B = 34, Char_C = 23, Char_D = 35, Char_DollarSign = 27, Char_E = 24, Char_EOF = 26, Char_F = 36, Char_G = 37, Char_H = 38, Char_I = 39, Char_J = 40, Char_K = 41, Char_L = 25, Char_M = 42, Char_N = 43, Char_O = 44, Char_P = 45, Char_Q = 46, Char_R = 47, Char_S = 16, Char_T = 48, Char_U = 49, Char_V = 50, Char_W = 51, Char_X = 52, Char_Y = 53, Char_Z = 54, Char_a = 8, Char_b = 28, Char_c = 5, Char_d = 17, Char_e = 1, Char_f = 11, Char_g = 29, Char_h = 18, Char_i = 6, Char_j = 19, Char_k = 30, Char_l = 2, Char_m = 20, Char_n = 12, Char_o = 7, Char_p = 13, Char_q = 31, Char_r = 9, Char_s = 4, Char_t = 3, Char_u = 10, Char_v = 32, Char_w = 14, Char_x = 15, Char_y = 21, Char_z = 33;
public interface ExpressionKWLexersym {
    final public static int Char_A = 22, Char_B = 33, Char_C = 23, Char_D = 34, Char_E = 24, Char_EOF = 26, Char_F = 35, Char_G = 36, Char_H = 37, Char_I = 38, Char_J = 39, Char_K = 40, Char_L = 25, Char_M = 41, Char_N = 42, Char_O = 43, Char_P = 44, Char_Q = 45, Char_R = 46, Char_S = 16, Char_T = 47, Char_U = 48, Char_V = 49, Char_W = 50, Char_X = 51, Char_Y = 52, Char_Z = 53, Char_a = 8, Char_b = 27, Char_c = 5, Char_d = 17, Char_e = 1, Char_f = 11, Char_g = 28, Char_h = 18, Char_i = 6, Char_j = 19, Char_k = 29, Char_l = 2, Char_m = 20, Char_n = 12, Char_o = 7, Char_p = 13, Char_q = 30, Char_r = 9, Char_s = 4, Char_t = 3, Char_u = 10, Char_v = 31, Char_w = 14, Char_x = 15, Char_y = 21, Char_z = 32;
public class ExpressionLexer extends LpgLexStream implements ExpressionLexersym, ExpressionParsersym, RuleAction {
public class ExpressionLexer extends LpgLexStream implements ExpressionLexersym, ExpressionParsersym, RuleAction {
    @Override
    public void reportError (int errorCode, String locationInfo, String tokenText);
    @Override
    public void reportError (int errorCode, String locationInfo, int leftToken, int rightToken, String tokenText);
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class ExpressionLexerprs implements ExpressionLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 352, EOFT_SYMBOL = 99, EOLT_SYMBOL = 104, ERROR_ACTION = 353, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 575, MAX_LA = 1, NT_OFFSET = 103, NUM_NONTERMINALS = 24, NUM_RULES = 222, NUM_STATES = 35, NUM_SYMBOLS = 127, SEGMENT_SIZE = 8192, START_STATE = 223;
    public interface BaseAction {
        final public static char baseAction [] = {17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 14, 14, 18, 12, 12, 12, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 19, 19, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 15, 15, 15, 15, 20, 20, 20, 20, 21, 21, 16, 16, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11, 11, 11, 11, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 494, 297, 296, 296, 296, 308, 485, 199, 144, 144, 144, 144, 318, 296, 251, 144, 905, 229, 6, 239, 904, 114, 230, 300, 309, 309, 309, 309, 880, 38, 144, 907, 309, 309, 309, 297, 286, 891, 38, 289, 300
    public interface BaseCheck {
    public interface TermAction {
        final public static char termAction [] = {0, 353, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 512, 302, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 353, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 388, 516, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
          511, 511, 511, 511, 36, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 497, 29, 161, 353, 497, 166, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 383, 364, 309, 309, 309, 309, 309, 309, 309, 309, 287, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 353, 353, 309, 309, 309, 309, 309, 309, 309, 167,
          518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 353, 353, 518, 518, 518, 518, 518, 518, 518, 518, 287, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 353, 40, 518, 518, 518, 518, 518, 518, 518, 353, 297, 297, 297, 297, 297, 297, 297, 297, 297, 297, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 243, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 296, 308, 246, 263, 270, 271, 236, 384, 268, 277, 362, 269, 353, 377, 378, 375, 376, 386, 381, 254, 360, 275, 367, 368, 308, 308, 352, 1, 37, 353, 353, 353, 353, 308, 308, 1, 395, 395, 395, 395, 395, 395, 395, 395,
          395, 395, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 353, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 353, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 4, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 5, 395, 395, 395, 395, 395, 395, 395, 395, 395, 395, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 353, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 394, 353, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333
          , 333, 333, 333, 333, 333, 353, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 353, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 353, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 4, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 39, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 353, 10, 32, 34, 164, 17, 16, 13, 8, 27, 113, 554, 557, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 556, 558, 555, 331, 353, 353, 371, 353, 353, 373, 372, 374, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 311, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 559, 560, 467, 353, 167, 167, 353, 353, 496, 258, 561, 365, 353, 356, 379, 355, 353, 353, 353, 353, 353, 353, 353, 353, 353, 467, 467, 353, 353, 353, 353, 353, 353, 353, 467, 467, 353, 353, 353, 353, 353, 353, 353
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
          , 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 0, 0, 0, 100, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 69, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 0, 0, 90, 91, 92, 93, 94, 95, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0, 0, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 0, 0, 90, 91, 92, 93, 94, 95, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
          , 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 0, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 99, 0, 0, 0, 0, 0, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 99, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
public class ExpressionLexerprs implements ExpressionLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 354, EOFT_SYMBOL = 100, EOLT_SYMBOL = 104, ERROR_ACTION = 355, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 579, MAX_LA = 1, NT_OFFSET = 103, NUM_NONTERMINALS = 24, NUM_RULES = 224, NUM_STATES = 35, NUM_SYMBOLS = 127, SEGMENT_SIZE = 8192, START_STATE = 225;
    public interface BaseAction {
        final public static char baseAction [] = {17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 14, 14, 18, 12, 12, 12, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 19, 19, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 15, 15, 15, 15, 20, 20, 20, 20, 21, 21, 16, 16, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11, 11, 11, 11, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 499, 299, 298, 298, 298, 310, 489, 201, 145, 145, 145, 145, 320, 299, 253, 145, 911, 231, 6, 241, 910, 114, 232, 303, 311, 311, 311, 311, 886, 38, 145, 913, 311, 311, 311, 300, 288, 897, 38,
    public interface BaseCheck {
    public interface TermAction {
        final public static char termAction [] = {0, 355, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 515, 304, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 355, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 390, 519, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
          514, 514, 514, 514, 514, 514, 36, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 29, 162, 355, 500, 167, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 385, 366, 311, 311, 311, 311, 311, 311, 311, 311, 289, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 355, 355, 311, 311, 311, 311, 311,
          311, 311, 311, 168, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 355, 355, 521, 521, 521, 521, 521, 521, 521, 521, 289, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 355, 40, 521, 521, 521, 521, 521, 521, 521, 521, 355, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 245, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 310, 248, 265, 272, 273, 238, 386, 270, 279, 364, 271, 355, 379, 380, 377, 378, 388, 383, 256, 362, 277, 369, 370, 310, 310, 354, 1, 37, 355, 355, 355, 355, 355, 310, 310, 1, 397, 397,
          397, 397, 397, 397, 397, 397, 397, 397, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 355, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 355, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 4, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 5, 397, 397, 397, 397, 397, 397, 397, 397, 397, 397, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 355, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 396, 355, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335
          , 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 355, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 355, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 345, 355, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 4, 393, 393, 393, 393, 393, 393, 393, 393, 393, 393, 39, 393, 393, 393, 393, 393, 393, 393, 393, 393, 393, 355, 10, 32, 34, 165, 17, 16, 13, 8, 27, 113, 558, 561, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 560, 562, 559, 333, 355, 355, 373, 355, 355, 375, 374, 376, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 313, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 563, 564, 469, 355, 168, 168, 355, 355, 499, 260, 565, 367, 355, 358, 381, 357, 355, 355, 355, 355, 355, 355, 355, 355, 355, 469, 469, 355, 355, 355, 355, 355, 355, 355, 355, 469, 469
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50
          , 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 0, 0, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 69, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 0, 0, 90, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0, 0, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 0, 0, 90, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
          , 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 0, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 100, 0, 0, 0, 0, 0, 0, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 100, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
[ExpressionLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
public interface ExpressionLexersym {
    final public static int Char_0 = 1, Char_1 = 2, Char_2 = 3, Char_3 = 4, Char_4 = 5, Char_5 = 6, Char_6 = 7, Char_7 = 8, Char_8 = 9, Char_9 = 10, Char_A = 17, Char_Acute = 101, Char_AfterASCII = 103, Char_Ampersand = 69, Char_AtSign = 91, Char_B = 18, Char_BackQuote = 92, Char_BackSlash = 76, Char_C = 19, Char_CR = 98, Char_Caret = 95, Char_Colon = 70, Char_Comma = 82, Char_CtlCharNotWS = 100, Char_D = 20, Char_DollarSign = 102, Char_Dot = 71, Char_DoubleQuote = 66, Char_E = 21, Char_EOF = 99, Char_Equal = 27, Char_Exclamation = 75, Char_F = 22, Char_FF = 89, Char_G = 45, Char_GreaterThan = 72, Char_H = 46, Char_HT = 88, Char_I = 47, Char_J = 48, Char_K = 49, Char_L = 50, Char_LF = 97, Char_LeftBrace = 77, Char_LeftBracket = 79, Char_LeftParen = 86, Char_LessThan = 83, Char_M = 51, Char_Minus = 85, Char_N = 52, Char_O = 53, Char_P = 54, Char_Percent = 90, Char_Plus = 84, Char_Q = 55, Char_QuestionMark = 81, Char_R = 56, Char_RightBrace = 78, Char_RightBracket = 80, Char_RightParen = 87, Char_S = 57,
      Char_SemiColon = 96, Char_Sharp = 94, Char_SingleQuote = 67, Char_Slash = 73, Char_Space = 65, Char_Star = 74, Char_T = 58, Char_Tilde = 93, Char_U = 59, Char_V = 60, Char_VerticalBar = 68, Char_W = 61, Char_X = 62, Char_Y = 63, Char_Z = 64, Char__ = 44, Char_a = 13, Char_b = 11, Char_c = 14, Char_d = 15, Char_e = 16, Char_f = 12, Char_g = 28, Char_h = 29, Char_i = 30, Char_j = 31, Char_k = 32, Char_l = 33, Char_m = 34, Char_n = 23, Char_o = 35, Char_p = 36, Char_q = 37, Char_r = 24, Char_s = 38, Char_t = 25, Char_u = 26, Char_v = 39, Char_w = 40, Char_x = 41, Char_y = 42, Char_z = 43;
public interface ExpressionLexersym {
    final public static int Char_0 = 1, Char_1 = 2, Char_2 = 3, Char_3 = 4, Char_4 = 5, Char_5 = 6, Char_6 = 7, Char_7 = 8, Char_8 = 9, Char_9 = 10, Char_A = 17, Char_Acute = 102, Char_AfterASCII = 103, Char_Ampersand = 69, Char_AtSign = 91, Char_B = 18, Char_BackQuote = 92, Char_BackSlash = 76, Char_C = 19, Char_CR = 99, Char_Caret = 96, Char_Colon = 70, Char_Comma = 82, Char_CtlCharNotWS = 101, Char_D = 20, Char_DollarSign = 95, Char_Dot = 71, Char_DoubleQuote = 66, Char_E = 21, Char_EOF = 100, Char_Equal = 27, Char_Exclamation = 75, Char_F = 22, Char_FF = 89, Char_G = 45, Char_GreaterThan = 72, Char_H = 46, Char_HT = 88, Char_I = 47, Char_J = 48, Char_K = 49, Char_L = 50, Char_LF = 98, Char_LeftBrace = 77, Char_LeftBracket = 79, Char_LeftParen = 86, Char_LessThan = 83, Char_M = 51, Char_Minus = 85, Char_N = 52, Char_O = 53, Char_P = 54, Char_Percent = 90, Char_Plus = 84, Char_Q = 55, Char_QuestionMark = 81, Char_R = 56, Char_RightBrace = 78, Char_RightBracket = 80, Char_RightParen = 87, Char_S = 57,
      Char_SemiColon = 97, Char_Sharp = 94, Char_SingleQuote = 67, Char_Slash = 73, Char_Space = 65, Char_Star = 74, Char_T = 58, Char_Tilde = 93, Char_U = 59, Char_V = 60, Char_VerticalBar = 68, Char_W = 61, Char_X = 62, Char_Y = 63, Char_Z = 64, Char__ = 44, Char_a = 13, Char_b = 11, Char_c = 14, Char_d = 15, Char_e = 16, Char_f = 12, Char_g = 28, Char_h = 29, Char_i = 30, Char_j = 31, Char_k = 32, Char_l = 33, Char_m = 34, Char_n = 23, Char_o = 35, Char_p = 36, Char_q = 37, Char_r = 24, Char_s = 38, Char_t = 25, Char_u = 26, Char_v = 39, Char_w = 40, Char_x = 41, Char_y = 42, Char_z = 43;
public class ExpressionParser extends PrsStream implements RuleAction {
public class ExpressionParser extends PrsStream implements RuleAction {
    @Override
    public void reportError (int errorCode, String locationInfo, String tokenText);
    @Override
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class ExpressionParserprs implements ExpressionParsersym, lpg.lpgjavaruntime.ParseTable {
    public interface Asb {
    public interface Asr {
    public interface BaseAction {
        final public static char baseAction [] = {28, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 31, 31, 23, 23, 21, 21, 22, 22, 20, 20, 33, 33, 33, 33, 33, 33, 19, 19, 34, 34, 17, 17, 35, 35, 18, 18, 18, 32, 32, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 37, 37, 38, 38, 30, 30, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 1, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 793, 1, 792, 30, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 793, 1, 805, 56, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 793, 1, 78, 56, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 775, 1, 56, 86, 80, 790, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5,
          787, 3, 789, 1, 56, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 789, 1, 82, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 797, 1, 56, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 809, 1, 56, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 3, 812, 1, 133, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 811, 133, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 5, 787, 2, 108, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 778, 7, 787, 108, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 795, 108,
          86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 11, 9, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 15, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 815, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 816, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 779, 785, 777, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 780, 17, 785, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 769, 19, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 29, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 766, 768, 21, 158, 86, 80, 54, 79, 781, 50, 55, 782, 36, 767, 44, 45, 46, 47, 48, 49, 33, 768, 182, 86, 80, 54, 79, 781, 50, 55, 782
    public interface BaseCheck {
        final public static byte baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, - 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 26, 0, 0, 0, 0, 0, 0, 0
    public interface InSymb {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeLa {
    public interface ScopeLhs {
    public interface ScopeRhs {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 819, 784, 212, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 711, 862, 881, 882, 760, 878, 879, 880, 819, 694, 786, 788, 819, 819, 876, 819, 784, 212, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 711, 862, 881, 882, 760, 878, 879, 880, 872, 694, 786, 788, 819, 784, 212, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 711, 862, 881, 882, 760, 878, 879, 880, 818, 694, 786, 788, 819, 798, 212, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 711, 862, 881, 882, 760, 878, 879, 880, 87, 694, 786, 788, 819, 784, 242, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 711, 862, 881, 882, 760, 878, 879, 880, 770, 694, 786, 819, 784, 212, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 711, 862, 881, 882, 760, 878, 879, 880, 819, 694, 786, 819, 784, 242, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 711, 862, 881, 882, 760, 878, 879, 880, 819, 694, 819, 784, 242, 901, 902, 903, 783, 886, 887, 888, 889, 890, 891, 89, 819,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 23, 24, 25, 0, 0, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 51, 23, 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 23, 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 17, 18, 19, 20, 21, 0, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 0, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 2, 0, 40, 41, 42, 43, 44, 45, 14, 14, 38, 0, 23, 14, 0, 0, 2, 0, 1, 0, 26, 26
    public interface TerminalIndex {
public class ExpressionParserprs implements ExpressionParsersym, lpg.lpgjavaruntime.ParseTable {
    public interface Asb {
    public interface Asr {
    public interface BaseAction {
        final public static char baseAction [] = {28, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 31, 31, 23, 23, 21, 21, 22, 22, 20, 20, 34, 34, 34, 34, 34, 34, 19, 19, 32, 32, 17, 17, 35, 35, 18, 18, 18, 33, 33, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 37, 37, 38, 38, 30, 30, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 1, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 792, 1, 791, 30, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 792, 1, 808, 56, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 792, 1, 78, 56, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 775, 1, 56, 86, 80, 789, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786,
          3, 788, 1, 56, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 788, 1, 82, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 798, 1, 56, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 809, 1, 56, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 3, 812, 1, 133, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 811, 133, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 5, 786, 2, 108, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 777, 7, 786, 108, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 795, 108, 86, 80, 54, 79
          , 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 11, 9, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 15, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 815, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 816, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 778, 784, 776, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 779, 17, 784, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 762, 19, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 28, 767, 774, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 33, 767, 158, 86, 80, 54, 79, 780, 50, 55, 781, 36, 766, 44, 45, 46, 47, 48, 49, 29, 767, 181, 86, 80, 54, 79, 780, 50, 55, 781, 38, 766, 44, 45, 46, 47,
    public interface BaseCheck {
        final public static byte baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, - 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 40, 0, 0, 0, 0, 0, 0, 0
    public interface InSymb {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeLa {
    public interface ScopeLhs {
    public interface ScopeRhs {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 819, 783, 212, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 710, 862, 881, 882, 759, 878, 879, 880, 693, 819, 785, 787, 819, 819, 876, 819, 783, 212, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 710, 862, 881, 882, 759, 878, 879, 880, 693, 872, 785, 787, 819, 783, 212, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 710, 862, 881, 882, 759, 878, 879, 880, 693, 818, 785, 787, 819, 800, 212, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 710, 862, 881, 882, 759, 878, 879, 880, 693, 87, 785, 787, 819, 783, 242, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 710, 862, 881, 882, 759, 878, 879, 880, 693, 768, 785, 819, 783, 212, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 710, 862, 881, 882, 759, 878, 879, 880, 693, 14, 785, 819, 783, 242, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 710, 862, 881, 882, 759, 878, 879, 880, 693, 819, 783, 242, 901, 902, 903, 782, 886, 887, 888, 889, 890, 891, 89, 495, 862,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 24, 25, 0, 0, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 51, 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 39, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 17, 18, 19, 20, 21, 0, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 22, 0, 1, 0, 3, 4, 5, 29, 0, 0, 0, 0, 0, 2, 2, 0, 0, 14, 2, 41, 42, 43, 44, 45, 46, 14, 14, 0, 0, 26, 2, 0, 22, 34, 0, 47, 48,
    public interface TerminalIndex {
[ExpressionParserprs-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 24 garbage recoveries were required (larger size recommended for improved performance)
public interface ExpressionParsersym {
    final public static int TK_AND = 37, TK_ARROW = 36, TK_ASSIGN = 39, TK_BAR = 50, TK_COLON = 27, TK_COMMA = 49, TK_Collection = 3, TK_DCOLON = 26, TK_DIV = 48, TK_DOT = 29, TK_EOF_TOKEN = 51, TK_EQ = 40, TK_ERROR_TOKEN = 52, TK_GE = 42, TK_GT = 44, TK_IDENT = 1, TK_INT_CONST = 16, TK_LCURLY = 13, TK_LE = 43, TK_LPAREN = 2, TK_LSQUARE = 34, TK_LT = 45, TK_List = 4, TK_MINUS = 23, TK_MULTI = 47, TK_NE = 41, TK_NOT = 14, TK_OR = 38, TK_PLUS = 46, TK_QUESTION_MARK = 33, TK_RCURLY = 28, TK_REAL_CONST = 17, TK_RPAREN = 22, TK_RSQUARE = 35, TK_STRING = 15, TK_Set = 5, TK_case = 32, TK_collect = 7, TK_default = 31, TK_exists = 10, TK_false = 19, TK_forAll = 12, TK_implies = 30, TK_let = 25, TK_new = 18, TK_notExists = 11, TK_null = 21, TK_reject = 9, TK_select = 8, TK_switch = 24, TK_true = 20, TK_typeSelect = 6;
public interface ExpressionParsersym {
    final public static int TK_AND = 38, TK_ARROW = 37, TK_ASSIGN = 40, TK_BAR = 50, TK_COLON = 27, TK_COMMA = 49, TK_Collection = 3, TK_DCOLON = 26, TK_DIV = 48, TK_DOT = 30, TK_EOF_TOKEN = 51, TK_EQ = 41, TK_ERROR_TOKEN = 52, TK_GE = 43, TK_GT = 45, TK_IDENT = 1, TK_INT_CONST = 16, TK_LCURLY = 13, TK_LE = 44, TK_LPAREN = 2, TK_LSQUARE = 35, TK_LT = 46, TK_List = 4, TK_MINUS = 22, TK_MULTI = 47, TK_NE = 42, TK_NOT = 14, TK_OR = 39, TK_PLUS = 29, TK_QUESTION_MARK = 34, TK_RCURLY = 28, TK_REAL_CONST = 17, TK_RPAREN = 23, TK_RSQUARE = 36, TK_STRING = 15, TK_Set = 5, TK_case = 33, TK_collect = 7, TK_default = 32, TK_exists = 10, TK_false = 19, TK_forAll = 12, TK_implies = 31, TK_let = 25, TK_new = 18, TK_notExists = 11, TK_null = 21, TK_reject = 9, TK_select = 8, TK_switch = 24, TK_true = 20, TK_typeSelect = 6;
public class ExpressionProviderRegistry {
public class ExpressionProviderRegistry {
public class ExtendedPropertyDescriptor extends PropertyDescriptor implements IExtendedPropertyDescriptor {
    final public static String BLANK = PSFResourceManager.getI18NString ("ExtendedPropertyDescriptor.blank");
public class ExtendedPropertyDescriptor extends PropertyDescriptor implements IExtendedPropertyDescriptor {
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    public ExtensibleModelSelectionPage (String pageId, ResourceLocationProvider rloc, ResourceSet resourceSet, String modelFileExtension) {
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    public ExtensibleModelSelectionPage (String pageId) {
    public void createControl (Composite parent);
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    public ExtensibleModelSelectionPage (String pageId, ResourceLocationProvider rloc) {
    public void createAdditionalControls (Composite parent);
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    @Override
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    public ExtensibleModelSelectionPage (String pageId, ResourceLocationProvider rloc) {
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    public ExtensibleModelSelectionPage (String pageId, ResourceLocationProvider rloc, ResourceSet resourceSet) {
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    public void createAdditionalControls (Composite parent);
public class ExtensibleModelSelectionPage extends ModelSelectionPage {
    @Override
public class ExternModelImport {
    final private static EValidator VALIDATOR = new AbstractValidator () {
        public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    ;
public class ExternModelImport {
    @SuppressWarnings("unchecked")
    public static ExternModelImport getImporter (Map context, EObject validatedEObject); final private static EValidator VALIDATOR = new AbstractValidator () {
        @SuppressWarnings("synthetic-access")
        public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    ;
public class ExternModelImport {
    final private static EValidator VALIDATOR = new AbstractValidator () {
        @SuppressWarnings("synthetic-access")
        public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    ;
public class ExternModelImport {
    final private static EValidator VALIDATOR = new AbstractValidator () {
        public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    ;
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
    protected EList < EAttribute > features = null;
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
    protected EList < EAttribute > features;
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
    protected LabelEditMethod editMethod = EDIT_METHOD_EDEFAULT;
    protected LabelViewMethod viewMethod = VIEW_METHOD_EDEFAULT;
    final protected static LabelEditMethod EDIT_METHOD_EDEFAULT = LabelEditMethod.MESSAGE_FORMAT;
    final protected static LabelViewMethod VIEW_METHOD_EDEFAULT = LabelViewMethod.MESSAGE_FORMAT;
    public LabelEditMethod getEditMethod ();
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
    protected LabelEditMethod editMethod = EDIT_METHOD_EDEFAULT;
    protected LabelViewMethod viewMethod = VIEW_METHOD_EDEFAULT;
    final protected static LabelEditMethod EDIT_METHOD_EDEFAULT = LabelEditMethod.MESSAGE_FORMAT;
    final protected static LabelViewMethod VIEW_METHOD_EDEFAULT = LabelViewMethod.MESSAGE_FORMAT;
    public LabelEditMethod getEditMethod ();
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
    protected LabelTextAccessMethod editMethod = EDIT_METHOD_EDEFAULT;
    protected LabelTextAccessMethod viewMethod = VIEW_METHOD_EDEFAULT;
    final protected static LabelTextAccessMethod EDIT_METHOD_EDEFAULT = LabelTextAccessMethod.MESSAGE_FORMAT;
    final protected static LabelTextAccessMethod VIEW_METHOD_EDEFAULT = LabelTextAccessMethod.MESSAGE_FORMAT;
    public LabelTextAccessMethod getEditMethod ();
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
    protected String editorPattern = EDITOR_PATTERN_EDEFAULT;
    final protected static String EDITOR_PATTERN_EDEFAULT = null;
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
public class FeatureLabelMappingImpl extends LabelMappingImpl implements FeatureLabelMapping {
    protected EList < EAttribute > editableFeatures;
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelMappingItemProvider extends LabelMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface FeatureLabelModelFacet extends FeatureModelFacet, LabelModelFacet {
interface FeatureLabelModelFacet extends LabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected EClass eStaticClass (); protected EList metaFeatures = null;
    public EList getMetaFeatures ();
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenFeature > metaFeatures = null;
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected EList < GenFeature > metaFeatures = null;
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected EList < GenFeature > metaFeatures;
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected LabelEditMethod editMethod = EDIT_METHOD_EDEFAULT;
    protected LabelViewMethod viewMethod = VIEW_METHOD_EDEFAULT;
    final protected static LabelEditMethod EDIT_METHOD_EDEFAULT = LabelEditMethod.MESSAGE_FORMAT;
    final protected static LabelViewMethod VIEW_METHOD_EDEFAULT = LabelViewMethod.MESSAGE_FORMAT;
    public LabelEditMethod getEditMethod ();
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected LabelEditMethod editMethod = EDIT_METHOD_EDEFAULT;
    protected LabelViewMethod viewMethod = VIEW_METHOD_EDEFAULT;
    final protected static LabelEditMethod EDIT_METHOD_EDEFAULT = LabelEditMethod.MESSAGE_FORMAT;
    final protected static LabelViewMethod VIEW_METHOD_EDEFAULT = LabelViewMethod.MESSAGE_FORMAT;
    public LabelEditMethod getEditMethod ();
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected LabelTextAccessMethod editMethod = EDIT_METHOD_EDEFAULT;
    protected LabelTextAccessMethod viewMethod = VIEW_METHOD_EDEFAULT;
    final protected static LabelTextAccessMethod EDIT_METHOD_EDEFAULT = LabelTextAccessMethod.MESSAGE_FORMAT;
    final protected static LabelTextAccessMethod VIEW_METHOD_EDEFAULT = LabelTextAccessMethod.MESSAGE_FORMAT;
    public LabelTextAccessMethod getEditMethod ();
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected String editorPattern = EDITOR_PATTERN_EDEFAULT;
    final protected static String EDITOR_PATTERN_EDEFAULT = null;
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected EList < GenFeature > editableMetaFeatures;
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected GenParserImplementation parser;
    public GenParserImplementation basicGetParser ();
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected GenParserImplementation parser;
    public GenParserImplementation basicGetParser ();
public class FeatureLabelModelFacetImpl extends LabelModelFacetImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends FeatureModelFacetImpl implements FeatureLabelModelFacet {
    protected String defaultText = DEFAULT_TEXT_EDEFAULT;
    final protected static String DEFAULT_TEXT_EDEFAULT = null;
public class FeatureLabelModelFacetImpl extends FeatureModelFacetImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends FeatureModelFacetImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends FeatureModelFacetImpl implements FeatureLabelModelFacet {
    protected boolean readOnly = READ_ONLY_EDEFAULT;
    final protected static boolean READ_ONLY_EDEFAULT = false;
    public boolean isReadOnly ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class FeatureLabelModelFacetImpl extends FeatureModelFacetImpl implements FeatureLabelModelFacet {
    protected boolean readOnly = READ_ONLY_EDEFAULT;
    final protected static boolean READ_ONLY_EDEFAULT = false;
    public boolean isReadOnly ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class FeatureLabelModelFacetImpl extends FeatureModelFacetImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends FeatureModelFacetImpl implements FeatureLabelModelFacet {
public class FeatureLabelModelFacetImpl extends EObjectImpl implements FeatureLabelModelFacet {
    protected EList metaFeatures = null;
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureLabelModelFacetItemProvider extends LabelModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLinkModelFacetImpl extends FeatureModelFacetImpl implements FeatureLinkModelFacet {
public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
    protected GenFeature metaFeature = null;
    public GenFeature basicGetMetaFeature ();
    public GenFeature getMetaFeature ();
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setMetaFeature (GenFeature newMetaFeature);
public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
    public EList getSourceTypes ();
public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
    public EList getAssistantSourceTypes ();
    public EList getAssistantTargetTypes ();
    public GenClass getSourceType ();
public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
    public EList getAssistantSourceTypes ();
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public EList < GenClass > getAssistantSourceTypes ();
public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
    protected GenFeature metaFeature = null;
public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
    protected GenFeature metaFeature;
public class FeatureLinkModelFacetItemProvider extends FeatureModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLinkModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureLinkModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class FeatureLinkModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class FeatureLinkModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureLinkModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    public MappingEntry getMappingEntry ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public void setMappingEntry (MappingEntry newMappingEntry);
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    public void setMappingEntry (MappingEntry newMappingEntry);
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    protected EClass elementClass = null;
    public EClass basicGetElementClass ();
    public EClass getElementClass ();
    public void setElementClass (EClass newElementClass);
    public void setElementClassGen (EClass newElementClass);
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    protected EList initializers = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < FeatureInitializer > initializers = null;
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    protected EClass elementClass = null;
    protected EList < FeatureInitializer > initializers = null;
public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    protected EClass elementClass;
    protected EList < FeatureInitializer > initializers;
public class FeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public void notifyChanged (Notification notification);
public class FeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class FeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
interface FeatureValueSpec extends ValueExpression {
interface FeatureValueSpec extends FeatureInitializer, ValueExpression {
interface FeatureValueSpec extends FeatureInitializer, ValueExpression {
interface FeatureValueSpec extends FeatureInitializer {
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    public void setFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    protected EStructuralFeature feature;
    public EStructuralFeature basicGetFeature ();
    public EStructuralFeature getFeature ();
    public FeatureSeqInitializer getFeatureSeqInitializer ();
    public NotificationChain basicSetFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs);
    public void setFeature (EStructuralFeature newFeature);
    public void setFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer);
public class FeatureValueSpecImpl extends FeatureInitializerImpl implements FeatureValueSpec {
    protected ValueExpression value;
    public NotificationChain basicSetValue (ValueExpression newValue, NotificationChain msgs);
    public ValueExpression getValue ();
    public void setValue (ValueExpression newValue);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    public FeatureSeqInitializer getFeatureSeqInitializer ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void setFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    public void setFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    protected EStructuralFeature feature = null;
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    protected EStructuralFeature feature;
public class FeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public void notifyChanged (Notification notification);
public class FeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class FeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FeatureValueSpecItemProvider extends FeatureInitializerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
    public String getTextGen (Object object);
interface Figure extends FigureHandle, FigureMarker, Identity {
interface Figure extends EObject, FigureHandle, FigureMarker, Identity {
interface Figure extends EObject, FigureHandle, FigureMarker, Identity {
interface Figure extends FigureHandle, FigureMarker, Identity {
interface Figure extends FigureHandle, FigureMarker, Identity {
interface Figure extends Layoutable {
interface Figure extends FigureMarker, Identity {
interface Figure extends FigureHandle, FigureMarker, Identity {
public class FigureAccessorImpl extends EObjectImpl implements FigureAccessor {
    @SuppressWarnings("unchecked")
    @Override
    protected CustomFigure typedFigure = null;
    protected EList < DiagramElement > referencingElements = null;
    public CustomFigure basicGetTypedFigure ();
    public CustomFigure getTypedFigure ();
    public void setTypedFigure (CustomFigure newTypedFigure);
public class FigureAccessorImpl extends EObjectImpl implements FigureAccessor {
    protected RealFigure typedFigure;
    public NotificationChain basicSetTypedFigure (RealFigure newTypedFigure, NotificationChain msgs);
    public void setTypedFigure (RealFigure newTypedFigure);
public class FigureAccessorImpl extends EObjectImpl implements FigureAccessor {
    @SuppressWarnings("unchecked")
    @Override
public class FigureAccessorImpl extends EObjectImpl implements FigureAccessor {
    @Override
public class FigureAccessorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureAccessorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureAccessorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FigureAccessorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
public class FigureDescriptorEditPart extends ShapeNodeEditPart {
    public class FigureDescriptorFigure extends RoundedRectangle {
        public WrapLabel getFigureFigureDescriptorFigure_NameLabel ();
public class FigureDescriptorEditPart extends ShapeNodeEditPart {
    public class FigureDescriptorFigure extends RoundedRectangle {
        public WrappingLabel getFigureFigureDescriptorFigure_NameLabel ();
public class FigureDescriptorEditPart extends ShapeNodeEditPart {
    public class FigureDescriptorFigure extends RoundedRectangle {
public class FigureDescriptorEditPart extends ShapeNodeEditPart {
    public class FigureDescriptorFigure extends RoundedRectangle {
public class FigureDescriptorNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class FigureDescriptorNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends org.eclipse.draw2d.RectangleFigure {
        public org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel getFigureFigureGalleryFigure_NameLabel ();
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends RectangleFigure {
        public WrapLabel getFigureFigureGalleryFigure_NameLabel ();
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2004;
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2008;
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends RectangleFigure {
        public WrapLabel getFigureFigureGalleryFigure_NameLabel ();
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends RectangleFigure {
        public WrappingLabel getFigureFigureGalleryFigure_NameLabel ();
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends RectangleFigure {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends RectangleFigure {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public static String VISUAL_ID = "1004";
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1004;
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends org.eclipse.draw2d.RectangleFigure {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    public class FigureGalleryFigure extends org.eclipse.draw2d.RectangleFigure {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1004;
public class FigureGalleryEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2004;
public class FigureGalleryFiguresCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class FigureGalleryFiguresCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class FigureGalleryFiguresEditPart extends ShapeCompartmentEditPart {
    final public static int VISUAL_ID = 7004;
public class FigureGalleryFiguresEditPart extends ShapeCompartmentEditPart {
    final public static int VISUAL_ID = 7008;
public class FigureGalleryFiguresViewFactory extends ListCompartmentViewFactory {
public class FigureGalleryFiguresViewFactory extends BasicNodeViewFactory {
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    protected EClass eStaticClass (); protected EList figures = null;
    public EList getFigures ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < Figure > figures = null;
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    protected EList < Figure > figures = null;
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    protected EList < FigureDescriptor > descriptors;
    protected EList < RealFigure > figures;
    public EList < FigureDescriptor > getDescriptors ();
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    protected EList < Border > borders;
    protected EList < Layout > layouts;
public class FigureGalleryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureGalleryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureGalleryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class FigureGalleryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class FigureGalleryItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class FigureGalleryItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class FigureGalleryItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class FigureGalleryItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class FigureGalleryNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5004;
public class FigureGalleryNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5009;
public class FigureGalleryNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class FigureGalleryNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class FigureGalleryNameViewFactory extends BasicNodeViewFactory {
    protected void decorateView (View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted);
public class FigureGalleryNameViewFactory extends BasicNodeViewFactory {
public class FigureGalleryViewFactory extends AbstractShapeViewFactory {
public class FigureGalleryViewFactory extends AbstractShapeViewFactory {
public class FigureGenerator {
public class FigureGenerator {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, GMFGraphSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy) {
public class FigureGenerator {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, GMFGraphSwitch figureNameSwitch) {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, GMFGraphSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy) {
public class FigureGenerator {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, FigureQualifiedNameSwitch figureNameSwitch) {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy) {
public class FigureGenerator {
    public FigureGenerator () {
public class FigureGenerator {
public class FigureGenerator {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, FigureQualifiedNameSwitch figureNameSwitch) {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy) {
    public String getPackageStatement ();
    public String go (Figure fig) throws JETException;
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch) {
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy) {
    public String generate (IProgressMonitor monitor, Object [] arguments) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
    public String go (Figure fig, ImportAssistant importManager);
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch) {
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy) {
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy, boolean placeStaticFieldsOutsideClassBody) {
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch, boolean asInnerClass) {
public class FigureGenerator implements TextEmitter {
public class FigureGenerator implements TextEmitter {
    private static class ClassesOrStringsKeyMap extends HierarchyKeyMap {
        public KeyChain map (Object key);
public class FigureGenerator implements TextEmitter {
    private static class ClassesOrStringsKeyMap extends HierarchyKeyMap {
        public KeyChain map (Object key);
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeStrategy, boolean placeStaticFieldsOutsideClassBody) {
    public FigureGenerator (FigureQualifiedNameSwitch figureNameSwitch, boolean asInnerClass) {
    public String go (Figure fig, ImportAssistant importManager);
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (FigureQualifiedNameSwitch fqnSwitch, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass) {
    public FigureGenerator (FigureQualifiedNameSwitch fqnSwitch, boolean asInnerClass) {
    public String go (Figure figure, ImportAssistant importAssistant);
public class FigureGenerator implements TextEmitter {
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (FigureQualifiedNameSwitch fqnSwitch, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass, URL [] dynamicTemplates) {
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (FigureQualifiedNameSwitch fqnSwitch, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass) {
    public FigureGenerator (FigureQualifiedNameSwitch fqnSwitch, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass, URL [] dynamicTemplates) {
    public FigureGenerator (FigureQualifiedNameSwitch fqnSwitch, boolean asInnerClass) {
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (String runtimeToken, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass) {
    public FigureGenerator (String runtimeToken, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass, URL [] dynamicTemplates) {
    public FigureGenerator (String runtimeToken, boolean asInnerClass) {
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (String runtimeToken, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass) {
    public FigureGenerator (String runtimeToken, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass, URL [] dynamicTemplates) {
    public FigureGenerator (String runtimeToken, boolean asInnerClass) {
    public String go (Figure figure, ImportAssistant importAssistant);
public class FigureGenerator implements TextEmitter {
    public FigureGenerator (String runtimeToken, String packageStmt, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass) {
    public FigureGenerator (String runtimeToken, String packageStmt, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass, URL [] dynamicTemplates) {
    public FigureGenerator (String runtimeToken, String packageStmt, boolean asInnerClass) {
    public String getPackageName ();
    public String go (FigureDescriptor figure);
public class FigureGenerator {
public class FigureGenerator {
    public String go (Figure fig, ImportAssistant importManager);
public class FigureGenerator {
    public FigureGenerator (String aPackageName) {
    public String go (Figure fig, ImportAssistant importManager);
public class FigureGenerator {
    public FigureGenerator (String aPackageName, ImportAssistant importManager, GMFGraphSwitch figureNameSwitch) {
public class FigureGeneratorOptionsDialog extends TitleAreaDialog {
    public boolean isUseMapMode ();
public class FigureGeneratorOptionsDialog extends TitleAreaDialog {
interface FigureQualifiedNameSwitch {
interface FigureQualifiedNameSwitch {
public class FigureQualifiedNameSwitch extends GMFGraphSwitch {
public class FigureQualifiedNameSwitch extends GMFGraphSwitch {
    public Object caseGridLayout (GridLayout object);
public class FigureQualifiedNameSwitch extends GMFGraphSwitch {
public class FigureQualifiedNameSwitch extends GMFGraphSwitch {
    public Object caseStackLayout (StackLayout object);
    public Object caseXYLayout (XYLayout object);
    public Object caseXYLayoutData (XYLayoutData object);
public class FigureQualifiedNameSwitch extends GMFGraphSwitch {
    public Object caseBorderLayout (BorderLayout object);
    public Object caseCustomClass (CustomClass object);
    public Object caseEllipse (Ellipse object);
    public Object caseFlowLayout (FlowLayout object);
    public Object caseGridLayout (GridLayout object);
    public Object caseGridLayoutData (GridLayoutData object);
    public Object caseLabel (Label object);
    public Object caseLabeledContainer (LabeledContainer object);
    public Object casePolygon (Polygon object);
    public Object casePolygonDecoration (PolygonDecoration object);
    public Object casePolyline (Polyline object);
    public Object casePolylineConnection (PolylineConnection object);
    public Object casePolylineDecoration (PolylineDecoration object);
    public Object caseRectangle (Rectangle object);
    public Object caseRoundedRectangle (RoundedRectangle object);
    public Object caseStackLayout (StackLayout object);
    public Object caseXYLayout (XYLayout object);
    public Object caseXYLayoutData (XYLayoutData object);
interface FigureQualifiedNameSwitch {
public class FigureRefImpl extends EObjectImpl implements FigureRef {
public class FigureRefImpl extends EObjectImpl implements FigureRef {
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    public Layout getLayout ();
    public LayoutData getLayoutData ();
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public NotificationChain basicSetLayoutData (LayoutData newLayoutData, NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void setLayout (Layout newLayout);
    public void setLayoutData (LayoutData newLayoutData);
public class FigureRefImpl extends EObjectImpl implements FigureRef {
public class FigureRefImpl extends EObjectImpl implements FigureRef {
public class FigureRefImpl extends EObjectImpl implements FigureRef {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FigureRefImpl extends EObjectImpl implements FigureRef {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class FigureRefImpl extends EObjectImpl implements FigureRef {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    @Override
    protected Figure figure = null;
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    public Figure basicGetFigure ();
    public Figure getFigure ();
    public Figure getParent ();
    public Layout getLayout ();
    public LayoutData getLayoutData ();
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public NotificationChain basicSetLayoutData (LayoutData newLayoutData, NotificationChain msgs);
    public void setFigure (Figure newFigure);
    public void setLayout (Layout newLayout);
    public void setLayoutData (LayoutData newLayoutData);
public class FigureRefImpl extends AbstractFigureImpl implements FigureRef {
    @SuppressWarnings("unchecked")
    @Override
    protected RealFigure figure;
    public RealFigure basicGetFigure ();
    public RealFigure getFigure ();
    public void setFigure (RealFigure newFigure);
public class FigureRefImpl extends AbstractFigureImpl implements FigureRef {
    @SuppressWarnings("unchecked")
    @Override
public class FigureRefImpl extends AbstractFigureImpl implements FigureRef {
    @Override
public class FigureRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
public class FigureRefItemProvider extends AbstractFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureRefItemProvider extends AbstractFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureRefItemProvider extends AbstractFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FigureRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FigureRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FigureRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class FigureRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class FigureSection extends AbstractPropertySection implements ChangeTracker, Listener {
public class FigureSection extends AbstractPropertySection implements ChangeTracker, Listener {
    protected Object unwrap (Object element);
public class FigureSection extends AbstractPropertySection implements ChangeTracker, Listener {
public class FigureSection extends AbstractPropertySection implements ChangeTracker, Listener {
    private void attach ();
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
    public static LineSeg getNearestSegment (List mySegments, final int xCoord, final int yCoord);
    public static int findNearestLineSegIndexOfPoint (PointList points, final Point ptCoord);
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
    public static void paintGridWithStyle (Graphics g, IFigure f, org.eclipse.draw2d.geometry.Point origin, int distanceX, int distanceY, int lineStyle, int [] dashes);
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
public class FigureUtilities extends org.eclipse.draw2d.FigureUtilities {
interface FigureViewmap extends EObject {
interface FigureViewmap extends Viewmap {
public class FigureViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class FigureViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class FigureViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FigureViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FileChangeManager implements IFileChangeManager, IResourceChangeListener, IResourceDeltaVisitor {
public class FileChangeManager implements IFileChangeManager, IResourceChangeListener, IResourceDeltaVisitor {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
    public class DiagramFileInfo extends FileInfo {
        public DiagramFileInfo (IDocument document, FileSynchronizer fileSynchronizer) {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
    public class DiagramFileInfo extends FileInfo {
        public DiagramFileInfo (IDocument document, FileSynchronizer fileSynchronizer, DiagramModificationListener listener) {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramDocumentProvider extends FileDocumentProvider implements IDiagramDocumentProvider {
public class FileDiagramEditor extends DiagramDocumentEditor {
public class FileDiagramEditor extends DiagramDocumentEditorIDE {
public class FileDiagramEditor extends DiagramDocumentEditorIDE {
public class FileDiagramEditor extends IDEDiagramDocumentEditor {
public class FileDiagramEditor extends IDEDiagramDocumentEditor {
    public FileDiagramEditor (MEditingDomain domain, boolean hasFlyoutPalette) {
public class FileDiagramEditor extends IDEDiagramDocumentEditor {
public class FileDiagramEditorWithFlyoutPalette extends FileDiagramEditor {
    public FileDiagramEditorWithFlyoutPalette (MEditingDomain domain) {
public class FileDiagramEditorWithFlyoutPalette extends FileDiagramEditor {
public class FileDiagramModificationListener extends DiagramModificationListener {
    public void startListening ();
    public void stopListening ();
public class FileDiagramModificationListener extends DiagramModificationListener {
    public boolean isAdapterForType (Object type);
    public void notifyChanged (Notification notification);
abstract public class FileDocumentProvider extends StorageDocumentProvider {
abstract public class FileDocumentProvider extends StorageDocumentProvider {
public class FileEditorInputProxy extends StorageEditorInputProxy implements IFileEditorInput, IPathEditorInput, IPersistableElement, MEditingDomainElement {
    public FileEditorInputProxy (IFileEditorInput proxied, MEditingDomain domain) {
public class FileEditorInputProxy extends StorageEditorInputProxy implements IFileEditorInput, IPathEditorInput, IPersistableElement, MEditingDomainElement {
    public FileEditorInputProxy (IFileEditorInput proxied, TransactionalEditingDomain domain) {
public class FileModificationValidator {
public class FileModificationValidator {
public class FileModificationValidator {
public class FileModificationValidator {
public class FileModificationValidator {
public class FileModificationValidator {
    private static class ModificationStamp {
        public IFile getFile ();
        public ModificationStamp (IFile file) {
        public Timestamp getLastModified ();
        public boolean equals (Object obj);
        public boolean hasFileChanged ();
        public int hashCode ();
        public long getFileLength ();
public class FileNameOption extends TemplateOption {
public class FileNameOption extends TemplateOption {
public class FileObserverFilter {
public class FileObserverFilter {
    public FileObserverFilter (FileObserverFilterType aFilterType, IContentType [] contentType) {
public class FileObserverFilterType extends EnumeratedType {
public class FileObserverFilterType extends EnumeratedType {
    final public static FileObserverFilterType CONTENT_TYPE = new FileObserverFilterType ("ContentType");
public class FileObserverManager {
public class FileObserverManager {
public class FileResourceDiagramEditorInput extends FileResourceEditorInput implements IFileResourceDiagramEditorInput {
public class FileResourceDiagramEditorInput extends FileResourceEditorInput {
public class FileResourceEditorInput implements IFileResourceEditorInput, IPathEditorInput, IPersistableElement {
public class FileResourceEditorInput implements IPathEditorInput, IPersistableElement {
interface FillStyle extends Style {
interface FillStyle extends NotationObject, Style {
interface FillStyle extends NotationObject, Style {
interface FillStyle extends Style {
public class FillStyleImpl extends EObjectImpl implements FillStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class FillStyleImpl extends EObjectImpl implements FillStyle {
    public void eSet (int featureID, Object newValue);
public class FillStyleImpl extends EObjectImpl implements FillStyle {
public class FillStyleImpl extends FlatEObjectImpl implements FillStyle {
public class FillStyleImpl extends FlatEObjectImpl implements FillStyle {
public class FillStyleImpl extends NotationObjectImpl implements FillStyle {
public class FillStyleImpl extends NotationObjectImpl implements FillStyle {
public class FillStyleImpl extends NotationEObjectImpl implements FillStyle {
public class FillStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FillStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FillStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FillStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
final public class Filtering extends AbstractEnumerator {
    final public static Filtering AUTOMATIC_LITERAL = new Filtering (AUTOMATIC, "Automatic");
    final public static Filtering MANUAL_LITERAL = new Filtering (MANUAL, "Manual");
    final public static Filtering NONE_LITERAL = new Filtering (NONE, "None");
final public class Filtering extends AbstractEnumerator {
    public static Filtering getByName (String name); final public static Filtering AUTOMATIC_LITERAL = new Filtering (AUTOMATIC, "Automatic", "Automatic");
    final public static Filtering MANUAL_LITERAL = new Filtering (MANUAL, "Manual", "Manual");
    final public static Filtering NONE_LITERAL = new Filtering (NONE, "None", "None");
interface FilteringStyle extends Style {
interface FilteringStyle extends NotationObject, Style {
interface FilteringStyle extends NotationObject, Style {
interface FilteringStyle extends Style {
public class FilteringStyleImpl extends EObjectImpl implements FilteringStyle {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class FilteringStyleImpl extends EObjectImpl implements FilteringStyle {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class FilteringStyleImpl extends EObjectImpl implements FilteringStyle {
public class FilteringStyleImpl extends FlatEObjectImpl implements FilteringStyle {
public class FilteringStyleImpl extends FlatEObjectImpl implements FilteringStyle {
    protected EList filteredObjects = null;
public class FilteringStyleImpl extends FlatEObjectImpl implements FilteringStyle {
    protected EList filteredObjects;
public class FilteringStyleImpl extends FlatEObjectImpl implements FilteringStyle {
public class FilteringStyleImpl extends NotationObjectImpl implements FilteringStyle {
public class FilteringStyleImpl extends NotationObjectImpl implements FilteringStyle {
    protected Filtering filtering = FILTERING_EDEFAULT;
public class FilteringStyleImpl extends NotationEObjectImpl implements FilteringStyle {
    final protected static int FILTERING_EFLAG = 0x3 << FILTERING_EFLAG_OFFSET;
    final protected static int FILTERING_EFLAG_DEFAULT = Filtering.VALUES.indexOf (FILTERING_EDEFAULT) << FILTERING_EFLAG_OFFSET;
    final protected static int FILTERING_EFLAG_OFFSET = 8;
public class FilteringStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FilteringStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FilteringStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FilteringStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FilterUtil {
    private static class EObjectsComparator implements Comparator {
    public static List filterByResourceSet (Collection eClasses, ResourceSet resourceSet);
    public static List sort (Collection eObjects);
public class FilterUtil {
    private static class EObjectsComparator implements Comparator < Object > {
    public static < T > List < T > filterByResourceSet (Collection < T > eClasses, ResourceSet resourceSet);
public class FilterUtil {
    public static Collection filterByNodeMapping (Collection childReferences, CompartmentMapping mapping);
    public static Collection filterByNodeMapping (Collection compartments, ChildReference childReference);
    public static Collection filterBySuperClasses (Collection instances, Class [] classes);
    public static List filterByContainerMetaclass (Collection eAttributes, LabelMapping labelMapping);
    public static List filterByContainerMetaclass (Collection eAttributes, MappingEntry mappingEntry);
    public static List filterByContainerMetaclass (Collection eReferences, LinkMapping mappingEntry);
    public static List filterByContainerMetaclass (Collection eReferences, NodeReference nodeReference, boolean containmentOnly);
    public static List filterByContainmentFeature (Collection eClasses, MappingEntry mappingEntry);
    public static List filterByReferenceType (Collection eReferences, LinkMapping linkMapping);
public class FilterUtil {
    public static < T extends EObject > List < T > filterByResourceSet (Collection < T > eClasses, ResourceSet resourceSet);
    public static Collection < EObject > filterByNodeMapping (Collection < EObject > childReferences, CompartmentMapping mapping);
    public static List < EClass > filterByContainmentFeature (Collection < EClass > eClasses, MappingEntry mappingEntry);
    public static List < EReference > filterByContainerMetaclass (Collection < EReference > eReferences, NodeReference nodeReference, boolean containmentOnly);
    public static List < EReference > filterByReferenceType (Collection < EReference > eReferences, LinkMapping linkMapping);
    public static List < EStructuralFeature > filterByContainerMetaclass (Collection < EStructuralFeature > eReferences, MappingEntry mappingEntry);
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
public class FilterUtil {
    public static Collection < EClass > filterByFeatureSeqInitializer (Collection < EClass > eClasses, FeatureSeqInitializer featureSeqInitializer);
public class FlowActionFigure extends RectangleFigure implements ActionContainer {
public class FlowActionFigure extends RectangleFigure implements ActionContainer {
    public void removeAction (IFigure actionFigure, boolean std);
public class FlowActionFigure extends RectangleFigure implements ActionContainer {
public class FlowActionFigure extends RectangleFigure implements ActionContainer {
    public FlowActionFigure () {
public class FlowLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class FlowLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class FlowLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FlowLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class FontDialogAction extends PropertyChangeAction {
public class FontDialogAction extends PropertyChangeAction {
    @Override
public class FontNameContributionItem extends PropertyChangeContributionItem implements Listener {
public class FontNameContributionItem extends PropertyChangeContributionItem implements Listener {
public class FontNameContributionItem extends PropertyChangeContributionItem implements Listener {
public class FontNameContributionItem extends PropertyChangeContributionItem implements Listener {
    @Override
public class FontSizeContributionItem extends PropertyChangeContributionItem implements Listener {
public class FontSizeContributionItem extends PropertyChangeContributionItem implements Listener {
public class FontSizeContributionItem extends PropertyChangeContributionItem implements Listener {
public class FontSizeContributionItem extends PropertyChangeContributionItem implements Listener {
    @Override
[FontStyle-3.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'FontStyle-4.java' as a [program], at or near:
interface FontStyle extends Style {
interface FontStyle extends NotationObject, Style {
interface FontStyle extends NotationObject, Style {
interface FontStyle extends Style {
public class FontStyleAction extends BooleanPropertyAction {
public class FontStyleAction extends BooleanPropertyAction {
    @Override
public class FontStyleImpl extends EObjectImpl implements FontStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class FontStyleImpl extends EObjectImpl implements FontStyle {
    public void eSet (int featureID, Object newValue);
public class FontStyleImpl extends EObjectImpl implements FontStyle {
public class FontStyleImpl extends FlatEObjectImpl implements FontStyle {
public class FontStyleImpl extends FlatEObjectImpl implements FontStyle {
public class FontStyleImpl extends NotationObjectImpl implements FontStyle {
public class FontStyleImpl extends NotationObjectImpl implements FontStyle {
public class FontStyleImpl extends NotationEObjectImpl implements FontStyle {
public class FontStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FontStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FontStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class FontStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GalleryMirrorProcessor extends GalleryProcessor {
    private static class GenerationInfoImpl implements GenerationInfo {
    public interface GenerationInfo {
public class GalleryMirrorProcessor extends GalleryProcessor {
    private static class GenerationInfoImpl implements GenerationInfo {
    public interface GenerationInfo {
public class GalleryMirrorProcessor extends GalleryProcessor {
    private static class GenerationInfoImpl implements GenerationInfo {
        public Enumeration < Figure > getProcessedFigures ();
        public GenerationInfoImpl () {
        public String getGeneratedClassFQN (Figure figure);
        public void registerFQN (Figure figure, String fqn);
    public GenerationInfo getGenerationInfo (); public interface GenerationInfo {
        public Enumeration < Figure > getProcessedFigures ();
        public String getGeneratedClassFQN (Figure figure);
public class GalleryMirrorProcessor extends GalleryProcessor {
public class GalleryProcessor extends Processor {
public class GalleryProcessor extends Processor {
public class GefPlugin extends XToolsUIPlugin {
public class GefPlugin extends XToolsUIPlugin {
    public static XToolsUIPlugin getInstance ();
public class GefPlugin extends XToolsUIPlugin {
    public static XToolsUIPlugin getInstance ();
public class GefPlugin extends AbstractUIPlugin {
final public class GefStatusCodes {
final public class GefStatusCodes {
    final public static int IGNORED_EXCEPTION_WARNING = 9;
public class GenActionFactoryContributionItemImpl extends GenContributionItemImpl implements GenActionFactoryContributionItem {
public class GenActionFactoryContributionItemImpl extends EObjectImpl implements GenActionFactoryContributionItem {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
public class GenActionFactoryContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenActionFactoryContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenActionFactoryContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenActionFactoryContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenActionFactoryContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenActionFactoryContributionItemItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected EClass eStaticClass (); protected EList sharedContributionItems = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenContributionItem > sharedContributionItems = null;
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected EList < GenContributionItem > sharedContributionItems = null;
    protected GenMenuManager mainMenu = null;
    protected GenToolBarManager mainToolBar = null;
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected EList < GenContributionItem > sharedContributionItems;
    protected GenMenuManager mainMenu;
    protected GenToolBarManager mainToolBar;
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected String perspectiveId = PERSPECTIVE_ID_EDEFAULT;
    final protected static String PERSPECTIVE_ID_EDEFAULT = null;
    public String getPerspectiveId ();
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected String title = TITLE_EDEFAULT;
    final protected static String TITLE_EDEFAULT = null;
    public String getTitle ();
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected String iD = ID_EDEFAULT;
    final protected static String ID_EDEFAULT = null;
    public String getID ();
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected String actionBarAdvisorClassName = ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT;
    protected String applicationClassName = APPLICATION_CLASS_NAME_EDEFAULT;
    protected String applicationPackageName = APPLICATION_PACKAGE_NAME_EDEFAULT;
    protected String perspectiveClassName = PERSPECTIVE_CLASS_NAME_EDEFAULT;
    protected String workbenchAdvisorClassName = WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT;
    protected String workbenchWindowAdvisorClassName = WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT;
    final protected static String APPLICATION_CLASS_NAME_EDEFAULT = null;
    final protected static String APPLICATION_PACKAGE_NAME_EDEFAULT = null;
    public String getApplicationClassName ();
    public String getApplicationClassNameGen ();
    public String getApplicationPackageName ();
    public String getApplicationPackageNameGen ();
    public void setActionBarAdvisorClassName (String newActionBarAdvisorClassName);
    public void setApplicationClassName (String newApplicationClassName);
    public void setWorkbenchAdvisorClassName (String newWorkbenchAdvisorClassName);
    public void setWorkbenchWindowAdvisorClassName (String newWorkbenchWindowAdvisorClassName);
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected String className = CLASS_NAME_EDEFAULT;
    protected String packageName = PACKAGE_NAME_EDEFAULT;
    protected boolean supportFiles = SUPPORT_FILES_EDEFAULT;
    final protected static String CLASS_NAME_EDEFAULT = null;
    final protected static String PACKAGE_NAME_EDEFAULT = null;
    final protected static boolean SUPPORT_FILES_EDEFAULT = false;
    public String getClassName ();
    public String getPackageName ();
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected EList sharedContributionItems = null;
    protected GenMenuManager mainMenu = null;
    protected GenToolBarManager mainToolBar = null;
    public GenMenuManager getMainMenu ();
    public GenToolBarManager getMainToolBar ();
    public NotificationChain basicSetMainMenu (GenMenuManager newMainMenu, NotificationChain msgs);
    public void setMainMenu (GenMenuManager newMainMenu);
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addApplicationClassNamePropertyDescriptor (Object object);
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
abstract public class GenAuditableImpl extends EObjectImpl implements GenAuditable {
abstract public class GenAuditableImpl extends EObjectImpl implements GenAuditable {
abstract public class GenAuditableImpl extends EObjectImpl implements GenAuditable {
abstract public class GenAuditableImpl extends EObjectImpl implements GenAuditable {
    @Override
abstract public class GenAuditableImpl extends EObjectImpl implements GenAuditable {
abstract public class GenAuditableImpl extends EObjectImpl implements GenAuditable {
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public void eUnset (int featureID); protected GenAuditContext contextSelector;
    public GenAuditContext basicGetContextSelector ();
    public void setContextSelector (GenAuditContext newContextSelector);
public class GenAuditableItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditableItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditableItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditableItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface GenAuditContainer extends EObject {
interface GenAuditContainer extends GenRuleContainerBase {
interface GenAuditContainer extends GenRuleContainerBase {
interface GenAuditContainer extends EObject {
public class GenAuditContainerImpl extends GenRuleContainerBaseImpl implements GenAuditContainer {
    protected EList childContainers = null;
    public EList getAllAuditContainers ();
    public EList getAllAuditRules ();
    public GenAuditContainer getParentContainer ();
    public List getAllContextSelectorsLocalClassNames ();
    public List getAllJavaLangAudits ();
    public List getAllRequiredConstraintAdaptersLocalClassNames ();
    public Map getAllRulesToTargetContextMap ();
    public void setParentContainer (GenAuditContainer newParentContainer);
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
    protected EList path = null;
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
    protected EClass eStaticClass (); protected EList audits = null;
    protected EList path = null;
    public EList getAudits ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenAuditContainer > path = null;
    protected EList < GenAuditRule > audits = null;
    public EList < GenAuditContainer > getPath ();
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
    protected EList < GenAuditContainer > path = null;
    protected EList < GenAuditRule > audits = null;
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
    protected EList < GenAuditContainer > path;
    protected EList < GenAuditRule > audits;
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
    public void setRoot (GenAuditRoot newRoot);
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
    public void setRoot (GenAuditRoot newRoot);
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
public class GenAuditContainerImpl extends EObjectImpl implements GenAuditContainer {
public class GenAuditContainerImpl extends GenRuleContainerBaseImpl implements GenAuditContainer {
public class GenAuditContainerImpl extends GenRuleContainerBaseImpl implements GenAuditContainer {
public class GenAuditContainerImpl extends GenRuleContainerBaseImpl implements GenAuditContainer {
public class GenAuditContainerImpl extends GenRuleContainerBaseImpl implements GenAuditContainer {
public class GenAuditContainerImpl extends GenRuleContainerBaseImpl implements GenAuditContainer {
    public List getAllContextSelectorsLocalClassNames ();
    public List getAllJavaLangAudits ();
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditContainerItemProvider extends GenRuleContainerBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditContainerItemProvider extends GenRuleContainerBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditedMetricTargetImpl extends GenAuditableImpl implements GenAuditedMetricTarget {
public class GenAuditedMetricTargetImpl extends GenAuditableImpl implements GenAuditedMetricTarget {
    protected GenDataType metricValueContext = null;
    public GenDataType basicGetMetricValueContext ();
    public void setMetricValueContext (GenDataType newMetricValueContext);
public class GenAuditedMetricTargetImpl extends GenAuditableImpl implements GenAuditedMetricTarget {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenAuditedMetricTargetImpl extends GenAuditableImpl implements GenAuditedMetricTarget {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenAuditedMetricTargetImpl extends GenAuditableImpl implements GenAuditedMetricTarget {
    protected GenDataType metricValueContext = null;
    protected GenMetricRule metric = null;
public class GenAuditedMetricTargetImpl extends GenAuditableImpl implements GenAuditedMetricTarget {
    protected GenDataType metricValueContext;
    protected GenMetricRule metric;
public class GenAuditedMetricTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenAuditedMetricTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenAuditedMetricTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditedMetricTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditedMetricTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditedMetricTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
    protected EList < GenAuditContainer > categories = null;
    protected EList < GenAuditRule > rules = null;
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
    protected EList < GenAuditContainer > categories;
    protected EList < GenAuditRule > rules;
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
    public NotificationChain basicSetEditorGen (GenEditorGenerator newEditorGen, NotificationChain msgs);
    public void setEditorGen (GenEditorGenerator newEditorGen);
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
    protected EList < GenAuditContext > clientContexts;
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
    public NotificationChain basicSetEditorGen (GenEditorGenerator newEditorGen, NotificationChain msgs);
    public void setEditorGen (GenEditorGenerator newEditorGen);
public class GenAuditRootImpl extends EObjectImpl implements GenAuditRoot {
public class GenAuditRootItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditRootItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
interface GenAuditRule extends EObject {
interface GenAuditRule extends GenRuleBase {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    final protected static boolean REQUIRES_CONSTRAINT_ADAPTER_EDEFAULT = false;
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    protected GenAuditContainer category = null;
    protected String contextSelectorLocalClassName = CONTEXT_SELECTOR_LOCAL_CLASS_NAME_EDEFAULT;
    final protected static String CONTEXT_SELECTOR_LOCAL_CLASS_NAME_EDEFAULT = null;
    public GenAuditContainer basicGetCategory ();
    public GenAuditContainer getCategory ();
    public void setCategory (GenAuditContainer newCategory);
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    protected GenAuditContainer category = null;
    protected GenAuditable target = null;
    protected GenConstraint rule = null;
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    protected GenAuditContainer category;
    protected GenAuditable target;
    protected GenConstraint rule;
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    protected String contextSelectorLocalClassName = CONTEXT_SELECTOR_LOCAL_CLASS_NAME_EDEFAULT;
    final protected static String CONTEXT_SELECTOR_LOCAL_CLASS_NAME_EDEFAULT = null;
    public String getContextSelectorClassName ();
    public String getContextSelectorLocalClassName ();
    public String getContextSelectorLocalClassNameGen ();
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends EObjectImpl implements GenAuditRule {
    protected ValueExpression rule = null;
public class GenAuditRuleImpl extends EObjectImpl implements GenAuditRule {
    protected GenConstraint rule = null;
public class GenAuditRuleImpl extends EObjectImpl implements GenAuditRule {
    protected GenClass target = null;
    public GenClass basicGetTarget ();
public class GenAuditRuleImpl extends EObjectImpl implements GenAuditRule {
    protected GenRuleTarget target = null;
    public String getContextSelectorClassName ();
    public String getContextSelectorLocalClassName ();
public class GenAuditRuleImpl extends EObjectImpl implements GenAuditRule {
    protected GenRuleTarget target = null;
    protected String description = DESCRIPTION_EDEFAULT;
    protected String name = NAME_EDEFAULT;
    final protected static String DESCRIPTION_EDEFAULT = null;
    final protected static String NAME_EDEFAULT = null;
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    protected GenAuditable target = null;
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
public class GenAuditRuleImpl extends GenRuleBaseImpl implements GenAuditRule {
    public String getConstraintAdapterClassName ();
    public String getConstraintAdapterLocalClassName ();
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addCategoryPropertyDescriptor (Object object);
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenAuditRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public interface GenChildContainer extends GenContainerBase {
    final public static String CANONICAL_EDIT_POLICY_SUFFIX = "CanonicalEditPolicy";
interface GenChildContainer extends GenContainerBase {
interface GenChildContainer extends GenCommonBase {
public interface GenChildContainer extends GenCommonBase {
    final public static String CANONICAL_EDIT_POLICY_SUFFIX = "CanonicalEditPolicy";
public interface GenChildContainer extends GenCommonBase {
public interface GenChildContainer extends GenContainerEditPart {
public interface GenChildContainer extends GenContainerEditPart {
public interface GenChildContainer extends GenContainerBase {
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected boolean listLayout = LIST_LAYOUT_EDEFAULT;
    final protected static boolean LIST_LAYOUT_EDEFAULT = true;
    public void setListLayout (boolean newListLayout);
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected boolean listLayout = LIST_LAYOUT_EDEFAULT;
    final protected static boolean LIST_LAYOUT_EDEFAULT = true;
    public void setListLayout (boolean newListLayout);
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected EClass eStaticClass (); protected EList childNodes = null;
    public EList getChildNodes ();
    public EList getContainedNodes ();
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenChildNode > childNodes = null;
    public EList < GenChildNode > getChildNodes ();
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected EList < GenChildNode > childNodes = null;
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected EList < GenChildNode > childNodes;
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected CompartmentLayoutKind layoutKind = LAYOUT_KIND_EDEFAULT;
    protected String groupID = GROUP_ID_EDEFAULT;
    protected String titleKey = TITLE_KEY_EDEFAULT;
    protected boolean canCollapse = CAN_COLLAPSE_EDEFAULT;
    protected boolean hideIfEmpty = HIDE_IF_EMPTY_EDEFAULT;
    protected boolean needsTitle = NEEDS_TITLE_EDEFAULT;
    final protected static CompartmentLayoutKind LAYOUT_KIND_EDEFAULT = CompartmentLayoutKind.BORDER_LITERAL;
    final protected static String GROUP_ID_EDEFAULT = null;
    final protected static String TITLE_KEY_EDEFAULT = null;
    final protected static boolean CAN_COLLAPSE_EDEFAULT = true;
    final protected static boolean HIDE_IF_EMPTY_EDEFAULT = true;
    final protected static boolean NEEDS_TITLE_EDEFAULT = true;
    public CompartmentLayoutKind getLayoutKind ();
    public GenDiagram getDiagram ();
    public GenNode getParentNode ();
    public String getClassNamePrefix ();
    public String getClassNameSuffux ();
    public String getGroupID ();
    public String getTitleKey ();
    public String getUniqueIdentifier ();
    public boolean isCanCollapse ();
    public boolean isHideIfEmpty ();
    public void setCanCollapse (boolean newCanCollapse);
    public void setGroupID (String newGroupID);
    public void setHideIfEmpty (boolean newHideIfEmpty);
    public void setLayoutKind (CompartmentLayoutKind newLayoutKind);
    public void setNeedsTitle (boolean newNeedsTitle);
    public void setTitleKey (String newTitleKey);
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected EList childNodes = null;
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
abstract public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
    protected String canonicalEditPolicyClassName = CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getCanonicalEditPolicyClassName ();
    public String getCanonicalEditPolicyClassNameGen ();
    public String getCanonicalEditPolicyQualifiedClassName ();
    public void setCanonicalEditPolicyClassName (String newCanonicalEditPolicyClassName);
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addCanCollapsePropertyDescriptor (Object object);
    protected void addGroupIDPropertyDescriptor (Object object);
    protected void addHideIfEmptyPropertyDescriptor (Object object);
    protected void addLayoutKindPropertyDescriptor (Object object);
    protected void addNeedsTitlePropertyDescriptor (Object object);
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildContainerItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addContainedNodesPropertyDescriptor (Object object);
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
    protected boolean labelReadOnly = LABEL_READ_ONLY_EDEFAULT;
    final protected static boolean LABEL_READ_ONLY_EDEFAULT = false;
    public void setLabelReadOnly (boolean newLabelReadOnly);
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
    protected boolean labelReadOnly = LABEL_READ_ONLY_EDEFAULT;
    final protected static boolean LABEL_READ_ONLY_EDEFAULT = false;
    public void setLabelReadOnly (boolean newLabelReadOnly);
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
    protected LabelModelFacet labelModelFacet = null;
public class GenChildLabelNodeImpl extends GenChildNodeImpl implements GenChildLabelNode {
    protected LabelModelFacet labelModelFacet;
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenChildLabelNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected GenFeature childMetaFeature = null;
    public GenFeature basicGetChildMetaFeature ();
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected String groupID = GROUP_ID_EDEFAULT;
    final protected static String GROUP_ID_EDEFAULT = null;
    public String getGroupID ();
    public void setGroupID (String newGroupID);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public boolean isListContainerEntry ();
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected EList containers = null;
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public boolean isListContainerEntry ();
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public boolean isListContainerEntry ();
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    public boolean isListContainerEntry ();
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected EClass eStaticClass (); protected EList containers = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs); protected EList < GenChildContainer > containers = null;
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected EList < GenChildContainer > containers = null;
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected EList < GenChildContainer > containers;
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetDiagram (GenDiagram newDiagram, NotificationChain msgs);
    public void setDiagram (GenDiagram newDiagram);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetDiagram (GenDiagram newDiagram, NotificationChain msgs);
    public void setDiagram (GenDiagram newDiagram);
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected EReference childMetaFeature = null;
    public EReference basicGetChildMetaFeature ();
public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {
    protected GenFeature childMetaFeature = null;
    public GenFeature basicGetChildMetaFeature ();
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenChildSideAffixedNodeItemProvider extends GenChildNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface GenCommonBase extends EObject {
public interface GenCommonBase extends EObject {
    final public static String EDIT_PART_SUFFIX = "EditPart";
    final public static String ITEM_SEMANTIC_EDIT_POLICY_SUFFIX = "ItemSemanticEditPolicy";
    final public static String NOTATION_VIEW_FACTORY_SUFFIX = "ViewFactory";
public interface GenCommonBase extends EObject {
public interface GenCommonBase extends EObject {
    final public static String DEFAULT_CLASS_NAME_PREFIX = "Unknown";
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected ElementType elementType = null;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected EList customBehaviour = null;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected EList customBehaviour = null;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    @SuppressWarnings("unchecked")
    protected EList behaviour = null;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    final protected static boolean SANS_DOMAIN_EDEFAULT = false;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected EClass eStaticClass (); protected EList behaviour = null;
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < Behaviour > behaviour = null;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected EList < Behaviour > behaviour = null;
    protected ElementType elementType = null;
    protected GenClass diagramRunTimeClass = null;
    protected Viewmap viewmap = null;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected EList < Behaviour > behaviour;
    protected ElementType elementType;
    protected GenClass diagramRunTimeClass;
    protected Viewmap viewmap;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    @SuppressWarnings("unchecked")
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected EList < GenClass > styles;
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected String notationViewFactoryClassName = NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT;
    final protected static String NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT = null;
    public String getNotationViewFactoryClassName ();
    public String getNotationViewFactoryClassNameGen ();
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected Viewmap viewmap = null;
    public NotificationChain basicSetViewmap (Viewmap newViewmap, NotificationChain msgs);
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
abstract public class GenCommonBaseImpl extends EObjectImpl implements GenCommonBase {
    protected String itemSemanticEditPolicyClassName = ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getItemSemanticEditPolicyClassName ();
    public String getItemSemanticEditPolicyClassNameGen ();
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface GenCompartment extends GenChildContainer {
public interface GenCompartment extends GenChildContainer {
    final public static String CLASS_NAME_PREFIX = "Compartment";
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    protected boolean listLayout = LIST_LAYOUT_EDEFAULT;
    final protected static boolean LIST_LAYOUT_EDEFAULT = true;
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    protected GenNode node = null;
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    protected GenNode node;
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    @Override
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    protected CompartmentLayoutKind layoutKind = LAYOUT_KIND_EDEFAULT;
    final protected static CompartmentLayoutKind LAYOUT_KIND_EDEFAULT = CompartmentLayoutKind.BORDER_LITERAL;
public class GenCompartmentImpl extends GenChildContainerImpl implements GenCompartment {
    protected GenNode node = null;
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenCompartmentItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenCompartmentTraceImpl extends MatchingTraceImpl implements GenCompartmentTrace {
public class GenCompartmentTraceImpl extends MatchingTraceImpl implements GenCompartmentTrace {
public class GenConstantColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenConstantColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenConstraintItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public interface GenContainerBase extends GenCommonBase {
    final public static String CANONICAL_EDIT_POLICY_SUFFIX = "CanonicalEditPolicy";
interface GenContainerBase extends GenCommonBase {
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetOwner (GenContributionManager newOwner, NotificationChain msgs);
    public void setOwner (GenContributionManager newOwner);
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetOwner (GenContributionManager newOwner, NotificationChain msgs);
    public void setOwner (GenContributionManager newOwner);
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
abstract public class GenContributionItemImpl extends EObjectImpl implements GenContributionItem {
interface GenContributionManager extends GenContributionItem {
interface GenContributionManager extends EObject {
abstract public class GenContributionManagerImpl extends GenContributionItemImpl implements GenContributionManager {
    protected EClass eStaticClass (); protected EList items = null;
    public EList getItems ();
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class GenContributionManagerImpl extends GenContributionItemImpl implements GenContributionManager {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenContributionItem > items = null;
abstract public class GenContributionManagerImpl extends GenContributionItemImpl implements GenContributionManager {
    protected EList < GenContributionItem > items = null;
abstract public class GenContributionManagerImpl extends GenContributionItemImpl implements GenContributionManager {
    protected EList < GenContributionItem > items;
abstract public class GenContributionManagerImpl extends GenContributionItemImpl implements GenContributionManager {
abstract public class GenContributionManagerImpl extends EObjectImpl implements GenContributionManager {
public class GenContributionManagerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenContributionManagerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenContributionManagerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenContributionManagerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenContributionManagerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenContributionManagerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomPreferencePageImpl extends GenPreferencePageImpl implements GenCustomPreferencePage {
public class GenCustomPreferencePageImpl extends GenPreferencePageImpl implements GenCustomPreferencePage {
    @Override
    protected boolean generateBoilerplate = GENERATE_BOILERPLATE_EDEFAULT;
    final protected static boolean GENERATE_BOILERPLATE_EDEFAULT = false;
    public boolean isGenerateBoilerplate ();
public class GenCustomPreferencePageImpl extends GenPreferencePageImpl implements GenCustomPreferencePage {
    @Override
public class GenCustomPreferencePageImpl extends GenPreferencePageImpl implements GenCustomPreferencePage {
    @Override
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenPreference > preferences;
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenCustomPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
public class GenCustomPropertyTabImpl extends GenPropertyTabImpl implements GenCustomPropertyTab {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenCustomPropertyTabImpl extends GenPropertyTabImpl implements GenCustomPropertyTab {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenCustomPropertyTabImpl extends GenPropertyTabImpl implements GenCustomPropertyTab {
    protected GenPropertyTabFilter filter = null;
public class GenCustomPropertyTabImpl extends GenPropertyTabImpl implements GenCustomPropertyTab {
    protected GenPropertyTabFilter filter;
public class GenCustomPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenCustomPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenCustomPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenCustomPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface GenDiagram extends GenCommonBase {
interface GenDiagram extends GenContainerEditPart {
interface GenDiagram extends GenContainerEditPart {
interface GenDiagram extends GenContainerBase {
interface GenDiagram extends GenContainerBase {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, PackageNames, ProviderClassNames, Shortcuts {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, PackageNames, ProviderClassNames, Shortcuts {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, ElementType, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, ElementType, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
public interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
    final public static String CLASS_NAME_PREFIX = "Diagram";
public interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
public interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts, Updater {
public interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts, Updater {
public interface GenDiagram extends BatchValidation, EditPartCandies, EditorCandies, GenContainerBase, LinkConstraints, MeasurementUnit, PackageNames, ProviderClassNames, Shortcuts {
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
    protected GenCommonBase element = null;
    public GenCommonBase basicGetElement ();
    public void setElement (GenCommonBase newElement);
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
    protected EList element = null;
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
    protected EClass eStaticClass (); protected EList element = null;
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenCommonBase > element = null;
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
    protected EList < GenCommonBase > element = null;
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
    protected EList < GenCommonBase > element;
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
    public String getClientContextID ();
public class GenDiagramElementTargetImpl extends GenAuditableImpl implements GenDiagramElementTarget {
public class GenDiagramElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenDiagramElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenDiagramElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-99.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 8 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String preferenceInitializerClassName = PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT;
    final protected static String PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT = null;
    public String getPreferenceInitializerClassName ();
    public String getPreferenceInitializerClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-100.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EList preferencePages = null;
[GenDiagramImpl-101.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    final protected static String CREATION_WIZARD_ICON_PATH_X_EDEFAULT = null;
[GenDiagramImpl-102.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-103.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-104.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-105.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EClass eStaticClass (); protected EList childNodes = null;
    protected EList compartments = null;
    protected EList containsShortcutsTo = null;
    protected EList links = null;
    protected EList preferencePages = null;
    protected EList shortcutsProvidedFor = null;
    protected EList topLevelNodes = null;
    public EList getAllChildContainers ();
    public EList getAllContainers ();
    public EList getAllNodes ();
    public EList getChildNodes ();
    public EList getCompartments ();
    public EList getContainedNodes ();
    public EList getContainsShortcutsTo ();
    public EList getLinks ();
    public EList getPreferencePages ();
    public EList getShortcutsProvidedFor ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenChildNode > childNodes = null;
    protected EList < GenCompartment > compartments = null;
    protected EList < GenLink > links = null;
    protected EList < GenPreferencePage > preferencePages = null;
    protected EList < GenTopLevelNode > topLevelNodes = null;
    protected EList < String > containsShortcutsTo = null;
    protected EList < String > shortcutsProvidedFor = null;
    public EList < GenChildContainer > getAllChildContainers ();
    public EList < GenChildNode > getChildNodes ();
    public EList < GenCompartment > getCompartments ();
    public EList < GenContainerBase > getAllContainers ();
    public EList < GenLink > getLinks ();
    public EList < GenNode > getAllNodes ();
    public EList < GenNode > getContainedNodes ();
    public EList < GenPreferencePage > getPreferencePages ();
    public EList < GenTopLevelNode > getTopLevelNodes ();
    public EList < String > getContainsShortcutsTo ();
[GenDiagramImpl-106.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EList < GenChildNode > childNodes = null;
    protected EList < GenCompartment > compartments = null;
    protected EList < GenLink > links = null;
    protected EList < GenPreferencePage > preferencePages = null;
    protected EList < GenTopLevelNode > topLevelNodes = null;
    protected EList < String > containsShortcutsTo = null;
    protected EList < String > shortcutsProvidedFor = null;
    protected GenClass domainDiagramElement = null;
    protected GenDiagramPreferences preferences = null;
    protected Palette palette = null;
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EList < GenChildNode > childNodes;
    protected EList < GenCompartment > compartments;
    protected EList < GenLink > links;
    protected EList < GenPreferencePage > preferencePages;
    protected EList < GenTopLevelNode > topLevelNodes;
    protected EList < String > containsShortcutsTo;
    protected EList < String > shortcutsProvidedFor;
    protected GenClass domainDiagramElement;
    protected GenDiagramPreferences preferences;
    protected Palette palette;
[GenDiagramImpl-107.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String diagramUpdaterClassName = DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT;
    final protected static String DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT = null;
    public String getDiagramUpdaterClassName ();
    public String getDiagramUpdaterClassNameGen ();
[GenDiagramImpl-108.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 12 garbage recoveries were required (larger size recommended for improved performance)
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String commandsPackageName = COMMANDS_PACKAGE_NAME_EDEFAULT;
    final protected static String COMMANDS_PACKAGE_NAME_EDEFAULT = null;
    public String getCommandsPackageName ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String nodeDescriptorClassName = NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT;
    final protected static String NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;
    public String getNodeDescriptorClassName ();
    public String getNodeDescriptorClassNameGen ();
[GenDiagramImpl-109.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 13 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String abstractParserClassName = ABSTRACT_PARSER_CLASS_NAME_EDEFAULT;
    protected String structuralFeatureParserClassName = STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT;
    protected String structuralFeaturesParserClassName = STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT;
    final protected static String ABSTRACT_PARSER_CLASS_NAME_EDEFAULT = null;
    final protected static String STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT = null;
    final protected static String STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT = null;
    public String getAbstractParserClassName ();
    public String getAbstractParserClassNameGen ();
    public String getStructuralFeatureParserClassName ();
    public String getStructuralFeatureParserClassNameGen ();
    public String getStructuralFeatureParserQualifiedClassName ();
    public String getStructuralFeaturesParserClassName ();
    public String getStructuralFeaturesParserClassNameGen ();
    public void setStructuralFeatureParserClassName (String newStructuralFeatureParserClassName);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String parsersPackageName = PARSERS_PACKAGE_NAME_EDEFAULT;
    final protected static String PARSERS_PACKAGE_NAME_EDEFAULT = null;
    public String getParsersPackageName ();
[GenDiagramImpl-110.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 12 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String linkDescriptorClassName = LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT;
    final protected static String LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;
    public String getLinkDescriptorClassName ();
    public String getLinkDescriptorClassNameGen ();
[GenDiagramImpl-111.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 12 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String diagramContentInitializerClassName = DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME_EDEFAULT;
    final protected static String DIAGRAM_CONTENT_INITIALIZER_CLASS_NAME_EDEFAULT = null;
    public String getDiagramContentInitializerClassName ();
    public String getDiagramContentInitializerClassNameGen ();
[GenDiagramImpl-112.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 13 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String diagramUpdaterClassName = DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT;
    protected String linkDescriptorClassName = LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT;
    protected String nodeDescriptorClassName = NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT;
    final protected static String DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT = null;
    final protected static String LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;
    final protected static String NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;
    public String getDiagramUpdaterClassName ();
    public String getDiagramUpdaterClassNameGen ();
    public String getLinkDescriptorClassName ();
    public String getLinkDescriptorClassNameGen ();
    public String getNodeDescriptorClassName ();
    public String getNodeDescriptorClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-113.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 12 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-114.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-115.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-116.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-117.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-118.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String editPartProviderClassName = EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String metamodelSupportProviderClassName = METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String viewProviderClassName = VIEW_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String EDIT_PART_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String VIEW_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getEditPartProviderClassName ();
    public String getEditPartProviderClassNameGen ();
    public String getMetamodelSupportProviderClassName ();
    public String getMetamodelSupportProviderClassNameGen ();
    public String getViewProviderClassName ();
    public String getViewProviderClassNameGen ();
    public void setViewProviderClassName (String newViewProviderClassName);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String iconProviderClassName = ICON_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String modelingAssistantProviderClassName = MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String ICON_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String MODELING_ASSISTANT_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getIconProviderClassName ();
    public String getIconProviderClassNameGen ();
    public String getModelingAssistantProviderClassName ();
    public String getModelingAssistantProviderClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String actionBarContributorClassName = ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT;
    protected String matchingStrategyClassName = MATCHING_STRATEGY_CLASS_NAME_EDEFAULT;
    final protected static String ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT = null;
    final protected static String MATCHING_STRATEGY_CLASS_NAME_EDEFAULT = null;
    public String getActionBarContributorClassName ();
    public String getActionBarContributorClassNameGen ();
    public String getMatchingStrategyClassName ();
    public String getMatchingStrategyClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String documentProviderClassName = DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT = "DocumentProvider";
[GenDiagramImpl-16.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected boolean printingEnabled = PRINTING_ENABLED_EDEFAULT;
    final protected static boolean PRINTING_ENABLED_EDEFAULT = false;
[GenDiagramImpl-17.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    public String getElementInitializersClassName ();
[GenDiagramImpl-20.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String editPoliciesPackageName = EDIT_POLICIES_PACKAGE_NAME_EDEFAULT;
    final protected static String EDIT_POLICIES_PACKAGE_NAME_EDEFAULT = null;
    public String getEditPoliciesPackageName ();
[GenDiagramImpl-22.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-23.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    final protected static String DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT = "DocumentProvider";
    final protected static String EDITOR_CLASS_NAME_EDEFAULT = "DiagramEditor";
    final protected static String EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT = "EditPartFactoryImpl";
    final protected static String INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT = "InitDiagramFileAction";
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String baseItemSemanticEditPolicyClassName = BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    protected String creationWizardClassName = CREATION_WIZARD_CLASS_NAME_EDEFAULT;
    protected String creationWizardPageClassName = CREATION_WIZARD_PAGE_CLASS_NAME_EDEFAULT;
    protected String diagramEditorUtilClassName = DIAGRAM_EDITOR_UTIL_CLASS_NAME_EDEFAULT;
    protected String diagramFileCreatorClassName = DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT;
    protected String elementTypesClassName = ELEMENT_TYPES_CLASS_NAME_EDEFAULT;
    protected String preferenceInitializerClassName = PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT;
    protected String referenceConnectionEditPolicyClassName = REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    protected String semanticHintsClassName = SEMANTIC_HINTS_CLASS_NAME_EDEFAULT;
    protected String structuralFeatureParserClassName = STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT;
    protected String visualIDRegistryClassName = VISUAL_ID_REGISTRY_CLASS_NAME_EDEFAULT;
    final protected static String BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    final protected static String CREATION_WIZARD_CLASS_NAME_EDEFAULT = null;
    final protected static String CREATION_WIZARD_PAGE_CLASS_NAME_EDEFAULT = null;
    final protected static String DIAGRAM_EDITOR_UTIL_CLASS_NAME_EDEFAULT = null;
    final protected static String DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT = null;
    final protected static String DOCUMENT_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String EDITOR_CLASS_NAME_EDEFAULT = null;
    final protected static String EDIT_PART_FACTORY_CLASS_NAME_EDEFAULT = null;
    final protected static String ELEMENT_TYPES_CLASS_NAME_EDEFAULT = null;
    final protected static String INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT = null;
    final protected static String PREFERENCE_INITIALIZER_CLASS_NAME_EDEFAULT = null;
    final protected static String REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    final protected static String SEMANTIC_HINTS_CLASS_NAME_EDEFAULT = null;
    final protected static String STRUCTURAL_FEATURE_PARSER_CLASS_NAME_EDEFAULT = null;
    final protected static String VISUAL_ID_REGISTRY_CLASS_NAME_EDEFAULT = null;
    public String getBaseItemSemanticEditPolicyClassName ();
    public String getCreationWizardClassName ();
    public String getCreationWizardClassNameGen ();
    public String getCreationWizardPageClassName ();
    public String getCreationWizardPageClassNameGen ();
    public String getCreationWizardPageQualifiedClassName ();
    public String getCreationWizardQualifiedClassName ();
    public String getDiagramEditorUtilClassName ();
    public String getDiagramEditorUtilClassNameGen ();
    public String getDiagramEditorUtilQualifiedClassName ();
    public String getDiagramFileCreatorClassName ();
    public String getDiagramFileCreatorClassNameGen ();
    public String getDocumentProviderClassNameGen ();
    public String getElementTypesClassName ();
    public String getElementTypesClassNameGen ();
    public String getPreferenceInitializerClassName ();
    public String getPreferenceInitializerClassNameGen ();
    public String getReferenceConnectionEditPolicyClassName ();
    public String getSemanticHintsClassName ();
    public String getStructuralFeatureParserClassName ();
    public String getStructuralFeatureParserClassNameGen ();
    public String getVisualIDRegistryClassName ();
    public String getVisualIDRegistryClassNameGen ();
    public void setBaseItemSemanticEditPolicyClassName (String newBaseItemSemanticEditPolicyClassName);
    public void setCreationWizardClassName (String newCreationWizardClassName);
    public void setCreationWizardPageClassName (String newCreationWizardPageClassName);
    public void setDiagramEditorUtilClassName (String newDiagramEditorUtilClassName);
    public void setSemanticHintsClassName (String newSemanticHintsClassName);
    public void setVisualIDRegistryClassName (String newVisualIDRegistryClassName);
[GenDiagramImpl-24.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-24.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String propertyProviderClassName = PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getPropertyProviderClassName ();
    public String getPropertyProviderClassNameGen ();
[GenDiagramImpl-25.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-25.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-25.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String viewProviderClassName = VIEW_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String VIEW_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getViewProviderClassName ();
    public String getViewProviderClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String notationViewFactoriesPackageName = NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT;
    protected String notationViewProviderClassName = NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String NOTATION_VIEW_FACTORIES_PACKAGE_NAME_EDEFAULT = null;
    final protected static String NOTATION_VIEW_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getNotationViewFactoriesPackageName ();
    public String getNotationViewFactoriesPackageNameGen ();
    public String getNotationViewProviderClassName ();
    public String getNotationViewProviderClassNameGen ();
    public void setNotationViewFactoriesPackageName (String newNotationViewFactoriesPackageName);
[GenDiagramImpl-26.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-27.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-27.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-27.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String baseGraphicalNodeEditPolicyClassName = BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    protected String editCommandsPackageName = EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT;
    protected String reorientConnectionViewCommandClassName = REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT;
    final protected static String BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    final protected static String EDIT_COMMANDS_PACKAGE_NAME_EDEFAULT = null;
    final protected static String REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME_EDEFAULT = null;
    public String getBaseGraphicalNodeEditPolicyClassName ();
    public String getBaseGraphicalNodeEditPolicyClassNameGen ();
    public String getEditCommandsPackageName ();
    public String getReorientConnectionViewCommandClassName ();
    public String getReorientConnectionViewCommandClassNameGen ();
[GenDiagramImpl-28.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-28.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-28.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String canonicalEditPolicyClassName = CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getCanonicalEditPolicyClassName ();
    public String getCanonicalEditPolicyClassNameGen ();
[GenDiagramImpl-29.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-29.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-30.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-30.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-30.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    public String getLinkCreationConstraintsClassName ();
[GenDiagramImpl-31.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-31.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-32.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-32.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-32.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected boolean hasDomainModel = HAS_DOMAIN_MODEL_EDEFAULT;
    final protected static boolean HAS_DOMAIN_MODEL_EDEFAULT = false;
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-33.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-33.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-33.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
[GenDiagramImpl-34.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-34.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-34.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected GenAuditContainer audits = null;
[GenDiagramImpl-35.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-35.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-35.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-36.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-36.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-36.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-36.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String createShortcutActionClassName = CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT;
    protected String elementChooserClassName = ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT;
    final protected static String CREATE_SHORTCUT_ACTION_CLASS_NAME_EDEFAULT = null;
    final protected static String ELEMENT_CHOOSER_CLASS_NAME_EDEFAULT = null;
    public String getCreateShortcutActionClassName ();
    public String getCreateShortcutActionClassNameGen ();
    public String getElementChooserClassName ();
    public String getElementChooserClassNameGen ();
[GenDiagramImpl-37.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-37.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-37.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-37.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String baseExternalNodeLabelEditPartClassName = BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT;
    final protected static String BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME_EDEFAULT = null;
    public String getBaseExternalNodeLabelEditPartClassName ();
    public String getBaseExternalNodeLabelEditPartClassNameGen ();
[GenDiagramImpl-38.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-38.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-38.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-38.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EList containsShortcutsTo = null;
    protected EList shortcutsProvidedFor = null;
    public boolean generateCreateShortcutAction ();
[GenDiagramImpl-39.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-39.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-39.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-39.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EList nodes = null;
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EList childNodes = null;
    protected EList compartments = null;
    protected EList topLevelNodes = null;
    public EList getAllContainers ();
    public EList getAllNodes ();
    public EList getChildNodes ();
    public EList getCompartments ();
[GenDiagramImpl-39.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-40.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-40.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-40.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-40.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-40.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    public EList getAllChildContainers ();
[GenDiagramImpl-40.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-41.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-41.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-41.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-41.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-41.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-41.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-42.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-42.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-42.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-42.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-42.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String markerNavigationProviderClassName = MARKER_NAVIGATION_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String validationProviderClassName = VALIDATION_PROVIDER_CLASS_NAME_EDEFAULT;
    protected boolean validationEnabled = VALIDATION_ENABLED_EDEFAULT;
    final protected static String MARKER_NAVIGATION_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String VALIDATION_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static boolean VALIDATION_ENABLED_EDEFAULT = false;
    public String getMarkerNavigationProviderClassName ();
    public String getMarkerNavigationProviderClassNameGen ();
    public String getValidationDiagnosticMarkerType ();
    public String getValidationProviderClassName ();
    public String getValidationProviderClassNameGen ();
    public void setValidationEnabled (boolean newValidationEnabled);
[GenDiagramImpl-42.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-43.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-43.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-43.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-43.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-43.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-43.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
[GenDiagramImpl-43.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-44.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-44.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-44.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-44.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-44.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String pluginClassName = PLUGIN_CLASS_NAME_EDEFAULT;
    protected String pluginID = PLUGIN_ID_EDEFAULT;
    protected String pluginName = PLUGIN_NAME_EDEFAULT;
    protected String providerName = PROVIDER_NAME_EDEFAULT;
    protected boolean printingEnabled = PRINTING_ENABLED_EDEFAULT;
    final protected static String PLUGIN_CLASS_NAME_EDEFAULT = null;
    final protected static String PLUGIN_ID_EDEFAULT = null;
    final protected static String PLUGIN_NAME_EDEFAULT = null;
    final protected static String PROVIDER_NAME_EDEFAULT = "Sample Plugin Provider, Inc";
    final protected static boolean PRINTING_ENABLED_EDEFAULT = false;
    public String getPluginClassName ();
    public String getPluginClassNameGen ();
    public String getPluginID ();
    public String getPluginIDGen ();
    public String getPluginName ();
    public void setPluginClassName (String newPluginClassName);
    public void setPluginID (String newPluginID);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected GenPlugin plugin = null;
[GenDiagramImpl-44.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-45.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-45.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-45.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-45.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-45.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String loadResourceActionClassName = LOAD_RESOURCE_ACTION_CLASS_NAME_EDEFAULT;
    final protected static String LOAD_RESOURCE_ACTION_CLASS_NAME_EDEFAULT = null;
    public String getLoadResourceActionClassName ();
    public String getLoadResourceActionClassNameGen ();
[GenDiagramImpl-45.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-46.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-46.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-46.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-46.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-46.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String abstractParserClassName = ABSTRACT_PARSER_CLASS_NAME_EDEFAULT;
    protected String structuralFeaturesParserClassName = STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT;
    final protected static String ABSTRACT_PARSER_CLASS_NAME_EDEFAULT = null;
    final protected static String STRUCTURAL_FEATURES_PARSER_CLASS_NAME_EDEFAULT = null;
    public String getAbstractParserClassName ();
    public String getAbstractParserClassNameGen ();
    public String getStructuralFeaturesParserClassName ();
    public String getStructuralFeaturesParserClassNameGen ();
[GenDiagramImpl-46.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-47.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-47.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-47.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-47.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-47.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-47.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String parserProviderClassName = PARSER_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String PARSER_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getParserProviderClassName ();
    public String getParserProviderClassNameGen ();
[GenDiagramImpl-47.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-48.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-48.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-48.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-48.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-48.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-48.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected GenAuditContainer audits = null;
    protected GenPackage domainMetaModel = null;
    protected GenPlugin plugin = null;
    public GenModel getEMFGenModel ();
    public GenPackage basicGetDomainMetaModel ();
    public GenPackage getDomainMetaModel ();
    public GenPlugin getPlugin ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-48.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String initDiagramFileActionClassName = INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT;
    final protected static String INIT_DIAGRAM_FILE_ACTION_CLASS_NAME_EDEFAULT = "InitDiagramFileAction";
    public String getInitDiagramFileActionClassName ();
[GenDiagramImpl-49.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-49.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-49.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-49.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-49.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String diagramFileExtension = DIAGRAM_FILE_EXTENSION_EDEFAULT;
    protected boolean sameFileForDiagramAndModel = SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
    final protected static String DIAGRAM_FILE_EXTENSION_EDEFAULT = null;
    final protected static boolean SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT = false;
    public String getDiagramFileExtension ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-49.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-50.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-50.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-50.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-51.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-51.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-51.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-51.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String actionBarContributorClassName = ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT;
    protected String editorClassName = EDITOR_CLASS_NAME_EDEFAULT;
    protected String editorPackageName = EDITOR_PACKAGE_NAME_EDEFAULT;
    final protected static String ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT = null;
    final protected static String EDITOR_CLASS_NAME_EDEFAULT = null;
    final protected static String EDITOR_PACKAGE_NAME_EDEFAULT = null;
    public String getActionBarContributorClassName ();
    public String getActionBarContributorClassNameGen ();
    public String getEditorClassName ();
    public String getEditorClassNameGen ();
    public String getEditorPackageName ();
    public String getEditorPackageNameGen ();
    public void setEditorClassName (String newEditorClassName);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-51.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-52.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-52.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-52.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-52.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-52.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected ProviderPriority editPartProviderPriority = EDIT_PART_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority iconProviderPriority = ICON_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority markerNavigationProviderPriority = MARKER_NAVIGATION_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority metamodelSupportProviderPriority = METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority modelingAssistantProviderPriority = MODELING_ASSISTANT_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority notationViewProviderPriority = NOTATION_VIEW_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority parserProviderPriority = PARSER_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority propertyProviderPriority = PROPERTY_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority validationProviderPriority = VALIDATION_PROVIDER_PRIORITY_EDEFAULT;
    final protected static ProviderPriority EDIT_PART_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority ICON_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority MARKER_NAVIGATION_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority MODELING_ASSISTANT_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority NOTATION_VIEW_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority PARSER_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority PROPERTY_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority VALIDATION_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    public ProviderPriority getEditPartProviderPriority ();
    public ProviderPriority getIconProviderPriority ();
    public ProviderPriority getMarkerNavigationProviderPriority ();
    public ProviderPriority getMetamodelSupportProviderPriority ();
    public ProviderPriority getModelingAssistantProviderPriority ();
    public ProviderPriority getNotationViewProviderPriority ();
    public ProviderPriority getParserProviderPriority ();
    public ProviderPriority getPropertyProviderPriority ();
[GenDiagramImpl-52.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-53.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-53.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-53.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-53.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-53.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-53.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected ProviderPriority paletteProviderPriority = PALETTE_PROVIDER_PRIORITY_EDEFAULT;
    protected String paletteProviderClassName = PALETTE_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static ProviderPriority PALETTE_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static String PALETTE_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getPaletteProviderClassName ();
    public String getPaletteProviderClassNameGen ();
    public void setPaletteProviderClassName (String newPaletteProviderClassName);
[GenDiagramImpl-53.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-54.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-54.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-54.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-54.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-54.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected ProviderPriority metamodelSupportProviderPriority = METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT;
    protected String metamodelSupportProviderClassName = METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static ProviderPriority METAMODEL_SUPPORT_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static String METAMODEL_SUPPORT_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getMetamodelSupportProviderClassName ();
    public String getMetamodelSupportProviderClassNameGen ();
    public void setMetamodelSupportProviderClassName (String newMetamodelSupportProviderClassName);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-54.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-55.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-55.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-55.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-55.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-55.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-55.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String creationWizardIconPath = CREATION_WIZARD_ICON_PATH_EDEFAULT;
    final protected static String CREATION_WIZARD_ICON_PATH_EDEFAULT = null;
    public String getCreationWizardIconPath ();
[GenDiagramImpl-55.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-56.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-56.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-56.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-56.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-56.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String units = UNITS_EDEFAULT;
    final protected static String UNITS_EDEFAULT = "Pixel";
[GenDiagramImpl-56.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-57.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-57.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-57.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-57.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-57.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String textSelectionEditPolicyClassName = TEXT_SELECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String TEXT_SELECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getTextSelectionEditPolicyClassName ();
    public String getTextSelectionEditPolicyClassNameGen ();
[GenDiagramImpl-57.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 6 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String newDiagramFileWizardClassName = NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME_EDEFAULT;
    final protected static String NEW_DIAGRAM_FILE_WIZARD_CLASS_NAME_EDEFAULT = null;
    public String getNewDiagramFileWizardClassName ();
    public String getNewDiagramFileWizardClassNameGen ();
[GenDiagramImpl-58.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String providersPackageName = PROVIDERS_PACKAGE_NAME_EDEFAULT;
    final protected static String PROVIDERS_PACKAGE_NAME_EDEFAULT = null;
    public String getProvidersPackageName ();
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String textNonResizableEditPolicyClassName = TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String TEXT_NON_RESIZABLE_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getTextNonResizableEditPolicyClassName ();
    public String getTextNonResizableEditPolicyClassNameGen ();
[GenDiagramImpl-59.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected ProviderPriority metricProviderPriority = METRIC_PROVIDER_PRIORITY_EDEFAULT;
    protected String metricProviderClassName = METRIC_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static ProviderPriority METRIC_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static String METRIC_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getMetricProviderClassName ();
    public String getMetricProviderClassNameGen ();
    public String getMetricProviderQualifiedClassName ();
    public void setMetricProviderClassName (String newMetricProviderClassName);
[GenDiagramImpl-60.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 8 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;
    protected String editHelpersPackageName = EDIT_HELPERS_PACKAGE_NAME_EDEFAULT;
    final protected static String EDIT_HELPERS_PACKAGE_NAME_EDEFAULT = null;
    final protected static String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    public String getEditHelperClassName ();
    public String getEditHelperClassNameGen ();
    public String getEditHelperQualifiedClassName ();
    public String getEditHelpersPackageName ();
    public void setEditHelperClassName (String newEditHelperClassName);
[GenDiagramImpl-61.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 8 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-62.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-62.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-62.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-62.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-62.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-62.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 5 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;
    final protected static String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    public String getEditHelperClassName ();
    public String getEditHelperClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String baseEditHelperClassName = BASE_EDIT_HELPER_CLASS_NAME_EDEFAULT;
    final protected static String BASE_EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    public String getBaseEditHelperClassName ();
    public String getBaseEditHelperClassNameGen ();
[GenDiagramImpl-63.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String semanticHintsClassName = SEMANTIC_HINTS_CLASS_NAME_EDEFAULT;
    final protected static String SEMANTIC_HINTS_CLASS_NAME_EDEFAULT = null;
    public String getSemanticHintsClassName ();
    public String getSemanticHintsClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-64.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 8 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected ProviderPriority shortcutsDecoratorProviderPriority = SHORTCUTS_DECORATOR_PROVIDER_PRIORITY_EDEFAULT;
    protected String shortcutsDecoratorProviderClassName = SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static ProviderPriority SHORTCUTS_DECORATOR_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static String SHORTCUTS_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getShortcutsDecoratorProviderClassName ();
    public String getShortcutsDecoratorProviderClassNameGen ();
    public void setShortcutsDecoratorProviderClassName (String newShortcutsDecoratorProviderClassName);
[GenDiagramImpl-65.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String referenceConnectionEditPolicyClassName = REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getReferenceConnectionEditPolicyClassName ();
    public String getReferenceConnectionEditPolicyClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-66.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String validationDecoratorProviderClassName = VALIDATION_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT;
    protected boolean validationDecorators = VALIDATION_DECORATORS_EDEFAULT;
    final protected static String VALIDATION_DECORATOR_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static boolean VALIDATION_DECORATORS_EDEFAULT = false;
    public String getValidationDecoratorProviderClassName ();
    public String getValidationDecoratorProviderClassNameGen ();
    public void setValidationDecoratorProviderClassName (String newValidationDecoratorProviderClassName);
[GenDiagramImpl-67.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected boolean synchronized_ = SYNCHRONIZED_EDEFAULT;
    final protected static boolean SYNCHRONIZED_EDEFAULT = true;
[GenDiagramImpl-68.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 10 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-69.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-70.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-71.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 10 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String referenceConnectionEditPolicyClassName = REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getReferenceConnectionEditPolicyClassName ();
    public String getReferenceConnectionEditPolicyClassNameGen ();
[GenDiagramImpl-72.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 10 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-73.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 10 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-74.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 10 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-75.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected ProviderPriority validationDecoratorProviderPriority = VALIDATION_DECORATOR_PROVIDER_PRIORITY_EDEFAULT;
    final protected static ProviderPriority VALIDATION_DECORATOR_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
[GenDiagramImpl-76.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 10 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-77.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-78.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected EClass domainDiagramElement = null;
    protected EPackage domainMetaModel = null;
    protected GenModel emfGenModel = null;
    public EClass basicGetDomainDiagramElement ();
    public EPackage basicGetDomainMetaModel ();
    public GenModel basicGetEmfGenModel ();
    public void setDomainDiagramElement (EClass newDomainDiagramElement);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected GenClass domainDiagramElement = null;
    protected GenPackage domainMetaModel = null;
    public GenModel getEMFGenModel ();
    public GenPackage basicGetDomainMetaModel ();
    public void setDomainDiagramElement (GenClass newDomainDiagramElement);
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String contributionItemProviderClassName = CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static String CONTRIBUTION_ITEM_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getContributionItemProviderClassName ();
    public String getContributionItemProviderClassNameGen ();
[GenDiagramImpl-79.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-80.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String creationWizardCategoryID = CREATION_WIZARD_CATEGORY_ID_EDEFAULT;
    protected String editingDomainID = EDITING_DOMAIN_ID_EDEFAULT;
    final protected static String CREATION_WIZARD_CATEGORY_ID_EDEFAULT = null;
    final protected static String EDITING_DOMAIN_ID_EDEFAULT = null;
    public String getCreationWizardCategoryID ();
    public String getEditingDomainID ();
[GenDiagramImpl-81.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-82.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 7 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-83.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String externalNodeLabelHostLayoutEditPolicyClassName = EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getExternalNodeLabelHostLayoutEditPolicyClassName ();
    public String getExternalNodeLabelHostLayoutEditPolicyClassNameGen ();
[GenDiagramImpl-84.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 12 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-85.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 12 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-86.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-86.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-86.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-86.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-86.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GenDiagramImpl-87.java' as a [program], at or near:
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    public List < GenLink > getPhantomLinks ();
[GenDiagramImpl-87.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 13 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-88.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String metaInfoFactoryClassName = META_INFO_FACTORY_CLASS_NAME_EDEFAULT;
    final protected static String META_INFO_FACTORY_CLASS_NAME_EDEFAULT = "MetaInfoProviderAdapterFactory";
    public String getMetaInfoFactoryClassName ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String createShortcutDecorationsCommandClassName = CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME_EDEFAULT;
    final protected static String CREATE_SHORTCUT_DECORATIONS_COMMAND_CLASS_NAME_EDEFAULT = null;
    public String getCreateShortcutDecorationsCommandClassName ();
    public String getCreateShortcutDecorationsCommandClassNameGen ();
[GenDiagramImpl-89.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 13 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String diagramFileCreatorClassName = DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT;
    final protected static String DIAGRAM_FILE_CREATOR_CLASS_NAME_EDEFAULT = null;
    public String getDiagramFileCreatorClassName ();
    public String getDiagramFileCreatorClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-90.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 13 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-91.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 9 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String shortcutPropertyTesterClassName = SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT;
    final protected static String SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT = null;
    public String getShortcutPropertyTesterClassName ();
    public String getShortcutPropertyTesterClassNameGen ();
[GenDiagramImpl-92.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 13 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected ProviderPriority paletteProviderPriority = PALETTE_PROVIDER_PRIORITY_EDEFAULT;
    protected ProviderPriority propertyProviderPriority = PROPERTY_PROVIDER_PRIORITY_EDEFAULT;
    protected String paletteProviderClassName = PALETTE_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String propertyProviderClassName = PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT;
    final protected static ProviderPriority PALETTE_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static ProviderPriority PROPERTY_PROVIDER_PRIORITY_EDEFAULT = ProviderPriority.LOWEST_LITERAL;
    final protected static String PALETTE_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String PROPERTY_PROVIDER_CLASS_NAME_EDEFAULT = null;
    public String getPaletteProviderClassName ();
    public String getPaletteProviderClassNameGen ();
    public String getPropertyProviderClassName ();
    public String getPropertyProviderClassNameGen ();
    public void setPaletteProviderClassName (String newPaletteProviderClassName);
    public void setPropertyProviderClassName (String newPropertyProviderClassName);
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-93.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 12 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String referenceConnectionEditPolicyClassName = REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getReferenceConnectionEditPolicyClassName ();
    public String getReferenceConnectionEditPolicyClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-94.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected boolean liveValidationUIFeedback = LIVE_VALIDATION_UI_FEEDBACK_EDEFAULT;
    final protected static boolean LIVE_VALIDATION_UI_FEEDBACK_EDEFAULT = false;
[GenDiagramImpl-95.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String externalNodeLabelHostLayoutEditPolicyClassName = EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String EXTERNAL_NODE_LABEL_HOST_LAYOUT_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getExternalNodeLabelHostLayoutEditPolicyClassName ();
    public String getExternalNodeLabelHostLayoutEditPolicyClassNameGen ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
[GenDiagramImpl-96.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected GenDiagramPreferences preferences = null;
[GenDiagramImpl-97.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String preferencesPackageName = PREFERENCES_PACKAGE_NAME_EDEFAULT;
    final protected static String PREFERENCES_PACKAGE_NAME_EDEFAULT = null;
    public String getPreferencesPackageName ();
[GenDiagramImpl-98.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 11 garbage recoveries were required (larger size recommended for improved performance)
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
    protected String editProvidersPackageName = EDIT_PROVIDERS_PACKAGE_NAME_EDEFAULT;
    final protected static String EDIT_PROVIDERS_PACKAGE_NAME_EDEFAULT = null;
    public String getEditProvidersPackageName ();
public class GenDiagramImpl extends GenCommonBaseImpl implements GenDiagram {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addBaseItemSemanticEditPolicyClassNamePropertyDescriptor (Object object);
    protected void addCreationWizardClassNamePropertyDescriptor (Object object);
    protected void addCreationWizardPageClassNamePropertyDescriptor (Object object);
    protected void addDiagramEditorUtilClassNamePropertyDescriptor (Object object);
    protected void addSemanticHintsClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addNotationViewFactoriesPackageNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addValidationEnabledPropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addPluginClassNamePropertyDescriptor (Object object);
    protected void addPluginIDPropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addEditorClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addPaletteProviderClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addMetamodelSupportProviderClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addMetricProviderClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addEditHelperClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addShortcutsDecoratorProviderClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addValidationDecoratorProviderClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addPaletteProviderClassNamePropertyDescriptor (Object object);
    protected void addPropertyProviderClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addStructuralFeatureParserClassNamePropertyDescriptor (Object object);
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramPreferencesImpl extends EObjectImpl implements GenDiagramPreferences {
    protected GenColor fillColor = null;
    protected GenColor fontColor = null;
    protected GenColor lineColor = null;
    protected GenColor noteFillColor = null;
    protected GenColor noteLineColor = null;
    protected GenFont defaultFont = null;
public class GenDiagramPreferencesImpl extends EObjectImpl implements GenDiagramPreferences {
    protected GenColor fillColor;
    protected GenColor fontColor;
    protected GenColor lineColor;
    protected GenColor noteFillColor;
    protected GenColor noteLineColor;
    protected GenFont defaultFont;
public class GenDiagramPreferencesImpl extends EObjectImpl implements GenDiagramPreferences {
public class GenDiagramPreferencesImpl extends EObjectImpl implements GenDiagramPreferences {
    protected GenColor gridLineColor;
    protected LineStyle gridLineStyle = GRID_LINE_STYLE_EDEFAULT;
    protected boolean gridInFront = GRID_IN_FRONT_EDEFAULT;
    protected boolean snapToGeometry = SNAP_TO_GEOMETRY_EDEFAULT;
    final protected static LineStyle GRID_LINE_STYLE_EDEFAULT = LineStyle.SOLID;
    final protected static boolean GRID_IN_FRONT_EDEFAULT = true;
    final protected static boolean SNAP_TO_GEOMETRY_EDEFAULT = false;
    public void setGridInFront (boolean newGridInFront);
    public void setGridLineColor (GenColor newGridLineColor);
public class GenDiagramPreferencesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramPreferencesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDiagramPreferencesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDiagramPreferencesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addGridInFrontPropertyDescriptor (Object object);
public class GenDiagramUpdaterImpl extends EObjectImpl implements GenDiagramUpdater {
public class GenDiagramUpdaterImpl extends EObjectImpl implements GenDiagramUpdater {
public class GenDiagramUpdaterImpl extends EObjectImpl implements GenDiagramUpdater {
public class GenDiagramUpdaterImpl extends EObjectImpl implements GenDiagramUpdater {
public class GenDomainAttributeTargetImpl extends GenAuditableImpl implements GenDomainAttributeTarget {
    protected GenFeature attribute = null;
public class GenDomainAttributeTargetImpl extends GenAuditableImpl implements GenDomainAttributeTarget {
    protected GenFeature attribute;
public class GenDomainAttributeTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenDomainAttributeTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenDomainAttributeTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDomainAttributeTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDomainAttributeTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDomainAttributeTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenDomainElementTargetImpl extends GenAuditableImpl implements GenDomainElementTarget {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenDomainElementTargetImpl extends GenAuditableImpl implements GenDomainElementTarget {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenDomainElementTargetImpl extends GenAuditableImpl implements GenDomainElementTarget {
    protected GenClass element = null;
public class GenDomainElementTargetImpl extends GenAuditableImpl implements GenDomainElementTarget {
    protected GenClass element;
public class GenDomainElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenDomainElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenDomainElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDomainElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDomainElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenDomainElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenMetricContainer metrics = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected String copyrightText = COPYRIGHT_TEXT_EDEFAULT;
    final protected static String COPYRIGHT_TEXT_EDEFAULT = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenExpressionProviderContainer expressionProviders = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenNavigator navigator = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenPropertySheet propertySheet = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenApplication application = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenAuditContainer audits = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenAuditRoot audits = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenApplication application = null;
    protected GenAuditRoot audits = null;
    protected GenDiagram diagram = null;
    protected GenEditorView editor = null;
    protected GenExpressionProviderContainer expressionProviders = null;
    protected GenMetricContainer metrics = null;
    protected GenModel domainGenModel = null;
    protected GenNavigator navigator = null;
    protected GenPlugin plugin = null;
    protected GenPropertySheet propertySheet = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenApplication application;
    protected GenAuditRoot audits;
    protected GenDiagram diagram;
    protected GenEditorView editor;
    protected GenExpressionProviderContainer expressionProviders;
    protected GenMetricContainer metrics;
    protected GenModel domainGenModel;
    protected GenNavigator navigator;
    protected GenPlugin plugin;
    protected GenPropertySheet propertySheet;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenDiagramUpdater diagramUpdater;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected DynamicModelAccess modelAccess;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenParsers labelParsers;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    @Override
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    @SuppressWarnings("unchecked")
    @Override
    protected EList < GenContextMenu > contextMenus;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected String diagramFileExtension = DIAGRAM_FILE_EXTENSION_EDEFAULT;
    protected String domainFileExtension = DOMAIN_FILE_EXTENSION_EDEFAULT;
    protected boolean sameFileForDiagramAndModel = SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT;
    final protected static String DIAGRAM_FILE_EXTENSION_EDEFAULT = null;
    final protected static String DOMAIN_FILE_EXTENSION_EDEFAULT = null;
    final protected static boolean SAME_FILE_FOR_DIAGRAM_AND_MODEL_EDEFAULT = false;
    public String getDiagramFileExtension ();
    public String getDiagramFileExtensionGen ();
    public String getDomainFileExtension ();
    public void setDiagramFileExtension (String newDiagramFileExtension);
    public void setSameFileForDiagramAndModel (boolean newSameFileForDiagramAndModel);
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected GenEditorView editor = null;
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
    protected String templateDirectory = TEMPLATE_DIRECTORY_EDEFAULT;
    protected boolean dynamicTemplates = DYNAMIC_TEMPLATES_EDEFAULT;
    final protected static String TEMPLATE_DIRECTORY_EDEFAULT = null;
    final protected static boolean DYNAMIC_TEMPLATES_EDEFAULT = false;
    public void setTemplateDirectory (String newTemplateDirectory);
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorImpl extends EObjectImpl implements GenEditorGenerator {
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramFileExtensionPropertyDescriptor (Object object);
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorGeneratorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
    protected String contextID = CONTEXT_ID_EDEFAULT;
    final protected static String CONTEXT_ID_EDEFAULT = null;
    public String getContextID ();
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
    protected String iconPath = ICON_PATH_EDEFAULT;
    final protected static String ICON_PATH_EDEFAULT = null;
    public String getIconPath ();
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
    protected boolean eclipseEditor = ECLIPSE_EDITOR_EDEFAULT;
    final protected static boolean ECLIPSE_EDITOR_EDEFAULT = true;
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
    final protected static String ICON_PATH_X_EDEFAULT = null;
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenEditorViewItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenElementInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenElementInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GeneralFacetImpl extends EObjectImpl implements GeneralFacet {
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GeneralFacetImpl extends EObjectImpl implements GeneralFacet {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GeneralFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GeneralFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GeneralFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GeneralFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenerateLiteGMAction implements DashboardAction {
    public boolean isEnabled ();
    public void init (DashboardFacade context);
    public void run ();
public class GenerateLiteGMAction extends TransformMap2GenModelAction {
    protected void configureOptions (TransformOptions options);
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
    @SuppressWarnings("unchecked")
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
    private static class StandaloneGeneratorOptionsDialog extends FigureGeneratorOptionsDialog {
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
    private static class StandaloneGeneratorOptionsDialog extends FigureGeneratorOptionsDialog {
        public String getTemplatesPath ();
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
    @SuppressWarnings("unchecked")
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
    private static class StandaloneGeneratorOptionsDialog extends Dialog {
        protected Control createDialogArea (Composite parent);
        protected void configureShell (Shell newShell);
        protected void okPressed ();
        protected void validateInput ();
        public StandaloneGeneratorOptionsDialog (Shell parentShell, String initialPluginId, boolean initialUseRuntimeFigures, IInputValidator pluginIdValidator) {
            super (parentShell);
            pluginId = initialPluginId;
            if (pluginId == null) {
                pluginId = "";
            this.pluginIdValidator = pluginIdValidator;
            useRuntimeFigures = initialUseRuntimeFigures;
        public String getPluginId ();
        public boolean isUseRuntimeFigures ();
        public void setErrorMessage (String errorMessage);
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
    private static class StandaloneGeneratorOptionsDialog extends Dialog {
        protected Control createDialogArea (Composite parent);
        public StandaloneGeneratorOptionsDialog (Shell parentShell, String initialPluginId, boolean initialUseRuntimeFigures, IInputValidator pluginIdValidator) {
            super (parentShell);
            pluginId = initialPluginId;
            if (pluginId == null) {
                pluginId = "";
            this.pluginIdValidator = pluginIdValidator;
            useRuntimeFigures = initialUseRuntimeFigures;
        public boolean isUseRuntimeFigures ();
        public void setErrorMessage (String errorMessage);
public class GeneratePluginAction implements IInputValidator, IObjectActionDelegate {
    private static class StandaloneGeneratorOptionsDialog extends FigureGeneratorOptionsDialog {
        protected void warnLiteVerstionDoesNotSupportMapMode ();
        public StandaloneGeneratorOptionsDialog (Shell parentShell, String initialPluginId, boolean initialUseRuntimeFigures, IInputValidator pluginIdValidator) {
        public StandaloneGeneratorOptionsDialog (Shell parentShell, String initialPluginId, boolean initialUseRuntimeFigures, boolean initialUseMapMode, IInputValidator pluginIdValidator) {
            super (parentShell, "Figure Gallery Generator", initialUseRuntimeFigures, initialUseMapMode);
            pluginId = initialPluginId;
            if (pluginId == null) {
                pluginId = "";
            this.pluginIdValidator = pluginIdValidator;
            shouldWarnLiteVerstionDoesNotSupportMapMode = Platform.getBundle ("org.eclipse.gmf.codegen.lite") != null;
public class Generator extends GeneratorBase implements Runnable {
    final private static class Counter {
    public Generator (GenEditorGenerator genModel) {
public class Generator extends GeneratorBase implements Runnable {
    final private static class Counter {
        @SuppressWarnings("unchecked")
    public Generator (GenEditorGenerator genModel, CodegenEmitters emitters) {
public class Generator extends GeneratorBase implements Runnable {
    final private static class Counter {
        @SuppressWarnings("unchecked")
        protected int process (EObject next);
        public Counter () {
        public int getTotal (EObject from);
        public void registerValue (EClass eClass, int count);
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    @Override
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    public Generator (GenEditorGenerator genModel, CodegenEmitters emitters) {
public class Generator extends GeneratorBase implements Runnable {
    final private static class Counter {
        public int getCount (EClass eClass);
        public void count (EObject start);
        public void curiousAbout (EClass eClass);
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    public static String getConstraintProviders (Object plugin) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    @Override
public class Generator extends GeneratorBase implements Runnable {
    public static String getConstraintProviders (Object plugin) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    @SuppressWarnings("unchecked")
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
[Generator-249.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-249.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'Generator-250.java' as a [program], at or near:
[Generator-250.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-250.java, Txl/api_clone_java.Txl] : TXL0192E line 94 of Generator-250.java - Syntax error at or near:
[Generator-251.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-251.java, Txl/api_clone_java.Txl] : TXL0192E line 94 of Generator-251.java - Syntax error at or near:
[Generator-252.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-252.java, Txl/api_clone_java.Txl] : TXL0192E line 94 of Generator-252.java - Syntax error at or near:
[Generator-253.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-253.java, Txl/api_clone_java.Txl] : TXL0192E line 96 of Generator-253.java - Syntax error at or near:
[Generator-254.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-254.java, Txl/api_clone_java.Txl] : TXL0192E line 96 of Generator-254.java - Syntax error at or near:
[Generator-255.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-255.java, Txl/api_clone_java.Txl] : TXL0192E line 95 of Generator-255.java - Syntax error at or near:
[Generator-256.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-256.java, Txl/api_clone_java.Txl] : TXL0192E line 95 of Generator-256.java - Syntax error at or near:
[Generator-257.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-257.java, Txl/api_clone_java.Txl] : TXL0192E line 96 of Generator-257.java - Syntax error at or near:
[Generator-258.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-258.java, Txl/api_clone_java.Txl] : TXL0192E line 101 of Generator-258.java - Syntax error at or near:
[Generator-259.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-259.java, Txl/api_clone_java.Txl] : TXL0192E line 106 of Generator-259.java - Syntax error at or near:
[Generator-260.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[Generator-260.java, Txl/api_clone_java.Txl] : TXL0192E line 106 of Generator-260.java - Syntax error at or near:
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    @SuppressWarnings("unchecked")
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    public static String getConstraintProviders (Object plugin) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
public class Generator extends GeneratorBase implements Runnable {
    public static String getConstraintProviders (Object plugin) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException;
public class Generator extends GeneratorBase implements Runnable {
package org.eclipse.gmf.internal.codegen.lite;
public class Generator extends GeneratorBase implements Runnable {
    @Override
    protected TextMerger createMergeService ();
    @SuppressWarnings("unchecked")
    protected void customRun () throws InterruptedException, UnexpectedBehaviourException;
    @SuppressWarnings("unchecked")
    protected void generatePropertySheetSections () throws InterruptedException, UnexpectedBehaviourException;
    public Generator (GenEditorGenerator genModel, CodegenEmitters emitters) {
package org.eclipse.gmf.codegen.util;
public class Generator implements Runnable {
    final private static class Counter {
        public int getTotal ();
        public void setAdditionalOperations (int additionalOps);
        public void setOperationsPerCompartment (int opsPerCompartment);
        public void setOperationsPerLink (int opsPerLink);
        public void setOperationsPerListContainerNode (int opsPerChild);
        public void setOperationsPerNode (int opsPerNode);
    public Generator (GenDiagram diagram) {
    public IStatus getRunStatus ();
    public void run ();
    public void run (IProgressMonitor progress) throws InterruptedException;
    public void setProgressMonitor (IProgressMonitor progress);
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
public class Generator implements Runnable {
    public IStatus getRunStatus ();
    public void run ();
    public void run (IProgressMonitor progress) throws InterruptedException;
    public void setProgressMonitor (IProgressMonitor progress);
public class Generator extends GeneratorBase implements Runnable {
    protected URL getJMergeControlFile ();
    final protected List createReferencedProjectsList ();
    protected void customRun () throws InterruptedException, JETException, UnexpectedBehaviourException;
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    public Generator (GenDiagram diagram) {
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
    final private static class Counter {
        public int getTotal ();
        public void setAdditionalOperations (int additionalOps);
        public void setOperationsPerCompartment (int opsPerCompartment);
        public void setOperationsPerLink (int opsPerLink);
        public void setOperationsPerListContainerNode (int opsPerChild);
        public void setOperationsPerNode (int opsPerNode);
public class Generator extends GeneratorBase implements Runnable {
    final private static class Counter {
        protected int process (EObject next);
        public Counter () {
        public int getTotal (EObject from);
        public void registerValue (EClass eClass, int count);
public class Generator extends GeneratorBase implements Runnable {
public class Generator extends GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
    final protected static class Counter {
        @SuppressWarnings("unchecked")
        protected int process (EObject next);
        public Counter () {
        public int getTotal (EObject from);
        public void registerFactor (EClass eClass, int count);
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
    protected String mergeJavaCode (String oldContents, String generatedText, IProgressMonitor pm) throws JavaModelException;
    protected String mergePlainText (String oldText, String genText, IFile oldRes, IProgressMonitor pm);
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
    final protected void doGenerateJavaClass (TextEmitter emitter, String packageName, String className, Object [] input) throws InterruptedException;
abstract public class GeneratorBase implements Runnable {
    final protected void doGenerateJavaClass (TextEmitter emitter, String packageName, String className, Object...input) throws InterruptedException;
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
    final protected static class Counter {
        @SuppressWarnings("unchecked")
abstract public class GeneratorBase implements Runnable {
    final protected static class Counter {
[GeneratorBase-33.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GeneratorBase-33.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GeneratorBase-34.java' as a [program], at or near:
[GeneratorBase-34.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GeneratorBase-34.java, Txl/api_clone_java.Txl] : TXL0192E line 189 of GeneratorBase-34.java - Syntax error at or near:
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
abstract public class GeneratorBase implements Runnable {
public class GenericEMFPropertiesProvider extends AbstractProvider implements IPropertiesProvider {
public class GenericEMFPropertiesProvider extends AbstractProvider implements IPropertiesProvider {
public class GenericEMFPropertiesProvider extends AbstractProvider implements IPropertiesProvider {
public class GenericEMFPropertiesProvider extends AbstractProvider implements IPropertiesProvider {
public class GenericStyleSelectorImpl extends EObjectImpl implements GenericStyleSelector {
    protected EClass eStaticClass (); protected EList values = null;
    public EList getValues ();
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class GenericStyleSelectorImpl extends EObjectImpl implements GenericStyleSelector {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < AppearanceStyle > values = null;
public class GenericStyleSelectorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenericStyleSelectorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenericStyleSelectorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenericStyleSelectorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenericToolImpl extends AbstractToolImpl implements GenericTool {
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenericToolImpl extends AbstractToolImpl implements GenericTool {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenericToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenericToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class GenericToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenericToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
    protected EClass eStaticClass (); protected EList requiredPluginIDs = null;
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < String > requiredPluginIDs = null;
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
    protected EList < String > requiredPluginIDs = null;
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
    protected EList < String > requiredPluginIDs;
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
    protected EList < String > requiredPluginIDs;
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
    @SuppressWarnings("unchecked")
    @Override
public class GenExpressionInterpreterImpl extends GenExpressionProviderBaseImpl implements GenExpressionInterpreter {
    @Override
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExpressionInterpreterItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    public String getQualifiedInstanceClassName (GenClassifier genClassifier);
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    public void setContainer (GenExpressionProviderContainer newContainer);
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    public void setContainer (GenExpressionProviderContainer newContainer);
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    @Override
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    @SuppressWarnings("unchecked")
    @Override
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    protected EClass eStaticClass (); protected EList expressions = null;
    public EList getExpressions ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < ValueExpression > expressions = null;
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    protected EList < ValueExpression > expressions = null;
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    protected EList < ValueExpression > expressions;
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
    public void setContainer (GenExpressionProviderContainer newContainer);
abstract public class GenExpressionProviderBaseImpl extends EObjectImpl implements GenExpressionProviderBase {
public class GenExpressionProviderBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenExpressionProviderBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenExpressionProviderBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExpressionProviderBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExpressionProviderBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenExpressionProviderBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
    protected EClass eStaticClass (); protected EList providers = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenExpressionProviderBase > providers = null;
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
    protected EList < GenExpressionProviderBase > providers = null;
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
    protected EList < GenExpressionProviderBase > providers;
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerImpl extends EObjectImpl implements GenExpressionProviderContainer {
public class GenExpressionProviderContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenExpressionProviderContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenExpressionProviderContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExpressionProviderContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExternalNodeLabelImpl extends GenNodeLabelImpl implements GenExternalNodeLabel {
    protected String textEditPartClassName = TEXT_EDIT_PART_CLASS_NAME_EDEFAULT;
    protected String textNotationViewFactoryClassName = TEXT_NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT;
    final protected static String TEXT_EDIT_PART_CLASS_NAME_EDEFAULT = null;
    final protected static String TEXT_NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT = null;
    public String getSemanticHintLabelFieldName ();
    public String getTextEditPartClassName ();
    public String getTextEditPartClassNameGen ();
    public String getTextEditPartQualifiedClassName ();
    public String getTextNotationViewFactoryClassName ();
    public String getTextNotationViewFactoryClassNameGen ();
    public String getTextNotationViewFactoryQualifiedClassName ();
    public String toString ();
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setTextEditPartClassName (String newTextEditPartClassName);
    public void setTextNotationViewFactoryClassName (String newTextNotationViewFactoryClassName);
public class GenExternalNodeLabelImpl extends GenNodeLabelImpl implements GenExternalNodeLabel {
public class GenExternalNodeLabelImpl extends GenNodeLabelImpl implements GenExternalNodeLabel {
    public String getClassNameSuffux ();
public class GenExternalNodeLabelImpl extends GenNodeLabelImpl implements GenExternalNodeLabel {
public class GenExternalNodeLabelImpl extends GenNodeLabelImpl implements GenExternalNodeLabel {
public class GenExternalNodeLabelImpl extends GenNodeLabelImpl implements GenExternalNodeLabel {
    @Override
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addTextEditPartClassNamePropertyDescriptor (Object object);
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenExternalNodeLabelItemProvider extends GenNodeLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
    protected GenClass elementClass = null;
    public GenClass basicGetElementClass ();
    public GenClass getElementClass ();
    public GenClass getElementClassGen ();
    public GenReferenceNewElementSpec getCreatingInitializer ();
    public List < GenFeatureSeqInitializer > getAllFeatureSeqInitializers ();
    public String getInitializerFieldName (String elementID);
    public TypeModelFacet basicGetTypeModelFacet ();
    public void setElementClass (GenClass newElementClass);
    public void setElementClassGen (GenClass newElementClass);
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
    protected EClass eStaticClass (); protected EList initializers = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenFeatureInitializer > initializers = null;
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
    protected EList < GenFeatureInitializer > initializers = null;
    protected GenClass elementClass = null;
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
    protected EList < GenFeatureInitializer > initializers;
    protected GenClass elementClass;
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
    public LinkedHashSet < GenFeatureValueSpec > getJavaExpressionFeatureInitializers (GenExpressionProviderContainer expressionProviders);
    public List < GenFeatureSeqInitializer > getAllFeatureSeqInitializers ();
    public String getElementClassAccessor ();
    public String getElementClassAccessor (ImportAssistant importAssistant);
    public String getElementClassAccessorName ();
    public String getElementQualifiedPackageInterfaceName ();
    public String getFeatureAccessor (GenFeatureInitializer featureInitializer, ImportAssistant importAssistant);
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
public class GenFeatureSeqInitializerItemProvider extends GenElementInitializerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenFeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenFeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenFeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenFeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenFeatureSeqInitializerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
interface GenFeatureValueSpec extends ValueExpression {
interface GenFeatureValueSpec extends GenFeatureInitializer, ValueExpression {
interface GenFeatureValueSpec extends GenFeatureInitializer, ValueExpression {
interface GenFeatureValueSpec extends GenFeatureInitializer {
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public void setFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public void setFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
public class GenFeatureValueSpecImpl extends EObjectImpl implements GenFeatureValueSpec {
    protected ValueExpression value;
    public ValueExpression basicGetValue ();
    public void setValue (ValueExpression newValue);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public GenFeatureSeqInitializer getFeatureSeqInitializer ();
    public NotificationChain basicSetFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void setFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public void setFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    protected GenFeature feature = null;
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    protected GenFeature feature;
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
    public List < GenFeatureSeqInitializer > getAllFeatureSeqInitializers ();
public class GenFeatureValueSpecImpl extends ValueExpressionImpl implements GenFeatureValueSpec {
public class GenFeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenFeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenFeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenFeatureValueSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenFeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenFeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenFeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenFeatureValueSpecItemProvider extends ValueExpressionItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenGroupMarkerImpl extends GenContributionItemImpl implements GenGroupMarker {
public class GenGroupMarkerImpl extends EObjectImpl implements GenGroupMarker {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
public class GenGroupMarkerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenGroupMarkerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenGroupMarkerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenGroupMarkerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenGroupMarkerItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenGroupMarkerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenJavaExpressionProviderImpl extends GenExpressionProviderBaseImpl implements GenJavaExpressionProvider {
public class GenJavaExpressionProviderImpl extends GenExpressionProviderBaseImpl implements GenJavaExpressionProvider {
    @Override
    protected EClass eStaticClass ();
    @Override
public class GenJavaExpressionProviderImpl extends GenExpressionProviderBaseImpl implements GenJavaExpressionProvider {
    @Override
public class GenJavaExpressionProviderImpl extends GenExpressionProviderBaseImpl implements GenJavaExpressionProvider {
public class GenJavaExpressionProviderImpl extends GenExpressionProviderBaseImpl implements GenJavaExpressionProvider {
    public String getOperationName (ValueExpression expression);
public class GenJavaExpressionProviderImpl extends GenExpressionProviderBaseImpl implements GenJavaExpressionProvider {
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    protected boolean injectExpressionBody = INJECT_EXPRESSION_BODY_EDEFAULT;
    protected boolean throwException = THROW_EXCEPTION_EDEFAULT;
    final protected static boolean INJECT_EXPRESSION_BODY_EDEFAULT = false;
    final protected static boolean THROW_EXCEPTION_EDEFAULT = true;
    public boolean isInjectExpressionBody ();
    public boolean isThrowException ();
    public void setInjectExpressionBody (boolean newInjectExpressionBody);
    public void setThrowException (boolean newThrowException);
public class GenJavaExpressionProviderItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenJavaExpressionProviderItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenJavaExpressionProviderItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenJavaExpressionProviderItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenJavaExpressionProviderItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenJavaExpressionProviderItemProvider extends GenExpressionProviderBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addInjectExpressionBodyPropertyDescriptor (Object object);
interface GenLabel extends GenCommonBase {
public interface GenLabel extends GenCommonBase {
    final public static String CLASS_NAME_PREFIX = "Label";
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    protected boolean elementIcon = ELEMENT_ICON_EDEFAULT;
    final protected static boolean ELEMENT_ICON_EDEFAULT = false;
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    protected boolean readOnly = READ_ONLY_EDEFAULT;
    final protected static boolean READ_ONLY_EDEFAULT = false;
    public void setReadOnly (boolean newReadOnly);
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    protected boolean readOnly = READ_ONLY_EDEFAULT;
    final protected static boolean READ_ONLY_EDEFAULT = false;
    public void setReadOnly (boolean newReadOnly);
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public static EList getMetaFeatures (LabelModelFacet modelFacet);
    public void eSet (int featureID, Object newValue);
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    protected LabelModelFacet modelFacet = null;
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    protected LabelModelFacet modelFacet;
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    protected FeatureModelFacet modelFacet = null;
    public FeatureModelFacet getModelFacet ();
    public GenFeature getMetaFeature ();
abstract public class GenLabelImpl extends GenCommonBaseImpl implements GenLabel {
    protected LabelModelFacet modelFacet = null;
    public EList getMetaFeatures ();
    public LabelModelFacet getModelFacet ();
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLabelItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
[GenLanguage-3.java, Txl/api_clone_java.Txl] : TXL0192E line 24 of GenLanguage-3.java - Syntax error at or near:
interface GenLink extends GenCommonBase {
interface GenLink extends ElementType, GenCommonBase {
interface GenLink extends ElementType, GenCommonBase {
interface GenLink extends GenCommonBase {
interface GenLink extends GenCommonBase {
public interface GenLink extends GenCommonBase {
    final public static String CLASS_NAME_PREFIX = "Link";
public interface GenLink extends GenCommonBase {
public interface GenLink extends GenCommonBase {
    final public static String CREATE_COMMAND_SUFFIX = "CreateCommand";
    final public static String REORIENT_COMMAND_SUFFIX = "ReorientCommand";
public interface GenLink extends GenCommonBase {
public interface GenLink extends GenCommonBase, GenLinkEnd {
interface GenLink extends GenBaseElement {
interface GenLink extends GenCommonBase {
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    protected GenConstraint sourceEnd = null;
    protected GenConstraint targetEnd = null;
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    protected GenConstraint sourceEnd;
    protected GenConstraint targetEnd;
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    public NotificationChain basicSetSourceEnd (GenConstraint newSourceEnd, NotificationChain msgs);
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    public GenConstraint basicGetSourceEnd ();
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    protected ValueExpression sourceEnd = null;
    protected ValueExpression targetEnd = null;
    public NotificationChain basicSetSourceEnd (ValueExpression newSourceEnd, NotificationChain msgs);
    public ValueExpression getSourceEnd ();
    public void setSourceEnd (ValueExpression newSourceEnd);
    public void setTargetEnd (ValueExpression newTargetEnd);
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    protected GenConstraint sourceEnd = null;
    protected GenConstraint targetEnd = null;
    public GenConstraint getSourceEnd ();
    public NotificationChain basicSetSourceEnd (GenConstraint newSourceEnd, NotificationChain msgs);
    public void setSourceEnd (GenConstraint newSourceEnd);
    public void setTargetEnd (GenConstraint newTargetEnd);
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class GenLinkConstraintsImpl extends EObjectImpl implements GenLinkConstraints {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenLinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenLinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class GenLinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
    @Override
public class GenLinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addSourceEndPropertyDescriptor (Object object);
abstract public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
    protected GenFeature domainLinkTargetFeature = null;
    public GenFeature basicGetDomainLinkTargetFeature ();
    public void setDomainLinkTargetFeature (GenFeature newDomainLinkTargetFeature);
public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
    protected LinkModelFacet modelFacet = null;
    public LinkModelFacet getModelFacet ();
    public String getClassNamePrefix ();
    public String getClassNameSuffux ();
    public void setModelFacet (LinkModelFacet newModelFacet);
public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected boolean incomingCreationAllowed = INCOMING_CREATION_ALLOWED_EDEFAULT;
    protected boolean outgoingCreationAllowed = OUTGOING_CREATION_ALLOWED_EDEFAULT;
    final protected static boolean INCOMING_CREATION_ALLOWED_EDEFAULT = true;
    final protected static boolean OUTGOING_CREATION_ALLOWED_EDEFAULT = true;
    public boolean isIncomingCreationAllowed ();
    public void setOutgoingCreationAllowed (boolean newOutgoingCreationAllowed);
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected boolean viewDirectionAlignedWithModel = VIEW_DIRECTION_ALIGNED_WITH_MODEL_EDEFAULT;
    final protected static boolean VIEW_DIRECTION_ALIGNED_WITH_MODEL_EDEFAULT = true;
    public void setViewDirectionAlignedWithModel (boolean newViewDirectionAlignedWithModel);
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected GenLinkConstraints creationConstraints = null;
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    final protected static boolean INCOMING_CREATION_ALLOWED_EDEFAULT = true;
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    final protected static boolean INCOMING_CREATION_ALLOWED_EDEFAULT = false;
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    public EList getSources ();
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;
    final protected static String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    public String getEditHelperClassName ();
    public String getEditHelperClassNameGen ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;
    final protected static String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    public String getEditHelperClassName ();
    public String getEditHelperClassNameGen ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    public EList getSources ();
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    public EList getAssistantSources ();
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected EClass eStaticClass ();
    protected EList getParticipants (EList participantTypes); protected EList labels = null;
    public EList getAssistantSources ();
    public EList getAssistantTargets ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue);
    protected EList < GenCommonBase > getParticipants (EList < GenClass > participantTypes); protected EList < GenLinkLabel > labels = null;
    public EList < GenCommonBase > getAssistantSources ();
    public EList < GenCommonBase > getAssistantTargets ();
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected String reorientCommandClassName = REORIENT_COMMAND_CLASS_NAME_EDEFAULT;
    final protected static String REORIENT_COMMAND_CLASS_NAME_EDEFAULT = null;
    public String getReorientCommandClassName ();
    public String getReorientCommandClassNameGen ();
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected EList < GenLinkLabel > labels = null;
    protected GenLinkConstraints creationConstraints = null;
    protected LinkModelFacet modelFacet = null;
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected EList < GenLinkLabel > labels;
    protected GenLinkConstraints creationConstraints;
    protected LinkModelFacet modelFacet;
    protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
    final protected static String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
    public String getCreateCommandClassName ();
    public String getCreateCommandClassNameGen ();
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected boolean treeBranch = TREE_BRANCH_EDEFAULT;
    final protected static boolean TREE_BRANCH_EDEFAULT = false;
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    final protected static boolean TREE_BRANCH_EDEFAULT = false;
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    final protected static boolean TREE_BRANCH_EDEFAULT = true;
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public EList < GenLink > getGenIncomingLinks ();
    public EList < GenLink > getGenOutgoingLinks ();
    public EList < GenLinkEnd > getSources ();
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
public class GenLinkImpl extends GenCommonBaseImpl implements GenLink {
    protected boolean sourceReorientingAllowed = SOURCE_REORIENTING_ALLOWED_EDEFAULT;
    protected boolean targetReorientingAllowed = TARGET_REORIENTING_ALLOWED_EDEFAULT;
    final protected static boolean SOURCE_REORIENTING_ALLOWED_EDEFAULT = true;
    final protected static boolean TARGET_REORIENTING_ALLOWED_EDEFAULT = true;
    public boolean isSourceReorientingAllowed ();
    public void setSourceReorientingAllowed (boolean newSourceReorientingAllowed);
abstract public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
    protected String figureQualifiedClassName = FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT;
    protected String lineStyle = LINE_STYLE_EDEFAULT;
    protected String sourceDecorationFigureQualifiedClassName = SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT;
    protected String targetDecorationFigureQualifiedClassName = TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT;
    final protected static String FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT = "org.eclipse.draw2d.PolylineConnection";
    final protected static String LINE_STYLE_EDEFAULT = null;
    final protected static String SOURCE_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT = null;
    final protected static String TARGET_DECORATION_FIGURE_QUALIFIED_CLASS_NAME_EDEFAULT = null;
    public String getFigureQualifiedClassName ();
    public String getLineStyle ();
    public String getSourceDecorationFigureQualifiedClassName ();
    public String getTargetDecorationFigureQualifiedClassName ();
    public void setFigureQualifiedClassName (String newFigureQualifiedClassName);
    public void setLineStyle (String newLineStyle);
    public void setSourceDecorationFigureQualifiedClassName (String newSourceDecorationFigureQualifiedClassName);
    public void setTargetDecorationFigureQualifiedClassName (String newTargetDecorationFigureQualifiedClassName);
abstract public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
abstract public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
    protected EStructuralFeature domainLinkTargetFeature = null;
    public EStructuralFeature basicGetDomainLinkTargetFeature ();
    public void setDomainLinkTargetFeature (EStructuralFeature newDomainLinkTargetFeature);
abstract public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
    protected GenFeature domainLinkTargetFeature = null;
    public GenFeature basicGetDomainLinkTargetFeature ();
    public void setDomainLinkTargetFeature (GenFeature newDomainLinkTargetFeature);
abstract public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
abstract public class GenLinkImpl extends GenBaseElementImpl implements GenLink {
    protected EList labels = null;
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addGenIncomingLinksPropertyDescriptor (Object object);
    protected void addSourcesPropertyDescriptor (Object object);
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addIncomingCreationAllowedPropertyDescriptor (Object object);
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface GenLinkLabel extends ExternalLabel, GenLabel {
interface GenLinkLabel extends GenLabel {
interface GenLinkLabel extends GenLabel {
public interface GenLinkLabel extends GenLabel {
    final public static String TEXT_EDIT_PART_SUFFIX = "TextEditPart";
    final public static String TEXT_NOTATION_VIEW_FACTORY_SUFFIX = "TextViewFactory";
public interface GenLinkLabel extends GenLabel {
    final public static String TEXT_EDIT_PART_SUFFIX = "TextEditPart";
    final public static String TEXT_NOTATION_VIEW_FACTORY_SUFFIX = "TextViewFactory";
interface GenLinkLabel extends ExternalLabel, GenLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    protected String textEditPartClassName = TEXT_EDIT_PART_CLASS_NAME_EDEFAULT;
    protected String textNotationViewFactoryClassName = TEXT_NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT;
    final protected static String TEXT_EDIT_PART_CLASS_NAME_EDEFAULT = null;
    final protected static String TEXT_NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT = null;
    public String getSemanticHintLabelFieldName ();
    public String getTextEditPartClassName ();
    public String getTextEditPartClassNameGen ();
    public String getTextEditPartQualifiedClassName ();
    public String getTextNotationViewFactoryClassName ();
    public String getTextNotationViewFactoryClassNameGen ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public void setTextEditPartClassName (String newTextEditPartClassName);
    public void setTextNotationViewFactoryClassName (String newTextNotationViewFactoryClassName);
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    protected String textNotationViewFactoryClassName = TEXT_NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT;
    final protected static String TEXT_NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT = null;
    public String getTextNotationViewFactoryClassName ();
    public String getTextNotationViewFactoryClassNameGen ();
    public void setTextNotationViewFactoryClassName (String newTextNotationViewFactoryClassName);
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
    protected String textEditPartClassName = TEXT_EDIT_PART_CLASS_NAME_EDEFAULT;
    final protected static String TEXT_EDIT_PART_CLASS_NAME_EDEFAULT = null;
    public String getTextEditPartClassName ();
    public String getTextEditPartClassNameGen ();
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelImpl extends GenLabelImpl implements GenLinkLabel {
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addTextEditPartClassNamePropertyDescriptor (Object object);
public class GenLinkLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenLinkLabelTraceImpl extends MatchingTraceImpl implements GenLinkLabelTrace {
public class GenLinkLabelTraceImpl extends MatchingTraceImpl implements GenLinkLabelTrace {
public class GenLinkTraceImpl extends MatchingTraceImpl implements GenLinkTrace {
    protected EClass eStaticClass (); protected EList linkLabelTraces = null;
    public EList getLinkLabelTraces ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenLinkTraceImpl extends MatchingTraceImpl implements GenLinkTrace {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenLinkLabelTrace > linkLabelTraces;
public class GenLinkTraceImpl extends MatchingTraceImpl implements GenLinkTrace {
public class GenLinkTraceImpl extends MatchingTraceImpl implements GenLinkTrace {
public class GenMenuManagerImpl extends GenContributionManagerImpl implements GenMenuManager {
public class GenMenuManagerImpl extends GenContributionManagerImpl implements GenMenuManager {
    @Override
    public GenEditorGenerator getEditorGen ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
public class GenMenuManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenMenuManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenMenuManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenMenuManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface GenMetricContainer extends GenRuleContainerBase {
interface GenMetricContainer extends EObject {
public class GenMetricContainerImpl extends GenRuleContainerBaseImpl implements GenMetricContainer {
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
    public GenEditorGenerator getEditorGen ();
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
    protected EClass eStaticClass (); protected EList metrics = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public Set getAllTargetedModelPackages ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenMetricRule > metrics = null;
    public Set < GenPackage > getAllTargetedModelPackages ();
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
    protected EList < GenMetricRule > metrics = null;
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
    protected EList < GenMetricRule > metrics;
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
    public void setEditorGen (GenEditorGenerator newEditorGen);
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
    public void setEditorGen (GenEditorGenerator newEditorGen);
public class GenMetricContainerImpl extends EObjectImpl implements GenMetricContainer {
public class GenMetricContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenMetricContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenMetricContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenMetricContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
    protected GenMeasurable target = null;
    protected ValueExpression rule = null;
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
    protected GenMeasurable target;
    protected ValueExpression rule;
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
public class GenMetricRuleImpl extends GenRuleBaseImpl implements GenMetricRule {
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenMetricRuleItemProvider extends GenRuleBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
class GenModelConfigurationPage extends ModelConfigurationPage {
    protected String getModelFileExtension ();
class GenModelConfigurationPage extends ModelConfigurationPage {
interface GenModelNamingMediator {
public interface GenModelNamingMediator {
    public class Empty implements GenModelNamingMediator {
        public void feed (GenChildNode childNode, NodeMapping nme);
        public void feed (GenCompartment genCompartment, CompartmentMapping mapping);
        public void feed (GenDiagram genDiagram, CanvasMapping cme);
        public void feed (GenLink genLink, LinkMapping lme);
        public void feed (GenLinkLabel label, LabelMapping labelMapping);
        public void feed (GenNodeLabel label, LabelMapping labelMapping);
        public void feed (GenTopLevelNode genNode, NodeMapping nme);
public interface GenModelNamingMediator {
    public class Empty implements GenModelNamingMediator {
public interface GenModelNamingMediator {
    public class Empty implements GenModelNamingMediator {
        public void reset ();
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
    protected static String getName (NamingStrategy strategy, EObject mapping);
    public NamingStrategy getEditHelper ();
    public void setEditHelper (NamingStrategy editHelper);
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
    public void feed (GenLinkLabel label, LinkMapping mapping);
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
    public void feed (GenLinkLabel label, LinkMapping mapping, LinkLabelMapping labelMapping);
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
    public void feed (GenLinkLabel label, LinkMapping mapping, LinkLabelMapping labelMapping);
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
    public void feed (GenLinkLabel label, LabelMapping labelMapping);
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
    public GenModelNamingMediatorImpl (UniqueValueDispenser dispenser) {
public class GenModelNamingMediatorImpl implements GenModelNamingMediator {
    public GenModelNamingMediatorImpl (NamesDispenser dispenser) {
public class GenNamingMediatorImpl implements GenNamingMediator {
    final public int getMode (); final public static int COLLECT_NAMES_MODE = 0;
    final public static int DISPENSE_NAMES_MODE = 1;
public class GenNamingMediatorImpl implements GenNamingMediator {
    public enum Mode {
        COLLECT_NAMES,
interface GenNavigator extends EObject {
interface GenNavigator extends GenDomainModelNavigator {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
    protected GenCommonBase child = null;
    protected GenCommonBase parent = null;
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
    protected GenCommonBase child;
    protected GenCommonBase parent;
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
    protected GenLabel label = null;
    public GenLabel basicGetLabel ();
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenNavigatorChildReferenceImpl extends EObjectImpl implements GenNavigatorChildReference {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenNavigatorChildReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorChildReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorChildReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenNavigatorChildReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenNavigatorChildReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNavigatorChildReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected EClass eStaticClass (); protected EList childReferences = null;
    public EList getChildReferences ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenNavigatorChildReference > childReferences = null;
    public EList < GenNavigatorChildReference > getChildReferences ();
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String domainContentExtensionID = DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT;
    protected String domainContentExtensionName = DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT;
    protected String domainContentExtensionPriority = DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT;
    protected String domainContentProviderClassName = DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String domainLabelProviderClassName = DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String domainModelElementTesterClassName = DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT;
    protected boolean generateDomainModelNavigator = GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT;
    final protected static String DOMAIN_CONTENT_EXTENSION_ID_EDEFAULT = null;
    final protected static String DOMAIN_CONTENT_EXTENSION_NAME_EDEFAULT = null;
    final protected static String DOMAIN_CONTENT_EXTENSION_PRIORITY_EDEFAULT = null;
    final protected static String DOMAIN_CONTENT_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String DOMAIN_LABEL_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String DOMAIN_MODEL_ELEMENT_TESTER_CLASS_NAME_EDEFAULT = null;
    final protected static boolean GENERATE_DOMAIN_MODEL_NAVIGATOR_EDEFAULT = true;
    public String getDomainContentExtensionID ();
    public String getDomainContentExtensionIDGen ();
    public String getDomainContentExtensionName ();
    public String getDomainContentExtensionNameGen ();
    public String getDomainContentExtensionPriority ();
    public String getDomainContentExtensionPriorityGen ();
    public String getDomainContentProviderClassName ();
    public String getDomainContentProviderClassNameGen ();
    public String getDomainContentProviderQualifiedClassName ();
    public String getDomainLabelProviderClassName ();
    public String getDomainLabelProviderClassNameGen ();
    public String getDomainLabelProviderQualifiedClassName ();
    public String getDomainModelElementTesterClassName ();
    public String getDomainModelElementTesterClassNameGen ();
    public void setDomainContentExtensionID (String newDomainContentExtensionID);
    public void setDomainContentExtensionName (String newDomainContentExtensionName);
    public void setDomainContentExtensionPriority (String newDomainContentExtensionPriority);
    public void setDomainContentProviderClassName (String newDomainContentProviderClassName);
    public void setDomainLabelProviderClassName (String newDomainLabelProviderClassName);
    public void setDomainModelElementTesterClassName (String newDomainModelElementTesterClassName);
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String domainNavigatorItemClassName = DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;
    final protected static String DOMAIN_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;
    public String getDomainNavigatorItemClassName ();
    public String getDomainNavigatorItemClassNameGen ();
[GenNavigatorImpl-12.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String uriInputTesterClassName = URI_INPUT_TESTER_CLASS_NAME_EDEFAULT;
    final protected static String URI_INPUT_TESTER_CLASS_NAME_EDEFAULT = null;
    public String getUriInputTesterClassName ();
    public String getUriInputTesterClassNameGen ();
    public void setUriInputTesterClassName (String newUriInputTesterClassName);
[GenNavigatorImpl-13.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected EList < GenNavigatorChildReference > childReferences = null;
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected EList < GenNavigatorChildReference > childReferences;
[GenNavigatorImpl-14.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
[GenNavigatorImpl-15.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
[GenNavigatorImpl-16.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String groupWrapperClassName = GROUP_WRAPPER_CLASS_NAME_EDEFAULT;
    final protected static String GROUP_WRAPPER_CLASS_NAME_EDEFAULT = null;
    public String getGroupWrapperClassName ();
    public String getGroupWrapperClassNameGen ();
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String abstractNavigatorItemClassName = ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;
    protected String navigatorGroupClassName = NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT;
    protected String navigatorItemClassName = NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT;
    protected String packageName = PACKAGE_NAME_EDEFAULT;
    final protected static String ABSTRACT_NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;
    final protected static String NAVIGATOR_GROUP_CLASS_NAME_EDEFAULT = null;
    final protected static String NAVIGATOR_ITEM_CLASS_NAME_EDEFAULT = null;
    final protected static String PACKAGE_NAME_EDEFAULT = null;
    public String getAbstractNavigatorItemClassName ();
    public String getAbstractNavigatorItemClassNameGen ();
    public String getNavigatorGroupClassName ();
    public String getNavigatorGroupClassNameGen ();
    public String getNavigatorGroupQualifiedClassName ();
    public String getNavigatorItemClassName ();
    public String getNavigatorItemClassNameGen ();
    public String getNavigatorItemQualifiedClassName ();
    public String getPackageName ();
    public void setNavigatorGroupClassName (String newNavigatorGroupClassName);
    public void setNavigatorItemClassName (String newNavigatorItemClassName);
    public void setPackageName (String newPackageName);
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String linkHelperClassName = LINK_HELPER_CLASS_NAME_EDEFAULT;
    protected String linkHelperExtensionID = LINK_HELPER_EXTENSION_ID_EDEFAULT;
    final protected static String LINK_HELPER_CLASS_NAME_EDEFAULT = null;
    final protected static String LINK_HELPER_EXTENSION_ID_EDEFAULT = null;
    public String getLinkHelperClassName ();
    public String getLinkHelperClassNameGen ();
    public String getLinkHelperExtensionID ();
    public String getLinkHelperExtensionIDGen ();
    public void setLinkHelperClassName (String newLinkHelperClassName);
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String sorterClassName = SORTER_CLASS_NAME_EDEFAULT;
    protected String sorterExtensionID = SORTER_EXTENSION_ID_EDEFAULT;
    final protected static String SORTER_CLASS_NAME_EDEFAULT = null;
    final protected static String SORTER_EXTENSION_ID_EDEFAULT = null;
    public String getSorterClassName ();
    public String getSorterClassNameGen ();
    public String getSorterExtensionID ();
    public String getSorterExtensionIDGen ();
    public void setSorterClassName (String newSorterClassName);
    public void setSorterExtensionID (String newSorterExtensionID);
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
    protected String actionProviderClassName = ACTION_PROVIDER_CLASS_NAME_EDEFAULT;
    protected String actionProviderID = ACTION_PROVIDER_ID_EDEFAULT;
    final protected static String ACTION_PROVIDER_CLASS_NAME_EDEFAULT = null;
    final protected static String ACTION_PROVIDER_ID_EDEFAULT = null;
    public String getActionProviderClassName ();
    public String getActionProviderClassNameGen ();
    public String getActionProviderID ();
    public String getActionProviderIDGen ();
    public void setActionProviderClassName (String newActionProviderClassName);
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorImpl extends EObjectImpl implements GenNavigator {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addLinkHelperClassNamePropertyDescriptor (Object object);
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addSorterClassNamePropertyDescriptor (Object object);
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addActionProviderClassNamePropertyDescriptor (Object object);
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDomainContentExtensionIDPropertyDescriptor (Object object);
    protected void addDomainContentExtensionNamePropertyDescriptor (Object object);
    protected void addDomainContentExtensionPriorityPropertyDescriptor (Object object);
    protected void addDomainContentProviderClassNamePropertyDescriptor (Object object);
    protected void addDomainLabelProviderClassNamePropertyDescriptor (Object object);
    protected void addDomainModelElementTesterClassNamePropertyDescriptor (Object object);
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNavigatorPathImpl extends EObjectImpl implements GenNavigatorPath {
    protected EList < GenNavigatorPathSegment > segments = null;
public class GenNavigatorPathImpl extends EObjectImpl implements GenNavigatorPath {
    protected EList < GenNavigatorPathSegment > segments;
public class GenNavigatorPathItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNavigatorPathItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNavigatorPathSegmentImpl extends EObjectImpl implements GenNavigatorPathSegment {
    protected GenCommonBase from = null;
    protected GenCommonBase to = null;
public class GenNavigatorPathSegmentImpl extends EObjectImpl implements GenNavigatorPathSegment {
    protected GenCommonBase from;
    protected GenCommonBase to;
public class GenNavigatorPathSegmentImpl extends EObjectImpl implements GenNavigatorPathSegment {
public class GenNavigatorPathSegmentImpl extends EObjectImpl implements GenNavigatorPathSegment {
public class GenNavigatorPathSegmentImpl extends EObjectImpl implements GenNavigatorPathSegment {
public class GenNavigatorPathSegmentImpl extends EObjectImpl implements GenNavigatorPathSegment {
public class GenNavigatorPathSegmentItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNavigatorPathSegmentItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
[GenNavigatorReferenceType-3.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GenNavigatorReferenceType-4.java' as a [program], at or near:
[GenNavigatorReferenceType-4.java, Txl/api_clone_java.Txl] : TXL0192E line 24 of GenNavigatorReferenceType-4.java - Syntax error at or near:
interface GenNode extends GenBaseElement {
interface GenNode extends GenCommonBase {
interface GenNode extends GenCommonBase {
interface GenNode extends GenChildContainer {
interface GenNode extends GenChildContainer {
public interface GenNode extends GenChildContainer {
    final public static String GRAPHICAL_NODE_EDIT_POLICY_SUFFIX = "GraphicalNodeEditPolicy";
public interface GenNode extends GenChildContainer {
public interface GenNode extends ElementType, GenChildContainer {
public interface GenNode extends ElementType, GenChildContainer {
public interface GenNode extends GenChildContainer {
public interface GenNode extends GenChildContainer {
public interface GenNode extends GenChildContainer {
    final public static String CLASS_NAME_PREFIX = "Node";
public interface GenNode extends GenChildContainer {
public interface GenNode extends GenChildContainer, GenLinkEnd {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
    protected String backgroundColor = BACKGROUND_COLOR_EDEFAULT;
    final protected static String BACKGROUND_COLOR_EDEFAULT = null;
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
    protected EList labels = null;
    protected TypeModelFacet modelFacet = null;
    public void setModelFacet (TypeModelFacet newModelFacet);
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
    protected GenClass domainMetaClass = null;
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenCommonBaseImpl implements GenNode {
public class GenNodeImpl extends GenCommonBaseImpl implements GenNode {
    protected EList childContainers = null;
    protected EList childNodes = null;
    public EList getChildContainers ();
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected EList compartments = null;
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected String graphicalNodeEditPolicyClassName = GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT;
    final protected static String GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT = null;
    public String getGraphicalNodeEditPolicyClassName ();
    public String getGraphicalNodeEditPolicyClassNameGen ();
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected boolean explicitContentPane = EXPLICIT_CONTENT_PANE_EDEFAULT;
    final protected static boolean EXPLICIT_CONTENT_PANE_EDEFAULT = false;
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected boolean explicitContentPane = EXPLICIT_CONTENT_PANE_EDEFAULT;
    final protected static boolean EXPLICIT_CONTENT_PANE_EDEFAULT = false;
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected CompartmentPlacementKind childContainersPlacement = CHILD_CONTAINERS_PLACEMENT_EDEFAULT;
    final protected static CompartmentPlacementKind CHILD_CONTAINERS_PLACEMENT_EDEFAULT = CompartmentPlacementKind.TOOLBAR_LITERAL;
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;
    final protected static String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    public String getEditHelperClassName ();
    public String getEditHelperClassNameGen ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;
    final protected static String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    public String getEditHelperClassName ();
    public String getEditHelperClassNameGen ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
    final protected static String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
    public String getCreateCommandClassName ();
    public String getCreateCommandClassNameGen ();
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected String primaryDragEditPolicyQualifiedClassName = PRIMARY_DRAG_EDIT_POLICY_QUALIFIED_CLASS_NAME_EDEFAULT;
    final protected static String PRIMARY_DRAG_EDIT_POLICY_QUALIFIED_CLASS_NAME_EDEFAULT = null;
    public void setPrimaryDragEditPolicyQualifiedClassName (String newPrimaryDragEditPolicyQualifiedClassName);
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected EClass eStaticClass (); protected EList compartments = null;
    protected EList labels = null;
    public EList getCompartments ();
    public EList getLabels ();
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenCompartment > compartments = null;
    protected EList < GenNodeLabel > labels = null;
    public EList < GenCompartment > getCompartments ();
    public EList < GenLink > getReorientedIncomingLinks ();
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
    protected String viewmapClass = VIEWMAP_CLASS_EDEFAULT;
    protected String viewmapURI = VIEWMAP_URI_EDEFAULT;
    protected int nodeVisualizationKind = NODE_VISUALIZATION_KIND_EDEFAULT;
    final protected static String VIEWMAP_CLASS_EDEFAULT = "org.eclipse.gmf.editor.viewmaps.SVGViewMap";
    final protected static String VIEWMAP_URI_EDEFAULT = null;
    final protected static int NODE_VISUALIZATION_KIND_EDEFAULT = 1;
    public String getViewmapClass ();
    public void setNodeVisualizationKind (int newNodeVisualizationKind);
    public void setViewmapClass (String newViewmapClass);
    public void setViewmapURI (String newViewmapURI);
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected EList < GenCompartment > compartments = null;
    protected EList < GenNodeLabel > labels = null;
    protected TypeModelFacet modelFacet = null;
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    protected EList < GenCompartment > compartments;
    protected EList < GenNodeLabel > labels;
    protected TypeModelFacet modelFacet;
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    @Override
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
abstract public class GenNodeImpl extends GenChildContainerImpl implements GenNode {
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public EList < GenLink > getGenIncomingLinks ();
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
    protected EClass domainMetaClass = null;
    public EClass basicGetDomainMetaClass ();
    public void setDomainMetaClass (EClass newDomainMetaClass);
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
    protected GenClass domainMetaClass = null;
    public GenClass basicGetDomainMetaClass ();
    public void setDomainMetaClass (GenClass newDomainMetaClass);
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
    protected EList affixedStereotypes = null;
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeImpl extends GenBaseElementImpl implements GenNode {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addGenIncomingLinksPropertyDescriptor (Object object);
public class GenNodeItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenBaseElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeItemProvider extends GenChildContainerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetNode (GenNode newNode, NotificationChain msgs);
    public void setNode (GenNode newNode);
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetNode (GenNode newNode, NotificationChain msgs);
    public void setNode (GenNode newNode);
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetNode (GenNode newNode, NotificationChain msgs);
    public void setNode (GenNode newNode);
public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {
public class GenNodeLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenNodeLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenNodeLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNodeLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNodeLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNodeLabelItemProvider extends GenLabelItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenNodeLabelTraceImpl extends MatchingTraceImpl implements GenNodeLabelTrace {
public class GenNodeLabelTraceImpl extends MatchingTraceImpl implements GenNodeLabelTrace {
public class GenNodeTraceImpl extends MatchingTraceImpl implements GenNodeTrace {
public class GenNodeTraceImpl extends MatchingTraceImpl implements GenNodeTrace {
public class GenNotationElementTargetImpl extends GenAuditableImpl implements GenNotationElementTarget {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GenNotationElementTargetImpl extends GenAuditableImpl implements GenNotationElementTarget {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenNotationElementTargetImpl extends GenAuditableImpl implements GenNotationElementTarget {
    protected GenClass element = null;
public class GenNotationElementTargetImpl extends GenAuditableImpl implements GenNotationElementTarget {
    protected GenClass element;
public class GenNotationElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenNotationElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenNotationElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNotationElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNotationElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenNotationElementTargetItemProvider extends GenAuditableItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
    @Override
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < String > requiredPlugins;
    public EList < String > getAllRequiredPlugins ();
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
public class GenPluginImpl extends EObjectImpl implements GenPlugin {
    protected String version = VERSION_EDEFAULT;
    final protected static String VERSION_EDEFAULT = "1.0.0.qualifier";
    public void setVersion (String newVersion);
public class GenPluginItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenPluginItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenPluginItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenPluginItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenPluginItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenPluginItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
    abstract public String getClassName ();
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
    protected EClass eStaticClass (); protected EList children = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenPreferencePage > children = null;
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
    protected EList < GenPreferencePage > children = null;
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
    protected EList < GenPreferencePage > children;
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
    public void setParent (GenPreferencePage newParent);
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
    public void setParent (GenPreferencePage newParent);
abstract public class GenPreferencePageImpl extends EObjectImpl implements GenPreferencePage {
public class GenPreferencePageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenPreferencePageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
    protected EClass eStaticClass (); protected EList tabs = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenPropertyTab > tabs = null;
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
    protected EList < GenPropertyTab > tabs = null;
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
    protected EList < GenPropertyTab > tabs;
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
public class GenPropertySheetImpl extends EObjectImpl implements GenPropertySheet {
public class GenPropertySheetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenPropertySheetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenPropertySheetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenPropertySheetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
abstract public class GenPropertyTabImpl extends EObjectImpl implements GenPropertyTab {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class GenPropertyTabImpl extends EObjectImpl implements GenPropertyTab {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
abstract public class GenPropertyTabImpl extends EObjectImpl implements GenPropertyTab {
abstract public class GenPropertyTabImpl extends EObjectImpl implements GenPropertyTab {
    public void setSheet (GenPropertySheet newSheet);
abstract public class GenPropertyTabImpl extends EObjectImpl implements GenPropertyTab {
    public void setSheet (GenPropertySheet newSheet);
abstract public class GenPropertyTabImpl extends EObjectImpl implements GenPropertyTab {
public class GenPropertyTabItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenPropertyTabItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenPropertyTabItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenPropertyTabItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
    protected EList < GenFeatureSeqInitializer > newElementInitializers = null;
    protected GenFeature feature = null;
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
    protected EList < GenFeatureSeqInitializer > newElementInitializers;
    protected GenFeature feature;
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
    public List < GenFeatureSeqInitializer > getAllFeatureSeqInitializers ();
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
    public void setFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer);
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
    public void setFeatureSeqInitializer (GenFeatureSeqInitializer newFeatureSeqInitializer);
public class GenReferenceNewElementSpecImpl extends EObjectImpl implements GenReferenceNewElementSpec {
public class GenReferenceNewElementSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenReferenceNewElementSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenRGBColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenRGBColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenRuleBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenRuleBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenRuleBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenRuleBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSeparatorImpl extends GenContributionItemImpl implements GenSeparator {
public class GenSeparatorImpl extends EObjectImpl implements GenSeparator {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
public class GenSeparatorItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSeparatorItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSeparatorItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSeparatorItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenSeparatorItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenSeparatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSharedContributionItemImpl extends GenContributionItemImpl implements GenSharedContributionItem {
    protected GenContributionItem actualItem = null;
public class GenSharedContributionItemImpl extends GenContributionItemImpl implements GenSharedContributionItem {
    protected GenContributionItem actualItem;
public class GenSharedContributionItemImpl extends GenContributionItemImpl implements GenSharedContributionItem {
public class GenSharedContributionItemImpl extends EObjectImpl implements GenSharedContributionItem {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
public class GenSharedContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSharedContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSharedContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenSharedContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenSharedContributionItemItemProvider extends GenContributionItemItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenSharedContributionItemItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardFontItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardPreferencePageImpl extends GenPreferencePageImpl implements GenStandardPreferencePage {
public class GenStandardPreferencePageImpl extends GenPreferencePageImpl implements GenStandardPreferencePage {
    @Override
    protected String className = CLASS_NAME_EDEFAULT;
    final protected static String CLASS_NAME_EDEFAULT = null;
    public String getClassName ();
    public String getClassNameGen ();
public class GenStandardPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenStandardPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenStandardPreferencePageItemProvider extends GenPreferencePageItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenStandardPropertyTabImpl extends GenPropertyTabImpl implements GenStandardPropertyTab {
public class GenStandardPropertyTabImpl extends GenPropertyTabImpl implements GenStandardPropertyTab {
    @Override
public class GenStandardPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenStandardPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenStandardPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenStandardPropertyTabItemProvider extends GenPropertyTabItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenToolBarManagerImpl extends GenContributionManagerImpl implements GenToolBarManager {
public class GenToolBarManagerImpl extends GenContributionManagerImpl implements GenToolBarManager {
    @Override
    public GenEditorGenerator getEditorGen ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public GenContributionManager getOwner ();
public class GenToolBarManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenToolBarManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenToolBarManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenToolBarManagerItemProvider extends GenContributionManagerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetDiagram (GenDiagram newDiagram, NotificationChain msgs);
    public void setDiagram (GenDiagram newDiagram);
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public NotificationChain basicSetDiagram (GenDiagram newDiagram, NotificationChain msgs);
    public void setDiagram (GenDiagram newDiagram);
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
    public boolean isListContainerEntry ();
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
    public boolean isListContainerEntry ();
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
public class GenTopLevelNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GenTopLevelNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GenTopLevelNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenTopLevelNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenTopLevelNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GenTopLevelNodeItemProvider extends GenNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GeoShape3DRectangleFigure extends GeoShapeFigure implements IPolygonAnchorableFigure {
    public GeoShape3DRectangleFigure (int width, int height) {
public class GeoShape3DRectangleFigure extends GeoShapeFigure implements IPolygonAnchorableFigure {
    public GeoShape3DRectangleFigure (int width, int height, int spacing) {
public class GeoshapeConstants {
    final public static String ICON_3DRECTANGLE = "Icon3DRectangle.gif";
    final public static String ICON_CYLINDER = "IconCylinder.gif";
    final public static String ICON_DIAMOND = "IconDiamond.gif";
    final public static String ICON_HEXAGON = "IconHexagon.gif";
    final public static String ICON_LINE = "IconLine.gif";
    final public static String ICON_OCTAGON = "IconOctagon.gif";
    final public static String ICON_OVAL = "IconEllipse.gif";
    final public static String ICON_PENTAGON = "IconPentagon.gif";
    final public static String ICON_RECTANGLE = "IconRectangle.gif";
    final public static String ICON_ROUNDRECTANGLE = "IconRoundRectangle.gif";
    final public static String ICON_SHADOWRECTANGLE = "IconShadowRectangle.gif";
    final public static String ICON_TRIANGLE = "IconTriangle.gif";
public class GeoshapeConstants {
public class GeoshapeContributionItemProvider extends PresentationContributionItemProvider {
public class GeoshapeContributionItemProvider extends DiagramContributionItemProvider {
public class GeoshapeContributionItemProvider extends DiagramContributionItemProvider {
public class GeoshapeContributionItemProvider extends AbstractContributionItemProvider {
public class GeoShapeCylinderFigure extends GeoShapeFigure {
    public GeoShapeCylinderFigure (int width, int height) {
public class GeoShapeCylinderFigure extends GeoShapeFigure {
    public GeoShapeCylinderFigure (int width, int height, int spacing) {
public class GeoShapeCylinderFigure extends GeoShapeFigure {
public class GeoShapeCylinderFigure extends GeoShapeFigure implements IPolygonAnchorableFigure {
    public PointList getPolygonPoints ();
    public void setBounds (Rectangle rect);
public class GeoShapeDiamondFigure extends GeoShapePolygonFigure {
    public GeoShapeDiamondFigure (int width, int height) {
public class GeoShapeDiamondFigure extends GeoShapePolygonFigure {
    public GeoShapeDiamondFigure (int width, int height, int spacing) {
abstract public class GeoShapeEditPart extends ShapeNodeEditPart {
abstract public class GeoShapeEditPart extends ShapeNodeEditPart {
    public Object getPreferredValue (EStructuralFeature feature);
abstract public class GeoShapeEditPart extends ShapeNodeEditPart {
abstract public class GeoShapeEditPart extends ShapeNodeEditPart {
    protected void handleNotificationEvent (Notification notification);
    protected void refreshVisuals ();
    protected void setLineType (int lineType);
public class GeoshapeEditPartProvider extends AbstractEditPartProvider {
public class GeoshapeEditPartProvider extends AbstractEditPartProvider {
public class GeoShapeEllipseFigure extends GeoShapeFigure implements IOvalAnchorableFigure {
    public GeoShapeEllipseFigure (int width, int height) {
public class GeoShapeEllipseFigure extends GeoShapeFigure implements IOvalAnchorableFigure {
    public GeoShapeEllipseFigure (int width, int height, int spacing) {
public class GeoShapeFigure extends DefaultSizeNodeFigure {
    public GeoShapeFigure (int defWidth, int defHeight) {
public class GeoShapeFigure extends DefaultSizeNodeFigure {
    public GeoShapeFigure (int defWidth, int defHeight, int spacing) {
public class GeoShapeHexagonFigure extends GeoShapePolygonFigure {
    public GeoShapeHexagonFigure (int width, int height) {
public class GeoShapeHexagonFigure extends GeoShapePolygonFigure {
    public GeoShapeHexagonFigure (int width, int height, int spacing) {
public class GeoShapeHexagonFigure extends GeoShapePolygonFigure {
public class GeoShapeHexagonFigure extends GeoShapePolygonFigure {
    public GeoShapeHexagonFigure (int height, int spacing) {
public class GeoShapeOctagonFigure extends GeoShapePolygonFigure {
    public GeoShapeOctagonFigure (int width, int height) {
public class GeoShapeOctagonFigure extends GeoShapePolygonFigure {
    public GeoShapeOctagonFigure (int width, int height, int spacing) {
public class GeoShapeOctagonFigure extends GeoShapePolygonFigure {
public class GeoShapeOctagonFigure extends GeoShapePolygonFigure {
    public GeoShapeOctagonFigure (int size, int spacing) {
public class GeoShapePentagonFigure extends GeoShapePolygonFigure {
    public GeoShapePentagonFigure (int width, int height) {
public class GeoShapePentagonFigure extends GeoShapePolygonFigure {
    public GeoShapePentagonFigure (int width, int height, int spacing) {
public class GeoShapePentagonFigure extends GeoShapePolygonFigure {
public class GeoShapePentagonFigure extends GeoShapePolygonFigure {
    public GeoShapePentagonFigure (int height, int spacing) {
abstract public class GeoShapePolygonFigure extends GeoShapeFigure implements IPolygonAnchorableFigure {
    public GeoShapePolygonFigure (int width, int height) {
abstract public class GeoShapePolygonFigure extends GeoShapeFigure implements IPolygonAnchorableFigure {
    public GeoShapePolygonFigure (int width, int height, int spacing) {
public class GeoShapeRectangleFigure extends GeoShapeFigure {
    public GeoShapeRectangleFigure (int width, int height) {
public class GeoShapeRectangleFigure extends GeoShapeFigure {
    public GeoShapeRectangleFigure (int width, int height, int spacing) {
public class GeoShapeRoundedRectangleFigure extends GeoShapeFigure {
    public GeoShapeRoundedRectangleFigure (int width, int height) {
public class GeoShapeRoundedRectangleFigure extends GeoShapeFigure {
    public GeoShapeRoundedRectangleFigure (int width, int height, int spacing, int radius) {
public class GeoShapeRoundedRectangleFigure extends GeoShapeFigure {
public class GeoShapeRoundedRectangleFigure extends GeoShapeFigure implements IPolygonAnchorableFigure {
    public PointList getAnchorBorderPointList ();
    public PointList getPolygonPoints ();
    public void setBounds (Rectangle rect);
public class GeoshapesPlugin extends XToolsUIPlugin {
public class GeoshapesPlugin extends XToolsUIPlugin {
public class GeoshapesPlugin extends XToolsUIPlugin {
public class GeoshapesPlugin extends AbstractUIPlugin {
public class GeoShapeTriangleFigure extends GeoShapePolygonFigure {
    public GeoShapeTriangleFigure (int base) {
public class GeoShapeTriangleFigure extends GeoShapePolygonFigure {
    public GeoShapeTriangleFigure (int base, int spacing) {
public class GeoShapeTriangleFigure extends GeoShapePolygonFigure {
    public GeoShapeTriangleFigure (int base, int spacing) {
public class GeoShapeTriangleFigure extends GeoShapePolygonFigure {
    public GeoShapeTriangleFigure (int height, int spacing) {
public class GeoShapeViewFactory extends TextShapeViewFactory {
public class GeoShapeViewFactory extends TextShapeViewFactory {
public class GeoshapeViewProvider extends AbstractViewProvider {
public class GeoshapeViewProvider extends AbstractViewProvider {
public class GetEditContextCommand extends EditElementCommand {
public class GetEditContextCommand extends EditElementCommand {
public class GetEditContextRequest extends AbstractEditCommandRequest {
public class GetEditContextRequest extends AbstractEditCommandRequest {
    public GetEditContextRequest (TransactionalEditingDomain editingDomain, IEditCommandRequest editRequest, Object editHelperContext) {
abstract public class GlobalAction extends AbstractActionHandler {
abstract public class GlobalAction extends AbstractActionHandler {
public class GlobalActionManager {
public class GlobalActionManager {
final public class GlobalRedoAction extends GlobalAction {
final public class GlobalRedoAction extends GlobalAction {
    final public void setUndoContext (IUndoContext context);
final public class GlobalRedoAction extends GlobalAction {
final public class GlobalRedoAction extends GlobalAction {
final public class GlobalSelectAllAction extends GlobalAction {
final public class GlobalSelectAllAction extends GlobalAction {
final public class GlobalUndoAction extends GlobalAction {
final public class GlobalUndoAction extends GlobalAction {
    final public void setUndoContext (IUndoContext context);
final public class GlobalUndoAction extends GlobalAction {
final public class GlobalUndoAction extends GlobalAction {
public class GMFEditingDomainFactory extends WorkspaceEditingDomainFactory {
public class GMFEditingDomainFactory extends WorkspaceEditingDomainFactory {
    public static class TransactionalSyncExecHelper implements ISyncExecHelper {
        public IStatus approveFileModification (IFile [] files, TransactionalEditingDomain transactionalDomain);
        public Runnable safeRunnable (Runnable runnable);
    public static TransactionalSyncExecHelper transactionalSyncExecHelper = new TransactionalSyncExecHelper ();
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection createChildActions;
    protected Collection createSiblingActions;
    protected Collection generateCreateChildActions (Collection descriptors, ISelection selection);
    protected Collection generateCreateSiblingActions (Collection descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        public boolean isEnabled ();
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        public void run ();
    ;
    protected boolean removeAllReferencesOnDelete ();
    protected void addGlobalActions (IMenuManager menuManager);
    protected void depopulateManager (IContributionManager manager, Collection actions);
    public void contributeToMenu (IMenuManager menuManager);
    public void contributeToToolBar (IToolBarManager toolBarManager);
    public void setActiveEditor (IEditorPart part);
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    @Override
    protected boolean removeAllReferencesOnDelete ();
    @Override
    protected void addGlobalActions (IMenuManager menuManager);
    @Override
    public void contributeToMenu (IMenuManager menuManager);
    @Override
    public void contributeToToolBar (IToolBarManager toolBarManager);
    @Override
    public void menuAboutToShow (IMenuManager menuManager);
    @Override
    public void setActiveEditor (IEditorPart part); protected Collection < IAction > createChildActions;
    protected Collection < IAction > createSiblingActions;
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected Collection < IAction > generateCreateSiblingActions (Collection < ? extends CommandParameter > descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        @Override
        public boolean isEnabled ();
        @Override
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        @Override
        public void run ();
    ;
    protected void depopulateManager (IContributionManager manager, Collection < ? extends IAction > actions);
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFGenActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (EditorPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
        public Object caseGenElementInitializer (GenElementInitializer object);
        public Object caseGenFeatureSeqInitializer (GenFeatureSeqInitializer object);
    ;
    public Adapter createGenElementInitializerAdapter ();
    public Adapter createGenFeatureSeqInitializerAdapter ();
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
        public Object caseTypeLinkModelFacet (TypeLinkModelFacet object);
    ;
    public Adapter createTypeLinkModelFacetAdapter ();
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
        public Object caseGenLinkReferenceOnly (GenLinkReferenceOnly object);
    ;
    public Adapter createGenLinkReferenceOnlyAdapter ();
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
        public Object caseCompartmentViewmap (CompartmentViewmap object);
        public Object caseLabelViewmap (LabelViewmap object);
    ;
    public Adapter createCompartmentViewmapAdapter ();
    public Adapter createLabelViewmapAdapter ();
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
        public Object caseGenAuditContainer (GenAuditContainer object);
    ;
    public Adapter createGenAuditContainerAdapter ();
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
[GMFGenAdapterFactory-23.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-24.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-25.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-26.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-27.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-28.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-29.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-30.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-31.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-32.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-33.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-34.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-35.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-36.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-37.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-38.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-39.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-40.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-41.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-42.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-43.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-44.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-45.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-46.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-47.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-48.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-49.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-50.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-51.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-52.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-53.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-54.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-55.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-56.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-57.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-58.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
        public Object caseAttributes (Attributes object);
        public Object caseBasicNodeViewmap (BasicNodeViewmap object);
        public Object caseDecoratedConnectionViewmap (DecoratedConnectionViewmap object);
    ;
    public Adapter createAttributesAdapter ();
    public Adapter createBasicNodeViewmapAdapter ();
    public Adapter createDecoratedConnectionViewmapAdapter ();
[GMFGenAdapterFactory-59.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-60.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-61.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-62.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-63.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-64.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-65.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-66.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-67.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-68.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-69.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-70.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-71.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-72.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-73.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-74.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-75.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-76.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGenAdapterFactory-77.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenAdapterFactory extends AdapterFactoryImpl {
    protected GMFGenSwitch modelSwitch = new GMFGenSwitch () {
    ;
public class GMFGenConfig extends ReconcilerConfigBase {
public class GMFGenConfig extends ReconcilerConfigBase {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    protected MarkerHelper markerHelper = new EditUIMarkerHelper ();
    protected boolean updateProblemIndication = true;
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
    ;
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
    ;
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected Collection selectionChangedListeners = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
        protected void unsetTarget (Resource target);
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                public void setActionBars (IActionBars actionBars);
                public void setSelectionToViewer (List selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
    public boolean isDirty ();
    public void createPages ();
    public void dispose ();
    public void doSave (IProgressMonitor progressMonitor);
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    protected void firePropertyChange (int action);
    @Override
    protected void pageChange (int pageIndex);
    @Override
    public boolean isDirty ();
    @Override
    public boolean isSaveAsAllowed ();
    @Override
    public void createPages ();
    @Override
    public void dispose ();
    @Override
    public void doSave (IProgressMonitor progressMonitor);
    @Override
    public void doSaveAs ();
    @Override
    public void init (IEditorSite site, IEditorInput editorInput);
    @Override
    public void setFocus ();
    @SuppressWarnings("unchecked")
    @Override
    protected Collection < ISelectionChangedListener > selectionChangedListeners = new ArrayList < ISelectionChangedListener > ();
    protected Collection < Resource > changedResources = new ArrayList < Resource > ();
    protected Collection < Resource > removedResources = new ArrayList < Resource > ();
    protected Collection < Resource > savedResources = new ArrayList < Resource > ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        @Override
        protected void setTarget (Resource target);
        @Override
        protected void unsetTarget (Resource target);
        @Override
        public void notifyChanged (Notification notification);
    ;
    protected Map < Resource, Diagnostic > resourceToDiagnosticMap = new LinkedHashMap < Resource, Diagnostic > ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                @Override
                public void setActionBars (IActionBars actionBars);
                @Override
                public void setSelectionToViewer (List < ? > selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
[GMFGenEditor-25.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! (getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
                public void run ();
            );
        getContainer ().addControlListener (new ControlAdapter () {
            @Override
            public void controlResized (ControlEvent event);
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
            public void run ();
        );
[GMFGenEditor-30.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
[GMFGenEditor-31.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! (getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            );
        getContainer ().addControlListener (new ControlAdapter () {
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
        );
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGenEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            );
        getContainer ().addControlListener (new ControlAdapter () {
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
        );
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new PropertySheetPage () {
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFGenEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                public void setSelectionToViewer (List selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenFeatureSeqInitializer createGenFeatureSeqInitializer ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public TypeLinkModelFacet createTypeLinkModelFacet ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenLinkReferenceOnly createGenLinkReferenceOnly ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public CompartmentLayoutKind createCompartmentLayoutKindFromString (EDataType eDataType, String initialValue);
    public String convertCompartmentLayoutKindToString (EDataType eDataType, Object instanceValue);
    public String convertCompartmentPlacementKindToString (EDataType eDataType, Object instanceValue);
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public CompartmentLayoutKind createCompartmentLayoutKindFromString (EDataType eDataType, String initialValue);
    public String convertCompartmentLayoutKindToString (EDataType eDataType, Object instanceValue);
    public String convertCompartmentPlacementKindToString (EDataType eDataType, Object instanceValue);
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public CompartmentViewmap createCompartmentViewmap ();
    public LabelViewmap createLabelViewmap ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public CompartmentLayoutKind createCompartmentLayoutKindFromString (EDataType eDataType, String initialValue);
    public String convertCompartmentLayoutKindToString (EDataType eDataType, Object instanceValue);
    public String convertCompartmentPlacementKindToString (EDataType eDataType, Object instanceValue);
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenAuditContainer createGenAuditContainer ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public CompartmentLayoutKind createCompartmentLayoutKindFromString (EDataType eDataType, String initialValue);
    public String convertCompartmentLayoutKindToString (EDataType eDataType, Object instanceValue);
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public FeatureLabelModelFacet createFeatureLabelModelFacet ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenDiagramElementTarget createGenDiagramElementTarget ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenMetricContainer createGenMetricContainer ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenExpressionInterpreter createGenExpressionInterpreter ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenNavigator createGenNavigator ();
    public GenNavigatorChildReference createGenNavigatorChildReference ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public BasicNodeViewmap createBasicNodeViewmap ();
    public DecoratedConnectionViewmap createDecoratedConnectionViewmap ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public CompositeFeatureLabelModelFacet createCompositeFeatureLabelModelFacet ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public StandardEntry createStandardEntry ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public Routing createRoutingFromString (EDataType eDataType, String initialValue);
    public String convertDiagramColorsToString (EDataType eDataType, Object instanceValue);
    public String convertRoutingToString (EDataType eDataType, Object instanceValue);
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenNavigatorPath createGenNavigatorPath ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public static GMFGenPackage getPackage ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    @Deprecated
    public static GMFGenPackage getPackage ();
    @Override
    public EObject create (EClass eClass);
    @Override
    public Object createFromString (EDataType eDataType, String initialValue);
    @Override
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public String convertLabelEditMethodToString (EDataType eDataType, Object instanceValue);
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public String convertLabelEditMethodToString (EDataType eDataType, Object instanceValue);
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
    public GenContextMenu createGenContextMenu ();
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenFactoryImpl extends EFactoryImpl implements GMFGenFactory {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenLinkReferenceOnlyItemProvider genLinkReferenceOnlyItemProvider;
    protected GenLinkWithClassItemProvider genLinkWithClassItemProvider;
    public Adapter createGenLinkReferenceOnlyAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenLinkItemProvider genLinkItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CompartmentViewmapItemProvider compartmentViewmapItemProvider;
    protected DiagramViewmapItemProvider diagramViewmapItemProvider;
    protected LabelViewmapItemProvider labelViewmapItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenChildContainerItemProvider genChildContainerItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenCompartmentItemProvider genCompartmentItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenLinkConstraintsItemProvider genLinkConstraintsItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected BasicNodeViewmapItemProvider basicNodeViewmapItemProvider;
    protected CompartmentViewmapItemProvider compartmentViewmapItemProvider;
    protected DecoratedConnectionViewmapItemProvider decoratedConnectionViewmapItemProvider;
    protected DiagramViewmapItemProvider diagramViewmapItemProvider;
    protected LabelViewmapItemProvider labelViewmapItemProvider;
    protected LinkDecorationItemProvider linkDecorationItemProvider;
    public Adapter createCompartmentViewmapAdapter ();
    public Adapter createLabelViewmapAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected FigureViewmapItemProvider figureViewmapItemProvider;
    protected SnippetViewmapItemProvider snippetViewmapItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected InnerClassViewmapItemProvider innerClassViewmapItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenAuditContainerItemProvider genAuditContainerItemProvider;
    protected GenAuditRuleItemProvider genAuditRuleItemProvider;
    public Adapter createGenAuditContainerAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenExternalNodeLabelItemProvider genExternalNodeLabelItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenNodeItemProvider genNodeItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenTopLevelNodeItemProvider genTopLevelNodeItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenPluginItemProvider genPluginItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CompositeFeatureModelFacetItemProvider compositeFeatureModelFacetItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CompositeFeatureLabelModelFacetItemProvider compositeFeatureLabelModelFacetItemProvider;
    protected FeatureLabelModelFacetItemProvider featureLabelModelFacetItemProvider;
    protected FeatureLinkModelFacetItemProvider featureLinkModelFacetItemProvider;
    public Adapter createFeatureLabelModelFacetAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected TextLabelModelFacetItemProvider textLabelModelFacetItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenEditorGeneratorItemProvider genEditorGeneratorItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenEditorViewItemProvider genEditorViewItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ModelElementSelectorItemProvider modelElementSelectorItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenConstraintItemProvider genConstraintItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenDiagramElementTargetItemProvider genDiagramElementTargetItemProvider;
    protected GenDomainElementTargetItemProvider genDomainElementTargetItemProvider;
    protected GenNotationElementTargetItemProvider genNotationElementTargetItemProvider;
    public Adapter createGenDiagramElementTargetAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenAuditedMetricTargetItemProvider genAuditedMetricTargetItemProvider;
    protected GenMetricContainerItemProvider genMetricContainerItemProvider;
    protected GenMetricRuleItemProvider genMetricRuleItemProvider;
    public Adapter createGenMetricContainerAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected TextLabelModelFacetItemProvider textLabelModelFacetItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ShapeAttributesItemProvider shapeAttributesItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ResizeConstraintsItemProvider resizeConstraintsItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected MetamodelTypeItemProvider metamodelTypeItemProvider;
    protected NotationTypeItemProvider notationTypeItemProvider;
    protected SpecializationTypeItemProvider specializationTypeItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenExpressionInterpreterItemProvider genExpressionInterpreterItemProvider;
    protected GenExpressionProviderContainerItemProvider genExpressionProviderContainerItemProvider;
    protected GenJavaExpressionProviderItemProvider genJavaExpressionProviderItemProvider;
    public Adapter createGenExpressionInterpreterAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LinkEntryItemProvider linkEntryItemProvider;
    protected NodeEntryItemProvider nodeEntryItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected SeparatorItemProvider separatorItemProvider;
    protected ToolEntryItemProvider toolEntryItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LabelOffsetAttributesItemProvider labelOffsetAttributesItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenDomainAttributeTargetItemProvider genDomainAttributeTargetItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenChildLabelNodeItemProvider genChildLabelNodeItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ParentAssignedViewmapItemProvider parentAssignedViewmapItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected DesignLabelModelFacetItemProvider designLabelModelFacetItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected StyleAttributesItemProvider styleAttributesItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CustomBehaviourItemProvider customBehaviourItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenChildSideAffixedNodeItemProvider genChildSideAffixedNodeItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenReferenceNewElementSpecItemProvider genReferenceNewElementSpecItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenNavigatorChildReferenceItemProvider genNavigatorChildReferenceItemProvider;
    protected GenNavigatorItemProvider genNavigatorItemProvider;
    public Adapter createGenNavigatorAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CustomTabFilterItemProvider customTabFilterItemProvider;
    protected GenCustomPropertyTabItemProvider genCustomPropertyTabItemProvider;
    protected GenPropertySheetItemProvider genPropertySheetItemProvider;
    protected GenStandardPropertyTabItemProvider genStandardPropertyTabItemProvider;
    protected TypeTabFilterItemProvider typeTabFilterItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenApplicationItemProvider genApplicationItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected OpenDiagramBehaviourItemProvider openDiagramBehaviourItemProvider;
    protected SharedBehaviourItemProvider sharedBehaviourItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CompositeFeatureLabelModelFacetItemProvider compositeFeatureLabelModelFacetItemProvider;
    protected CompositeFeatureModelFacetItemProvider compositeFeatureModelFacetItemProvider;
    protected FeatureModelFacetItemProvider featureModelFacetItemProvider;
    public Adapter createCompositeFeatureLabelModelFacetAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected StandardEntryItemProvider standardEntryItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenActionFactoryContributionItemItemProvider genActionFactoryContributionItemItemProvider;
    protected GenGroupMarkerItemProvider genGroupMarkerItemProvider;
    protected GenMenuManagerItemProvider genMenuManagerItemProvider;
    protected GenSeparatorItemProvider genSeparatorItemProvider;
    protected GenSharedContributionItemItemProvider genSharedContributionItemItemProvider;
    protected GenToolBarManagerItemProvider genToolBarManagerItemProvider;
    public Adapter createGenSeparatorAdapter ();
[GMFGenItemProviderAdapterFactory-48.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenConstantColorItemProvider genConstantColorItemProvider;
    protected GenCustomFontItemProvider genCustomFontItemProvider;
    protected GenDiagramPreferencesItemProvider genDiagramPreferencesItemProvider;
    protected GenRGBColorItemProvider genRGBColorItemProvider;
    protected GenStandardFontItemProvider genStandardFontItemProvider;
[GMFGenItemProviderAdapterFactory-49.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenNavigatorPathItemProvider genNavigatorPathItemProvider;
    protected GenNavigatorPathSegmentItemProvider genNavigatorPathSegmentItemProvider;
    public Adapter createGenNavigatorPathAdapter ();
[GMFGenItemProviderAdapterFactory-50.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenCustomPreferencePageItemProvider genCustomPreferencePageItemProvider;
    protected GenStandardPreferencePageItemProvider genStandardPreferencePageItemProvider;
[GMFGenItemProviderAdapterFactory-51.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenAuditRootItemProvider genAuditRootItemProvider;
[GMFGenItemProviderAdapterFactory-52.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected Collection supportedTypes = new ArrayList ();
    public Adapter adapt (Notifier notifier, Object type);
    public Adapter createColorAttributesAdapter ();
    public Adapter createCustomBehaviourAdapter ();
    public Adapter createCustomTabFilterAdapter ();
    public Adapter createDefaultSizeAttributesAdapter ();
    public Adapter createDesignLabelModelFacetAdapter ();
    public Adapter createFeatureLabelModelFacetAdapter ();
    public Adapter createFeatureLinkModelFacetAdapter ();
    public Adapter createFigureViewmapAdapter ();
    public Adapter createGenActionFactoryContributionItemAdapter ();
    public Adapter createGenApplicationAdapter ();
    public Adapter createGenAuditContainerAdapter ();
    public Adapter createGenAuditRootAdapter ();
    public Adapter createGenAuditRuleAdapter ();
    public Adapter createGenAuditedMetricTargetAdapter ();
    public Adapter createGenChildLabelNodeAdapter ();
    public Adapter createGenChildNodeAdapter ();
    public Adapter createGenChildSideAffixedNodeAdapter ();
    public Adapter createGenCompartmentAdapter ();
    public Adapter createGenConstantColorAdapter ();
    public Adapter createGenConstraintAdapter ();
    public Adapter createGenCustomFontAdapter ();
    public Adapter createGenCustomPreferencePageAdapter ();
    public Adapter createGenCustomPropertyTabAdapter ();
    public Adapter createGenDiagramAdapter ();
    public Adapter createGenDiagramElementTargetAdapter ();
    public Adapter createGenDiagramPreferencesAdapter ();
    public Adapter createGenDomainAttributeTargetAdapter ();
    public Adapter createGenDomainElementTargetAdapter ();
    public Adapter createGenEditorGeneratorAdapter ();
    public Adapter createGenEditorViewAdapter ();
    public Adapter createGenExpressionInterpreterAdapter ();
    public Adapter createGenExpressionProviderContainerAdapter ();
    public Adapter createGenExternalNodeLabelAdapter ();
    public Adapter createGenFeatureSeqInitializerAdapter ();
    public Adapter createGenFeatureValueSpecAdapter ();
    public Adapter createGenGroupMarkerAdapter ();
    public Adapter createGenJavaExpressionProviderAdapter ();
    public Adapter createGenLinkAdapter ();
    public Adapter createGenLinkConstraintsAdapter ();
    public Adapter createGenLinkLabelAdapter ();
    public Adapter createGenMenuManagerAdapter ();
    public Adapter createGenMetricContainerAdapter ();
    public Adapter createGenMetricRuleAdapter ();
    public Adapter createGenNavigatorAdapter ();
    public Adapter createGenNavigatorChildReferenceAdapter ();
    public Adapter createGenNavigatorPathAdapter ();
    public Adapter createGenNavigatorPathSegmentAdapter ();
    public Adapter createGenNodeLabelAdapter ();
    public Adapter createGenNotationElementTargetAdapter ();
    public Adapter createGenPluginAdapter ();
    public Adapter createGenPropertySheetAdapter ();
    public Adapter createGenRGBColorAdapter ();
    public Adapter createGenReferenceNewElementSpecAdapter ();
    public Adapter createGenSeparatorAdapter ();
    public Adapter createGenSharedContributionItemAdapter ();
    public Adapter createGenStandardFontAdapter ();
    public Adapter createGenStandardPreferencePageAdapter ();
    public Adapter createGenStandardPropertyTabAdapter ();
    public Adapter createGenToolBarManagerAdapter ();
    public Adapter createGenTopLevelNodeAdapter ();
    public Adapter createInnerClassViewmapAdapter ();
    public Adapter createLabelOffsetAttributesAdapter ();
    public Adapter createMetamodelTypeAdapter ();
    public Adapter createNotationTypeAdapter ();
    public Adapter createOpenDiagramBehaviourAdapter ();
    public Adapter createPaletteAdapter ();
    public Adapter createParentAssignedViewmapAdapter ();
    public Adapter createResizeConstraintsAdapter ();
    public Adapter createSeparatorAdapter ();
    public Adapter createSharedBehaviourAdapter ();
    public Adapter createSnippetViewmapAdapter ();
    public Adapter createSpecializationTypeAdapter ();
    public Adapter createStandardEntryAdapter ();
    public Adapter createStyleAttributesAdapter ();
    public Adapter createToolEntryAdapter ();
    public Adapter createToolGroupAdapter ();
    public Adapter createTypeLinkModelFacetAdapter ();
    public Adapter createTypeModelFacetAdapter ();
    public Adapter createTypeTabFilterAdapter ();
    public Object adapt (Object object, Object type);
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    @Override
    public Adapter adapt (Notifier notifier, Object type);
    @Override
    public Adapter createColorAttributesAdapter ();
    @Override
    public Adapter createCustomBehaviourAdapter ();
    @Override
    public Adapter createCustomTabFilterAdapter ();
    @Override
    public Adapter createDefaultSizeAttributesAdapter ();
    @Override
    public Adapter createDesignLabelModelFacetAdapter ();
    @Override
    public Adapter createFeatureLabelModelFacetAdapter ();
    @Override
    public Adapter createFeatureLinkModelFacetAdapter ();
    @Override
    public Adapter createFigureViewmapAdapter ();
    @Override
    public Adapter createGenActionFactoryContributionItemAdapter ();
    @Override
    public Adapter createGenApplicationAdapter ();
    @Override
    public Adapter createGenAuditContainerAdapter ();
    @Override
    public Adapter createGenAuditRootAdapter ();
    @Override
    public Adapter createGenAuditRuleAdapter ();
    @Override
    public Adapter createGenAuditedMetricTargetAdapter ();
    @Override
    public Adapter createGenChildLabelNodeAdapter ();
    @Override
    public Adapter createGenChildNodeAdapter ();
    @Override
    public Adapter createGenChildSideAffixedNodeAdapter ();
    @Override
    public Adapter createGenCompartmentAdapter ();
    @Override
    public Adapter createGenConstantColorAdapter ();
    @Override
    public Adapter createGenConstraintAdapter ();
    @Override
    public Adapter createGenCustomFontAdapter ();
    @Override
    public Adapter createGenCustomPreferencePageAdapter ();
    @Override
    public Adapter createGenCustomPropertyTabAdapter ();
    @Override
    public Adapter createGenDiagramAdapter ();
    @Override
    public Adapter createGenDiagramElementTargetAdapter ();
    @Override
    public Adapter createGenDiagramPreferencesAdapter ();
    @Override
    public Adapter createGenDomainAttributeTargetAdapter ();
    @Override
    public Adapter createGenDomainElementTargetAdapter ();
    @Override
    public Adapter createGenEditorGeneratorAdapter ();
    @Override
    public Adapter createGenEditorViewAdapter ();
    @Override
    public Adapter createGenExpressionInterpreterAdapter ();
    @Override
    public Adapter createGenExpressionProviderContainerAdapter ();
    @Override
    public Adapter createGenExternalNodeLabelAdapter ();
    @Override
    public Adapter createGenFeatureSeqInitializerAdapter ();
    @Override
    public Adapter createGenFeatureValueSpecAdapter ();
    @Override
    public Adapter createGenGroupMarkerAdapter ();
    @Override
    public Adapter createGenJavaExpressionProviderAdapter ();
    @Override
    public Adapter createGenLinkAdapter ();
    @Override
    public Adapter createGenLinkConstraintsAdapter ();
    @Override
    public Adapter createGenLinkLabelAdapter ();
    @Override
    public Adapter createGenMenuManagerAdapter ();
    @Override
    public Adapter createGenMetricContainerAdapter ();
    @Override
    public Adapter createGenMetricRuleAdapter ();
    @Override
    public Adapter createGenNavigatorAdapter ();
    @Override
    public Adapter createGenNavigatorChildReferenceAdapter ();
    @Override
    public Adapter createGenNavigatorPathAdapter ();
    @Override
    public Adapter createGenNavigatorPathSegmentAdapter ();
    @Override
    public Adapter createGenNodeLabelAdapter ();
    @Override
    public Adapter createGenNotationElementTargetAdapter ();
    @Override
    public Adapter createGenPluginAdapter ();
    @Override
    public Adapter createGenPropertySheetAdapter ();
    @Override
    public Adapter createGenRGBColorAdapter ();
    @Override
    public Adapter createGenReferenceNewElementSpecAdapter ();
    @Override
    public Adapter createGenSeparatorAdapter ();
    @Override
    public Adapter createGenSharedContributionItemAdapter ();
    @Override
    public Adapter createGenStandardFontAdapter ();
    @Override
    public Adapter createGenStandardPreferencePageAdapter ();
    @Override
    public Adapter createGenStandardPropertyTabAdapter ();
    @Override
    public Adapter createGenToolBarManagerAdapter ();
    @Override
    public Adapter createGenTopLevelNodeAdapter ();
    @Override
    public Adapter createInnerClassViewmapAdapter ();
    @Override
    public Adapter createLabelOffsetAttributesAdapter ();
    @Override
    public Adapter createMetamodelTypeAdapter ();
    @Override
    public Adapter createNotationTypeAdapter ();
    @Override
    public Adapter createOpenDiagramBehaviourAdapter ();
    @Override
    public Adapter createPaletteAdapter ();
    @Override
    public Adapter createParentAssignedViewmapAdapter ();
    @Override
    public Adapter createResizeConstraintsAdapter ();
    @Override
    public Adapter createSeparatorAdapter ();
    @Override
    public Adapter createSharedBehaviourAdapter ();
    @Override
    public Adapter createSnippetViewmapAdapter ();
    @Override
    public Adapter createSpecializationTypeAdapter ();
    @Override
    public Adapter createStandardEntryAdapter ();
    @Override
    public Adapter createStyleAttributesAdapter ();
    @Override
    public Adapter createToolEntryAdapter ();
    @Override
    public Adapter createToolGroupAdapter ();
    @Override
    public Adapter createTypeLinkModelFacetAdapter ();
    @Override
    public Adapter createTypeModelFacetAdapter ();
    @Override
    public Adapter createTypeTabFilterAdapter ();
    @Override
    public Adapter createValueExpressionAdapter ();
    @Override
    public Object adapt (Object object, Object type);
    @Override
    public boolean isFactoryForType (Object type); protected Collection < Object > supportedTypes = new ArrayList < Object > ();
[GMFGenItemProviderAdapterFactory-53.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    @Override
    protected GenDiagramUpdaterItemProvider genDiagramUpdaterItemProvider;
[GMFGenItemProviderAdapterFactory-54.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    @Override
    protected DynamicModelAccessItemProvider dynamicModelAccessItemProvider;
[GMFGenItemProviderAdapterFactory-55.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager (EditorPlugin.INSTANCE, GMFGenPackage.eNS_URI);
    public List < IChildCreationExtender > getChildCreationExtenders ();
[GMFGenItemProviderAdapterFactory-56.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    protected GenAuditContextItemProvider genAuditContextItemProvider;
[GMFGenItemProviderAdapterFactory-57.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    protected GenLiteralExpressionProviderItemProvider genLiteralExpressionProviderItemProvider;
[GMFGenItemProviderAdapterFactory-58.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    @Override
    @Override
    @Override
    protected CustomParserItemProvider customParserItemProvider;
    protected ExternalParserItemProvider externalParserItemProvider;
    protected GenParsersItemProvider genParsersItemProvider;
    protected PredefinedParserItemProvider predefinedParserItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LinkLabelItemProvider linkLabelItemProvider;
[GMFGenItemProviderAdapterFactory-59.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    protected LabelModelFacetItemProvider labelModelFacetItemProvider;
[GMFGenItemProviderAdapterFactory-60.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    @Override
    public Adapter createGenContextMenuAdapter ();
    @Override
    protected GenCommandActionItemProvider genCommandActionItemProvider;
    protected GenContextMenuItemProvider genContextMenuItemProvider;
    protected GenCustomActionItemProvider genCustomActionItemProvider;
[GMFGenItemProviderAdapterFactory-61.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenItemProviderAdapterFactory-61.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    @Override
    @Override
    protected CreateShortcutActionItemProvider createShortcutActionItemProvider;
    protected InitDiagramActionItemProvider initDiagramActionItemProvider;
    protected LoadResourceActionItemProvider loadResourceActionItemProvider;
[GMFGenItemProviderAdapterFactory-62.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenItemProviderAdapterFactory-62.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    protected GenPreferenceItemProvider genPreferenceItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ColorAttributesItemProvider colorAttributesItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ModelElementSelectorItemProvider modelElementSelectorItemProvider;
    protected ValueExpressionItemProvider valueExpressionItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected GenFeatureSeqInitializerItemProvider genFeatureSeqInitializerItemProvider;
    protected GenFeatureValueSpecItemProvider genFeatureValueSpecItemProvider;
    public Adapter createGenFeatureSeqInitializerAdapter ();
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LinkLabelItemProvider linkLabelItemProvider;
public class GMFGenItemProviderAdapterFactory extends GMFGenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected FeatureModelFacetItemProvider featureModelFacetItemProvider;
    protected GenLinkLabelItemProvider genLinkLabelItemProvider;
    protected GenNodeLabelItemProvider genNodeLabelItemProvider;
    protected TypeLinkModelFacetItemProvider typeLinkModelFacetItemProvider;
    protected TypeModelFacetItemProvider typeModelFacetItemProvider;
    public Adapter createTypeLinkModelFacetAdapter ();
public class GMFGenModelWizard extends Wizard implements INewWizard {
public class GMFGenModelWizard extends Wizard implements INewWizard {
    final public static List < String > FILE_EXTENSIONS = Collections.unmodifiableList (Arrays.asList (EditorPlugin.INSTANCE.getString ("_UI_GMFGenEditorFilenameExtensions").split ("\\s*,\\s*")));
    final public static String FORMATTED_FILE_EXTENSIONS = EditorPlugin.INSTANCE.getString ("_UI_GMFGenEditorFilenameExtensions").replaceAll ("\\s*,\\s*", ", ");
public class GMFGenModelWizard extends Wizard implements INewWizard {
    protected List initialObjectNames;
    public boolean performFinish (); public class GMFGenModelWizardInitialObjectCreationPage extends WizardPage {
        protected List encodings;
        public void setVisible (boolean visible);
    public class GMFGenModelWizardNewFileCreationPage extends WizardNewFileCreationPage {
public class GMFGenModelWizard extends Wizard implements INewWizard {
    @Override
    public boolean performFinish ();
    @Override
    public void addPages ();
    protected List < String > initialObjectNames;
    public class GMFGenModelWizardInitialObjectCreationPage extends WizardPage {
        @Override
        public void setVisible (boolean visible);
        protected List < String > encodings;
    public class GMFGenModelWizardNewFileCreationPage extends WizardNewFileCreationPage {
        @Override
public class GMFGenNewFileCreationPage extends WizardNewFileCreationPage {
class GMFGenNewFileCreationPage extends WizardNewFileCreationPage {
[GMFGenPackageImpl-99.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-99.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-99.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-99.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-100.java' as a [program], at or near:
[GMFGenPackageImpl-100.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-100.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-100.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-100.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-101.java' as a [program], at or near:
[GMFGenPackageImpl-101.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-101.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-101.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-101.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-102.java' as a [program], at or near:
[GMFGenPackageImpl-102.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-102.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-102.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-102.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-103.java' as a [program], at or near:
[GMFGenPackageImpl-103.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-103.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-103.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-103.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-104.java' as a [program], at or near:
[GMFGenPackageImpl-104.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-104.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-104.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-104.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-105.java' as a [program], at or near:
[GMFGenPackageImpl-105.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-105.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-105.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-105.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-106.java' as a [program], at or near:
[GMFGenPackageImpl-106.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-106.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-106.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-106.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-107.java' as a [program], at or near:
[GMFGenPackageImpl-107.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-107.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-107.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-108.java' as a [program], at or near:
[GMFGenPackageImpl-108.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-108.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-108.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-109.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getLinkLabel_ReadOnly ();
    public EReference getLinkLabel_DomainMetaFeature ();
[GMFGenPackageImpl-109.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-109.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-109.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-109.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-110.java' as a [program], at or near:
[GMFGenPackageImpl-110.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-110.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-110.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-110.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-111.java' as a [program], at or near:
[GMFGenPackageImpl-111.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-111.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-111.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-111.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-112.java' as a [program], at or near:
[GMFGenPackageImpl-112.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-112.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-112.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-112.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-113.java' as a [program], at or near:
[GMFGenPackageImpl-113.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-113.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-113.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-113.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-114.java' as a [program], at or near:
[GMFGenPackageImpl-114.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-114.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-114.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-114.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-115.java' as a [program], at or near:
[GMFGenPackageImpl-115.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-115.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-115.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-115.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-116.java' as a [program], at or near:
[GMFGenPackageImpl-116.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-116.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-116.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-116.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-117.java' as a [program], at or near:
[GMFGenPackageImpl-117.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-117.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-117.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-117.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-118.java' as a [program], at or near:
[GMFGenPackageImpl-118.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-118.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-118.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-119.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getColorAttributes_BackgroundColor ();
[GMFGenPackageImpl-119.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-119.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-119.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-119.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-119.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-120.java' as a [program], at or near:
[GMFGenPackageImpl-120.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-120.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-120.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-120.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-120.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-121.java' as a [program], at or near:
[GMFGenPackageImpl-121.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-121.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-121.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-121.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-121.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-122.java' as a [program], at or near:
[GMFGenPackageImpl-122.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-122.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-122.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-122.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-122.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-123.java' as a [program], at or near:
[GMFGenPackageImpl-123.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-123.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-123.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-123.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-123.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-124.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-124.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-124.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-124.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-124.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-125.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-125.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-125.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-125.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-125.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-126.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-126.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-126.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-126.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-126.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-127.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-127.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-127.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-127.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-127.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-128.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-128.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-128.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-128.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-128.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-128.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-129.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-129.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-129.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-129.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-129.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-129.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-129.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-130.java' as a [program], at or near:
[GMFGenPackageImpl-130.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-130.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-130.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-130.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-130.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-130.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-131.java' as a [program], at or near:
[GMFGenPackageImpl-131.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-131.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-131.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-131.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-131.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-131.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-132.java' as a [program], at or near:
[GMFGenPackageImpl-132.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-132.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-132.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-132.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-132.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-132.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-133.java' as a [program], at or near:
[GMFGenPackageImpl-133.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-133.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-133.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-133.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-133.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-133.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-134.java' as a [program], at or near:
[GMFGenPackageImpl-134.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-134.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-134.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-134.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-134.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-134.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-135.java' as a [program], at or near:
[GMFGenPackageImpl-135.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-135.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-135.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-135.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-135.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-135.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-136.java' as a [program], at or near:
[GMFGenPackageImpl-136.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-136.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-136.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-136.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-136.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-136.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-137.java' as a [program], at or near:
[GMFGenPackageImpl-137.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-137.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-137.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-137.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-137.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-137.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-138.java' as a [program], at or near:
[GMFGenPackageImpl-138.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-138.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-138.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-138.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-138.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-138.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-139.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-139.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-139.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-139.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-139.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-139.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-139.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-140.java' as a [program], at or near:
[GMFGenPackageImpl-140.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-140.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-140.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-140.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-140.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-140.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-141.java' as a [program], at or near:
[GMFGenPackageImpl-141.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-141.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-141.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-141.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-141.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-141.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-142.java' as a [program], at or near:
[GMFGenPackageImpl-142.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-142.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-142.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-142.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-142.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-142.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-143.java' as a [program], at or near:
[GMFGenPackageImpl-143.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-143.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-143.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-143.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-143.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-143.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-144.java' as a [program], at or near:
[GMFGenPackageImpl-144.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-144.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-144.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-144.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-144.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-144.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-145.java' as a [program], at or near:
[GMFGenPackageImpl-145.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-145.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-145.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-145.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-145.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-145.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-146.java' as a [program], at or near:
[GMFGenPackageImpl-146.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-146.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-146.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-146.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-146.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-146.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-147.java' as a [program], at or near:
[GMFGenPackageImpl-147.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-147.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-147.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-147.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-147.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-147.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-147.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-148.java' as a [program], at or near:
[GMFGenPackageImpl-148.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-148.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-148.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-148.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-148.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-148.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-148.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-149.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-149.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-149.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-149.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-149.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-149.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-149.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-149.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-150.java' as a [program], at or near:
[GMFGenPackageImpl-150.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-150.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-150.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-150.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-150.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-150.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-150.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-151.java' as a [program], at or near:
[GMFGenPackageImpl-151.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-151.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-151.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-151.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-151.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-151.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-151.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-152.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-152.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-152.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-152.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-152.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-152.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-152.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-153.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-154.java' as a [program], at or near:
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-154.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-155.java' as a [program], at or near:
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-155.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-156.java' as a [program], at or near:
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-156.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-157.java' as a [program], at or near:
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-157.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-158.java' as a [program], at or near:
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-158.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-159.java' as a [program], at or near:
[GMFGenPackageImpl-14.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getValueExpression_Body ();
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-159.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-160.java' as a [program], at or near:
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-160.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-161.java' as a [program], at or near:
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-161.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-162.java' as a [program], at or near:
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-162.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-163.java' as a [program], at or near:
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-163.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-164.java' as a [program], at or near:
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-164.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-165.java' as a [program], at or near:
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-165.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-166.java' as a [program], at or near:
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-166.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-167.java' as a [program], at or near:
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-167.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-168.java' as a [program], at or near:
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-168.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-169.java' as a [program], at or near:
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-169.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-170.java' as a [program], at or near:
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-170.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-171.java' as a [program], at or near:
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-171.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-172.java' as a [program], at or near:
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-172.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-173.java' as a [program], at or near:
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-173.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-174.java' as a [program], at or near:
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-174.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-175.java' as a [program], at or near:
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-175.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-176.java' as a [program], at or near:
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-176.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-177.java' as a [program], at or near:
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-177.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-178.java' as a [program], at or near:
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-178.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-179.java' as a [program], at or near:
[GMFGenPackageImpl-16.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-179.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-180.java' as a [program], at or near:
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-180.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-181.java' as a [program], at or near:
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-181.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-182.java' as a [program], at or near:
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-182.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-183.java' as a [program], at or near:
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-183.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-184.java' as a [program], at or near:
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-184.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-185.java' as a [program], at or near:
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-185.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-186.java' as a [program], at or near:
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-186.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-187.java' as a [program], at or near:
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-187.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-188.java' as a [program], at or near:
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-188.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-189.java' as a [program], at or near:
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-189.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-190.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-191.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-192.java' as a [program], at or near:
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-192.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-193.java' as a [program], at or near:
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-193.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-194.java' as a [program], at or near:
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-194.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-195.java' as a [program], at or near:
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-195.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-196.java' as a [program], at or near:
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-196.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-197.java' as a [program], at or near:
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-197.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-198.java' as a [program], at or near:
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-198.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-199.java' as a [program], at or near:
[GMFGenPackageImpl-18.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-199.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-199.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-199.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-200.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-200.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-200.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-201.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-201.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-201.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-202.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-202.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-202.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-203.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-203.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-203.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-204.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-204.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-204.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-205.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-205.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-205.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-206.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-206.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-206.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-207.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-207.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-207.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-208.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-208.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-208.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-19.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-209.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-209.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-209.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-210.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-210.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-210.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-211.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-211.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-211.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-212.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-212.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-212.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-213.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-213.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-213.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-214.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-214.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-214.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-215.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-215.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-215.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-216.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-216.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-216.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-217.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-217.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-217.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-218.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-218.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-218.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-20.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-219.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-219.java, Txl/api_clone_java.Txl] : TXL0986E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-219.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-220.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-220.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-220.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-221.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-221.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-221.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-222.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-222.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-222.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-223.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-223.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-223.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-224.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-224.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-224.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-225.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-225.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-225.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-226.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-226.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-226.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-227.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-227.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-227.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-228.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-228.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-228.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-21.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-229.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-229.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-229.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-230.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-230.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-230.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-231.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-231.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-231.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-232.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-232.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-232.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-233.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-233.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-233.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-234.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-234.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-234.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-235.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-235.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-235.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-236.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-236.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-236.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-237.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-237.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-237.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-238.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-238.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-238.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-22.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EClass getGenElementInitializer ();
    public EClass getGenFeatureSeqInitializer ();
    public EReference getGenElementInitializer_Element ();
    public EReference getGenFeatureSeqInitializer_Initializers ();
[GMFGenPackageImpl-239.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-239.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-239.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-240.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-240.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-240.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-241.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-241.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-241.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-242.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-242.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-242.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-243.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-243.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-243.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-244.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-244.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-244.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-245.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-245.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-245.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-246.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-246.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-246.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-247.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-247.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-247.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-248.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-248.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-248.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-23.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getLinkLabel_Alignment ();
    public EReference getGenBaseElement_ContainmentMetaFeature ();
    public EReference getLinkLabel_DomainMetaFeature ();
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenLabel_ReadOnly ();
    public EClass getTypeLinkModelFacet ();
    public EReference getGenLabel_ModelFacet ();
    public EReference getGenNode_Labels ();
    public EReference getTypeLinkModelFacet_SourceMetaFeature ();
    public EReference getTypeLinkModelFacet_TargetMetaFeature ();
    public EReference getTypeModelFacet_ContainmentMetaFeature ();
[GMFGenPackageImpl-249.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-249.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-249.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-250.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-250.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-250.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-251.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-251.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-251.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-252.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-252.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-252.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-253.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-253.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-253.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-254.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-254.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-254.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-255.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-255.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-255.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-256.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-256.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-256.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-257.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-257.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-257.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-258.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-258.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-258.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-24.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-259.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-259.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-259.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-260.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-260.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-260.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-261.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-261.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-261.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-262.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-262.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-262.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-263.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-263.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-263.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-264.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-264.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-264.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-265.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-265.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-265.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-266.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-266.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-266.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-25.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EClass getGenLinkReferenceOnly ();
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-26.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-27.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-28.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-29.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EReference getGenBaseElement_ModelElementInitializer ();
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EReference getTypeModelFacet_ModelElementInitializer ();
[GMFGenPackageImpl-30.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-31.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenChildContainer_CanCollapse ();
    public EAttribute getGenChildContainer_GroupID ();
    public EAttribute getGenChildContainer_HideIfEmpty ();
    public EAttribute getGenChildContainer_LayoutKind ();
    public EAttribute getGenChildContainer_NeedsTitle ();
    public EAttribute getGenChildContainer_TitleKey ();
    public EReference getGenChildContainer_ParentNode ();
    public EReference getGenNode_ChildContainers ();
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenCompartment_CanCollapse ();
    public EAttribute getGenCompartment_HideIfEmpty ();
    public EAttribute getGenCompartment_LayoutKind ();
    public EAttribute getGenCompartment_NeedsTitle ();
    public EReference getGenChildContainer_ChildNodes ();
[GMFGenPackageImpl-32.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-33.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-34.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-35.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenDiagram_BaseItemSemanticEditPolicyClassName ();
    public EAttribute getGenDiagram_CreationWizardClassName ();
    public EAttribute getGenDiagram_CreationWizardPageClassName ();
    public EAttribute getGenDiagram_DiagramEditorUtilClassName ();
    public EAttribute getGenDiagram_SemanticHintsClassName ();
[GMFGenPackageImpl-36.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-37.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenDiagram_NotationViewFactoriesPackageName ();
[GMFGenPackageImpl-38.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenLink_IncomingCreationAllowed ();
[GMFGenPackageImpl-39.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-40.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-41.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-42.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-42.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-43.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-43.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-44.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-44.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-45.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-46.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-46.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EReference getGenLinkConstraints_Link ();
    public EReference getGenLinkConstraints_SourceEnd ();
[GMFGenPackageImpl-47.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-48.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-48.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-49.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-50.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-50.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-51.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-52.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-52.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-53.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-53.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EClass getCompartmentViewmap ();
    public EClass getLabelViewmap ();
    public EReference getDecoratedConnectionViewmap_Source ();
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-54.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-54.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getInnerClassViewmap_ClassBody ();
[GMFGenPackageImpl-55.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-55.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenAuditContainer_Id ();
    public EAttribute getGenAuditContainer_Name ();
    public EAttribute getGenAuditRule_Id ();
    public EAttribute getGenAuditRule_Name ();
    public EAttribute getGenAuditRule_Severity ();
    public EClass getGenAuditContainer ();
    public EReference getGenAuditContainer_Audits ();
    public EReference getGenAuditContainer_ChildContainers ();
    public EReference getGenAuditContainer_ParentContainer ();
    public EReference getGenAuditRule_Container ();
    public EReference getGenAuditRule_Rule ();
[GMFGenPackageImpl-56.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-56.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-57.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-57.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-58.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-58.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-59.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-59.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-59.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-60.java' as a [program], at or near:
[GMFGenPackageImpl-60.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-60.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-60.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-61.java' as a [program], at or near:
[GMFGenPackageImpl-61.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-61.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-61.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-62.java' as a [program], at or near:
[GMFGenPackageImpl-62.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-62.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-62.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-63.java' as a [program], at or near:
[GMFGenPackageImpl-63.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-63.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-63.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-64.java' as a [program], at or near:
[GMFGenPackageImpl-64.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-64.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-64.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-65.java' as a [program], at or near:
[GMFGenPackageImpl-65.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-65.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-65.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-66.java' as a [program], at or near:
[GMFGenPackageImpl-66.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-66.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-66.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-67.java' as a [program], at or near:
[GMFGenPackageImpl-67.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-67.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-67.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-68.java' as a [program], at or near:
[GMFGenPackageImpl-68.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-68.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-68.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-69.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getGenLink_FigureQualifiedClassName ();
    public EAttribute getGenLink_LineStyle ();
    public EAttribute getGenLink_SourceDecorationFigureQualifiedClassName ();
    public EAttribute getGenNode_NodeVisualizationKind ();
    public EAttribute getGenNode_ViewmapClass ();
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    public EAttribute getBasicNodeViewmap_FigureQualifiedClassName ();
    public EAttribute getDecoratedConnectionViewmap_FigureQualifiedClassName ();
    public EAttribute getDefaultSizeAttributes_Height ();
    public EAttribute getShapeAttributes_LineStyle ();
    public EClass getAttributes ();
    public EClass getBasicNodeViewmap ();
    public EClass getDecoratedConnectionViewmap ();
    public EReference getDecoratedConnectionViewmap_Source ();
[GMFGenPackageImpl-69.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-69.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-69.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-70.java' as a [program], at or near:
[GMFGenPackageImpl-70.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-70.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-70.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-71.java' as a [program], at or near:
[GMFGenPackageImpl-71.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-71.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-71.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-72.java' as a [program], at or near:
[GMFGenPackageImpl-72.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-72.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-72.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-73.java' as a [program], at or near:
[GMFGenPackageImpl-73.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-73.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-73.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-74.java' as a [program], at or near:
[GMFGenPackageImpl-74.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-74.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-74.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-75.java' as a [program], at or near:
[GMFGenPackageImpl-75.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-75.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-75.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-76.java' as a [program], at or near:
[GMFGenPackageImpl-76.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-76.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-76.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-77.java' as a [program], at or near:
[GMFGenPackageImpl-77.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-77.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-77.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-78.java' as a [program], at or near:
[GMFGenPackageImpl-78.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-78.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-78.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-79.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-79.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-79.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-79.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-80.java' as a [program], at or near:
[GMFGenPackageImpl-80.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-80.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-80.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-81.java' as a [program], at or near:
[GMFGenPackageImpl-81.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-81.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-81.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-82.java' as a [program], at or near:
[GMFGenPackageImpl-82.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-82.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-82.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-83.java' as a [program], at or near:
[GMFGenPackageImpl-83.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-83.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-83.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-84.java' as a [program], at or near:
[GMFGenPackageImpl-84.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-84.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-84.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-85.java' as a [program], at or near:
[GMFGenPackageImpl-85.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-85.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-85.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-86.java' as a [program], at or near:
[GMFGenPackageImpl-86.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-86.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-86.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-87.java' as a [program], at or near:
[GMFGenPackageImpl-87.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-87.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-87.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-88.java' as a [program], at or near:
[GMFGenPackageImpl-88.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-88.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-88.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-89.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
[GMFGenPackageImpl-89.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-89.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-89.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-90.java' as a [program], at or near:
[GMFGenPackageImpl-90.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-90.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-90.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-91.java' as a [program], at or near:
[GMFGenPackageImpl-91.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-91.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-91.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-92.java' as a [program], at or near:
[GMFGenPackageImpl-92.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-92.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-92.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-93.java' as a [program], at or near:
[GMFGenPackageImpl-93.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-93.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-93.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-94.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-94.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-94.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGenPackageImpl-95.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-95.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-95.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-95.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-96.java' as a [program], at or near:
[GMFGenPackageImpl-96.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-96.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-96.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-96.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-97.java' as a [program], at or near:
[GMFGenPackageImpl-97.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-97.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-97.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-97.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-98.java' as a [program], at or near:
[GMFGenPackageImpl-98.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-98.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
[GMFGenPackageImpl-98.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGenPackageImpl-98.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGenPackageImpl-99.java' as a [program], at or near:
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
public class GMFGenResource extends MigrationResource {
    @Override
    @Override
public class GMFGenResource extends MigrationResource {
public class GMFGenResource extends MigrationResource {
    @Override
public class GMFGenResource extends MigrationResource {
    @Override
public class GMFGenResource extends MigrationResource {
public class GMFGenResource extends MigrationResource {
    private static class X extends BasicResourceHandler {
        @Override
        public void postLoad (XMLResource resource, InputStream inputStream, Map < ?, ? > options);
    public static class Factory2 extends ToolingResourceFactory {
        @Override
        public Resource createResource (URI uri);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenElementInitializer (GenElementInitializer object);
    public Object caseGenFeatureSeqInitializer (GenFeatureSeqInitializer object);
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseTypeLinkModelFacet (TypeLinkModelFacet object);
public class GMFGenSwitch {
    public Object caseGenLinkReferenceOnly (GenLinkReferenceOnly object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseCompartmentViewmap (CompartmentViewmap object);
    public Object caseLabelViewmap (LabelViewmap object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenAuditContainer (GenAuditContainer object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseEditPartCandies (EditPartCandies object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseFeatureLabelModelFacet (FeatureLabelModelFacet object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenDiagramElementTarget (GenDiagramElementTarget object);
    public Object caseGenRuleBase (GenRuleBase object);
    public Object caseGenRuleContainerBase (GenRuleContainerBase object);
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenAuditable (GenAuditable object);
    public Object caseGenMeasurable (GenMeasurable object);
    public Object caseGenMetricContainer (GenMetricContainer object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenExpressionInterpreter (GenExpressionInterpreter object);
    public Object caseGenExpressionProviderBase (GenExpressionProviderBase object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenNavigator (GenNavigator object);
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenPropertySheet (GenPropertySheet object);
    public Object caseGenPropertyTab (GenPropertyTab object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseCompositeFeatureLabelModelFacet (CompositeFeatureLabelModelFacet object);
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseAttributes (Attributes object);
    public Object caseBasicNodeViewmap (BasicNodeViewmap object);
    public Object caseDecoratedConnectionViewmap (DecoratedConnectionViewmap object);
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenContributionItem (GenContributionItem object);
    public Object caseGenSeparator (GenSeparator object);
public class GMFGenSwitch {
public class GMFGenSwitch {
[GMFGenSwitch-61.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch {
public class GMFGenSwitch {
    public Object caseGenNavigatorPath (GenNavigatorPath object);
[GMFGenSwitch-62.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch {
public class GMFGenSwitch {
[GMFGenSwitch-63.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch {
public class GMFGenSwitch {
[GMFGenSwitch-64.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
    protected Object doSwitch (EClass theEClass, EObject theEObject);
    public Object caseAbstractToolEntry (AbstractToolEntry object);
    public Object caseAttributes (Attributes object);
    public Object caseBatchValidation (BatchValidation object);
    public Object caseBehaviour (Behaviour object);
    public Object caseColorAttributes (ColorAttributes object);
    public Object caseCustomBehaviour (CustomBehaviour object);
    public Object caseCustomTabFilter (CustomTabFilter object);
    public Object caseDefaultSizeAttributes (DefaultSizeAttributes object);
    public Object caseDesignLabelModelFacet (DesignLabelModelFacet object);
    public Object caseEditPartCandies (EditPartCandies object);
    public Object caseEditorCandies (EditorCandies object);
    public Object caseElementType (ElementType object);
    public Object caseEntryBase (EntryBase object);
    public Object caseFeatureLabelModelFacet (FeatureLabelModelFacet object);
    public Object caseFeatureLinkModelFacet (FeatureLinkModelFacet object);
    public Object caseFigureViewmap (FigureViewmap object);
    public Object caseGenActionFactoryContributionItem (GenActionFactoryContributionItem object);
    public Object caseGenApplication (GenApplication object);
    public Object caseGenAuditContainer (GenAuditContainer object);
    public Object caseGenAuditRoot (GenAuditRoot object);
    public Object caseGenAuditRule (GenAuditRule object);
    public Object caseGenAuditable (GenAuditable object);
    public Object caseGenAuditedMetricTarget (GenAuditedMetricTarget object);
    public Object caseGenChildContainer (GenChildContainer object);
    public Object caseGenChildLabelNode (GenChildLabelNode object);
    public Object caseGenChildNode (GenChildNode object);
    public Object caseGenChildSideAffixedNode (GenChildSideAffixedNode object);
    public Object caseGenColor (GenColor object);
    public Object caseGenCommonBase (GenCommonBase object);
    public Object caseGenCompartment (GenCompartment object);
    public Object caseGenConstantColor (GenConstantColor object);
    public Object caseGenConstraint (GenConstraint object);
    public Object caseGenContainerBase (GenContainerBase object);
    public Object caseGenContributionItem (GenContributionItem object);
    public Object caseGenContributionManager (GenContributionManager object);
    public Object caseGenCustomFont (GenCustomFont object);
    public Object caseGenCustomPreferencePage (GenCustomPreferencePage object);
    public Object caseGenCustomPropertyTab (GenCustomPropertyTab object);
    public Object caseGenDiagram (GenDiagram object);
    public Object caseGenDiagramElementTarget (GenDiagramElementTarget object);
    public Object caseGenDiagramPreferences (GenDiagramPreferences object);
    public Object caseGenDomainAttributeTarget (GenDomainAttributeTarget object);
    public Object caseGenDomainElementTarget (GenDomainElementTarget object);
    public Object caseGenEditorGenerator (GenEditorGenerator object);
    public Object caseGenEditorView (GenEditorView object);
    public Object caseGenElementInitializer (GenElementInitializer object);
    public Object caseGenExpressionInterpreter (GenExpressionInterpreter object);
    public Object caseGenExpressionProviderBase (GenExpressionProviderBase object);
    public Object caseGenExpressionProviderContainer (GenExpressionProviderContainer object);
    public Object caseGenExternalNodeLabel (GenExternalNodeLabel object);
    public Object caseGenFeatureInitializer (GenFeatureInitializer object);
    public Object caseGenFeatureSeqInitializer (GenFeatureSeqInitializer object);
    public Object caseGenFeatureValueSpec (GenFeatureValueSpec object);
    public Object caseGenFont (GenFont object);
    public Object caseGenGroupMarker (GenGroupMarker object);
    public Object caseGenJavaExpressionProvider (GenJavaExpressionProvider object);
    public Object caseGenLabel (GenLabel object);
    public Object caseGenLink (GenLink object);
    public Object caseGenLinkConstraints (GenLinkConstraints object);
    public Object caseGenLinkLabel (GenLinkLabel object);
    public Object caseGenMeasurable (GenMeasurable object);
    public Object caseGenMenuManager (GenMenuManager object);
    public Object caseGenMetricContainer (GenMetricContainer object);
    public Object caseGenMetricRule (GenMetricRule object);
    public Object caseGenNavigator (GenNavigator object);
    public Object caseGenNavigatorChildReference (GenNavigatorChildReference object);
    public Object caseGenNavigatorPath (GenNavigatorPath object);
    public Object caseGenNavigatorPathSegment (GenNavigatorPathSegment object);
    public Object caseGenNode (GenNode object);
    public Object caseGenNodeLabel (GenNodeLabel object);
    public Object caseGenNotationElementTarget (GenNotationElementTarget object);
    public Object caseGenPlugin (GenPlugin object);
    public Object caseGenPreferencePage (GenPreferencePage object);
    public Object caseGenPropertySheet (GenPropertySheet object);
    public Object caseGenPropertyTab (GenPropertyTab object);
    public Object caseGenPropertyTabFilter (GenPropertyTabFilter object);
    public Object caseGenRGBColor (GenRGBColor object);
    public Object caseGenReferenceNewElementSpec (GenReferenceNewElementSpec object);
    public Object caseGenRuleBase (GenRuleBase object);
    public Object caseGenRuleTarget (GenRuleTarget object);
    public Object caseGenSeparator (GenSeparator object);
    public Object caseGenSharedContributionItem (GenSharedContributionItem object);
    public Object caseGenStandardFont (GenStandardFont object);
    public Object caseGenStandardPreferencePage (GenStandardPreferencePage object);
    public Object caseGenStandardPropertyTab (GenStandardPropertyTab object);
    public Object caseGenToolBarManager (GenToolBarManager object);
    public Object caseGenTopLevelNode (GenTopLevelNode object);
    public Object caseInnerClassViewmap (InnerClassViewmap object);
    public Object caseLabelModelFacet (LabelModelFacet object);
    public Object caseLabelOffsetAttributes (LabelOffsetAttributes object);
    public Object caseLinkConstraints (LinkConstraints object);
    public Object caseLinkModelFacet (LinkModelFacet object);
    public Object caseMeasurementUnit (MeasurementUnit object);
    public Object caseMetamodelType (MetamodelType object);
    public Object caseModelFacet (ModelFacet object);
    public Object caseNotationType (NotationType object);
    public Object caseOpenDiagramBehaviour (OpenDiagramBehaviour object);
    public Object casePackageNames (PackageNames object);
    public Object casePalette (Palette object);
    public Object caseParentAssignedViewmap (ParentAssignedViewmap object);
    public Object caseProviderClassNames (ProviderClassNames object);
    public Object caseResizeConstraints (ResizeConstraints object);
    public Object caseSeparator (Separator object);
    public Object caseSharedBehaviour (SharedBehaviour object);
    public Object caseShortcuts (Shortcuts object);
    public Object caseSnippetViewmap (SnippetViewmap object);
    public Object caseSpecializationType (SpecializationType object);
    public Object caseStandardEntry (StandardEntry object);
    public Object caseStyleAttributes (StyleAttributes object);
    public Object caseToolEntry (ToolEntry object);
    public Object caseToolGroup (ToolGroup object);
    public Object caseToolGroupItem (ToolGroupItem object);
    public Object caseTypeLinkModelFacet (TypeLinkModelFacet object);
    public Object caseTypeModelFacet (TypeModelFacet object);
    public Object caseTypeTabFilter (TypeTabFilter object);
    public Object caseValueExpression (ValueExpression object);
    public Object caseViewmap (Viewmap object);
    public Object defaultCase (EObject object);
    public Object doSwitch (EObject theEObject);
public class GMFGenSwitch < T > {
    protected T doSwitch (EClass theEClass, EObject theEObject);
    public T caseAbstractToolEntry (AbstractToolEntry object);
    public T caseAttributes (Attributes object);
    public T caseBatchValidation (BatchValidation object);
    public T caseBehaviour (Behaviour object);
    public T caseColorAttributes (ColorAttributes object);
    public T caseCustomBehaviour (CustomBehaviour object);
    public T caseCustomTabFilter (CustomTabFilter object);
    public T caseDefaultSizeAttributes (DefaultSizeAttributes object);
    public T caseDesignLabelModelFacet (DesignLabelModelFacet object);
    public T caseEditPartCandies (EditPartCandies object);
    public T caseEditorCandies (EditorCandies object);
    public T caseElementType (ElementType object);
    public T caseEntryBase (EntryBase object);
    public T caseFeatureLabelModelFacet (FeatureLabelModelFacet object);
    public T caseFeatureLinkModelFacet (FeatureLinkModelFacet object);
    public T caseFigureViewmap (FigureViewmap object);
    public T caseGenActionFactoryContributionItem (GenActionFactoryContributionItem object);
    public T caseGenApplication (GenApplication object);
    public T caseGenAuditContainer (GenAuditContainer object);
    public T caseGenAuditRoot (GenAuditRoot object);
    public T caseGenAuditRule (GenAuditRule object);
    public T caseGenAuditable (GenAuditable object);
    public T caseGenAuditedMetricTarget (GenAuditedMetricTarget object);
    public T caseGenChildContainer (GenChildContainer object);
    public T caseGenChildLabelNode (GenChildLabelNode object);
    public T caseGenChildNode (GenChildNode object);
    public T caseGenChildSideAffixedNode (GenChildSideAffixedNode object);
    public T caseGenColor (GenColor object);
    public T caseGenCommonBase (GenCommonBase object);
    public T caseGenCompartment (GenCompartment object);
    public T caseGenConstantColor (GenConstantColor object);
    public T caseGenConstraint (GenConstraint object);
    public T caseGenContainerBase (GenContainerBase object);
    public T caseGenContributionItem (GenContributionItem object);
    public T caseGenContributionManager (GenContributionManager object);
    public T caseGenCustomFont (GenCustomFont object);
    public T caseGenCustomPreferencePage (GenCustomPreferencePage object);
    public T caseGenCustomPropertyTab (GenCustomPropertyTab object);
    public T caseGenDiagram (GenDiagram object);
    public T caseGenDiagramElementTarget (GenDiagramElementTarget object);
    public T caseGenDiagramPreferences (GenDiagramPreferences object);
    public T caseGenDomainAttributeTarget (GenDomainAttributeTarget object);
    public T caseGenDomainElementTarget (GenDomainElementTarget object);
    public T caseGenEditorGenerator (GenEditorGenerator object);
    public T caseGenEditorView (GenEditorView object);
    public T caseGenElementInitializer (GenElementInitializer object);
    public T caseGenExpressionInterpreter (GenExpressionInterpreter object);
    public T caseGenExpressionProviderBase (GenExpressionProviderBase object);
    public T caseGenExpressionProviderContainer (GenExpressionProviderContainer object);
    public T caseGenExternalNodeLabel (GenExternalNodeLabel object);
    public T caseGenFeatureInitializer (GenFeatureInitializer object);
    public T caseGenFeatureSeqInitializer (GenFeatureSeqInitializer object);
    public T caseGenFeatureValueSpec (GenFeatureValueSpec object);
    public T caseGenFont (GenFont object);
    public T caseGenGroupMarker (GenGroupMarker object);
    public T caseGenJavaExpressionProvider (GenJavaExpressionProvider object);
    public T caseGenLabel (GenLabel object);
    public T caseGenLink (GenLink object);
    public T caseGenLinkConstraints (GenLinkConstraints object);
    public T caseGenLinkLabel (GenLinkLabel object);
    public T caseGenMeasurable (GenMeasurable object);
    public T caseGenMenuManager (GenMenuManager object);
    public T caseGenMetricContainer (GenMetricContainer object);
    public T caseGenMetricRule (GenMetricRule object);
    public T caseGenNavigator (GenNavigator object);
    public T caseGenNavigatorChildReference (GenNavigatorChildReference object);
    public T caseGenNavigatorPath (GenNavigatorPath object);
    public T caseGenNavigatorPathSegment (GenNavigatorPathSegment object);
    public T caseGenNode (GenNode object);
    public T caseGenNodeLabel (GenNodeLabel object);
    public T caseGenNotationElementTarget (GenNotationElementTarget object);
    public T caseGenPlugin (GenPlugin object);
    public T caseGenPreferencePage (GenPreferencePage object);
    public T caseGenPropertySheet (GenPropertySheet object);
    public T caseGenPropertyTab (GenPropertyTab object);
    public T caseGenPropertyTabFilter (GenPropertyTabFilter object);
    public T caseGenRGBColor (GenRGBColor object);
    public T caseGenReferenceNewElementSpec (GenReferenceNewElementSpec object);
    public T caseGenRuleBase (GenRuleBase object);
    public T caseGenRuleTarget (GenRuleTarget object);
    public T caseGenSeparator (GenSeparator object);
    public T caseGenSharedContributionItem (GenSharedContributionItem object);
    public T caseGenStandardFont (GenStandardFont object);
    public T caseGenStandardPreferencePage (GenStandardPreferencePage object);
    public T caseGenStandardPropertyTab (GenStandardPropertyTab object);
    public T caseGenToolBarManager (GenToolBarManager object);
    public T caseGenTopLevelNode (GenTopLevelNode object);
    public T caseInnerClassViewmap (InnerClassViewmap object);
    public T caseLabelModelFacet (LabelModelFacet object);
    public T caseLabelOffsetAttributes (LabelOffsetAttributes object);
    public T caseLinkConstraints (LinkConstraints object);
    public T caseLinkModelFacet (LinkModelFacet object);
    public T caseMeasurementUnit (MeasurementUnit object);
    public T caseMetamodelType (MetamodelType object);
    public T caseModelFacet (ModelFacet object);
    public T caseNotationType (NotationType object);
    public T caseOpenDiagramBehaviour (OpenDiagramBehaviour object);
    public T casePackageNames (PackageNames object);
    public T casePalette (Palette object);
    public T caseParentAssignedViewmap (ParentAssignedViewmap object);
    public T caseProviderClassNames (ProviderClassNames object);
    public T caseResizeConstraints (ResizeConstraints object);
    public T caseSeparator (Separator object);
    public T caseSharedBehaviour (SharedBehaviour object);
    public T caseShortcuts (Shortcuts object);
    public T caseSnippetViewmap (SnippetViewmap object);
    public T caseSpecializationType (SpecializationType object);
    public T caseStandardEntry (StandardEntry object);
    public T caseStyleAttributes (StyleAttributes object);
    public T caseToolEntry (ToolEntry object);
    public T caseToolGroup (ToolGroup object);
    public T caseToolGroupItem (ToolGroupItem object);
    public T caseTypeLinkModelFacet (TypeLinkModelFacet object);
    public T caseTypeModelFacet (TypeModelFacet object);
    public T caseTypeTabFilter (TypeTabFilter object);
    public T caseValueExpression (ValueExpression object);
    public T caseViewmap (Viewmap object);
    public T defaultCase (EObject object);
    public T doSwitch (EObject theEObject);
[GMFGenSwitch-66.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-67.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-68.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-70.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-71.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-73.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-74.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-75.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
    public T caseGenParserImplementation (GenParserImplementation object);
[GMFGenSwitch-76.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-77.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
[GMFGenSwitch-78.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGenSwitch < T > {
public class GMFGenSwitch < T > {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGenSwitch {
public class GMFGraphActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection createChildActions;
    protected Collection createSiblingActions;
    protected Collection generateCreateChildActions (Collection descriptors, ISelection selection);
    protected Collection generateCreateSiblingActions (Collection descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (GMFGraphEditPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        public boolean isEnabled ();
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (GMFGraphEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        public void run ();
    ;
    protected boolean removeAllReferencesOnDelete ();
    protected void addGlobalActions (IMenuManager menuManager);
    protected void depopulateManager (IContributionManager manager, Collection actions);
    public void contributeToMenu (IMenuManager menuManager);
    public void contributeToToolBar (IToolBarManager toolBarManager);
    public void setActiveEditor (IEditorPart part);
public class GMFGraphActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    @Override
    protected boolean removeAllReferencesOnDelete ();
    @Override
    protected void addGlobalActions (IMenuManager menuManager);
    @Override
    public void contributeToMenu (IMenuManager menuManager);
    @Override
    public void contributeToToolBar (IToolBarManager toolBarManager);
    @Override
    public void menuAboutToShow (IMenuManager menuManager);
    @Override
    public void setActiveEditor (IEditorPart part); protected Collection < IAction > createChildActions;
    protected Collection < IAction > createSiblingActions;
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected Collection < IAction > generateCreateSiblingActions (Collection < ? extends CommandParameter > descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (GMFGraphEditPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        @Override
        public boolean isEnabled ();
        @Override
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (GMFGraphEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        @Override
        public void run ();
    ;
    protected void depopulateManager (IContributionManager manager, Collection < ? extends IAction > actions);
public class GMFGraphActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (GMFGraphEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFGraphActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (GMFGraphEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
[GMFGraphAdapterFactory-9.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-10.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-11.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-12.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-13.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-14.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-15.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-16.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-17.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-18.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-19.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-20.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-4.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-5.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-6.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-7.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[GMFGraphAdapterFactory-8.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
public class GMFGraphBaseEditHelper extends AbstractEditHelper {
public class GMFGraphBaseEditHelper extends AbstractEditHelper {
    protected ICommand getInsteadCommand (IEditCommandRequest req); final public static String EDIT_POLICY_COMMAND = "edit policy command";
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    protected static class LinkConstraints {
        public static boolean canCreateDiagramElementFigure_4001 (DiagramElement source, FigureHandle target);
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    public Command getCommand (Request request); final public static String VISUAL_ID_KEY = "visual_id";
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    protected static class LinkConstraints {
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    public static class LinkConstraints {
        public static boolean canExistDiagramElementFigure_4001 (DiagramElement source, FigureHandle target);
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    protected CompoundCommand getDestroyEdgesCommand (boolean confirm);
    public static class LinkConstraints {
        public static boolean canCreateDiagramElementFigure_4001 (DiagramElement source, FigureHandle target);
        public static boolean canExistDiagramElementFigure_4001 (DiagramElement source, FigureHandle target);
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    final protected Command getGEFWrapper (ICommand cmd);
    public static class LinkConstraints {
        public static boolean canCreateChildAccess_4002 (FigureDescriptor source, Figure target);
        public static boolean canCreateCompartmentAccessor_4003 (Compartment source, ChildAccess target);
        public static boolean canCreateDiagramElementFigure_4005 (DiagramElement source, FigureDescriptor target);
        public static boolean canCreateDiagramLabelAccessor_4004 (DiagramLabel source, ChildAccess target);
        public static boolean canExistChildAccess_4002 (FigureDescriptor source, Figure target);
        public static boolean canExistCompartmentAccessor_4003 (Compartment source, ChildAccess target);
        public static boolean canExistDiagramElementFigure_4005 (DiagramElement source, FigureDescriptor target);
        public static boolean canExistDiagramLabelAccessor_4004 (DiagramLabel source, ChildAccess target);
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    public static class LinkConstraints {
public class GMFGraphBaseItemSemanticEditPolicy extends SemanticEditPolicy {
    public static class LinkConstraints {
        public static boolean canExistNodeContentPane_4006 (Node source, ChildAccess target);
public class GMFGraphCreationWizard extends EditorCreationWizard {
public class GMFGraphCreationWizard extends Wizard implements INewWizard {
    protected GMFGraphCreationWizardPage diagramModelFilePage;
    protected GMFGraphCreationWizardPage domainModelFilePage;
    protected IStructuredSelection selection;
    protected Resource diagram;
    public IStructuredSelection getSelection ();
    public IWorkbench getWorkbench ();
    public boolean performFinish ();
    final public Resource getDiagram ();
    public void setOpenNewlyCreatedDiagramEditor (boolean openNewlyCreatedDiagramEditor);
public class GMFGraphCreationWizardPage extends EditorWizardPage {
    protected String getDefaultFileName ();
    public DiagramFileCreator getDiagramFileCreator ();
    public GMFGraphCreationWizardPage (IWorkbench workbench, IStructuredSelection selection) {
    public IFile createAndOpenDiagram (IPath containerPath, String fileName, InputStream initialContents, String kind, IWorkbenchWindow dWindow, IProgressMonitor progressMonitor, boolean saveDiagram);
public class GMFGraphCreationWizardPage extends WizardNewFileCreationPage {
    protected IPath getFilePath ();
    public GMFGraphCreationWizardPage (String pageName, IStructuredSelection selection, String fileExtension) {
    public URI getURI ();
    public void createControl (Composite parent);
public class GMFGraphDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
public class GMFGraphDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
    final public static String CONTEXT_ID = "org.eclipse.gmf.graphdef.editor.ui.diagramContext";
public class GMFGraphDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
public class GMFGraphDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
    public Object getAdapter (Class type);
public class GMFGraphDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
public class GMFGraphDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
public class GMFGraphDiagramEditor extends FileDiagramEditor implements IGotoMarker {
    protected String getEditingDomainID ();
    protected TransactionalEditingDomain createEditingDomain ();
public class GMFGraphDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
    abstract private class DropTargetListener extends DiagramDropTargetListener {
        protected List getObjectsBeingDropped ();
        abstract protected Object getJavaObject (TransferData data);
        public DropTargetListener (EditPartViewer viewer, Transfer xfer) {
    protected IDocumentProvider getDocumentProvider (IEditorInput input);
    protected PaletteRoot createPaletteRoot (PaletteRoot existingPaletteRoot);
    protected PreferencesHint getPreferencesHint ();
    protected void initializeGraphicalViewer ();
    public String getContributorId ();
    public TransactionalEditingDomain getEditingDomain ();
    public void doSaveAs ();
    public void gotoMarker (IMarker marker);
public class GMFGraphDiagramEditorPlugin extends AbstractUIPlugin {
public class GMFGraphDiagramEditorPlugin extends AbstractUIPlugin {
public class GMFGraphDiagramEditorUtil {
public class GMFGraphDiagramEditorUtil {
public class GMFGraphDiagramEditorUtil {
    public static IFile getFile (org.eclipse.emf.common.util.URI uri);
public class GMFGraphDiagramEditorUtil {
    public static Map getSaveOptions ();
    public static void setCharset (IFile file);
public class GMFGraphDiagramEditorUtil extends IDEEditorUtil {
    final public static IFile createAndOpenDiagram (DiagramFileCreator diagramFileCreator, IPath containerPath, String fileName, InputStream initialContents, String kind, IWorkbenchWindow window, IProgressMonitor progressMonitor, boolean openEditor, boolean saveDiagram);
    final public static IFile createNewDiagramFile (DiagramFileCreator diagramFileCreator, IPath containerFullPath, String fileName, InputStream initialContents, String kind, Shell shell, IProgressMonitor progressMonitor);
public class GMFGraphDiagramEditorUtil {
    public static IFile getFile (org.eclipse.emf.common.util.URI uri);
    public static Resource createDiagram (org.eclipse.emf.common.util.URI diagramURI, org.eclipse.emf.common.util.URI modelURI, IProgressMonitor progressMonitor);
    public static View findView (DiagramEditPart diagramEditPart, EObject targetElement, LazyElement2ViewMap lazyElement2ViewMap);
    public static boolean exists (IPath path);
    public static boolean openDiagram (Resource diagram) throws PartInitException; public static class LazyElement2ViewMap {
        public LazyElement2ViewMap (View scope, Set elements) {
        final public List editPartTmpHolder = new ArrayList ();
        final public Map getElement2ViewMap ();
    public static void selectElementsInDiagram (IDiagramWorkbenchPart diagramPart, List editParts);
public class GMFGraphDiagramUpdater {
public class GMFGraphDiagramUpdater {
    public static List getPoint_3022ContainedLinks (View view);
    public static List getPoint_3022IncomingLinks (View view);
public class GMFGraphDiagramUpdater {
public class GMFGraphDiagramUpdater {
    public static List getPolygon_3023ContainedLinks (View view);
    public static List getPolygon_3023IncomingLinks (View view);
    public static List getPolygon_3023OutgoingLinks (View view);
    public static List getPolygon_3023SemanticChildren (View view);
    public static List getPolygon_3024ContainedLinks (View view);
    public static List getPolygon_3024IncomingLinks (View view);
    public static List getPolygon_3024OutgoingLinks (View view);
    public static List getPolygon_3024SemanticChildren (View view);
    public static List getPolygon_3025ContainedLinks (View view);
    public static List getPolygon_3025IncomingLinks (View view);
    public static List getPolygon_3025OutgoingLinks (View view);
public class GMFGraphDiagramUpdater {
public class GMFGraphDiagramUpdater {
    public static List getDiagramLabel_2009ContainedLinks (View view);
    public static List getDiagramLabel_2009IncomingLinks (View view);
    public static List getLabel_3026ContainedLinks (View view);
    public static List getLabel_3026IncomingLinks (View view);
    public static List getLabel_3026OutgoingLinks (View view);
    public static List getLabel_3027ContainedLinks (View view);
    public static List getLabel_3027IncomingLinks (View view);
    public static List getLabel_3027OutgoingLinks (View view);
    public static List getLabel_3028ContainedLinks (View view);
    public static List getLabel_3028IncomingLinks (View view);
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class ResourceSetInfo extends ElementInfo {
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class ResourceSetInfo extends ElementInfo {
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class ResourceSetInfo extends ElementInfo {
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class ResourceSetInfo extends ElementInfo {
public class GMFGraphDocumentProvider extends FileDiagramDocumentProvider {
    private class CustomModificationListener extends FileDiagramModificationListener {
        public CustomModificationListener (GMFGraphDocumentProvider documentProviderParameter, DiagramDocument documentParameter, IFileEditorInput inputParameter) {
        public void startListening ();
        public void stopListening ();
    protected void saveDocumentToFile (IDocument document, IFile file, boolean overwrite, IProgressMonitor monitor) throws CoreException;
public class GMFGraphDocumentProvider extends StorageDocumentProvider implements IDiagramDocumentProvider {
    private TransactionalEditingDomain createEditingDomain (); private class ResourceSetModificationListener extends EContentAdapter {
        public ResourceSetModificationListener (ResourceSetInfo info) {
        public void notifyChanged (Notification notification);
    protected ElementInfo createElementInfo (Object element) throws CoreException;
    protected IDocument createEmptyDocument ();
    protected ISchedulingRule getSynchronizeRule (Object element);
    protected ISchedulingRule getValidateStateRule (Object element); protected class ResourceSetInfo extends StorageInfo {
        private class SynchronizerDelegate implements WorkspaceSynchronizer.Delegate {
            public boolean handleResourceChanged (final Resource resource);
            public boolean handleResourceDeleted (Resource resource);
            public boolean handleResourceMoved (Resource resource, final org.eclipse.emf.common.util.URI newURI);
            public void dispose ();
        public FileEditorInput getEditorInput ();
        public ResourceSet getResourceSet ();
        public ResourceSetInfo (IDiagramDocument document, FileEditorInput editorInput) {
        public boolean isSynchronized ();
        final public void startResourceListening ();
        final public void stopResourceListening ();
        public long getModificationStamp ();
        public void dispose ();
        public void setModificationStamp (long modificationStamp);
        public void setSynchronized ();
        public void setSynchronized (Resource resource);
        public void setUnSynchronized (Resource resource);
    protected void disposeElementInfo (Object element, ElementInfo info);
    protected void doSaveDocument (IProgressMonitor monitor, Object element, IDocument document, boolean overwrite) throws CoreException;
    protected void doSynchronize (Object element, IProgressMonitor monitor) throws CoreException;
    protected void doValidateState (Object element, Object computationContext) throws CoreException;
    protected void handleElementChanged (ResourceSetInfo info, Resource changedResource, IProgressMonitor monitor);
    protected void handleElementDeleted (FileEditorInput input);
    protected void handleElementMoved (FileEditorInput input, IPath path);
    protected void markWholeResourceSetAsDirty (ResourceSet resourceSet);
    protected void setDocumentContentFromStorage (IDocument document, IStorage storage) throws CoreException;
    protected void updateCache (IStorageEditorInput input) throws CoreException;
    public IDiagramDocument getDiagramDocument (Object element);
    public IEditorInput createInputWithEditingDomain (IEditorInput editorInput, TransactionalEditingDomain domain);
    public ResourceSetInfo getResourceSetInfo (Object editorInput);
    public boolean isDeleted (Object element);
    public boolean isModifiable (Object element);
    public boolean isSynchronized (Object element);
    public long getModificationStamp (Object element);
    public long getSynchronizationStamp (Object element);
public class GMFGraphDocumentProvider extends StorageDocumentProvider implements IDiagramDocumentProvider {
    protected class ResourceSetInfo extends StorageInfo {
        public ResourceSetInfo (IDiagramDocument document, FileEditorInput editorInput) {
    protected void handleElementDeleted (FileEditorInput input);
    protected void handleElementMoved (FileEditorInput input, IPath path);
    protected void markWholeResourceSetAsDirty (ResourceSet resourceSet);
    protected void setDocumentContentFromStorage (IDocument document, IStorage storage) throws CoreException;
    public long getSynchronizationStamp (Object element);
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    private org.eclipse.emf.transaction.TransactionalEditingDomain createEditingDomain ();
    protected ElementInfo createElementInfo (Object element) throws CoreException, org.eclipse.core.runtime.CoreException;
    protected class ResourceSetInfo extends ElementInfo {
        public ResourceSetInfo (IDiagramDocument document, IEditorInput editorInput) {
        public boolean isModifiable ();
        public void setUpdateCache (boolean update);
    protected void doUpdateStateCache (Object element) throws CoreException;
    protected void handleElementMoved (IEditorInput input, org.eclipse.emf.common.util.URI uri);
    protected void setDocumentContent (IDocument document, IEditorInput element) throws CoreException;
    protected void setupDocument (Object element, IDocument document);
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    private org.eclipse.emf.transaction.TransactionalEditingDomain createEditingDomain ();
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class ResourceSetInfo extends ElementInfo {
        private class SynchronizerDelegate implements WorkspaceSynchronizer.Delegate {
public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
    protected class ResourceSetInfo extends ElementInfo {
        private class SynchronizerDelegate implements WorkspaceSynchronizer.Delegate {
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected Collection selectionChangedListeners = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
        protected void unsetTarget (Resource target);
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                public void setActionBars (IActionBars actionBars);
                public void setSelectionToViewer (List selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
    public boolean isDirty ();
    public void createPages ();
    public void dispose ();
    public void doSave (IProgressMonitor progressMonitor);
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    protected void firePropertyChange (int action);
    @Override
    protected void pageChange (int pageIndex);
    @Override
    public boolean isDirty ();
    @Override
    public boolean isSaveAsAllowed ();
    @Override
    public void createPages ();
    @Override
    public void dispose ();
    @Override
    public void doSave (IProgressMonitor progressMonitor);
    @Override
    public void doSaveAs ();
    @Override
    public void init (IEditorSite site, IEditorInput editorInput);
    @Override
    public void setFocus ();
    @SuppressWarnings("unchecked")
    @Override
    protected Collection < ISelectionChangedListener > selectionChangedListeners = new ArrayList < ISelectionChangedListener > ();
    protected Collection < Resource > changedResources = new ArrayList < Resource > ();
    protected Collection < Resource > removedResources = new ArrayList < Resource > ();
    protected Collection < Resource > savedResources = new ArrayList < Resource > ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        @Override
        protected void setTarget (Resource target);
        @Override
        protected void unsetTarget (Resource target);
        @Override
        public void notifyChanged (Notification notification);
    ;
    protected Map < Resource, Diagnostic > resourceToDiagnosticMap = new LinkedHashMap < Resource, Diagnostic > ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                @Override
                public void setActionBars (IActionBars actionBars);
                @Override
                public void setSelectionToViewer (List < ? > selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
[GMFGraphEditor-12.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! (getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
                public void run ();
            );
        getContainer ().addControlListener (new ControlAdapter () {
            @Override
            public void controlResized (ControlEvent event);
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
            public void run ();
        );
[GMFGraphEditor-14.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! (getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            );
        getContainer ().addControlListener (new ControlAdapter () {
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
        );
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFGraphEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            );
        getContainer ().addControlListener (new ControlAdapter () {
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
        );
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    protected MarkerHelper markerHelper = new EditUIMarkerHelper ();
    protected boolean isPersisted (Resource resource); protected boolean updateProblemIndication = true;
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
    ;
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
    ;
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGraphEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFGraphEditPartFactory implements EditPartFactory {
    final public static String EXTERNAL_NODE_LABELS_LAYER = "External Node Labels";
public class GMFGraphEditPartFactory implements EditPartFactory {
public class GMFGraphEditPartFactory implements EditPartFactory {
    private static class TextCellEditorLocator implements CellEditorLocator {
        public TextCellEditorLocator (WrapLabel wrapLabel) {
public class GMFGraphEditPartFactory implements EditPartFactory {
    private static class TextCellEditorLocator implements CellEditorLocator {
        public TextCellEditorLocator (WrappingLabel wrapLabel) {
final public class GMFGraphEditPlugin extends EMFPlugin {
final public class GMFGraphEditPlugin extends EMFPlugin {
    @Override
public class GMFGraphElementChooserDialog extends Dialog {
public class GMFGraphElementChooserDialog extends Dialog {
    public int open ();
public class GMFGraphElementTypes extends ElementInitializers {
public class GMFGraphElementTypes extends ElementInitializers {
    final public static IElementType Polygon_3023 = getElementType ("org.eclipse.gmf.graphdef.editor.Polygon_3023");
    final public static IElementType Polygon_3024 = getElementType ("org.eclipse.gmf.graphdef.editor.Polygon_3024");
    final public static IElementType Polygon_3025 = getElementType ("org.eclipse.gmf.graphdef.editor.Polygon_3025");
public class GMFGraphElementTypes extends ElementInitializers {
public class GMFGraphElementTypes extends ElementInitializers {
    final public static IElementType DiagramLabel_2009 = getElementType ("org.eclipse.gmf.graphdef.editor.DiagramLabel_2009");
    final public static IElementType Label_3026 = getElementType ("org.eclipse.gmf.graphdef.editor.Label_3026");
    final public static IElementType Label_3027 = getElementType ("org.eclipse.gmf.graphdef.editor.Label_3027");
    final public static IElementType Label_3028 = getElementType ("org.eclipse.gmf.graphdef.editor.Label_3028");
public class GMFGraphElementTypes {
public class GMFGraphElementTypes extends ElementInitializers {
public class GMFGraphElementTypes extends ElementInitializers {
    final public static IElementType Compartment_2001 = getElementType ("org.eclipse.gmf.graphdef.editor.Compartment_2001");
    final public static IElementType Connection_2003 = getElementType ("org.eclipse.gmf.graphdef.editor.Connection_2003");
    final public static IElementType DiagramElementFigure_4001 = getElementType ("org.eclipse.gmf.graphdef.editor.DiagramElementFigure_4001");
    final public static IElementType Ellipse_3003 = getElementType ("org.eclipse.gmf.graphdef.editor.Ellipse_3003");
    final public static IElementType Ellipse_3006 = getElementType ("org.eclipse.gmf.graphdef.editor.Ellipse_3006");
    final public static IElementType FigureGallery_2004 = getElementType ("org.eclipse.gmf.graphdef.editor.FigureGallery_2004");
    final public static IElementType Node_2002 = getElementType ("org.eclipse.gmf.graphdef.editor.Node_2002");
    final public static IElementType Polyline_3005 = getElementType ("org.eclipse.gmf.graphdef.editor.Polyline_3005");
    final public static IElementType Polyline_3008 = getElementType ("org.eclipse.gmf.graphdef.editor.Polyline_3008");
    final public static IElementType Rectangle_3001 = getElementType ("org.eclipse.gmf.graphdef.editor.Rectangle_3001");
    final public static IElementType Rectangle_3002 = getElementType ("org.eclipse.gmf.graphdef.editor.Rectangle_3002");
    final public static IElementType RoundedRectangle_3004 = getElementType ("org.eclipse.gmf.graphdef.editor.RoundedRectangle_3004");
    final public static IElementType RoundedRectangle_3007 = getElementType ("org.eclipse.gmf.graphdef.editor.RoundedRectangle_3007");
public class GMFGraphElementTypes extends ElementInitializers {
    final public static IElementType ChildAccess_4002 = getElementType ("org.eclipse.gmf.graphdef.editor.ChildAccess_4002");
    final public static IElementType CompartmentAccessor_4003 = getElementType ("org.eclipse.gmf.graphdef.editor.CompartmentAccessor_4003");
    final public static IElementType Compartment_2005 = getElementType ("org.eclipse.gmf.graphdef.editor.Compartment_2005");
    final public static IElementType Connection_2007 = getElementType ("org.eclipse.gmf.graphdef.editor.Connection_2007");
    final public static IElementType DiagramElementFigure_4005 = getElementType ("org.eclipse.gmf.graphdef.editor.DiagramElementFigure_4005");
    final public static IElementType DiagramLabelAccessor_4004 = getElementType ("org.eclipse.gmf.graphdef.editor.DiagramLabelAccessor_4004");
    final public static IElementType Ellipse_3012 = getElementType ("org.eclipse.gmf.graphdef.editor.Ellipse_3012");
    final public static IElementType Ellipse_3015 = getElementType ("org.eclipse.gmf.graphdef.editor.Ellipse_3015");
    final public static IElementType Ellipse_3019 = getElementType ("org.eclipse.gmf.graphdef.editor.Ellipse_3019");
    final public static IElementType FigureDescriptor_3009 = getElementType ("org.eclipse.gmf.graphdef.editor.FigureDescriptor_3009");
    final public static IElementType FigureGallery_2008 = getElementType ("org.eclipse.gmf.graphdef.editor.FigureGallery_2008");
    final public static IElementType Node_2006 = getElementType ("org.eclipse.gmf.graphdef.editor.Node_2006");
    final public static IElementType Polyline_3014 = getElementType ("org.eclipse.gmf.graphdef.editor.Polyline_3014");
    final public static IElementType Polyline_3017 = getElementType ("org.eclipse.gmf.graphdef.editor.Polyline_3017");
    final public static IElementType Polyline_3021 = getElementType ("org.eclipse.gmf.graphdef.editor.Polyline_3021");
    final public static IElementType Rectangle_3010 = getElementType ("org.eclipse.gmf.graphdef.editor.Rectangle_3010");
    final public static IElementType Rectangle_3011 = getElementType ("org.eclipse.gmf.graphdef.editor.Rectangle_3011");
    final public static IElementType Rectangle_3018 = getElementType ("org.eclipse.gmf.graphdef.editor.Rectangle_3018");
    final public static IElementType RoundedRectangle_3013 = getElementType ("org.eclipse.gmf.graphdef.editor.RoundedRectangle_3013");
    final public static IElementType RoundedRectangle_3016 = getElementType ("org.eclipse.gmf.graphdef.editor.RoundedRectangle_3016");
    final public static IElementType RoundedRectangle_3020 = getElementType ("org.eclipse.gmf.graphdef.editor.RoundedRectangle_3020");
public class GMFGraphElementTypes extends ElementInitializers {
public class GMFGraphElementTypes extends ElementInitializers {
    final public static IElementType NodeContentPane_4006 = getElementType ("org.eclipse.gmf.graphdef.editor.NodeContentPane_4006");
public class GMFGraphElementTypes extends ElementInitializers {
public class GMFGraphElementTypes extends ElementInitializers {
    final public static IElementType Point_3022 = getElementType ("org.eclipse.gmf.graphdef.editor.Point_3022");
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
    public static GMFGraphPackage getPackage ();
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
    @Deprecated
    public static GMFGraphPackage getPackage ();
    @Override
    public EObject create (EClass eClass);
    @Override
    public Object createFromString (EDataType eDataType, String initialValue);
    @Override
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
    public SVGFigure createSVGFigure ();
    public SVGProperty createSVGProperty ();
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
    public ConstantColor createConstantColor ();
    public Dimension createDimension ();
    public LineBorder createLineBorder ();
    public LineKind createLineKindFromString (EDataType eDataType, String initialValue);
    public String convertColorConstantsToString (EDataType eDataType, Object instanceValue);
    public String convertDirectionToString (EDataType eDataType, Object instanceValue);
    public String convertFontStyleToString (EDataType eDataType, Object instanceValue);
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
    public BorderLayout createBorderLayout ();
    public CustomLayout createCustomLayout ();
    public GridLayout createGridLayout ();
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
    public XYLayout createXYLayout ();
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphFactoryImpl extends EFactoryImpl implements GMFGraphFactory {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ScalablePolygonItemProvider scalablePolygonItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected DefaultSizeFacetItemProvider defaultSizeFacetItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected Collection supportedTypes = new ArrayList ();
    public Adapter adapt (Notifier notifier, Object type);
    public Adapter createAlignmentFacetAdapter ();
    public Adapter createBasicFontAdapter ();
    public Adapter createBorderLayoutAdapter ();
    public Adapter createBorderLayoutDataAdapter ();
    public Adapter createCanvasAdapter ();
    public Adapter createCompartmentAdapter ();
    public Adapter createCompoundBorderAdapter ();
    public Adapter createConnectionAdapter ();
    public Adapter createConstantColorAdapter ();
    public Adapter createCustomAttributeAdapter ();
    public Adapter createCustomBorderAdapter ();
    public Adapter createCustomConnectionAdapter ();
    public Adapter createCustomDecorationAdapter ();
    public Adapter createCustomFigureAdapter ();
    public Adapter createCustomLayoutAdapter ();
    public Adapter createCustomLayoutDataAdapter ();
    public Adapter createDefaultSizeFacetAdapter ();
    public Adapter createDiagramLabelAdapter ();
    public Adapter createDimensionAdapter ();
    public Adapter createEllipseAdapter ();
    public Adapter createFigureAccessorAdapter ();
    public Adapter createFigureGalleryAdapter ();
    public Adapter createFigureRefAdapter ();
    public Adapter createFlowLayoutAdapter ();
    public Adapter createGeneralFacetAdapter ();
    public Adapter createGradientFacetAdapter ();
    public Adapter createGridLayoutAdapter ();
    public Adapter createGridLayoutDataAdapter ();
    public Adapter createInsetsAdapter ();
    public Adapter createLabelAdapter ();
    public Adapter createLabelOffsetFacetAdapter ();
    public Adapter createLabeledContainerAdapter ();
    public Adapter createLineBorderAdapter ();
    public Adapter createMarginBorderAdapter ();
    public Adapter createNodeAdapter ();
    public Adapter createPointAdapter ();
    public Adapter createPolygonAdapter ();
    public Adapter createPolygonDecorationAdapter ();
    public Adapter createPolylineAdapter ();
    public Adapter createPolylineConnectionAdapter ();
    public Adapter createPolylineDecorationAdapter ();
    public Adapter createRGBColorAdapter ();
    public Adapter createRectangleAdapter ();
    public Adapter createRoundedRectangleAdapter ();
    public Adapter createScalablePolygonAdapter ();
    public Adapter createStackLayoutAdapter ();
    public Adapter createXYLayoutAdapter ();
    public Object adapt (Object object, Object type);
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    @Override
    public Adapter adapt (Notifier notifier, Object type);
    @Override
    public Adapter createAlignmentFacetAdapter ();
    @Override
    public Adapter createBasicFontAdapter ();
    @Override
    public Adapter createBorderLayoutAdapter ();
    @Override
    public Adapter createBorderLayoutDataAdapter ();
    @Override
    public Adapter createCanvasAdapter ();
    @Override
    public Adapter createCompartmentAdapter ();
    @Override
    public Adapter createCompoundBorderAdapter ();
    @Override
    public Adapter createConnectionAdapter ();
    @Override
    public Adapter createConstantColorAdapter ();
    @Override
    public Adapter createCustomAttributeAdapter ();
    @Override
    public Adapter createCustomBorderAdapter ();
    @Override
    public Adapter createCustomConnectionAdapter ();
    @Override
    public Adapter createCustomDecorationAdapter ();
    @Override
    public Adapter createCustomFigureAdapter ();
    @Override
    public Adapter createCustomLayoutAdapter ();
    @Override
    public Adapter createCustomLayoutDataAdapter ();
    @Override
    public Adapter createDefaultSizeFacetAdapter ();
    @Override
    public Adapter createDiagramLabelAdapter ();
    @Override
    public Adapter createDimensionAdapter ();
    @Override
    public Adapter createEllipseAdapter ();
    @Override
    public Adapter createFigureAccessorAdapter ();
    @Override
    public Adapter createFigureGalleryAdapter ();
    @Override
    public Adapter createFigureRefAdapter ();
    @Override
    public Adapter createFlowLayoutAdapter ();
    @Override
    public Adapter createGeneralFacetAdapter ();
    @Override
    public Adapter createGradientFacetAdapter ();
    @Override
    public Adapter createGridLayoutAdapter ();
    @Override
    public Adapter createGridLayoutDataAdapter ();
    @Override
    public Adapter createInsetsAdapter ();
    @Override
    public Adapter createLabelAdapter ();
    @Override
    public Adapter createLabelOffsetFacetAdapter ();
    @Override
    public Adapter createLabeledContainerAdapter ();
    @Override
    public Adapter createLineBorderAdapter ();
    @Override
    public Adapter createMarginBorderAdapter ();
    @Override
    public Adapter createNodeAdapter ();
    @Override
    public Adapter createPointAdapter ();
    @Override
    public Adapter createPolygonAdapter ();
    @Override
    public Adapter createPolygonDecorationAdapter ();
    @Override
    public Adapter createPolylineAdapter ();
    @Override
    public Adapter createPolylineConnectionAdapter ();
    @Override
    public Adapter createPolylineDecorationAdapter ();
    @Override
    public Adapter createRGBColorAdapter ();
    @Override
    public Adapter createRectangleAdapter ();
    @Override
    public Adapter createRoundedRectangleAdapter ();
    @Override
    public Adapter createScalablePolygonAdapter ();
    @Override
    public Adapter createStackLayoutAdapter ();
    @Override
    public Adapter createXYLayoutAdapter ();
    @Override
    public Adapter createXYLayoutDataAdapter ();
    @Override
    public Object adapt (Object object, Object type);
    @Override
    protected Collection < Object > supportedTypes = new ArrayList < Object > ();
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    @Override
    @Override
    protected ChildAccessItemProvider childAccessItemProvider;
    protected FigureDescriptorItemProvider figureDescriptorItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager (GMFGraphEditPlugin.INSTANCE, GMFGraphPackage.eNS_URI);
    public List < IChildCreationExtender > getChildCreationExtenders ();
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    @Override
    protected BorderRefItemProvider borderRefItemProvider;
    protected LayoutRefItemProvider layoutRefItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    public Adapter createSVGFigureAdapter ();
    @Override
    protected SVGFigureItemProvider svgFigureItemProvider;
    protected SVGPropertyItemProvider svgPropertyItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IChildCreationExtender, IDisposable {
    @Override
    protected Rectangle2DItemProvider rectangle2DItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected BorderLayoutDataItemProvider borderLayoutDataItemProvider;
    protected BorderLayoutItemProvider borderLayoutItemProvider;
    protected CustomAttributeItemProvider customAttributeItemProvider;
    protected CustomLayoutDataItemProvider customLayoutDataItemProvider;
    protected CustomLayoutItemProvider customLayoutItemProvider;
    protected GridLayoutDataItemProvider gridLayoutDataItemProvider;
    protected GridLayoutItemProvider gridLayoutItemProvider;
    public Adapter createBorderLayoutAdapter ();
    public Adapter createCustomLayoutAdapter ();
    public Adapter createGridLayoutAdapter ();
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected DiagramLabelItemProvider diagramLabelItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected FlowLayoutItemProvider flowLayoutItemProvider;
    protected StackLayoutItemProvider stackLayoutItemProvider;
    protected XYLayoutDataItemProvider xyLayoutDataItemProvider;
    protected XYLayoutItemProvider xyLayoutItemProvider;
    public Adapter createStackLayoutAdapter ();
    public Adapter createXYLayoutAdapter ();
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected AlignmentFacetItemProvider alignmentFacetItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LabelOffsetFacetItemProvider labelOffsetFacetItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ChildItemProvider childItemProvider;
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected FigureAccessorItemProvider figureAccessorItemProvider;
class GMFGraphMatchingStrategy extends DiagramDocumentEditorMatchingStrategy {
public class GMFGraphMatchingStrategy implements IEditorMatchingStrategy {
    public boolean matches (IEditorReference editorRef, IEditorInput input);
public class GMFGraphModelWizard extends Wizard implements INewWizard {
    protected GMFGraphFactory gmfGraphFactory = gmfGraphPackage.getGMFGraphFactory ();
    protected GMFGraphModelWizardInitialObjectCreationPage initialObjectCreationPage;
    protected GMFGraphPackage gmfGraphPackage = GMFGraphPackage.eINSTANCE;
    protected List initialObjectNames;
    public class GMFGraphModelWizardInitialObjectCreationPage extends WizardPage {
        protected Collection getEncodings (); protected Combo encodingField;
        protected Combo initialObjectField;
        protected List encodings;
        protected ModifyListener validator = new ModifyListener () {
            public void modifyText (ModifyEvent e);
        ;
        protected String getLabel (String typeName);
        protected boolean validatePage ();
        public GMFGraphModelWizardInitialObjectCreationPage (String pageId) {
        public String getEncoding ();
        public String getInitialObjectName ();
        public void createControl (Composite parent);
        public void setVisible (boolean visible);
public class GMFGraphModelWizard extends Wizard implements INewWizard {
    protected boolean openEditor (IFile modelFile);
public class GMFGraphNavigatorLabelProvider extends LabelProvider implements ICommonLabelProvider, ITreePathLabelProvider {
    private String getCompartment_2001Text (View view);
    private String getConnection_2003Text (View view);
    private String getFigureGallery_2004Text (View view);
public class GMFGraphNavigatorLabelProvider extends LabelProvider implements ICommonLabelProvider, ITreePathLabelProvider {
public class GMFGraphNewDiagramFileWizard extends Wizard {
    private class RootElementSelectorPage extends WizardPage implements ISelectionChangedListener {
        protected RootElementSelectorPage () {
        public void createControl (Composite parent);
        public void selectionChanged (SelectionChangedEvent event);
    public GMFGraphNewDiagramFileWizard (IFile selectedModelFile, IWorkbenchPage workbenchPage, IStructuredSelection selection, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
public class GMFGraphNewDiagramFileWizard extends Wizard {
    private static class DiagramRootElementSelectionPage extends ModelElementSelectionPage {
        protected DiagramRootElementSelectionPage (String pageName) {
        protected String getSelectionTitle ();
        protected boolean validatePage ();
    public GMFGraphNewDiagramFileWizard (org.eclipse.emf.common.util.URI domainModelURI, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
public class GMFGraphNewDiagramFileWizard extends Wizard {
    public GMFGraphNewDiagramFileWizard (org.eclipse.emf.common.util.URI domainModelURI, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
public class GMFGraphNewDiagramFileWizard extends Wizard {
    public GMFGraphNewDiagramFileWizard (URI domainModelURI, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
public class GMFGraphNewDiagramFileWizard extends Wizard {
    public GMFGraphNewDiagramFileWizard (IFile selectedModelFile, IWorkbenchPage workbenchPage, IStructuredSelection selection) {
public class GMFGraphNewDiagramFileWizard extends Wizard {
    private class RootElementSelectorPage extends WizardPage implements ISelectionChangedListener {
        protected RootElementSelectorPage () {
        public void createControl (Composite parent);
        public void selectionChanged (SelectionChangedEvent event);
    public GMFGraphNewDiagramFileWizard (IFile selectedModelFile, IWorkbenchPage workbenchPage, IStructuredSelection selection, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
[GMFGraphPackageImpl-9.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-10.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-10.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-11.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-11.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-12.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-13.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-14.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-15.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-16.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-16.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
    public EAttribute getLabelOffsetFacet_X ();
[GMFGraphPackageImpl-17.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-17.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-18.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-19.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-20.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-20.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-21.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-21.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-22.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-23.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-23.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-24.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-24.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-25.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-25.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-26.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-27.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-28.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-29.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-29.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
    public EClass getFigureHandle ();
    public EReference getFigureHandle_ReferencingElements ();
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
    public EClass getAbstractFigure ();
    public EReference getChildAccess_Figure ();
    public EReference getChildAccess_Owner ();
    public EReference getDiagramLabel_Accessor ();
    public EReference getFigureDescriptor_Accessors ();
    public EReference getFigureDescriptor_ActualFigure ();
[GMFGraphPackageImpl-30.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-30.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGraphPackageImpl-31.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-31.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGraphPackageImpl-32.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-32.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGraphPackageImpl-33.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-33.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGraphPackageImpl-34.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-34.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGraphPackageImpl-35.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-35.java, Txl/api_clone_java.Txl] : TXL0507E - Repeated space failure in same replacement (a larger size is required for this transform)
[GMFGraphPackageImpl-36.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-36.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-36.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGraphPackageImpl-37.java' as a [program], at or near:
[GMFGraphPackageImpl-37.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-37.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-37.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGraphPackageImpl-38.java' as a [program], at or near:
[GMFGraphPackageImpl-38.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-38.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-38.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGraphPackageImpl-39.java' as a [program], at or near:
[GMFGraphPackageImpl-39.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-39.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-39.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGraphPackageImpl-40.java' as a [program], at or near:
[GMFGraphPackageImpl-40.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-40.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-40.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGraphPackageImpl-41.java' as a [program], at or near:
[GMFGraphPackageImpl-41.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFGraphPackageImpl-41.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[GMFGraphPackageImpl-41.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'GMFGraphPackageImpl-42.java' as a [program], at or near:
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
    public EAttribute getColorStyle_BackgroundColor ();
    public EAttribute getCustomFigure_BundleName ();
    public EReference getFigure_ColorStyle ();
    public EReference getSizeStyle_MaxSize ();
    public EReference getSizeStyle_MinSize ();
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
    public EAttribute getBasicFont_FaceName ();
    public EAttribute getBasicFont_Height ();
    public EAttribute getConstantColor_Value ();
    public EAttribute getCustomClass_BundleName ();
    public EAttribute getCustomClass_QualifiedClassName ();
    public EAttribute getDimension_Dx ();
    public EAttribute getInsets_Bottom ();
    public EAttribute getInsets_Left ();
    public EAttribute getInsets_Right ();
    public EAttribute getRGBColor_Blue ();
    public EAttribute getRGBColor_Green ();
    public EClass getBasicFont ();
    public EClass getConstantColor ();
    public EClass getCustomBorder ();
    public EClass getLineBorder ();
    public EReference getCompoundBorder_Inner ();
    public EReference getFigure_BackgroundColor ();
    public EReference getFigure_Font ();
    public EReference getFigure_ForegroundColor ();
    public EReference getFigure_MaximumSize ();
    public EReference getLineBorder_Color ();
[GMFGraphPackageImpl-6.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
    public EAttribute getBorderLayoutData_Alignment ();
    public EAttribute getCustomAttribute_DirectAccess ();
    public EAttribute getCustomAttribute_MultiStatementValue ();
    public EAttribute getCustomAttribute_Name ();
    public EAttribute getGridLayoutData_GrabExcessHorizontalSpace ();
    public EAttribute getGridLayoutData_GrabExcessVerticalSpace ();
    public EAttribute getGridLayoutData_HorizontalAlignment ();
    public EAttribute getGridLayoutData_HorizontalIndent ();
    public EAttribute getGridLayoutData_HorizontalSpan ();
    public EAttribute getGridLayoutData_VerticalAlignment ();
    public EAttribute getGridLayoutData_VerticalSpan ();
    public EAttribute getGridLayout_EqualWidth ();
    public EClass getBorderLayout ();
    public EClass getCustomLayout ();
    public EClass getGridLayout ();
    public EClass getLayout ();
    public EClass getLayoutData ();
    public EReference getGridLayoutData_SizeHint ();
    public EReference getGridLayout_Margins ();
    public EReference getGridLayout_Spacing ();
    public EReference getLayoutData_Owner ();
    public EReference getLayoutable_Layout ();
[GMFGraphPackageImpl-7.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
[GMFGraphPackageImpl-8.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
    public EAttribute getFlowLayout_ForceSingleLine ();
    public EAttribute getFlowLayout_MajorAlignment ();
    public EAttribute getFlowLayout_MajorSpacing ();
    public EAttribute getFlowLayout_MatchMinorSize ();
    public EAttribute getFlowLayout_MinorAlignment ();
    public EAttribute getFlowLayout_MinorSpacing ();
    public EClass getXYLayout ();
    public EReference getXYLayoutData_Size ();
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
    protected IParser createCompartmentCompartmentName_5001Parser ();
    protected IParser createConnectionConnectionName_5003Parser ();
    protected IParser createFigureGalleryFigureGalleryName_5004Parser ();
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
    protected IParser createCompartmentName_5005Parser ();
    protected IParser createConnectionName_5007Parser ();
    protected IParser createFigureDescriptorName_5008Parser ();
    protected IParser createFigureGalleryName_5009Parser ();
    public static class HintAdapter extends ParserHintAdapter {
        public HintAdapter (IElementType type, EObject object, String parserHint) {
        public Object getAdapter (Class adapter);
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
    protected IParser createLabelText_5010Parser ();
    protected IParser createLabelText_5011Parser ();
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
    protected IParser createCompartmentCompartmentName_4001Parser ();
    protected IParser createConnectionConnectionName_4003Parser ();
    protected IParser createFigureGalleryFigureGalleryName_4004Parser ();
public class GMFGraphParserProvider extends AbstractProvider implements IParserProvider {
    protected IParser createCompartmentCompartmentName_5001Parser ();
    protected IParser createConnectionConnectionName_5003Parser ();
    protected IParser createFigureGalleryFigureGalleryName_5004Parser ();
public class GMFGraphPropertySection extends AdvancedPropertySection implements IPropertySourceProvider {
    public static class ChildMetaclassItemPropertyDescriptor extends ItemPropertyDescriptor {
        protected Collection getComboBoxObjects (Object object);
        public void setPropertyValue (Object object, Object value);
    public static class SingleDescriptorPropertySource implements IItemPropertySource {
        public IItemPropertyDescriptor getPropertyDescriptor (Object object, Object propertyID);
        public List getPropertyDescriptors (Object object);
        public Object getEditableValue (Object object);
public class GMFGraphPropertySection extends AdvancedPropertySection implements IPropertySourceProvider {
public class GMFGraphPropertySection extends AdvancedPropertySection implements IPropertySourceProvider {
public class GMFGraphPropertySection extends AdvancedPropertySection implements IPropertySourceProvider {
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
    @SuppressWarnings("unchecked")
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
    protected WizardOperationMode mode = new WizardOperationMode ("gmfgraph", WizardOperationMode.CREATE);
    public void setMode (String mode);
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
    @SuppressWarnings("unchecked")
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
    protected FileDomainModelSource domainModelSource = new FileDomainModelSource ();
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
    public class PredefinedInitialObjectCreationPage extends GMFGraphModelWizardInitialObjectCreationPage {
        protected boolean validatePage ();
        public PredefinedInitialObjectCreationPage (String pageId) {
        public String getEncoding ();
        public String getInitialObjectName ();
        public void createControl (Composite parent);
        public void setVisible (boolean visible);
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
public class GMFGraphSimpleModelWizard extends GMFGraphModelWizard {
    @SuppressWarnings("unchecked")
    protected void reconcileModel ();
    @SuppressWarnings("unchecked")
    protected ModelSelectionPage graphicalModelSelectionPage;
    protected boolean isInReconcileMode ();
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
    protected Object doSwitch (EClass theEClass, EObject theEObject);
    public Object caseAlignmentFacet (AlignmentFacet object);
    public Object caseBasicFont (BasicFont object);
    public Object caseBorder (Border object);
    public Object caseBorderLayout (BorderLayout object);
    public Object caseBorderLayoutData (BorderLayoutData object);
    public Object caseCanvas (Canvas object);
    public Object caseColor (Color object);
    public Object caseCompartment (Compartment object);
    public Object caseCompoundBorder (CompoundBorder object);
    public Object caseConnection (Connection object);
    public Object caseConnectionFigure (ConnectionFigure object);
    public Object caseConstantColor (ConstantColor object);
    public Object caseCustomAttribute (CustomAttribute object);
    public Object caseCustomBorder (CustomBorder object);
    public Object caseCustomClass (CustomClass object);
    public Object caseCustomConnection (CustomConnection object);
    public Object caseCustomDecoration (CustomDecoration object);
    public Object caseCustomFigure (CustomFigure object);
    public Object caseCustomLayout (CustomLayout object);
    public Object caseCustomLayoutData (CustomLayoutData object);
    public Object caseDecorationFigure (DecorationFigure object);
    public Object caseDefaultSizeFacet (DefaultSizeFacet object);
    public Object caseDiagramElement (DiagramElement object);
    public Object caseDiagramLabel (DiagramLabel object);
    public Object caseDimension (Dimension object);
    public Object caseEllipse (Ellipse object);
    public Object caseFigure (Figure object);
    public Object caseFigureAccessor (FigureAccessor object);
    public Object caseFigureGallery (FigureGallery object);
    public Object caseFigureHandle (FigureHandle object);
    public Object caseFigureMarker (FigureMarker object);
    public Object caseFigureRef (FigureRef object);
    public Object caseFlowLayout (FlowLayout object);
    public Object caseFont (Font object);
    public Object caseGeneralFacet (GeneralFacet object);
    public Object caseGradientFacet (GradientFacet object);
    public Object caseGridLayout (GridLayout object);
    public Object caseGridLayoutData (GridLayoutData object);
    public Object caseIdentity (Identity object);
    public Object caseInsets (Insets object);
    public Object caseLabel (Label object);
    public Object caseLabelOffsetFacet (LabelOffsetFacet object);
    public Object caseLabeledContainer (LabeledContainer object);
    public Object caseLayout (Layout object);
    public Object caseLayoutData (LayoutData object);
    public Object caseLayoutable (Layoutable object);
    public Object caseLineBorder (LineBorder object);
    public Object caseMarginBorder (MarginBorder object);
    public Object caseNode (Node object);
    public Object casePoint (Point object);
    public Object casePolygon (Polygon object);
    public Object casePolygonDecoration (PolygonDecoration object);
    public Object casePolyline (Polyline object);
    public Object casePolylineConnection (PolylineConnection object);
    public Object casePolylineDecoration (PolylineDecoration object);
    public Object caseRGBColor (RGBColor object);
    public Object caseRectangle (Rectangle object);
    public Object caseRoundedRectangle (RoundedRectangle object);
    public Object caseScalablePolygon (ScalablePolygon object);
    public Object caseShape (Shape object);
    public Object caseStackLayout (StackLayout object);
    public Object caseVisualFacet (VisualFacet object);
    public Object caseXYLayout (XYLayout object);
    public Object caseXYLayoutData (XYLayoutData object);
    public Object defaultCase (EObject object);
    public Object doSwitch (EObject theEObject);
public class GMFGraphSwitch < T > {
    protected T doSwitch (EClass theEClass, EObject theEObject);
    public T caseAlignmentFacet (AlignmentFacet object);
    public T caseBasicFont (BasicFont object);
    public T caseBorder (Border object);
    public T caseBorderLayout (BorderLayout object);
    public T caseBorderLayoutData (BorderLayoutData object);
    public T caseCanvas (Canvas object);
    public T caseColor (Color object);
    public T caseCompartment (Compartment object);
    public T caseCompoundBorder (CompoundBorder object);
    public T caseConnection (Connection object);
    public T caseConnectionFigure (ConnectionFigure object);
    public T caseConstantColor (ConstantColor object);
    public T caseCustomAttribute (CustomAttribute object);
    public T caseCustomBorder (CustomBorder object);
    public T caseCustomClass (CustomClass object);
    public T caseCustomConnection (CustomConnection object);
    public T caseCustomDecoration (CustomDecoration object);
    public T caseCustomFigure (CustomFigure object);
    public T caseCustomLayout (CustomLayout object);
    public T caseCustomLayoutData (CustomLayoutData object);
    public T caseDecorationFigure (DecorationFigure object);
    public T caseDefaultSizeFacet (DefaultSizeFacet object);
    public T caseDiagramElement (DiagramElement object);
    public T caseDiagramLabel (DiagramLabel object);
    public T caseDimension (Dimension object);
    public T caseEllipse (Ellipse object);
    public T caseFigure (Figure object);
    public T caseFigureAccessor (FigureAccessor object);
    public T caseFigureGallery (FigureGallery object);
    public T caseFigureHandle (FigureHandle object);
    public T caseFigureMarker (FigureMarker object);
    public T caseFigureRef (FigureRef object);
    public T caseFlowLayout (FlowLayout object);
    public T caseFont (Font object);
    public T caseGeneralFacet (GeneralFacet object);
    public T caseGradientFacet (GradientFacet object);
    public T caseGridLayout (GridLayout object);
    public T caseGridLayoutData (GridLayoutData object);
    public T caseIdentity (Identity object);
    public T caseInsets (Insets object);
    public T caseLabel (Label object);
    public T caseLabelOffsetFacet (LabelOffsetFacet object);
    public T caseLabeledContainer (LabeledContainer object);
    public T caseLayout (Layout object);
    public T caseLayoutData (LayoutData object);
    public T caseLayoutable (Layoutable object);
    public T caseLineBorder (LineBorder object);
    public T caseMarginBorder (MarginBorder object);
    public T caseNode (Node object);
    public T casePoint (Point object);
    public T casePolygon (Polygon object);
    public T casePolygonDecoration (PolygonDecoration object);
    public T casePolyline (Polyline object);
    public T casePolylineConnection (PolylineConnection object);
    public T casePolylineDecoration (PolylineDecoration object);
    public T caseRGBColor (RGBColor object);
    public T caseRectangle (Rectangle object);
    public T caseRoundedRectangle (RoundedRectangle object);
    public T caseScalablePolygon (ScalablePolygon object);
    public T caseShape (Shape object);
    public T caseStackLayout (StackLayout object);
    public T caseVisualFacet (VisualFacet object);
    public T caseXYLayout (XYLayout object);
    public T caseXYLayoutData (XYLayoutData object);
    public T defaultCase (EObject object);
    public T doSwitch (EObject theEObject);
public class GMFGraphSwitch < T > {
    public T caseFigureHandle (FigureHandle object);
public class GMFGraphSwitch < T > {
    public T caseAbstractFigure (AbstractFigure object);
public class GMFGraphSwitch < T > {
public class GMFGraphSwitch < T > {
public class GMFGraphSwitch < T > {
public class GMFGraphSwitch < T > {
    public T caseSVGFigure (SVGFigure object);
public class GMFGraphSwitch < T > {
public class GMFGraphSwitch < T > {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
    public Object caseBorderLayout (BorderLayout object);
    public Object caseCustomLayout (CustomLayout object);
    public Object caseGridLayout (GridLayout object);
    public Object caseLayout (Layout object);
    public Object caseLayoutData (LayoutData object);
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphSwitch {
    public Object caseXYLayout (XYLayout object);
public class GMFGraphSwitch {
public class GMFGraphSwitch {
public class GMFGraphTextNonResizableEditPolicy extends NonResizableEditPolicyEx {
public class GMFGraphTextNonResizableEditPolicy extends NonResizableEditPolicyEx {
public class GMFGraphTextSelectionEditPolicy extends SelectionEditPolicy {
public class GMFGraphTextSelectionEditPolicy extends SelectionEditPolicy {
public class GMFGraphViewProvider extends AbstractViewProvider {
public class GMFGraphViewProvider extends AbstractViewProvider {
    protected Class getNodeViewClass (View containerView, int visualID);
public class GMFGraphVisualIDRegistry {
public class GMFGraphVisualIDRegistry {
public class GMFGraphVisualIDRegistry {
public class GMFGraphVisualIDRegistry {
public class GMFGraphVisualIDRegistry {
    public int getDiagramVisualID (EObject domainElement);
    public int getDiagramVisualID (EObject domainElement, EClass domainElementMetaclass);
    public int getLinkWithClassVisualID (EObject domainElement);
    public int getLinkWithClassVisualID (EObject domainElement, EClass domainElementMetaclass);
    public int getNodeVisualID (View containerView, EObject domainElement);
    final public static GMFGraphVisualIDRegistry INSTANCE = new GMFGraphVisualIDRegistry ();
public class GMFGraphVisualIDRegistry {
    public static int getDiagramVisualID (EObject domainElement);
    public static int getDiagramVisualID (EObject domainElement, EClass domainElementMetaclass);
    public static int getLinkWithClassVisualID (EObject domainElement);
    public static int getLinkWithClassVisualID (EObject domainElement, EClass domainElementMetaclass);
    public static int getNodeVisualID (View containerView, EObject domainElement);
public class GMFGraphVisualIDRegistry {
public class GMFGraphVisualIDRegistry {
public class GMFMapActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection createChildActions;
    protected Collection createSiblingActions;
    protected Collection generateCreateChildActions (Collection descriptors, ISelection selection);
    protected Collection generateCreateSiblingActions (Collection descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        public boolean isEnabled ();
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        public void run ();
    ;
    protected boolean removeAllReferencesOnDelete ();
    protected void addGlobalActions (IMenuManager menuManager);
    protected void depopulateManager (IContributionManager manager, Collection actions);
    public void contributeToMenu (IMenuManager menuManager);
    public void contributeToToolBar (IToolBarManager toolBarManager);
    public void setActiveEditor (IEditorPart part);
public class GMFMapActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    @Override
    protected boolean removeAllReferencesOnDelete ();
    @Override
    protected void addGlobalActions (IMenuManager menuManager);
    @Override
    public void contributeToMenu (IMenuManager menuManager);
    @Override
    public void contributeToToolBar (IToolBarManager toolBarManager);
    @Override
    public void menuAboutToShow (IMenuManager menuManager);
    @Override
    public void setActiveEditor (IEditorPart part); protected Collection < IAction > createChildActions;
    protected Collection < IAction > createSiblingActions;
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected Collection < IAction > generateCreateSiblingActions (Collection < ? extends CommandParameter > descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        @Override
        public boolean isEnabled ();
        @Override
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        @Override
        public void run ();
    ;
    protected void depopulateManager (IContributionManager manager, Collection < ? extends IAction > actions);
public class GMFMapActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFMapActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFMapActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected IAction showPropertiesViewAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFMapActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    private static class ToggleQualifiedLabels extends Action {
        public ToggleQualifiedLabels () {
    protected IAction showPropertiesViewAction = new Action (GMFMapEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
    final protected ToggleQualifiedLabels toggleLabelsAction = new ToggleQualifiedLabels ();
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
        public Object caseAuditContainer (AuditContainer object);
    ;
    public Adapter createAuditContainerAdapter ();
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
        public Object caseTool (Tool object);
    ;
    public Adapter createToolAdapter ();
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
        public Object caseDiagramElementTarget (DiagramElementTarget object);
        public Object caseNotationElementTarget (NotationElementTarget object);
        public Object caseRuleBase (RuleBase object);
    ;
    public Adapter createDiagramElementTargetAdapter ();
    public Adapter createNotationElementTargetAdapter ();
    public Adapter createRuleBaseAdapter ();
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
        public Object caseAuditable (Auditable object);
        public Object caseMetricContainer (MetricContainer object);
    ;
    public Adapter createAuditableAdapter ();
    public Adapter createMetricContainerAdapter ();
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
        public Object caseAppearanceSteward (AppearanceSteward object);
        public Object caseAuditContainer (AuditContainer object);
        public Object caseAuditRule (AuditRule object);
        public Object caseAuditable (Auditable object);
        public Object caseAuditedMetricTarget (AuditedMetricTarget object);
        public Object caseCanvasMapping (CanvasMapping object);
        public Object caseChildReference (ChildReference object);
        public Object caseCompartmentMapping (CompartmentMapping object);
        public Object caseConstraint (Constraint object);
        public Object caseDesignLabelMapping (DesignLabelMapping object);
        public Object caseDiagramElementTarget (DiagramElementTarget object);
        public Object caseDomainAttributeTarget (DomainAttributeTarget object);
        public Object caseDomainElementTarget (DomainElementTarget object);
        public Object caseElementInitializer (ElementInitializer object);
        public Object caseFeatureInitializer (FeatureInitializer object);
        public Object caseFeatureLabelMapping (FeatureLabelMapping object);
        public Object caseFeatureSeqInitializer (FeatureSeqInitializer object);
        public Object caseFeatureValueSpec (FeatureValueSpec object);
        public Object caseLabelMapping (LabelMapping object);
        public Object caseLinkConstraints (LinkConstraints object);
        public Object caseLinkMapping (LinkMapping object);
        public Object caseMapping (Mapping object);
        public Object caseMappingEntry (MappingEntry object);
        public Object caseMeasurable (Measurable object);
        public Object caseMenuOwner (MenuOwner object);
        public Object caseMetricContainer (MetricContainer object);
        public Object caseMetricRule (MetricRule object);
        public Object caseNeedsContainment (NeedsContainment object);
        public Object caseNodeMapping (NodeMapping object);
        public Object caseNodeReference (NodeReference object);
        public Object caseNotationElementTarget (NotationElementTarget object);
        public Object caseReferenceNewElementSpec (ReferenceNewElementSpec object);
        public Object caseRuleBase (RuleBase object);
        public Object caseToolOwner (ToolOwner object);
        public Object caseTopNodeReference (TopNodeReference object);
        public Object caseValueExpression (ValueExpression object);
        public Object defaultCase (EObject object);
    ;
    public boolean isFactoryForType (Object object);
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    @Override
    public Adapter createAdapter (Notifier target);
    @Override
    public boolean isFactoryForType (Object object); protected GMFMapSwitch < Adapter > modelSwitch = new GMFMapSwitch < Adapter > () {
        @Override
        public Adapter caseAppearanceSteward (AppearanceSteward object);
        @Override
        public Adapter caseAuditContainer (AuditContainer object);
        @Override
        public Adapter caseAuditRule (AuditRule object);
        @Override
        public Adapter caseAuditable (Auditable object);
        @Override
        public Adapter caseAuditedMetricTarget (AuditedMetricTarget object);
        @Override
        public Adapter caseCanvasMapping (CanvasMapping object);
        @Override
        public Adapter caseChildReference (ChildReference object);
        @Override
        public Adapter caseCompartmentMapping (CompartmentMapping object);
        @Override
        public Adapter caseConstraint (Constraint object);
        @Override
        public Adapter caseDesignLabelMapping (DesignLabelMapping object);
        @Override
        public Adapter caseDiagramElementTarget (DiagramElementTarget object);
        @Override
        public Adapter caseDomainAttributeTarget (DomainAttributeTarget object);
        @Override
        public Adapter caseDomainElementTarget (DomainElementTarget object);
        @Override
        public Adapter caseElementInitializer (ElementInitializer object);
        @Override
        public Adapter caseFeatureInitializer (FeatureInitializer object);
        @Override
        public Adapter caseFeatureLabelMapping (FeatureLabelMapping object);
        @Override
        public Adapter caseFeatureSeqInitializer (FeatureSeqInitializer object);
        @Override
        public Adapter caseFeatureValueSpec (FeatureValueSpec object);
        @Override
        public Adapter caseLabelMapping (LabelMapping object);
        @Override
        public Adapter caseLinkConstraints (LinkConstraints object);
        @Override
        public Adapter caseLinkMapping (LinkMapping object);
        @Override
        public Adapter caseMapping (Mapping object);
        @Override
        public Adapter caseMappingEntry (MappingEntry object);
        @Override
        public Adapter caseMeasurable (Measurable object);
        @Override
        public Adapter caseMenuOwner (MenuOwner object);
        @Override
        public Adapter caseMetricContainer (MetricContainer object);
        @Override
        public Adapter caseMetricRule (MetricRule object);
        @Override
        public Adapter caseNeedsContainment (NeedsContainment object);
        @Override
        public Adapter caseNodeMapping (NodeMapping object);
        @Override
        public Adapter caseNodeReference (NodeReference object);
        @Override
        public Adapter caseNotationElementTarget (NotationElementTarget object);
        @Override
        public Adapter caseReferenceNewElementSpec (ReferenceNewElementSpec object);
        @Override
        public Adapter caseRuleBase (RuleBase object);
        @Override
        public Adapter caseToolOwner (ToolOwner object);
        @Override
        public Adapter caseTopNodeReference (TopNodeReference object);
        @Override
        public Adapter caseValueExpression (ValueExpression object);
        @Override
        public Adapter defaultCase (EObject object);
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
        public Object caseElementInitializer (ElementInitializer object);
        public Object caseFeatureSeqInitializer (FeatureSeqInitializer object);
    ;
    public Adapter createElementInitializerAdapter ();
    public Adapter createFeatureSeqInitializerAdapter ();
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
        public Object caseTool (Tool object);
    ;
    public Adapter createToolAdapter ();
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {
    ;
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
    ;
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
    ;
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected Collection selectionChangedListeners = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
        protected void unsetTarget (Resource target);
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                public void setActionBars (IActionBars actionBars);
                public void setSelectionToViewer (List selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
    public boolean isDirty ();
    public void createPages ();
    public void dispose ();
    public void doSave (IProgressMonitor progressMonitor);
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    protected void firePropertyChange (int action);
    @Override
    protected void pageChange (int pageIndex);
    @Override
    public boolean isDirty ();
    @Override
    public boolean isSaveAsAllowed ();
    @Override
    public void createPages ();
    @Override
    public void dispose ();
    @Override
    public void doSave (IProgressMonitor progressMonitor);
    @Override
    public void doSaveAs ();
    @Override
    public void init (IEditorSite site, IEditorInput editorInput);
    @Override
    public void setFocus ();
    @SuppressWarnings("unchecked")
    @Override
    protected Collection < ISelectionChangedListener > selectionChangedListeners = new ArrayList < ISelectionChangedListener > ();
    protected Collection < Resource > changedResources = new ArrayList < Resource > ();
    protected Collection < Resource > removedResources = new ArrayList < Resource > ();
    protected Collection < Resource > savedResources = new ArrayList < Resource > ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        @Override
        protected void setTarget (Resource target);
        @Override
        protected void unsetTarget (Resource target);
        @Override
        public void notifyChanged (Notification notification);
    ;
    protected Map < Resource, Diagnostic > resourceToDiagnosticMap = new LinkedHashMap < Resource, Diagnostic > ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                @Override
                public void setActionBars (IActionBars actionBars);
                @Override
                public void setSelectionToViewer (List < ? > selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
[GMFMapEditor-18.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! (getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                    @Override
                    public Viewer createViewer (Composite composite);
                    @Override
                    public void requestActivation ();
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
                public void run ();
            );
        getContainer ().addControlListener (new ControlAdapter () {
            @Override
            public void controlResized (ControlEvent event);
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
            public void run ();
        );
[GMFMapEditor-19.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
[GMFMapEditor-20.java, Txl/api_clone_java.Txl] : TXL0984E - Out of kid space - 4800000 kids have been allocated.
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty () && ! (getEditingDomain ().getResourceSet ().getResources ().get (0)).getContents ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            );
        getContainer ().addControlListener (new ControlAdapter () {
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
        );
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    public void createPages () {
        createModel ();
        if (! getEditingDomain ().getResourceSet ().getResources ().isEmpty ()) {
            {
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                selectionViewer = (TreeViewer) viewerPane.getViewer ();
                selectionViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                selectionViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                selectionViewer.setInput (editingDomain.getResourceSet ());
                selectionViewer.setSelection (new StructuredSelection (editingDomain.getResourceSet ().getResources ().get (0)), true);
                viewerPane.setTitle (editingDomain.getResourceSet ());
                new AdapterFactoryTreeEditor (selectionViewer.getTree (), adapterFactory);
                createContextMenuFor (selectionViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_SelectionPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                parentViewer = (TreeViewer) viewerPane.getViewer ();
                parentViewer.setAutoExpandLevel (30);
                parentViewer.setContentProvider (new ReverseAdapterFactoryContentProvider (adapterFactory));
                parentViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (parentViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ParentPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                listViewer = (ListViewer) viewerPane.getViewer ();
                listViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                listViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (listViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_ListPage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewer = (TreeViewer) viewerPane.getViewer ();
                treeViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                new AdapterFactoryTreeEditor (treeViewer.getTree (), adapterFactory);
                createContextMenuFor (treeViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                tableViewer = (TableViewer) viewerPane.getViewer ();
                Table table = tableViewer.getTable ();
                TableLayout layout = new TableLayout ();
                table.setLayout (layout);
                table.setHeaderVisible (true);
                table.setLinesVisible (true);
                TableColumn objectColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (3, 100, true));
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                TableColumn selfColumn = new TableColumn (table, SWT.NONE);
                layout.addColumnData (new ColumnWeightData (2, 100, true));
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                tableViewer.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                tableViewer.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (tableViewer);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TablePage_label"));
                ViewerPane viewerPane = new ViewerPane (getSite ().getPage (), GMFMapEditor.this) {
                ;
                viewerPane.createControl (getContainer ());
                treeViewerWithColumns = (TreeViewer) viewerPane.getViewer ();
                Tree tree = treeViewerWithColumns.getTree ();
                tree.setLayoutData (new FillLayout ());
                tree.setHeaderVisible (true);
                tree.setLinesVisible (true);
                TreeColumn objectColumn = new TreeColumn (tree, SWT.NONE);
                objectColumn.setText (getString ("_UI_ObjectColumn_label"));
                objectColumn.setResizable (true);
                objectColumn.setWidth (250);
                TreeColumn selfColumn = new TreeColumn (tree, SWT.NONE);
                selfColumn.setText (getString ("_UI_SelfColumn_label"));
                selfColumn.setResizable (true);
                selfColumn.setWidth (200);
                treeViewerWithColumns.setContentProvider (new AdapterFactoryContentProvider (adapterFactory));
                treeViewerWithColumns.setLabelProvider (new AdapterFactoryLabelProvider (adapterFactory));
                createContextMenuFor (treeViewerWithColumns);
                int pageIndex = addPage (viewerPane.getControl ());
                setPageText (pageIndex, getString ("_UI_TreeWithColumnsPage_label"));
            );
        getContainer ().addControlListener (new ControlAdapter () {
        );
        getSite ().getShell ().getDisplay ().asyncExec (new Runnable () {
        );
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new PropertySheetPage () {
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                public void setSelectionToViewer (List selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFMapEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    protected MarkerHelper markerHelper = new EditUIMarkerHelper ();
    protected boolean updateProblemIndication = true;
final public class GMFMapEditPlugin extends EMFPlugin {
final public class GMFMapEditPlugin extends EMFPlugin {
    public static void toggleQualifiedFeatureLabelPresentation ();
final public class GMFMapEditPlugin extends EMFPlugin {
    public static class Implementation extends EclipsePlugin {
final public class GMFMapEditPlugin extends EMFPlugin {
    public static class Implementation extends EclipseUIPlugin {
final public class GMFMapEditPlugin extends EMFPlugin {
final public class GMFMapEditPlugin extends EMFPlugin {
    @Override
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public LinkLabelAlignment createLinkLabelAlignmentFromString (EDataType eDataType, String initialValue);
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public LinkLabelAlignment createLinkLabelAlignmentFromString (EDataType eDataType, String initialValue);
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public DiagramElementTarget createDiagramElementTarget ();
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public MetricContainer createMetricContainer ();
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public static GMFMapPackage getPackage ();
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    @Deprecated
    public static GMFMapPackage getPackage ();
    @Override
    public EObject create (EClass eClass);
    @Override
    public Object createFromString (EDataType eDataType, String initialValue);
    @Override
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public String convertLabelEditMethodToString (EDataType eDataType, Object instanceValue);
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public String convertLabelEditMethodToString (EDataType eDataType, Object instanceValue);
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public FeatureSeqInitializer createFeatureSeqInitializer ();
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
public class GMFMapFactoryImpl extends EFactoryImpl implements GMFMapFactory {
    public AuditContainer createAuditContainer ();
    public Object createFromString (EDataType eDataType, String initialValue);
    public Severity createSeverityFromString (EDataType eDataType, String initialValue);
    public String convertSeverityToString (EDataType eDataType, Object instanceValue);
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LinkLabelMappingItemProvider linkLabelMappingItemProvider;
    protected NodeLabelMappingItemProvider nodeLabelMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LinkLabelMappingItemProvider linkLabelMappingItemProvider;
    protected NodeLabelMappingItemProvider nodeLabelMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LabelMappingItemProvider labelMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ChildNodeMappingItemProvider childNodeMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ChildReferenceItemProvider childReferenceItemProvider;
    protected TopNodeReferenceItemProvider topNodeReferenceItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected DiagramElementTargetItemProvider diagramElementTargetItemProvider;
    protected DomainElementTargetItemProvider domainElementTargetItemProvider;
    protected NotationElementTargetItemProvider notationElementTargetItemProvider;
    public Adapter createDiagramElementTargetAdapter ();
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected AuditedMetricTargetItemProvider auditedMetricTargetItemProvider;
    protected MetricContainerItemProvider metricContainerItemProvider;
    protected MetricRuleItemProvider metricRuleItemProvider;
    public Adapter createMetricContainerAdapter ();
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected DomainAttributeTargetItemProvider domainAttributeTargetItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected NodeMappingItemProvider nodeMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LabelNodeMappingItemProvider labelNodeMappingItemProvider;
    protected ShapeNodeMappingItemProvider shapeNodeMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ShapeNodeMappingItemProvider shapeNodeMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected NodeMappingItemProvider nodeMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LabelNodeMappingItemProvider labelNodeMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ReferenceNewElementSpecItemProvider referenceNewElementSpecItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected DesignLabelMappingItemProvider designLabelMappingItemProvider;
    protected FeatureLabelMappingItemProvider featureLabelMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected Collection supportedTypes = new ArrayList ();
    public Adapter adapt (Notifier notifier, Object type);
    public Adapter createAuditContainerAdapter ();
    public Adapter createAuditRuleAdapter ();
    public Adapter createAuditedMetricTargetAdapter ();
    public Adapter createCanvasMappingAdapter ();
    public Adapter createChildReferenceAdapter ();
    public Adapter createCompartmentMappingAdapter ();
    public Adapter createConstraintAdapter ();
    public Adapter createDesignLabelMappingAdapter ();
    public Adapter createDiagramElementTargetAdapter ();
    public Adapter createDomainAttributeTargetAdapter ();
    public Adapter createDomainElementTargetAdapter ();
    public Adapter createFeatureLabelMappingAdapter ();
    public Adapter createFeatureSeqInitializerAdapter ();
    public Adapter createFeatureValueSpecAdapter ();
    public Adapter createLabelMappingAdapter ();
    public Adapter createLinkConstraintsAdapter ();
    public Adapter createLinkMappingAdapter ();
    public Adapter createMappingAdapter ();
    public Adapter createMetricContainerAdapter ();
    public Adapter createMetricRuleAdapter ();
    public Adapter createNodeMappingAdapter ();
    public Adapter createNotationElementTargetAdapter ();
    public Adapter createReferenceNewElementSpecAdapter ();
    public Adapter createTopNodeReferenceAdapter ();
    public Object adapt (Object object, Object type);
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    @Override
    public Adapter adapt (Notifier notifier, Object type);
    @Override
    public Adapter createAuditContainerAdapter ();
    @Override
    public Adapter createAuditRuleAdapter ();
    @Override
    public Adapter createAuditedMetricTargetAdapter ();
    @Override
    public Adapter createCanvasMappingAdapter ();
    @Override
    public Adapter createChildReferenceAdapter ();
    @Override
    public Adapter createCompartmentMappingAdapter ();
    @Override
    public Adapter createConstraintAdapter ();
    @Override
    public Adapter createDesignLabelMappingAdapter ();
    @Override
    public Adapter createDiagramElementTargetAdapter ();
    @Override
    public Adapter createDomainAttributeTargetAdapter ();
    @Override
    public Adapter createDomainElementTargetAdapter ();
    @Override
    public Adapter createFeatureLabelMappingAdapter ();
    @Override
    public Adapter createFeatureSeqInitializerAdapter ();
    @Override
    public Adapter createFeatureValueSpecAdapter ();
    @Override
    public Adapter createLabelMappingAdapter ();
    @Override
    public Adapter createLinkConstraintsAdapter ();
    @Override
    public Adapter createLinkMappingAdapter ();
    @Override
    public Adapter createMappingAdapter ();
    @Override
    public Adapter createMetricContainerAdapter ();
    @Override
    public Adapter createMetricRuleAdapter ();
    @Override
    public Adapter createNodeMappingAdapter ();
    @Override
    public Adapter createNotationElementTargetAdapter ();
    @Override
    public Adapter createReferenceNewElementSpecAdapter ();
    @Override
    public Adapter createTopNodeReferenceAdapter ();
    @Override
    public Adapter createValueExpressionAdapter ();
    @Override
    public Object adapt (Object object, Object type);
    @Override
    protected Collection < Object > supportedTypes = new ArrayList < Object > ();
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected FeatureSeqInitializerItemProvider featureSeqInitializerItemProvider;
    protected FeatureValueSpecItemProvider featureValueSpecItemProvider;
    public Adapter createFeatureSeqInitializerAdapter ();
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected LinkConstraintsItemProvider linkConstraintsItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CreationToolItemProvider creationToolItemProvider;
    protected NewActionToolItemProvider newActionToolItemProvider;
    protected ToolGroupItemProvider toolGroupItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CompartmentMappingItemProvider compartmentMappingItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected AuditContainerItemProvider auditContainerItemProvider;
    protected AuditRuleItemProvider auditRuleItemProvider;
    public Adapter createAuditContainerAdapter ();
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected CreationToolItemProvider creationToolItemProvider;
    protected NewActionToolItemProvider newActionToolItemProvider;
    protected ToolGroupItemProvider toolGroupItemProvider;
public class GMFMapItemProviderAdapterFactory extends GMFMapAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class GMFMapModelWizard extends Wizard implements INewWizard {
    protected ExtensibleModelSelectionPage domainModelSelectionPage;
    protected ExtensibleModelSelectionPage graphModelSelectionPage;
    protected ExtensibleModelSelectionPage toolModelSelectionPage;
    protected GMFMapFactory gmfMapFactory = gmfMapPackage.getGMFMapFactory ();
    protected GMFMapModelWizardInitialObjectCreationPage initialObjectCreationPage;
    protected GMFMapPackage gmfMapPackage = GMFMapPackage.eINSTANCE;
    protected List initialObjectNames;
    public class GMFMapModelWizardInitialObjectCreationPage extends WizardPage {
        protected Collection getEncodings (); protected Combo encodingField;
        protected Combo initialObjectField;
        protected List encodings;
        protected ModifyListener validator = new ModifyListener () {
            public void modifyText (ModifyEvent e);
        ;
        protected String getLabel (String typeName);
        protected boolean validatePage ();
        public GMFMapModelWizardInitialObjectCreationPage (String pageId) {
        public String getEncoding ();
        public String getInitialObjectName ();
        public void createControl (Composite parent);
        public void setVisible (boolean visible);
public class GMFMapModelWizard extends Wizard implements INewWizard {
    protected MapRefModelPages refPages;
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EClass getTool ();
    public EReference getMapping_ToolGroups ();
    public EReference getNodeMapping_DiagramNode ();
    public EReference getToolGroup_Tools ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getCompartmentMapping_ChildNodes ();
    public EReference getCompartmentMapping_Compartment ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getAuditContainer_Description ();
    public EAttribute getAuditContainer_Id ();
    public EAttribute getAuditContainer_Name ();
    public EAttribute getAuditRule_Description ();
    public EAttribute getAuditRule_Id ();
    public EAttribute getAuditRule_Message ();
    public EAttribute getAuditRule_Name ();
    public EAttribute getAuditRule_Severity ();
    public EClass getAuditContainer ();
    public EReference getAuditContainer_Audits ();
    public EReference getAuditContainer_ChildContainers ();
    public EReference getAuditContainer_ParentContainer ();
    public EReference getAuditRule_Container ();
    public EReference getAuditRule_Rule ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EClass getTool ();
    public EReference getAbstractNodeMapping_ContainmentFeature ();
    public EReference getAbstractNodeMapping_DomainInitializer ();
    public EReference getAbstractNodeMapping_DomainMetaElement ();
    public EReference getLinkMapping_DomainInitializer ();
    public EReference getLinkMapping_DomainMetaElement ();
    public EReference getToolGroup_Tools ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getCanvasMapping_MenuContributions ();
    public EReference getCanvasMapping_Palette ();
    public EReference getMappingEntry_ContainmentFeature ();
    public EReference getMappingEntry_DomainInitializer ();
    public EReference getMappingEntry_DomainMetaElement ();
    public EReference getMappingEntry_DomainSpecialization ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getLabelMapping_DefaultText ();
    public EAttribute getLabelMapping_EditPattern ();
    public EAttribute getLabelMapping_ReadOnly ();
    public EAttribute getLabelMapping_Text ();
    public EAttribute getLabelMapping_ViewPattern ();
    public EAttribute getLinkLabelMapping_Alignment ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getLinkLabelMapping_Alignment ();
    public EReference getAbstractNodeMapping_EditFeature ();
    public EReference getLinkMapping_LabelDisplayFeature ();
    public EReference getLinkMapping_LabelEditFeature ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getAbstractNodeMapping_ChildMappings ();
    public EReference getChildNodeMapping_Compartment ();
    public EReference getChildNodeMapping_DiagramNode ();
    public EReference getChildNodeMapping_ParentNode ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getChildReference_Compartment ();
    public EReference getChildReference_OwnedChild ();
    public EReference getChildReference_ParentNode ();
    public EReference getChildReference_ReferencedChild ();
    public EReference getNeedsContainment_ContainmentFeature ();
    public EReference getNodeMapping_Children ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EClass getDiagramElementTarget ();
    public EClass getNotationElementTarget ();
    public EClass getRuleBase ();
    public EReference getDiagramElementTarget_Element ();
    public EReference getNotationElementTarget_Element ();
    public EReference getRuleBase_Target ();
[GMFMapPackageImpl-27.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getRuleBase_Target ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getMetricRule_Key ();
    public EAttribute getRuleBase_Description ();
    public EClass getAuditable ();
    public EClass getMetricContainer ();
    public EReference getAuditRule_Target ();
    public EReference getMetricContainer_Metrics ();
    public EReference getMetricRule_Container ();
    public EReference getMetricRule_Rule ();
[GMFMapPackageImpl-28.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-29.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-30.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-31.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-32.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-33.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getLabelMapping_EditPattern ();
    public EAttribute getLabelMapping_ReadOnly ();
    public EReference getLabelMapping_DiagramLabel ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getLabelFlavour_EditPattern ();
    public EAttribute getLabelFlavour_ReadOnly ();
    public EReference getLabelFlavour_DiagramLabel ();
[GMFMapPackageImpl-34.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-35.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getLabelFlavour_EditPattern ();
    public EAttribute getLabelFlavour_ReadOnly ();
    public EReference getLabelFlavour_DiagramLabel ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getLabelMapping_EditPattern ();
    public EAttribute getLabelMapping_ReadOnly ();
    public EReference getLabelMapping_DiagramLabel ();
[GMFMapPackageImpl-37.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public void initializePackageContentsGen ();
[GMFMapPackageImpl-40.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-41.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-42.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-43.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-44.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getFeatureValueSpec_Feature ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getFeatureInitializer_Feature ();
    public EReference getFeatureInitializer_FeatureSeqInitializer ();
    public EReference getFeatureSeqInitializer_CreatingInitializer ();
[GMFMapPackageImpl-45.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-46.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-47.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getFeatureLabelMapping_EditPattern ();
[GMFMapPackageImpl-48.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EAttribute getValueExpression_Body ();
[GMFMapPackageImpl-49.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-50.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-51.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EEnum getLabelEditMethod ();
[GMFMapPackageImpl-52.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EEnum getLabelEditMethod ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-53.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
[GMFMapPackageImpl-54.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-55.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-56.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-57.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-58.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EClass getElementInitializer ();
    public EClass getFeatureSeqInitializer ();
    public EReference getFeatureSeqInitializer_Initializers ();
[GMFMapPackageImpl-59.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-60.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[GMFMapPackageImpl-61.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getChildNodeMapping_DiagramNode ();
    public EReference getChildNodeMapping_DomainChildrenFeature ();
    public EReference getChildNodeMapping_DomainInitializer ();
    public EReference getChildNodeMapping_DomainMetaElement ();
    public EReference getChildNodeMapping_DomainSpecialization ();
    public EReference getNodeMapping_ChildMappings ();
    public EReference getNodeMapping_ContainmentFeature ();
    public EReference getNodeMapping_DiagramNode ();
    public EReference getNodeMapping_DomainInitializer ();
    public EReference getNodeMapping_DomainMetaElement ();
    public EReference getNodeMapping_DomainSpecialization ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getAbstractNodeMapping_ChildMappings ();
    public EReference getAbstractNodeMapping_ContainmentFeature ();
    public EReference getAbstractNodeMapping_DiagramNode ();
    public EReference getAbstractNodeMapping_DomainInitializer ();
    public EReference getAbstractNodeMapping_DomainMetaElement ();
    public EReference getAbstractNodeMapping_DomainSpecialization ();
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
public class GMFMapPackageImpl extends EPackageImpl implements GMFMapPackage {
    public EReference getLinkConstraints_LinkMapping ();
    public EReference getLinkConstraints_SourceEnd ();
public class GMFMapResource extends MigrationResource {
    @Override
    @Override
public class GMFMapResource extends MigrationResource {
public class GMFMapResource extends MigrationResource {
    @Override
public class GMFMapResource extends MigrationResource {
    @Override
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
    public Object caseAuditContainer (AuditContainer object);
public class GMFMapSwitch {
    public Object caseTool (Tool object);
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
    public Object caseDiagramElementTarget (DiagramElementTarget object);
    public Object caseNotationElementTarget (NotationElementTarget object);
    public Object caseRuleBase (RuleBase object);
public class GMFMapSwitch {
public class GMFMapSwitch {
    public Object caseAuditable (Auditable object);
    public Object caseMetricContainer (MetricContainer object);
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
    protected Object doSwitch (EClass theEClass, EObject theEObject);
    public Object caseAppearanceSteward (AppearanceSteward object);
    public Object caseAuditContainer (AuditContainer object);
    public Object caseAuditRule (AuditRule object);
    public Object caseAuditable (Auditable object);
    public Object caseAuditedMetricTarget (AuditedMetricTarget object);
    public Object caseCanvasMapping (CanvasMapping object);
    public Object caseChildReference (ChildReference object);
    public Object caseCompartmentMapping (CompartmentMapping object);
    public Object caseConstraint (Constraint object);
    public Object caseDesignLabelMapping (DesignLabelMapping object);
    public Object caseDiagramElementTarget (DiagramElementTarget object);
    public Object caseDomainAttributeTarget (DomainAttributeTarget object);
    public Object caseDomainElementTarget (DomainElementTarget object);
    public Object caseElementInitializer (ElementInitializer object);
    public Object caseFeatureInitializer (FeatureInitializer object);
    public Object caseFeatureLabelMapping (FeatureLabelMapping object);
    public Object caseFeatureSeqInitializer (FeatureSeqInitializer object);
    public Object caseFeatureValueSpec (FeatureValueSpec object);
    public Object caseLabelMapping (LabelMapping object);
    public Object caseLinkConstraints (LinkConstraints object);
    public Object caseLinkMapping (LinkMapping object);
    public Object caseMapping (Mapping object);
    public Object caseMappingEntry (MappingEntry object);
    public Object caseMeasurable (Measurable object);
    public Object caseMenuOwner (MenuOwner object);
    public Object caseMetricContainer (MetricContainer object);
    public Object caseMetricRule (MetricRule object);
    public Object caseNeedsContainment (NeedsContainment object);
    public Object caseNodeMapping (NodeMapping object);
    public Object caseNodeReference (NodeReference object);
    public Object caseNotationElementTarget (NotationElementTarget object);
    public Object caseReferenceNewElementSpec (ReferenceNewElementSpec object);
    public Object caseRuleBase (RuleBase object);
    public Object caseToolOwner (ToolOwner object);
    public Object caseTopNodeReference (TopNodeReference object);
    public Object caseValueExpression (ValueExpression object);
    public Object defaultCase (EObject object);
    public Object doSwitch (EObject theEObject);
public class GMFMapSwitch < T > {
    protected T doSwitch (EClass theEClass, EObject theEObject);
    public T caseAppearanceSteward (AppearanceSteward object);
    public T caseAuditContainer (AuditContainer object);
    public T caseAuditRule (AuditRule object);
    public T caseAuditable (Auditable object);
    public T caseAuditedMetricTarget (AuditedMetricTarget object);
    public T caseCanvasMapping (CanvasMapping object);
    public T caseChildReference (ChildReference object);
    public T caseCompartmentMapping (CompartmentMapping object);
    public T caseConstraint (Constraint object);
    public T caseDesignLabelMapping (DesignLabelMapping object);
    public T caseDiagramElementTarget (DiagramElementTarget object);
    public T caseDomainAttributeTarget (DomainAttributeTarget object);
    public T caseDomainElementTarget (DomainElementTarget object);
    public T caseElementInitializer (ElementInitializer object);
    public T caseFeatureInitializer (FeatureInitializer object);
    public T caseFeatureLabelMapping (FeatureLabelMapping object);
    public T caseFeatureSeqInitializer (FeatureSeqInitializer object);
    public T caseFeatureValueSpec (FeatureValueSpec object);
    public T caseLabelMapping (LabelMapping object);
    public T caseLinkConstraints (LinkConstraints object);
    public T caseLinkMapping (LinkMapping object);
    public T caseMapping (Mapping object);
    public T caseMappingEntry (MappingEntry object);
    public T caseMeasurable (Measurable object);
    public T caseMenuOwner (MenuOwner object);
    public T caseMetricContainer (MetricContainer object);
    public T caseMetricRule (MetricRule object);
    public T caseNeedsContainment (NeedsContainment object);
    public T caseNodeMapping (NodeMapping object);
    public T caseNodeReference (NodeReference object);
    public T caseNotationElementTarget (NotationElementTarget object);
    public T caseReferenceNewElementSpec (ReferenceNewElementSpec object);
    public T caseRuleBase (RuleBase object);
    public T caseToolOwner (ToolOwner object);
    public T caseTopNodeReference (TopNodeReference object);
    public T caseValueExpression (ValueExpression object);
    public T defaultCase (EObject object);
    public T doSwitch (EObject theEObject);
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
    public Object caseElementInitializer (ElementInitializer object);
    public Object caseFeatureSeqInitializer (FeatureSeqInitializer object);
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
public class GMFMapSwitch {
    public Object caseTool (Tool object);
public class GMFToolActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection createChildActions;
    protected Collection createSiblingActions;
    protected Collection generateCreateChildActions (Collection descriptors, ISelection selection);
    protected Collection generateCreateSiblingActions (Collection descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (GMFToolEditPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        public boolean isEnabled ();
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (GMFToolEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        public void run ();
    ;
    protected boolean removeAllReferencesOnDelete ();
    protected void addGlobalActions (IMenuManager menuManager);
    protected void depopulateManager (IContributionManager manager, Collection actions);
    public void contributeToMenu (IMenuManager menuManager);
    public void contributeToToolBar (IToolBarManager toolBarManager);
    public void setActiveEditor (IEditorPart part);
public class GMFToolActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    @Override
    protected boolean removeAllReferencesOnDelete ();
    @Override
    protected void addGlobalActions (IMenuManager menuManager);
    @Override
    public void contributeToMenu (IMenuManager menuManager);
    @Override
    public void contributeToToolBar (IToolBarManager toolBarManager);
    @Override
    public void menuAboutToShow (IMenuManager menuManager);
    @Override
    public void setActiveEditor (IEditorPart part); protected Collection < IAction > createChildActions;
    protected Collection < IAction > createSiblingActions;
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected Collection < IAction > generateCreateSiblingActions (Collection < ? extends CommandParameter > descriptors, ISelection selection); protected IAction refreshViewerAction = new Action (GMFToolEditPlugin.INSTANCE.getString ("_UI_RefreshViewer_menu_item")) {
        @Override
        public boolean isEnabled ();
        @Override
        public void run ();
    ;
    protected IAction showPropertiesViewAction = new Action (GMFToolEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
        @Override
        public void run ();
    ;
    protected void depopulateManager (IContributionManager manager, Collection < ? extends IAction > actions);
public class GMFToolActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? extends CommandParameter > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (GMFToolEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFToolActionBarContributor extends EditingDomainActionBarContributor implements ISelectionChangedListener {
    protected Collection < IAction > generateCreateChildActions (Collection < ? > descriptors, ISelection selection);
    protected IAction showPropertiesViewAction = new Action (GMFToolEditPlugin.INSTANCE.getString ("_UI_ShowPropertiesView_menu_item")) {
    ;
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    protected MarkerHelper markerHelper = new EditUIMarkerHelper ();
    protected boolean updateProblemIndication = true;
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
    ;
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
    ;
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    protected Collection changedResources = new ArrayList ();
    protected Collection removedResources = new ArrayList ();
    protected Collection savedResources = new ArrayList ();
    protected Collection selectionChangedListeners = new ArrayList ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        protected void setTarget (Resource target);
        protected void unsetTarget (Resource target);
        public void notifyChanged (Notification notification);
    ;
    protected Map resourceToDiagnosticMap = new LinkedHashMap ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                public void setActionBars (IActionBars actionBars);
                public void setSelectionToViewer (List selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
    public boolean isDirty ();
    public void createPages ();
    public void dispose ();
    public void doSave (IProgressMonitor progressMonitor);
public class GMFToolEditor extends MultiPageEditorPart implements IEditingDomainProvider, IGotoMarker, IMenuListener, ISelectionProvider, IViewerProvider {
    @Override
    protected void firePropertyChange (int action);
    @Override
    protected void pageChange (int pageIndex);
    @Override
    public boolean isDirty ();
    @Override
    public boolean isSaveAsAllowed ();
    @Override
    public void createPages ();
    @Override
    public void dispose ();
    @Override
    public void doSave (IProgressMonitor progressMonitor);
    @Override
    public void doSaveAs ();
    @Override
    public void init (IEditorSite site, IEditorInput editorInput);
    @Override
    public void setFocus ();
    @SuppressWarnings("unchecked")
    @Override
    protected Collection < ISelectionChangedListener > selectionChangedListeners = new ArrayList < ISelectionChangedListener > ();
    protected Collection < Resource > changedResources = new ArrayList < Resource > ();
    protected Collection < Resource > removedResources = new ArrayList < Resource > ();
    protected Collection < Resource > savedResources = new ArrayList < Resource > ();
    protected EContentAdapter problemIndicationAdapter = new EContentAdapter () {
        @Override
        protected void setTarget (Resource target);
        @Override
        protected void unsetTarget (Resource target);
        @Override
        public void notifyChanged (Notification notification);
    ;
    protected Map < Resource, Diagnostic > resourceToDiagnosticMap = new LinkedHashMap < Resource, Diagnostic > ();
    public IPropertySheetPage getPropertySheetPage () {
        if (propertySheetPage == null) {
            propertySheetPage = new ExtendedPropertySheetPage (editingDomain) {
                @Override
                public void setActionBars (IActionBars actionBars);
                @Override
                public void setSelectionToViewer (List < ? > selection);
            ;
            propertySheetPage.setPropertySourceProvider (new AdapterFactoryContentProvider (adapterFactory));
        return propertySheetPage;
public class GMFToolModelWizard extends Wizard implements INewWizard {
    protected GMFToolFactory gmfToolFactory = gmfToolPackage.getGMFToolFactory ();
    protected GMFToolModelWizardInitialObjectCreationPage initialObjectCreationPage;
    protected GMFToolPackage gmfToolPackage = GMFToolPackage.eINSTANCE;
    protected List initialObjectNames;
    public class GMFToolModelWizardInitialObjectCreationPage extends WizardPage {
        protected Collection getEncodings (); protected Combo encodingField;
        protected Combo initialObjectField;
        protected List encodings;
        protected ModifyListener validator = new ModifyListener () {
            public void modifyText (ModifyEvent e);
        ;
        protected String getLabel (String typeName);
        protected boolean validatePage ();
        public GMFToolModelWizardInitialObjectCreationPage (String pageId) {
        public String getEncoding ();
        public String getInitialObjectName ();
        public void createControl (Composite parent);
        public void setVisible (boolean visible);
public class GMFToolModelWizard extends Wizard implements INewWizard {
    protected boolean openEditor (IFile modelFile);
public class GMFToolPackageImpl extends EPackageImpl implements GMFToolPackage {
public class GMFToolPackageImpl extends EPackageImpl implements GMFToolPackage {
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
    @SuppressWarnings("unchecked")
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
    protected FileDomainModelSource domainModelSource = new FileDomainModelSource ();
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
    public class PredefinedInitialObjectCreationPage extends GMFToolModelWizardInitialObjectCreationPage {
        protected boolean validatePage ();
        public PredefinedInitialObjectCreationPage (String pageId) {
        public String getEncoding ();
        public String getInitialObjectName ();
        public void createControl (Composite parent);
        public void setVisible (boolean visible);
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
    protected DefinitionPage toolDefinitionPage;
public class GMFToolSimpleModelWizard extends GMFToolModelWizard {
    @SuppressWarnings("unchecked")
    protected void reconcileModel (); protected DefinitionPage toolingDefinitionPage;
    protected ModelSelectionPage toolingModelSelectionPage;
    protected WizardOperationMode mode = new WizardOperationMode ("gmftool", WizardOperationMode.CREATE);
    protected boolean isInReconcileMode ();
    public void setMode (String mode);
public class GMFValidator extends ValidatorChain {
    private static class DelegateRegistry extends HashMap implements Registry {
public class GMFValidator extends ValidatorChain {
    private static class DelegateRegistry extends HashMap < EPackage, Object > implements Registry {
public class GradientFacetImpl extends EObjectImpl implements GradientFacet {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GradientFacetImpl extends EObjectImpl implements GradientFacet {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GradientFacetImpl extends EObjectImpl implements GradientFacet {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class GradientFacetImpl extends EObjectImpl implements GradientFacet {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GradientFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GradientFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GradientFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GradientFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GraphDefBuilder {
    public static DiagramElement getDiagramElement (Iterator source, EObject domainElement);
    public static DiagramElement getDiagramElement (Iterator source, String domainObjectName);
public class GraphDefBuilder {
    public static DiagramElement getDiagramElement (Iterator < EObject > source, EObject domainElement);
    public static DiagramElement getDiagramElement (Iterator < EObject > source, String domainObjectName);
public class GraphDefBuilder {
    @SuppressWarnings("unchecked")
    protected Connection createLink (EClass type);
    @SuppressWarnings("unchecked")
    protected Connection createLink (EReference ref, EClass containingClass);
    @SuppressWarnings("unchecked")
    protected DiagramLabel createLabel (EAttribute attr, EClass containingClass, DiagramElement parent);
    @SuppressWarnings("unchecked")
    protected GMFGraphFactory gmfGraphFactory = GMFGraphPackage.eINSTANCE.getGMFGraphFactory ();
    protected NamesDispenser namesDispenser = new IncrementalNamesDispenser ();
public class GraphDefBuilder {
    protected Connection createLink (EClass type);
    protected Connection createLink (EReference ref, EClass containingClass);
    final protected GMFGraphFactory gmfGraphFactory = GMFGraphPackage.eINSTANCE.getGMFGraphFactory ();
    final protected NamesDispenser namesDispenser = new IncrementalNamesDispenser ();
public class GraphDefBuilder {
    @SuppressWarnings("unchecked")
public class GraphDefBuilder {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, PropertyChangeListener {
    protected void addListenerFilter (String filterId, PropertyChangeListener listener, EObject element);
    protected void addListenerFilter (String filterId, PropertyChangeListener listener, EObject element, EStructuralFeature feature);
    protected void handleNotificationEvent (NotificationEvent e);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
    protected void addListenerFilter (String filterId, NotificationListener listener, EObject element);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
    protected void addListenerFilter (String filterId, NotificationListener listener, EObject element);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, PropertyChangeListener {
    protected void addListenerFilter (String filterId, PropertyChangeListener listener, EObject element);
    protected void addListenerFilter (String filterId, PropertyChangeListener listener, EObject element, EStructuralFeature feature);
    protected void handleNotificationEvent (NotificationEvent e);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, PropertyChangeListener {
    protected void addListenerFilter (String filterId, PropertyChangeListener listener, EObject element);
    protected void addListenerFilter (String filterId, PropertyChangeListener listener, EObject element, EStructuralFeature feature);
    protected void handleNotificationEvent (NotificationEvent e);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
    protected void addListenerFilter (String filterId, NotificationListener listener, EObject element);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
    public GraphicalEditPart (View view) {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
    protected String elementGuid;
    public GraphicalEditPart (EObject model) {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationForEditPartsListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationForEditPartsListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
    public void removeNotify ();
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, PropertyChangeListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, PropertyChangeListener {
    protected void addListenerFilter (String filterId, PropertyChangeListener listener, EObject element);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, NotificationListener {
    protected int getLineType ();
    protected void refreshLineType ();
    protected void setLineType (int lineType);
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, PropertyChangeListener {
abstract public class GraphicalEditPart extends AbstractGraphicalEditPart implements IAdaptableSelection, IGraphicalEditPart, PropertyChangeListener {
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
    protected class PromptAndCreateConnectionCommand extends CreateOrSelectElementCommand {
        protected CommandResult doExecute (IProgressMonitor progressMonitor);
        protected CommandResult doRedo ();
        protected CommandResult doUndo ();
        public PromptAndCreateConnectionCommand (List content, CreateConnectionRequest request) {
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
    protected class PromptAndCreateConnectionCommand extends CreateOrSelectElementCommand {
        protected CommandResult doExecute (IProgressMonitor progressMonitor);
        protected CommandResult doRedo ();
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
    protected class PromptAndCreateConnectionCommand extends CreateOrSelectElementCommand {
        protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
        protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
    protected Command getConnectionAndRelationshipCompleteCommand (CreateConnectorViewAndElementRequest request);
public class GraphicalNodeEditPolicy extends org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy {
    protected Command getConnectionAndRelationshipCompleteCommand (CreateConnectionViewAndElementRequest request);
public class GraphicsToGraphics2DAdaptor extends Graphics implements DrawableRenderedImage {
    private static class State {
public class GraphicsToGraphics2DAdaptor extends Graphics implements DrawableRenderedImage {
    private static class State {
        public int alpha;
public class GraphicsToGraphics2DAdaptor extends Graphics implements DrawableRenderedImage {
public class GraphicsToGraphics2DAdaptor extends Graphics implements DrawableRenderedImage {
public class GridLayoutDataImpl extends EObjectImpl implements GridLayoutData {
public class GridLayoutDataImpl extends EObjectImpl implements GridLayoutData {
public class GridLayoutDataImpl extends EObjectImpl implements GridLayoutData {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GridLayoutDataImpl extends EObjectImpl implements GridLayoutData {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GridLayoutDataImpl extends EObjectImpl implements GridLayoutData {
    protected Dimension sizeHint = null;
public class GridLayoutDataImpl extends EObjectImpl implements GridLayoutData {
    protected Dimension sizeHint;
public class GridLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GridLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GridLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GridLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class GridLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GridLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GridLayoutImpl extends EObjectImpl implements GridLayout {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class GridLayoutImpl extends EObjectImpl implements GridLayout {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class GridLayoutImpl extends EObjectImpl implements GridLayout {
    protected Dimension margins = null;
    protected Dimension spacing = null;
public class GridLayoutImpl extends EObjectImpl implements GridLayout {
    protected Dimension margins;
    protected Dimension spacing;
public class GridLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class GridLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class GridLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GridLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class GroupEditPart extends ShapeNodeEditPart {
public class GroupEditPart extends ShapeNodeEditPart {
    protected static class GroupContainerEditPolicy extends ContainerEditPolicy {
        protected Command getArrangeCommand (ArrangeRequest request);
interface Guide extends EObject {
interface Guide extends NotationObject {
interface Guide extends NotationObject {
interface Guide extends EObject {
public class GuideImpl extends EObjectImpl implements Guide {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class GuideImpl extends EObjectImpl implements Guide {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class GuideImpl extends EObjectImpl implements Guide {
public class GuideImpl extends FlatEObjectImpl implements Guide {
public class GuideImpl extends FlatEObjectImpl implements Guide {
    protected EMap nodeMap = null;
public class GuideImpl extends FlatEObjectImpl implements Guide {
    protected EMap nodeMap;
public class GuideImpl extends FlatEObjectImpl implements Guide {
public class GuideImpl extends NotationObjectImpl implements Guide {
public class GuideImpl extends NotationObjectImpl implements Guide {
public class GuideImpl extends NotationEObjectImpl implements Guide {
public class GuideItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface GuideStyle extends NotationObject, Style {
interface GuideStyle extends Style {
interface GuideStyle extends Style {
interface GuideStyle extends NotationObject, Style {
public class GuideStyleImpl extends EObjectImpl implements GuideStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class GuideStyleImpl extends EObjectImpl implements GuideStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class GuideStyleImpl extends EObjectImpl implements GuideStyle {
public class GuideStyleImpl extends FlatEObjectImpl implements GuideStyle {
public class GuideStyleImpl extends FlatEObjectImpl implements GuideStyle {
    protected EList horizontalGuides = null;
    protected EList verticalGuides = null;
public class GuideStyleImpl extends FlatEObjectImpl implements GuideStyle {
    protected EList horizontalGuides;
    protected EList verticalGuides;
public class GuideStyleImpl extends FlatEObjectImpl implements GuideStyle {
public class GuideStyleImpl extends NotationObjectImpl implements GuideStyle {
public class GuideStyleImpl extends NotationObjectImpl implements GuideStyle {
public class GuideStyleImpl extends NotationEObjectImpl implements GuideStyle {
public class GuideStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class GuideStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class HeaderAndFooterHelper {
    final public static int BOTTOM_MARGIN = MapMode.DPtoLP (20);
    final public static int LEFT_MARGIN = MapMode.DPtoLP (5);
    final public static int TOP_MARGIN = MapMode.DPtoLP (5);
public class HeaderAndFooterHelper {
    final public static int BOTTOM_MARGIN_DP = 20;
    final public static int LEFT_MARGIN_DP = 5;
    final public static int TOP_MARGIN_DP = 5;
public class Hierarchy {
    public Hierarchy (EClass diagramContainer) {
    public Hierarchy (EClass diagramContainer, EPackage domainModel) {
    public Hierarchy (List eRefs, EClass diagramContainer, EPackage domainModel) {
    public Set getAccessibleClasses ();
    public Set getAccessibleLinkClasses ();
    public Set getAccessibleReferences ();
    public Set getAccessibleReferences (Iterator iter);
public class Hierarchy {
    @SuppressWarnings("unchecked")
    public Hierarchy (EClass diagramContainer) {
    @SuppressWarnings("unchecked")
    public Hierarchy (EClass diagramContainer, EPackage domainModel) {
    public Hierarchy (List < EReference > eRefs, EClass diagramContainer, EPackage domainModel) {
    public Set < EClass > getAccessibleClasses ();
    public Set < EClass > getAccessibleLinkClasses ();
    public Set < EClass > getAllClasses ();
    public Set < EReference > getAccessibleReferences ();
public class Hierarchy {
    @SuppressWarnings("unchecked")
    public Hierarchy (EClass diagramContainer) {
    @SuppressWarnings("unchecked")
    public Hierarchy (EClass diagramContainer, EPackage domainModel) {
public class Hierarchy {
    public Hierarchy (EClass diagramContainer) {
    public Hierarchy (EClass diagramContainer, EPackage domainModel) {
public class HiMetricMapMode implements IMapMode {
public class HiMetricMapMode implements IMapMode {
    public Translatable DPtoLP (Translatable t);
public class HintedDiagramLinkStyleItemProvider extends DiagramLinkStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class HintedDiagramLinkStyleItemProvider extends DiagramLinkStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class HintedDiagramLinkStyleItemProvider extends DiagramLinkStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class HintedDiagramLinkStyleItemProvider extends DiagramLinkStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class History {
public class History {
public class History {
public class History {
public interface IBookmark extends IMarker {
    final public static String TYPE = "org.eclipse.gmf.runtime.common.ui.services.bookmark";
interface IBookmark extends org.eclipse.gmf.runtime.common.core.resources.IBookmark {
public interface IBorderItemLocator extends Locator {
public interface IBorderItemLocator extends Locator {
public interface IBorderItemLocator extends Locator {
    public Rectangle getValidLocation (Rectangle proposedLocation, IFigure borderItem);
    public int getCurrentSideOfParent ();
    public void setConstraint (Rectangle constraint);
interface IBorderItemLocator extends org.eclipse.gmf.runtime.draw2d.ui.figures.IBorderItemLocator {
public interface ICommand {
    public CommandResult getCommandResult ();
public interface ICommand extends IUndoableOperation {
    abstract public CommandResult getCommandResult ();
    abstract public ICommand compose (IUndoableOperation operation);
    abstract public ICommand reduce ();
public interface ICommand extends IUndoableOperation {
    public CMValidator getValidator ();
    public boolean involvesReadOnlyNonWorkSpaceFiles ();
    public boolean isExecutable ();
    public boolean isRedoable ();
    public boolean isUndoable ();
    public void execute (IProgressMonitor progressMonitor);
    public void redo ();
    public void undo ();
public interface ICommand extends IUndoableOperation {
public interface ICommand extends IUndoableOperation {
public interface ICommand extends IUndoableOperation {
    abstract public void setLabel (String label);
public class ICommandProxy extends Command {
public class ICommandProxy extends Command {
public interface IContributionItemProvider extends IProvider {
public interface IContributionItemProvider extends IProvider {
    public void updateActionBars (IActionBars actionBars, IWorkbenchPartDescriptor workbenchPartDescriptor);
interface IDecoration extends IDecorationBase {
public interface IDecoration extends IDecorationBase {
    public boolean shouldIgnoreParentVisibility ();
    public void setIgnoreParentVisibility (boolean ignoreParentVisibility);
public interface IDecoration extends IDecorationBase {
public interface IDecoration {
interface IDecorator extends IDecoratorBase {
public interface IDecorator {
    public void activate ();
    public void deactivate ();
    public void refresh ();
public interface IDecoratorProvider extends IDecoratorProviderBase {
public interface IDecoratorProvider extends IProvider {
public interface IDecoratorTarget extends IDecoratorTargetBase {
public interface IDecoratorTarget extends IAdaptable {
    public IDecoration addDecoration (IFigure figure, Locator locator, boolean isVolatile);
    public class Direction {
        final public static Direction CENTER = new Direction ();
        final public static Direction EAST = new Direction ();
        final public static Direction NORTH = new Direction ();
        final public static Direction NORTH_EAST = new Direction ();
        final public static Direction NORTH_WEST = new Direction ();
        final public static Direction SOUTH = new Direction ();
        final public static Direction SOUTH_EAST = new Direction ();
        final public static Direction SOUTH_WEST = new Direction ();
        final public static Direction WEST = new Direction ();
public class IDEDiagramDocumentEditor extends DiagramDocumentEditor {
    public IDEDiagramDocumentEditor (MEditingDomain domain, boolean hasFlyoutPalette) {
public class IDEDiagramDocumentEditor extends DiagramDocumentEditor {
public class IDEDiagramDocumentEditor extends DiagramDocumentEditor {
public class IDEDiagramDocumentEditor extends DiagramDocumentEditor implements IGotoMarker {
    final public void gotoMarker (IMarker marker);
abstract public class IDEEditorFileCreator extends EditorFileCreator {
abstract public class IDEEditorFileCreator extends DiagramFileCreator {
public class IDEEditorUtil extends EditorUtil {
public class IDEEditorUtil extends EditorUtil {
public class IDEGlobalActionManager extends GlobalActionManager {
public class IDEGlobalActionManager extends GlobalActionManager {
interface IdentityAnchor extends Anchor {
interface IdentityAnchor extends Anchor, NotationObject {
interface IdentityAnchor extends Anchor, NotationObject {
interface IdentityAnchor extends Anchor {
public class IdentityAnchorImpl extends EObjectImpl implements IdentityAnchor {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class IdentityAnchorImpl extends EObjectImpl implements IdentityAnchor {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class IdentityAnchorImpl extends EObjectImpl implements IdentityAnchor {
public class IdentityAnchorImpl extends FlatEObjectImpl implements IdentityAnchor {
public class IdentityAnchorImpl extends FlatEObjectImpl implements IdentityAnchor {
public class IdentityAnchorImpl extends NotationObjectImpl implements IdentityAnchor {
public class IdentityAnchorImpl extends NotationObjectImpl implements IdentityAnchor {
public class IdentityAnchorImpl extends NotationEObjectImpl implements IdentityAnchor {
public class IdentityAnchorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IdentityAnchorItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IdentityAnchorItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IdentityAnchorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public interface IEditCommandRequest {
public interface IEditCommandRequest {
    public static String REPLACE_DEFAULT_COMMAND = "IEditCommandRequest.replaceDefaultCommand";
public interface IEditCommandRequest {
public interface IEditCommandRequest {
public interface IEditCommandRequest {
public interface IEditCommandRequest {
public interface IEditHelper {
public interface IEditHelper {
    public boolean canEdit (IEditCommandRequest req);
public interface IEditHelperAdvice {
public interface IEditHelperAdvice {
    public boolean approveRequest (IEditCommandRequest request);
    public void configureRequest (IEditCommandRequest request);
public interface IEditHelperAdviceDescriptor {
public interface IEditHelperAdviceDescriptor {
public interface IEditPartProvider extends IProvider {
    public RootEditPart createRootEditPart ();
public interface IEditPartProvider extends IProvider {
    public RootEditPart createRootEditPart (Diagram diagram);
public interface IElementSelectionInput {
    public List getTypes ();
    public String getFilter ();
public interface IElementSelectionInput {
    public IFilter getFilter ();
    public String getInput ();
public interface IElementType extends IAdaptable {
public interface IElementType extends IAdaptable {
    public boolean canEdit (IEditCommandRequest req);
public interface IFileChangeManager {
public interface IFileChangeManager {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
public interface IGraphicalEditPart extends IEditableEditPart, org.eclipse.gef.GraphicalEditPart {
    public void setStructuralFeatureValue (EStructuralFeature feature, Object value);
public interface ILabels {
    public static String LABEL_BUTTON_CONFIGURE_WORKSPACE_SETTINGS = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.button.configure");
    public static String LABEL_BUTTON_INCHES = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.button.inches");
    public static String LABEL_BUTTON_LANDSCAPE = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.button.landscape");
    public static String LABEL_BUTTON_MILLIMETRES = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.button.millimetres");
    public static String LABEL_BUTTON_PORTRAIT = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.button.portrait");
    public static String LABEL_BUTTON_USE_DIAGRAM_SETTINGS = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.button.diagram");
    public static String LABEL_BUTTON_USE_WORKSPACE_SETTINGS = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.button.workspace");
    public static String LABEL_INCHES = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.label.inches");
    public static String LABEL_MARGIN_BOTTOM = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.bottom");
    public static String LABEL_MARGIN_LEFT = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.left");
    public static String LABEL_MARGIN_RIGHT = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.right");
    public static String LABEL_MARGIN_TOP = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.top");
    public static String LABEL_MILLIMETRES = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.label.millimetres");
    public static String LABEL_PAGE_HEIGHT = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.text.page.height");
    public static String LABEL_PAGE_SIZE = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.text.page.size");
    public static String LABEL_PAGE_WIDTH = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.text.page.width");
    public static String LABEL_PREFERENCE_PAGE_PRINTING = PresentationResourceManager.getInstance ().getString ("PageSetupPreferencePage.title");
    public static String LABEL_PRINT_PREFERENCE_PAGE_ERROR_MSG = PresentationResourceManager.getInstance ().getString ("PrintPreferencePage.message.error");
    public static String LABEL_TITLE_GROUP_MARGIN = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.title.group.margin");
    public static String LABEL_TITLE_GROUP_ORIENTATION = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.title.group.orientation");
    public static String LABEL_TITLE_GROUP_PAPER_SIZE = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.title.group.paperSize");
    public static String LABEL_TITLE_GROUP_UNITS = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.title.group.unit");
    public static String LABEL_TITLE_PAGE_SETUP = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.title");
    public static String LABEL_TITLE_PAGE_SETUP_TAB_ITEM = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.title.tab");
    public static String TITLE_PAGE_SETUP_TAB_ITEM = PresentationResourceManager.getInstance ().getString ("PageSetupDialog.title.tab");
public interface ILabels {
    public static String LABEL_BUTTON_CONFIGURE_WORKSPACE_SETTINGS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.configure");
    public static String LABEL_BUTTON_INCHES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.inches");
    public static String LABEL_BUTTON_LANDSCAPE = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.landscape");
    public static String LABEL_BUTTON_MILLIMETRES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.millimetres");
    public static String LABEL_BUTTON_PORTRAIT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.portrait");
    public static String LABEL_BUTTON_USE_DIAGRAM_SETTINGS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.diagram");
    public static String LABEL_BUTTON_USE_WORKSPACE_SETTINGS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.workspace");
    public static String LABEL_INCHES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.label.inches");
    public static String LABEL_MARGIN_BOTTOM = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.bottom");
    public static String LABEL_MARGIN_LEFT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.left");
    public static String LABEL_MARGIN_RIGHT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.right");
    public static String LABEL_MARGIN_TOP = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.top");
    public static String LABEL_MILLIMETRES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.label.millimetres");
    public static String LABEL_PAGE_HEIGHT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.height");
    public static String LABEL_PAGE_SIZE = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.size");
    public static String LABEL_PAGE_WIDTH = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.width");
    public static String LABEL_PREFERENCE_PAGE_PRINTING = DiagramResourceManager.getInstance ().getString ("PageSetupPreferencePage.title");
    public static String LABEL_PRINT_PREFERENCE_PAGE_ERROR_MSG = DiagramResourceManager.getInstance ().getString ("PrintPreferencePage.message.error");
    public static String LABEL_TITLE_GROUP_MARGIN = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.margin");
    public static String LABEL_TITLE_GROUP_ORIENTATION = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.orientation");
    public static String LABEL_TITLE_GROUP_PAPER_SIZE = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.paperSize");
    public static String LABEL_TITLE_GROUP_UNITS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.unit");
    public static String LABEL_TITLE_PAGE_SETUP = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title");
    public static String LABEL_TITLE_PAGE_SETUP_TAB_ITEM = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.tab");
    public static String TITLE_PAGE_SETUP_TAB_ITEM = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.tab");
public interface ILabels {
public interface ILabels {
    public static String LABEL_PRINT_PREFERENCE_PAGE_INSTRUCTION = DiagramResourceManager.getInstance ().getString ("PrintPreferencePage.instruction");
public interface ILabels {
    public static String LABEL_BUTTON_CONFIGURE_WORKSPACE_SETTINGS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.configure");
    public static String LABEL_BUTTON_INCHES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.inches");
    public static String LABEL_BUTTON_LANDSCAPE = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.landscape");
    public static String LABEL_BUTTON_MILLIMETRES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.millimetres");
    public static String LABEL_BUTTON_PORTRAIT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.portrait");
    public static String LABEL_BUTTON_USE_DIAGRAM_SETTINGS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.diagram");
    public static String LABEL_BUTTON_USE_WORKSPACE_SETTINGS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.button.workspace");
    public static String LABEL_INCHES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.label.inches");
    public static String LABEL_MARGIN_BOTTOM = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.bottom");
    public static String LABEL_MARGIN_LEFT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.left");
    public static String LABEL_MARGIN_RIGHT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.right");
    public static String LABEL_MARGIN_TOP = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.margin.top");
    public static String LABEL_MILLIMETRES = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.label.millimetres");
    public static String LABEL_PAGE_HEIGHT = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.height");
    public static String LABEL_PAGE_SIZE = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.size");
    public static String LABEL_PAGE_WIDTH = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.text.page.width");
    public static String LABEL_PREFERENCE_PAGE_PRINTING = DiagramResourceManager.getInstance ().getString ("PageSetupPreferencePage.title");
    public static String LABEL_PRINT_PREFERENCE_PAGE_ERROR_MSG = DiagramResourceManager.getInstance ().getString ("PrintPreferencePage.message.error");
    public static String LABEL_PRINT_PREFERENCE_PAGE_INSTRUCTION = DiagramResourceManager.getInstance ().getString ("PrintPreferencePage.instruction");
    public static String LABEL_TITLE_GROUP_MARGIN = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.margin");
    public static String LABEL_TITLE_GROUP_ORIENTATION = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.orientation");
    public static String LABEL_TITLE_GROUP_PAPER_SIZE = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.paperSize");
    public static String LABEL_TITLE_GROUP_UNITS = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.group.unit");
    public static String LABEL_TITLE_PAGE_SETUP = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title");
    public static String LABEL_TITLE_PAGE_SETUP_TAB_ITEM = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.tab");
    public static String TITLE_PAGE_SETUP_TAB_ITEM = DiagramResourceManager.getInstance ().getString ("PageSetupDialog.title.tab");
public interface ILabels {
    public static String LABEL_BUTTON_CONFIGURE_WORKSPACE_SETTINGS = DiagramUIMessages.PageSetupDialog_button_configure;
    public static String LABEL_BUTTON_INCHES = DiagramUIMessages.PageSetupDialog_button_inches;
    public static String LABEL_BUTTON_LANDSCAPE = DiagramUIMessages.PageSetupDialog_button_landscape;
    public static String LABEL_BUTTON_MILLIMETRES = DiagramUIMessages.PageSetupDialog_button_millimetres;
    public static String LABEL_BUTTON_PORTRAIT = DiagramUIMessages.PageSetupDialog_button_portrait;
    public static String LABEL_BUTTON_USE_DIAGRAM_SETTINGS = DiagramUIMessages.PageSetupDialog_button_diagram;
    public static String LABEL_BUTTON_USE_WORKSPACE_SETTINGS = DiagramUIMessages.PageSetupDialog_button_workspace;
    public static String LABEL_INCHES = DiagramUIMessages.PageSetupDialog_label_inches;
    public static String LABEL_MARGIN_BOTTOM = DiagramUIMessages.PageSetupDialog_text_page_margin_bottom;
    public static String LABEL_MARGIN_LEFT = DiagramUIMessages.PageSetupDialog_text_page_margin_left;
    public static String LABEL_MARGIN_RIGHT = DiagramUIMessages.PageSetupDialog_text_page_margin_right;
    public static String LABEL_MARGIN_TOP = DiagramUIMessages.PageSetupDialog_text_page_margin_top;
    public static String LABEL_MILLIMETRES = DiagramUIMessages.PageSetupDialog_label_millimetres;
    public static String LABEL_PAGE_HEIGHT = DiagramUIMessages.PageSetupDialog_text_page_height;
    public static String LABEL_PAGE_SIZE = DiagramUIMessages.PageSetupDialog_text_page_size;
    public static String LABEL_PAGE_WIDTH = DiagramUIMessages.PageSetupDialog_text_page_width;
    public static String LABEL_PREFERENCE_PAGE_PRINTING = DiagramUIMessages.PageSetupPreferencePage_title;
    public static String LABEL_PRINT_PREFERENCE_PAGE_ERROR_MSG = DiagramUIMessages.PrintPreferencePage_message_error;
    public static String LABEL_PRINT_PREFERENCE_PAGE_INSTRUCTION = DiagramUIMessages.PrintPreferencePage_instruction;
    public static String LABEL_TITLE_GROUP_MARGIN = DiagramUIMessages.PageSetupDialog_title_group_margin;
    public static String LABEL_TITLE_GROUP_ORIENTATION = DiagramUIMessages.PageSetupDialog_title_group_orientation;
    public static String LABEL_TITLE_GROUP_PAPER_SIZE = DiagramUIMessages.PageSetupDialog_title_group_paperSize;
    public static String LABEL_TITLE_GROUP_UNITS = DiagramUIMessages.PageSetupDialog_title_group_unit;
    public static String LABEL_TITLE_PAGE_SETUP = DiagramUIMessages.PageSetupDialog_title;
    public static String LABEL_TITLE_PAGE_SETUP_TAB_ITEM = DiagramUIMessages.PageSetupDialog_title_tab;
    public static String TITLE_PAGE_SETUP_TAB_ITEM = DiagramUIMessages.PageSetupDialog_title_tab;
public interface ILabels {
    public static String LABEL_MARGIN_BOTTOM = DiagramUIMessages.PageSetupDialog_text_page_margin_bottom;
    public static String LABEL_MARGIN_LEFT = DiagramUIMessages.PageSetupDialog_text_page_margin_left;
    public static String LABEL_MARGIN_RIGHT = DiagramUIMessages.PageSetupDialog_text_page_margin_right;
    public static String LABEL_MARGIN_TOP = DiagramUIMessages.PageSetupDialog_text_page_margin_top;
    public static String LABEL_PAGE_HEIGHT = DiagramUIMessages.PageSetupDialog_text_page_height;
    public static String LABEL_PAGE_WIDTH = DiagramUIMessages.PageSetupDialog_text_page_width;
public interface ILabels {
    public static String LABEL_MARGIN_BOTTOM_INCHES = DiagramUIMessages.PageSetupDialog_text_page_margin_bottom_inches;
    public static String LABEL_MARGIN_BOTTOM_MM = DiagramUIMessages.PageSetupDialog_text_page_margin_bottom_mm;
    public static String LABEL_MARGIN_LEFT_INCHES = DiagramUIMessages.PageSetupDialog_text_page_margin_left_inches;
    public static String LABEL_MARGIN_LEFT_MM = DiagramUIMessages.PageSetupDialog_text_page_margin_left_mm;
    public static String LABEL_MARGIN_RIGHT_INCHES = DiagramUIMessages.PageSetupDialog_text_page_margin_right_inches;
    public static String LABEL_MARGIN_RIGHT_MM = DiagramUIMessages.PageSetupDialog_text_page_margin_right_mm;
    public static String LABEL_MARGIN_TOP_INCHES = DiagramUIMessages.PageSetupDialog_text_page_margin_top_inches;
    public static String LABEL_MARGIN_TOP_MM = DiagramUIMessages.PageSetupDialog_text_page_margin_top_mm;
    public static String LABEL_PAGE_HEIGHT_INCHES = DiagramUIMessages.PageSetupDialog_text_page_height_inches;
    public static String LABEL_PAGE_HEIGHT_MM = DiagramUIMessages.PageSetupDialog_text_page_height_mm;
    public static String LABEL_PAGE_WIDTH_INCHES = DiagramUIMessages.PageSetupDialog_text_page_width_inches;
    public static String LABEL_PAGE_WIDTH_MM = DiagramUIMessages.PageSetupDialog_text_page_width_mm;
public interface ILayoutNode extends ILayoutNodeBase {
public interface ILayoutNode {
interface Image extends EObject {
interface Image extends NotationObject {
interface Image extends NotationObject {
interface Image extends EObject {
public class ImageBufferStyleImpl extends ImageStyleImpl implements ImageBufferStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class ImageBufferStyleImpl extends ImageStyleImpl implements ImageBufferStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class ImageBufferStyleImpl extends ImageStyleImpl implements ImageBufferStyle {
    protected Image imageBuffer = null;
public class ImageBufferStyleImpl extends ImageStyleImpl implements ImageBufferStyle {
    protected Image imageBuffer;
public class ImageBufferStyleItemProvider extends ImageStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageBufferStyleItemProvider extends ImageStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageBufferStyleItemProvider extends ImageStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageBufferStyleItemProvider extends ImageStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageBufferStyleItemProvider extends ImageStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageBufferStyleItemProvider extends ImageStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageExporter {
public class ImageExporter {
public class ImageFileDropTargetListener extends DiagramDropTargetListener {
public class ImageFileDropTargetListener extends DiagramDropTargetListener {
public class ImageFileFormat extends EnumeratedType {
public class ImageFileFormat extends EnumeratedType {
    final public static ImageFileFormat PNG = new ImageFileFormat ("PNG", SWT.IMAGE_PNG);
public class ImageFileFormat extends EnumeratedType {
public class ImageFileFormat extends EnumeratedType {
    final public static ImageFileFormat PDF = new ImageFileFormat ("PDF", IMAGE_PDF);
public class ImageImpl extends EObjectImpl implements Image {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class ImageImpl extends EObjectImpl implements Image {
    public void eSet (int featureID, Object newValue);
public class ImageImpl extends EObjectImpl implements Image {
public class ImageImpl extends FlatEObjectImpl implements Image {
public class ImageImpl extends FlatEObjectImpl implements Image {
public class ImageImpl extends NotationObjectImpl implements Image {
public class ImageImpl extends NotationObjectImpl implements Image {
public class ImageImpl extends NotationEObjectImpl implements Image {
public class ImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
final public class ImageRenderedImage extends AbstractRenderedImage {
    public ImageRenderedImage (byte [] buff, RenderInfo key) {
final public class ImageRenderedImage extends AbstractRenderedImage {
    public ImageRenderedImage (byte [] buff, RenderedImageKey key) {
final public class ImageRenderedImage extends AbstractRenderedImage {
final public class ImageRenderedImage extends AbstractRenderedImage {
interface ImageStyle extends Style {
interface ImageStyle extends NotationObject, Style {
interface ImageStyle extends NotationObject, Style {
interface ImageStyle extends Style {
public class ImageStyleImpl extends EObjectImpl implements ImageStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class ImageStyleImpl extends EObjectImpl implements ImageStyle {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class ImageStyleImpl extends EObjectImpl implements ImageStyle {
public class ImageStyleImpl extends FlatEObjectImpl implements ImageStyle {
public class ImageStyleImpl extends FlatEObjectImpl implements ImageStyle {
    protected Bounds cropBound = null;
public class ImageStyleImpl extends FlatEObjectImpl implements ImageStyle {
    protected Bounds cropBound;
public class ImageStyleImpl extends FlatEObjectImpl implements ImageStyle {
public class ImageStyleImpl extends NotationObjectImpl implements ImageStyle {
public class ImageStyleImpl extends NotationObjectImpl implements ImageStyle {
public class ImageStyleImpl extends NotationEObjectImpl implements ImageStyle {
public class ImageStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ImageSupportGlobalActionHandler extends PresentationGlobalActionHandler {
public class ImageSupportGlobalActionHandler extends DiagramGlobalActionHandler {
public class ImageSupportGlobalActionHandler extends DiagramGlobalActionHandler {
    protected boolean canCopy (IGlobalActionContext cntxt);
public class ImageSupportGlobalActionHandler extends DiagramGlobalActionHandler {
public interface IMarker {
    final public static String ELEMENT_ID = "elementId";
    final public static String ELEMENT_ID_SEPARATOR = " ";
    final public static String TYPE = "org.eclipse.gmf.runtime.common.ui.services.marker";
interface IMarker extends org.eclipse.gmf.runtime.common.core.resources.IMarker {
public interface IModelingAssistantOperation extends IOperation {
    final public String GET_REL_TYPES_FOR_SRE_ON_SOURCE_ID = "GetRelTypesForSREOnSource";
    final public String GET_REL_TYPES_FOR_SRE_ON_TARGET_ID = "GetRelTypesForSREOnTarget";
    final public String GET_REL_TYPES_ON_SOURCE_AND_TARGET_ID = "GetRelTypesOnSourceAndTarget";
    final public String GET_REL_TYPES_ON_SOURCE_ID = "GetRelTypesOnSource";
    final public String GET_REL_TYPES_ON_TARGET_ID = "GetRelTypesOnTarget";
    final public String GET_TYPES_FOR_ACTION_BAR_ID = "GetTypesForActionBar";
    final public String GET_TYPES_FOR_ATTRIBUTE_ID = "GetTypesForAttribute";
    final public String GET_TYPES_FOR_SOURCE_ID = "GetTypesForSource";
    final public String GET_TYPES_FOR_TARGET_ID = "GetTypesForTarget";
    final public String SELECT_EXISTING_ELEMENT_FOR_SOURCE_ID = "SelectExistingElementForSource";
    final public String SELECT_EXISTING_ELEMENT_FOR_TARGET_ID = "SelectExistingElementForTarget";
public interface IModelingAssistantOperation extends IOperation {
public class ImportUtil implements ImportAssistant {
public class ImportUtil implements ImportAssistant {
    public ImportUtil (String compilationUnitPackage, String compilationUnitName, IPackageFragmentRoot sourceRoot) {
public class ImportUtil implements ImportAssistant {
public class ImportUtil implements ImportAssistant {
    @SuppressWarnings("unchecked")
public class ImportUtil implements ImportAssistant {
    @SuppressWarnings("unchecked")
public class ImportUtil implements ImportAssistant {
abstract public class IndividualCompartmentAction extends BooleanPropertyAction {
abstract public class IndividualCompartmentAction extends BooleanPropertyAction {
    @Override
abstract public class IndividualCompartmentAction extends BooleanPropertyAction {
abstract public class IndividualCompartmentAction extends BooleanPropertyAction {
    protected Object getPropertyValue (final IGraphicalEditPart editPart, final String thePropertyId);
abstract public class IndividualConnectionLabelAction extends BooleanPropertyAction {
abstract public class IndividualConnectionLabelAction extends BooleanPropertyAction {
public class InnerClassViewmapImpl extends ViewmapImpl implements InnerClassViewmap {
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class InnerClassViewmapImpl extends ViewmapImpl implements InnerClassViewmap {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class InnerClassViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class InnerClassViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class InnerClassViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class InnerClassViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class InnerClassViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class InnerClassViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    public Viewmap create (Compartment compartment);
    public Viewmap create (Connection link);
    public Viewmap create (DiagramLabel label);
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    @Override
    public Viewmap create (Compartment compartment);
    @Override
    public Viewmap create (Connection link);
    @Override
    public Viewmap create (DiagramLabel diagramLabel);
    @Override
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    public static FigureGallery findAncestorFigureGallery (Figure figure);
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    public static Collection < FigureGallery > findAllGalleriesForImport (Figure figure);
    public static FigureGallery findAncestorFigureGallery (EObject figure);
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    public InnerClassViewmapProducer (FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeCodeGenStrategy) {
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    public InnerClassViewmapProducer (FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeCodeGenStrategy, URL [] dynamicFigureTemplates) {
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    public InnerClassViewmapProducer (FigureQualifiedNameSwitch figureNameSwitch, MapModeCodeGenStrategy mapModeCodeGenStrategy, URL [] dynamicFigureTemplates) {
public class InnerClassViewmapProducer extends DefaultViewmapProducer {
    public InnerClassViewmapProducer (String runtimeToken, MapModeCodeGenStrategy mapModeCodeGenStrategy, URL [] dynamicFigureTemplates) {
public interface INodeEditPart extends INoteableEditPart, NodeEditPart {
public interface INodeEditPart extends INotableEditPart, NodeEditPart {
public class InsetsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class InsetsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class InsetsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class InsetsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class IntListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IntListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IntListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IntListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IntValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IntValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IntValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class IntValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
class InvokeTemplateTask extends Task {
public class InvokeTemplateTask extends Task {
    @Override
    public void execute () throws BuildException;
    protected Object [] getTemplateArguments ();
    protected Object getTemplateTarget ();
    protected XpandFacade createFacade ();
    protected void execute (XpandFacade xf) throws BuildException;
    protected void validate () throws BuildException;
    public void setBareInput (String input);
    public void setBareInput (int i);
    public void setName (String name);
    public void setTemplateRoot (String root);
public class InvokeTemplateTask extends Task {
public class InvokeTemplateTask extends Task {
public class InvokeTemplateTask extends Task {
    protected XpandFacade createFacade () throws BuildException;
public class InvokeTemplateTask extends Task {
    protected XpandFacade createExecFacade () throws BuildException;
    protected void doExecute () throws BuildException;
public interface IPolygonAnchorableFigure extends IFigure {
public interface IPolygonAnchorableFigure extends IAnchorableFigure {
public interface IPreferenceConstants {
    final public static String CREATE_DEFAULT_DIAGRAM_ON_PACKAGE_CREATION = "DiagramCreationPreference.create_default_diagram_on_package_creation";
    final public static String DEFAULT_DIAGRAM_TYPE_FOR_PACKAGE = "DiagramCreationPreference.default_diagram_type_for_package";
    final public static String OPEN_DEFAULT_DIAGRAM_ON_MODEL_OPEN = "DiagramCreationPreference.open_default_diagram_on_model_open";
    final public static String OPEN_DEFAULT_DIAGRAM_ON_NAMESPACE_OPEN = "DiagramCreationPreference.open_default_diagram_on_namespace_open";
    final public static String PREF_BOLD_NAME = "Global.boldName";
    final public static String PREF_COMMENT_FILL_COLOR = "Appearance.commentFillColor";
    final public static String PREF_COMMENT_LINE_COLOR = "Appearance.commentLineColor";
    final public static String PREF_CONSTRAINT_FILL_COLOR = "Appearance.constraintFillColor";
    final public static String PREF_CONSTRAINT_LINE_COLOR = "Appearance.constraintLineColor";
    final public static String PREF_SHOW_COMPARTMENT_TITLE = "Shapes.showCompartmentTitle";
    final public static String PREF_SHOW_DROPSHADOW = "Global.showDropShadow";
    final public static String PREF_SHOW_GRADIENT = "Global.showGradient";
public interface IPreferenceConstants {
public interface IPreferenceConstants {
public interface IPreferenceConstants {
    final public static String PREF_SNAP_TO_GEOMETRY = "GridRuler.snapToGeometry";
interface IResizableCompartmentEditPart extends IGraphicalEditPart {
public interface IResizableCompartmentEditPart extends IGraphicalEditPart {
    public String getCompartmentName ();
public interface ISurfaceEditPart {
public interface ISurfaceEditPart {
public class ItemRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ItemRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ItemRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ItemRefItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public interface IUpdatableEditPart {
public interface IUpdatableEditPart {
    public interface ComposeableRefresher extends Iterable < Refresher >, Refresher {
        public void addRefresher (Refresher refresher);
public class JavaExtensionStatement extends Extension {
    public JavaExtensionStatement (final int start, final int end, final int line, final Identifier name, final List < DeclaredParameter > formalParameters, final Identifier returnType, final Identifier defaultImplementation, final Identifier javaMethod, final List < Identifier > javaParamTypes, final boolean cached, final boolean isPrivate) {
    public Method getJavaMethod (final ExecutionContext ctx, final Set < AnalysationIssue > issues);
public class JavaExtensionStatement extends Extension {
    final protected Identifier instanceSlot;
    public JavaExtensionStatement (final int start, final int end, final int line, final Identifier name, final List < DeclaredParameter > formalParameters, final Identifier returnType, final Identifier defaultImplementation, final Identifier javaMethod, final List < Identifier > javaParamTypes, final boolean cached, final boolean isPrivate, final Identifier instanceSlot) {
public class JPSDiagramPrinter extends DiagramPrinter implements java.awt.print.Printable {
public class JPSDiagramPrinter extends DiagramPrinter implements java.awt.print.Printable {
public class JPSDiagramPrinter extends DiagramPrinter implements java.awt.print.Printable {
public class JPSDiagramPrinter extends DiagramPrinter implements java.awt.print.Printable {
    private class PrinterGraphicsToGraphics2DAdapter extends GraphicsToGraphics2DAdaptor {
        public PrinterGraphicsToGraphics2DAdapter (Graphics2D graphics, Rectangle viewPort) {
        public void fillGradient (int x, int y, int w, int h, boolean vertical);
        public void setLineWidth (int width);
public class JPSPrintDialog extends TrayDialog {
    public JPSPrintDialog (IShellProvider parentShell, PrintOptions options) {
    public JPSPrintDialog (Shell shell, PrintOptions options) {
public class JPSPrintDialog extends TrayDialog {
    protected DiagramPrintRangeBlock diagramPrintRangeBlock;
    public JPSPrintDialog (IShellProvider parentShell, PrintOptions options, List < String > allDiagrams) {
    public JPSPrintDialog (Shell shell, PrintOptions options, List < String > allDiagrams) {
final public class JumpLinkStatus extends AbstractEnumerator {
    final public static JumpLinkStatus ABOVE_LITERAL = new JumpLinkStatus (ABOVE, "Above");
    final public static JumpLinkStatus ALL_LITERAL = new JumpLinkStatus (ALL, "All");
    final public static JumpLinkStatus BELOW_LITERAL = new JumpLinkStatus (BELOW, "Below");
    final public static JumpLinkStatus NONE_LITERAL = new JumpLinkStatus (NONE, "None");
final public class JumpLinkStatus extends AbstractEnumerator {
    public static JumpLinkStatus getByName (String name); final public static JumpLinkStatus ABOVE_LITERAL = new JumpLinkStatus (ABOVE, "Above", "Above");
    final public static JumpLinkStatus ALL_LITERAL = new JumpLinkStatus (ALL, "All", "All");
    final public static JumpLinkStatus BELOW_LITERAL = new JumpLinkStatus (BELOW, "Below", "Below");
    final public static JumpLinkStatus NONE_LITERAL = new JumpLinkStatus (NONE, "None", "None");
final public class JumpLinkType extends AbstractEnumerator {
    final public static JumpLinkType CHAMFERED_LITERAL = new JumpLinkType (CHAMFERED, "Chamfered");
    final public static JumpLinkType SEMICIRCLE_LITERAL = new JumpLinkType (SEMICIRCLE, "Semicircle");
    final public static JumpLinkType SQUARE_LITERAL = new JumpLinkType (SQUARE, "Square");
final public class JumpLinkType extends AbstractEnumerator {
    public static JumpLinkType getByName (String name); final public static JumpLinkType CHAMFERED_LITERAL = new JumpLinkType (CHAMFERED, "Chamfered", "Chamfered");
    final public static JumpLinkType SEMICIRCLE_LITERAL = new JumpLinkType (SEMICIRCLE, "Semicircle", "Semicircle");
    final public static JumpLinkType SQUARE_LITERAL = new JumpLinkType (SQUARE, "Square", "Square");
public class KeywordProposalComputer implements ProposalComputer {
public class KeywordProposalComputer implements ProposalComputer {
    public KeywordProposalComputer (String textPastInsertionPoint) {
public class Knowledge {
public class Knowledge {
    public static boolean isPureLabelNode (NodeMapping childNodeMapping);
public class Knowledge {
public class Knowledge {
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    protected EClass eStaticClass (); protected EList children = null;
    protected EList referencingElements = null;
    public EList getChildren ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureMarker > children = null;
    public EList < DiagramElement > getReferencingElements ();
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureMarker > children = null;
    protected Font font = null;
    protected Insets insets = null;
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    protected Point location = null;
    protected Point size = null;
    protected String name = NAME_EDEFAULT;
    final protected static String NAME_EDEFAULT = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public Dimension getPreferredSize ();
    public EList < DiagramElement > getReferencingElements ();
    public EList < FigureMarker > getChildren ();
    public Figure getParent ();
    public Font getFont ();
    public Insets getInsets ();
    public Layout getLayout ();
    public LayoutData getLayoutData ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetInsets (Insets newInsets, NotificationChain msgs);
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public NotificationChain basicSetLayoutData (LayoutData newLayoutData, NotificationChain msgs);
    public NotificationChain basicSetLocation (Point newLocation, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain basicSetPreferredSize (Dimension newPreferredSize, NotificationChain msgs);
    public NotificationChain basicSetSize (Point newSize, NotificationChain msgs);
    public Point getLocation ();
    public Point getSize ();
    public String getName ();
    public void setBackgroundColor (Color newBackgroundColor);
    public void setBorder (Border newBorder);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setInsets (Insets newInsets);
    public void setLayout (Layout newLayout);
    public void setLayoutData (LayoutData newLayoutData);
    public void setLocation (Point newLocation);
    public void setMaximumSize (Dimension newMaximumSize);
    public void setMinimumSize (Dimension newMinimumSize);
    public void setName (String newName);
    public void setPreferredSize (Dimension newPreferredSize);
    public void setSize (Point newSize);
public class LabeledContainerImpl extends RealFigureImpl implements LabeledContainer {
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    protected ColorStyle colorStyle = null;
    protected FontStyle fontStyle = null;
    protected SizeStyle sizeStyle = null;
    public FontStyle getFontStyle ();
    public NotificationChain basicSetColorStyle (ColorStyle newColorStyle, NotificationChain msgs);
    public NotificationChain basicSetSizeStyle (SizeStyle newSizeStyle, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
    public void setColorStyle (ColorStyle newColorStyle);
    public void setSizeStyle (SizeStyle newSizeStyle);
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected Font font = null;
    protected Insets insets = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public Font getFont ();
    public Insets getInsets ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setBackgroundColor (Color newBackgroundColor);
    public void setBorder (Border newBorder);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setMaximumSize (Dimension newMaximumSize);
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    protected String layoutManager = LAYOUT_MANAGER_EDEFAULT;
    final protected static String LAYOUT_MANAGER_EDEFAULT = null;
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    public Layout getLayout ();
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public void setLayout (Layout newLayout);
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
    protected EList referencingElements = null;
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
public class LabeledContainerItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabeledContainerItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabeledContainerItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabeledContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelEditPart extends TopGraphicEditPart {
public class LabelEditPart extends TopGraphicEditPart {
public class LabelImpl extends EObjectImpl implements Label {
    protected EClass eStaticClass (); protected EList children = null;
    protected EList referencingElements = null;
    public EList getChildren ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class LabelImpl extends EObjectImpl implements Label {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureMarker > children = null;
    public EList < DiagramElement > getReferencingElements ();
public class LabelImpl extends EObjectImpl implements Label {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    @SuppressWarnings("unchecked")
    @Override
    protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureMarker > children = null;
    protected Font font = null;
    protected Insets insets = null;
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    protected Point location = null;
    protected Point size = null;
    protected String name = NAME_EDEFAULT;
    final protected static String NAME_EDEFAULT = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public Dimension getPreferredSize ();
    public EList < DiagramElement > getReferencingElements ();
    public EList < FigureMarker > getChildren ();
    public Figure getParent ();
    public Font getFont ();
    public Insets getInsets ();
    public Layout getLayout ();
    public LayoutData getLayoutData ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetInsets (Insets newInsets, NotificationChain msgs);
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public NotificationChain basicSetLayoutData (LayoutData newLayoutData, NotificationChain msgs);
    public NotificationChain basicSetLocation (Point newLocation, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain basicSetPreferredSize (Dimension newPreferredSize, NotificationChain msgs);
    public NotificationChain basicSetSize (Point newSize, NotificationChain msgs);
    public Point getLocation ();
    public Point getSize ();
    public void setBackgroundColor (Color newBackgroundColor);
    public void setBorder (Border newBorder);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setInsets (Insets newInsets);
    public void setLayout (Layout newLayout);
    public void setLayoutData (LayoutData newLayoutData);
    public void setLocation (Point newLocation);
    public void setMaximumSize (Dimension newMaximumSize);
    public void setMinimumSize (Dimension newMinimumSize);
    public void setName (String newName);
    public void setPreferredSize (Dimension newPreferredSize);
public class LabelImpl extends RealFigureImpl implements Label {
public class LabelImpl extends RealFigureImpl implements Label {
    @SuppressWarnings("unchecked")
    @Override
public class LabelImpl extends RealFigureImpl implements Label {
    @Override
public class LabelImpl extends EObjectImpl implements Label {
public class LabelImpl extends EObjectImpl implements Label {
public class LabelImpl extends EObjectImpl implements Label {
    protected ColorStyle colorStyle = null;
    protected FontStyle fontStyle = null;
    protected SizeStyle sizeStyle = null;
    public FontStyle getFontStyle ();
    public NotificationChain basicSetColorStyle (ColorStyle newColorStyle, NotificationChain msgs);
    public NotificationChain basicSetSizeStyle (SizeStyle newSizeStyle, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
    public void setColorStyle (ColorStyle newColorStyle);
public class LabelImpl extends EObjectImpl implements Label {
    protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected Font font = null;
    protected Insets insets = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public Font getFont ();
    public Insets getInsets ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setBackgroundColor (Color newBackgroundColor);
    public void setBorder (Border newBorder);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setMaximumSize (Dimension newMaximumSize);
public class LabelImpl extends EObjectImpl implements Label {
    protected String layoutManager = LAYOUT_MANAGER_EDEFAULT;
    final protected static String LAYOUT_MANAGER_EDEFAULT = null;
public class LabelImpl extends EObjectImpl implements Label {
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    public Layout getLayout ();
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public void setLayout (Layout newLayout);
public class LabelImpl extends EObjectImpl implements Label {
public class LabelImpl extends EObjectImpl implements Label {
    protected EList referencingElements = null;
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
public class LabelItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface LabelMapping extends EObject {
interface LabelMapping extends LabelFlavour {
interface LabelMapping extends LabelFlavour {
interface LabelMapping extends EObject {
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
abstract public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
    public MappingEntry getMapEntry ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
    protected String defaultText = DEFAULT_TEXT_EDEFAULT;
    protected String text = TEXT_EDEFAULT;
    final protected static String DEFAULT_TEXT_EDEFAULT = null;
    final protected static String TEXT_EDEFAULT = null;
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
    protected EList features = null;
    protected String editPattern = EDIT_PATTERN_EDEFAULT;
    protected String viewPattern = VIEW_PATTERN_EDEFAULT;
    final protected static String EDIT_PATTERN_EDEFAULT = null;
    final protected static String VIEW_PATTERN_EDEFAULT = null;
    public String getEditPattern ();
    public void setViewPattern (String newViewPattern);
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
    protected DiagramLabel diagramLabel = null;
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
    protected DiagramLabel diagramLabel;
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
public class LabelMappingImpl extends EObjectImpl implements LabelMapping {
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addEditPatternPropertyDescriptor (Object object);
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelMappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LabelOffsetAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class LabelOffsetAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class LabelOffsetAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelOffsetAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelOffsetFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class LabelOffsetFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class LabelOffsetFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelOffsetFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LabelSnapBackEditPolicy extends GraphicalNodeEditPolicy {
public class LabelSnapBackEditPolicy extends GraphicalNodeEditPolicy {
[Language-3.java, Txl/api_clone_java.Txl] : TXL0192E line 24 of Language-3.java - Syntax error at or near:
public class LayoutDataSection extends AbstractPropertySection implements ChangeTracker, Listener {
public class LayoutDataSection extends AbstractPropertySection implements ChangeTracker, Listener {
    protected Layoutable getInput ();
public class LayoutSection extends AbstractPropertySection implements ChangeTracker, Listener {
public class LayoutSection extends AbstractPropertySection implements ChangeTracker, Listener {
    protected Layoutable getInput ();
final public class LayoutService extends Service implements ILayoutNodeProvider {
final public class LayoutService extends Service implements ILayoutNodeProvider {
public class LayoutType {
final public class LayoutType {
final public class LayoutType {
final public class LayoutType {
    final public static String COMPOSITE = "COMPOSITE";
public class LeafNodeStrategy implements Strategy {
    public void filter (Collection < EObject > soFar, Hierarchy hierarchy);
public class LeafNodeStrategy implements Strategy < EClass > {
    public void filter (Collection < EClass > soFar, Hierarchy hierarchy);
public class LeftRightProvider extends DefaultProvider {
public class LeftRightProvider extends DefaultProvider {
public class LineBorderImpl extends EObjectImpl implements LineBorder {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class LineBorderImpl extends EObjectImpl implements LineBorder {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class LineBorderImpl extends EObjectImpl implements LineBorder {
    protected Color color = null;
public class LineBorderImpl extends EObjectImpl implements LineBorder {
    protected Color color;
public class LineBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class LineBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class LineBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LineBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LineEditPart extends ConnectionNodeEditPart {
public class LineEditPart extends ConnectionNodeEditPart {
    protected void handleNotificationEvent (Notification notification);
    protected void refreshVisuals ();
    protected void setArrowSource (RotatableDecoration arrowDecoration);
    protected void setArrowTarget (RotatableDecoration arrowDecoration);
    protected void setLineType (int lineType);
[LineKind-3.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'LineKind-4.java' as a [program], at or near:
public class LineSegMoveInvisibleHandle extends BendpointCreationInvisibleHandle {
public class LineSegMoveInvisibleHandle extends BendpointCreationInvisibleHandle {
interface LineStyle extends NotationObject, Style {
interface LineStyle extends Style {
interface LineStyle extends Style {
interface LineStyle extends NotationObject, Style {
public class LineStyleImpl extends NotationObjectImpl implements LineStyle {
public class LineStyleImpl extends NotationEObjectImpl implements LineStyle {
public class LineStyleImpl extends EObjectImpl implements LineStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class LineStyleImpl extends EObjectImpl implements LineStyle {
    public void eSet (int featureID, Object newValue);
public class LineStyleImpl extends EObjectImpl implements LineStyle {
public class LineStyleImpl extends FlatEObjectImpl implements LineStyle {
public class LineStyleImpl extends FlatEObjectImpl implements LineStyle {
public class LineStyleImpl extends FlatEObjectImpl implements LineStyle {
    protected int lineWidth = LINE_WIDTH_EDEFAULT;
    final protected static int LINE_WIDTH_EDEFAULT = 1;
    public void setLineWidth (int newLineWidth);
public class LineStyleImpl extends FlatEObjectImpl implements LineStyle {
public class LineStyleImpl extends NotationObjectImpl implements LineStyle {
public class LineStyleImpl extends NotationObjectImpl implements LineStyle {
    final protected static int LINE_WIDTH_EDEFAULT = 1;
public class LineStyleImpl extends NotationObjectImpl implements LineStyle {
    final protected static int LINE_WIDTH_EDEFAULT = - 1;
public class LineStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LineStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LineStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LineStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LineStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LineStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface LineTypeStyle extends NotationObject, Style {
interface LineTypeStyle extends Style {
public class LineTypeStyleImpl extends NotationObjectImpl implements LineTypeStyle {
    protected LineType lineType = LINE_TYPE_EDEFAULT;
public class LineTypeStyleImpl extends NotationEObjectImpl implements LineTypeStyle {
    final protected static int LINE_TYPE_EFLAG = 0x7 << LINE_TYPE_EFLAG_OFFSET;
    final protected static int LINE_TYPE_EFLAG_DEFAULT = LineType.VALUES.indexOf (LINE_TYPE_EDEFAULT) << LINE_TYPE_EFLAG_OFFSET;
    final protected static int LINE_TYPE_EFLAG_OFFSET = 8;
public class LineTypeStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LineTypeStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
    protected Constraint sourceEnd = null;
    protected Constraint targetEnd = null;
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
    protected Constraint sourceEnd;
    protected Constraint targetEnd;
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
public class LinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class LinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class LinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LinkConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
final public class LinkLabelAlignment extends AbstractEnumerator {
    public static LinkLabelAlignment getByName (String name); final public static LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment (MIDDLE, "MIDDLE", "MIDDLE");
    final public static LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment (SOURCE, "SOURCE", "SOURCE");
    final public static LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment (TARGET, "TARGET", "TARGET");
final public class LinkLabelAlignment extends AbstractEnumerator {
    final public static LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment (MIDDLE, "MIDDLE");
    final public static LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment (SOURCE, "SOURCE");
    final public static LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment (TARGET, "TARGET");
final public class LinkLabelAlignment extends AbstractEnumerator {
    final public static LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment (MIDDLE, "MIDDLE");
    final public static LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment (SOURCE, "SOURCE");
    final public static LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment (TARGET, "TARGET");
final public class LinkLabelAlignment extends AbstractEnumerator {
    public static LinkLabelAlignment getByName (String name); final public static LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment (MIDDLE, "MIDDLE", "MIDDLE");
    final public static LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment (SOURCE, "SOURCE", "SOURCE");
    final public static LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment (TARGET, "TARGET", "TARGET");
[LinkLabelAlignment-5.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'LinkLabelAlignment-6.java' as a [program], at or near:
interface LinkMapping extends MappingEntry {
interface LinkMapping extends AppearanceSteward, MappingEntry, MenuOwner, ToolOwner {
interface LinkMapping extends AppearanceSteward, MappingEntry, MenuOwner, ToolOwner {
interface LinkMapping extends AppearanceSteward, MappingEntry, MenuOwner, NeedsContainment, ToolOwner {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected Constraint domainSpecialization = null;
    protected EClass domainMetaElement = null;
    protected EReference containmentFeature = null;
    protected ElementInitializer domainInitializer = null;
    protected Tool tool = null;
    public EClass getDomainMetaElement ();
    public EReference basicGetContainmentFeature ();
    public NotificationChain basicSetDomainInitializer (ElementInitializer newDomainInitializer, NotificationChain msgs);
    public NotificationChain basicSetDomainSpecialization (Constraint newDomainSpecialization, NotificationChain msgs);
    public void setDomainInitializer (ElementInitializer newDomainInitializer);
    public void setDomainMetaElement (EClass newDomainMetaElement);
    public void setTool (Tool newTool);
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected AbstractTool tool = null;
    protected ContextMenu contextMenu = null;
    protected StyleSelector appearanceStyle = null;
    public AbstractTool basicGetTool ();
    public ContextMenu basicGetContextMenu ();
    public StyleSelector basicGetAppearanceStyle ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public void setAppearanceStyle (StyleSelector newAppearanceStyle);
    public void setTool (AbstractTool newTool);
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected EList labelMappings = null;
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected EAttribute labelDisplayFeature = null;
    protected EAttribute labelEditFeature = null;
    protected EList labelMappings = null;
    public EAttribute basicGetLabelDisplayFeature ();
    public EAttribute basicGetLabelEditFeature ();
    public EAttribute getLabelDisplayFeature ();
    public EAttribute getLabelDisplayFeatureGen ();
    public void setLabelDisplayFeature (EAttribute newLabelDisplayFeature);
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected EReference containmentFeature = null;
    public EReference basicGetContainmentFeature ();
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected AbstractTool tool = null;
    protected Connection diagramLink = null;
    protected ContextMenu contextMenu = null;
    protected EReference containmentFeature = null;
    protected EStructuralFeature linkMetaFeature = null;
    protected EStructuralFeature sourceMetaFeature = null;
    protected LinkConstraints creationConstraints = null;
    protected StyleSelector appearanceStyle = null;
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected AbstractTool tool;
    protected Connection diagramLink;
    protected ContextMenu contextMenu;
    protected EReference containmentFeature;
    protected EStructuralFeature linkMetaFeature;
    protected EStructuralFeature sourceMetaFeature;
    protected LinkConstraints creationConstraints;
    protected StyleSelector appearanceStyle;
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected ElementInitializer domainInitializer = null;
    public ElementInitializer getDomainInitializer ();
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected LinkConstraints creationConstraints = null;
    public LinkConstraints getCreationConstraints ();
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected Tool tool = null;
    public void setTool (Tool newTool);
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    protected EStructuralFeature sourceMetaFeature = null;
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addLabelDisplayFeaturePropertyDescriptor (Object object);
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addLinkMetaFeaturePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_LinkMapping_linkMetaFeature_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_LinkMapping_linkMetaFeature_feature", "_UI_LinkMapping_type"), GMFMapPackage.eINSTANCE.getLinkMapping_LinkMetaFeature (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramLinkPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_LinkMapping_diagramLink_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_LinkMapping_diagramLink_feature", "_UI_LinkMapping_type"), GMFMapPackage.eINSTANCE.getLinkMapping_DiagramLink (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null) {
        );
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramLinkPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_LinkMapping_diagramLink_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_LinkMapping_diagramLink_feature", "_UI_LinkMapping_type"), GMFMapPackage.eINSTANCE.getLinkMapping_DiagramLink (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null) {
        );
    protected void addLinkMetaFeaturePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_LinkMapping_linkMetaFeature_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_LinkMapping_linkMetaFeature_feature", "_UI_LinkMapping_type"), GMFMapPackage.eINSTANCE.getLinkMapping_LinkMetaFeature (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
        );
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramLinkPropertyDescriptor (Object object);
    protected void addLinkMetaFeaturePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_LinkMapping_linkMetaFeature_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_LinkMapping_linkMetaFeature_feature", "_UI_LinkMapping_type"), GMFMapPackage.eINSTANCE.getLinkMapping_LinkMetaFeature (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
        );
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addLinkMetaFeaturePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_LinkMapping_linkMetaFeature_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_LinkMapping_linkMetaFeature_feature", "_UI_LinkMapping_type"), GMFMapPackage.eINSTANCE.getLinkMapping_LinkMetaFeature (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public void notifyChanged (Notification notification);
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    protected void addLinkMetaFeaturePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_LinkMapping_linkMetaFeature_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_LinkMapping_linkMetaFeature_feature", "_UI_LinkMapping_type"), GMFMapPackage.eINSTANCE.getLinkMapping_LinkMetaFeature (), true, null, getString ("_UI_DomainmetainformationPropertyCategory"), null) {
            protected Collection < ? > getComboBoxObjects (Object object);
        );
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LinkMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
    public ListCompartmentEditPart (View view) {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
    public ListCompartmentEditPart (EObject model) {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
    protected List modelChildrenListeners;
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
    protected int modelChildrenListenersCount = 0;
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
abstract public class ListCompartmentEditPart extends ResizableCompartmentEditPart {
public class ListIndexComparator implements Comparator {
public class ListIndexComparator implements Comparator {
    public ListIndexComparator (List list) {
public class ListItemEditPart extends TextCompartmentEditPart {
public class ListItemEditPart extends TextCompartmentEditPart {
public class ListScrollBar extends ScrollBar {
    public ListScrollBar (int orientation) {
public class ListScrollBar extends ScrollBar {
    public ListScrollBar (int orientation, Insets insets, Dimension size, int stepInc, int pageInc) {
public class ListScrollBar extends ScrollBar {
public class ListScrollBar extends ScrollBar {
public class ListValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ListValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ListValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ListValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
class LoadingEMFResource extends SerializationEMFResource {
class LoadingEMFResource extends SerializationEMFResource {
interface Location extends LayoutConstraint {
interface Location extends LayoutConstraint, NotationObject {
interface Location extends LayoutConstraint, NotationObject {
interface Location extends LayoutConstraint {
public class LocationImpl extends EObjectImpl implements Location {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class LocationImpl extends EObjectImpl implements Location {
    public void eSet (int featureID, Object newValue);
public class LocationImpl extends EObjectImpl implements Location {
public class LocationImpl extends FlatEObjectImpl implements Location {
public class LocationImpl extends FlatEObjectImpl implements Location {
public class LocationImpl extends NotationObjectImpl implements Location {
public class LocationImpl extends NotationObjectImpl implements Location {
public class LocationImpl extends NotationEObjectImpl implements Location {
public class LocationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LocationItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LocationItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class LocationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MainMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class MainMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class MainMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MainMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ManifestFileMerge {
    protected CharSequence formatValue (String value);
public class ManifestFileMerge {
    protected CharSequence formatValue (ManifestElement element);
    protected CharSequence formatValue (String headerHint, String value) throws BundleException;
public class ManifestFileMerge {
public class ManifestFileMerge {
public class MapDefFeeder {
    public void feedDefaultMapping ();
public class MapDefFeeder {
    @SuppressWarnings("unchecked")
public class MapDefFeeder {
public class MapDefFeeder {
public class MapDefFeeder {
    public MapDefFeeder (WizardInput holder) {
public class MapDefFeeder {
    public MapDefFeeder (WizardInput holder, ToolDefSupplier toolDefSupplier) {
abstract public class MapModeCodeGenStrategy {
    abstract public String DPtoLP (int deviceUnit);
    abstract public String LPtoDP (int logicalUnit); public static class RuntimeMapModeFromPluginClass extends RuntimeUnspecifiedMapMode {
        protected String getMapModeAccessor ();
        public ImportAssistant getImportAssistant ();
        public RuntimeMapModeFromPluginClass (ImportAssistant importAssistant, String pluginActivatorClassFQN) {
    public static class RuntimeUnspecifiedMapMode extends MapModeCodeGenStrategy {
        protected String getMapModeAccessor ();
        public String DPtoLP (int deviceUnit);
        public String LPtoDP (int logicalUnit);
    public static class StaticIdentityMapMode extends MapModeCodeGenStrategy {
        public String DPtoLP (int deviceUnit);
        public String LPtoDP (int logicalUnit);
enum MapModeCodeGenStrategy {
    StaticIdentity,
enum MapModeCodeGenStrategy {
    StaticIdentity,
public enum MapModeCodeGenStrategy {
    STATIC (""),
    DYNAMIC ("rt_mm");
    private MapModeCodeGenStrategy (String token) {
    final private String token;
public class MapModeGraphics extends Graphics {
    final protected Graphics getGraphics ();
    final protected Rectangle mapRect (int x, int y, int w, int h);
    final protected double getMapModeScale (); protected static class State {
        protected State () {
        protected State (double x, double y) {
        protected void setValues (double x, double y);
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Font getFont ();
    public FontMetrics getFontMetrics ();
    public MapModeGraphics (Graphics g) {
        Assert.isNotNull (g);
        graphics = g;
        mapModeScale = MapMode.getScale ();
    public Rectangle getClip (Rectangle rect);
    public boolean getXORMode ();
    public int getLineStyle ();
    public int getLineWidth ();
    public void clipRect (Rectangle r);
    public void dispose ();
    public void drawArc (int x, int y, int w, int h, int offset, int sweep);
    public void drawLine (int x1, int y1, int x2, int y2);
    public void drawOval (int x, int y, int w, int h);
    public void drawPoint (int x, int y);
    public void drawPolygon (PointList points);
    public void drawPolygon (int [] points);
    public void drawPolyline (PointList points);
    public void drawPolyline (int [] points);
    public void drawRectangle (int x, int y, int w, int h);
    public void drawRoundRectangle (Rectangle r, int arcWidth, int arcHeight);
    public void drawString (String s, int x, int y);
    public void drawText (String s, int x, int y);
    public void fillArc (int x, int y, int w, int h, int offset, int sweep);
    public void fillGradient (int x, int y, int w, int h, boolean vertical);
    public void fillOval (int x, int y, int w, int h);
    public void fillPolygon (PointList points);
    public void fillPolygon (int [] points);
    public void fillRectangle (int x, int y, int w, int h);
    public void fillRoundRectangle (Rectangle r, int arcWidth, int arcHeight);
    public void fillString (String s, int x, int y);
    public void fillText (String s, int x, int y);
    public void popState ();
    public void pushState ();
    public void restoreState ();
    public void scale (double amount);
    public void setBackgroundColor (Color rgb);
    public void setClip (Rectangle r);
    public void setFont (Font f);
    public void setForegroundColor (Color rgb);
    public void setLineDash (int [] dash);
    public void setLineStyle (int style);
    public void setLineWidth (int width);
    public void setXORMode (boolean b);
    public void translate (int dx, int dy);
public class MapModeGraphics extends ScaledGraphics {
    public MapModeGraphics (Graphics g) {
public class MapModeGraphics extends ScaledGraphics {
    public MapModeGraphics (Graphics g) {
public class MapModeGraphics extends ScaledGraphics {
    public MapModeGraphics (Graphics g, IMapMode mm) {
    public void scale (double amount);
public class MapModeGraphics extends ScaledGraphics {
public class MapModeGraphics extends ScaledGraphics {
public class MapModeGraphics extends ScaledGraphics {
public class MapModeGraphics extends ScaledGraphics {
class MapModelConfigurationPage extends ModelConfigurationPage {
    @Override
class MapModelConfigurationPage extends ModelConfigurationPage {
class MapModelConfigurationPage extends ModelConfigurationPage {
    protected String getModelFileExtension ();
class MapModelConfigurationPage extends ModelConfigurationPage {
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
    protected Constraint domainSpecialization = null;
    protected EClass domainMetaElement = null;
    protected EList < CanvasMapping > relatedDiagrams = null;
    protected EList < LabelMapping > labelMappings = null;
    protected ElementInitializer domainInitializer = null;
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
    protected Constraint domainSpecialization;
    protected EClass domainMetaElement;
    protected EList < CanvasMapping > relatedDiagrams;
    protected EList < LabelMapping > labelMappings;
    protected ElementInitializer domainInitializer;
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
    protected EList labelMappings = null;
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
    protected EReference containmentFeature = null;
    public EReference basicGetContainmentFeature ();
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
    protected EList relatedDiagrams = null;
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
    protected EClass eStaticClass (); protected EList labelMappings = null;
    protected EList relatedDiagrams = null;
    public EList getLabelMappings ();
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class MappingEntryImpl extends EObjectImpl implements MappingEntry {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < CanvasMapping > relatedDiagrams = null;
    protected EList < LabelMapping > labelMappings = null;
    public EList < CanvasMapping > getRelatedDiagrams ();
public class MappingEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class MappingEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class MappingEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MappingEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MappingEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MappingEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MappingImpl extends EObjectImpl implements Mapping {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class MappingImpl extends EObjectImpl implements Mapping {
    protected AuditContainer audits = null;
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class MappingImpl extends EObjectImpl implements Mapping {
    protected EList toolGroups = null;
public class MappingImpl extends EObjectImpl implements Mapping {
    protected EList appearanceStyles = null;
public class MappingImpl extends EObjectImpl implements Mapping {
public class MappingImpl extends EObjectImpl implements Mapping {
    protected MetricContainer metrics = null;
    public void setMetrics (MetricContainer newMetrics);
public class MappingImpl extends EObjectImpl implements Mapping {
    protected EClass eStaticClass (); protected EList appearanceStyles = null;
    protected EList links = null;
    protected EList nodes = null;
    public EList getAppearanceStyles ();
    public EList getLinks ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class MappingImpl extends EObjectImpl implements Mapping {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < LinkMapping > links = null;
    protected EList < StyleSelector > appearanceStyles = null;
    protected EList < TopNodeReference > nodes = null;
    public EList < LinkMapping > getLinks ();
    public EList < StyleSelector > getAppearanceStyles ();
public class MappingImpl extends EObjectImpl implements Mapping {
    protected AuditContainer audits = null;
    protected CanvasMapping diagram = null;
    protected EList < LinkMapping > links = null;
    protected EList < StyleSelector > appearanceStyles = null;
    protected EList < TopNodeReference > nodes = null;
    protected MetricContainer metrics = null;
public class MappingImpl extends EObjectImpl implements Mapping {
    protected AuditContainer audits;
    protected CanvasMapping diagram;
    protected EList < LinkMapping > links;
    protected EList < StyleSelector > appearanceStyles;
    protected EList < TopNodeReference > nodes;
    protected MetricContainer metrics;
public class MappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class MappingItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class MapRefModelPages {
public class MapRefModelPages {
    public void allowNewToolingModel ();
public class MapRefModelPages {
    final protected boolean withSelectors;
    public MapRefModelPages (boolean withSelectors) {
public class MapRefModelPages {
    public MapRefModelPages (boolean withSelectors, ResourceSet resourceSet) {
public class MapRefModelPages {
public class MapRefModelPages {
    protected EObject getSelectedElement (ExtensibleModelSelectionPage page, String selectorId);
    public ElementSelectorExtension getCanvasExt ();
    public ElementSelectorExtension getDomainElementExt ();
    public ElementSelectorExtension getDomainModelExt ();
public class MapRefModelPages {
    protected ExtensibleModelSelectionPage domainModelSelectionPage;
    protected ExtensibleModelSelectionPage graphModelSelectionPage;
    protected ExtensibleModelSelectionPage toolModelSelectionPage;
public class MapRefModelPages {
    public ExtensibleModelSelectionPage getDomainModelSelectionPage ();
    public ExtensibleModelSelectionPage getGraphModelSelectionPage ();
public class MarginBorderImpl extends EObjectImpl implements MarginBorder {
    protected Insets insets = null;
public class MarginBorderImpl extends EObjectImpl implements MarginBorder {
    protected Insets insets;
public class MarginBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class MarginBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class MarginBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MarginBorderItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
abstract public class MatchingObjectsOperation implements IMatchingObjectsOperation {
public class MatchingObjectsOperation implements IMatchingObjectsOperation {
    public Object execute (IProvider provider);
abstract public class MatchingTraceImpl extends AbstractTraceImpl implements MatchingTrace {
    @Override
    public NotificationChain basicSetQuery (Query newQuery, NotificationChain msgs);
abstract public class MatchingTraceImpl extends AbstractTraceImpl implements MatchingTrace {
public class MenuActionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class MenuActionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class MenuActionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MenuActionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MenuItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MenuItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class Messages extends NLS {
public class Messages extends NLS {
    public static String PolylinePoint7CreationTool_desc;
    public static String PolylinePoint7CreationTool_title;
public class Messages extends NLS {
public class Messages extends NLS {
    public static String NavigatorGroupName_Polygon_3023_incominglinks;
    public static String NavigatorGroupName_Polygon_3024_incominglinks;
    public static String NavigatorGroupName_Polygon_3025_incominglinks;
    public static String Polygon8CreationTool_desc;
    public static String Polygon8CreationTool_title;
public class Messages extends NLS {
public class Messages extends NLS {
    public static String DiagramLabelVisualFacetsEditPart_title;
    public static String Label7CreationTool_desc;
    public static String Label7CreationTool_title;
    public static String LabelFigure9CreationTool_desc;
    public static String LabelFigure9CreationTool_title;
    public static String NavigatorGroupName_DiagramLabelAccessor_4004_source;
    public static String NavigatorGroupName_DiagramLabel_2009_outgoinglinks;
    public static String NavigatorGroupName_Label_3026_incominglinks;
    public static String NavigatorGroupName_Label_3027_incominglinks;
    public static String NavigatorGroupName_Label_3028_incominglinks;
public class Messages extends NLS {
    public static String DocumentProvider_handleElementContentChanged;
    public static String DocumentProvider_isModifiable;
public class Messages extends NLS {
    public static String GMFGraphDiagramEditorUtil_CreateDiagramCommandLabel;
    public static String GMFGraphDiagramEditorUtil_CreateDiagramProgressTask;
    public static String GMFGraphDiagramEditorUtil_OpenModelResourceErrorDialogMessage;
    public static String GMFGraphDiagramEditorUtil_OpenModelResourceErrorDialogTitle;
    public static String GMFGraphDocumentProvider_DiagramLoadingError;
    public static String GMFGraphDocumentProvider_IncorrectInputError;
    public static String GMFGraphDocumentProvider_NoDiagramInResourceError;
    public static String GMFGraphDocumentProvider_SaveDiagramTask;
    public static String GMFGraphDocumentProvider_SaveNextResourceTask;
    public static String GMFGraphDocumentProvider_UnableToLoadResourceError;
    public static String GMFGraphDocumentProvider_UnsynchronizedFileSaveError;
    public static String GMFGraphDocumentProvider_handleElementContentChanged;
    public static String GMFGraphDocumentProvider_isModifiable;
    public static String GMFGraphInitDiagramFileAction_InitDiagramFileResourceErrorDialogMessage;
    public static String GMFGraphInitDiagramFileAction_InitDiagramFileResourceErrorDialogTitle;
    public static String GMFGraphInitDiagramFileAction_InitDiagramFileWizardTitle;
    public static String GMFGraphInitDiagramFileAction_OpenModelFileDialogTitle;
    public static String GMFGraphNewDiagramFileWizard_CreationPageDescription;
    public static String GMFGraphNewDiagramFileWizard_CreationPageName;
    public static String GMFGraphNewDiagramFileWizard_CreationPageTitle;
    public static String GMFGraphNewDiagramFileWizard_IncorrectRootError;
    public static String GMFGraphNewDiagramFileWizard_InitDiagramCommand;
    public static String GMFGraphNewDiagramFileWizard_RootSelectionPageDescription;
    public static String GMFGraphNewDiagramFileWizard_RootSelectionPageInvalidSelectionMessage;
    public static String GMFGraphNewDiagramFileWizard_RootSelectionPageName;
    public static String GMFGraphNewDiagramFileWizard_RootSelectionPageNoSelectionMessage;
    public static String GMFGraphNewDiagramFileWizard_RootSelectionPageSelectionTitle;
    public static String GMFGraphNewDiagramFileWizard_RootSelectionPageTitle;
public class Messages extends NLS {
    public static String GMFGraphDocumentProvider_UnableToLoadResourceError;
    public static String NavigatorGroupName_Compartment_2001_outgoinglinks;
    public static String NavigatorGroupName_Connection_2003_outgoinglinks;
    public static String NavigatorGroupName_DiagramElementFigure_4001_source;
    public static String NavigatorGroupName_DiagramElementFigure_4001_target;
    public static String NavigatorGroupName_Ellipse_3003_incominglinks;
    public static String NavigatorGroupName_Ellipse_3006_incominglinks;
    public static String NavigatorGroupName_Node_2002_outgoinglinks;
    public static String NavigatorGroupName_Polyline_3005_incominglinks;
    public static String NavigatorGroupName_Polyline_3008_incominglinks;
    public static String NavigatorGroupName_Rectangle_3001_incominglinks;
    public static String NavigatorGroupName_Rectangle_3002_incominglinks;
    public static String NavigatorGroupName_RoundedRectangle_3004_incominglinks;
    public static String NavigatorGroupName_RoundedRectangle_3007_incominglinks;
public class Messages extends NLS {
    public static String ChildAccessLink7CreationTool_desc;
    public static String ChildAccessLink7CreationTool_title;
    public static String FigureDescriptor6CreationTool_desc;
    public static String FigureDescriptor6CreationTool_title;
    public static String NavigatorGroupName_ChildAccess_4002_source;
    public static String NavigatorGroupName_ChildAccess_4002_target;
    public static String NavigatorGroupName_CompartmentAccessor_4003_source;
    public static String NavigatorGroupName_Compartment_2005_outgoinglinks;
    public static String NavigatorGroupName_Connection_2007_outgoinglinks;
    public static String NavigatorGroupName_DiagramElementFigure_4005_source;
    public static String NavigatorGroupName_DiagramElementFigure_4005_target;
    public static String NavigatorGroupName_Ellipse_3012_incominglinks;
    public static String NavigatorGroupName_Ellipse_3015_incominglinks;
    public static String NavigatorGroupName_Ellipse_3019_incominglinks;
    public static String NavigatorGroupName_FigureDescriptor_3009_incominglinks;
    public static String NavigatorGroupName_FigureDescriptor_3009_outgoinglinks;
    public static String NavigatorGroupName_Node_2006_outgoinglinks;
    public static String NavigatorGroupName_Polyline_3014_incominglinks;
    public static String NavigatorGroupName_Polyline_3017_incominglinks;
    public static String NavigatorGroupName_Polyline_3021_incominglinks;
    public static String NavigatorGroupName_Rectangle_3010_incominglinks;
    public static String NavigatorGroupName_Rectangle_3011_incominglinks;
    public static String NavigatorGroupName_Rectangle_3018_incominglinks;
    public static String NavigatorGroupName_RoundedRectangle_3013_incominglinks;
    public static String NavigatorGroupName_RoundedRectangle_3016_incominglinks;
    public static String NavigatorGroupName_RoundedRectangle_3020_incominglinks;
    public static String NestedFigureLink6CreationTool_desc;
    public static String NestedFigureLink6CreationTool_title;
public class Messages extends NLS {
public class Messages extends NLS {
    public static String GMFGraphDocumentProvider_SaveAsOperation;
public class Messages extends NLS {
public class Messages extends NLS {
    public static String AbstractParser_UnexpectedValueTypeMessage;
    public static String AbstractParser_UnknownLiteralMessage;
    public static String AbstractParser_WrongStringConversionMessage;
    public static String GMFGraphCreationWizardCreationError;
    public static String GMFGraphCreationWizardOpenEditorError;
    public static String GMFGraphCreationWizardPageExtensionError;
    public static String GMFGraphCreationWizardTitle;
    public static String GMFGraphCreationWizard_DiagramModelFilePageDescription;
    public static String GMFGraphCreationWizard_DiagramModelFilePageTitle;
    public static String GMFGraphCreationWizard_DomainModelFilePageDescription;
    public static String GMFGraphCreationWizard_DomainModelFilePageTitle;
    public static String GMFGraphDiagramEditor_SaveAsErrorMessage;
    public static String GMFGraphDiagramEditor_SaveAsErrorTitle;
    public static String GMFGraphDiagramEditor_SaveErrorMessage;
    public static String GMFGraphDiagramEditor_SaveErrorTitle;
    public static String GMFGraphDiagramEditor_SavingDeletedFile;
    public static String GMFGraphElementChooserDialog_SelectModelElementTitle;
    public static String GMFGraphModelingAssistantProviderMessage;
    public static String GMFGraphModelingAssistantProviderTitle;
    public static String MessageFormatParser_InvalidInputError;
    public static String ModelElementSelectionPageMessage;
    public static String NavigatorActionProvider_OpenDiagramActionName;
    public static String ValidateActionMessage;
public class Messages extends NLS {
    public static String ChildAccessLink7CreationTool_desc;
    public static String ChildAccessLink7CreationTool_title;
    public static String ChildNode2CreationTool_desc;
    public static String ChildNode2CreationTool_title;
    public static String Compartment3CreationTool_desc;
    public static String Compartment3CreationTool_title;
    public static String Connection4CreationTool_desc;
    public static String Connection4CreationTool_title;
    public static String FigureLink5CreationTool_desc;
    public static String FigureLink5CreationTool_title;
    public static String NestedFigureLink6CreationTool_desc;
    public static String NestedFigureLink6CreationTool_title;
public class Messages extends NLS {
    public static String ChildAccessLink6CreationTool_desc;
    public static String ChildAccessLink6CreationTool_title;
    public static String Compartment2CreationTool_desc;
    public static String Compartment2CreationTool_title;
    public static String Connection3CreationTool_desc;
    public static String Connection3CreationTool_title;
    public static String FigureLink4CreationTool_desc;
    public static String FigureLink4CreationTool_title;
    public static String NestedFigureLink5CreationTool_desc;
    public static String NestedFigureLink5CreationTool_title;
public class Messages extends NLS {
    public static String Ellipse3CreationTool_desc;
    public static String Ellipse3CreationTool_title;
    public static String FigureDescriptor6CreationTool_desc;
    public static String FigureDescriptor6CreationTool_title;
    public static String Polyline5CreationTool_desc;
    public static String Polyline5CreationTool_title;
    public static String Rectangle2CreationTool_desc;
    public static String Rectangle2CreationTool_title;
    public static String RoundedRectangle4CreationTool_desc;
    public static String RoundedRectangle4CreationTool_title;
public class Messages extends NLS {
    public static String Ellipse4CreationTool_desc;
    public static String Ellipse4CreationTool_title;
    public static String FigureDescriptor2CreationTool_desc;
    public static String FigureDescriptor2CreationTool_title;
    public static String NavigatorGroupName_NodeContentPane_4006_source;
    public static String Polyline6CreationTool_desc;
    public static String Polyline6CreationTool_title;
    public static String Rectangle3CreationTool_desc;
    public static String Rectangle3CreationTool_title;
    public static String RoundedRectangle5CreationTool_desc;
    public static String RoundedRectangle5CreationTool_title;
public class MetamodelDescriptor {
public class MetamodelDescriptor {
    public String getNsURI ();
public class MetamodelType extends ElementType implements IMetamodelType {
public class MetamodelType extends ElementType implements IMetamodelType {
    public String toString ();
public class MetamodelTypeDescriptor extends ElementTypeDescriptor implements IMetamodelTypeDescriptor {
public class MetamodelTypeDescriptor extends ElementTypeDescriptor implements IMetamodelTypeDescriptor {
    public String toString ();
public class MetamodelTypeDescriptor extends ElementTypeDescriptor implements IMetamodelTypeDescriptor {
public class MetamodelTypeDescriptor extends ElementTypeDescriptor implements IMetamodelTypeDescriptor {
    public String getEClassName ();
    public String getName ();
public class MetamodelTypeImpl extends ElementTypeImpl implements MetamodelType {
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class MetamodelTypeImpl extends ElementTypeImpl implements MetamodelType {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class MetamodelTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class MetamodelTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class MetamodelTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MetamodelTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MetamodelTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MetamodelTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MetricContainerImpl extends EObjectImpl implements MetricContainer {
    protected EList < MetricRule > metrics = null;
public class MetricContainerImpl extends EObjectImpl implements MetricContainer {
    protected EList < MetricRule > metrics;
public class MetricContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MetricContainerItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class MetricRuleImpl extends EObjectImpl implements MetricRule {
public class MetricRuleImpl extends EObjectImpl implements MetricRule {
public class MetricRuleImpl extends EObjectImpl implements MetricRule {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class MetricRuleImpl extends EObjectImpl implements MetricRule {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class MetricRuleImpl extends EObjectImpl implements MetricRule {
    protected Measurable target = null;
    protected ValueExpression rule = null;
public class MetricRuleImpl extends EObjectImpl implements MetricRule {
    protected Measurable target;
    protected ValueExpression rule;
public class MetricRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class MetricRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class MetricRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MetricRuleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class MigrateModelAction implements IObjectActionDelegate {
    public static class GMFGen extends MigrateModelAction {
        @Override
        protected void initModelMigration ();
public class MigrateModelAction implements IObjectActionDelegate {
class MigrationDelegate extends MigrationDelegateImpl {
    @Override
    public boolean setValue (EObject object, EStructuralFeature feature, Object value, int position);
    @Override
    public void preResolve ();
class MigrationDelegate extends MigrationDelegateImpl {
    @SuppressWarnings("unchecked")
    @Override
    public boolean setValue (EObject object, EStructuralFeature feature, Object value, int position);
    @SuppressWarnings("unchecked")
    @Override
    public void preResolve ();
    public String getURI (String prefix, String uri);
class MigrationDelegate extends MigrationDelegateImpl {
    public String getURI (String prefix, String uri);
class MigrationDelegate extends MigrationDelegateImpl {
    @Override
class MigrationDelegate extends MigrationHelperDelegateImpl {
class MigrationDelegate extends MigrationHelperDelegateImpl {
    @Override
    protected Collection < String > getBackwardSupportedURIs ();
    protected String getMetamodelNsURI ();
class MigrationDelegate extends MigrationHelperDelegateImpl {
    @Override
    @Override
    public void processObject (EObject result);
    protected Collection < String > getBackwardSupportedURIs ();
    protected String getMetamodelNsURI ();
class MigrationDelegate extends MigrationDelegateImpl {
    @Override
class MigrationDelegate extends MigrationDelegateImpl {
    @Override
    public void postProcess ();
class MigrationDelegate extends MigrationDelegateImpl {
    @Override
    public void preResolve ();
package org.eclipse.gmf.internal.map.util;
package org.eclipse.gmf.internal.codegen.util;
public class MigrationDelegateImpl implements MigrationDelegate {
    protected XMLResource getResource ();
    protected static EAttribute createNewAttribute (String name, EClassifier eType, boolean isMany);
    public void registerRenamedParentAttribute (EClass eClass, String oldName, EStructuralFeature newStructuralFeature);
    public void setResource (XMLResource resource);
public class MigrationDelegateImpl implements MigrationDelegate {
    protected Resource getResource ();
    protected static EAttribute createNewAttribute (String name, EDataType eType, boolean isMany);
    public void postLoad ();
    public void registerTracedFeatureForHierarchy (EClass eClass, Map < String, EStructuralFeature > tracedFeature);
    public void registerTracedFeatureForHierarchy (EClass eClass, String xmlName, EStructuralFeature tracerFeature);
    public void setResource (Resource resource);
public class MigrationDelegateImpl implements MigrationDelegate {
public class MigrationDelegateImpl implements MigrationDelegate {
    public void registerTracedAttributeForHierarchy (EClass eClass, Map < String, EStructuralFeature > tracedFeature);
    public void registerTracedAttributeForHierarchy (EClass eClass, String xmlName, EStructuralFeature tracerFeature);
    public void registerTracedElementForHierarchy (EClass eClass, Map < String, EStructuralFeature > tracedFeature);
public class MigrationDelegateImpl implements MigrationDelegate {
    public void registerTracedElementForHierarchy (EClass eClass, Map < String, EStructuralFeature > tracedFeature);
public class MigrationDelegateImpl implements MigrationDelegate {
public class MigrationDelegateImpl implements MigrationDelegate {
public class MigrationDelegateImpl implements MigrationDelegate {
public class MigrationDelegateImpl implements MigrationDelegate {
    protected Resource getResource ();
    protected static EAttribute createNewAttribute (String name, EDataType eType, boolean isMany);
    public EStructuralFeature getTracedParentAttributeFor (EClass clazz, String name);
    public void registerTracedAttributeForHierarchy (EClass eClass, String xmlName, EStructuralFeature tracerFeature);
    public void registerTracedFeatureForHierarchy (EClass eClass, String xmlName, EStructuralFeature tracerFeature);
    public void setResource (Resource resource);
public class MigrationDelegateImpl implements MigrationDelegate {
public class MigrationHelper extends XMIHelperImpl {
    @Override
    @Override
    public void postLoad ();
public class MigrationHelper extends XMIHelperImpl {
public class MigrationHelper extends XMIHelperImpl {
public class MigrationHelper extends XMIHelperImpl {
    protected EStructuralFeature addNarrowedFeature (EStructuralFeature originalFeature);
public class MigrationHelper extends XMIHelperImpl {
public class MigrationHelper extends XMIHelperImpl {
    @Override
public class MigrationHelper extends XMIHelperImpl {
    @Override
    protected EStructuralFeature addNarrowedFeature (EStructuralFeature originalFeature);
    protected EStructuralFeature getOriginalFeature (EStructuralFeature feature);
    public MigrationHelper (XMLResource resource, MigrationHelperDelegate delegate) {
public class MigrationHelper extends XMIHelperImpl {
    public MigrationHelper (XMLResource resource, MigrationDelegate delegate) {
public class MigrationHelper extends XMIHelperImpl {
public class MigrationHelper extends XMIHelperImpl {
    @Override
    public void setXMLMap (XMLResource.XMLMap map);
public class MigrationHelper extends XMIHelperImpl {
    @Override
    public void setXMLMap (XMLResource.XMLMap map);
public class MigrationHelper extends XMIHelperImpl {
    @Override
    public void postLoad ();
public class MigrationHelper extends XMIHelperImpl {
public class MigrationHelper extends XMIHelperImpl {
    @Override
public class MigrationResource extends ToolResource {
    private static class BCKWDCompatibleHandler extends SAXXMIHandler {
        @Override
        protected EPackage getPackageForURI (String uriString);
        @Override
        protected void handleUnknownFeature (String prefix, String name, boolean isElement, EObject peekObject, String value); protected boolean fixmePotentiallyCompatibilityIssues;
    protected XMLLoad createXMLLoad (); protected boolean migrationApplied;
    protected boolean oldVersionDetected;
    final protected void doUnload ();
    protected void handleMigrationPatchApplied ();
    protected void handleOldVersionDetected ();
    protected void handlePostLoad (Exception exception);
    final public void doLoad (InputStream inputStream, Map < ?, ? > options) throws IOException; public static class MigrationHandler extends BCKWDCompatibleHandler {
        @Override
        protected void createObject (EObject peekObject, EStructuralFeature feature);
        @Override
        protected void handleFeature (String prefix, String name);
        @Override
        protected void setAttribValue (EObject object, String name, String value);
        public EObject createObjectFromTypeNameHook (EObject peekObject, String typeQName, EStructuralFeature feature);
        public EObject peekEObject ();
        public String getXSIType ();
        public void handleFeatureHook (String prefix, String name);
    static Resource createCheckAndMigrateOnLoadResource (URI uri);
    static Resource createCheckedResource (URI uri);
abstract public class MigrationResource extends ToolResource {
    @Override
    protected XMLHelper createXMLHelper ();
    @Override
    protected XMLLoad createXMLLoad ();
    @Override
    final public void doLoad (InputStream inputStream, Map < ?, ? > options) throws IOException;
    protected MigrationResource (URI uri) {
    abstract protected Collection < String > getBackwardSupportedURIs ();
    abstract protected MigrationHelperDelegate createDelegate ();
    abstract protected String getMetamodelNsURI ();
    protected void handlePostLoadException (Exception e);
    protected void handlePostLoadSuccess (); public static class Diagnostic implements Resource.Diagnostic {
        public String getLocation ();
        public String getMessage ();
        public int getColumn ();
        public int getLine ();
abstract public class MigrationResource extends ToolResource {
    @Override
abstract public class MigrationResource extends ToolResource {
abstract public class MigrationResource extends ToolResource {
abstract public class MigrationResource extends ToolResource {
abstract public class MigrationResource extends ToolResource {
abstract public class MigrationResource extends ToolResource {
class MigrationResource extends ToolResource {
    private static class MigrationHandler extends BCKWDCompatibleHandler {
        protected void createObject (EObject peekObject, EStructuralFeature feature);
class MigrationResource extends ToolResource {
    private static class MigrationHandler extends BCKWDCompatibleHandler {
        @Override
        protected void createObject (EObject peekObject, EStructuralFeature feature);
        @Override
        protected void setAttribValue (EObject object, String name, String value);
[MigrationResource-4.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[MigrationResource-4.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'MigrationResource-5.java' as a [program], at or near:
[MigrationResource-5.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[MigrationResource-5.java, Txl/api_clone_java.Txl] : TXL0192E line 102 of MigrationResource-5.java - Syntax error at or near:
[MigrationResource-6.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[MigrationResource-6.java, Txl/api_clone_java.Txl] : TXL0192E line 110 of MigrationResource-6.java - Syntax error at or near:
[MigrationResource-7.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[MigrationResource-7.java, Txl/api_clone_java.Txl] : TXL0192E line 110 of MigrationResource-7.java - Syntax error at or near:
[MigrationResource-8.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[MigrationResource-8.java, Txl/api_clone_java.Txl] : TXL0192E line 110 of MigrationResource-8.java - Syntax error at or near:
public class ModelElementTypeMapper implements ITypeMapper {
public class ModelElementTypeMapper extends AbstractTypeMapper {
public class ModelFigure extends RectangleFigure {
public class ModelFigure extends RectangleFigure implements ActionContainer {
public class ModelFigure extends RectangleFigure implements ActionContainer {
public class ModelFigure extends RectangleFigure implements ActionContainer {
public class ModelFigure extends RectangleFigure implements ActionContainer {
public class ModelFigure extends RectangleFigure implements ActionContainer {
abstract public class ModelingAssistantProvider extends AbstractProvider implements IModelingAssistantProvider {
abstract public class ModelingAssistantProvider extends AbstractProvider implements IModelingAssistantProvider {
abstract public class ModelingAssistantProvider extends AbstractProvider implements IModelingAssistantProvider {
abstract public class ModelingAssistantProvider extends AbstractProvider implements IModelingAssistantProvider {
abstract public class ModelingAssistantProvider extends AbstractProvider implements IModelingAssistantProvider {
abstract public class ModelingAssistantProvider extends AbstractProvider implements IModelingAssistantProvider {
public class ModelingAssistantService extends Service implements IModelingAssistantProvider {
public class ModelingAssistantService extends Service implements IModelingAssistantProvider {
public class ModelingAssistantService extends Service implements IModelingAssistantProvider {
public class ModelingAssistantService extends Service implements IModelingAssistantProvider {
public class ModelLoadHelper {
public class ModelLoadHelper {
    public boolean isOK ();
    static Resource.Diagnostic createDiagnostic (Resource resource, Exception exception);
public class ModelSelectionPage extends WizardPage {
    protected Resource resource;
    protected URI uri;
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
    public ModelSelectionPage (String pageId, ResourceLocationProvider rloc) {
public class ModelSelectionPage extends WizardPage {
    public ModelSelectionPage (String pageId, ResourceLocationProvider rloc, ResourceSet resourceSet) {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
    public void validatePage ();
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
    public ModelSelectionPage (String pageId, ResourceLocationProvider rloc, ResourceSet resourceSet, String modelFileExtension) {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
public class ModelSelectionPage extends WizardPage {
    public ModelSelectionPage (String pageId) {
    public void createControl (Composite parent);
public class ModelSelectionPage extends WizardPage {
    final protected ResourceLocationProvider rloc;
    public ModelSelectionPage (String pageId, ResourceLocationProvider rloc) {
    final public void createControl (Composite parent);
public class ModelSelectionPage extends WizardPage {
    protected void setURI (String uriText);
public class ModelSelectionPage extends WizardPage {
    public void setURI (String uriText);
    public void setURI (URI uri);
    public void updateURI ();
public class ModelSelectionPage extends WizardPage {
    protected void createUriRow (Composite parent) {
        Composite plate = new Composite (parent, SWT.NONE);
        {
            GridLayout layout = new GridLayout ();
            layout.numColumns = 2;
            plate.setLayout (layout);
            GridData data = new GridData ();
            data.horizontalAlignment = GridData.FILL;
            data.grabExcessHorizontalSpace = true;
            plate.setLayoutData (data);
        {
            GridData data = new GridData ();
            data.horizontalAlignment = GridData.FILL;
            data.grabExcessHorizontalSpace = true;
            uriFld.setLayoutData (data);
        loadBtn.setText ("Load");
        {
            GridData data = new GridData ();
            loadBtn.setLayoutData (data);
        uriFld.addModifyListener (new ModifyListener () {
        );
        loadBtn.addSelectionListener (new SelectionListener () {
        );
public class ModelSelectionPage extends WizardPage {
    protected void createUriRow (Composite parent) {
        Composite plate = new Composite (parent, SWT.NONE);
        {
            GridLayout layout = new GridLayout ();
            layout.numColumns = 2;
            plate.setLayout (layout);
            GridData data = new GridData ();
            data.horizontalAlignment = GridData.FILL;
            data.grabExcessHorizontalSpace = true;
            plate.setLayoutData (data);
        {
            GridData data = new GridData ();
            data.horizontalAlignment = GridData.FILL;
            data.grabExcessHorizontalSpace = true;
            uriFld.setLayoutData (data);
        loadBtn.setText (Messages.ModelSelectionPageLoad);
        {
            GridData data = new GridData ();
            loadBtn.setLayoutData (data);
        uriFld.addModifyListener (new ModifyListener () {
        );
        loadBtn.addSelectionListener (new SelectionListener () {
        );
public class MoveGuideCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public MoveGuideCommand (Guide guide, int positionDelta) {
public class MoveGuideCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public MoveGuideCommand (TransactionalEditingDomain editingDomain, Guide guide, int positionDelta) {
public class MoveRequest extends AbstractEditCommandRequest {
public class MoveRequest extends AbstractEditCommandRequest {
    public MoveRequest (EObject targetContainer, List elementsToMove) {
    public MoveRequest (EObject targetContainer, Map elementsToMove) {
public class MoveRequest extends AbstractEditCommandRequest {
    public void setTargetFeature (EReference targetFeature);
public class MoveRequest extends AbstractEditCommandRequest {
public class MoveRequest extends AbstractEditCommandRequest {
public class MoveRequest extends AbstractEditCommandRequest {
    public MoveRequest (TransactionalEditingDomain editingDomain, EObject targetContainer, EObject elementToMove) {
    public MoveRequest (TransactionalEditingDomain editingDomain, EObject targetContainer, EReference targetFeature, EObject elementToMove) {
    public MoveRequest (TransactionalEditingDomain editingDomain, EObject targetContainer, List elementsToMove) {
    public MoveRequest (TransactionalEditingDomain editingDomain, EObject targetContainer, Map elementsToMove) {
public class MSLCommandsPlugin extends XToolsPlugin {
public class MSLCommandsPlugin extends XToolsPlugin {
public class MSLCommandsPlugin extends XToolsPlugin {
public class MSLCommandsPlugin extends Plugin {
public class MslUIPlugin extends XToolsUIPlugin {
public class MslUIPlugin extends XToolsUIPlugin {
public class MslUIPlugin extends XToolsUIPlugin {
public class MslUIPlugin extends XToolsUIPlugin {
public class MslUIPlugin extends XToolsUIPlugin {
public class MslUIPlugin extends AbstractUIPlugin {
public class MslUIPlugin extends AbstractUIPlugin {
public class MslUIPlugin extends AbstractUIPlugin {
    final public static String URI_BIDI_SEPARATORS = ":/?#@.!";
abstract public class MultiButtonCellEditor extends CellEditor {
abstract public class MultiButtonCellEditor extends CellEditor {
interface MultiDiagramLinkStyle extends Style {
interface MultiDiagramLinkStyle extends NotationObject, Style {
interface MultiDiagramLinkStyle extends NotationObject, Style {
interface MultiDiagramLinkStyle extends Style {
public class MultiDiagramLinkStyleImpl extends FlatEObjectImpl implements MultiDiagramLinkStyle {
public class MultiDiagramLinkStyleImpl extends NotationObjectImpl implements MultiDiagramLinkStyle {
public class MultiDiagramLinkStyleImpl extends NotationObjectImpl implements MultiDiagramLinkStyle {
public class MultiDiagramLinkStyleImpl extends NotationEObjectImpl implements MultiDiagramLinkStyle {
public class MultiDiagramLinkStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MultiDiagramLinkStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MultiDiagramLinkStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class MultiDiagramLinkStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NaiveIdentifierDispenser implements VisualIdentifierDispenser {
public class NaiveIdentifierDispenser implements VisualIdentifierDispenser {
interface NamedStyle extends Style {
interface NamedStyle extends NotationObject, Style {
interface NamedStyle extends NotationObject, Style {
interface NamedStyle extends Style {
public class NamedStyleImpl extends FlatEObjectImpl implements NamedStyle {
public class NamedStyleImpl extends NotationObjectImpl implements NamedStyle {
public class NamedStyleImpl extends NotationObjectImpl implements NamedStyle {
public class NamedStyleImpl extends NotationEObjectImpl implements NamedStyle {
public class NamedStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NamedStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NamedStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NamedStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NameFilterStrategy implements Strategy {
    public void filter (Collection < EObject > soFar, Hierarchy hierarchy);
public class NameFilterStrategy implements Strategy < ENamedElement > {
    public void filter (Collection < ENamedElement > soFar, Hierarchy hierarchy);
public class NestableListItemEditPart extends ListItemEditPart implements IResizableCompartmentEditPart {
    public NestableListItemEditPart (View view) {
public class NestableListItemEditPart extends ListItemEditPart implements IResizableCompartmentEditPart {
    public NestableListItemEditPart (EObject view) {
public class NestableListItemEditPart extends ListItemEditPart implements IResizableCompartmentEditPart {
public class NestableListItemEditPart extends ListItemEditPart implements IResizableCompartmentEditPart {
public class NestableListItemEditPart extends ListItemEditPart implements IResizableCompartmentEditPart {
public class NestableListItemEditPart extends ListItemEditPart implements IResizableCompartmentEditPart {
public class NestedResizableCompartmentFigure extends ResizableCompartmentFigure {
    public NestedResizableCompartmentFigure () {
public class NestedResizableCompartmentFigure extends ResizableCompartmentFigure {
    public NestedResizableCompartmentFigure (int minClientSize) {
public class NestedResizableCompartmentFigure extends ResizableCompartmentFigure {
public class NestedResizableCompartmentFigure extends ResizableCompartmentFigure {
    public NestedResizableCompartmentFigure (IMapMode mm) {
public class NestedResizableCompartmentFigure extends ResizableCompartmentFigure {
    public NestedResizableCompartmentFigure (int minClientSize) {
public class NestedResizableCompartmentFigure extends ResizableCompartmentFigure {
class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
    public boolean performFinish ();
    public void addPages ();
    public void setShowDashboard (boolean showDashboard);
public class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
    public NewGMFProjectWizard () {
public class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
    public void init (IWorkbench workbench, IStructuredSelection selection);
public class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
public class NewGMFProjectWizard extends EmptyProjectWizard {
interface Node extends DiagramElement {
interface Node extends AbstractNode {
public class NodeEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
        public org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class NodeEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class NodeEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2002;
public class NodeEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2006;
public class NodeEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrapLabel getFigureDiagramElementFigure_NameLabel ();
public class NodeEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends RectangleFigure {
        public WrappingLabel getFigureDiagramElementFigure_NameLabel ();
public class NodeEditPart extends ShapeNodeEditPart {
    public static String VISUAL_ID = "1002";
public class NodeEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1002;
public class NodeEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
public class NodeEditPart extends ShapeNodeEditPart {
    public class DiagramElementFigure extends org.eclipse.draw2d.RectangleFigure {
public class NodeEditPart extends ShapeNodeEditPart {
public class NodeEditPart extends ShapeNodeEditPart {
public class NodeEditPart extends ShapeNodeEditPart {
public class NodeEditPart extends ShapeNodeEditPart {
public class NodeEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 1002;
public class NodeEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 2002;
public class NodeEntryImpl extends EObjectImpl implements BasicEMap.Entry {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class NodeEntryImpl extends EObjectImpl implements BasicEMap.Entry {
    public void eSet (int featureID, Object newValue);
public class NodeEntryImpl extends EObjectImpl implements BasicEMap.Entry {
public class NodeEntryImpl extends FlatEObjectImpl implements BasicEMap.Entry {
public class NodeEntryImpl extends FlatEObjectImpl implements BasicEMap.Entry {
    protected Node key = null;
public class NodeEntryImpl extends FlatEObjectImpl implements BasicEMap.Entry {
    protected Node key;
public class NodeEntryImpl extends FlatEObjectImpl implements BasicEMap.Entry {
public class NodeEntryImpl extends NotationObjectImpl implements BasicEMap.Entry {
public class NodeEntryImpl extends NotationObjectImpl implements BasicEMap.Entry {
    protected Alignment value = VALUE_EDEFAULT;
public class NodeEntryImpl extends NotationEObjectImpl implements BasicEMap.Entry {
    final protected static int VALUE_EFLAG = 0x7 << VALUE_EFLAG_OFFSET;
    final protected static int VALUE_EFLAG_DEFAULT = Alignment.VALUES.indexOf (VALUE_EDEFAULT) << VALUE_EFLAG_OFFSET;
    final protected static int VALUE_EFLAG_OFFSET = 8;
public class NodeEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeEntryItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeEntryItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure, IPolygonAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure, IPolygonAnchorableFigure {
    public int getLineStyle ();
    public void setLineStyle (int s);
public class NodeFigure extends Figure implements HandleBounds {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure, IPolygonAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure, IPolygonAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure {
public class NodeFigure extends Figure implements HandleBounds, IAnchorableFigure, IPolygonAnchorableFigure {
public class NodeImpl extends DiagramElementImpl implements Node {
    @Override
public class NodeImpl extends AbstractNodeImpl implements Node {
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected ChildAccess contentPane;
    public ChildAccess basicGetContentPane ();
public class NodeImpl extends AbstractNodeImpl implements Node {
    @SuppressWarnings("unchecked")
    @Override
public class NodeImpl extends AbstractNodeImpl implements Node {
    @Override
public class NodeImpl extends DiagramElementImpl implements Node {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class NodeImpl extends DiagramElementImpl implements Node {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class NodeImpl extends DiagramElementImpl implements Node {
    final protected static Direction RESIZE_CONSTRAINT_EDEFAULT = Direction.NONE_LITERAL;
public class NodeImpl extends DiagramElementImpl implements Node {
    final protected static Direction RESIZE_CONSTRAINT_EDEFAULT = Direction.ALL_LITERAL;
public class NodeImpl extends DiagramElementImpl implements Node {
    final protected static Direction RESIZE_CONSTRAINT_EDEFAULT = Direction.ALL_LITERAL;
public class NodeImpl extends DiagramElementImpl implements Node {
    final protected static Direction RESIZE_CONSTRAINT_EDEFAULT = Direction.NSEW_LITERAL;
public class NodeImpl extends DiagramElementImpl implements Node {
public class NodeImpl extends DiagramElementImpl implements Node {
public class NodeImpl extends DiagramElementImpl implements Node {
public class NodeImpl extends DiagramElementImpl implements Node {
    protected Direction affixedParentSide = AFFIXED_PARENT_SIDE_EDEFAULT;
    final protected static Direction AFFIXED_PARENT_SIDE_EDEFAULT = Direction.NONE_LITERAL;
public class NodeImpl extends DiagramElementImpl implements Node {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class NodeImpl extends DiagramElementImpl implements Node {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class NodeItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeItemProvider extends AbstractNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public String getTextGen (Object object);
public class NodeItemProvider extends AbstractNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NodeItemProvider extends AbstractNodeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
package org.eclipse.gmf.runtime.notation.provider;
public class NodeItemProvider extends ViewItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void addLayoutConstraintPropertyDescriptor (Object object);
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public Object getImage (Object object);
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
package org.eclipse.gmf.gmfgraph.provider;
public class NodeItemProvider extends DiagramElementItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
    public void notifyChanged (Notification notification);
    protected void addAffixedParentSidePropertyDescriptor (Object object);
public class NodeItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class NodeItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class NodeItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class NodeItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class NodeItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class NodeItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
interface NodeMapping extends AbstractNodeMapping, MappingEntry {
interface NodeMapping extends AbstractNodeMapping {
interface NodeMapping extends AbstractNodeMapping {
interface NodeMapping extends AppearanceSteward, MappingEntry, MenuOwner, ToolOwner {
interface NodeMapping extends MappingEntry {
interface NodeMapping extends AbstractNodeMapping, MappingEntry {
public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected AbstractTool tool = null;
    protected ContextMenu contextMenu = null;
    protected EList children = null;
    protected EList compartments = null;
    protected StyleSelector appearanceStyle = null;
    public AbstractTool basicGetTool ();
    public AbstractTool getTool ();
    public ContextMenu basicGetContextMenu ();
    public ContextMenu getContextMenu ();
    public EClass getDomainContext ();
    public EList getChildren ();
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public StyleSelector basicGetAppearanceStyle ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public void setAppearanceStyle (StyleSelector newAppearanceStyle);
    public void setTool (AbstractTool newTool);
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected Node diagramNode = null;
    public Node basicGetDiagramNode ();
abstract public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
abstract public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected Node diagramNode = null;
    public Node basicGetDiagramNode ();
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected EClass eStaticClass (); protected EList children = null;
    protected EList compartments = null;
    public EList getChildren ();
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < ChildReference > children = null;
    protected EList < CompartmentMapping > compartments = null;
    public EList < ChildReference > getChildren ();
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected AbstractTool tool = null;
    protected ContextMenu contextMenu = null;
    protected EList < ChildReference > children = null;
    protected EList < CompartmentMapping > compartments = null;
    protected Node diagramNode = null;
    protected StyleSelector appearanceStyle = null;
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected AbstractTool tool;
    protected ContextMenu contextMenu;
    protected EList < ChildReference > children;
    protected EList < CompartmentMapping > compartments;
    protected Node diagramNode;
    protected StyleSelector appearanceStyle;
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected ElementInitializer domainInitializer = null;
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class NodeMappingImpl extends MappingEntryImpl implements NodeMapping {
    protected Constraint domainSpecialization = null;
    protected EAttribute editFeature = null;
    protected EClass domainMetaElement = null;
    protected EList childMappings = null;
    protected EReference containmentFeature = null;
    protected ElementInitializer domainInitializer = null;
    protected Node diagramNode = null;
    public Constraint getDomainSpecialization ();
    public EAttribute basicGetEditFeature ();
    public EAttribute getEditFeature ();
    public EClass basicGetDomainMetaElement ();
    public EClass getDomainMetaElement ();
    public EList getChildMappings ();
    public EReference basicGetContainmentFeature ();
    public EReference getContainmentFeature ();
    public ElementInitializer getDomainInitializer ();
    public Node basicGetDiagramNode ();
    public Node getDiagramNode ();
    public NotificationChain basicSetDomainInitializer (ElementInitializer newDomainInitializer, NotificationChain msgs);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public void setContainmentFeature (EReference newContainmentFeature);
    public void setDiagramNode (Node newDiagramNode);
    public void setDomainInitializer (ElementInitializer newDomainInitializer);
    public void setDomainMetaElement (EClass newDomainMetaElement);
    public void setDomainSpecialization (Constraint newDomainSpecialization);
    public void setEditFeature (EAttribute newEditFeature);
public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
    protected Node diagramNode = null;
    public Node basicGetDiagramNode ();
    public void setDiagramNode (Node newDiagramNode);
public class NodeMappingItemProvider extends AbstractNodeMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addContainmentFeaturePropertyDescriptor (Object object);
public class NodeMappingItemProvider extends AbstractNodeMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends AbstractNodeMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends AbstractNodeMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends AbstractNodeMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void addAppearanceStylePropertyDescriptor (Object object);
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    public void notifyChangedGen (Notification notification);
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramNodePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_NodeMapping_diagramNode_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_NodeMapping_diagramNode_feature", "_UI_NodeMapping_type"), GMFMapPackage.eINSTANCE.getNodeMapping_DiagramNode (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramNodePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_NodeMapping_diagramNode_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_NodeMapping_diagramNode_feature", "_UI_NodeMapping_type"), GMFMapPackage.eINSTANCE.getNodeMapping_DiagramNode (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramNodePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_NodeMapping_diagramNode_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_NodeMapping_diagramNode_feature", "_UI_NodeMapping_type"), GMFMapPackage.eINSTANCE.getNodeMapping_DiagramNode (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramNodePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_NodeMapping_diagramNode_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_NodeMapping_diagramNode_feature", "_UI_NodeMapping_type"), GMFMapPackage.eINSTANCE.getNodeMapping_DiagramNode (), true, null, getString ("_UI_VisualrepresentationPropertyCategory"), null) {
            protected Collection getComboBoxObjects (Object object);
        );
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public Object getImage (Object object);
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeMappingItemProvider extends MappingEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addDiagramNodePropertyDescriptor (Object object);
public class NodeMappingItemProvider extends AbstractNodeMappingItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NodeNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5002;
public class NodeNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
    final public static int VISUAL_ID = 5006;
public class NodeNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class NodeNameEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class NodeNameViewFactory extends BasicNodeViewFactory {
    protected void decorateView (View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted);
public class NodeNameViewFactory extends BasicNodeViewFactory {
abstract public class NodeReferenceImpl extends EObjectImpl implements NodeReference {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class NodeReferenceImpl extends EObjectImpl implements NodeReference {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
abstract public class NodeReferenceImpl extends EObjectImpl implements NodeReference {
    protected EReference childrenFeature = null;
    protected EReference containmentFeature = null;
abstract public class NodeReferenceImpl extends EObjectImpl implements NodeReference {
    protected EReference childrenFeature;
    protected EReference containmentFeature;
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addChildrenFeaturePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_NodeReference_childrenFeature_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_NodeReference_childrenFeature_feature", "_UI_NodeReference_type"), GMFMapPackage.eINSTANCE.getNodeReference_ChildrenFeature (), true, null, null, null) {
            protected Collection getComboBoxObjects (Object object);
        );
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addChildrenFeaturePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_NodeReference_childrenFeature_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_NodeReference_childrenFeature_feature", "_UI_NodeReference_type"), GMFMapPackage.eINSTANCE.getNodeReference_ChildrenFeature (), true, null, null, null) {
            protected Collection getComboBoxObjects (Object object);
        );
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public void notifyChanged (Notification notification);
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
abstract public class NodeReferenceItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NodeViewFactory extends AbstractShapeViewFactory {
public class NodeViewFactory extends AbstractShapeViewFactory {
public class NodeVisualFacetsEditPart extends ListCompartmentEditPart {
    final public static int VISUAL_ID = 7002;
public class NodeVisualFacetsEditPart extends ListCompartmentEditPart {
    final public static int VISUAL_ID = 7006;
public class NodeVisualFacetsViewFactory extends ListCompartmentViewFactory {
public class NodeVisualFacetsViewFactory extends BasicNodeViewFactory {
public class NonResizableEditPolicyEx extends NonResizableEditPolicy {
public class NonResizableEditPolicyEx extends NonResizableEditPolicy {
public class NonResizableLabelEditPolicy extends NonResizableEditPolicyEx {
    public EditPart getTargetEditPart (Request request);
    public boolean understandsRequest (Request request);
public class NonResizableLabelEditPolicy extends NonResizableEditPolicyEx {
public class NonSemanticEditPolicy extends SemanticEditPolicy {
    public Command getCommand (Request request);
public class NonSemanticEditPolicy extends SemanticEditPolicy {
[NotationAdapterFactory-9.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[NotationAdapterFactory-10.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[NotationAdapterFactory-11.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[NotationAdapterFactory-12.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[NotationAdapterFactory-13.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
[NotationAdapterFactory-14.java, Txl/api_clone_java.Txl] : TXL0101E - (TXL implementation limit) Input too large (total text of unique tokens > 2097152 chars) (a larger size is required for this input)
public class NotationClipboardOperationHelper extends AbstractClipboardSupport {
public class NotationClipboardOperationHelper extends AbstractClipboardSupport {
public class NotationElementTargetImpl extends EObjectImpl implements NotationElementTarget {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class NotationElementTargetImpl extends EObjectImpl implements NotationElementTarget {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class NotationElementTargetImpl extends EObjectImpl implements NotationElementTarget {
    protected EClass element = null;
public class NotationElementTargetImpl extends EObjectImpl implements NotationElementTarget {
    protected EClass element;
public class NotationElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class NotationElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class NotationElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NotationElementTargetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
    public BooleanListValueStyle createBooleanListValueStyle ();
    public DoubleListValueStyle createDoubleListValueStyle ();
    public EObjectListValueStyle createEObjectListValueStyle ();
    public IntListValueStyle createIntListValueStyle ();
    public MultiDiagramLinkStyle createMultiDiagramLinkStyle ();
    public PropertiesSetStyle createPropertiesSetStyle ();
    public StringListValueStyle createStringListValueStyle ();
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
    public TextAlignment createTextAlignmentFromString (EDataType eDataType, String initialValue);
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
    public ArrowStyle createArrowStyle ();
    public LineType createLineTypeFromString (EDataType eDataType, String initialValue);
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
    protected StringPacker stringPacker = new StringPacker ();
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
    protected StringPacker stringPacker = new StringPacker ();
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
public class NotationFactoryImpl extends EFactoryImpl implements NotationFactory {
    public JumpLinkStatus createJumpLinkStatusFromString (EDataType eDataType, String initialValue);
    public Smoothness createSmoothnessFromString (EDataType eDataType, String initialValue);
    public Sorting createSortingFromString (EDataType eDataType, String initialValue);
    public String convertFilteringToString (EDataType eDataType, Object instanceValue);
    public String convertJumpLinkStatusToString (EDataType eDataType, Object instanceValue);
    public String convertJumpLinkTypeToString (EDataType eDataType, Object instanceValue);
    public String convertRoutingToString (EDataType eDataType, Object instanceValue);
    public String convertSortingDirectionToString (EDataType eDataType, Object instanceValue);
public class NotationItemProviderAdapterFactory extends NotationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class NotationItemProviderAdapterFactory extends NotationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected BooleanListValueStyleItemProvider booleanListValueStyleItemProvider;
    protected BooleanValueStyleItemProvider booleanValueStyleItemProvider;
    protected ByteArrayValueStyleItemProvider byteArrayValueStyleItemProvider;
    protected DataTypeStyleItemProvider dataTypeStyleItemProvider;
    protected DiagramLinkStyleItemProvider diagramLinkStyleItemProvider;
    protected DoubleListValueStyleItemProvider doubleListValueStyleItemProvider;
    protected DoubleValueStyleItemProvider doubleValueStyleItemProvider;
    protected EObjectListValueStyleItemProvider eObjectListValueStyleItemProvider;
    protected EObjectValueStyleItemProvider eObjectValueStyleItemProvider;
    protected HintedDiagramLinkStyleItemProvider hintedDiagramLinkStyleItemProvider;
    protected IntListValueStyleItemProvider intListValueStyleItemProvider;
    protected IntValueStyleItemProvider intValueStyleItemProvider;
    protected ListValueStyleItemProvider listValueStyleItemProvider;
    protected MultiDiagramLinkStyleItemProvider multiDiagramLinkStyleItemProvider;
    protected NamedStyleItemProvider namedStyleItemProvider;
    protected PropertiesSetStyleItemProvider propertiesSetStyleItemProvider;
    protected PropertyValueItemProvider propertyValueItemProvider;
    protected SingleValueStyleItemProvider singleValueStyleItemProvider;
    protected StringListValueStyleItemProvider stringListValueStyleItemProvider;
    protected StringToPropertyValueMapEntryItemProvider stringToPropertyValueMapEntryItemProvider;
    protected StringValueStyleItemProvider stringValueStyleItemProvider;
    public Adapter createBooleanListValueStyleAdapter ();
    public Adapter createDoubleListValueStyleAdapter ();
    public Adapter createEObjectListValueStyleAdapter ();
    public Adapter createIntListValueStyleAdapter ();
    public Adapter createMultiDiagramLinkStyleAdapter ();
    public Adapter createPropertiesSetStyleAdapter ();
    public Adapter createStringListValueStyleAdapter ();
    public Adapter createStringToPropertyValueMapEntryAdapter ();
public class NotationItemProviderAdapterFactory extends NotationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class NotationItemProviderAdapterFactory extends NotationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected TextStyleItemProvider textStyleItemProvider;
public class NotationItemProviderAdapterFactory extends NotationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
public class NotationItemProviderAdapterFactory extends NotationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ArrowStyleItemProvider arrowStyleItemProvider;
    protected LineTypeStyleItemProvider lineTypeStyleItemProvider;
public class NotationMSLPlugin extends XToolsPlugin {
    public NotationMSLPlugin (IPluginDescriptor descriptor) {
public class NotationMSLPlugin extends XToolsPlugin {
    public NotationMSLPlugin () {
public class NotationMSLPlugin extends XToolsPlugin {
public class NotationMSLPlugin extends XToolsPlugin {
public class NotationMSLPlugin extends XToolsPlugin {
public class NotationMSLPlugin extends Plugin {
    public void start (BundleContext context) throws Exception;
public class NotationMSLPlugin extends Plugin {
    public void start (BundleContext context) throws Exception;
public class NotationMSLPlugin extends Plugin {
[NotationPackageImpl-9.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[NotationPackageImpl-10.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
[NotationPackageImpl-11.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[NotationPackageImpl-11.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
    public EAttribute getArrowStyle_ArrowSource ();
    public EAttribute getLineStyle_LineWidth ();
[NotationPackageImpl-12.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[NotationPackageImpl-12.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
[NotationPackageImpl-13.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[NotationPackageImpl-14.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
[NotationPackageImpl-14.java, Txl/api_clone_java.Txl] : TXL0983E - Out of tree space - 3200000 trees have been allocated.
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
[NotationPackageImpl-15.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
[NotationPackageImpl-7.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
public class NotationPackageImpl extends EPackageImpl implements NotationPackage {
    public EAttribute getBooleanListValueStyle_BooleanListValue ();
    public EAttribute getBooleanValueStyle_BooleanValue ();
    public EAttribute getDoubleListValueStyle_DoubleListValue ();
    public EAttribute getIntListValueStyle_IntListValue ();
    public EAttribute getStringListValueStyle_StringListValue ();
    public EAttribute getStringToPropertyValueMapEntry_Key ();
    public EClass getBooleanListValueStyle ();
    public EClass getDoubleListValueStyle ();
    public EClass getEObjectListValueStyle ();
    public EClass getIntListValueStyle ();
    public EClass getMultiDiagramLinkStyle ();
    public EClass getPropertiesSetStyle ();
    public EClass getStringListValueStyle ();
    public EClass getStringObjectConverter ();
    public EClass getStringToPropertyValueMapEntry ();
    public EReference getDataTypeStyle_InstanceType ();
    public EReference getEObjectListValueStyle_EObjectListValue ();
    public EReference getPropertiesSetStyle_PropertiesMap ();
[NotationPackageImpl-8.java, Txl/api_clone_java.Txl] : TXL0981E - Out of tree space - 3200000 trees have been allocated.
public class NotationPropertyDescriptor extends EMFCompositeSourcePropertyDescriptor {
public class NotationPropertyDescriptor extends EMFCompositeSourcePropertyDescriptor {
public class NotationSwitch {
public class NotationSwitch {
    public Object caseBooleanListValueStyle (BooleanListValueStyle object);
    public Object caseDoubleListValueStyle (DoubleListValueStyle object);
    public Object caseEObjectListValueStyle (EObjectListValueStyle object);
    public Object caseIntListValueStyle (IntListValueStyle object);
    public Object caseMultiDiagramLinkStyle (MultiDiagramLinkStyle object);
    public Object casePropertiesSetStyle (PropertiesSetStyle object);
    public Object caseStringListValueStyle (StringListValueStyle object);
    public Object caseStringObjectConverter (StringObjectConverter object);
    public Object caseStringToPropertyValueMapEntry (Map.Entry object);
public class NotationSwitch {
public class NotationSwitch {
public class NotationSwitch {
public class NotationSwitch {
public class NotationSwitch {
public class NotationSwitch {
public class NotationSwitch {
public class NotationSwitch {
public class NotationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class NotationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class NotationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NotationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NotationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class NotationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class NotationViewDependentsAdvice extends AbstractEditHelperAdvice {
public class NotationViewDependentsAdvice extends AbstractEditHelperAdvice {
    public ICommand getAfterEditCommand (IEditCommandRequest request);
    public ICommand getBeforeEditCommand (IEditCommandRequest request);
public class NoteAttachmentEditPart extends ConnectionNodeEditPart {
public class NoteAttachmentEditPart extends ConnectionNodeEditPart {
    protected void handleNotificationEvent (Notification notification);
    protected void setArrowSource (RotatableDecoration arrowDecoration);
    protected void setArrowTarget (RotatableDecoration arrowDecoration);
    protected void setLineType (int lineType);
public class NoteEditPart extends ShapeNodeEditPart {
public class NoteEditPart extends ShapeNodeEditPart {
    private class ResourceListener extends ResourceSetListenerImpl {
        public ResourceListener (Resource resource, EditPart editPart) {
        public boolean isPostcommitOnly ();
        public void resourceSetChanged (ResourceSetChangeEvent event);
    public Object getPreferredValue (EStructuralFeature feature);
public class NoteEditPart extends ShapeNodeEditPart {
    private class ResourceListener extends ResourceSetListenerImpl {
        public ResourceListener (Resource resource, EditPart editPart) {
public class NoteEditPart extends ShapeNodeEditPart {
    private class ResourceListener extends ResourceSetListenerImpl {
        public ResourceListener (Resource resource, NoteEditPart editPart) {
public class NoteEditPart extends ShapeNodeEditPart {
public class NoteEditPart extends ShapeNodeEditPart {
    protected void setLineType (int lineType);
public class NoteFigure extends DefaultSizeNodeFigure implements IPolygonAnchorableFigure {
public class NoteFigure extends DefaultSizeNodeFigure implements IPolygonAnchorableFigure {
public class NoteFigure extends DefaultSizeNodeFigure {
    final public static int CLIP_HEIGHT = 317;
    final public static int CLIP_MARGIN = 370;
    final public static int MARGIN = 132;
public class NoteFigure extends DefaultSizeNodeFigure {
    final public static int CLIP_HEIGHT = MapMode.DPtoLP (12);
    final public static int CLIP_MARGIN = MapMode.DPtoLP (14);
    final public static int MARGIN = MapMode.DPtoLP (5);
public class NoteFigure extends DefaultSizeNodeFigure {
    final public static int CLIP_HEIGHT = MapMode.DPtoLP (12);
    final public static int CLIP_MARGIN = MapMode.DPtoLP (14);
    final public static int MARGIN = MapMode.DPtoLP (5);
public class NoteFigure extends DefaultSizeNodeFigure {
    public NoteFigure (int width, int height, Insets insets) {
    final public static int MARGIN = MapModeUtil.getMapMode ().DPtoLP (5);
    final public static int CLIP_HEIGHT = MapModeUtil.getMapMode ().DPtoLP (12);
    final public static int CLIP_HEIGHT_DP = 12;
    final public static int CLIP_MARGIN = MapModeUtil.getMapMode ().DPtoLP (14);
    final public static int CLIP_MARGIN_DP = 14;
    final public static int MARGIN_DP = 5;
public class NoteFigure extends DefaultSizeNodeFigure {
    public NoteFigure () {
    final public static int MARGIN = MapModeUtil.getMapMode ().DPtoLP (5);
    final public static int CLIP_HEIGHT = MapModeUtil.getMapMode ().DPtoLP (12);
    final public static int CLIP_MARGIN = MapModeUtil.getMapMode ().DPtoLP (14);
public class NoteFigure extends DefaultSizeNodeFigure {
public class NoteFigure extends DefaultSizeNodeFigure {
public class NoteFigure extends DefaultSizeNodeFigure implements IPolygonAnchorableFigure {
public class NoteViewFactory extends TextShapeViewFactory {
public class NoteViewFactory extends TextShapeViewFactory {
public class NotificationUtil {
public class NotificationUtil {
public class NotificationUtil {
public class NotificationUtil {
public class NotificationUtil {
public class NotificationUtil {
public class OawBuilder extends IncrementalProjectBuilder {
    class OawDeltaVisitor implements IResourceDeltaVisitor {
        public OawDeltaVisitor (final IProgressMonitor monitor) {
    private class XpandResourceVisitor implements IResourceVisitor {
public class OawBuilder extends IncrementalProjectBuilder {
    @Override
    protected void startupOnInitialize (); private class XpandResourceVisitor implements IResourceDeltaVisitor, IResourceVisitor {
public class OawBuilder extends IncrementalProjectBuilder {
public class OawBuilder extends IncrementalProjectBuilder implements RootManager.IRootChangeListener {
    public void rootsChanged (RootManager rootManager);
public class OawMarkerManager {
public class OawMarkerManager {
public class ObliqueRouter extends BendpointConnectionRouter {
public class ObliqueRouter extends BendpointConnectionRouter {
    protected PointList calculateBendPoints (Connection conn);
public class ObliqueRouter extends BendpointConnectionRouter {
public class ObliqueRouter extends BendpointConnectionRouter {
public class ObliqueRouter extends AnimatableConnectionRouter {
public class ObliqueRouter extends BendpointConnectionRouter {
public class ObliqueRouter extends BendpointConnectionRouter {
    protected boolean routeThroughObstructions (Connection conn, PointList newLine); final protected static int ROUTER_OBSTRUCTION_BUFFER = 12;
    protected void avoidObstructionsRouting (Connection conn, PointList newLine);
public class ObliqueRouter extends BendpointConnectionRouter {
public class OffscreenEditPartFactory {
public class OffscreenEditPartFactory {
public class OffscreenEditPartFactory {
public class OffscreenEditPartFactory {
public class OpenAction extends PresentationAction {
public class OpenAction extends DiagramAction {
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
    protected boolean openAsEclipseEditor = OPEN_AS_ECLIPSE_EDITOR_EDEFAULT;
    final protected static boolean OPEN_AS_ECLIPSE_EDITOR_EDEFAULT = true;
    public void setOpenAsEclipseEditor (boolean newOpenAsEclipseEditor);
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
    final public static String ANNOTATION_SOURCE = "uri://eclipse.org/gmf/openDiagramPolicy";
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
    public void setSubject (GenCommonBase newSubject);
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
    public void setSubject (GenCommonBase newSubject);
public class OpenDiagramBehaviourImpl extends EObjectImpl implements OpenDiagramBehaviour {
public class OpenDiagramBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class OpenDiagramBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class OpenDiagramBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class OpenDiagramBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class OpenDiagramBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class OpenDiagramBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class OpenDiagramCommand extends AbstractCommand {
    public boolean isExecutable ();
    public boolean isRedoable ();
    public boolean isUndoable ();
public class OpenDiagramCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public boolean canExecute ();
    public boolean canRedo ();
    public boolean canUndo ();
public class OrganizeImportsPostprocessor {
public class OrganizeImportsPostprocessor {
    public void organizeImports (ICompilationUnit icu, String [] declaredImportsAsStrings, IProgressMonitor progress) throws CoreException;
public class OrthogonalRouterUtilities {
public class OrthogonalRouterUtilities {
    public static void transformToOrthogonalPointList (PointList points, int offStartDirection, int offEndDirection);
public class OrthogonalRouterUtilities {
    public static void transformToOrthogonalPointList (PointList points, int offStartDirection, int offEndDirection);
public class OrthogonalRouterUtilities {
public class OrthogonalRouterUtilities {
public class OrthogonalRouterUtilities {
    public static void transformToOrthogonalPointList (PointList points, int offStartDirection, int offEndDirection);
public class PageBreakEditPart extends AbstractGraphicalEditPart {
public class PageBreakEditPart extends AbstractGraphicalEditPart {
    public void updatePreferenceStore ();
public class PageInfoHelper {
    public static PageMargins getPageMargins (IPreferenceStore preferenceStore);
    public static Point getPageSize (IPreferenceStore store);
public class PageInfoHelper {
    public static PageMargins getPageMargins (IPreferenceStore preferenceStore, IMapMode mm);
    public static Point getPageSize (IPreferenceStore store, IMapMode mm);
public class PageSetupConfigBlock implements ILabels {
public class PageSetupConfigBlock implements ILabels {
    private void createGroupMargin (Composite composite) {
        Group group = PageSetupWidgetFactory.createGroupMargin (composite, LABEL_TITLE_GROUP_MARGIN);
        fLabelMarginTop = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_TOP_INCHES);
        fTextMarginTop = PageSetupWidgetFactory.createTextMargin (group);
        fLabelUnitMarginTop = PageSetupWidgetFactory.createLabelFiller (group);
        fLabelMarginBottom = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_BOTTOM_INCHES);
        fTextMarginBottom = PageSetupWidgetFactory.createTextMargin (group);
        fLabelMarginLeft = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_LEFT_INCHES);
        fTextMarginLeft = PageSetupWidgetFactory.createTextMargin (group);
        fLabelUnitMarginLeft = PageSetupWidgetFactory.createLabelFiller (group);
        fLabelMarginRight = PageSetupWidgetFactory.createLabel (group, LABEL_MARGIN_RIGHT_INCHES);
        fTextMarginRight = PageSetupWidgetFactory.createTextMargin (group);
        fTextMarginTop.addFocusListener (new FocusListener () {
            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        );
        fTextMarginTop.addModifyListener (new ModifyListener () {
            public void modifyText (ModifyEvent e);
        );
        fTextMarginBottom.addFocusListener (new FocusListener () {
            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        );
        fTextMarginBottom.addModifyListener (new ModifyListener () {
            public void modifyText (ModifyEvent e);
        );
        fTextMarginLeft.addFocusListener (new FocusListener () {
            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        );
        fTextMarginLeft.addModifyListener (new ModifyListener () {
            public void modifyText (ModifyEvent e);
        );
        fTextMarginRight.addFocusListener (new FocusListener () {
            public void focusGained (FocusEvent e);
            public void focusLost (FocusEvent e);
        );
        fTextMarginRight.addModifyListener (new ModifyListener () {
            public void modifyText (ModifyEvent e);
        );
        fControls.add (fLabelMarginTop);
        fControls.add (fTextMarginTop);
        fControls.add (fLabelUnitMarginTop);
        fControls.add (fLabelMarginBottom);
        fControls.add (fTextMarginBottom);
        fControls.add (fLabelMarginLeft);
        fControls.add (fTextMarginLeft);
        fControls.add (fLabelUnitMarginLeft);
        fControls.add (fLabelMarginRight);
        fControls.add (fTextMarginRight);
public class PageSetupConfigBlock implements ILabels {
    private class Convertor {
public class PageSetupConfigBlock implements ILabels {
    private class Convertor {
public class PageSetupPageType {
    public static PageSetupPageType A3 = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.A3"), new Point2D.Double (11.69, 16.54), 4);
    public static PageSetupPageType A4 = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.A4"), new Point2D.Double (8.268, 11.69), 5);
    public static PageSetupPageType B4 = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.B4"), new Point2D.Double (14.33, 10.12), 6);
    public static PageSetupPageType B5 = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.B5"), new Point2D.Double (7.165, 10.12), 7);
    public static PageSetupPageType EXECUTIVE = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.executive"), new Point2D.Double (7.25, 10.5), 2);
    public static PageSetupPageType LEGAL = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.legal"), new Point2D.Double (8.5, 14), 1);
    public static PageSetupPageType LETTER = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.letter"), new Point2D.Double (8.5, 11), 0);
    public static PageSetupPageType USER_DEFINED = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.userDefined"), new Point2D.Double (0.0, 0.0), 8);
    public static PageSetupPageType llX17 = new PageSetupPageType (PresentationResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.11by17"), new Point2D.Double (11, 17), 3);
public class PageSetupPageType {
    public static PageSetupPageType A3 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.A3"), new Point2D.Double (11.69, 16.54), 4);
    public static PageSetupPageType A4 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.A4"), new Point2D.Double (8.268, 11.69), 5);
    public static PageSetupPageType B4 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.B4"), new Point2D.Double (14.33, 10.12), 6);
    public static PageSetupPageType B5 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.B5"), new Point2D.Double (7.165, 10.12), 7);
    public static PageSetupPageType EXECUTIVE = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.executive"), new Point2D.Double (7.25, 10.5), 2);
    public static PageSetupPageType LEGAL = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.legal"), new Point2D.Double (8.5, 14), 1);
    public static PageSetupPageType LETTER = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.letter"), new Point2D.Double (8.5, 11), 0);
    public static PageSetupPageType USER_DEFINED = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.userDefined"), new Point2D.Double (0.0, 0.0), 8);
    public static PageSetupPageType llX17 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.11by17"), new Point2D.Double (11, 17), 3);
public class PageSetupPageType {
    public static PageSetupPageType A3 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.A3"), new Point2D.Double (11.69, 16.54), 4);
    public static PageSetupPageType A4 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.A4"), new Point2D.Double (8.268, 11.69), 5);
    public static PageSetupPageType B4 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.B4"), new Point2D.Double (14.33, 10.12), 6);
    public static PageSetupPageType B5 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.B5"), new Point2D.Double (7.165, 10.12), 7);
    public static PageSetupPageType EXECUTIVE = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.executive"), new Point2D.Double (7.25, 10.5), 2);
    public static PageSetupPageType LEGAL = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.legal"), new Point2D.Double (8.5, 14), 1);
    public static PageSetupPageType LETTER = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.letter"), new Point2D.Double (8.5, 11), 0);
    public static PageSetupPageType USER_DEFINED = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.userDefined"), new Point2D.Double (0.0, 0.0), 8);
    public static PageSetupPageType llX17 = new PageSetupPageType (DiagramResourceManager.getInstance ().getString ("PageSetupDialog.paper.size.11by17"), new Point2D.Double (11, 17), 3);
public class PageSetupPageType {
    public static PageSetupPageType A3 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_A3, new Point2D.Double (11.69, 16.54), 4);
    public static PageSetupPageType A4 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_A4, new Point2D.Double (8.268, 11.69), 5);
    public static PageSetupPageType B4 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_B4, new Point2D.Double (14.33, 10.12), 6);
    public static PageSetupPageType B5 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_B5, new Point2D.Double (7.165, 10.12), 7);
    public static PageSetupPageType EXECUTIVE = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_executive, new Point2D.Double (7.25, 10.5), 2);
    public static PageSetupPageType LEGAL = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_legal, new Point2D.Double (8.5, 14), 1);
    public static PageSetupPageType LETTER = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_letter, new Point2D.Double (8.5, 11), 0);
    public static PageSetupPageType USER_DEFINED = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_userDefined, new Point2D.Double (0.0, 0.0), 8);
    public static PageSetupPageType llX17 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_11by17, new Point2D.Double (11, 17), 3);
public class PageSetupPageType {
    public static PageSetupPageType A3 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_A3, new Point2D.Double (11.69, 16.54), 4);
    public static PageSetupPageType A4 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_A4, new Point2D.Double (8.268, 11.69), 5);
    public static PageSetupPageType B4 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_B4, new Point2D.Double (14.33, 10.12), 6);
    public static PageSetupPageType B5 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_B5, new Point2D.Double (7.165, 10.12), 7);
public class PageSetupPageType {
    public static PageSetupPageType A3 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_A3, new Point2D.Double (11.6929134d, 16.5354331d), 4);
    public static PageSetupPageType A4 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_A4, new Point2D.Double (8.26771654d, 11.6929134d), 5);
    public static PageSetupPageType B4 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_B4, new Point2D.Double (9.84251969d, 13.8976378d), 6);
    public static PageSetupPageType B5 = new PageSetupPageType (DiagramUIMessages.PageSetupDialog_paper_size_B5, new Point2D.Double (6.92913386d, 9.84251969d), 7);
public class PageSetupWidgetFactory {
    public static Label createLabelUnit (Group group);
public class PageSetupWidgetFactory {
interface PageStyle extends Style {
interface PageStyle extends NotationObject, Style {
interface PageStyle extends NotationObject, Style {
interface PageStyle extends Style {
public class PageStyleImpl extends EObjectImpl implements PageStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class PageStyleImpl extends EObjectImpl implements PageStyle {
    public void eSet (int featureID, Object newValue);
public class PageStyleImpl extends EObjectImpl implements PageStyle {
public class PageStyleImpl extends FlatEObjectImpl implements PageStyle {
public class PageStyleImpl extends FlatEObjectImpl implements PageStyle {
public class PageStyleImpl extends NotationObjectImpl implements PageStyle {
public class PageStyleImpl extends NotationObjectImpl implements PageStyle {
public class PageStyleImpl extends NotationEObjectImpl implements PageStyle {
public class PageStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PageStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PageStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PageStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PaletteHandler {
    private static class ToolSwitch extends GMFToolSwitch {
public class PaletteHandler {
    private static class ToolSwitch extends GMFToolSwitch {
public class PaletteHandler {
    private static class ToolSwitch extends GMFToolSwitch {
        public Object caseToolGroup (org.eclipse.gmf.tooldef.ToolGroup toolGroup);
    public void process (LinkMapping lme, GenLink genLink);
    public void process (NodeMapping nme, GenNode genNode);
    public void process (org.eclipse.gmf.tooldef.Palette palette);
public class PaletteHandler {
    @SuppressWarnings("unchecked")
    public void process (LinkMapping lme, GenLink genLink);
    @SuppressWarnings("unchecked")
    public void process (NodeMapping nme, GenNode genNode);
    @SuppressWarnings("unchecked")
    public void process (org.eclipse.gmf.tooldef.Palette palette); private static class ToolSwitch extends GMFToolSwitch {
        @SuppressWarnings("unchecked")
        public Object caseToolGroup (org.eclipse.gmf.tooldef.ToolGroup toolGroup);
public class PaletteHandler {
    private static class ToolSwitch extends GMFToolSwitch {
        public Object caseStandardTool (StandardTool object);
public class PaletteHandler {
    private static class ToolSwitch extends GMFToolSwitch {
        public Object caseStandardTool (StandardTool standardTool);
public class PaletteHandler {
    @SuppressWarnings("unchecked")
    public void process (LinkMapping lme, GenLink genLink);
    @SuppressWarnings("unchecked")
    public void process (NodeMapping nme, GenNode genNode);
    @SuppressWarnings("unchecked")
    public void process (org.eclipse.gmf.tooldef.Palette palette); private static class ToolSwitch extends GMFToolSwitch {
        @SuppressWarnings("unchecked")
        public Object caseCreationTool (CreationTool tool);
        public Object caseGenericTool (GenericTool tool);
        public Object casePaletteSeparator (PaletteSeparator object);
        public Object caseStandardTool (StandardTool standardTool);
public class PaletteHandler {
    private static class ToolSwitch extends GMFToolSwitch < ToolGroupItem > {
        public ToolGroupItem caseCreationTool (CreationTool tool);
        public ToolGroupItem caseGenericTool (GenericTool tool);
        public ToolGroupItem casePaletteSeparator (PaletteSeparator object);
        public ToolGroupItem caseStandardTool (StandardTool standardTool);
        public ToolGroupItem caseToolGroup (org.eclipse.gmf.tooldef.ToolGroup toolGroup);
    public void process (LinkMapping lme, GenLink genLink);
    public void process (NodeMapping nme, GenNode genNode);
    public void process (org.eclipse.gmf.tooldef.Palette palette);
public class PaletteImpl extends EObjectImpl implements Palette {
    protected EClass eStaticClass (); protected EList groups = null;
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class PaletteImpl extends EObjectImpl implements Palette {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < ToolGroup > groups = null;
public class PaletteImpl extends EObjectImpl implements Palette {
    protected EList < ToolGroup > groups = null;
public class PaletteImpl extends EObjectImpl implements Palette {
    protected EList < ToolGroup > groups;
public class PaletteImpl extends EObjectImpl implements Palette {
public class PaletteImpl extends EObjectImpl implements Palette {
public class PaletteImpl extends EObjectImpl implements Palette {
public class PaletteImpl extends EObjectImpl implements Palette {
public class PaletteImpl extends EObjectImpl implements Palette {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class PaletteImpl extends EObjectImpl implements Palette {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
public class PaletteImpl extends EObjectImpl implements Palette {
    protected boolean needZoomTools = NEED_ZOOM_TOOLS_EDEFAULT;
    final protected static boolean FLYOUT_EDEFAULT = false;
    final protected static boolean NEED_ZOOM_TOOLS_EDEFAULT = false;
public class PaletteImpl extends EObjectImpl implements Palette {
    final protected static boolean FLYOUT_EDEFAULT = true;
public class PaletteImpl extends EObjectImpl implements Palette {
public class PaletteImpl extends EObjectImpl implements Palette {
public class PaletteItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PaletteItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PaletteItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PaletteItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class PaletteItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PaletteItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PaletteSeparatorItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PaletteSeparatorItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class PaletteSeparatorItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PaletteSeparatorItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PaletteService extends Service implements IPaletteProvider {
public class PaletteService extends Service implements IPaletteProvider {
public class PaletteToolEntry extends org.eclipse.gef.palette.ToolEntry {
public class PaletteToolEntry extends CombinedTemplateCreationEntry {
public class ParentAssignedViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ParentAssignedViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ParentAssignedViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ParentAssignedViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ParserException extends Exception {
    public ParserException (Collection < ? extends ErrorLocationInfo > errors) {
    public ParserException (ErrorLocationInfo...errors) {
public class ParserException extends Exception {
    public ParserException (String qualifiedName, Collection < ? extends ErrorLocationInfo > errors) {
    public ParserException (String qualifiedName, ErrorLocationInfo...errors) {
public class PartPositionInfo {
public class PartPositionInfo {
public class PasteChildOperation extends BasePasteOperation {
    final protected static String COPY = ClipboardPlugin.getPlugin ().getString ("pasteChildOperation.copyPrefix");
public class PasteChildOperation extends BasePasteOperation {
    final protected static String COPY = EMFClipboardCoreMessages.pasteChildOperation_copyPrefix;
public class PasteChildOperation extends BasePasteOperation {
public class PasteChildOperation extends BasePasteOperation {
    protected EObject doPasteInto (PasteTarget pasteTarget);
public class PasteIntoParentOperation extends BasePasteOperation {
    public PasteIntoParentOperation (PasteOperation pasteProcess, EObject element, Map hintsMap) throws Exception {
public class PasteIntoParentOperation extends BasePasteOperation {
    public PasteIntoParentOperation (PasteOperation pasteProcess, PasteTarget element, Map hintsMap) throws Exception {
public class PasteOperation extends BasePasteOperation {
    public PasteOperation (IProgressMonitor monitor, IClipboardSupport clipboardSupport, String string, EObject parent, Map loadOptionsMap, Map hintsMap) throws Exception {
public class PasteOperation extends BasePasteOperation {
    public PasteOperation (IProgressMonitor monitor, IClipboardSupport clipboardSupport, String string, PasteTarget parent, Map loadOptionsMap, Map hintsMap) throws Exception {
public class PathEditorInputProxy extends EditorInputProxy implements IPathEditorInput, MEditingDomainElement {
    public PathEditorInputProxy (IPathEditorInput input, MEditingDomain domain) {
public class PathEditorInputProxy extends EditorInputProxy implements IPathEditorInput, MEditingDomainElement {
    public PathEditorInputProxy (IPathEditorInput input, TransactionalEditingDomain domain) {
public class PathmapManager extends AdapterImpl implements IPathmapManager {
public class PathmapManager extends AdapterImpl implements IPathmapManager, IPathmapManager2 {
    public IStatus addFilePathVariable (String name, String value, boolean dirtyResources);
    public IStatus addFilePathVariables (Map settings, boolean dirtyResources);
    public IStatus addFolderPathVariable (String name, String value, boolean dirtyResources);
    public static void setFilePathVariable (String var, String val, boolean dirtyResources);
    public static void setPathVariable (String var, String val, boolean dirtyResources);
public class PathmapManager extends AdapterImpl {
public class PathmapManager extends AdapterImpl implements IPathmapManager {
    public IStatus addPathVariable (String name, String value);
public class PathmapManager extends AdapterImpl implements IPathmapManager {
public class PathmapManager extends AdapterImpl implements IPathmapManager {
public class PathmapManager extends AdapterImpl implements IPathmapManager {
public class PathmapManager extends AdapterImpl implements IPathmapManager {
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Label pathVariablesLabel = new Label (composite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        Label referencedPathVariablesLabel = new Label (composite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        pathVariables = new List (composite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariables.setLayoutData (gridData);
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        Button remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        referencedPathVariables = new List (composite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariables.setLayoutData (gridData);
        pathVariables.addSelectionListener (new SelectionListener () {
        );
        referencedPathVariables.addSelectionListener (new SelectionListener () {
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Label pathVariablesLabel = new Label (composite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        Label referencedPathVariablesLabel = new Label (composite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        pathVariables = new List (composite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariables.setLayoutData (gridData);
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        Button remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        referencedPathVariables = new List (composite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariables.setLayoutData (gridData);
        pathVariables.addSelectionListener (new SelectionListener () {
        );
        referencedPathVariables.addSelectionListener (new SelectionListener () {
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Label pathVariablesLabel = new Label (composite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        Label referencedPathVariablesLabel = new Label (composite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        pathVariables = new List (composite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariables.setLayoutData (gridData);
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        Button remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        referencedPathVariables = new List (composite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariables.setLayoutData (gridData);
        pathVariables.addSelectionListener (new SelectionListener () {
        );
        referencedPathVariables.addSelectionListener (new SelectionListener () {
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Composite pathVariablesComposite = new Composite (composite, SWT.NONE);
        pathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesComposite.setLayoutData (gridData);
        Label pathVariablesLabel = new Label (pathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        pathVariables = new List (pathVariablesComposite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariables.setLayoutData (gridData);
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        Button remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        Composite referencedPathVariablesComposite = new Composite (composite, SWT.NONE);
        referencedPathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesComposite.setLayoutData (gridData);
        Label referencedPathVariablesLabel = new Label (referencedPathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        referencedPathVariables = new List (referencedPathVariablesComposite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariables.setLayoutData (gridData);
        pathVariables.addSelectionListener (new SelectionListener () {
        );
        referencedPathVariables.addSelectionListener (new SelectionListener () {
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Composite pathVariablesComposite = new Composite (composite, SWT.NONE);
        pathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesComposite.setLayoutData (gridData);
        Label pathVariablesLabel = new Label (pathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        pathVariables = new List (pathVariablesComposite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariables.setLayoutData (gridData);
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        Button remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        Composite referencedPathVariablesComposite = new Composite (composite, SWT.NONE);
        referencedPathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesComposite.setLayoutData (gridData);
        Label referencedPathVariablesLabel = new Label (referencedPathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        referencedPathVariables = new List (referencedPathVariablesComposite, SWT.MULTI | SWT.BORDER);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariables.setLayoutData (gridData);
        pathVariables.addSelectionListener (new SelectionListener () {
        );
        referencedPathVariables.addSelectionListener (new SelectionListener () {
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    private static class StringsContentProvider implements IStructuredContentProvider {
        public void inputChanged (Viewer viewer, Object oldInput, Object newInput);
    private static class StringsLabelProvider implements IColorProvider, ITableLabelProvider {
        public Color getBackground (Object element);
        public Color getForeground (Object element);
        public Image getColumnImage (Object element, int columnIndex);
        public String getColumnText (Object element, int columnIndex);
        public boolean isLabelProperty (Object element, String property);
        public void removeListener (ILabelProviderListener listener);
    private static class StringsViewerComparator extends ViewerComparator {
        public int category (Object element);
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Composite pathVariablesComposite = new Composite (composite, SWT.NONE);
        pathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesComposite.setLayoutData (gridData);
        Label pathVariablesLabel = new Label (pathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        pathVariablesScroll = new ScrolledComposite (pathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        pathVariablesScroll.setExpandHorizontal (true);
        pathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesScroll.setLayoutData (gridData);
        pathVariables = new TableViewer (pathVariablesScroll, SWT.MULTI);
        pathVariablesScroll.setContent (pathVariables.getTable ());
        TableColumn column = new TableColumn (pathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        pathVariables.getTable ().addControlListener (new ControlAdapter () {
            public void controlResized (ControlEvent e);
        );
        pathVariablesContent = new StringsContentProvider ();
        pathVariables.setContentProvider (pathVariablesContent);
        pathVariables.setLabelProvider (new StringsLabelProvider ());
        pathVariables.setComparator (new StringsViewerComparator ());
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        Composite referencedPathVariablesComposite = new Composite (composite, SWT.NONE);
        referencedPathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesComposite.setLayoutData (gridData);
        Label referencedPathVariablesLabel = new Label (referencedPathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        referencedPathVariablesScroll = new ScrolledComposite (referencedPathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        referencedPathVariablesScroll.setExpandHorizontal (true);
        referencedPathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesScroll.setLayoutData (gridData);
        referencedPathVariables = new TableViewer (referencedPathVariablesScroll, SWT.MULTI);
        referencedPathVariablesScroll.setContent (referencedPathVariables.getTable ());
        column = new TableColumn (referencedPathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        referencedPathVariables.getTable ().addControlListener (new ControlAdapter () {
            public void controlResized (ControlEvent e);
        );
        referencedPathVariablesContent = new StringsContentProvider ();
        referencedPathVariables.setContentProvider (referencedPathVariablesContent);
        referencedPathVariables.setLabelProvider (new StringsLabelProvider (true));
        referencedPathVariables.setComparator (new StringsViewerComparator ());
        composite.addControlListener (new ControlAdapter () {
            public void controlResized (ControlEvent e);
        );
        pathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
            public void selectionChanged (SelectionChangedEvent event);
        );
        referencedPathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
            public void selectionChanged (SelectionChangedEvent event);
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Composite pathVariablesComposite = new Composite (composite, SWT.NONE);
        pathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesComposite.setLayoutData (gridData);
        Label pathVariablesLabel = new Label (pathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        pathVariablesScroll = new ScrolledComposite (pathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        pathVariablesScroll.setExpandHorizontal (true);
        pathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesScroll.setLayoutData (gridData);
        pathVariables = new TableViewer (pathVariablesScroll, SWT.MULTI);
        pathVariablesScroll.setContent (pathVariables.getTable ());
        TableColumn column = new TableColumn (pathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        pathVariables.getTable ().addControlListener (new ControlAdapter () {
        );
        pathVariablesContent = new StringsContentProvider ();
        pathVariables.setContentProvider (pathVariablesContent);
        pathVariables.setLabelProvider (new StringsLabelProvider ());
        pathVariables.setComparator (new StringsViewerComparator ());
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        Composite referencedPathVariablesComposite = new Composite (composite, SWT.NONE);
        referencedPathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesComposite.setLayoutData (gridData);
        Label referencedPathVariablesLabel = new Label (referencedPathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        referencedPathVariablesScroll = new ScrolledComposite (referencedPathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        referencedPathVariablesScroll.setExpandHorizontal (true);
        referencedPathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesScroll.setLayoutData (gridData);
        referencedPathVariables = new TableViewer (referencedPathVariablesScroll, SWT.MULTI);
        referencedPathVariablesScroll.setContent (referencedPathVariables.getTable ());
        column = new TableColumn (referencedPathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        referencedPathVariables.getTable ().addControlListener (new ControlAdapter () {
        );
        referencedPathVariablesContent = new StringsContentProvider ();
        referencedPathVariables.setContentProvider (referencedPathVariablesContent);
        referencedPathVariables.setLabelProvider (new StringsLabelProvider (true));
        referencedPathVariables.setComparator (new StringsViewerComparator ());
        composite.addControlListener (new ControlAdapter () {
        );
        pathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
        );
        referencedPathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Composite pathVariablesComposite = new Composite (composite, SWT.NONE);
        pathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesComposite.setLayoutData (gridData);
        Label pathVariablesLabel = new Label (pathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        pathVariablesScroll = new ScrolledComposite (pathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        pathVariablesScroll.setExpandHorizontal (true);
        pathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesScroll.setLayoutData (gridData);
        pathVariables = new TableViewer (pathVariablesScroll, SWT.MULTI);
        pathVariablesScroll.setContent (pathVariables.getTable ());
        TableColumn column = new TableColumn (pathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        pathVariables.getTable ().addControlListener (new ControlAdapter () {
        );
        pathVariablesContent = new StringsContentProvider ();
        pathVariables.setContentProvider (pathVariablesContent);
        pathVariables.setLabelProvider (new StringsLabelProvider ());
        pathVariables.setComparator (new StringsViewerComparator ());
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        Composite referencedPathVariablesComposite = new Composite (composite, SWT.NONE);
        referencedPathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesComposite.setLayoutData (gridData);
        Label referencedPathVariablesLabel = new Label (referencedPathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        referencedPathVariablesScroll = new ScrolledComposite (referencedPathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        referencedPathVariablesScroll.setExpandHorizontal (true);
        referencedPathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesScroll.setLayoutData (gridData);
        referencedPathVariables = new TableViewer (referencedPathVariablesScroll, SWT.MULTI);
        referencedPathVariablesScroll.setContent (referencedPathVariables.getTable ());
        column = new TableColumn (referencedPathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        referencedPathVariables.getTable ().addControlListener (new ControlAdapter () {
        );
        referencedPathVariablesContent = new StringsContentProvider ();
        referencedPathVariables.setContentProvider (referencedPathVariablesContent);
        referencedPathVariables.setLabelProvider (new StringsLabelProvider (true));
        referencedPathVariables.setComparator (new StringsViewerComparator ());
        composite.addControlListener (new ControlAdapter () {
        );
        pathVariables.getTable ().addMouseTrackListener (new MouseTrackAdapter () {
            public void mouseHover (MouseEvent e);
        );
        pathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
        );
        referencedPathVariables.getTable ().addMouseTrackListener (new MouseTrackAdapter () {
            public void mouseHover (MouseEvent e);
        );
        referencedPathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
        );
        add.addSelectionListener (new SelectionListener () {
        );
        addAll.addSelectionListener (new SelectionListener () {
        );
        remove.addSelectionListener (new SelectionListener () {
        );
        removeAll.addSelectionListener (new SelectionListener () {
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    private static class StringsContentProvider implements IStructuredContentProvider {
    private static class StringsLabelProvider implements IColorProvider, ITableLabelProvider {
    private static class StringsViewerComparator extends ViewerComparator {
    protected Control createContents (Composite parent) {
        GridData gridData = null;
        Composite composite = new Composite (parent, SWT.NONE);
        composite.setFont (parent.getFont ());
        composite.setLayout (new GridLayout (3, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.horizontalSpan = 2;
        composite.setLayoutData (gridData);
        PreferenceLinkArea pathVariablesArea = new PreferenceLinkArea (composite, SWT.NONE, "org.eclipse.ui.preferencePages.LinkedResources", EMFUIMessages.PathmapsPreferencePage_mainDescription, (IWorkbenchPreferenceContainer) getContainer (), null);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 3;
        pathVariablesArea.getControl ().setLayoutData (gridData);
        Composite pathVariablesComposite = new Composite (composite, SWT.NONE);
        pathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesComposite.setLayoutData (gridData);
        Label pathVariablesLabel = new Label (pathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 2;
        gridData.verticalIndent = 20;
        pathVariablesLabel.setLayoutData (gridData);
        pathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_availablePathVariables);
        pathVariablesScroll = new ScrolledComposite (pathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        pathVariablesScroll.setExpandHorizontal (true);
        pathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        pathVariablesScroll.setLayoutData (gridData);
        pathVariables = new TableViewer (pathVariablesScroll, SWT.MULTI);
        pathVariablesScroll.setContent (pathVariables.getTable ());
        TableColumn column = new TableColumn (pathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        pathVariables.getTable ().addControlListener (new ControlAdapter () {
            public void controlResized (ControlEvent e);
        );
        pathVariablesContent = new StringsContentProvider ();
        pathVariables.setContentProvider (pathVariablesContent);
        pathVariables.setLabelProvider (new StringsLabelProvider ());
        pathVariables.setComparator (new StringsViewerComparator ());
        Composite buttonComposite = new Composite (composite, SWT.NONE);
        buttonComposite.setLayout (new GridLayout (1, false));
        add = new Button (buttonComposite, SWT.CENTER);
        add.setText (EMFUIMessages.PathmapsPreferencePage_addChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        add.setLayoutData (gridData);
        Button addAll = new Button (buttonComposite, SWT.CENTER);
        addAll.setText (EMFUIMessages.PathmapsPreferencePage_addAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        addAll.setLayoutData (gridData);
        remove = new Button (buttonComposite, SWT.CENTER);
        remove.setText (EMFUIMessages.PathmapsPreferencePage_removeChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 10;
        remove.setLayoutData (gridData);
        Button removeAll = new Button (buttonComposite, SWT.CENTER);
        removeAll.setText (EMFUIMessages.PathmapsPreferencePage_removeAllChevron);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        removeAll.setLayoutData (gridData);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.grabExcessHorizontalSpace = false;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        buttonComposite.setLayoutData (gridData);
        Composite referencedPathVariablesComposite = new Composite (composite, SWT.NONE);
        referencedPathVariablesComposite.setLayout (new GridLayout (1, false));
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesComposite.setLayoutData (gridData);
        Label referencedPathVariablesLabel = new Label (referencedPathVariablesComposite, SWT.LEFT);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = false;
        gridData.horizontalSpan = 1;
        gridData.verticalIndent = 20;
        referencedPathVariablesLabel.setLayoutData (gridData);
        referencedPathVariablesLabel.setText (EMFUIMessages.PathmapsPreferencePage_pathVariablesUsedInModeling);
        referencedPathVariablesScroll = new ScrolledComposite (referencedPathVariablesComposite, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
        referencedPathVariablesScroll.setExpandHorizontal (true);
        referencedPathVariablesScroll.setExpandVertical (true);
        gridData = new GridData (GridData.FILL_HORIZONTAL | GridData.FILL_VERTICAL);
        gridData.grabExcessHorizontalSpace = true;
        gridData.grabExcessVerticalSpace = true;
        gridData.horizontalSpan = 1;
        referencedPathVariablesScroll.setLayoutData (gridData);
        referencedPathVariables = new TableViewer (referencedPathVariablesScroll, SWT.MULTI);
        referencedPathVariablesScroll.setContent (referencedPathVariables.getTable ());
        column = new TableColumn (referencedPathVariables.getTable (), SWT.LEFT);
        column.setMoveable (false);
        column.setResizable (false);
        referencedPathVariables.getTable ().addControlListener (new ControlAdapter () {
            public void controlResized (ControlEvent e);
        );
        referencedPathVariablesContent = new StringsContentProvider ();
        referencedPathVariables.setContentProvider (referencedPathVariablesContent);
        referencedPathVariables.setLabelProvider (new StringsLabelProvider (true));
        referencedPathVariables.setComparator (new StringsViewerComparator ());
        composite.addControlListener (new ControlAdapter () {
            public void controlResized (ControlEvent e);
        );
        pathVariables.getTable ().addMouseTrackListener (new MouseTrackAdapter () {
            public void mouseHover (MouseEvent e);
        );
        pathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
            public void selectionChanged (SelectionChangedEvent event);
        );
        referencedPathVariables.getTable ().addMouseTrackListener (new MouseTrackAdapter () {
            public void mouseHover (MouseEvent e);
        );
        referencedPathVariables.addSelectionChangedListener (new ISelectionChangedListener () {
            public void selectionChanged (SelectionChangedEvent event);
        );
        add.addSelectionListener (new SelectionListener () {
            public void widgetDefaultSelected (SelectionEvent e);
            public void widgetSelected (SelectionEvent e);
        );
        addAll.addSelectionListener (new SelectionListener () {
            public void widgetDefaultSelected (SelectionEvent e);
            public void widgetSelected (SelectionEvent e);
        );
        remove.addSelectionListener (new SelectionListener () {
            public void widgetDefaultSelected (SelectionEvent e);
            public void widgetSelected (SelectionEvent e);
        );
        removeAll.addSelectionListener (new SelectionListener () {
            public void widgetDefaultSelected (SelectionEvent e);
            public void widgetSelected (SelectionEvent e);
        );
        initializeContents ();
        pathVariableChangeListener = new IPathVariableChangeListener () {
            public void pathVariableChanged (IPathVariableChangeEvent event);
        ;
        ResourcesPlugin.getWorkspace ().getPathVariableManager ().addChangeListener (pathVariableChangeListener);
        disposed = false;
        applyDialogFont (composite);
        return composite;
public class PathmapsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
    private static class PathVariableContentProvider implements IStructuredContentProvider {
    private static class PathVariableLabelProvider implements IColorProvider, ITableLabelProvider {
    private static class PathVariableViewerComparator extends ViewerComparator {
    final private static class PathVariableEntry {
        public String toString ();
public class PersistElementCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public PersistElementCommand (View view) {
public class PersistElementCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public PersistElementCommand (TransactionalEditingDomain editingDomain, View view) {
public class PersistElementCommand extends AbstractTransactionalCommand {
public class PersistElementCommand extends AbstractTransactionalCommand {
    public PersistElementCommand (TransactionalEditingDomain editingDomain, View view, Map options) {
public class Plugin extends AbstractUIPlugin {
public class Plugin extends AbstractUIPlugin {
public class Plugin extends AbstractUIPlugin {
public class Plugin extends AbstractUIPlugin {
    public static String getBundleString (String key);
public class Plugin extends AbstractUIPlugin {
public class Plugin extends AbstractUIPlugin {
public class Plugin extends AbstractUIPlugin {
public class Plugin extends AbstractUIPlugin {
    final public static String GRAYED_ICON = "/icons/cview16/grayed.gif";
public class Plugin extends AbstractUIPlugin {
public class Plugin extends AbstractUIPlugin {
    public static IStatus createCancel (String message);
    public static IStatus createError (String message, Throwable ex);
    public static IStatus createInfo (String message);
    public static IStatus createStatus (int statusCode, String message, Throwable ex);
public class PointContainerXYLayoutEditPolicy extends AbstractDomainBasedXYLayoutEditPolicy {
    public PointContainerXYLayoutEditPolicy (IMapMode mapMode) {
public class PointContainerXYLayoutEditPolicy extends AbstractDomainBasedXYLayoutEditPolicy {
    public PointContainerXYLayoutEditPolicy (IMapMode mapMode, boolean isInsideFigure) {
public class PointImpl extends EObjectImpl implements Point {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class PointImpl extends EObjectImpl implements Point {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class PointItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PointItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PointItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public void notifyChanged (Notification notification);
public class PointItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class PointListUtilities {
public class PointListUtilities {
public class PolygonDecorationImpl extends PolygonImpl implements PolygonDecoration {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class PolygonDecorationImpl extends PolygonImpl implements PolygonDecoration {
public class PolygonDecorationImpl extends PolygonImpl implements PolygonDecoration {
public class PolygonDecorationImpl extends PolygonImpl implements PolygonDecoration {
    @Override
public class PolygonDecorationItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PolygonDecorationItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class PolygonDecorationItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolygonDecorationItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolygonDecorationItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolygonDecorationItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PolygonImpl extends PolylineImpl implements Polygon {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class PolygonImpl extends PolylineImpl implements Polygon {
public class PolygonImpl extends PolylineImpl implements Polygon {
public class PolygonImpl extends PolylineImpl implements Polygon {
    @Override
public class PolygonItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PolygonItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class PolygonItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolygonItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolygonItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolygonItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class Polyline2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class Polyline2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class Polyline2EditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    protected void refreshBounds ();
    public PolylineFigure getPrimaryShape (); public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public PolylineFigure () {
    final public static int VISUAL_ID = 2008;
    public void activate ();
public class Polyline2EditPart extends ShapeNodeEditPart {
    public org.eclipse.draw2d.Polyline getPrimaryShape (); final public static int VISUAL_ID = 3008;
public class Polyline2EditPart extends ShapeNodeEditPart {
public class Polyline2EditPart extends ShapeNodeEditPart {
public class Polyline2EditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 3008;
public class Polyline2EditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 3017;
public class Polyline2EditPart extends ShapeNodeEditPart {
public class Polyline2EditPart extends AbstractFigureEditPart {
public class Polyline2EditPart extends AbstractFigureEditPart {
public class Polyline2EditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
    protected void refreshBounds ();
    protected void removeSemanticListeners ();
    public void activate ();
public class Polyline2EditPart extends AbstractFigureEditPart {
public class Polyline2EditPart extends AbstractFigureEditPart {
public class Polyline2EditPart extends AbstractFigureEditPart {
public class Polyline2EditPart extends AbstractFigureEditPart {
    class DefaultSizeNodeFigureExt extends DefaultSizeNodeFigure {
        protected boolean useLocalCoordinates ();
public class Polyline2EditPart extends AbstractFigureEditPart {
    class DefaultSizeNodeFigureExt extends DefaultSizeNodeFigure {
public class Polyline2EditPart extends AbstractFigureEditPart {
    class DefaultSizeNodeFigureExt extends DefaultSizeNodeFigure {
        protected void paintFigure (Graphics graphics);
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class Polyline2EditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Polyline2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class Polyline2ViewFactory extends AbstractShapeViewFactory {
public class Polyline2ViewFactory extends AbstractShapeViewFactory {
public class Polyline2ViewFactory extends AbstractShapeViewFactory {
public class Polyline2ViewFactory extends AbstractShapeViewFactory {
public class Polyline2ViewFactory extends AbstractShapeViewFactory {
public class Polyline2ViewFactory extends AbstractShapeViewFactory {
public class Polyline3EditPart extends AbstractFigureEditPart {
    class DefaultSizeNodeFigureExt extends DefaultSizeNodeFigure {
public class Polyline3EditPart extends AbstractFigureEditPart {
    class DefaultSizeNodeFigureExt extends DefaultSizeNodeFigure {
        protected void paintFigure (Graphics graphics);
public class Polyline3EditPart extends ShapeNodeEditPart {
public class Polyline3EditPart extends AbstractFigureEditPart {
public class Polyline3EditPart extends AbstractFigureEditPart {
public class Polyline3EditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
    protected void refreshBounds ();
    protected void removeSemanticListeners ();
    public void activate ();
public class Polyline3EditPart extends AbstractFigureEditPart {
public class Polyline3EditPart extends AbstractFigureEditPart {
public class Polyline3EditPart extends AbstractFigureEditPart {
public class Polyline3EditPart extends AbstractFigureEditPart {
    class DefaultSizeNodeFigureExt extends DefaultSizeNodeFigure {
        protected boolean useLocalCoordinates ();
public class Polyline3ViewFactory extends AbstractShapeViewFactory {
public class Polyline3ViewFactory extends AbstractShapeViewFactory {
public class Polyline3ViewFactory extends AbstractShapeViewFactory {
public class Polyline3ViewFactory extends AbstractShapeViewFactory {
public class PolylineCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class PolylineCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class PolylineConnectionEx extends PolylineConnection implements IPolygonAnchorableFigure {
    public static class PointInfo {
        public boolean isPercentage = true;
        public double proj = 0.0;
        public int fromEnd;
        public int fromLine;
public class PolylineConnectionEx extends PolylineConnection implements IPolygonAnchorableFigure {
    protected ConnectionAnchor createDefaultAnchor ();
public class PolylineConnectionEx extends PolylineConnection implements IPolygonAnchorableFigure {
public class PolylineConnectionEx extends PolylineConnection implements IPolygonAnchorableFigure {
public class PolylineConnectionEx extends PolylineConnection implements IPolygonAnchorableFigure {
public class PolylineConnectionEx extends PolylineConnection implements IPolygonAnchorableFigure {
public class PolylineConnectionEx extends PolylineConnection {
public class PolylineConnectionEx extends PolylineConnection implements IPolygonAnchorableFigure {
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    public NotificationChain basicSetSourceDecoration (DecorationFigure newSourceDecoration, NotificationChain msgs);
    public NotificationChain basicSetTargetDecoration (DecorationFigure newTargetDecoration, NotificationChain msgs);
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    public DecorationFigure basicGetSourceDecoration ();
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    protected DecorationFigure sourceDecoration = null;
    protected DecorationFigure targetDecoration = null;
public class PolylineConnectionImpl extends PolylineImpl implements PolylineConnection {
    protected DecorationFigure sourceDecoration;
    protected DecorationFigure targetDecoration;
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addSourceDecorationPropertyDescriptor (Object object);
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PolylineConnectionItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class PolylineCreateCommand extends CreateElementCommand {
public class PolylineCreateCommand extends CreateElementCommand {
public class PolylineDecorationImpl extends PolylineImpl implements PolylineDecoration {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class PolylineDecorationImpl extends PolylineImpl implements PolylineDecoration {
public class PolylineDecorationImpl extends PolylineImpl implements PolylineDecoration {
public class PolylineDecorationImpl extends PolylineImpl implements PolylineDecoration {
    @Override
public class PolylineDecorationItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PolylineDecorationItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class PolylineDecorationItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineDecorationItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineDecorationItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineDecorationItemProvider extends PolylineItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class PolylineEditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    protected void refreshBounds ();
    public PolylineFigure getPrimaryShape (); public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public PolylineFigure () {
    final public static int VISUAL_ID = 2005;
    public void activate ();
public class PolylineEditPart extends ShapeNodeEditPart {
    public org.eclipse.draw2d.Polyline getPrimaryShape (); final public static int VISUAL_ID = 3005;
public class PolylineEditPart extends ShapeNodeEditPart {
public class PolylineEditPart extends ShapeNodeEditPart {
public class PolylineEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 3005;
public class PolylineEditPart extends ShapeNodeEditPart {
    final public static int VISUAL_ID = 3014;
public class PolylineEditPart extends ShapeNodeEditPart {
public class PolylineEditPart extends AbstractFigureEditPart {
public class PolylineEditPart extends AbstractFigureEditPart {
public class PolylineEditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
    protected void refreshBounds ();
    protected void removeSemanticListeners ();
    public void activate ();
public class PolylineEditPart extends AbstractFigureEditPart {
public class PolylineEditPart extends AbstractFigureEditPart {
    class DefaultSizeNodeFigureExt extends DefaultSizeNodeFigure {
        public Rectangle getBounds ();
        public void fireFigureMoved ();
        public void setBounds (Rectangle rect);
    public void refreshMainFigureBounds ();
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
public class PolylineEditPart extends AbstractFigureEditPart {
    public class PolylineFigure extends org.eclipse.draw2d.Polyline {
        public Rectangle getBounds ();
        public void primTranslate (int dx, int dy);
        public void setBounds (Rectangle rect);
public class PolylineImpl extends ShapeImpl implements Polyline {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class PolylineImpl extends ShapeImpl implements Polyline {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class PolylineImpl extends ShapeImpl implements Polyline {
    protected EClass eStaticClass (); protected EList template = null;
    public EList getTemplate ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class PolylineImpl extends ShapeImpl implements Polyline {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < Point > template = null;
    public EList < Point > getTemplate ();
public class PolylineImpl extends ShapeImpl implements Polyline {
    protected EList < Point > template = null;
public class PolylineImpl extends ShapeImpl implements Polyline {
    protected EList < Point > template;
public class PolylineItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PolylineItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class PolylineItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PolylineItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class PolylineItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class PolylineViewFactory extends AbstractShapeViewFactory {
public class PolylineViewFactory extends AbstractShapeViewFactory {
public class PolylineViewFactory extends AbstractShapeViewFactory {
public class PolylineViewFactory extends AbstractShapeViewFactory {
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
    protected List imagesToBeDisposed = new ArrayList ();
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
    protected List imagesToBeDisposed = null;
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
    protected void addActionBarDescriptor (IElementType elementType, Image theImage);
    protected void addActionBarDescriptor (IElementType elementType, Image theImage, CreateRequest theRequest);
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
    private class PopupBarLabelHandle extends Label implements Handle {
public class PopupBarEditPolicy extends DiagramAssistantEditPolicy {
    private class PopupBarLabelHandle extends Label implements Handle {
public class PopupMenuCommand extends AbstractCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    protected CommandResult doRedo ();
    public boolean isRedoable ();
public class PopupMenuCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public boolean canRedo ();
public class PopupMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PopupMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class PopupMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PopupMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PrecisionPointList extends PointList {
public class PrecisionPointList extends PointList {
public class PredefinedItemItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PredefinedItemItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class PredefinedItemItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PredefinedItemItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PredefinedMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class PredefinedMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class PredefinedMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PredefinedMenuItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class PreferencesHint {
    final public static PreferencesHint MODELING = new PreferencesHint ("MODELING");
public class PreferencesHint {
class PrinterBlock extends DialogBlock {
class PrinterBlock extends DialogBlock {
    @Override
public class PrinterGraphics extends org.eclipse.draw2d.PrinterGraphics {
    public void setLineWidth (int width);
public class PrinterGraphics extends org.eclipse.draw2d.PrinterGraphics {
public class PrinterGraphics extends org.eclipse.draw2d.PrinterGraphics {
public class PrinterGraphics extends org.eclipse.draw2d.PrinterGraphics {
    public void popState ();
    public void pushState ();
public class PrintHelper implements IPrintHelper {
public class PrintHelper implements IPrintHelper {
    @SuppressWarnings("unchecked")
package org.eclipse.gmf.runtime.diagram.ui.printing.render.util;
public class PrintHelper implements IPrintHelper {
    @SuppressWarnings("unchecked")
    public void setDlgOrientation (boolean landscape);
    public void setDlgPaperSize (int index, double width, double length);
package org.eclipse.gmf.runtime.common.ui.printing;
public class PrintHelper implements IPrintHelper {
    native public static boolean getCollate ();
    native public static boolean getDiagramPrintRangeAll ();
    native public static boolean getDiagramPrintRangeCurrent ();
    native public static boolean getDiagramPrintRangeSelection ();
    native public static boolean getPrintRangeAll ();
    native public static boolean getPrintRangePages ();
    native public static boolean isDiagramSelected (int index);
    native public static boolean open (PrinterData pd);
    native public static int getNumberOfCopies ();
    native public static int getPagesFrom ();
    native public static int getPagesTo ();
    native public static int getScaleFitToM ();
    native public static int getScaleFitToN ();
    native public static int getScalePercent ();
    native public static void addDiagramString (String string);
    native public static void initScaleFitTo (int m, int n);
    native public static void initScalePercent (int percent);
    native public static void resetDialog ();
    native public static void setHwndOwner (String windowClass, String title);
public class PrintHelper implements IPrintHelper {
public class PrintHelper implements IPrintHelper {
    native public static void setOrientation (boolean isLandscape);
    native public static void setPaperSize (int index, double width, double height);
    public void setDlgOrientation (boolean bLandscape);
    public void setDlgPaperSize (int index, double width, double height);
public class PrintHelper implements IPrintHelper {
public class PrintHelper implements IPrintHelper {
    public void setScaleFactor (int scaleFactor);
    public void setScaleToWidthHeight (int width, int height);
public class PrintOptions extends PrintModelElement {
public class PrintOptions extends PrintModelElement {
    public boolean isDiagramCurrent ();
    public static String PROPERTY_DIAGRAM_CURRENT = "diagramCurrent";
    public static String PROPERTY_DIAGRAM_SELECTION = "diagramSelection";
    public void setDiagramCurrent (boolean diagramCurrent);
    public void setDiagramSelection (boolean diagramSelection);
public class PrintPreviewAction extends Action {
public class PrintPreviewAction extends Action {
    protected void setPrintActionHelper (IPrintActionHelper printActionHelper);
    protected void setPrintPreviewHelper (PrintPreviewHelper printPreviewHelper);
    public PrintPreviewAction (IPrintActionHelper printActionHelper) {
public class PrintPreviewAction extends Action {
    public PrintPreviewAction (IPrintActionHelper printActionHelper, PrintPreviewHelper printPreviewHelper) {
public class PrintPreviewAction extends Action {
    protected PrintPreviewAction (IPrintActionHelper printActionHelper, PrintPreviewHelper printPreviewHelper) {
public class PrintPreviewAction extends Action {
public class PrintPreviewAction extends Action {
public class PrintPreviewAction extends Action {
public class PrintPreviewAction extends Action {
public class PrintPreviewHelper {
    protected int totalNumberOfColumns = - 1;
    protected int totalNumberOfRows = - 1;
public class PrintPreviewHelper {
public class PrintPreviewHelper {
public class PrintPreviewHelper {
    protected boolean enablePrinting = true;
    public void enablePrinting (boolean enablePrinting);
public class PrintPreviewHelper {
public class PrintPreviewHelper {
    protected double userScale = 1;
    public void setUserScale (double userScale);
public class PrintPreviewHelper {
    public void setUserScale (double userScale);
public class PrintPreviewHelper {
    private class FitToPagesDialog extends Dialog {
        @Override
        protected void okPressed ();
        protected Control createDialogArea (Composite parent);
        protected void configureShell (Shell newShell);
        public FitToPagesDialog (Shell parent) {
            super (parent);
        public int getPagesTall ();
        public int getPagesWide ();
    public void setFitToPage (int width, int height);
    public void setPercentScaling (int userScale);
public class PrintPreviewHelper {
public class PrintPreviewHelper {
    public PrintPreviewHelper (IMapMode mm) {
public class PrintPreviewHelper {
    public PrintPreviewHelper (IMapMode mm) {
public class PrintPreviewHelper {
public class PromptForConnectionAndEndCommand extends PopupMenuCommand {
    public boolean isExecutable ();
public class PromptForConnectionAndEndCommand extends PopupMenuCommand {
    public boolean canExecute ();
public class PromptingDeleteFromModelAction extends DeleteFromModelAction {
public class PromptingDeleteFromModelAction extends DeleteFromModelAction {
    public PromptingDeleteFromModelAction (IWorkbenchPage workbenchPage, boolean fromContextMenu) {
public interface Properties {
public interface Properties {
    public static String ID_TEXT_ALIGNMENT = PackageUtil.getID (NotationPackage.eINSTANCE.getTextStyle_TextAlignment ());
public interface Properties {
public interface Properties {
    public static String ID_ARROW_SOURCE = PackageUtil.getID (NotationPackage.eINSTANCE.getArrowStyle_ArrowSource ());
    public static String ID_ARROW_TARGET = PackageUtil.getID (NotationPackage.eINSTANCE.getArrowStyle_ArrowTarget ());
    public static String ID_LINE_TYPE = PackageUtil.getID (NotationPackage.eINSTANCE.getLineTypeStyle_LineType ());
    public static String ID_LINE_WIDTH = PackageUtil.getID (NotationPackage.eINSTANCE.getLineStyle_LineWidth ());
public class PropertiesBrowserPage extends TabbedPropertySheetPage implements IDemuxedMListener, IPropertyChangeListener {
    public void handleElementCreatedEvent (Notification notification, EObject owner, EObject newElement);
    public void handleElementDeletedEvent (Notification notification, EObject owner, EObject oldElement);
    public void handleElementModifiedEvent (Notification notification, EObject element);
    public void handleResourceDirtiedEvent (Notification notification, Resource resource);
    public void handleResourceExportedEvent (Notification notification, Resource resource);
    public void handleResourceImportedEvent (Notification notification, Resource resource);
    public void handleResourceLoadedEvent (Notification notification, Resource resource);
    public void handleResourceSavedEvent (Notification notification, Resource resource);
    public void handleResourceUnloadedEvent (Notification notification, Resource resource, EObject modelRoot);
    public void handleUndoIntervalClosedEvent (Notification notification, MUndoInterval undoInterval);
public class PropertiesBrowserPage extends TabbedPropertySheetPage implements IPropertyChangeListener {
public class PropertiesService extends Service implements IPropertiesProvider {
    class ModifiersService extends Service {
public class PropertiesService extends Service implements IPropertiesProvider {
    static class ModifiersService extends Service {
public class PropertiesSetStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PropertiesSetStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PropertiesSetStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PropertiesSetStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class PropertyChangeAction extends DiagramAction {
abstract public class PropertyChangeAction extends DiagramAction {
abstract public class PropertyChangeContributionItem extends CustomContributionItem {
abstract public class PropertyChangeContributionItem extends CustomContributionItem {
abstract public class PropertyChangeContributionItem extends CustomContributionItem {
abstract public class PropertyChangeContributionItem extends CustomContributionItem {
abstract public class PropertyChangeContributionItem extends PresentationContributionItem {
abstract public class PropertyChangeContributionItem extends CustomContributionItem {
public class PropertyHandlerEditPolicy extends AbstractEditPolicy {
public class PropertyHandlerEditPolicy extends AbstractEditPolicy {
public class PropertyHandlerEditPolicy extends AbstractEditPolicy {
public class PropertyHandlerEditPolicy extends AbstractEditPolicy {
public class PropertyPageCellEditor extends DialogCellEditor {
public class PropertyPageCellEditor extends DialogCellEditor {
public class PropertyPageCellEditor extends DialogCellEditor {
    private ModifyListener getModifyListener ();
    protected Control createContents (Composite cell);
    protected void doSetFocus ();
    protected void doSetValue (Object aValue);
    protected void editOccured (ModifyEvent e);
public class PropertyPageCellEditor extends MultiButtonCellEditor {
public class PropertyPageCellEditor extends MultiButtonCellEditor {
public class PropertyPageCellEditor extends MultiButtonCellEditor {
public class PropertySheetHandler {
public class PropertySheetHandler {
    @SuppressWarnings("unchecked")
public class PropertySheetHandler {
    @SuppressWarnings("unchecked")
public class PropertySheetHandler {
public class PropertySource implements IExtendedPropertySource {
    final protected static String PROPERTY_ID_DESCRIPTOR_ERROR = PSFResourceManager.getI18NString ("PropertySource._ERROR_.descriptorError");
public class PropertySource implements IExtendedPropertySource {
public class PropertyValueImpl extends FlatEObjectImpl implements PropertyValue {
public class PropertyValueImpl extends NotationObjectImpl implements PropertyValue {
public class PropertyValueImpl extends NotationObjectImpl implements PropertyValue {
public class PropertyValueImpl extends NotationEObjectImpl implements PropertyValue {
public class PropertyValueItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PropertyValueItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PropertyValueItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class PropertyValueItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ProviderContributionDescriptor extends AbstractProviderConfiguration {
public class ProviderContributionDescriptor extends AbstractProviderConfiguration {
    public static class PopupPredefinedItemDescriptor extends AbstractContributionItemDescriptor {
        public PopupPredefinedItemDescriptor (IConfigurationElement configElement) {
        public String getPath ();
        public boolean isToBeRemoved ();
public class ProviderContributionDescriptor extends AbstractProviderConfiguration {
    abstract private static class AbstractPartContributionItemDescriptor extends AbstractContributionItemDescriptor {
    abstract private static class AbstractPopupContributionItemDescriptor extends AbstractContributionItemDescriptor {
public class ProviderContributionDescriptor extends AbstractProviderConfiguration {
    abstract private static class AbstractPartContributionItemDescriptor extends AbstractContributionItemDescriptor implements IPartSelector {
        public boolean selects (IWorkbenchPart part);
    abstract private static class AbstractPopupContributionItemDescriptor extends AbstractContributionItemDescriptor implements IPartSelector {
        public boolean selects (IWorkbenchPart part);
public class ProviderContributionDescriptor extends AbstractProviderConfiguration {
    abstract private static class AbstractPopupContributionItemDescriptor extends AbstractContributionItemDescriptor implements IPartSelector {
public class ProviderContributionDescriptor extends AbstractProviderConfiguration {
    abstract public static class AbstractPopupContributionItemDescriptor extends AbstractContributionItemDescriptor implements IPartSelector {
public class ProxiesResolveConstraint extends AbstractModelConstraint {
    final public static String DIAGNOSTIC_SOURCE = MSLPlugin.getPluginId ();
public class ProxiesResolveConstraint extends AbstractModelConstraint {
    final public static String DIAGNOSTIC_SOURCE = EMFCorePlugin.getPluginId ();
public class PSFCommonUIPlugin extends XToolsUIPlugin {
    final protected static String PROPERTY_MODIFIERS_EXT_P_NAME = "propertyModifiers";
    final protected static String PROPERTY_PROVIDERS_EXT_P_NAME = "propertiesProviders";
public class PSFCommonUIPlugin extends XToolsUIPlugin {
public class PSFCommonUIPlugin extends XToolsUIPlugin {
public class PSFCommonUIPlugin extends XToolsUIPlugin {
public class PSFCommonUIPlugin extends XToolsUIPlugin {
public class PSFCommonUIPlugin extends AbstractUIPlugin {
class PureGEFFigureQualifiedNameSwitch extends GMFGraphSwitch implements FigureQualifiedNameSwitch {
    protected void collectDependencies (FigureGallery gallery, UniqueEList result);
    public Object caseBorderLayout (BorderLayout object);
    public Object caseCustomClass (CustomClass object);
    public Object caseEllipse (Ellipse object);
    public Object caseFlowLayout (FlowLayout object);
    public Object caseLabel (Label object);
    public Object caseLabeledContainer (LabeledContainer object);
    public Object casePolygon (Polygon object);
    public Object casePolygonDecoration (PolygonDecoration object);
    public Object casePolyline (Polyline object);
    public Object casePolylineConnection (PolylineConnection object);
    public Object casePolylineDecoration (PolylineDecoration object);
    public Object caseRectangle (Rectangle object);
    public Object caseRoundedRectangle (RoundedRectangle object);
    public Object caseScalablePolygon (ScalablePolygon object);
    public Object caseStackLayout (StackLayout object);
    public Object caseXYLayout (XYLayout object);
class PureGEFFigureQualifiedNameSwitch extends GMFGraphSwitch < String > implements FigureQualifiedNameSwitch {
    public String caseBorderLayout (BorderLayout object);
    public String caseCustomClass (CustomClass object);
    public String caseEllipse (Ellipse object);
    public String caseFlowLayout (FlowLayout object);
    public String caseLabel (Label object);
    public String caseLabeledContainer (LabeledContainer object);
    public String casePolygon (Polygon object);
    public String casePolygonDecoration (PolygonDecoration object);
    public String casePolyline (Polyline object);
    public String casePolylineConnection (PolylineConnection object);
    public String casePolylineDecoration (PolylineDecoration object);
    public String caseRectangle (Rectangle object);
    public String caseRoundedRectangle (RoundedRectangle object);
    public String caseScalablePolygon (ScalablePolygon object);
    public String caseStackLayout (StackLayout object);
    public String caseXYLayout (XYLayout object);
class PureGEFFigureQualifiedNameSwitch extends GMFGraphSwitch < String > implements FigureQualifiedNameSwitch {
class PureGEFFigureQualifiedNameSwitch extends GMFGraphSwitch < String > implements FigureQualifiedNameSwitch {
    public String caseGridLayout (GridLayout object);
class PureGEFFigureQualifiedNameSwitch extends GMFGraphSwitch < String > implements FigureQualifiedNameSwitch {
@Deprecated
class PureGEFFigureQualifiedNameSwitch extends GMFGraphSwitch < String > implements FigureQualifiedNameSwitch {
public class RadialProvider extends AbstractLayoutProvider {
public class RadialProvider extends AbstractLayoutEditPartProvider {
public class RadialProvider extends AbstractLayoutEditPartProvider {
    protected static class OffsetRadialPartsCommand extends AbstractModelCommand {
        protected CommandResult doExecute (IProgressMonitor progressMonitor);
        public OffsetRadialPartsCommand (List editParts) {
public class RadialProvider extends AbstractLayoutEditPartProvider {
    protected static class OffsetRadialPartsCommand extends AbstractTransactionalCommand {
        protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
        public OffsetRadialPartsCommand (TransactionalEditingDomain editingDomain, List editParts) {
public class RadialProvider extends AbstractLayoutProvider {
    protected static class RadialLayout {
        protected Command routeConnector (ConnectionNodeEditPart connectorEP);
public class RadialProvider extends AbstractLayoutProvider {
    protected static class RadialLayout {
        protected Command routeConnection (ConnectionNodeEditPart connectionEP);
interface Ratio extends LayoutConstraint {
interface Ratio extends LayoutConstraint, NotationObject {
interface Ratio extends LayoutConstraint, NotationObject {
interface Ratio extends LayoutConstraint {
public class RatioImpl extends EObjectImpl implements Ratio {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class RatioImpl extends EObjectImpl implements Ratio {
    public void eSet (int featureID, Object newValue);
public class RatioImpl extends EObjectImpl implements Ratio {
public class RatioImpl extends FlatEObjectImpl implements Ratio {
public class RatioImpl extends FlatEObjectImpl implements Ratio {
public class RatioImpl extends NotationObjectImpl implements Ratio {
public class RatioImpl extends NotationObjectImpl implements Ratio {
public class RatioImpl extends NotationEObjectImpl implements Ratio {
public class RatioItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RatioItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RatioItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RatioItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RecalculatePageBreaksAction extends PresentationAction {
public class RecalculatePageBreaksAction extends DiagramAction {
public class Reconciler {
public class Reconciler {
public class Reconciler {
    private class MatchingSession {
        public MatchingSession () {
        public void match (Collection < EObject > currents, Collection < EObject > olds, Collection < Pair > output);
    private static class Pair {
        public EObject current;
        public EObject old;
public class Reconciler {
    private static class Pair {
        public Pair (EObject cur, EObject old) {
        final public EObject current;
        final public EObject old;
    protected void registerMatch (EObject current, EObject old);
public class Reconciler {
public class Reconciler {
    private class MatchingSession {
        public MatchingSession (PairsPool pool) {
        public void match (Collection currents, Collection olds, Collection output);
        public void releasePair (Pair pair);
    private static class Pair {
        public EObject current;
        public EObject old;
        public void reset ();
    private static class PairsPool extends AbstractPool {
        protected Object createNew ();
        public Pair acquire ();
        public PairsPool (int capacity) {
        public void release (Pair pair);
    private static class StoragePool extends AbstractPool {
        protected Object createNew ();
        public List acquireList ();
        public StoragePool (int capacity) {
        public void release (List list);
public class Reconciler {
    private class MatchingSession {
    private static class StoragePool extends AbstractPool {
        protected Object createNew ();
        public List acquireList ();
        public StoragePool (int capacity) {
        public void release (List list);
public class Reconciler {
    private class MatchingSession {
public class Reconciler {
    private class MatchingSession {
        public MatchingSession (PairsPool pool) {
        public void match (Collection currents, Collection olds, Collection < Pair > output);
        public void releasePair (Pair pair);
    private static class Pair {
        public void reset ();
    private static class PairsPool extends AbstractPool {
        protected Object createNew ();
        public Pair acquire ();
        public PairsPool (int capacity) {
        public void release (Pair pair);
    public void reconcileResource (Resource current, Resource old);
    public void reconcileTree (EObject currentRoot, EObject oldRoot);
public class Reconciler {
    @SuppressWarnings("unchecked")
    public void reconcileResource (Resource current, Resource old);
    @SuppressWarnings("unchecked")
    public void reconcileTree (EObject currentRoot, EObject oldRoot); private class MatchingSession {
        public MatchingSession () {
        public void match (Collection < EObject > currents, Collection < EObject > olds, Collection < Pair > output);
    private static class Pair {
public class Reconciler {
    @SuppressWarnings("unchecked")
    public void reconcileResource (Resource current, Resource old);
    @SuppressWarnings("unchecked")
public class Reconciler {
    public void reconcileResource (Resource current, Resource old);
    public void reconcileTree (EObject currentRoot, EObject oldRoot);
public class ReconcilerConfigBase implements ReconcilerConfig {
public class ReconcilerConfigBase implements ReconcilerConfig {
public class ReconcilerConfigBase implements ReconcilerConfig {
    private static class EClassRecord {
public class ReconcilerConfigBase implements ReconcilerConfig {
    private static class EClassRecord {
public class ReconcilerConfigBase implements ReconcilerConfig {
    private static class EClassRecord {
public class ReconcilerConfigBase implements ReconcilerConfig {
    private static class EClassRecord {
public class Rectangle2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class Rectangle2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3002;
public class Rectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3011;
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
public class Rectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 2002;
public class Rectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3002;
public class Rectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    private static class CreateEllipse_3003Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateEllipse_3003Command (CreateElementRequest req) {
    private static class CreatePolyline_3005Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreatePolyline_3005Command (CreateElementRequest req) {
    private static class CreateRectangle_3002Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRectangle_3002Command (CreateElementRequest req) {
    private static class CreateRoundedRectangle_3004Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRoundedRectangle_3004Command (CreateElementRequest req) {
public class Rectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Rectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class Rectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class Rectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class Rectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class Rectangle2ViewFactory extends AbstractShapeViewFactory {
public class Rectangle2ViewFactory extends AbstractShapeViewFactory {
public class Rectangle2ViewFactory extends AbstractShapeViewFactory {
public class Rectangle2ViewFactory extends AbstractShapeViewFactory {
public class Rectangle3EditPart extends AbstractFigureEditPart {
public class Rectangle3EditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
public class Rectangle3EditPart extends AbstractFigureEditPart {
public class Rectangle3EditPart extends AbstractFigureEditPart {
public class Rectangle3EditPart extends AbstractFigureEditPart {
public class Rectangle3EditPart extends AbstractFigureEditPart {
public class Rectangle3EditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
public class Rectangle3EditPart extends AbstractFigureEditPart {
public class Rectangle3ViewFactory extends AbstractShapeViewFactory {
public class Rectangle3ViewFactory extends AbstractShapeViewFactory {
public class Rectangle3ViewFactory extends AbstractShapeViewFactory {
public class Rectangle3ViewFactory extends AbstractShapeViewFactory {
public class RectangleCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class RectangleCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3001;
public class RectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3010;
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends AbstractFigureEditPart {
public class RectangleEditPart extends GeoShapeEditPart {
public class RectangleEditPart extends GeoShapeEditPart {
    protected void setLineType (int lineType);
public class RectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 2001;
public class RectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3001;
public class RectangleImpl extends ShapeImpl implements Rectangle {
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
public class RectangleImpl extends ShapeImpl implements Rectangle {
public class RectangleImpl extends ShapeImpl implements Rectangle {
public class RectangleImpl extends ShapeImpl implements Rectangle {
    @Override
public class RectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class RectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class RectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    private static class CreateEllipse_3003Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateEllipse_3003Command (CreateElementRequest req) {
    private static class CreatePolyline_3005Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreatePolyline_3005Command (CreateElementRequest req) {
    private static class CreateRectangle_3002Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRectangle_3002Command (CreateElementRequest req) {
    private static class CreateRoundedRectangle_3004Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRoundedRectangle_3004Command (CreateElementRequest req) {
public class RectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class RectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class RectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class RectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class RectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class RectangleViewFactory extends AbstractShapeViewFactory {
public class RectangleViewFactory extends AbstractShapeViewFactory {
public class RectangleViewFactory extends AbstractShapeViewFactory {
public class RectangleViewFactory extends AbstractShapeViewFactory {
public class RectangleViewFactory extends AbstractShapeViewFactory {
public class RectangleViewFactory extends AbstractShapeViewFactory {
public class RectangularDropShadow {
public class RectangularDropShadow {
public class RectilinearRouter extends ObliqueRouter implements OrthogonalRouter {
    protected boolean checkEndSegment (Connection conn, ConnectionAnchor anchor, Point ptNext, int offset);
    protected boolean checkEndSegments (Connection conn, PointList newLine);
    protected boolean removeSegmentsInViews (Connection conn, PointList newLine);
    protected boolean updateToBiTerminal (Connection conn, PointList newLine);
    protected void resetEndPointsToEdge (Connection conn, PointList newLine);
    protected void straightenPoints (PointList newLine);
public class RectilinearRouter extends ObliqueRouter implements OrthogonalRouter {
public class RectilinearRouter extends ObliqueRouter implements OrthogonalRouter {
public class RectilinearRouter extends ObliqueRouter implements OrthogonalRouter {
    protected boolean checkEndSegment (Connection conn, ConnectionAnchor anchor, Point ptNext, int offset);
    protected boolean checkEndSegments (Connection conn, PointList newLine);
    protected boolean removeSegmentsInViews (Connection conn, PointList newLine);
    protected boolean updateToBiTerminal (Connection conn, PointList newLine);
    protected void resetEndPointsToEdge (Connection conn, PointList newLine);
    protected void straightenPoints (PointList newLine);
public class RectilinearRouter extends ObliqueRouter implements OrthogonalRouter {
    protected boolean checkEndSegment (Connection conn, ConnectionAnchor anchor, Point ptNext, int offset);
    protected boolean checkEndSegments (Connection conn, PointList newLine);
    protected boolean removeSegmentsInViews (Connection conn, PointList newLine);
    protected boolean updateToBiTerminal (Connection conn, PointList newLine);
    protected void resetEndPointsToEdge (Connection conn, PointList newLine);
    protected void straightenPoints (PointList newLine);
public class RectilinearRouter extends ObliqueRouter implements OrthogonalRouter {
public class ReferenceNewElementSpecImpl extends EObjectImpl implements ReferenceNewElementSpec {
    protected EList < FeatureSeqInitializer > newElementInitializers = null;
    protected EStructuralFeature feature = null;
public class ReferenceNewElementSpecImpl extends EObjectImpl implements ReferenceNewElementSpec {
    protected EList < FeatureSeqInitializer > newElementInitializers;
    protected EStructuralFeature feature;
public class ReferenceNewElementSpecImpl extends EObjectImpl implements ReferenceNewElementSpec {
public class ReferenceNewElementSpecImpl extends EObjectImpl implements ReferenceNewElementSpec {
    public void setFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer);
public class ReferenceNewElementSpecImpl extends EObjectImpl implements ReferenceNewElementSpec {
    @Override
    protected EStructuralFeature feature;
    public EStructuralFeature basicGetFeature ();
    public EStructuralFeature getFeature ();
    public FeatureSeqInitializer getFeatureSeqInitializer ();
    public NotificationChain basicSetFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs);
    public void setFeature (EStructuralFeature newFeature);
    public void setFeatureSeqInitializer (FeatureSeqInitializer newFeatureSeqInitializer);
public class ReferenceNewElementSpecImpl extends FeatureInitializerImpl implements ReferenceNewElementSpec {
public class ReferenceNewElementSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public void notifyChanged (Notification notification);
public class ReferenceNewElementSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class ReferenceNewElementSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ReferenceNewElementSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ReferenceNewElementSpecItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ReferenceNewElementSpecItemProvider extends FeatureInitializerItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ReflectiveMatcher implements Matcher {
    public ReflectiveMatcher (EClass reflectorOwner, Reflector reflector) {
    public interface Reflector {
        public Object reflect (EObject target);
    public static class StructuralFeatureReflector implements Reflector {
        public Object reflect (EObject target);
        public StructuralFeatureReflector (EStructuralFeature feature) {
public class ReflectiveMatcher implements Matcher {
public class RefreshEditPartCommand extends AbstractCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    protected CommandResult doRedo ();
    public boolean isRedoable ();
    public boolean isUndoable ();
public class RefreshEditPartCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public boolean canRedo ();
    public boolean canUndo ();
interface RelativeBendpoints extends Bendpoints {
interface RelativeBendpoints extends Bendpoints, NotationObject {
interface RelativeBendpoints extends Bendpoints, NotationObject {
interface RelativeBendpoints extends Bendpoints {
public class RelativeBendpointsImpl extends EObjectImpl implements RelativeBendpoints {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class RelativeBendpointsImpl extends EObjectImpl implements RelativeBendpoints {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class RelativeBendpointsImpl extends EObjectImpl implements RelativeBendpoints {
public class RelativeBendpointsImpl extends FlatEObjectImpl implements RelativeBendpoints {
public class RelativeBendpointsImpl extends FlatEObjectImpl implements RelativeBendpoints {
public class RelativeBendpointsImpl extends NotationObjectImpl implements RelativeBendpoints {
public class RelativeBendpointsImpl extends NotationObjectImpl implements RelativeBendpoints {
public class RelativeBendpointsImpl extends NotationEObjectImpl implements RelativeBendpoints {
public class RelativeBendpointsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RelativeBendpointsItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RelativeBendpointsItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RelativeBendpointsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RelativeToBorderLocator implements Locator {
public class RelativeToBorderLocator implements Locator {
    protected IFigure reference;
    protected int direction;
public class RenderedDiagramPrinter extends DiagramPrinter {
public class RenderedDiagramPrinter extends DiagramPrinter {
    public RenderedDiagramPrinter (PreferencesHint preferencesHint, IMapMode mm) {
public class RenderedDiagramPrinter extends DiagramPrinter {
public class RenderedDiagramPrinter extends DiagramPrinter {
    protected MapModeGraphics createMapModeGraphics (Graphics theGraphics);
public class RenderedDiagramPrinter extends DiagramPrinter {
public class RenderedDiagramPrinter extends SWTDiagramPrinter {
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
    protected static class DiagramRenderedScalableFreeformLayeredPane extends DiagramScalableFreeformLayeredPane implements AnimatedZoomListener {
        protected MapModeGraphics createMapModeGraphics (Graphics graphics);
        protected ScaledGraphics createScaledGraphics (MapModeGraphics gMM);
        public void animatedZoomEnded ();
        public void animatedZoomStarted ();
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
    protected static class DiagramRenderedScalableFreeformLayeredPane extends DiagramScalableFreeformLayeredPane implements AnimatedZoomListener {
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
    protected static class DiagramRenderedScalableFreeformLayeredPane extends DiagramScalableFreeformLayeredPane implements AnimatedZoomListener {
        public DiagramRenderedScalableFreeformLayeredPane (IMapMode mm) {
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
    public RenderedDiagramRootEditPart () {
    public RenderedDiagramRootEditPart (MeasurementUnit mu) {
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
public class RenderedDiagramRootEditPart extends DiagramRootEditPart {
public interface RenderedImage {
public interface RenderedImage extends IAdaptable {
    public boolean isRendered ();
public interface RenderedImage extends IAdaptable {
public interface RenderedImage extends IAdaptable {
public class RenderedImageFactory {
public class RenderedImageFactory {
public class RenderedImageFactory {
public class RenderedImageFactory {
    public static RenderedImage getRelatedInstance (RenderedImage image, RenderInfo info);
public class RenderedImageFactory {
public class RenderedImageFactory {
public class RenderedImageFactory {
public class RenderedImageFactory {
final public class RenderedImageKey implements RenderInfo {
    public RenderedImageKey (long checksum, RenderInfo info) {
final public class RenderedImageKey implements RenderInfo {
    public RenderedImageKey (long checksum, RenderInfo info, Object extraData) {
final public class RenderedImageKey implements RenderInfo {
    public Color getFillColor ();
    public RenderInfo getRenderInfo ();
    public RenderedImageKey (long checksum, RenderInfo info, Object extraData) {
    public boolean shouldAntiAlias ();
    public boolean shouldMaintainAspectRatio ();
    public int getHeight ();
    public void setValues (int width, int height, Color fill, Color outline, boolean maintainAspectRatio, boolean antialias);
final public class RenderedImageKey extends RenderInfoImpl {
    public RenderedImageKey () {
    public RenderedImageKey (RenderInfo info) {
    public RenderedImageKey (RenderInfo info, long checksum, Object extraData) {
final public class RenderedImageKey extends RenderInfoImpl {
final public class RenderedImageKey extends RenderInfoImpl {
    public void setValues (int width, int height, boolean maintainAspectRatio, boolean antialias, RGB fill, RGB outline);
final public class RenderedImageKey extends RenderInfoImpl {
final public class RenderedImageKey extends RenderInfoImpl {
    public RenderedImageKey (RenderInfo info, long checksum, Object extraData, String url) {
public class RenderedMapModeGraphics extends MapModeGraphics implements DrawableRenderedImage {
    public RenderedMapModeGraphics (Graphics g) {
public class RenderedMapModeGraphics extends MapModeGraphics implements DrawableRenderedImage {
    public RenderedMapModeGraphics (Graphics g, IMapMode mm) {
public class RenderedMapModeGraphics extends MapModeGraphics implements DrawableRenderedImage {
    public void drawRenderedImage (RenderedImage srcImage, int x, int y, int width, int height);
public class RenderedMapModeGraphics extends MapModeGraphics implements DrawableRenderedImage {
public class RenderedMapModeGraphics extends MapModeGraphics implements DrawableRenderedImage {
public class RenderedMapModeGraphics extends MapModeGraphics implements DrawableRenderedImage {
    public Dimension getMaximumRenderSize ();
    public RenderedMapModeGraphics (Graphics g, IMapMode mm, boolean allowDelayRender, Dimension maximumRenderSize) {
    public boolean shouldAllowDelayRender ();
public class RenderedPrinterGraphics extends PrinterGraphics implements DrawableRenderedImage {
    public void drawRenderedImage (RenderedImage srcImage, int x, int y, int width, int height);
public class RenderedPrinterGraphics extends PrinterGraphics implements DrawableRenderedImage {
public class RenderedPrinterGraphics extends PrinterGraphics implements DrawableRenderedImage {
public class RenderedPrinterGraphics extends PrinterGraphics implements DrawableRenderedImage {
    public Dimension getMaximumRenderSize ();
    public boolean shouldAllowDelayRender ();
public class RenderedPrintPreviewHelper extends PrintPreviewHelper {
public class RenderedPrintPreviewHelper extends PrintPreviewHelper {
    public RenderedPrintPreviewHelper (IMapMode mm) {
public class RenderedPrintPreviewHelper extends PrintPreviewHelper {
    public RenderedPrintPreviewHelper () {
    public RenderedPrintPreviewHelper (IMapMode mm) {
public class RenderedPrintPreviewHelper extends PrintPreviewHelper {
public class RenderedScaledGraphics extends org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.ScaledGraphics implements DrawableRenderedImage {
public class RenderedScaledGraphics extends org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.ScaledGraphics implements DrawableRenderedImage {
    public Dimension getMaximumRenderSize ();
    public RenderedScaledGraphics (Graphics g, boolean allowDelayRender, Dimension maximumRenderSize) {
    public boolean shouldAllowDelayRender ();
    public void scale (double amount);
public interface RenderInfo {
    abstract public Color getFillColor ();
    abstract public void setValues (int width, int height, Color fill, Color outline, boolean maintainAspectRatio, boolean antialias);
public interface RenderInfo {
    abstract public RGB getBackgroundColor ();
    abstract public java.awt.Color getFillColor ();
    abstract public java.awt.Color getOutlineColor ();
    abstract public void setValues (int width, int height, boolean maintainAspectRatio, boolean antialias, RGB background, RGB foreground);
    abstract public void setValues (int width, int height, java.awt.Color fill, java.awt.Color outline, boolean maintainAspectRatio, boolean antialias);
public interface RenderInfo {
    abstract public java.awt.Color getFillColor ();
    abstract public void setValues (int width, int height, java.awt.Color fill, java.awt.Color outline, boolean maintainAspectRatio, boolean antialias);
public interface RenderInfo {
final public class RenderInfoImpl implements RenderInfo {
    public Color getFillColor ();
    public void setValues (int width, int height, Color fill, Color outline, boolean maintainAspectRatio, boolean antialias);
class RenderInfoImpl implements RenderInfo {
    public RGB getBackgroundColor ();
    public java.awt.Color getFillColor ();
    public java.awt.Color getOutlineColor ();
    public void setValues (int width, int height, boolean maintainAspectRatio, boolean antialias, RGB fill, RGB outline);
    public void setValues (int width, int height, java.awt.Color fill, java.awt.Color outline, boolean maintainAspectRatio, boolean antialias);
class RenderInfoImpl implements RenderInfo {
    public java.awt.Color getFillColor ();
    public void setValues (int width, int height, java.awt.Color fill, java.awt.Color outline, boolean maintainAspectRatio, boolean antialias);
class RenderInfoImpl implements RenderInfo {
public class ReorientReferenceRelationshipRequest extends ReorientRequest {
public class ReorientReferenceRelationshipRequest extends ReorientRequest {
    public ReorientReferenceRelationshipRequest (TransactionalEditingDomain editingDomain, EObject referenceOwner, EObject newRelationshipEnd, EObject oldRelationshipEnd, int direction) {
public class ReorientRelationshipRequest extends ReorientRequest {
public class ReorientRelationshipRequest extends ReorientRequest {
    public ReorientRelationshipRequest (TransactionalEditingDomain editingDomain, EObject relationship, EObject newRelationshipEnd, EObject oldRelationshipEnd, int direction) {
abstract public class ReorientRequest extends AbstractEditCommandRequest {
    protected ReorientRequest (int direction, EObject newRelationshipEnd, EObject oldRelationshipEnd) {
abstract public class ReorientRequest extends AbstractEditCommandRequest {
    protected ReorientRequest (TransactionalEditingDomain editingDomain, int direction, EObject newRelationshipEnd, EObject oldRelationshipEnd) {
public class RepositionEObjectCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public RepositionEObjectCommand (String label, EList elements, EObject element, int displacement) {
public class RepositionEObjectCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public RepositionEObjectCommand (TransactionalEditingDomain editingDomain, String label, EList elements, EObject element, int displacement) {
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
    final public static String REQ_REFRESH_CONNECTORS = "refresh_connectors";
    final public static String REQ_TOGGLE_CONNECTOR_LABELS = "toggle_connector_label";
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
    final public static String REQ_CHILD_PROPERTY_CHANGE = "child_property_change";
    final public static String REQ_SHOW_ALL_COMPARTMENTS = "show_all_compartments";
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
    final public static String REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR = "directedit_extendeddata_initial_char";
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
public interface RequestConstants extends org.eclipse.gef.RequestConstants {
    final public static String REQ_SNAP_TO_GRID = "snap_to_grid";
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
    public ResizableCompartmentEditPart (View view) {
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
    public ResizableCompartmentEditPart (EObject model) {
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
    protected void handleNotificationEvent (NotificationEvent event);
abstract public class ResizableCompartmentEditPart extends CompartmentEditPart implements IResizableCompartmentEditPart {
public class ResizableCompartmentEditPolicy extends ResizableEditPolicyEx {
public class ResizableCompartmentEditPolicy extends ResizableEditPolicyEx {
    public void activate ();
public class ResizableCompartmentFigure extends NodeFigure {
    final public static int MIN_CLIENT_SIZE = MapMode.DPtoLP (11);
public class ResizableCompartmentFigure extends NodeFigure {
    public ResizableCompartmentFigure (String compartmentTitle, int minClientSize) {
    final public static int MIN_CLIENT_DP = 11;
public class ResizableCompartmentFigure extends NodeFigure {
public class ResizableCompartmentFigure extends NodeFigure {
    public ResizableCompartmentFigure (String compartmentTitle, IMapMode mm) {
public class ResizableCompartmentFigure extends NodeFigure {
    protected AnimatableScrollPane scrollPane;
public class ResizableCompartmentFigure extends NodeFigure {
    protected ScrollPane createScrollPane (IMapMode mm); protected ScrollPane scrollPane;
public class ResizableCompartmentFigure extends NodeFigure {
    public ResizableCompartmentFigure (String compartmentTitle) {
    public ResizableCompartmentFigure (String compartmentTitle, int minClientSize) {
public class ResizableCompartmentFigure extends NodeFigure {
public class ResizableEditPolicyEx extends ResizableEditPolicy {
public class ResizableEditPolicyEx extends ResizableEditPolicy {
public class ResizableLabelEditPolicy extends ShapeLabelResizableEditPolicy {
public class ResizableLabelEditPolicy extends ResizableShapeLabelEditPolicy {
public class ResizableLabelEditPolicy extends ResizableShapeLabelEditPolicy {
    protected void adjustRect (PrecisionRectangle rect);
class ResizableLabelEditPolicy extends ResizableShapeLabelEditPolicy {
public class ResizableShapeEditPolicy extends ResizableEditPolicyEx {
public class ResizableShapeEditPolicy extends ResizableEditPolicyEx {
public class ResizeConstraintsImpl extends EObjectImpl implements ResizeConstraints {
    public EList getNonResizeHandleNames ();
    public EList getResizeHandleNames ();
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class ResizeConstraintsImpl extends EObjectImpl implements ResizeConstraints {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public EList < String > getNonResizeHandleNames ();
public class ResizeConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ResizeConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ResizeConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ResizeConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ResizeConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ResizeConstraintsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ResourceHelperImpl extends AdapterImpl implements IResourceHelper {
    public void destroy (EObject eObject);
public class ResourceHelperImpl extends AdapterImpl implements IResourceHelper {
public class ResourceInfo {
    public Map objects = new HashMap ();
public class ResourceInfo {
    public Map objects = new LinkedHashMap ();
public class ResourceLocationProvider {
    public List < IFile > getSelectedFiles (String extension);
public class ResourceLocationProvider {
    public List < IFile > getSelectedFiles (String extension, boolean explicit);
    final public List < URI > getSelectedURIs (String extension);
abstract public class ResourceManagerImpl implements ResourceManager {
abstract public class ResourceManagerImpl implements ResourceManager {
    protected ResourceManager [] getDependenies ();
abstract public class ResourceManagerImpl implements ResourceManager {
abstract public class ResourceManagerImpl implements ResourceManager {
    abstract protected boolean shouldCache ();
    final protected boolean hasCachedXpand (String fullyQualifiedName);
    final protected boolean hasCachedXtend (String fullyQualifiedName);
    final protected void forgetAll ();
    final protected void forgetCachedXpand (String fullyQualifiedName);
abstract public class ResourceManagerImpl implements ResourceManager {
    protected ResourceManager [] getDependenies ();
abstract public class ResourceManagerImpl implements ResourceManager {
    @Deprecated
    abstract protected Reader resolve (String fullyQualifiedName, String extension) throws IOException;
    protected Reader [] resolveMultiple (String fullyQualifiedName, String extension) throws IOException;
    protected String getAspectsTemplateName (String fullyQualifiedName);
abstract public class ResourceManagerImpl implements ResourceManager {
    @Deprecated
    abstract protected Reader resolve (String fullyQualifiedName, String extension) throws IOException;
    protected XpandResource loadXpandResource (Reader reader, String fullyQualifiedName) throws IOException, ParserException;
abstract public class ResourceManagerImpl implements ResourceManager {
    protected XpandResource [] loadXpandResources (Reader [] readers, String fullyQualifiedName) throws IOException, ParserException;
    protected XpandResource loadXpandThroughCache (String qualifiedName) throws IOException, ParserException;
    protected XtendResource [] loadXtendResources (Reader [] readers, String fullyQualifiedName) throws IOException, ParserException;
    protected XtendResource loadXtendThroughCache (String qualifiedName) throws IOException, ParserException;
public class RestoreDefaultPropertyValueCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    protected CommandResult doRedo ();
    public RestoreDefaultPropertyValueCommand (String label, Object affectedObjects, IPropertySource propertySource, Object propertyId) {
    public boolean isRedoable ();
    public boolean isUndoable ();
public class RestoreDefaultPropertyValueCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public RestoreDefaultPropertyValueCommand (TransactionalEditingDomain editingDomain, String label, Object affectedObjects, IPropertySource propertySource, Object propertyId) {
    public boolean canRedo ();
    public boolean canUndo ();
public class RGBColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public void notifyChanged (Notification notification);
public class RGBColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
public class RGBColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RGBColorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RoundedRectangle2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class RoundedRectangle2CanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3007;
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3016;
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    public class RoundedRectangleFigure extends org.eclipse.draw2d.RoundedRectangle {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
    public class RoundedRectangleFigure extends RoundedRectangle {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 2007;
public class RoundedRectangle2EditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3007;
public class RoundedRectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    private static class CreateEllipse_3003Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateEllipse_3003Command (CreateElementRequest req) {
    private static class CreatePolyline_3005Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreatePolyline_3005Command (CreateElementRequest req) {
    private static class CreateRectangle_3002Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRectangle_3002Command (CreateElementRequest req) {
    private static class CreateRoundedRectangle_3004Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRoundedRectangle_3004Command (CreateElementRequest req) {
public class RoundedRectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class RoundedRectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class RoundedRectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class RoundedRectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class RoundedRectangle2ItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class RoundedRectangle2ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle2ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle2ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle2ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle2ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle2ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
    protected void handleNotificationEvent (Notification notification);
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    public class RoundedRectangleFigure extends org.eclipse.draw2d.RoundedRectangle {
public class RoundedRectangle3EditPart extends AbstractFigureEditPart {
    public class RoundedRectangleFigure extends RoundedRectangle {
public class RoundedRectangle3ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle3ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle3ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangle3ViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangleCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean shouldDeleteView (View view);
public class RoundedRectangleCanonicalEditPolicy extends CanonicalEditPolicy {
    protected boolean isOrphaned (Collection semanticChildren, final View view);
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3004;
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3013;
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
    protected Figure myNodeFigure;
    public class RoundedRectangleFigure extends org.eclipse.draw2d.RoundedRectangle {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
    public class RoundedRectangleFigure extends RoundedRectangle {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 2004;
public class RoundedRectangleEditPart extends AbstractFigureEditPart {
    final public static int VISUAL_ID = 3004;
public class RoundedRectangleImpl extends ShapeImpl implements RoundedRectangle {
    final protected static int CORNER_HEIGHT_EDEFAULT = 0;
    final protected static int CORNER_WIDTH_EDEFAULT = 0;
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class RoundedRectangleImpl extends ShapeImpl implements RoundedRectangle {
    final protected static int CORNER_HEIGHT_EDEFAULT = 8;
    final protected static int CORNER_WIDTH_EDEFAULT = 8;
    public void eSet (int featureID, Object newValue);
public class RoundedRectangleImpl extends ShapeImpl implements RoundedRectangle {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class RoundedRectangleImpl extends ShapeImpl implements RoundedRectangle {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class RoundedRectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RoundedRectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RoundedRectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class RoundedRectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class RoundedRectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RoundedRectangleItemProvider extends ShapeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class RoundedRectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    private static class CreateEllipse_3003Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateEllipse_3003Command (CreateElementRequest req) {
    private static class CreatePolyline_3005Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreatePolyline_3005Command (CreateElementRequest req) {
    private static class CreateRectangle_3002Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRectangle_3002Command (CreateElementRequest req) {
    private static class CreateRoundedRectangle_3004Command extends CreateElementCommand {
        protected EClass getEClassToEdit ();
        protected EObject getElementToEdit ();
        public CreateRoundedRectangle_3004Command (CreateElementRequest req) {
public class RoundedRectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class RoundedRectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
public class RoundedRectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class RoundedRectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest req);
public class RoundedRectangleItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {
    protected Command getReorientRelationshipCommand (ReorientRelationshipRequest req);
    protected Command getStartCreateRelationshipCommand (CreateRelationshipRequest req);
    protected void addDestroyChildNodesCommand (CompoundCommand cmd);
public class RoundedRectangleViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangleViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangleViewFactory extends AbstractShapeViewFactory {
public class RoundedRectangleViewFactory extends AbstractShapeViewFactory {
public class RouterAction extends CheckedPropertyAction {
public class RouterAction extends CheckedPropertyAction {
class RouterHelper {
class RouterHelper {
final public class Routing extends AbstractEnumerator {
    final public static Routing MANUAL_LITERAL = new Routing (MANUAL, "Manual");
    final public static Routing RECTILINEAR_LITERAL = new Routing (RECTILINEAR, "Rectilinear");
    final public static Routing TREE_LITERAL = new Routing (TREE, "Tree");
final public class Routing extends AbstractEnumerator {
    final public static Routing MANUAL_LITERAL = new Routing (MANUAL, "Manual", "Manual");
    final public static Routing RECTILINEAR_LITERAL = new Routing (RECTILINEAR, "Rectilinear", "Rectilinear");
    final public static Routing TREE_LITERAL = new Routing (TREE, "Tree", "Tree");
interface RoutingStyle extends Style {
interface RoutingStyle extends NotationObject, Style {
interface RoutingStyle extends NotationObject, Style {
interface RoutingStyle extends Style {
public class RoutingStyleImpl extends EObjectImpl implements RoutingStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class RoutingStyleImpl extends EObjectImpl implements RoutingStyle {
    public void eSet (int featureID, Object newValue);
public class RoutingStyleImpl extends EObjectImpl implements RoutingStyle {
public class RoutingStyleImpl extends FlatEObjectImpl implements RoutingStyle {
public class RoutingStyleImpl extends FlatEObjectImpl implements RoutingStyle {
public class RoutingStyleImpl extends NotationObjectImpl implements RoutingStyle {
public class RoutingStyleImpl extends NotationObjectImpl implements RoutingStyle {
    protected JumpLinkStatus jumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
    protected JumpLinkType jumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
    protected Routing routing = ROUTING_EDEFAULT;
    protected Smoothness smoothness = SMOOTHNESS_EDEFAULT;
    final protected static int AVOID_OBSTRUCTIONS_EFLAG = 1 << 8;
    final protected static int CLOSEST_DISTANCE_EFLAG = 1 << 9;
    final protected static int JUMP_LINKS_REVERSE_EFLAG = 1 << 10;
public class RoutingStyleImpl extends NotationEObjectImpl implements RoutingStyle {
    final protected static int AVOID_OBSTRUCTIONS_EFLAG = 1 << 12;
    final protected static int CLOSEST_DISTANCE_EFLAG = 1 << 13;
    final protected static int JUMP_LINKS_REVERSE_EFLAG = 1 << 18;
    final protected static int JUMP_LINK_STATUS_EFLAG = 0x3 << JUMP_LINK_STATUS_EFLAG_OFFSET;
    final protected static int JUMP_LINK_STATUS_EFLAG_DEFAULT = JumpLinkStatus.VALUES.indexOf (JUMP_LINK_STATUS_EDEFAULT) << JUMP_LINK_STATUS_EFLAG_OFFSET;
    final protected static int JUMP_LINK_STATUS_EFLAG_OFFSET = 14;
    final protected static int JUMP_LINK_TYPE_EFLAG = 0x3 << JUMP_LINK_TYPE_EFLAG_OFFSET;
    final protected static int JUMP_LINK_TYPE_EFLAG_DEFAULT = JumpLinkType.VALUES.indexOf (JUMP_LINK_TYPE_EDEFAULT) << JUMP_LINK_TYPE_EFLAG_OFFSET;
    final protected static int JUMP_LINK_TYPE_EFLAG_OFFSET = 16;
    final protected static int ROUTING_EFLAG = 0x3 << ROUTING_EFLAG_OFFSET;
    final protected static int ROUTING_EFLAG_DEFAULT = Routing.VALUES.indexOf (ROUTING_EDEFAULT) << ROUTING_EFLAG_OFFSET;
    final protected static int ROUTING_EFLAG_OFFSET = 8;
    final protected static int SMOOTHNESS_EFLAG = 0x3 << SMOOTHNESS_EFLAG_OFFSET;
    final protected static int SMOOTHNESS_EFLAG_DEFAULT = Smoothness.VALUES.indexOf (SMOOTHNESS_EDEFAULT) << SMOOTHNESS_EFLAG_OFFSET;
    final protected static int SMOOTHNESS_EFLAG_OFFSET = 10;
public class RoutingStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RoutingStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RoutingStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RoutingStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class RulerGridPropertySection extends AbstractPropertySection {
public class RulerGridPropertySection extends AbstractPropertySection {
    private static class ColorOverlayImageDescriptor extends CompositeImageDescriptor {
        protected Point getSize ();
        protected void drawCompositeImage (int width, int height);
        public ColorOverlayImageDescriptor (ImageData basicImgData, RGB rgb) {
[RulerUnits-3.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'RulerUnits-4.java' as a [program], at or near:
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
@Deprecated
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
public class RuntimeFQNSwitch extends GMFGraphSwitch implements FigureQualifiedNameSwitch {
    public Object caseBorderLayout (BorderLayout object);
    public Object caseCustomClass (CustomClass object);
    public Object caseEllipse (Ellipse object);
    public Object caseFigureGallery (FigureGallery gallery);
    public Object caseLabeledContainer (LabeledContainer object);
    public Object casePolygon (Polygon object);
    public Object casePolygonDecoration (PolygonDecoration object);
    public Object casePolylineDecoration (PolylineDecoration object);
    public Object caseRectangle (Rectangle object);
    public Object caseRoundedRectangle (RoundedRectangle object);
    public Object caseStackLayout (StackLayout object);
    public Object caseXYLayout (XYLayout object);
    public Object caseXYLayoutData (XYLayoutData object);
    public String [] getDependencies (FigureGallery gallery);
    public String get (EObject gmfgraphObject);
    public String get (EObject gmfgraphObject, ImportAssistant importManager);
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
    protected void collectDependencies (FigureGallery gallery, UniqueEList result);
    public Object caseGridLayout (GridLayout object);
    public Object caseGridLayoutData (GridLayoutData object);
    public Object caseLabel (Label object);
    public Object casePolylineConnection (PolylineConnection object);
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
    protected void collectDependencies (FigureGallery gallery, UniqueEList < String > result);
    public String caseGridLayout (GridLayout object);
    public String caseGridLayoutData (GridLayoutData object);
    public String caseLabel (Label object);
    public String casePolylineConnection (PolylineConnection object);
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
    public String caseGridLayout (GridLayout object);
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {
public class ScalableFreeformLayeredPane extends org.eclipse.draw2d.ScalableFreeformLayeredPane {
public class ScalableFreeformLayeredPane extends org.eclipse.draw2d.ScalableFreeformLayeredPane {
    protected MapModeGraphics createMapModeGraphics (Graphics graphics);
public class ScalableFreeformLayeredPane extends org.eclipse.draw2d.ScalableFreeformLayeredPane {
public class ScalableFreeformLayeredPane extends org.eclipse.draw2d.ScalableFreeformLayeredPane implements IMapMode {
    public ScalableFreeformLayeredPane (IMapMode mm) {
    public Translatable DPtoLP (Translatable t);
    public Translatable LPtoDP (Translatable t);
    public int DPtoLP (int deviceUnit);
public class ScalableFreeformLayeredPane extends org.eclipse.draw2d.ScalableFreeformLayeredPane implements IMapMode {
public class ScalableFreeformLayeredPane extends org.eclipse.draw2d.ScalableFreeformLayeredPane implements IMapModeHolder {
public class ScalableImageFigure extends ImageFigure {
public class ScalableImageFigure extends ImageFigure {
public class ScalableImageFigure extends ImageFigure {
public class ScalableImageFigure extends ImageFigure {
    private static class RenderingListenerImpl implements RenderingListener {
        public RenderingListenerImpl (ScalableImageFigure fig) {
        public ScalableImageFigure getFigure ();
        public boolean equals (Object obj);
        public int hashCode ();
        public void imageRendered (RenderedImage rndImg);
public class ScalableImageFigure extends ImageFigure {
    private static class RenderingListenerImpl implements RenderingListener {
        public RenderingListenerImpl (ScalableImageFigure fig) {
public class ScalableImageFigure extends ImageFigure {
    private class RenderingListenerImpl implements RenderingListener {
        public RenderingListenerImpl () {
        public void paintFigureWhileRendering (Graphics g);
public class ScalablePolygonItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ScalablePolygonItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ScalablePolygonItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ScalablePolygonItemProvider extends PolygonItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ScaledGraphics extends Graphics {
public class ScaledGraphics extends Graphics {
public class ScaledGraphics extends Graphics {
    protected static class State {
        protected State (double zoom, double x, double y, Font font, int lineWidth) {
    static class FontKey {
        protected FontKey (Font font, int height) {
            this.font = font;
            this.height = height;
public class ScaledGraphics extends Graphics {
    protected Graphics getGraphics ();
    protected Rectangle zoomRect (int x, int y, int w, int h); protected static class State {
        protected State (double zoom, double x, double y, Font font, int lineWidth) {
            this.zoom = zoom;
            this.appliedX = x;
            this.appliedY = y;
            this.font = font;
            this.lineWidth = lineWidth;
    public int getAlpha ();
    public int getAntialias ();
    public int getFillRule ();
    public int getInterpolation ();
    public int getLineCap ();
    public void setAlpha (int alpha);
    public void setInterpolation (int interpolation);
    static class FontKey {
        protected FontKey (Font font, int height) {
public class ScaledGraphics extends Graphics {
public class ScaledGraphics extends Graphics {
    public static void resetFontCache ();
public class SelectAllAction extends DiagramAction {
public class SelectAllAction extends DiagramAction {
public class SelectAllAction extends PresentationAction {
public class SelectAllAction extends DiagramAction {
public class SelectMenuManager extends ActionMenuManager {
public class SelectMenuManager extends ActionMenuManager {
    public SelectMenuManager (IAction action) {
public class SemanticCreateCommand extends AbstractCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    protected CommandResult doRedo ();
    protected CommandResult doUndo ();
    public boolean isExecutable ();
    public boolean isRedoable ();
    public boolean isUndoable ();
public class SemanticCreateCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doUndoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public boolean canExecute ();
    public boolean canRedo ();
    public boolean canUndo ();
public class SemanticCreateCommand extends AbstractCommand {
public class SemanticCreateCommand extends AbstractCommand {
    public void addContext (IUndoContext context);
    public void removeContext (IUndoContext context);
public class SemanticCreateCommand extends AbstractCommand {
public class SemanticCreateCommand extends AbstractCommand {
abstract public class SemanticListCompartmentEditPart extends ListCompartmentEditPart {
abstract public class SemanticListCompartmentEditPart extends ListCompartmentEditPart {
    public boolean isCanonical ();
public class SendBackwardCommand extends ZOrderCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public SendBackwardCommand (View toMove) {
public class SendBackwardCommand extends ZOrderCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public SendBackwardCommand (TransactionalEditingDomain editingDomain, View toMove) {
public class SendToBackCommand extends ZOrderCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public SendToBackCommand (View toMove) {
public class SendToBackCommand extends ZOrderCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public SendToBackCommand (TransactionalEditingDomain editingDomain, View toMove) {
public class SeparatorImpl extends EObjectImpl implements Separator {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
public class SeparatorImpl extends EObjectImpl implements Separator {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
public class SeparatorImpl extends EObjectImpl implements Separator {
public class SeparatorImpl extends EObjectImpl implements Separator {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public void setGroup (ToolGroup newGroup);
public class SeparatorImpl extends EObjectImpl implements Separator {
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public void setGroup (ToolGroup newGroup);
public class SeparatorImpl extends EObjectImpl implements Separator {
public class SeparatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SeparatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
package org.eclipse.gmf.codegen.gmfgen.provider;
public class SeparatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
package org.eclipse.gmf.tooldef.provider;
public class SeparatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SeparatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SeparatorItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
abstract public class Service extends AbstractProvider implements IProvider, IProviderChangeListener {
    public static class ProviderDescriptor extends AbstractProvider implements IProvider, IProviderChangeListener {
abstract public class Service extends AbstractProvider implements IProvider, IProviderChangeListener {
    public static class ProviderDescriptor extends AbstractProvider implements IProvider, IProviderChangeListener {
abstract public class Service extends AbstractProvider implements IProvider, IProviderChangeListener {
abstract public class Service extends AbstractProvider implements IProvider, IProviderChangeListener {
abstract public class Service extends AbstractProvider implements IProvider, IProviderChangeListener {
    public static class ProviderDescriptor extends AbstractProvider implements IProvider, IProviderChangeListener {
abstract public class Service extends AbstractProvider implements IProvider, IProviderChangeListener {
    public static class ProviderDescriptor extends AbstractProvider implements IProvider, IProviderChangeListener {
        protected boolean policyInitialized = false;
public class SetBoundsCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public SetBoundsCommand (String label, IAdaptable adapter, Dimension size) {
    public SetBoundsCommand (String label, IAdaptable adapter, Point location) {
    public SetBoundsCommand (String label, IAdaptable adapter, Rectangle bounds) {
public class SetBoundsCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException;
    public SetBoundsCommand (TransactionalEditingDomain editingDomain, String label, IAdaptable adapter, Dimension size) {
    public SetBoundsCommand (TransactionalEditingDomain editingDomain, String label, IAdaptable adapter, Point location) {
    public SetBoundsCommand (TransactionalEditingDomain editingDomain, String label, IAdaptable adapter, Rectangle bounds) {
public class SetBoundsCommand extends AbstractTransactionalCommand {
public class SetBoundsCommand extends AbstractTransactionalCommand {
public class SetCompartmentRatioCommand extends SetPropertyCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public SetCompartmentRatioCommand (IAdaptable viewAdapter, double newValue) {
public class SetCompartmentRatioCommand extends SetPropertyCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public SetCompartmentRatioCommand (TransactionalEditingDomain editingDomain, IAdaptable viewAdapter, double newValue) {
public class SetConnectionBendpointsCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    public SetConnectionBendpointsCommand () {
public class SetConnectionBendpointsCommand extends AbstractTransactionalCommand {
    public SetConnectionBendpointsCommand (TransactionalEditingDomain editingDomain) {
public class SetModelPropertyValueCommand extends AbstractModelCommand {
    protected CommandResult doExecute (IProgressMonitor progressMonitor);
    protected CommandResult doRedo ();
    public SetModelPropertyValueCommand (String label, Object affectedObjects, IPropertySource propertySource, Object propertyId, Object propertyValue) {
    public boolean isRedoable ();
    public boolean isUndoable ();
public class SetModelPropertyValueCommand extends AbstractTransactionalCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public SetModelPropertyValueCommand (TransactionalEditingDomain editingDomain, String label, Object affectedObjects, IPropertySource propertySource, Object propertyId, Object propertyValue) {
public class SetPropertyCommand extends AbstractTransactionalCommand {
public class SetPropertyCommand extends AbstractTransactionalCommand {
public class SetPropertyCommand extends AbstractModelCommand {
    public Collection getAffectedObjects ();
    public SetPropertyCommand (IAdaptable viewAdapter, String propertyId, String propertyName, Object newValue) {
    public SetPropertyCommand (String label, IAdaptable viewAdapter, String propertyId, Object newValue) {
public class SetPropertyCommand extends AbstractTransactionalCommand {
    public List getAffectedFiles ();
    public SetPropertyCommand (TransactionalEditingDomain editingDomain, IAdaptable viewAdapter, String propertyId, String propertyName, Object newValue) {
    public SetPropertyCommand (TransactionalEditingDomain editingDomain, String label, IAdaptable viewAdapter, String propertyId, Object newValue) {
public class SetRequest extends AbstractEditCommandRequest {
public class SetRequest extends AbstractEditCommandRequest {
    public SetRequest (TransactionalEditingDomain editingDomain, EObject elementToEdit, EStructuralFeature feature, Object value) {
public class SetValueCommand extends EditElementCommand {
public class SetValueCommand extends EditElementCommand {
public class SetValueCommand extends EditElementCommand {
public class SetValueCommand extends EditElementCommand {
    public boolean canExecute ();
public class SetViewMutabilityCommand extends Command {
public class SetViewMutabilityCommand extends Command {
interface Shape extends Figure {
interface Shape extends RealFigure {
public class ShapeColorsAndFontsPropertySection extends ColorsAndFontsPropertySection {
public class ShapeColorsAndFontsPropertySection extends ColorsAndFontsPropertySection {
public class ShapeColorsAndFontsPropertySection extends ColorsAndFontsPropertySection {
public class ShapeColorsAndFontsPropertySection extends ColoursAndFontsAndLineStylesPropertySection {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
    private EditPartListener editpartListener = new EditPartListener.Stub () {
        private FigureListener childFigureListener = new FigureListener () {
            public void figureMoved (IFigure source);
        ;
        public void childAdded (EditPart child, int index);
        public void removingChild (EditPart child, int index);
    ;
    public void addNotify ();
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
    public static class ConnectorRefreshMgr {
        protected void refreshConnectors (ShapeCompartmentEditPart scep);
abstract public class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
    public static class ConnectionRefreshMgr {
        protected void refreshConnections (ShapeCompartmentEditPart scep);
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
    public ShapeCompartmentFigure (String title, int minClientSize) {
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
    public ShapeCompartmentFigure (String title, IMapMode mm) {
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
    public ShapeCompartmentFigure () {
    public ShapeCompartmentFigure (String title) {
    public ShapeCompartmentFigure (String title, int minClientSize) {
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
    private interface EventType {
        final public static int UNRESOLVE = 1003;
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
    private interface EventType {
        final public static int UNRESOLVE = 1003;
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
    protected static class ShapeContainerEditPolicy extends ContainerEditPolicy {
        protected Command getArrangeCommand (ArrangeRequest request);
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
    protected void handleNotificationEvent (NotificationEvent e);
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
    public void fillAppearancePropertiesMap (Map properties);
abstract public class ShapeEditPart extends TopGraphicEditPart implements IPrimaryEditPart {
abstract public class ShapeImpl extends EObjectImpl implements Shape {
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    protected EList referencingElements = null;
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    protected EClass eStaticClass (); protected EList children = null;
    protected EList referencingElements = null;
    public EList getChildren ();
    public EList getReferencingElements ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public String toString ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureMarker > children = null;
    public EList < DiagramElement > getReferencingElements ();
    public EList < Figure > getResolvedChildren ();
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    @SuppressWarnings("unchecked")
    @Override
    protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected EList < DiagramElement > referencingElements = null;
    protected EList < FigureMarker > children = null;
    protected Font font = null;
    protected Insets insets = null;
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    protected Point location = null;
    protected Point size = null;
    protected String name = NAME_EDEFAULT;
    final protected static String NAME_EDEFAULT = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public Dimension getPreferredSize ();
    public EList < FigureMarker > getChildren ();
    public Figure getParent ();
    public Font getFont ();
    public Insets getInsets ();
    public Layout getLayout ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetInsets (Insets newInsets, NotificationChain msgs);
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public NotificationChain basicSetLayoutData (LayoutData newLayoutData, NotificationChain msgs);
    public NotificationChain basicSetLocation (Point newLocation, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain basicSetPreferredSize (Dimension newPreferredSize, NotificationChain msgs);
    public NotificationChain basicSetSize (Point newSize, NotificationChain msgs);
    public Point getLocation ();
    public Point getSize ();
    public void setBackgroundColor (Color newBackgroundColor);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setInsets (Insets newInsets);
    public void setLayout (Layout newLayout);
    public void setLocation (Point newLocation);
    public void setMaximumSize (Dimension newMaximumSize);
    public void setMinimumSize (Dimension newMinimumSize);
    public void setPreferredSize (Dimension newPreferredSize);
abstract public class ShapeImpl extends RealFigureImpl implements Shape {
abstract public class ShapeImpl extends RealFigureImpl implements Shape {
    @SuppressWarnings("unchecked")
    @Override
abstract public class ShapeImpl extends RealFigureImpl implements Shape {
    @Override
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    protected ColorStyle colorStyle = null;
    protected FontStyle fontStyle = null;
    protected SizeStyle sizeStyle = null;
    public NotificationChain basicSetColorStyle (ColorStyle newColorStyle, NotificationChain msgs);
    public NotificationChain basicSetSizeStyle (SizeStyle newSizeStyle, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    protected Border border = null;
    protected Color backgroundColor = null;
    protected Color foregroundColor = null;
    protected Dimension maximumSize = null;
    protected Dimension minimumSize = null;
    protected Dimension preferredSize = null;
    protected Font font = null;
    protected Insets insets = null;
    public Border getBorder ();
    public Color getBackgroundColor ();
    public Color getForegroundColor ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize ();
    public Font getFont ();
    public NotificationChain basicSetBackgroundColor (Color newBackgroundColor, NotificationChain msgs);
    public NotificationChain basicSetBorder (Border newBorder, NotificationChain msgs);
    public NotificationChain basicSetFont (Font newFont, NotificationChain msgs);
    public NotificationChain basicSetForegroundColor (Color newForegroundColor, NotificationChain msgs);
    public NotificationChain basicSetMaximumSize (Dimension newMaximumSize, NotificationChain msgs);
    public NotificationChain basicSetMinimumSize (Dimension newMinimumSize, NotificationChain msgs);
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
    public void setBackgroundColor (Color newBackgroundColor);
    public void setFont (Font newFont);
    public void setForegroundColor (Color newForegroundColor);
    public void setMaximumSize (Dimension newMaximumSize);
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    protected String layoutManager = LAYOUT_MANAGER_EDEFAULT;
    final protected static String LAYOUT_MANAGER_EDEFAULT = null;
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    protected Layout layout = null;
    protected LayoutData layoutData = null;
    public Layout getLayout ();
    public NotificationChain basicSetLayout (Layout newLayout, NotificationChain msgs);
    public void setLayout (Layout newLayout);
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    final protected static boolean FILL_EDEFAULT = false;
    final protected static boolean OUTLINE_EDEFAULT = false;
abstract public class ShapeImpl extends EObjectImpl implements Shape {
    final protected static boolean FILL_EDEFAULT = true;
    final protected static boolean OUTLINE_EDEFAULT = true;
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    @Override
public class ShapeItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ShapeItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
abstract public class ShapeNodeEditPart extends ShapeEditPart implements INodeEditPart {
abstract public class ShapeNodeEditPart extends ShapeEditPart implements INodeEditPart {
abstract public class ShapeNodeEditPart extends ShapeEditPart implements INodeEditPart {
    public void activate ();
abstract public class ShapeNodeEditPart extends ShapeEditPart implements INodeEditPart {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
    final protected static int LINE_WIDTH_EDEFAULT = 1;
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
    final protected static int LINE_WIDTH_EDEFAULT = - 1;
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends NotationEObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
    public void eSet (int featureID, Object newValue);
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends FlatEObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends FlatEObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
public class ShapeStyleImpl extends EObjectImpl implements ShapeStyle {
    protected int lineWidth = LINE_WIDTH_EDEFAULT;
    final protected static int LINE_WIDTH_EDEFAULT = 1;
public class ShapeStyleItemProvider extends EObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ShapeStyleItemProvider extends EObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SharedBehaviourImpl extends EObjectImpl implements SharedBehaviour {
    protected Behaviour delegate = null;
public class SharedBehaviourImpl extends EObjectImpl implements SharedBehaviour {
    protected Behaviour delegate;
public class SharedBehaviourImpl extends EObjectImpl implements SharedBehaviour {
public class SharedBehaviourImpl extends EObjectImpl implements SharedBehaviour {
    public void setSubject (GenCommonBase newSubject);
public class SharedBehaviourImpl extends EObjectImpl implements SharedBehaviour {
    public void setSubject (GenCommonBase newSubject);
public class SharedBehaviourImpl extends EObjectImpl implements SharedBehaviour {
public class SharedBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SharedBehaviourItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ShowRelatedElementsComposite extends Composite {
    protected void createExpansionControls () {
        this.expansionComposite = new Composite (this, SWT.NULL);
        GridData gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.horizontalSpan = 2;
        this.expansionComposite.setLayoutData (gridData);
        GridLayout gridLayout = new GridLayout (2, false);
        gridLayout.marginHeight = gridLayout.marginWidth = 0;
        this.expansionComposite.setLayout (gridLayout);
        new Label (this.expansionComposite, SWT.NULL).setText (ResourceManager.getI18NString ("ShowRelatedElementsDialog.ExpansionGroup.Text"));
        consumerToSelection = new Button (this.expansionComposite, SWT.RADIO);
        consumerToSelection.setText (ResourceManager.getI18NString ("ShowRelatedElementsDialog.Incoming"));
        consumerToSelection.addSelectionListener (new SelectionListener () {
        );
        new Label (this.expansionComposite, SWT.NULL);
        selectionToSupplier = new Button (this.expansionComposite, SWT.RADIO);
        selectionToSupplier.setText (ResourceManager.getI18NString ("ShowRelatedElementsDialog.Outgoing"));
        selectionToSupplier.addSelectionListener (new SelectionListener () {
        );
        if (showAllConnected) {
            new Label (this.expansionComposite, SWT.NULL);
        allConnected = new Button (this.expansionComposite, SWT.RADIO);
        allConnected.setText (ResourceManager.getI18NString ("ShowRelatedElementsDialog.AllConnected"));
        allConnected.addSelectionListener (new SelectionListener () {
        );
        if (! showAllConnected) {
            allConnected.setVisible (false);
            new Label (this.expansionComposite, SWT.NULL);
        both = new Button (this.expansionComposite, SWT.RADIO);
        both.setText (ResourceManager.getI18NString ("ShowRelatedElementsDialog.ExpansionGroup.RadioButton.Both"));
        both.addSelectionListener (new SelectionListener () {
        );
        contributeToExpansionGroupComposite (this.expansionComposite);
        new Label (expansionComposite, SWT.NULL).setText (ResourceManager.getI18NString ("ShowRelatedElementsDialog.ExpansionGroup.Label.Levels"));
        levels = new Text (this.expansionComposite, SWT.BORDER);
        gridData = new GridData ();
        gridData.widthHint = 50;
        levels.setLayoutData (gridData);
        levels.addKeyListener (new KeyListener () {
        );
        new Label (this.expansionComposite, SWT.NULL);
        expandIndefinitely = new Button (this.expansionComposite, SWT.CHECK);
        expandIndefinitely.setText (ResourceManager.getI18NString ("ShowRelatedElementsDialog.ExpansionGroup.CheckBox.Expand_Indefinitely"));
        expandIndefinitely.addSelectionListener (new SelectionListener () {
        );
public class ShowRelatedElementsComposite extends Composite {
    protected void createExpansionControls () {
        this.expansionComposite = new Composite (this, SWT.NULL);
        GridData gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.horizontalSpan = 2;
        this.expansionComposite.setLayoutData (gridData);
        GridLayout gridLayout = new GridLayout (2, false);
        gridLayout.marginHeight = gridLayout.marginWidth = 0;
        this.expansionComposite.setLayout (gridLayout);
        new Label (this.expansionComposite, SWT.NULL).setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_Text);
        consumerToSelection = new Button (this.expansionComposite, SWT.RADIO);
        consumerToSelection.setText (CommonUIMessages.ShowRelatedElementsDialog_Incoming);
        consumerToSelection.addSelectionListener (new SelectionListener () {
        );
        new Label (this.expansionComposite, SWT.NULL);
        selectionToSupplier = new Button (this.expansionComposite, SWT.RADIO);
        selectionToSupplier.setText (CommonUIMessages.ShowRelatedElementsDialog_Outgoing);
        selectionToSupplier.addSelectionListener (new SelectionListener () {
        );
        if (showAllConnected) {
            new Label (this.expansionComposite, SWT.NULL);
        allConnected = new Button (this.expansionComposite, SWT.RADIO);
        allConnected.setText (CommonUIMessages.ShowRelatedElementsDialog_AllConnected);
        allConnected.addSelectionListener (new SelectionListener () {
        );
        if (! showAllConnected) {
            allConnected.setVisible (false);
            new Label (this.expansionComposite, SWT.NULL);
        both = new Button (this.expansionComposite, SWT.RADIO);
        both.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_RadioButton_Both);
        both.addSelectionListener (new SelectionListener () {
        );
        contributeToExpansionGroupComposite (this.expansionComposite);
        new Label (expansionComposite, SWT.NULL).setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_Label_Levels);
        levels = new Text (this.expansionComposite, SWT.BORDER);
        gridData = new GridData ();
        gridData.widthHint = 50;
        levels.setLayoutData (gridData);
        levels.addKeyListener (new KeyListener () {
        );
        new Label (this.expansionComposite, SWT.NULL);
        expandIndefinitely = new Button (this.expansionComposite, SWT.CHECK);
        expandIndefinitely.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_CheckBox_Expand_Indefinitely);
        expandIndefinitely.addSelectionListener (new SelectionListener () {
        );
public class ShowRelatedElementsComposite extends Composite {
    protected void createExpansionControls () {
        this.expansionComposite = new Composite (this, SWT.NULL);
        GridData gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.horizontalSpan = 2;
        this.expansionComposite.setLayoutData (gridData);
        GridLayout gridLayout = new GridLayout (2, false);
        gridLayout.marginHeight = gridLayout.marginWidth = 0;
        this.expansionComposite.setLayout (gridLayout);
        new Label (this.expansionComposite, SWT.NULL).setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_Text);
        consumerToSelection = new Button (this.expansionComposite, SWT.RADIO);
        consumerToSelection.setText (CommonUIMessages.ShowRelatedElementsDialog_Incoming);
        consumerToSelection.addSelectionListener (new SelectionListener () {
        );
        new Label (this.expansionComposite, SWT.NULL);
        selectionToSupplier = new Button (this.expansionComposite, SWT.RADIO);
        selectionToSupplier.setText (CommonUIMessages.ShowRelatedElementsDialog_Outgoing);
        selectionToSupplier.addSelectionListener (new SelectionListener () {
        );
        if (showAllConnected) {
            new Label (this.expansionComposite, SWT.NULL);
        allConnected = new Button (this.expansionComposite, SWT.RADIO);
        allConnected.setText (CommonUIMessages.ShowRelatedElementsDialog_AllConnected);
        allConnected.addSelectionListener (new SelectionListener () {
        );
        if (! showAllConnected) {
            allConnected.setVisible (false);
            new Label (this.expansionComposite, SWT.NULL);
        both = new Button (this.expansionComposite, SWT.RADIO);
        both.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_RadioButton_Both);
        both.addSelectionListener (new SelectionListener () {
        );
        contributeToExpansionGroupComposite (this.expansionComposite);
        new Label (expansionComposite, SWT.NULL).setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_Label_Levels);
        levels = new Text (this.expansionComposite, SWT.BORDER);
        gridData = new GridData ();
        gridData.widthHint = 50;
        levels.setLayoutData (gridData);
        levels.addKeyListener (new KeyListener () {
        );
        new Label (this.expansionComposite, SWT.NULL);
        expandIndefinitely = new Button (this.expansionComposite, SWT.CHECK);
        expandIndefinitely.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_CheckBox_Expand_Indefinitely);
        expandIndefinitely.addSelectionListener (new SelectionListener () {
        );
public class ShowRelatedElementsComposite extends Composite {
    protected void createExpansionControls () {
        this.expansionComposite = new Composite (this, SWT.NULL);
        GridData gridData = new GridData (GridData.FILL_HORIZONTAL);
        gridData.horizontalSpan = 2;
        this.expansionComposite.setLayoutData (gridData);
        GridLayout gridLayout = new GridLayout (2, false);
        gridLayout.marginHeight = gridLayout.marginWidth = 0;
        this.expansionComposite.setLayout (gridLayout);
        Label label1 = new Label (this.expansionComposite, SWT.NULL);
        gridData = new GridData (GridData.VERTICAL_ALIGN_BEGINNING);
        label1.setLayoutData (gridData);
        label1.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_Text);
        Composite expansionGroupComposite = new Composite (this.expansionComposite, SWT.NONE);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        expansionGroupComposite.setLayoutData (gridData);
        gridLayout = new GridLayout ();
        gridLayout.marginHeight = gridLayout.marginWidth = 0;
        expansionGroupComposite.setLayout (gridLayout);
        consumerToSelection = new Button (expansionGroupComposite, SWT.RADIO);
        consumerToSelection.setText (CommonUIMessages.ShowRelatedElementsDialog_Incoming);
        consumerToSelection.addSelectionListener (new SelectionListener () {
        );
        selectionToSupplier = new Button (expansionGroupComposite, SWT.RADIO);
        selectionToSupplier.setText (CommonUIMessages.ShowRelatedElementsDialog_Outgoing);
        selectionToSupplier.addSelectionListener (new SelectionListener () {
        );
        allConnected = new Button (expansionGroupComposite, SWT.RADIO);
        allConnected.setText (CommonUIMessages.ShowRelatedElementsDialog_AllConnected);
        allConnected.addSelectionListener (new SelectionListener () {
        );
        gridData = new GridData ();
        gridData.exclude = ! showAllConnected;
        allConnected.setLayoutData (gridData);
        allConnected.setVisible (showAllConnected);
        both = new Button (expansionGroupComposite, SWT.RADIO);
        both.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_RadioButton_Both);
        both.addSelectionListener (new SelectionListener () {
        );
        contributeToExpansionGroupComposite (this.expansionComposite);
        Label label2 = new Label (this.expansionComposite, SWT.NULL);
        gridData = new GridData (GridData.VERTICAL_ALIGN_BEGINNING);
        label2.setLayoutData (gridData);
        label2.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_Label_Levels);
        Composite levelsGroupComposite = new Composite (this.expansionComposite, SWT.NONE);
        gridData = new GridData (GridData.FILL_HORIZONTAL);
        levelsGroupComposite.setLayoutData (gridData);
        gridLayout = new GridLayout ();
        gridLayout.marginHeight = gridLayout.marginWidth = 0;
        levelsGroupComposite.setLayout (gridLayout);
        levels = new Text (levelsGroupComposite, SWT.BORDER);
        gridData = new GridData ();
        gridData.widthHint = 50;
        levels.setLayoutData (gridData);
        levels.addKeyListener (new KeyListener () {
        );
        expandIndefinitely = new Button (levelsGroupComposite, SWT.CHECK);
        expandIndefinitely.setText (CommonUIMessages.ShowRelatedElementsDialog_ExpansionGroup_CheckBox_Expand_Indefinitely);
        expandIndefinitely.addSelectionListener (new SelectionListener () {
        );
public class ShowRelatedElementsPredefinedComposite extends Composite {
    protected InputDialog saveAsDialog = new InputDialog (Display.getDefault ().getActiveShell (), ResourceManager.getI18NString ("ShowRelatedElementsPredefinedComposite.SaveAs"), ResourceManager.getI18NString ("ShowRelatedElementsPredefinedComposite.ChooseName"), StringStatics.BLANK, new IInputValidator () {
    ) {
    ;
    final protected static String DEFAULT_STRING = SPECIAL_OPENING + ResourceManager.getI18NString ("ShowRelatedElementsPredefinedComposite.DefaultQuery") + SPECIAL_CLOSING;
    protected void makePredefinedSettingsButtons (Composite buttons) {
        saveAs = new Button (buttons, SWT.PUSH);
        saveAs.setText (ResourceManager.getI18NString ("ShowRelatedElementsPredefinedComposite.SaveAs"));
        saveAs.addSelectionListener (new SelectionListener () {
        );
        saveAs.setLayoutData (WindowUtil.makeButtonData (saveAs));
        delete = new Button (buttons, SWT.PUSH);
        delete.setText (ResourceManager.getI18NString ("ShowRelatedElementsPredefinedComposite.Delete"));
        delete.addSelectionListener (new SelectionListener () {
        );
        delete.setLayoutData (WindowUtil.makeButtonData (delete));
public class ShowRelatedElementsPredefinedComposite extends Composite {
    protected InputDialog saveAsDialog = new InputDialog (Display.getDefault ().getActiveShell (), CommonUIMessages.ShowRelatedElementsPredefinedComposite_SaveAs, CommonUIMessages.ShowRelatedElementsPredefinedComposite_ChooseName, StringStatics.BLANK, new IInputValidator () {
    ) {
    ;
    final protected static String DEFAULT_STRING = SPECIAL_OPENING + CommonUIMessages.ShowRelatedElementsPredefinedComposite_DefaultQuery + SPECIAL_CLOSING;
    protected void makePredefinedSettingsButtons (Composite buttons) {
        saveAs = new Button (buttons, SWT.PUSH);
        saveAs.setText (CommonUIMessages.ShowRelatedElementsPredefinedComposite_SaveAs);
        saveAs.addSelectionListener (new SelectionListener () {
        );
        saveAs.setLayoutData (WindowUtil.makeButtonData (saveAs));
        delete = new Button (buttons, SWT.PUSH);
        delete.setText (CommonUIMessages.ShowRelatedElementsPredefinedComposite_Delete);
        delete.addSelectionListener (new SelectionListener () {
        );
        delete.setLayoutData (WindowUtil.makeButtonData (delete));
public class ShowRelatedElementsPredefinedComposite extends Composite {
    protected InputDialog saveAsDialog = new InputDialog (Display.getDefault ().getActiveShell (), CommonUIMessages.ShowRelatedElementsPredefinedComposite_SaveAs, CommonUIMessages.ShowRelatedElementsPredefinedComposite_ChooseName, StringStatics.BLANK, new IInputValidator () {
    ) {
    ;
public class ShowRelatedElementsPredefinedComposite extends Composite {
    protected InputDialog saveAsDialog = new InputDialog (Display.getDefault ().getActiveShell (), CommonUIMessages.ShowRelatedElementsPredefinedComposite_SaveAs_Title, CommonUIMessages.ShowRelatedElementsPredefinedComposite_ChooseName, StringStatics.BLANK, new IInputValidator () {
    ) {
    ;
public class SimpleImageTranscoder extends ImageTranscoder {
    public void writeImage (BufferedImage img, TranscoderOutput output) throws TranscoderException;
public class SimpleImageTranscoder extends ImageTranscoder {
    @Override
    public BufferedImage createImage (int width, int height);
    @Override
    public void writeImage (BufferedImage img, TranscoderOutput output) throws TranscoderException;
public class SimpleImageTranscoder extends ImageTranscoder {
    @Override
    public BufferedImage createImage (int width, int height);
    @Override
    public void writeImage (BufferedImage img, TranscoderOutput output) throws TranscoderException;
    public BridgeContext initCSSEngine (final Document d);
    public BufferedImage getBufferedImage ();
public class SimpleImageTranscoder extends ImageTranscoder {
    @Override
    final public BufferedImage createImage (int width, int height);
    @Override
    final public void writeImage (BufferedImage img, TranscoderOutput output) throws TranscoderException;
    public BridgeContext initCSSEngine ();
    public SimpleImageTranscoder (Document document) {
    final public BufferedImage getBufferedImage ();
    final public Document getDocument ();
    final public Rectangle2D getCanvasAreaOfInterest ();
    final public int getCanvasHeight ();
    final public int getCanvasWidth ();
    public void contentChanged ();
    public void setCanvasAreaOfInterest (Rectangle2D value);
    public void setCanvasSize (int width, int height);
public class SimpleImageTranscoder extends ImageTranscoder {
    @Override
    final public BufferedImage createImage (int width, int height);
    @Override
public class SimpleImageTranscoder extends SVGAbstractTranscoder {
    protected ImageRenderer createImageRenderer ();
public class SingleValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SingleValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SingleValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SingleValueStyleItemProvider extends DataTypeStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface Size extends LayoutConstraint {
interface Size extends LayoutConstraint, NotationObject {
interface Size extends LayoutConstraint, NotationObject {
interface Size extends LayoutConstraint {
public class SizeBothAction extends PresentationAction {
public class SizeBothAction extends DiagramAction {
public class SizeHeightAction extends PresentationAction {
public class SizeHeightAction extends DiagramAction {
public class SizeImpl extends EObjectImpl implements Size {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class SizeImpl extends EObjectImpl implements Size {
    public void eSet (int featureID, Object newValue);
public class SizeImpl extends EObjectImpl implements Size {
public class SizeImpl extends FlatEObjectImpl implements Size {
public class SizeImpl extends FlatEObjectImpl implements Size {
public class SizeImpl extends NotationObjectImpl implements Size {
public class SizeImpl extends NotationObjectImpl implements Size {
public class SizeImpl extends NotationEObjectImpl implements Size {
public class SizeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SizeItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SizeItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SizeItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SizeSection extends AbstractPropertySection implements ChangeTracker, Listener {
public class SizeSection extends AbstractPropertySection implements ChangeTracker, Listener {
    protected Figure getInput ();
public class SizeWidthAction extends PresentationAction {
public class SizeWidthAction extends DiagramAction {
public class SlidableAnchor extends AbstractConnectionAnchor {
    protected Point getLocation (Point ownReference, Point foreignReference);
    protected Point normalizeToStraightlineTolerance (Point foreignReference, Point ownReference, int tolerance);
    protected PointList getIntersectionPoints (Point ownReference, Point foreignReference);
    public Point getLocation (Point reference);
    public SlidableAnchor (IFigure f, PrecisionPoint p) {
        super (f);
        this.relativeReference = new PrecisionPoint (p.preciseX, p.preciseY);
    public String getTerminal ();
    public boolean isDefaultAnchor ();
    public static PrecisionPoint parseTerminalString (String terminal);
    public static String composeTerminalString (PrecisionPoint p);
public class SlidableAnchor extends BaseSlidableAnchor {
    public SlidableAnchor (IFigure f, PrecisionPoint p) {
        super (f, p);
final public class Smoothness extends AbstractEnumerator {
    final public static Smoothness LESS_LITERAL = new Smoothness (LESS, "Less");
    final public static Smoothness MORE_LITERAL = new Smoothness (MORE, "More");
    final public static Smoothness NONE_LITERAL = new Smoothness (NONE, "None");
    final public static Smoothness NORMAL_LITERAL = new Smoothness (NORMAL, "Normal");
final public class Smoothness extends AbstractEnumerator {
    final public static Smoothness LESS_LITERAL = new Smoothness (LESS, "Less", "Less");
    final public static Smoothness MORE_LITERAL = new Smoothness (MORE, "More", "More");
    final public static Smoothness NONE_LITERAL = new Smoothness (NONE, "None", "None");
    final public static Smoothness NORMAL_LITERAL = new Smoothness (NORMAL, "Normal", "Normal");
public class SnapBackAction extends PresentationAction {
public class SnapBackAction extends DiagramAction {
public class SnapBackAction extends DiagramAction {
public class SnapBackAction extends DiagramAction {
public class SnapToGridAction extends PresentationAction {
public class SnapToGridAction extends DiagramAction {
public class SnapToGuidesEx extends SnapToGuides {
public class SnapToGuidesEx extends SnapToGuides {
    protected double getThreshold ();
    protected int [] getHorizontalGuides ();
public class SnippetViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class SnippetViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class SnippetViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SnippetViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SnippetViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SnippetViewmapItemProvider extends ViewmapItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SortFilterAction extends PresentationAction {
public class SortFilterAction extends DiagramAction {
public class SortFilterDialog extends PreferenceDialog {
    public SortFilterDialog (Shell parentShell) {
public class SortFilterDialog extends PreferenceDialog {
    protected void okPressed ();
    public SortFilterDialog (Shell parentShell, CommandStack commandStack) {
public class SortFilterElement {
public class SortFilterElement {
    public SortFilterElement (Object data) {
public class SortFilterPage extends PropertyPage {
public class SortFilterPage extends PropertyPage {
public class SortFilterPage extends PropertyPage {
public class SortFilterPage extends PropertyPage {
final public class Sorting extends AbstractEnumerator {
    final public static Sorting AUTOMATIC_LITERAL = new Sorting (AUTOMATIC, "Automatic");
    final public static Sorting MANUAL_LITERAL = new Sorting (MANUAL, "Manual");
    final public static Sorting NONE_LITERAL = new Sorting (NONE, "None");
final public class Sorting extends AbstractEnumerator {
    final public static Sorting AUTOMATIC_LITERAL = new Sorting (AUTOMATIC, "Automatic", "Automatic");
    final public static Sorting MANUAL_LITERAL = new Sorting (MANUAL, "Manual", "Manual");
    final public static Sorting NONE_LITERAL = new Sorting (NONE, "None", "None");
final public class SortingDirection extends AbstractEnumerator {
    final public static SortingDirection ASCENDING_LITERAL = new SortingDirection (ASCENDING, "Ascending");
    final public static SortingDirection DESCENDING_LITERAL = new SortingDirection (DESCENDING, "Descending");
final public class SortingDirection extends AbstractEnumerator {
    final public static SortingDirection ASCENDING_LITERAL = new SortingDirection (ASCENDING, "Ascending", "Ascending");
    final public static SortingDirection DESCENDING_LITERAL = new SortingDirection (DESCENDING, "Descending", "Descending");
interface SortingStyle extends Style {
interface SortingStyle extends NotationObject, Style {
interface SortingStyle extends NotationObject, Style {
interface SortingStyle extends Style {
public class SortingStyleImpl extends EObjectImpl implements SortingStyle {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class SortingStyleImpl extends EObjectImpl implements SortingStyle {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class SortingStyleImpl extends EObjectImpl implements SortingStyle {
public class SortingStyleImpl extends FlatEObjectImpl implements SortingStyle {
public class SortingStyleImpl extends FlatEObjectImpl implements SortingStyle {
    protected EList sortedObjects = null;
public class SortingStyleImpl extends FlatEObjectImpl implements SortingStyle {
    protected EList sortedObjects;
public class SortingStyleImpl extends FlatEObjectImpl implements SortingStyle {
public class SortingStyleImpl extends NotationObjectImpl implements SortingStyle {
public class SortingStyleImpl extends NotationObjectImpl implements SortingStyle {
    protected Sorting sorting = SORTING_EDEFAULT;
public class SortingStyleImpl extends NotationEObjectImpl implements SortingStyle {
    final protected static int SORTING_EFLAG = 0x3 << SORTING_EFLAG_OFFSET;
    final protected static int SORTING_EFLAG_DEFAULT = Sorting.VALUES.indexOf (SORTING_EDEFAULT) << SORTING_EFLAG_OFFSET;
    final protected static int SORTING_EFLAG_OFFSET = 8;
public class SortingStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SortingStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SortingStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SortingStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SpecializationType extends ElementType implements ISpecializationType {
public class SpecializationType extends ElementType implements ISpecializationType {
public class SpecializationTypeDescriptor extends ElementTypeDescriptor implements ISpecializationTypeDescriptor {
public class SpecializationTypeDescriptor extends ElementTypeDescriptor implements ISpecializationTypeDescriptor {
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
    protected MetamodelType metamodelType = null;
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
    protected MetamodelType metamodelType;
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
public class SpecializationTypeImpl extends ElementTypeImpl implements SpecializationType {
public class SpecializationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class SpecializationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class SpecializationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SpecializationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SpecializationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SpecializationTypeItemProvider extends ElementTypeItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SpecializationTypeRegistry {
public class SpecializationTypeRegistry {
public class SpecializationTypeRegistry {
    public List getEditHelperAdvice (EObject eObject, MetamodelTypeDescriptor metamodelTypeDescriptor);
    public List getEditHelperAdvice (IElementType elementType, MetamodelTypeDescriptor metamodelTypeDescriptor);
    public List getMatchingSpecializations (ElementTypeDescriptor type, EObject eContainer, EReference reference);
public class SpecializationTypeRegistry {
    public Collection getSpecializationTypeDescriptors (IClientContext clientContext);
    public List getEditHelperAdvice (EObject eObject, MetamodelTypeDescriptor metamodelTypeDescriptor, IClientContext clientContext);
    public List getEditHelperAdvice (IElementType elementType, MetamodelTypeDescriptor metamodelTypeDescriptor, IClientContext clientContext);
    public List getMatchingSpecializations (ElementTypeDescriptor type, EObject eContainer, EReference reference, IClientContext clientContext);
public class SpecializationTypeRegistry {
public class SpecializationTypeRegistry {
public class StackLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class StackLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class StackLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class StackLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class StandaloneEmitters extends EmitterFactory {
    public JETEmitter getBuildPropertiesEmitter () throws UnexpectedBehaviourException;
    public JETEmitter getManifestMFEmitter () throws UnexpectedBehaviourException;
    public JETEmitter getPluginActivatorEmitter () throws UnexpectedBehaviourException;
public class StandaloneEmitters extends EmitterFactory {
    public TextEmitter getBuildPropertiesEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getManifestMFEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getPluginActivatorEmitter () throws UnexpectedBehaviourException;
    public TextEmitter getPluginPropertiesEmitter () throws UnexpectedBehaviourException;
public class StandaloneEmitters extends EmitterFactory {
public class StandaloneEmitters {
public class StandaloneEmitters {
    public StandaloneEmitters () {
class StandaloneEmitters {
    abstract private static class XpandTextEmitter implements TextEmitter {
        protected XpandFacade createEngine (StringBuilder result);
        protected XpandTextEmitter (MapModeCodeGenStrategy mapModeStrategy) {
        final protected MapModeCodeGenStrategy myMapModeStrategy;
class StandaloneEmitters {
    abstract private static class XpandTextEmitter implements TextEmitter {
        protected XpandFacade createEngine (StringBuilder result);
        protected XpandTextEmitter (MapModeCodeGenStrategy mapModeStrategy) {
        final protected MapModeCodeGenStrategy myMapModeStrategy;
class StandaloneEmitters {
public class StandaloneGenerator extends GeneratorBase {
    private static class GenerationInfoImpl implements GenerationInfo {
        public Config getConfig ();
        public Enumeration getProcessedFigures ();
        public GenerationInfoImpl (Config config) {
        public String getGeneratedClassFQN (Figure figure);
        public void registerFQN (Figure figure, String fqn);
    public GenerationInfo getGenerationInfo ();
    public StandaloneGenerator (FigureGallery [] input, Config config, FigureQualifiedNameSwitch fqnSwitch) {
    public StandaloneGenerator (FigureGallery input, Config config, FigureQualifiedNameSwitch fqnSwitch) {
    public interface GenerationInfo {
        public Config getConfig ();
        public Enumeration getProcessedFigures ();
        public String getGeneratedClassFQN (Figure figure);
public class StandaloneGenerator extends GeneratorBase {
    public StandaloneGenerator (Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch) {
    public interface ProcessorCallback {
        public String visitFigure (Figure f) throws InterruptedException;
    abstract public static class Processor {
        public String [] getRequiredBundles (FigureQualifiedNameSwitch fqnSwitch);
        abstract public void go (ProcessorCallback callback) throws InterruptedException;
public class StandaloneGenerator extends GeneratorBase {
    abstract public static class Processor {
        abstract public void go (ProcessorCallback callback) throws InterruptedException;
public class StandaloneGenerator extends GeneratorBase {
    abstract public static class Processor {
        abstract public void go (ProcessorCallback callback, Config config) throws InterruptedException;
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
    @Override
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
    protected Processor myProcessor;
    final protected Config myArgs;
    final protected FigureQualifiedNameSwitch myFigureNameSwitch;
    protected void generatePluginActivator () throws InterruptedException, UnexpectedBehaviourException;
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
    public StandaloneGenerator (Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch, URL [] dynamicTemplates) {
public class StandaloneGenerator extends GeneratorBase {
    final protected FigureQualifiedNameSwitch myFigureNameSwitch;
    public StandaloneGenerator (Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch) {
    public StandaloneGenerator (Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch, URL [] dynamicTemplates) {
    public interface Config {
        public boolean needsMapMode ();
    public static class ConfigImpl implements Config {
        public ConfigImpl (String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, boolean needsMapMode) {
        public ConfigImpl (String pluginId, String mainPackageName, boolean useMapMode) {
        public boolean needsMapMode ();
public class StandaloneGenerator extends GeneratorBase {
    public StandaloneGenerator (Processor p, Config config) {
    public StandaloneGenerator (Processor p, Config config, URL [] dynamicTemplates) {
    public interface Config {
        public String getRuntimeToken ();
    public static class ConfigImpl implements Config {
        public ConfigImpl (String pluginId, String mainPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken) {
        public ConfigImpl (String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken) {
        public String getRuntimeToken ();
public class StandaloneGenerator extends GeneratorBase {
    public interface ProcessorCallback {
        public String visitFigure (Figure f) throws InterruptedException;
public class StandaloneGenerator extends GeneratorBase {
    public interface ProcessorCallback {
        public String visitFigure (FigureDescriptor f) throws InterruptedException;
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
    private static class GenerationInfoImpl implements GenerationInfo {
        public Config getConfig ();
        public Enumeration getProcessedFigures ();
        public GenerationInfoImpl (Config config) {
        public String getGeneratedClassFQN (Figure figure);
        public void registerFQN (Figure figure, String fqn);
    public interface GenerationInfo {
        public Config getConfig ();
        public Enumeration getProcessedFigures ();
        public String getGeneratedClassFQN (Figure figure);
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
    private static class FigureGeneratorAdapter implements GeneratorBase.Emitter {
        public FigureGeneratorAdapter (FigureGenerator delegate) {
        public String generate (IProgressMonitor monitor, Object param) throws JETException;
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGenerator extends GeneratorBase {
public class StandaloneGeneratorConfigAdapter implements StandaloneGenerator.Config {
    public boolean needsMapMode ();
class StandaloneGeneratorConfigAdapter implements StandaloneGenerator.Config {
    public String getRuntimeToken ();
public class StandardEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class StandardEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class StandardEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class StandardEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StandardToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public String getCreateChildText (Object owner, Object feature, Object child, Collection selection);
    public String getText (Object object);
    public void notifyChanged (Notification notification);
public class StandardToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getCreateChildText (Object owner, Object feature, Object child, Collection < ? > selection);
    @Override
    public String getText (Object object);
    @Override
public class StandardToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class StandardToolItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
final public class StatusCodes {
final public class StatusCodes {
    final public static int CONSTRAINT_SATISFIED = 226;
public class StatusLineUtil {
    public static void outputErrorMessage (IWorkbenchPart part, String errorMessage);
public class StatusLineUtil {
    public static void outputErrorMessage (IWorkbenchPart part, final String errorMessage);
public class StorageDiagramDocumentProvider extends StorageDocumentProvider implements IDiagramDocumentProvider {
public class StorageDiagramDocumentProvider extends StorageDocumentProvider implements IDiagramDocumentProvider {
    private class DiagramStorageInfo extends StorageInfo {
        public DiagramStorageInfo (IDocument document, DiagramModificationListener listener) {
public class StorageDiagramDocumentProvider extends StorageDocumentProvider implements IDiagramDocumentProvider {
    public IEditorInput createInputWithEditingDomain (IEditorInput editorInput, MEditingDomain domain);
public class StorageDiagramDocumentProvider extends StorageDocumentProvider implements IDiagramDocumentProvider {
    public IEditorInput createInputWithEditingDomain (IEditorInput editorInput, TransactionalEditingDomain domain);
public class StorageEditorInputProxy implements IStorageEditorInput, MEditingDomainElement {
    public ImageDescriptor getImageDescriptor ();
    public MEditingDomain getEditingDomain ();
    public String getName ();
public class StorageEditorInputProxy extends EditorInputProxy implements IStorageEditorInput, MEditingDomainElement {
public class StorageEditorInputProxy extends EditorInputProxy implements IStorageEditorInput, MEditingDomainElement {
    public StorageEditorInputProxy (IStorageEditorInput input, MEditingDomain domain) {
public class StorageEditorInputProxy extends EditorInputProxy implements IStorageEditorInput, MEditingDomainElement {
    public StorageEditorInputProxy (IStorageEditorInput input, TransactionalEditingDomain domain) {
interface Strategy {
interface Strategy < T extends EObject > {
public class StringListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringListValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface StringObjectConverter extends EObject {
interface StringObjectConverter extends NotationObject {
interface StringObjectConverter extends NotationObject {
interface StringObjectConverter extends EObject {
public class StringToPropertyValueMapEntryImpl extends FlatEObjectImpl implements BasicEMap.Entry {
public class StringToPropertyValueMapEntryImpl extends NotationObjectImpl implements BasicEMap.Entry {
public class StringToPropertyValueMapEntryImpl extends NotationObjectImpl implements BasicEMap.Entry {
public class StringToPropertyValueMapEntryImpl extends NotationEObjectImpl implements BasicEMap.Entry {
public class StringToPropertyValueMapEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringToPropertyValueMapEntryItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringToPropertyValueMapEntryItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringToPropertyValueMapEntryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StringValueStyleItemProvider extends NamedStyleItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class StructureResolver {
    public TypePattern resolve (EClass type);
public class StructureResolver {
    public TypePattern resolve (EClass type, EPackage domainPackage);
public class StructureResolver {
    public TypePattern resolve (EClass type, EPackage domainPackage);
public class StructureResolver {
    public TypePattern resolve (EClass type, EPackage domainPackage, EClass diagramClass);
public class StructureResolver {
    public TypePattern resolve (EClass type, EPackage domainPackage, EClass diagramClass);
public class StructureResolver {
    public TypePattern resolve (EClass type, EPackage scope);
public class StyleAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class StyleAttributesItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class SVGFigure extends Figure {
public class SVGFigure extends Figure {
    final public boolean isSpecifyCanvasHeight ();
    public void setSpecifyCanvasHeight (boolean specifyCanvasHeight);
public class SVGFigure extends Figure {
public class SVGFigure extends Figure {
public class SVGFigure extends Figure {
    final public boolean isDirectRenderingSucceeded ();
public class SVGFigure extends Figure {
public class SVGFigureImpl extends RealFigureImpl implements SVGFigure {
public class SVGFigureImpl extends RealFigureImpl implements SVGFigure {
    protected Rectangle2D areaOfInterest;
    public NotificationChain basicSetAreaOfInterest (Rectangle2D newAreaOfInterest, NotificationChain msgs);
public class SVGFigureImpl extends RealFigureImpl implements SVGFigure {
    protected boolean safeRendering = SAFE_RENDERING_EDEFAULT;
    final protected static boolean SAFE_RENDERING_EDEFAULT = false;
    public void setSafeRendering (boolean newSafeRendering);
public class SVGFigureImpl extends RealFigureImpl implements SVGFigure {
public class SVGFigureImpl extends RealFigureImpl implements SVGFigure {
public class SVGFigureImpl extends RealFigureImpl implements SVGFigure {
    protected boolean noCanvasHeight = NO_CANVAS_HEIGHT_EDEFAULT;
    protected boolean noCanvasWidth = NO_CANVAS_WIDTH_EDEFAULT;
    final protected static boolean NO_CANVAS_HEIGHT_EDEFAULT = false;
    final protected static boolean NO_CANVAS_WIDTH_EDEFAULT = false;
    public boolean isNoCanvasHeight ();
    public void setNoCanvasHeight (boolean newNoCanvasHeight);
    public void setNoCanvasWidth (boolean newNoCanvasWidth);
public class SVGFigureItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SVGFigureItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SVGFigureItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class SVGFigureItemProvider extends RealFigureItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addNoCanvasHeightPropertyDescriptor (Object object);
class SVGImageConverter {
public class SVGImageConverter {
    public static void exportToPDF (SVGImage svgImage, FileOutputStream fileOutputStream) throws CoreException;
public class SVGImageConverter {
    public static void exportToPDF (SVGImage svgImage, FileOutputStream fileOutputStream) throws CoreException;
public class SVGImageConverter {
    public static void exportToPDF (SVGImage svgImage, OutputStream fileOutputStream) throws CoreException;
public class TaggedTextMerger {
    protected class RegionsIterator implements Iterator {
public class TaggedTextMerger {
    protected class RegionsIterator implements Iterator < String > {
public class TextCompartmentEditPart extends CompartmentEditPart {
    public TextCompartmentEditPart (View view) {
public class TextCompartmentEditPart extends CompartmentEditPart {
    public TextCompartmentEditPart (EObject model) {
public class TextCompartmentEditPart extends CompartmentEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart implements ITextAwareEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart {
    public class TextCellEditorLocator implements CellEditorLocator {
        public void relocate (CellEditor celleditor);
public class TextCompartmentEditPart extends CompartmentEditPart {
public class TextCompartmentEditPart extends CompartmentEditPart {
    protected void handleNotificationEvent (NotificationEvent event);
public class TextCompartmentEditPart extends CompartmentEditPart {
public class TextDirectEditManager extends DirectEditManager {
    public TextDirectEditManager (TextCompartmentEditPart source) {
public class TextDirectEditManager extends DirectEditManager {
    private static class LabelCellEditorLocator implements CellEditorLocator {
        public Label getLabel ();
        public LabelCellEditorLocator (Label label) {
        public void relocate (CellEditor celleditor);
    public TextDirectEditManager (ITextAwareEditPart source) {
    public static CellEditorLocator getTextCellEditorLocator (ITextAwareEditPart source);
public class TextDirectEditManager extends DirectEditManager {
public class TextDirectEditManager extends DirectEditManager {
    public void setLocator (CellEditorLocator locator);
public class TextDirectEditManager extends DirectEditManager {
    private static class LabelCellEditorLocator implements CellEditorLocator {
        public Label getLabel ();
        public LabelCellEditorLocator (Label label) {
        public void relocate (CellEditor celleditor);
    private static class TextCellEditorLocator implements CellEditorLocator {
        public TextCellEditorLocator (WrapLabel wrapLabel) {
        public WrapLabel getWrapLabel ();
        public void relocate (CellEditor celleditor);
public class TextDirectEditManager extends DirectEditManager {
public class TextDirectEditManager extends DirectEditManager {
public class TextDirectEditManager extends DirectEditManager {
    public TextDirectEditManager (GraphicalEditPart source) {
    private static class TextCellEditorLocator implements CellEditorLocator {
        public TextCellEditorLocator (WrapLabel wrapLabel) {
        public WrapLabel getWrapLabel ();
        public void relocate (CellEditor celleditor);
public class TextDirectEditManager extends DirectEditManager {
    public TextDirectEditManager (GraphicalEditPart source) {
public class TextDirectEditManager extends DirectEditManager {
    public TextDirectEditManager (TextCompartmentEditPart source) {
public class TextDirectEditManager extends DirectEditManager {
public class TextDirectEditManager extends DirectEditManager {
public class TextEditPart extends ShapeEditPart {
public class TextEditPart extends ShapeNodeEditPart {
    protected NodeFigure createNodeFigure ();
public class TextEditPart extends ShapeEditPart {
    public void fillAppearancePropertiesMap (Map properties);
public class TextEditPart extends ShapeEditPart {
abstract public class TextMerger {
    final protected static String BEGIN_TAG = TAG + " begin";
    final protected static String END_TAG = TAG + " end";
    final protected static String TAG = "gmf generator persistent region";
    abstract public String process (String oldText, String newText);
    public static TextMerger getForFile (String name);
public class TextMerger {
    public String mergeJava (String oldText, String newText);
    public String mergeProperties (String oldText, String newText);
    public String mergeXML (String oldText, String newText);
    public String process (String fileNameExt, String oldText, String newText);
public class TextMerger {
    public String process (String fileNameExt, String oldText, String newText);
public class TextMerger {
    public String mergeManifestMF (String oldText, String newText);
    public String process (String fileName, String oldText, String newText);
public class TextShapeViewFactory extends AbstractShapeViewFactory {
public class TextShapeViewFactory extends AbstractShapeViewFactory {
interface TextStyle extends Style {
interface TextStyle extends NotationObject, Style {
interface TextStyle extends NotationObject, Style {
interface TextStyle extends Style {
public class TextStyleImpl extends NotationObjectImpl implements TextStyle {
    protected TextAlignment textAlignment = TEXT_ALIGNMENT_EDEFAULT;
public class TextStyleImpl extends NotationEObjectImpl implements TextStyle {
    final protected static int TEXT_ALIGNMENT_EFLAG = 0x3 << TEXT_ALIGNMENT_EFLAG_OFFSET;
    final protected static int TEXT_ALIGNMENT_EFLAG_DEFAULT = TextAlignment.VALUES.indexOf (TEXT_ALIGNMENT_EDEFAULT) << TEXT_ALIGNMENT_EFLAG_OFFSET;
    final protected static int TEXT_ALIGNMENT_EFLAG_OFFSET = 8;
public class TextStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TextStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
interface TitleStyle extends Style {
interface TitleStyle extends NotationObject, Style {
interface TitleStyle extends NotationObject, Style {
interface TitleStyle extends Style {
public class TitleStyleImpl extends EObjectImpl implements TitleStyle {
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class TitleStyleImpl extends EObjectImpl implements TitleStyle {
    public void eSet (int featureID, Object newValue);
public class TitleStyleImpl extends EObjectImpl implements TitleStyle {
public class TitleStyleImpl extends FlatEObjectImpl implements TitleStyle {
public class TitleStyleImpl extends FlatEObjectImpl implements TitleStyle {
public class TitleStyleImpl extends NotationObjectImpl implements TitleStyle {
public class TitleStyleImpl extends NotationObjectImpl implements TitleStyle {
public class TitleStyleImpl extends NotationEObjectImpl implements TitleStyle {
public class TitleStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TitleStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TitleStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TitleStyleItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToggleCanonicalModeCommand extends Command {
public class ToggleCanonicalModeCommand extends Command {
public class ToolbarItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class ToolbarItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ToolbarItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolbarItemProvider extends MenuItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolContainerItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolContainerItemProvider extends AbstractToolItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolDefLookup {
public class ToolDefLookup implements ToolDefSupplier {
interface ToolEntry extends EntryBase, ToolGroupItem {
interface ToolEntry extends AbstractToolEntry {
public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
    protected EMap properties = null;
    protected String qualifiedToolName = QUALIFIED_TOOL_NAME_EDEFAULT;
    protected boolean default_ = DEFAULT_EDEFAULT;
    final protected static String QUALIFIED_TOOL_NAME_EDEFAULT = null;
    final protected static boolean DEFAULT_EDEFAULT = false;
    public EMap getProperties ();
    public String getQualifiedToolName ();
    public void setDefault (boolean newDefault);
    public void setQualifiedToolName (String newQualifiedToolName);
public class ToolEntryImpl extends AbstractToolEntryImpl implements ToolEntry {
public class ToolEntryImpl extends AbstractToolEntryImpl implements ToolEntry {
    protected EClass eStaticClass (); protected EList genLinks = null;
    protected EList genNodes = null;
    public EList getElements ();
    public EList getGenLinks ();
    public EList getGenNodes ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class ToolEntryImpl extends AbstractToolEntryImpl implements ToolEntry {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GenLink > genLinks = null;
    protected EList < GenNode > genNodes = null;
    public EList < GenCommonBase > getElements ();
    public EList < GenLink > getGenLinks ();
public class ToolEntryImpl extends AbstractToolEntryImpl implements ToolEntry {
    protected EList < GenLink > genLinks = null;
    protected EList < GenNode > genNodes = null;
public class ToolEntryImpl extends AbstractToolEntryImpl implements ToolEntry {
    protected EList < GenLink > genLinks;
    protected EList < GenNode > genNodes;
abstract public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
    public void eSet (EStructuralFeature eFeature, Object newValue);
abstract public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
    public void eSet (int featureID, Object newValue);
abstract public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
abstract public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
abstract public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
    protected EList genLinks = null;
    protected EList genNodes = null;
    protected EMap properties = null;
    protected String qualifiedToolName = QUALIFIED_TOOL_NAME_EDEFAULT;
    final protected static String QUALIFIED_TOOL_NAME_EDEFAULT = null;
    public EList getElements ();
    public EList getGenLinks ();
    public EList getGenNodes ();
    public EMap getProperties ();
    public void setQualifiedToolName (String newQualifiedToolName);
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addElementsPropertyDescriptor (Object object);
    protected void addGenLinksPropertyDescriptor (Object object);
    protected void addGenNodesPropertyDescriptor (Object object);
public class ToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class ToolEntryItemProvider extends AbstractToolEntryItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
interface ToolGroup extends EntryBase {
interface ToolGroup extends EntryBase, ToolGroupItem {
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public Palette getPalette ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    protected EClass eStaticClass (); protected EList entries = null;
    public EList getEntries ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass);
    public void eSet (int featureID, Object newValue);
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class < ? > baseClass);
    @Override
    public int eDerivedStructuralFeatureID (int baseFeatureID, Class < ? > baseClass);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < ToolGroupItem > entries = null;
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    protected EList < ToolGroupItem > entries = null;
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    protected EList < ToolGroupItem > entries;
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    public NotificationChain basicSetGroup (ToolGroup newGroup, NotificationChain msgs);
    public void setGroup (ToolGroup newGroup);
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
package org.eclipse.gmf.tooldef.impl;
public class ToolGroupImpl extends ToolContainerImpl implements ToolGroup {
    protected AbstractTool active = null;
    protected boolean collapsible = COLLAPSIBLE_EDEFAULT;
    protected boolean stack = STACK_EDEFAULT;
    final protected static boolean COLLAPSIBLE_EDEFAULT = false;
    final protected static boolean STACK_EDEFAULT = false;
    public AbstractTool basicGetActive ();
    public boolean isCollapsible ();
    public void setActive (AbstractTool newActive);
    public void setCollapsible (boolean newCollapsible);
    public void setStack (boolean newStack);
package org.eclipse.gmf.codegen.gmfgen.impl;
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    protected EList linkTools = null;
    protected EList nodeTools = null;
    public EList getLinkTools ();
    public EList getNodeTools ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    protected EList linkTools = null;
    protected EList nodeTools = null;
    public EList getLinkTools ();
    public EList getNodeTools ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
public class ToolGroupImpl extends EntryBaseImpl implements ToolGroup {
    protected EList entries = null;
    protected boolean collapse = COLLAPSE_EDEFAULT;
    protected boolean stack = STACK_EDEFAULT;
    final protected static boolean COLLAPSE_EDEFAULT = false;
    final protected static boolean STACK_EDEFAULT = false;
    final protected static boolean TOOLS_ONLY_EDEFAULT = false;
    public boolean isCollapse ();
    public boolean isStack ();
    public void setCollapse (boolean newCollapse);
    public void setStack (boolean newStack);
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ToolGroupItemProvider extends EntryBaseItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void addCollapsePropertyDescriptor (Object object);
    protected void addStackPropertyDescriptor (Object object);
public class ToolGroupTraceImpl extends MatchingTraceImpl implements ToolGroupTrace {
public class ToolGroupTraceImpl extends MatchingTraceImpl implements ToolGroupTrace {
public class ToolingResourceFactory extends XMIResourceFactoryImpl {
public class ToolingResourceFactory extends XMIResourceFactoryImpl {
    public static class ToolResource extends XMIResourceImpl {
        public ToolResource (URI uri) {
public class ToolRegistryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class ToolRegistryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ToolRegistryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ToolRegistryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TopDownProvider extends DefaultProvider {
public class TopDownProvider extends DefaultProvider {
    protected Command createEdgesChangeBoundsCommands (DirectedGraph g, Point diff);
    protected Command createNodeChangeBoundCommands (DirectedGraph g, Point diff);
    protected void setLayoutDefaultMargin (int newMargin);
    public Command layoutEditParts (List selectedObjects, IAdaptable layoutHint);
abstract public class TopGraphicEditPart extends GraphicalEditPart implements IContainedEditPart {
abstract public class TopGraphicEditPart extends GraphicalEditPart implements IContainedEditPart {
public class TopNodeReferenceImpl extends NodeReferenceImpl implements TopNodeReference {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public void eSet (int featureID, Object newValue);
public class TopNodeReferenceImpl extends NodeReferenceImpl implements TopNodeReference {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class TopNodeReferenceImpl extends NodeReferenceImpl implements TopNodeReference {
    protected NodeMapping ownedChild = null;
public class TopNodeReferenceImpl extends NodeReferenceImpl implements TopNodeReference {
    protected NodeMapping ownedChild;
public class TopNodeReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
public class TopNodeReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
public class TopNodeReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TopNodeReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TopNodeReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TopNodeReferenceItemProvider extends NodeReferenceItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TraceFactoryImpl extends EFactoryImpl implements TraceFactory {
    public static TracePackage getPackage ();
public class TraceFactoryImpl extends EFactoryImpl implements TraceFactory {
    @Deprecated
    public static TracePackage getPackage ();
    @Override
public class TracePackageImpl extends EPackageImpl implements TracePackage {
public class TracePackageImpl extends EPackageImpl implements TracePackage {
public class TransactionalUpdateManager extends ResourceSetListenerImpl {
public class TransactionalUpdateManager extends ResourceSetListenerImpl {
public class TransformOptions extends AbstractPreferenceInitializer {
    final public static String PREF_GENERATE_RCP = "generate_rcp";
    final public static String PREF_USE_MAP_MODE = "use_map_mode";
    final public static String PREF_USE_RUNTIME_FIGURES = "use_runtime_figures";
public class TransformOptions extends AbstractPreferenceInitializer {
public class TransformOptions extends AbstractPreferenceInitializer {
public class TransformOptions extends AbstractPreferenceInitializer {
public class TransformOptions extends AbstractPreferenceInitializer {
public class TransformOptions extends AbstractPreferenceInitializer {
public class TransformToGenModelOperation {
public class TransformToGenModelOperation {
public class TransformToGenModelOperation {
public class TransformToGenModelOperation {
public class TransformToGenModelOperation {
    public TransformToGenModelOperation () {
public class TransformToGenModelOperation {
    public TransformToGenModelOperation (ResourceSet rs) {
public class TransformToGenModelOperation {
    public TransformToGenModelOperation (URI mapURI) {
    public URI getMapURI ();
    public void reset (URI uri);
public class TransformToGenModelOperation {
    public GenModel findGenmodel (ResourceSet rs) throws CoreException;
    public GenModel getGenModel ();
    public GenModel loadGenModel (ResourceSet rs, URI uri, IProgressMonitor pm) throws CoreException;
    public GenModelDetector getGenModelDetector ();
    public IStatus executeTransformation (ResourceSet rs, IProgressMonitor pm);
    public IStatus getLoadMappingStatus ();
    public IStatus getStaleGenmodelStatus ();
    public TransformToGenModelOperation () {
    public void setGenURI (URI gmfGen);
public class TransformToGenModelOperation {
public class TransformToGenModelOperation {
public class TransformToGenModelWizard extends Wizard implements IWorkbenchWizard {
public class TransformToGenModelWizard extends Wizard implements IWorkbenchWizard {
public class TreeEditPart extends AbstractTreeEditPart implements IEditingDomainProvider, NotificationListener {
public class TreeEditPart extends AbstractTreeEditPart implements IEditingDomainProvider, NotificationListener {
interface TypeLinkModelFacet extends LinkModelFacet, TypeModelFacet {
public interface TypeLinkModelFacet extends LinkModelFacet, TypeModelFacet {
    final public static String CREATE_COMMAND_SUFFIX = "TypeLinkCreateCommand";
public interface TypeLinkModelFacet extends LinkModelFacet, TypeModelFacet {
    final public static String CREATE_COMMAND_SUFFIX = "TypeLinkCreateCommand";
interface TypeLinkModelFacet extends LinkModelFacet, TypeModelFacet {
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
    final protected static String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
    public String getCreateCommandClassName ();
    public String getCreateCommandClassNameGen ();
    public String getCreateCommandQualifiedClassName ();
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public EList getSourceTypes ();
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public EList getAssistantSourceTypes ();
    public EList getAssistantTargetTypes ();
    public GenClass getSourceType ();
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public EList getAssistantSourceTypes ();
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
    public EList < GenClass > getAssistantSourceTypes ();
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    @Override
    protected GenFeature sourceMetaFeature = null;
    protected GenFeature targetMetaFeature = null;
    protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
    final protected static String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
    public String getCreateCommandClassName ();
    public String getCreateCommandClassNameGen ();
    public String getCreateCommandQualifiedClassName ();
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    protected GenFeature sourceMetaFeature;
    protected GenFeature targetMetaFeature;
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    public EList getSourceTypes ();
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeLinkModelFacetItemProvider extends TypeModelFacetItemProvider implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public void eSet (int featureID, Object newValue);
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    protected GenClass metaClass = null;
    protected GenConstraint modelElementSelector = null;
    protected GenElementInitializer modelElementInitializer = null;
    protected GenFeature childMetaFeature = null;
    protected GenFeature containmentMetaFeature = null;
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    protected GenClass metaClass;
    protected GenConstraint modelElementSelector;
    protected GenElementInitializer modelElementInitializer;
    protected GenFeature childMetaFeature;
    protected GenFeature containmentMetaFeature;
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    protected GenElementInitializer modelElementInitializer = null;
    protected ModelElementSelector modelElementSelector = null;
    public ModelElementSelector getModelElementSelector ();
    public NotificationChain basicSetModelElementInitializer (GenElementInitializer newModelElementInitializer, NotificationChain msgs);
    public NotificationChain basicSetModelElementSelector (ModelElementSelector newModelElementSelector, NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void setModelElementInitializer (GenElementInitializer newModelElementInitializer);
    public void setModelElementSelector (ModelElementSelector newModelElementSelector);
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    protected ModelElementSelector modelElementSelector = null;
    public void setModelElementSelector (ModelElementSelector newModelElementSelector);
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    protected GenConstraint modelElementSelector = null;
    public void setModelElementSelector (GenConstraint newModelElementSelector);
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class TypeModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
    protected EClass eStaticClass (); protected EList generatedTypes = null;
    protected EList types = null;
    public EList getAllTypes ();
    public EList getGeneratedTypes ();
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public String toString ();
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < GeneratedType > generatedTypes = null;
    protected EList < String > types = null;
    public EList < GeneratedType > getGeneratedTypes ();
    public EList < String > getAllTypes ();
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
    protected EList < GeneratedType > generatedTypes = null;
    protected EList < String > types = null;
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
    protected EList < GeneratedType > generatedTypes;
    protected EList < String > types;
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
    public NotificationChain basicSetTab (GenCustomPropertyTab newTab, NotificationChain msgs);
    public void setTab (GenCustomPropertyTab newTab);
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
    public NotificationChain basicSetTab (GenCustomPropertyTab newTab, NotificationChain msgs);
    public void setTab (GenCustomPropertyTab newTab);
public class TypeTabFilterImpl extends EObjectImpl implements TypeTabFilter {
public class TypeTabFilterItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class TypeTabFilterItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class TypeTabFilterItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class TypeTabFilterItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class UIModificationValidator implements IModificationValidator {
public class UIModificationValidator implements IModificationValidator {
    private class WindowListener implements IWindowListener {
        protected Shell shell;
        public Shell getShell ();
        public WindowListener (Shell theShell) {
        public void windowActivated (IWorkbenchWindow window);
        public void windowClosed (IWorkbenchWindow window);
        public void windowDeactivated (IWorkbenchWindow window);
        public void windowOpened (IWorkbenchWindow window);
    public UIModificationValidator () {
    public void dispose ();
public class UIModificationValidator implements IModificationValidator {
public class UIModificationValidator implements IModificationValidator {
    class RunnableWithStatus implements Runnable {
        public IStatus getResult ();
        public void run ();
        public void setShell (Shell shell);
public class UndoableModelPropertySheetEntry extends PropertySheetEntry {
    final public static String UNDO_PROPERTY_LABEL = EMFPropertiesResourceManager.getInstance ().getString ("UndoablePropertySheetEntry.commandName");
public class UndoableModelPropertySheetEntry extends PropertySheetEntry {
public class UndoableModelPropertySheetEntry extends PropertySheetEntry {
    protected CommandManager getCommandManager ();
    protected void valueChanged (UndoableModelPropertySheetEntry child, CompositeCommand command);
    public UndoableModelPropertySheetEntry (CommandManager manager) {
public class UndoableModelPropertySheetEntry extends PropertySheetEntry {
    protected void valueChanged (UndoableModelPropertySheetEntry child, ICommand command);
    public TransactionalEditingDomain getEditingDomain ();
    public UndoableModelPropertySheetEntry (IOperationHistory operationHistory) {
    public void setEditingDomain (TransactionalEditingDomain editingDomain);
    public void setValues (Object [] objects);
public class UnexecutableCommand extends AbstractCommand {
    public boolean isExecutable ();
    public boolean isRedoable ();
public class UnexecutableCommand extends AbstractCommand {
    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    protected CommandResult doRedoWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException;
    public boolean canExecute ();
    public boolean canRedo ();
public class Util {
    private static class TeardownAction {
        public TeardownAction (EObject container, EReference reference, EObject object) {
        public void execute ();
    public static void destroy (EObject eObject);
public class Util {
public class ValidatorChain implements EValidator {
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map context);
public class ValidatorChain implements EValidator {
    public boolean validate (EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EDataType eDataType, Object value, DiagnosticChain diagnostics, Map < Object, Object > context);
    public boolean validate (EObject eObject, DiagnosticChain diagnostics, Map < Object, Object > context);
package org.eclipse.gmf.mappings;
package org.eclipse.gmf.codegen.gmfgen;
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    protected String language = LANGUAGE_EDEFAULT;
    final protected static String LANGUAGE_EDEFAULT = "ocl";
    public void setLanguage (String newLanguage);
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    protected Language language = LANGUAGE_EDEFAULT;
    final protected static Language LANGUAGE_EDEFAULT = Language.OCL_LITERAL;
    final protected static String LANG_NAME_EDEFAULT = null;
    public void setLanguage (Language newLanguage);
package org.eclipse.gmf.mappings.impl;
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    protected Language language = LANGUAGE_EDEFAULT;
    final protected static Language LANGUAGE_EDEFAULT = Language.OCL_LITERAL;
    public void setLanguage (Language newLanguage);
package org.eclipse.gmf.codegen.gmfgen.impl;
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    protected GenLanguage language = LANGUAGE_EDEFAULT;
    final protected static GenLanguage LANGUAGE_EDEFAULT = GenLanguage.OCL_LITERAL;
    public void setLanguage (GenLanguage newLanguage);
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    public String toString ();
    public void eSet (int featureID, Object newValue);
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    @Override
    protected EClass eStaticClass ();
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    protected GenLanguage language = LANGUAGE_EDEFAULT;
    final protected static GenLanguage LANGUAGE_EDEFAULT = GenLanguage.OCL_LITERAL;
    public void setLanguage (GenLanguage newLanguage);
public class ValueExpressionImpl extends EObjectImpl implements ValueExpression {
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
public class ValueExpressionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ValueExpressionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ValueExpressionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class ValueExpressionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ValueExpressionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ValueExpressionItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
interface View extends EModelElement, NotationObject {
interface View extends EModelElement {
interface View extends EModelElement {
interface View extends EModelElement, NotationObject {
public class ViewComponentEditPolicy extends ComponentEditPolicy {
public class ViewComponentEditPolicy extends ComponentEditPolicy {
public class ViewGridAction extends PresentationAction {
public class ViewGridAction extends DiagramAction {
abstract public class ViewImpl extends EModelElementImpl implements View {
    @Override
    protected EPropertiesHolder eProperties ();
    @Override
    public EList < EObject > eContents ();
    @Override
    public EList < EObject > eCrossReferences ();
    @Override
    public URI eProxyURI ();
    @Override
    public boolean eIsProxy ();
    @Override
    protected URI eProxyURI;
abstract public class ViewImpl extends EModelElementImpl implements View {
abstract public class ViewImpl extends EModelElementImpl implements View {
abstract public class ViewImpl extends EModelElementImpl implements View {
abstract public class ViewImpl extends EModelElementImpl implements View {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public void eSet (EStructuralFeature eFeature, Object newValue);
abstract public class ViewImpl extends EModelElementImpl implements View {
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public void eSet (int featureID, Object newValue);
abstract public class ViewImpl extends EModelElementImpl implements View {
abstract public class ViewImpl extends EModelElementImpl implements View {
abstract public class ViewImpl extends EModelElementImpl implements View {
    protected EList persistedChildren = null;
    protected EList sourceEdges = null;
    protected EList styles = null;
    protected EList targetEdges = null;
    protected EList transientChildren = null;
    protected EObject element = null;
abstract public class ViewImpl extends EModelElementImpl implements View {
    protected EList persistedChildren;
    protected EList sourceEdges;
    protected EList styles;
    protected EList targetEdges;
    protected EList transientChildren;
    protected EObject element;
abstract public class ViewImpl extends EModelElementImpl implements View {
abstract public class ViewImpl extends EModelElementImpl implements View {
    @Override
    protected EPropertiesHolder eProperties ();
    @Override
    public EList < EObject > eContents ();
    @Override
    public EList < EObject > eCrossReferences ();
    @Override
    public URI eProxyURI ();
    @Override
    public boolean eIsProxy ();
    @Override
    protected URI eProxyURI;
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
    public byte [] getUUID ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
abstract public class ViewImpl extends EModelElementImpl implements View {
    protected byte [] uUID = UUID_EDEFAULT;
    final protected static byte [] UUID_EDEFAULT = null;
    public byte [] getUUID ();
    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass);
abstract public class ViewImpl extends EModelElementImpl implements View {
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs);
    public Object eGet (EStructuralFeature eFeature, boolean resolve);
    public boolean eIsSet (EStructuralFeature eFeature);
    public void eSet (EStructuralFeature eFeature, Object newValue);
    public void eUnset (EStructuralFeature eFeature);
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
    public void eUnset (int featureID);
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    protected EList requiredPluginIDs = null;
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    protected ViewmapLayoutType layoutType = LAYOUT_TYPE_EDEFAULT;
    final protected static ViewmapLayoutType LAYOUT_TYPE_EDEFAULT = ViewmapLayoutType.UNKNOWN_LITERAL;
    public void setLayoutType (ViewmapLayoutType newLayoutType);
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    protected EClass eStaticClass (); protected EList attributes = null;
    protected EList requiredPluginIDs = null;
    public EList getAttributes ();
    public EList getRequiredPluginIDs ();
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public String toString ();
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eUnset (int featureID);
    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue); protected EList < Attributes > attributes = null;
    protected EList < String > requiredPluginIDs = null;
    public EList < Attributes > getAttributes ();
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    protected EList < Attributes > attributes = null;
    protected EList < String > requiredPluginIDs = null;
abstract public class ViewmapImpl extends EObjectImpl implements Viewmap {
    protected EList < Attributes > attributes;
    protected EList < String > requiredPluginIDs;
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ViewmapItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class ViewPageBreaksAction extends PresentationAction {
public class ViewPageBreaksAction extends DiagramAction {
public class ViewRefactorHelper {
public class ViewRefactorHelper {
public class ViewRefactorHelper {
public class ViewRefactorHelper {
    protected void copyViewStyles (View oldView, View newView, List excludeStyles);
    public ViewRefactorHelper () {
public class ViewRulersAction extends PresentationAction {
public class ViewRulersAction extends DiagramAction {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
    public static void getAllRelatedEdgesForView (View view, Set < Edge > allEdges);
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class ViewUtil {
public class VirtualNode extends Subgraph {
public class VirtualNode extends AdvancedSubGraph {
public class VisibilityComponentEditPolicy extends ComponentEditPolicy {
public class VisibilityComponentEditPolicy extends ComponentEditPolicy {
    protected Command getDeleteCommand (GroupRequest deleteRequest);
public class WizardInput {
    @SuppressWarnings("unchecked")
    public String getInitialECoreFile ();
    public String getInitialGraphFile ();
    public String getInitialToolFile ();
    public ToolRegistry getToolDef ();
    public WizardInput () {
    public void setDomainModel (EPackage aPackage);
    public void setGraphDef (Canvas canvas);
    public void setInitialECoreFile (String initialECoreFile);
    public void setInitialGraphFile (String initialGraphFile);
    public void setToolDef (ToolRegistry registry);
abstract public class WizardInput {
    abstract public Canvas getCanvasDef ();
    abstract public EPackage getDomainModel ();
    abstract public ToolRegistry getToolDef ();
public class WizardInput {
public class WizardInput {
    public String getInitialECoreFile ();
    public String getInitialGraphFile ();
    public void setInitialECoreFile (String initialECoreFile);
    public void setInitialGraphFile (String initialGraphFile);
public class WizardInput {
public class WizardInput {
public class WizardInput {
public class WizardInput {
public class WizardInput {
public class WizardInput {
    final public static String ECORE_FILE_EXT = "ecore";
    final public static String GRAPHDEF_FILE_EXT = "gmfgraph";
    final public static String TOOLDEF_FILE_EXT = "gmftool";
public class WizardInput {
public class WizardInput {
    @SuppressWarnings("unchecked")
    public Mapping getMapping ();
    @SuppressWarnings("unchecked")
public class WizardUtil {
public class WizardUtil {
public class WizardUtil {
public class WizardUtil {
public class WizardUtil {
public class WizardUtil {
public class WizardUtil {
public class WizardUtil {
    public static boolean openEditor (IFile modelFile);
public class WizardUtil {
public class WizardUtil {
    @SuppressWarnings("unchecked")
public class WizardUtil {
public class WizardUtil {
final public class WorkbenchPartActivator {
    protected static String SHOW_VIEW_ERROR = ResourceManager.getInstance ().getString ("WorkbenchPartActivator.ErrorMessage");
final public class WorkbenchPartActivator {
public class WorkbenchPartDescirptor implements IWorkbenchPartDescriptor {
    public Class getPartClass ();
    public IWorkbenchPage getPartPage ();
    public boolean equals (Object obj);
    public int hashCode ();
public class WorkbenchPartDescirptor extends WorkbenchPartDescriptor {
class WorkspaceModelRegistry implements MetaModelSource {
class WorkspaceModelRegistry implements MetaModelSource {
    final private ResourceSet resourceSet = new ResourceSetImpl () {
        protected Resource delegatedGetResource (URI uri, boolean loadOnDemand);
    ;
public class WorkspaceResourceManager extends ResourceManagerImpl {
public class WorkspaceResourceManager extends ResourceManagerImpl {
public class WorkspaceResourceManager extends ResourceManagerImpl {
public class WorkspaceResourceManager extends ResourceManagerImpl {
    @Override
public class WorkspaceResourceManager extends ResourceManagerImpl {
    protected ResourceManager [] getDependenies ();
    public WorkspaceResourceManager (IProject context) {
public class WorkspaceResourceManager extends ResourceManagerImpl {
    @Override
    public WorkspaceResourceManager (IProject context, IPath [] configuredRoots) {
public class WorkspaceResourceManager extends ResourceManagerImpl {
public class WorkspaceResourceManager extends ResourceManagerImpl {
    @Override
public interface WorkspaceViewerProperties {
    final public String SNAPTOGRID = "snaptogrid";
    final public String VIEWGRID = "viewgrid";
    final public String VIEWRULERS = "viewrulers";
public interface WorkspaceViewerProperties {
    final public String GRIDLINECOLOR = "rulergrid.gridlinecolor";
    final public String GRIDLINESTYLE = "rulergrid.gridlinestyle";
    final public String GRIDORDER = "rulergrid.gridlevel";
    final public String GRIDSPACING = "rulergrid.gridspacing";
    final public String RULERUNIT = "rulergrid.rulerunit";
    final public String SNAPTOGRID = "rulergrid.snaptogrid";
    final public String VIEWGRID = "rulergrid.viewgrid";
    final public String VIEWRULERS = "rulergrid.viewrulers";
public interface WorkspaceViewerProperties {
public interface WorkspaceViewerProperties {
    final public String SNAPTOGEOMETRY = "rulergrid.snaptogeometry";
public class WrapLabel extends Figure implements PositionConstants {
    private class IconInfo {
        public Dimension getIconSize (int i);
public class WrapLabel extends Figure implements PositionConstants {
    abstract private static class IconInfo {
        abstract public Dimension getIconSize (IMapMode mapMode, int i);
        abstract public Dimension getTotalIconSize (IMapMode mapMode);
        abstract public Image getIcon (int i);
        abstract public int getMaxIcons ();
        abstract public int getNumberofIcons ();
        abstract public void invalidate ();
        abstract public void setIcon (Image icon, int i);
    private static class MapModeConstants {
        public Dimension getEllipseTextSize (Font f);
        public MapModeConstants (IMapMode mapMode) {
        public SingleIconInfo getSingleIconInfo (Image image); final public Dimension dimension_nDPtoLP_0;
        final public SingleIconInfo [] singleIconInfos = new SingleIconInfo [MAX_IMAGE_INFO];
        final public WeakHashMap fontToEllipseTextSize = new WeakHashMap ();
        final public WeakReference mapModeRef;
        final public int nDPtoLP_0;
        final public int nDPtoLP_2;
        final public int nDPtoLP_3;
    private static class MultiIconInfo extends IconInfo {
        public Dimension getIconSize (IMapMode mapMode, int i);
        public MultiIconInfo () {
    private static class SingleIconInfo extends IconInfo {
        public Dimension getIconSize (IMapMode mapMode, int i);
        public SingleIconInfo (Image icon) {
        final public static SingleIconInfo NULL_INFO = new SingleIconInfo () {
        ;
        public void setIcon (Image img, int i);
public class WrapLabel extends Figure implements PositionConstants {
    abstract private static class IconInfo {
        abstract public Dimension getIconSize (IMapMode mapMode, int i);
        abstract public Dimension getTotalIconSize (IMapMode mapMode);
        abstract public Image getIcon (int i);
        abstract public int getMaxIcons ();
        abstract public int getNumberofIcons ();
        abstract public void invalidate ();
        abstract public void setIcon (Image icon, int i);
    private static class MapModeConstants {
        public Dimension getEllipseTextSize (Font f);
        public MapModeConstants (IMapMode mapMode) {
        public SingleIconInfo getSingleIconInfo (Image image); final public Dimension dimension_nDPtoLP_0;
        final public SingleIconInfo [] singleIconInfos = new SingleIconInfo [MAX_IMAGE_INFO];
        final public WeakHashMap fontToEllipseTextSize = new WeakHashMap ();
        final public WeakReference mapModeRef;
        final public int nDPtoLP_0;
        final public int nDPtoLP_2;
        final public int nDPtoLP_3;
    private static class MultiIconInfo extends IconInfo {
        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public MultiIconInfo () {
        public int getMaxIcons ();
        public void setIcon (Image icon, int i);
    private static class SingleIconInfo extends IconInfo {
        public Dimension getIconSize (IMapMode mapMode, int i);
        public Dimension getTotalIconSize (IMapMode mapMode);
        public Image getIcon (int i);
        public SingleIconInfo (Image icon) {
        final public int getMaxIcons ();
        public int getNumberofIcons (); final public static SingleIconInfo NULL_INFO = new SingleIconInfo () {
            public int getNumberofIcons ();
        ;
        public void setIcon (Image img, int i);
    protected Dimension getTotalIconSize ();
    protected boolean hasIcons ();
    protected int getNumberofIcons ();
    public Dimension getMaximumSize ();
    public Dimension getMinimumSize (int w, int h);
    public Dimension getPreferredSize (int wHint, int hHint);
    public Image getIcon ();
    public boolean hasFocus ();
    public boolean isSelected ();
    public int getIconAlignment ();
    public int getIconTextGap ();
    public int getTextAlignment ();
    public void paintFigure (Graphics graphics);
    public void setFocus (boolean b);
    public void setIcon (Image image);
    public void setIcon (Image image, int index);
    public void setIconAlignment (int align);
    public void setLabelAlignment (int align);
    public void setSelected (boolean b);
    public void setText (String s);
    public void setTextAlignment (int align);
    public void setTextPlacement (int where);
    public void setTextStrikeThrough (boolean b);
    public void setTextUnderline (boolean b);
public class WrapLabel extends WrappingLabel {
public class WrapLabel extends Figure implements PositionConstants {
    private static class IconInfo {
public class WrapLabel extends Figure implements PositionConstants {
    private class IconInfo {
public class WrappingCommand extends Command {
public class WrappingCommand extends Command {
    @Override
public class WrappingCommand extends Command {
    @Override
    public boolean canExecute ();
    public boolean canUndo ();
    public void execute ();
    public void redo ();
    public void undo ();
public class WrappingCommand extends AbstractWrappingCommand {
    @Override
    public org.eclipse.emf.common.command.Command getEMFCommand ();
public class WrappingLabel extends Figure implements PositionConstants {
public class WrappingLabel extends Figure implements PositionConstants {
public class XpandContentAssistProcessor implements IContentAssistProcessor {
public class XpandContentAssistProcessor implements IContentAssistProcessor {
    private static class ProposalComparator implements Comparator < ICompletionProposal > {
        public int compare (final ICompletionProposal p1, final ICompletionProposal p2);
[XpandKWLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[XpandKWLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class XpandKWLexerprs implements XpandKWLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 238, EOFT_SYMBOL = 39, EOLT_SYMBOL = 55, ERROR_ACTION = 239, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 286, MAX_LA = 1, NT_OFFSET = 54, NUM_NONTERMINALS = 2, NUM_RULES = 47, NUM_STATES = 188, NUM_SYMBOLS = 56, SEGMENT_SIZE = 8192, START_STATE = 48;
    public interface IsKeyword {
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 0, 4, 5, 3, 7, 0, 9, 10, 0, 12, 13, 14, 15, 16, 17, 0, 19, 20, 3, 22, 0, 24, 25, 0, 1, 0, 18, 7, 31, 21, 10, 0, 12, 0, 3, 15, 3, 17, 0, 16, 20, 18, 11, 0, 6, 2, 0, 22, 17, 16, 12, 0, 1, 15, 8, 0, 10, 0, 1, 0, 35, 18, 0, 1, 2, 14, 23, 10, 0, 38, 2, 0, 0, 18, 0, 37, 21, 6, 0, 0, 8, 2, 10, 0, 0, 2, 2, 0, 0, 0, 0, 20, 0, 0, 0, 27, 8, 3, 39, 0, 0, 8, 28, 0, 17, 16, 16, 15, 0, 1, 0, 12, 34, 0, 0, 0, 0, 0, 0, 6, 20, 4, 6, 0, 14, 11, 0, 9, 5, 0, 0, 0, 0, 0, 4, 20, 33, 4, 0, 0, 9, 0, 0, 5, 0, 4, 14, 0, 0, 0, 0, 0, 26, 24, 5, 4, 6, 0, 1, 0, 1, 22, 0, 0, 0, 1, 0, 23, 26, 7, 0, 0, 6, 10, 27, 0, 1, 7, 30, 8, 0, 0, 0, 3, 2, 0, 0, 0, 0, 8, 0, 4, 0, 0, 9, 7, 0, 5, 12, 0, 7, 0, 0, 4, 2, 4, 0, 0, 2, 0, 0, 21, 5, 0, 0, 2, 7, 0, 0, 9, 2, 0, 1, 0, 0, 1, 0, 4, 11, 0, 0, 0, 36, 7, 0, 0, 0, 3, 3, 3, 11, 10, 0, 1, 0, 15, 0, 1, 0, 0, 0, 0, 0, 3, 0, 11, 7, 5, 0, 11, 0, 3, 2, 0, 13, 0, 3, 0, 14, 2, 0, 0, 0, 0, 0, 2, 4, 0, 0, 0, 0, 1, 0, 13, 13, 0, 0, 0, 23, 0, 16, 0, 0, 0, 8,
public class XpandKWLexerprs implements XpandKWLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 238, EOFT_SYMBOL = 39, EOLT_SYMBOL = 54, ERROR_ACTION = 239, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 286, MAX_LA = 1, NT_OFFSET = 53, NUM_NONTERMINALS = 2, NUM_RULES = 47, NUM_STATES = 188, NUM_SYMBOLS = 55, SEGMENT_SIZE = 8192, START_STATE = 48;
    public interface IsKeyword {
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 0, 4, 5, 3, 7, 0, 9, 10, 0, 12, 13, 14, 15, 16, 17, 0, 19, 20, 3, 22, 0, 24, 25, 0, 1, 0, 18, 7, 31, 21, 10, 0, 12, 0, 3, 15, 3, 17, 0, 16, 20, 18, 11, 0, 6, 2, 0, 22, 17, 16, 12, 0, 1, 15, 8, 0, 10, 0, 1, 0, 35, 18, 0, 1, 2, 14, 23, 10, 0, 38, 2, 0, 0, 18, 0, 37, 21, 6, 0, 0, 8, 2, 10, 0, 0, 2, 2, 0, 0, 0, 0, 20, 0, 0, 0, 27, 8, 3, 39, 0, 0, 8, 28, 0, 17, 16, 16, 15, 0, 1, 0, 12, 34, 0, 0, 0, 0, 0, 0, 6, 20, 4, 6, 0, 14, 11, 0, 9, 5, 0, 0, 0, 0, 0, 4, 20, 33, 4, 0, 0, 9, 0, 0, 5, 0, 4, 14, 0, 0, 0, 0, 0, 26, 24, 5, 4, 6, 0, 1, 0, 1, 22, 0, 0, 0, 1, 0, 23, 26, 7, 0, 0, 6, 10, 27, 0, 1, 7, 30, 8, 0, 0, 0, 3, 2, 0, 0, 0, 0, 8, 0, 4, 0, 0, 9, 7, 0, 5, 12, 0, 7, 0, 0, 4, 2, 4, 0, 0, 2, 0, 0, 21, 5, 0, 0, 2, 7, 0, 0, 9, 2, 0, 1, 0, 0, 1, 0, 4, 11, 0, 0, 0, 36, 7, 0, 0, 0, 3, 3, 3, 11, 10, 0, 1, 0, 15, 0, 1, 0, 0, 0, 0, 0, 3, 0, 11, 7, 5, 0, 11, 0, 3, 2, 0, 13, 0, 3, 0, 14, 2, 0, 0, 0, 0, 0, 2, 4, 0, 0, 0, 0, 1, 0, 13, 13, 0, 0, 0, 23, 0, 16, 0, 0, 0, 8,
public interface XpandKWLexersym {
    final public static int Char_A = 7, Char_B = 36, Char_C = 19, Char_D = 12, Char_DollarSign = 40, Char_E = 1, Char_EOF = 39, Char_F = 15, Char_G = 47, Char_H = 29, Char_I = 10, Char_J = 48, Char_K = 49, Char_L = 17, Char_M = 37, Char_N = 11, Char_O = 8, Char_P = 20, Char_Q = 50, Char_R = 3, Char_S = 16, Char_T = 6, Char_U = 30, Char_V = 51, Char_W = 52, Char_X = 38, Char_Y = 53, Char_Z = 54, Char_a = 21, Char_b = 41, Char_c = 13, Char_d = 31, Char_e = 2, Char_f = 24, Char_g = 42, Char_h = 32, Char_i = 14, Char_j = 33, Char_k = 43, Char_l = 4, Char_m = 34, Char_n = 25, Char_o = 18, Char_p = 26, Char_q = 44, Char_r = 22, Char_s = 9, Char_t = 5, Char_u = 23, Char_v = 45, Char_w = 27, Char_x = 28, Char_y = 35, Char_z = 46;
public interface XpandKWLexersym {
    final public static int Char_A = 7, Char_B = 36, Char_C = 19, Char_D = 12, Char_E = 1, Char_EOF = 39, Char_F = 15, Char_G = 46, Char_H = 29, Char_I = 10, Char_J = 47, Char_K = 48, Char_L = 17, Char_M = 37, Char_N = 11, Char_O = 8, Char_P = 20, Char_Q = 49, Char_R = 3, Char_S = 16, Char_T = 6, Char_U = 30, Char_V = 50, Char_W = 51, Char_X = 38, Char_Y = 52, Char_Z = 53, Char_a = 21, Char_b = 40, Char_c = 13, Char_d = 31, Char_e = 2, Char_f = 24, Char_g = 41, Char_h = 32, Char_i = 14, Char_j = 33, Char_k = 42, Char_l = 4, Char_m = 34, Char_n = 25, Char_o = 18, Char_p = 26, Char_q = 43, Char_r = 22, Char_s = 9, Char_t = 5, Char_u = 23, Char_v = 44, Char_w = 27, Char_x = 28, Char_y = 35, Char_z = 45;
public class XpandLexer extends LpgLexStream implements RuleAction, XpandLexersym, XpandParsersym {
public class XpandLexer extends LpgLexStream implements RuleAction, XpandLexersym, XpandParsersym {
    @Override
    public void reportError (int errorCode, String locationInfo, String tokenText);
    @Override
    public void reportError (int errorCode, String locationInfo, int leftToken, int rightToken, String tokenText);
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class XpandLexerprs implements XpandLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 621, EOFT_SYMBOL = 103, EOLT_SYMBOL = 106, ERROR_ACTION = 622, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1013, MAX_LA = 6, NT_OFFSET = 105, NUM_NONTERMINALS = 41, NUM_RULES = 391, NUM_STATES = 50, NUM_SYMBOLS = 146, SEGMENT_SIZE = 8192, START_STATE = 392;
    public interface BaseAction {
        final public static char baseAction [] = {20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 16, 16, 21, 14, 14, 14, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 22, 22, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 10, 10, 10, 10, 23, 23, 23, 23, 24, 24, 17, 17, 15, 15, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 20, 20, 27, 27, 29, 29, 29, 29, 29, 28, 28, 20, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 18, 18, 33, 33, 34, 34, 35, 35, 36, 36, 19, 19, 19, 19, 19, 19, 19, 19, 19,
          19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 31, 31, 1628, 37, 43, 44, 113, 40, 203, 104, 155, 43, 44, 157, 154, 156, 577, 2140, 415, 228, 1254, 114, 424, 6, 407, 2147, 38, 549, 1731, 196, 43, 44, 1152, 195, 1625, 399, 2141, 224, 226, 164, 197, 199, 2148, 470, 2171, 474, 1731, 196, 43, 44, 465, 195, 2159, 38, 2174, 454, 2176, 164, 197, 199, 2142, 480, 2175, 474, 1329, 155, 43, 44, 157, 154, 156, 2177, 2139, 1720, 160, 1, 246, 253, 244, 248, 2183, 247, 243, 2160, 1828, 196, 43, 44, 488, 195, 2184, 2185, 1624, 1718, 2186, 165, 197, 199, 1428, 155, 43, 44, 157, 154, 156, 1805, 483, 236, 158
    public interface BaseCheck {
        final public static byte baseCheck [] = {0, 1, 3, 3, 1, 3, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 5, 1, 1, 2, 3, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 0, 1, 2, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 2, 1, 1, 1, 1, 1, 0, 1, 12, 0, 2, 3, 4, 5, 6, 7, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
    public interface TermAction {
        final public static char termAction [] = {0, 622, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 876, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 730, 753, 747, 749, 760, 762, 873, 872, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 871, 874, 867, 499, 232, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 730, 753, 747, 749, 760, 762, 852, 851, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746,
          743, 744, 745, 764, 748, 750, 731, 732, 225, 853, 849, 855, 390, 2036, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 890, 668, 670, 671, 672, 681, 685, 687, 688, 887, 888, 889, 891, 898, 899, 903, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 876, 892, 893, 894, 895, 896, 897, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 730, 753, 747, 749, 760, 762, 873, 872, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 871, 874, 867, 622, 916, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 915, 668, 670, 671, 672, 681, 685, 687, 688, 912, 913, 914, 917, 924, 519, 928, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 876, 918, 919, 920, 921, 922, 923, 925, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 730, 753, 747, 749, 760, 762, 873, 872, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739, 740, 733
          , 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 871, 874, 867, 622, 940, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 527, 668, 670, 671, 672, 681, 685, 687, 688, 937, 938, 939, 941, 948, 949, 953, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 876, 942, 943, 944, 945, 946, 947, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 730, 753, 747, 749, 760, 762, 873, 872, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 871, 874, 867, 622, 966, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 965, 668, 670, 671, 672, 681, 685, 687, 688, 962, 963, 964, 967, 974, 975, 541, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 876, 968, 969, 970, 971, 972, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 730, 753, 747, 749, 760, 762, 873, 872, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739,
          740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 871, 874, 867, 622, 563, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 890, 668, 670, 671, 672, 681, 685, 687, 688, 887, 888, 889, 891, 898, 899, 903, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 876, 892, 893, 894, 895, 896, 897, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 730, 753, 747, 749, 760, 762, 873, 872, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 871, 874, 867, 622, 2240, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507
          , 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 622, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 1730, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 622, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 1832, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
          507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 622, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 1934, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 622, 991, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 990, 668, 670, 671, 672, 681, 685, 687, 688, 987, 988, 989, 992, 161, 999, 1003, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 876, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 730, 753, 747, 749, 760, 762, 873, 872, 741, 751, 742, 752, 754, 755, 756,
          757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 871, 874, 867, 390, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 235, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 622, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 730, 753, 747, 749, 760, 762, 781, 784, 741, 751, 742, 752, 754, 755
          , 756, 757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 622, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 730, 753, 747, 749, 760, 762, 657, 785, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761, 737, 738, 739, 740, 733, 734, 746, 743, 744, 745, 764, 748, 750, 731, 732, 36, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 763, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 769, 753, 747, 749, 760, 762, 771, 770, 741, 751, 742, 752, 754, 755, 756, 757, 758, 759, 761
          , 737, 738, 739, 740, 773, 774, 746, 743, 744, 745, 764, 748, 750, 622, 622, 622, 775, 622, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 463, 432, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 730, 450, 452, 426, 653, 444, 462, 631, 418, 436, 446, 622, 646, 647, 644, 645, 655, 650, 434, 629, 461, 636, 637, 733, 734, 622, 484, 89, 3205, 622, 410, 622, 731, 732, 398, 621, 622, 845, 166, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 815, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 820, 805, 801, 803, 812, 814, 792, 795, 622, 622, 796, 473, 806, 807, 808, 809, 810,
          811, 813, 790, 791, 793, 794, 502, 1013, 800, 797, 798, 799, 816, 802, 804, 167, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 815, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 820, 805, 801, 803, 812, 814, 792, 795, 622, 510, 796, 473, 806, 807, 808, 809, 810, 811, 813, 790, 791, 793, 794, 622, 622, 800, 797, 798, 799, 816, 802, 804, 1, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 622, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 622, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696,
          699, 706, 707, 711, 622, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 5, 698, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 669, 673, 697, 668, 670, 671, 672, 681, 685, 687, 688, 694, 695, 696, 699, 706, 707, 711, 622, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 686, 689, 690, 691, 692, 693, 667, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 622, 841, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 832, 836, 840, 831, 833, 834, 835, 10, 34, 29, 27, 837, 838, 839, 842, 4, 32, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 39, 622, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 17, 823, 826, 16, 622, 13, 8, 640, 825, 827, 824, 596, 622, 622, 622, 622, 89, 622, 622, 622, 622, 89, 622, 622, 622, 622, 622, 622, 622, 622, 642, 622, 622, 641, 730, 643, 622, 634, 652, 765, 422, 482, 622, 495, 622, 571, 504, 856, 3200, 622, 622,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
          43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96
          , 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
          50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1
          , 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57
          , 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 0, 0, 0, 100, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 0, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 0, 1, 0, 1, 0, 99, 0, 97, 98, 99, 103, 0, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0,
          75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 14, 102, 90, 91, 92, 93, 94, 95, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 1, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 0, 0, 90, 91, 92, 93, 94, 95, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
public class XpandLexerprs implements XpandLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 623, EOFT_SYMBOL = 104, EOLT_SYMBOL = 106, ERROR_ACTION = 624, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1017, MAX_LA = 6, NT_OFFSET = 105, NUM_NONTERMINALS = 41, NUM_RULES = 393, NUM_STATES = 50, NUM_SYMBOLS = 146, SEGMENT_SIZE = 8192, START_STATE = 394;
    public interface BaseAction {
        final public static char baseAction [] = {20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 16, 16, 21, 14, 14, 14, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 22, 22, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 10, 10, 10, 10, 23, 23, 23, 23, 24, 24, 17, 17, 15, 15, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 20, 20, 27, 27, 29, 29, 29, 29, 29, 28, 28, 20, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 18, 18, 33, 33, 34, 34, 35, 35, 36, 36, 19, 19, 19, 19, 19, 19, 19,
          19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 31, 31, 1840, 37, 43, 44, 113, 40, 205, 105, 156, 43, 44, 158, 155, 157, 579, 2158, 417, 230, 1266, 114, 426, 6, 409, 2166, 38, 551, 1644, 198, 43, 44, 1163, 197, 1935, 401, 2160, 226, 228, 165, 199, 201, 2167, 472, 2190, 476, 1644, 198, 43, 44, 467, 197, 2178, 38, 2194, 456, 2195, 165, 199, 201, 2161, 482, 2193, 476, 1342, 156, 43, 44, 158, 155, 157, 2196, 2159, 1640, 161, 1, 248, 255, 246, 250, 2202, 249, 245, 2179, 1742, 198, 43, 44, 490, 197, 2203, 2205, 1816, 1830, 2206, 166, 199, 201, 1442, 156, 43, 44, 158, 155, 157, 1718, 485,
    public interface BaseCheck {
        final public static byte baseCheck [] = {0, 1, 3, 3, 1, 3, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 5, 1, 1, 2, 3, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 0, 1, 2, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 2, 1, 1, 1, 1, 1, 0, 1, 12, 0, 2, 3, 4, 5, 6, 7, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
    public interface TermAction {
        final public static char termAction [] = {0, 624, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 880, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 732, 755, 749, 751, 762, 764, 877, 876, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 875, 878, 871, 501, 234, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 732, 755, 749, 751, 762, 764, 856, 855, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736,
          748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 227, 857, 853, 859, 392, 2050, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 894, 670, 672, 673, 674, 683, 687, 689, 690, 891, 892, 893, 895, 902, 903, 907, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 880, 896, 897, 898, 899, 900, 901, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 732, 755, 749, 751, 762, 764, 877, 876, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 875, 878, 871, 624, 920, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 919, 670, 672, 673, 674, 683, 687, 689, 690, 916, 917, 918, 921, 928, 521, 932, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 880, 922, 923, 924, 925, 926, 927, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 732, 755, 749, 751, 762, 764, 877, 876, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740
          , 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 875, 878, 871, 624, 944, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 529, 670, 672, 673, 674, 683, 687, 689, 690, 941, 942, 943, 945, 952, 953, 957, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 880, 946, 947, 948, 949, 950, 951, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 732, 755, 749, 751, 762, 764, 877, 876, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 875, 878, 871, 624, 970, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 969, 670, 672, 673, 674, 683, 687, 689, 690, 966, 967, 968, 971, 978, 979, 543, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 880, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 732, 755, 749, 751, 762, 764, 877, 876, 743, 753, 744, 754, 756, 757, 758, 759, 760,
          761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 875, 878, 871, 624, 565, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 894, 670, 672, 673, 674, 683, 687, 689, 690, 891, 892, 893, 895, 902, 903, 907, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 880, 896, 897, 898, 899, 900, 901, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 732, 755, 749, 751, 762, 764, 877, 876, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 875, 878, 871, 624, 2256, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509
          , 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 624, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 1741, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 624, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 1844, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
          509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 624, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 1947, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 624, 995, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 994, 670, 672, 673, 674, 683, 687, 689, 690, 991, 992, 993, 996, 162, 1003, 1007, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 880, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 732, 755, 749,
          751, 762, 764, 877, 876, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 875, 878, 871, 392, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 237, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 624, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721
          , 732, 755, 749, 751, 762, 764, 784, 787, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 624, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 732, 755, 749, 751, 762, 764, 659, 788, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 735, 736, 748, 745, 746, 747, 766, 767, 750, 752, 733, 734, 36, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 765, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 772, 755, 749
          , 751, 762, 764, 774, 773, 743, 753, 744, 754, 756, 757, 758, 759, 760, 761, 763, 739, 740, 741, 742, 776, 777, 748, 745, 746, 747, 766, 767, 750, 752, 89, 3227, 624, 778, 167, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 818, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 824, 808, 804, 806, 815, 817, 795, 798, 624, 624, 799, 475, 809, 810, 811, 812, 813, 814, 816, 793, 794, 796, 797, 504, 624, 803, 800, 801, 802, 819, 820, 805, 807, 168, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 818, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 824, 808, 804, 806, 815,
          817, 795, 798, 624, 624, 799, 475, 809, 810, 811, 812, 813, 814, 816, 793, 794, 796, 797, 624, 486, 803, 800, 801, 802, 819, 820, 805, 807, 624, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 465, 434, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 732, 452, 454, 428, 655, 446, 464, 633, 420, 438, 448, 412, 648, 649, 646, 647, 657, 652, 436, 631, 463, 638, 639, 735, 736, 624, 512, 624, 1017, 624, 624, 624, 624, 733, 734, 400, 624, 624, 849, 1, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 624, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 624, 700, 722, 723, 724, 725,
          726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 623, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 5, 700, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 671, 675, 699, 670, 672, 673, 674, 683, 687, 689, 690, 696, 697, 698, 701, 708, 709, 713, 624, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 669, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 624, 845, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 836, 840, 844, 835, 837, 838, 839, 34, 10, 29, 27, 841, 842, 843, 846, 4, 32, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 39, 624, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 17, 827, 830, 624, 16, 13, 8, 642, 829, 831, 828, 598, 624, 624, 624, 624, 624, 89, 624, 624, 89, 624, 624, 624, 624, 624, 624, 624, 624, 624, 644,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 101, 102, 103, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
          41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
          92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
          , 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92
          , 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42
          , 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
          97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 1, 0, 101, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 14, 0, 90, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
          59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 0, 1, 90, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 100, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 0, 1, 0, 103, 0, 0, 0, 0, 98, 99, 100, 0, 0, 103, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 104, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
[XpandLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 54 garbage recoveries were required (larger size recommended for improved performance)
public interface XpandLexersym {
    final public static int Char_0 = 2, Char_1 = 3, Char_2 = 4, Char_3 = 5, Char_4 = 6, Char_5 = 7, Char_6 = 8, Char_7 = 9, Char_8 = 10, Char_9 = 11, Char_A = 23, Char_Acute = 104, Char_AfterASCII = 101, Char_Ampersand = 67, Char_AtSign = 91, Char_B = 24, Char_BackQuote = 92, Char_BackSlash = 76, Char_C = 25, Char_CR = 98, Char_Caret = 95, Char_Colon = 68, Char_Comma = 82, Char_CtlCharNotWS = 100, Char_D = 14, Char_DollarSign = 105, Char_Dot = 69, Char_DoubleQuote = 73, Char_E = 1, Char_EOF = 103, Char_Equal = 30, Char_Exclamation = 75, Char_F = 26, Char_FF = 89, Char_G = 48, Char_GreaterThan = 70, Char_H = 49, Char_HT = 88, Char_I = 50, Char_J = 51, Char_K = 52, Char_L = 53, Char_LF = 97, Char_LG = 102, Char_LeftBrace = 77, Char_LeftBracket = 79, Char_LeftParen = 86, Char_LessThan = 83, Char_M = 27, Char_Minus = 85, Char_N = 28, Char_O = 54, Char_P = 55, Char_Percent = 90, Char_Plus = 84, Char_Q = 56, Char_QuestionMark = 81, Char_R = 29, Char_RG = 99, Char_RightBrace = 78, Char_RightBracket = 80,
      Char_RightParen = 87, Char_S = 57, Char_SemiColon = 96, Char_Sharp = 94, Char_SingleQuote = 74, Char_Slash = 71, Char_Space = 65, Char_Star = 72, Char_T = 58, Char_Tilde = 93, Char_U = 59, Char_V = 60, Char_VerticalBar = 66, Char_W = 61, Char_X = 62, Char_Y = 63, Char_Z = 64, Char__ = 47, Char_a = 15, Char_b = 12, Char_c = 16, Char_d = 17, Char_e = 18, Char_f = 13, Char_g = 31, Char_h = 32, Char_i = 33, Char_j = 34, Char_k = 35, Char_l = 36, Char_m = 37, Char_n = 19, Char_o = 38, Char_p = 39, Char_q = 40, Char_r = 20, Char_s = 41, Char_t = 21, Char_u = 22, Char_v = 42, Char_w = 43, Char_x = 44, Char_y = 45, Char_z = 46;
public interface XpandLexersym {
    final public static int Char_0 = 2, Char_1 = 3, Char_2 = 4, Char_3 = 5, Char_4 = 6, Char_5 = 7, Char_6 = 8, Char_7 = 9, Char_8 = 10, Char_9 = 11, Char_A = 23, Char_Acute = 105, Char_AfterASCII = 102, Char_Ampersand = 67, Char_AtSign = 91, Char_B = 24, Char_BackQuote = 92, Char_BackSlash = 76, Char_C = 25, Char_CR = 99, Char_Caret = 96, Char_Colon = 68, Char_Comma = 82, Char_CtlCharNotWS = 101, Char_D = 14, Char_DollarSign = 95, Char_Dot = 69, Char_DoubleQuote = 73, Char_E = 1, Char_EOF = 104, Char_Equal = 30, Char_Exclamation = 75, Char_F = 26, Char_FF = 89, Char_G = 48, Char_GreaterThan = 70, Char_H = 49, Char_HT = 88, Char_I = 50, Char_J = 51, Char_K = 52, Char_L = 53, Char_LF = 98, Char_LG = 103, Char_LeftBrace = 77, Char_LeftBracket = 79, Char_LeftParen = 86, Char_LessThan = 83, Char_M = 27, Char_Minus = 85, Char_N = 28, Char_O = 54, Char_P = 55, Char_Percent = 90, Char_Plus = 84, Char_Q = 56, Char_QuestionMark = 81, Char_R = 29, Char_RG = 100, Char_RightBrace = 78, Char_RightBracket = 80,
      Char_RightParen = 87, Char_S = 57, Char_SemiColon = 97, Char_Sharp = 94, Char_SingleQuote = 74, Char_Slash = 71, Char_Space = 65, Char_Star = 72, Char_T = 58, Char_Tilde = 93, Char_U = 59, Char_V = 60, Char_VerticalBar = 66, Char_W = 61, Char_X = 62, Char_Y = 63, Char_Z = 64, Char__ = 47, Char_a = 15, Char_b = 12, Char_c = 16, Char_d = 17, Char_e = 18, Char_f = 13, Char_g = 31, Char_h = 32, Char_i = 33, Char_j = 34, Char_k = 35, Char_l = 36, Char_m = 37, Char_n = 19, Char_o = 38, Char_p = 39, Char_q = 40, Char_r = 20, Char_s = 41, Char_t = 21, Char_u = 22, Char_v = 42, Char_w = 43, Char_x = 44, Char_y = 45, Char_z = 46;
public class XpandParser extends PrsStream implements RuleAction {
public class XpandParser extends PrsStream implements RuleAction {
    @Override
    public void reportError (int errorCode, String locationInfo, String tokenText);
    @Override
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class XpandParserprs implements XpandParsersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ERROR_SYMBOL = 83, MAX_NAME_LENGTH = 24, SCOPE_SIZE = 18, SCOPE_UBOUND = 17;
    final public static int ACCEPT_ACTION = 1568, EOFT_SYMBOL = 40, EOLT_SYMBOL = 40, ERROR_ACTION = 1569, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1726, MAX_LA = 2, NT_OFFSET = 83, NUM_NONTERMINALS = 74, NUM_RULES = 157, NUM_STATES = 184, NUM_SYMBOLS = 157, SEGMENT_SIZE = 8192, START_STATE = 1324;
    public interface Asb {
    public interface Asr {
        final public static byte asr [] = {0, 62, 35, 36, 61, 0, 2, 7, 17, 8, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 20, 16, 23, 19, 18, 21, 22, 24, 27, 32, 0, 2, 7, 17, 8, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 20, 23, 19, 18, 21, 22, 24, 27, 6, 16, 0, 66, 17, 26, 65, 0, 3, 4, 5, 29, 1, 0, 82, 40, 61, 41, 62, 36, 35, 0, 8, 0, 41, 31, 37, 67, 69, 71, 72, 73, 75, 81, 76, 74, 70, 39, 68, 63, 64, 27, 24, 7, 17, 8, 2, 20, 16, 23, 19, 18, 21, 22, 9, 10, 11, 12, 13, 14, 15, 3, 4, 5, 1, 0, 71, 72, 73, 0, 29, 1, 28, 25, 2, 0, 2, 17, 26, 39, 25, 0, 17, 26, 1, 0, 41, 36, 35, 40, 0, 44, 43, 0, 7, 2, 47, 25, 39, 28, 34, 29, 59, 58, 52, 53, 54, 55, 56, 57, 42, 49, 43, 44, 50, 45, 1, 30, 6, 32, 33, 65, 38, 78, 79, 48, 80, 17, 26, 0, 46, 0, 31, 0, 37, 0, 47, 0, 1, 43, 44, 30, 32, 33, 65, 38, 78, 79, 80, 26, 2, 7, 28, 42, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 17, 59, 34, 6, 29, 0, 77, 0, 32, 33, 6, 0, 51, 0, 38, 0, 30, 0, 42, 45, 6, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 17, 29, 59, 34, 60, 7, 28, 2, 0, 78, 0, 69, 0,
    public interface BaseAction {
        final public static char baseAction [] = {62, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 41, 41, 23, 23, 21, 21, 22, 22, 20, 20, 63, 63, 63, 63, 63, 63, 19, 19, 64, 64, 17, 17, 65, 65, 18, 18, 18, 42, 42, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 74, 74, 36, 36, 34, 34, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 62, 62, 37, 37, 45, 45, 66, 66, 33, 33, 43, 43, 46, 44, 44, 47, 39, 39, 39, 39, 35, 35, 40, 40, 40, 38, 38, 32, 48, 48, 49, 49, 49, 49, 49, 49, 31, 56, 56, 30, 30, 50, 50, 50, 57, 58, 58, 58, 68, 68, 67, 59, 51, 69, 69, 52, 70, 70, 60, 60, 53, 61, 61, 71, 71, 54, 55, 72, 72, 1, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 140, 1, 260, 86, 80, 54, 79, 1498, 50, 55, 1514, 38, 1387, 44, 45, 46, 47, 48, 49, 33, 116, 1445, 119, 120, 121, 122, 123, 124, 344, 130, 131, 132, 1, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327,
          1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 140, 1, 260, 86, 80, 54, 79, 1498, 50, 55, 1514, 37, 1387, 44, 45, 46, 47, 48, 49, 286, 118, 1445, 119, 120, 121, 122, 123, 124, 309, 130, 131, 132, 34, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 1333, 1490, 463, 1395, 1529, 78, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 59, 86, 1488, 464, 1542, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 59, 86, 1509, 1558, 78, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1531, 1, 59, 86, 58, 1470, 1553, 106, 86, 80, 1527, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1526, 1, 106, 86
          , 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 133, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1449, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1534, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1382, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1535, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1526, 1, 134, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1539, 1, 106, 86, 80, 54, 79, 1498,
          50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1543, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1548, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1556, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1468, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 135, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1427, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1560, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36,
          1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 148, 1, 106, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 3, 1473, 1, 187, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 1552, 187, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 5, 1521, 2, 162, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1510, 7, 1521, 162, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 1538, 162, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 11, 9, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 15, 212, 86, 80, 54, 79,
          1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 1563, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 1565, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 1512, 1517, 1478, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1513, 17, 1517, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 19, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 29, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 21, 212, 86, 80, 54, 79, 1498, 50, 55, 1514, 36, 1387, 44, 45, 46, 47, 48, 49, 33, 1327, 260, 86, 80, 54, 79, 1498, 50, 55, 1514, 4, 1387, 44, 45, 46, 47, 48, 49, 284, 86, 80, 54, 79, 1498, 1453, 55, 1514, 300, 86, 80, 1497, 79, 1498, 26, 86, 80, 1497, 79, 1498, 26, 86, 80, 1497, 79, 1498, 26, 86,
          80, 1369, 79, 1498, 26, 86, 80, 1372, 79, 1498, 26, 86, 80, 1376, 79, 1498, 1494, 292, 267, 340, 292, 317, 1499, 290, 88, 290, 85, 341, 76, 26, 86, 80, 1379, 79, 1498, 26, 86, 80, 1385, 79, 1498, 26, 86, 80, 1541, 79, 1498, 26, 86, 80, 1391, 79, 1498, 32, 94, 1378, 1370, 94, 1378, 1370, 62, 345, 92, 361, 348, 91, 361, 59, 86, 139, 361, 1359, 351, 361, 1384, 266, 361, 402, 341, 361, 205, 388, 361, 1201, 1446, 361, 1241, 428, 361, 286, 90, 1378, 1370, 1505, 158, 1504, 1505, 158, 1507, 361, 1505, 158, 1536, 1505, 158, 1537, 1505, 158, 1393, 1505, 158, 1550, 1505, 158, 1554, 1505, 158, 1555, 1505, 158, 1559, 361, 103, 42, 361, 1384, 103, 361, 103, 1505, 158, 153, 100, 125, 1443, 1395, 103, 419, 1221, 361, 302, 302, 302, 423, 302, 302, 302, 437, 310, 469, 361, 1505, 158, 1471, 1505, 158, 1564, 1505, 158, 1566, 402, 112, 472, 112, 472, 428, 110, 485, 109, 1505, 218, 112, 469, 265, 98, 101, 113, 1323, 1326, 104, 1549, 159, 354, 325, 333, 337, 112, 350, 330, 40, 1561, 359, 355, 369, 168, 364, 365, 372, 368
    public interface BaseCheck {
        final public static short baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 0, 5, 4, 4, 0, 1, 0, 1, 0, 3, 0, 2, 4, 0, 2, 4, 6, 9, 11, 9, 2, 2, 0, 1, 2, 6, 9, 2, 0, 3, 1, 1, 1, 1, 1, 1, 3, 0, 4, 0, 1, 1, 1, 1, 2, 3, 5, 6, 0, 3, 1, 1, 5, 0, 1, 8, 0, 2, 0, 2, 6, 0, 4, 0, 2, 6, 10, 0, 1, - 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, 0, 0, 0, 0, 0, 0, 0, - 5, 0, 0, 0, - 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, 0, 0, 0, 0, 0, 0, 0, - 16, 0, 0, 0, - 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 152, 0, 0, -
          102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 12, 0, 0, - 151, 0, - 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 49, 0, 0, 0, 0, - 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 71, 0, 0, 0, 0, - 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 100, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 160, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 105, 0,
          0, 0, 0, 0, 0, 0, 0, - 32, 0, 0, 0, 0, 0, - 35, 0, 0, 0, 0, 0, - 58, 0, 0, 0, 0, 0, - 33, 0, 0, 0, 0, 0, - 36, 0, 0, 0, 0, 0, - 55, 0, 0, 0, 0, 0, 0, - 30, - 1, - 64, - 31, - 74, 0, - 28, 0, - 29, 0, - 6, 0, - 57, 0, 0, 0, 0, 0, - 88, 0, 0, 0, 0, 0, - 101, 0, 0, 0, 0, 0, - 121, 0, 0, 0, 0, 0, - 10, 0, 0, 0, 0, 0, 0, - 8, - 13, 0, - 42, - 14, 0, - 44, - 80, 0, 0, - 89, 0, - 15, - 91, 0, - 75, - 115, - 87, - 11, - 119, 0, - 73, - 135, 0, 0, - 142, 0, - 137, - 154, - 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 166, 0, 0, - 172, 0, - 24, - 181, - 25, 0, 0, 0, 0, 0, 0, 0, - 34, - 112, 0, - 60, - 3, - 9, - 20, - 113, - 21, - 22, - 27, - 130, 0, - 159, - 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 156, 0, - 161, 0, - 162, - 173, 0, - 178, 0, 0, 0, 0, - 183, 0, 0, 0, 0, 0, 0, 0, 0, - 17, - 18, - 19, - 23, - 26, - 37, - 38, - 39, 0, 0, - 40, - 41, - 43, - 45, - 46, - 47, - 48, - 50, - 52, - 53, - 54, - 56, - 59, - 61, 0, - 62, - 63, - 68, - 69, - 70, - 76, 0, 0
    public interface InSymb {
    public interface IsKeyword {
    public interface Name {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeLa {
    public interface ScopeRhs {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 117, 1516, 418, 1651, 1652, 1653, 1569, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1489, 1523, 1651, 1652, 1653, 1569, 1569, 1569, 1516, 418, 1651, 1652, 1653, 508, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1489, 1523, 1569, 1569, 448, 1373, 1626, 274, 1487, 478, 1367, 538, 1569, 1568, 628, 568, 1710, 1524, 1569, 1516, 418, 1651, 1652, 1653, 1622, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 111, 1432, 1523, 1569, 1516, 418, 1651, 1652, 1653, 87, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1442, 1434, 1523, 1569, 1540, 418, 1651, 1652, 1653, 1329, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1491, 1523, 1569, 1516, 598, 1651, 1652, 1653, 1569,
          248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1516, 418, 1651, 1652, 1653, 1316, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 1520, 1569, 1516, 598, 1651, 1652, 1653, 1569, 248, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 188, 1631, 1632, 413, 1628, 1629, 1630, 28, 1600, 1600, 1600, 1600, 1600, 1569, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1569, 1516, 598, 1651, 1652, 1653, 20, 95, 1612, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 278, 1569, 1631, 1632, 413, 1628, 1629, 1630, 1569, 1516, 99, 1651, 1652, 1653, 1569, 1492, 93, 1515, 1636, 1637, 1638, 1639, 1640, 1641, 1569, 1489, 97, 1651, 1652, 1653, 87, 89, 313, 1569, 1432, 75, 1298, 1331, 1298, 1298, 1298, 32, 1591, 1592, 1593, 1594, 1595, 1596, 87, 87, 313, 274, 1487, 1493, 1569, 1331, 1331, 1569, 1329, 1286, 1502, 1569, 1434, 1292, 28, 102, 134, 214, 1569, 1569,
          1603, 1366, 1569, 1665, 1569, 1569, 1329, 1329, 1569, 1569, 1500, 1962, 1304, 1569, 1503, 128, 1310, 1501, 1569, 1569, 718, 778, 1569, 1569, 1447, 1448, 75, 1569, 1450, 1506, 1604, 1451, 1698, 1569, 1452, 748, 1569, 1569, 1569, 8, 14, 18, 41, 1525, 1335, 16, 1569, 1508, 1347, 1569, 6, 658, 1599, 1674, 1569, 378, 126, 343, 1341, 2037, 1569, 1533, 1383, 1569, 1683, 1569, 54, 1569, 77, 1569, 1569, 1620, 1260, 137, 1569, 383, 1277, 142, 1712, 1569, 1569, 1569, 150, 1180, 1011, 1650, 1569, 1635, 1353, 1569, 1061, 39, 1569, 346, 1157, 1633, 1569, 1456, 984, 1625, 1569, 348, 1621, 1569, 1394, 1569, 1551, 1569, 1546, 1569, 1677, 1675, 1547, 1569, 1569, 1569, 1036, 152, 145, 1569, 928, 1707, 1569, 12, 1569, 1277, 147, 1569, 1634, 1455, 1569, 688, 1569, 1466, 1569, 1715, 1569, 1569, 1569, 156, 1569, 1569, 1569, 1569, 956, 1569, 1684, 1569, 1569, 1569, 1676, 1569, 1569, 808, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1109, 1085, 1133, 1569, 1569, 1569, 1579, 1569, 1569, 1562, 1569
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 3, 4, 5, 0, 0, 0, 1, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 0, 63, 64, 32, 35, 36, 68, 8, 70, 0, 40, 2, 74, 69, 76, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 27, 0, 1, 2, 3, 4, 5, 28, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 0, 0, 8, 9, 10, 11, 12
    public interface TerminalIndex {
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class XpandParserprs implements XpandParsersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ERROR_SYMBOL = 82, MAX_NAME_LENGTH = 24, SCOPE_SIZE = 18, SCOPE_UBOUND = 17;
    final public static int ACCEPT_ACTION = 1567, EOFT_SYMBOL = 40, EOLT_SYMBOL = 40, ERROR_ACTION = 1568, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1725, MAX_LA = 2, NT_OFFSET = 82, NUM_NONTERMINALS = 74, NUM_RULES = 157, NUM_STATES = 182, NUM_SYMBOLS = 156, SEGMENT_SIZE = 8192, START_STATE = 1324;
    public interface Asb {
    public interface Asr {
        final public static byte asr [] = {0, 9, 0, 61, 35, 36, 60, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 20, 17, 23, 19, 18, 21, 22, 25, 27, 32, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 20, 23, 19, 18, 21, 22, 25, 27, 6, 17, 0, 65, 7, 24, 64, 0, 3, 4, 5, 29, 1, 0, 81, 40, 60, 24, 61, 36, 35, 0, 8, 2, 46, 26, 39, 28, 34, 29, 58, 57, 51, 52, 53, 54, 55, 56, 41, 48, 42, 43, 49, 44, 1, 30, 6, 32, 33, 64, 38, 77, 78, 47, 79, 7, 24, 0, 29, 1, 28, 26, 2, 0, 2, 7, 24, 39, 26, 0, 24, 31, 37, 66, 68, 70, 71, 72, 74, 80, 75, 73, 69, 39, 67, 62, 63, 27, 25, 8, 7, 9, 2, 20, 17, 23, 19, 18, 21, 22, 10, 11, 12, 13, 14, 15, 16, 3, 4, 5, 1, 0, 7, 24, 1, 0, 24, 36, 35, 40, 0, 70, 71, 72, 0, 43, 42, 0, 45, 0, 31, 0, 37, 0, 46, 0, 1, 42, 43, 30, 32, 33, 64, 38, 77, 78, 79, 24, 2, 8, 28, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 58, 34, 6, 29, 0, 76, 0, 32, 33, 6, 0, 50, 0, 38, 0, 30, 0, 41, 44, 6, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 29, 58, 34, 59, 8, 28, 2, 0, 77, 0, 68, 0, 74, 0
    public interface BaseAction {
        final public static char baseAction [] = {62, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 41, 41, 23, 23, 21, 21, 22, 22, 20, 20, 63, 63, 63, 63, 63, 63, 19, 19, 64, 64, 17, 17, 65, 65, 18, 18, 18, 42, 42, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 74, 74, 36, 36, 34, 34, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 62, 62, 37, 37, 45, 45, 66, 66, 33, 33, 43, 43, 46, 44, 44, 47, 39, 39, 39, 39, 35, 35, 40, 40, 40, 38, 38, 32, 48, 48, 49, 49, 49, 49, 49, 49, 31, 56, 56, 30, 30, 50, 50, 50, 57, 58, 58, 58, 68, 68, 67, 59, 51, 69, 69, 52, 70, 70, 60, 60, 53, 61, 61, 71, 71, 54, 55, 72, 72, 1, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 140, 1, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 38, 1387, 44, 45, 46, 47, 48, 49, 25, 116, 1445, 119, 120, 121, 122, 123, 124, 62, 130, 131, 132, 1, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381
          , 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 140, 1, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 37, 1387, 44, 45, 46, 47, 48, 49, 69, 118, 1445, 119, 120, 121, 122, 123, 124, 29, 130, 131, 132, 34, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 1333, 1487, 469, 1395, 1529, 77, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 1383, 467, 1542, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 1509, 1557, 78, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 58, 1468, 1552, 105, 86, 80, 1527, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1525, 1, 105, 86, 80,
          54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 133, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1449, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1533, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1382, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1534, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1525, 1, 133, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1539, 1, 105, 86, 80, 54, 79, 1493, 50, 55
          , 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1544, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1548, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1555, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1466, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 135, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1427, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1559, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44
          , 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 148, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1471, 1, 187, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 1551, 187, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 2, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 7, 1520, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1538, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 9, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 15, 213, 86, 80, 54, 79, 1493, 50,
          55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1562, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1564, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1481, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 17, 1517, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 19, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 29, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 21, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 33, 1327, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 4, 1387, 44, 45, 46, 47, 48, 49, 285, 86, 80, 54, 79, 1493, 1454, 55, 1513, 302, 86, 80, 1492, 79, 1493, 308, 86, 80, 1492, 79, 1493, 308, 86, 80, 1492, 79, 1493, 308, 86, 80, 1369
          , 79, 1493, 308, 86, 80, 1372, 79, 1493, 308, 86, 80, 1376, 79, 1493, 1491, 325, 304, 340, 325, 341, 1494, 362, 88, 362, 85, 287, 76, 308, 86, 80, 1379, 79, 1493, 308, 86, 80, 1385, 79, 1493, 308, 86, 80, 1541, 79, 1493, 308, 86, 80, 1391, 79, 1493, 310, 94, 1370, 1367, 94, 1370, 1367, 219, 268, 92, 369, 351, 91, 369, 72, 86, 139, 369, 1359, 358, 369, 1384, 267, 369, 353, 287, 369, 205, 402, 369, 1201, 1446, 369, 1241, 103, 369, 69, 90, 1370, 1367, 1503, 158, 1502, 1503, 158, 1506, 369, 1503, 158, 1536, 1503, 158, 1537, 1503, 158, 1455, 1503, 158, 1549, 1503, 158, 1553, 1503, 158, 1554, 1503, 158, 1558, 369, 103, 42, 369, 1384, 314, 369, 314, 1503, 158, 153, 100, 423, 1439, 1395, 314, 349, 1221, 369, 7, 7, 350, 426, 7, 7, 7, 7, 442, 446, 474, 1503, 158, 1470, 1503, 158, 1563, 1503, 158, 1565, 475, 112, 475, 112, 446, 487, 110, 1535, 109, 1503, 218, 112, 1535, 265, 98, 474, 113, 101, 1323, 1326, 104, 291, 328, 139, 366, 27, 367, 364, 380, 75, 40, 1560, 371, 125, 159, 379, 382, 381, 127, 384, 387,
    public interface BaseCheck {
        final public static short baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 0, 5, 4, 4, 0, 1, 0, 1, 0, 2, 0, 2, 4, 0, 2, 4, 6, 9, 11, 9, 2, 2, 0, 1, 2, 6, 9, 2, 0, 3, 1, 1, 1, 1, 1, 1, 3, 0, 3, 0, 1, 1, 1, 1, 2, 3, 5, 6, 0, 3, 1, 1, 5, 0, 1, 8, 0, 2, 0, 2, 6, 0, 4, 0, 2, 6, 10, 0, 1, - 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, 0, 0, 0, 0, 0, 0, 0, - 8, 0, 0, 0, - 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, 0, 0, 0, 0, 0, 0, 0, - 15, 0, 0, 0, - 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 151, 0, 0, -
          101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 11, 0, 0, - 150, 0, - 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 48, 0, 0, 0, 0, - 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 70, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 99, 0, 0, 0, 0, 0, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 158, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 104, 0,
          0, 0, 0, 0, 0, 0, 0, - 31, 0, 0, 0, 0, 0, - 34, 0, 0, 0, 0, 0, - 57, 0, 0, 0, 0, 0, - 32, 0, 0, 0, 0, 0, - 35, 0, 0, 0, 0, 0, - 54, 0, 0, 0, 0, 0, 0, - 29, - 1, - 63, - 30, - 73, 0, - 27, 0, - 28, 0, - 6, 0, - 56, 0, 0, 0, 0, 0, - 87, 0, 0, 0, 0, 0, - 100, 0, 0, 0, 0, 0, - 120, 0, 0, 0, 0, 0, - 9, 0, 0, 0, 0, 0, 0, - 12, - 13, 0, - 41, - 14, 0, - 43, - 79, 0, 0, - 88, 0, - 16, - 90, 0, - 74, - 114, - 17, - 10, - 118, 0, - 72, - 134, 0, 0, - 141, 0, - 18, - 153, - 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 164, 0, 0, - 170, 0, - 23, - 179, - 24, 0, 0, 0, 0, - 111, 0, 0, - 33, - 86, 0, - 59, - 3, - 5, - 139, - 112, - 19, - 20, - 21, - 26, - 129, - 136, - 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 159, 0, - 160, 0, - 171, - 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 181, 0, 0, 0, 0, 0, - 22, - 25, - 36, - 37, - 38, - 39, - 40, - 42, - 44, 0, 0, - 45, 0, - 46, - 47, - 49, - 51, 0, - 52, - 53, 0, - 55, - 58, - 60, - 61, - 62, - 67, - 68, - 69, 0, - 75, 0, - 76, -
    public interface InSymb {
    public interface IsKeyword {
    public interface Name {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeLa {
    public interface ScopeRhs {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 117, 1515, 418, 1650, 1651, 1652, 97, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1521, 1568, 1432, 1447, 1568, 1500, 1568, 1515, 418, 1650, 1651, 1652, 508, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1434, 1519, 1498, 1521, 1568, 448, 1373, 1567, 1625, 1568, 478, 99, 538, 1366, 1568, 1393, 568, 1568, 1523, 1568, 1515, 418, 1650, 1651, 1652, 1621, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1316, 1519, 87, 1521, 1568, 1515, 418, 1650, 1651, 1652, 1331, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 214, 1519, 1329, 1521, 1568, 1540, 418, 1650, 1651, 1652, 87, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1521, 1568, 1515, 598, 1650, 1651, 1652, 1329, 188, 248,
          1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1335, 1519, 1568, 1515, 418, 1650, 1651, 1652, 1568, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1515, 598, 1650, 1651, 1652, 1568, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 28, 1599, 1599, 1599, 1599, 1599, 1450, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1568, 1515, 598, 1650, 1651, 1652, 20, 1568, 6, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1515, 102, 1650, 1651, 1652, 1568, 1451, 1286, 1568, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 1568, 1393, 95, 1650, 1651, 1652, 1568, 1393, 1568, 1650, 1651, 1652, 111, 1432, 984, 1304, 1590, 1591, 1592, 1593, 1594, 1595, 87, 93, 313, 87, 1568, 313, 1292, 1490, 1331, 75, 1298, 1331, 1298, 1298, 1298, 134, 28, 32, 1442, 1434, 89, 274,
          1378, 1962, 343, 126, 126, 1568, 1329, 1568, 1310, 1329, 2220, 2220, 1568, 1488, 274, 1378, 1568, 1489, 1568, 778, 1568, 1568, 1501, 128, 1602, 1568, 1495, 128, 128, 1452, 1697, 1453, 748, 75, 1568, 1568, 1568, 718, 1568, 1664, 1505, 1568, 1568, 1568, 8, 14, 18, 1568, 1524, 628, 1568, 1598, 1347, 1603, 1508, 16, 41, 1568, 1568, 1443, 658, 1568, 1532, 378, 1341, 1568, 2058, 1673, 1568, 54, 1568, 77, 1568, 1568, 1619, 1260, 1568, 137, 1682, 383, 142, 1711, 1568, 1568, 1568, 1568, 1568, 1180, 1011, 1649, 1277, 1353, 1634, 1568, 1061, 1568, 39, 1568, 346, 1632, 150, 1620, 1624, 1157, 348, 1568, 1448, 1568, 1394, 1568, 1568, 1546, 1568, 1036, 1547, 1676, 1674, 1568, 1550, 1568, 1568, 145, 928, 152, 1568, 1706, 1568, 1456, 12, 147, 1277, 1568, 1633, 688, 1568, 1714, 1568, 1568, 1568, 1568, 1568, 156, 1568, 1568, 1568, 1568, 1683, 956, 1568, 126, 1568, 1568, 1568, 1568, 1568, 1675, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1109, 808, 1085, 1133, 1697, 1568, 1578, 1568,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 27, 0, 1, 24, 0, 6, 0, 1, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 25, 33, 27, 0, 62, 63, 40, 32, 0, 67, 0, 69, 9, 0, 1, 73, 0, 75, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 0, 27, 0, 1, 2, 3, 4, 5, 8, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 60, 25, 28, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 27, 0, 1, 2, 3, 4, 5, 28, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 0, 0, 0, 9, 10, 11
          , 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 0, 3, 4, 5, 0, 24, 2, 0, 10, 11, 12, 13, 14, 15, 16, 0, 1, 0, 3, 4, 5, 0, 1, 0, 3, 4, 5, 0, 1, 47, 26, 51, 52, 53, 54, 55, 56, 0, 0, 2, 0, 0, 2, 2, 29, 8, 0, 1, 8, 3, 4, 5, 0, 0, 0, 28, 29, 40, 35, 36, 7, 61, 0, 0, 0, 28, 0, 26, 28, 7, 7, 0, 1, 35, 36, 0, 1, 0, 26, 0, 0, 1, 0, 29, 0, 6, 24, 24, 24, 7, 24, 39, 0, 0, 0, 0, 59, 0, 81, 6, 0, 0, 0, 0, 0, 0, 0, 6, 2, 0, 57, 2, 58, 29, 0, 0, 0, 0, 24, 2, 0, 1, 45, 26, 0, 33, 31, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 37, 2, 0, 1, 0, 0, 0, 0, 0, 41, 44, 46, 34, 26, 6, 0, 49, 0, 0, 0, 1, 6, 0, 6, 32, 48, 33, 0, 24, 0, 1, 0, 0, 38, 0, 30, 38, 31, 31, 0, 6, 0, 0, 0, 50, 0, 0, 6, 0, 17, 0, 0, 34, 0, 6, 76, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 30, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 70, 43, 30, 24, 0, 32, 0, 0, 0, 0, 42, 0, 77, 0, 0, 0, 65, 0, 68, 0, 0, 0, 0, 64, 71, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 66, 0, 0, 0, 74, 0, 0, 0, 0, 78, 0, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0
    public interface TerminalIndex {
[XpandParserprs-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 100 garbage recoveries were required (larger size recommended for improved performance)
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class XpandParserprs implements XpandParsersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 1567, EOFT_SYMBOL = 40, EOLT_SYMBOL = 40, ERROR_ACTION = 1568, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1725, MAX_LA = 2, NT_OFFSET = 82, NUM_NONTERMINALS = 74, NUM_RULES = 157, NUM_STATES = 182, NUM_SYMBOLS = 156, SEGMENT_SIZE = 8192, START_STATE = 1324;
    public interface Asb {
    public interface Asr {
        final public static byte asr [] = {0, 9, 0, 61, 35, 36, 60, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 20, 17, 23, 19, 18, 21, 22, 25, 27, 32, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 20, 23, 19, 18, 21, 22, 25, 27, 6, 17, 0, 65, 7, 24, 64, 0, 3, 4, 5, 29, 1, 0, 81, 40, 60, 24, 61, 36, 35, 0, 8, 2, 46, 26, 39, 28, 34, 29, 58, 57, 51, 52, 53, 54, 55, 56, 41, 48, 42, 43, 49, 44, 1, 30, 6, 32, 33, 64, 38, 77, 78, 47, 79, 7, 24, 0, 29, 1, 28, 26, 2, 0, 2, 7, 24, 39, 26, 0, 24, 31, 37, 66, 68, 70, 71, 72, 74, 80, 75, 73, 69, 39, 67, 62, 63, 27, 25, 8, 7, 9, 2, 20, 17, 23, 19, 18, 21, 22, 10, 11, 12, 13, 14, 15, 16, 3, 4, 5, 1, 0, 7, 24, 1, 0, 24, 36, 35, 40, 0, 70, 71, 72, 0, 43, 42, 0, 45, 0, 31, 0, 37, 0, 46, 0, 1, 42, 43, 30, 32, 33, 64, 38, 77, 78, 79, 24, 2, 8, 28, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 58, 34, 6, 29, 0, 76, 0, 32, 33, 6, 0, 50, 0, 38, 0, 30, 0, 41, 44, 6, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 29, 58, 34, 59, 8, 28, 2, 0, 77, 0, 68, 0, 74, 0
    public interface BaseAction {
        final public static char baseAction [] = {62, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 41, 41, 23, 23, 21, 21, 22, 22, 20, 20, 63, 63, 63, 63, 63, 63, 19, 19, 64, 64, 17, 17, 65, 65, 18, 18, 18, 42, 42, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 74, 74, 36, 36, 34, 34, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 62, 62, 37, 37, 45, 45, 66, 66, 33, 33, 43, 43, 46, 44, 44, 47, 39, 39, 39, 39, 35, 35, 40, 40, 40, 38, 38, 32, 48, 48, 49, 49, 49, 49, 49, 49, 31, 56, 56, 30, 30, 50, 50, 50, 57, 58, 58, 58, 68, 68, 67, 59, 51, 69, 69, 52, 70, 70, 60, 60, 53, 61, 61, 71, 71, 54, 55, 72, 72, 1, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 140, 1, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 38, 1387, 44, 45, 46, 47, 48, 49, 25, 116, 1445, 119, 120, 121, 122, 123, 124, 62, 130, 131, 132, 1, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381
          , 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 140, 1, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 37, 1387, 44, 45, 46, 47, 48, 49, 69, 118, 1445, 119, 120, 121, 122, 123, 124, 29, 130, 131, 132, 34, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 1333, 1487, 469, 1395, 1529, 77, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 1383, 467, 1542, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 1509, 1557, 78, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1530, 1, 72, 86, 58, 1468, 1552, 105, 86, 80, 1527, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1525, 1, 105, 86, 80,
          54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 133, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1449, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1533, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1382, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1534, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1525, 1, 133, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1539, 1, 105, 86, 80, 54, 79, 1493, 50, 55
          , 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1544, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1548, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1555, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1466, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 135, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1427, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1559, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44
          , 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 148, 1, 105, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 3, 1471, 1, 187, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 1551, 187, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 5, 1520, 2, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1510, 7, 1520, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 1538, 161, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 11, 9, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 15, 213, 86, 80, 54, 79, 1493, 50,
          55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1562, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1564, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 1511, 1517, 1481, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 1512, 17, 1517, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 1381, 19, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 29, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 1325, 1327, 21, 213, 86, 80, 54, 79, 1493, 50, 55, 1513, 36, 1387, 44, 45, 46, 47, 48, 49, 33, 1327, 261, 86, 80, 54, 79, 1493, 50, 55, 1513, 4, 1387, 44, 45, 46, 47, 48, 49, 285, 86, 80, 54, 79, 1493, 1454, 55, 1513, 302, 86, 80, 1492, 79, 1493, 308, 86, 80, 1492, 79, 1493, 308, 86, 80, 1492, 79, 1493, 308, 86, 80, 1369
          , 79, 1493, 308, 86, 80, 1372, 79, 1493, 308, 86, 80, 1376, 79, 1493, 1491, 325, 304, 340, 325, 341, 1494, 362, 88, 362, 85, 287, 76, 308, 86, 80, 1379, 79, 1493, 308, 86, 80, 1385, 79, 1493, 308, 86, 80, 1541, 79, 1493, 308, 86, 80, 1391, 79, 1493, 310, 94, 1370, 1367, 94, 1370, 1367, 219, 268, 92, 369, 351, 91, 369, 72, 86, 139, 369, 1359, 358, 369, 1384, 267, 369, 353, 287, 369, 205, 402, 369, 1201, 1446, 369, 1241, 103, 369, 69, 90, 1370, 1367, 1503, 158, 1502, 1503, 158, 1506, 369, 1503, 158, 1536, 1503, 158, 1537, 1503, 158, 1455, 1503, 158, 1549, 1503, 158, 1553, 1503, 158, 1554, 1503, 158, 1558, 369, 103, 42, 369, 1384, 314, 369, 314, 1503, 158, 153, 100, 423, 1439, 1395, 314, 349, 1221, 369, 7, 7, 350, 426, 7, 7, 7, 7, 442, 446, 474, 1503, 158, 1470, 1503, 158, 1563, 1503, 158, 1565, 475, 112, 475, 112, 446, 487, 110, 1535, 109, 1503, 218, 112, 1535, 265, 98, 474, 113, 101, 1323, 1326, 104, 291, 328, 139, 366, 27, 367, 364, 380, 75, 40, 1560, 371, 125, 159, 379, 382, 381, 127, 384, 387,
    public interface BaseCheck {
        final public static short baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 0, 5, 4, 4, 0, 1, 0, 1, 0, 2, 0, 2, 4, 0, 2, 4, 6, 9, 11, 9, 2, 2, 0, 1, 2, 6, 9, 2, 0, 3, 1, 1, 1, 1, 1, 1, 3, 0, 3, 0, 1, 1, 1, 1, 2, 3, 5, 6, 0, 3, 1, 1, 5, 0, 1, 8, 0, 2, 0, 2, 6, 0, 4, 0, 2, 6, 10, 0, 1, - 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, 0, 0, 0, 0, 0, 0, 0, - 8, 0, 0, 0, - 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, 0, 0, 0, 0, 0, 0, 0, - 15, 0, 0, 0, - 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 151, 0, 0, -
          101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 11, 0, 0, - 150, 0, - 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 48, 0, 0, 0, 0, - 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 70, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 99, 0, 0, 0, 0, 0, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 158, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 104, 0,
          0, 0, 0, 0, 0, 0, 0, - 31, 0, 0, 0, 0, 0, - 34, 0, 0, 0, 0, 0, - 57, 0, 0, 0, 0, 0, - 32, 0, 0, 0, 0, 0, - 35, 0, 0, 0, 0, 0, - 54, 0, 0, 0, 0, 0, 0, - 29, - 1, - 63, - 30, - 73, 0, - 27, 0, - 28, 0, - 6, 0, - 56, 0, 0, 0, 0, 0, - 87, 0, 0, 0, 0, 0, - 100, 0, 0, 0, 0, 0, - 120, 0, 0, 0, 0, 0, - 9, 0, 0, 0, 0, 0, 0, - 12, - 13, 0, - 41, - 14, 0, - 43, - 79, 0, 0, - 88, 0, - 16, - 90, 0, - 74, - 114, - 17, - 10, - 118, 0, - 72, - 134, 0, 0, - 141, 0, - 18, - 153, - 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 164, 0, 0, - 170, 0, - 23, - 179, - 24, 0, 0, 0, 0, - 111, 0, 0, - 33, - 86, 0, - 59, - 3, - 5, - 139, - 112, - 19, - 20, - 21, - 26, - 129, - 136, - 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 159, 0, - 160, 0, - 171, - 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 181, 0, 0, 0, 0, 0, - 22, - 25, - 36, - 37, - 38, - 39, - 40, - 42, - 44, 0, 0, - 45, 0, - 46, - 47, - 49, - 51, 0, - 52, - 53, 0, - 55, - 58, - 60, - 61, - 62, - 67, - 68, - 69, 0, - 75, 0, - 76, -
    public interface InSymb {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 117, 1515, 418, 1650, 1651, 1652, 97, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1521, 1568, 1432, 1447, 1568, 1500, 1568, 1515, 418, 1650, 1651, 1652, 508, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1434, 1519, 1498, 1521, 1568, 448, 1373, 1567, 1625, 1568, 478, 99, 538, 1366, 1568, 1393, 568, 1568, 1523, 1568, 1515, 418, 1650, 1651, 1652, 1621, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1316, 1519, 87, 1521, 1568, 1515, 418, 1650, 1651, 1652, 1331, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 214, 1519, 1329, 1521, 1568, 1540, 418, 1650, 1651, 1652, 87, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1521, 1568, 1515, 598, 1650, 1651, 1652, 1329, 188, 248,
          1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1335, 1519, 1568, 1515, 418, 1650, 1651, 1652, 1568, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1519, 1568, 1515, 598, 1650, 1651, 1652, 1568, 188, 248, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 28, 1599, 1599, 1599, 1599, 1599, 1450, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1568, 1515, 598, 1650, 1651, 1652, 20, 1568, 6, 1611, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 278, 1630, 1631, 413, 1627, 1628, 1629, 1568, 1515, 102, 1650, 1651, 1652, 1568, 1451, 1286, 1568, 1514, 1635, 1636, 1637, 1638, 1639, 1640, 1568, 1393, 95, 1650, 1651, 1652, 1568, 1393, 1568, 1650, 1651, 1652, 111, 1432, 984, 1304, 1590, 1591, 1592, 1593, 1594, 1595, 87, 93, 313, 87, 1568, 313, 1292, 1490, 1331, 75, 1298, 1331, 1298, 1298, 1298, 134, 28, 32, 1442, 1434, 89, 274,
          1378, 1962, 343, 126, 126, 1568, 1329, 1568, 1310, 1329, 2220, 2220, 1568, 1488, 274, 1378, 1568, 1489, 1568, 778, 1568, 1568, 1501, 128, 1602, 1568, 1495, 128, 128, 1452, 1697, 1453, 748, 75, 1568, 1568, 1568, 718, 1568, 1664, 1505, 1568, 1568, 1568, 8, 14, 18, 1568, 1524, 628, 1568, 1598, 1347, 1603, 1508, 16, 41, 1568, 1568, 1443, 658, 1568, 1532, 378, 1341, 1568, 2058, 1673, 1568, 54, 1568, 77, 1568, 1568, 1619, 1260, 1568, 137, 1682, 383, 142, 1711, 1568, 1568, 1568, 1568, 1568, 1180, 1011, 1649, 1277, 1353, 1634, 1568, 1061, 1568, 39, 1568, 346, 1632, 150, 1620, 1624, 1157, 348, 1568, 1448, 1568, 1394, 1568, 1568, 1546, 1568, 1036, 1547, 1676, 1674, 1568, 1550, 1568, 1568, 145, 928, 152, 1568, 1706, 1568, 1456, 12, 147, 1277, 1568, 1633, 688, 1568, 1714, 1568, 1568, 1568, 1568, 1568, 156, 1568, 1568, 1568, 1568, 1683, 956, 1568, 126, 1568, 1568, 1568, 1568, 1568, 1675, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1109, 808, 1085, 1133, 1697, 1568, 1578, 1568,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 27, 0, 1, 24, 0, 6, 0, 1, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 25, 33, 27, 0, 62, 63, 40, 32, 0, 67, 0, 69, 9, 0, 1, 73, 0, 75, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 0, 27, 0, 1, 2, 3, 4, 5, 8, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 60, 25, 28, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 27, 0, 1, 2, 3, 4, 5, 28, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 25, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 0, 0, 0, 9, 10, 11
          , 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 0, 3, 4, 5, 0, 24, 2, 0, 10, 11, 12, 13, 14, 15, 16, 0, 1, 0, 3, 4, 5, 0, 1, 0, 3, 4, 5, 0, 1, 47, 26, 51, 52, 53, 54, 55, 56, 0, 0, 2, 0, 0, 2, 2, 29, 8, 0, 1, 8, 3, 4, 5, 0, 0, 0, 28, 29, 40, 35, 36, 7, 61, 0, 0, 0, 28, 0, 26, 28, 7, 7, 0, 1, 35, 36, 0, 1, 0, 26, 0, 0, 1, 0, 29, 0, 6, 24, 24, 24, 7, 24, 39, 0, 0, 0, 0, 59, 0, 81, 6, 0, 0, 0, 0, 0, 0, 0, 6, 2, 0, 57, 2, 58, 29, 0, 0, 0, 0, 24, 2, 0, 1, 45, 26, 0, 33, 31, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 37, 2, 0, 1, 0, 0, 0, 0, 0, 41, 44, 46, 34, 26, 6, 0, 49, 0, 0, 0, 1, 6, 0, 6, 32, 48, 33, 0, 24, 0, 1, 0, 0, 38, 0, 30, 38, 31, 31, 0, 6, 0, 0, 0, 50, 0, 0, 6, 0, 17, 0, 0, 34, 0, 6, 76, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 30, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 70, 43, 30, 24, 0, 32, 0, 0, 0, 0, 42, 0, 77, 0, 0, 0, 65, 0, 68, 0, 0, 0, 0, 64, 71, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 66, 0, 0, 0, 74, 0, 0, 0, 0, 78, 0, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0
    public interface TerminalIndex {
public class XpandParserprs implements XpandParsersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 1572, EOFT_SYMBOL = 40, EOLT_SYMBOL = 40, ERROR_ACTION = 1573, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1732, MAX_LA = 2, NT_OFFSET = 82, NUM_NONTERMINALS = 75, NUM_RULES = 159, NUM_STATES = 184, NUM_SYMBOLS = 157, SEGMENT_SIZE = 8192, START_STATE = 1326;
    public interface Asb {
    public interface Asr {
        final public static byte asr [] = {0, 9, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 21, 17, 24, 20, 19, 22, 23, 25, 27, 32, 0, 2, 8, 7, 9, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 21, 24, 20, 19, 22, 23, 25, 27, 6, 17, 0, 65, 7, 18, 64, 0, 3, 4, 5, 29, 1, 0, 40, 81, 0, 29, 1, 28, 26, 2, 0, 2, 7, 18, 39, 26, 0, 18, 31, 37, 66, 68, 70, 71, 72, 74, 80, 75, 73, 69, 39, 67, 62, 63, 27, 25, 8, 7, 9, 2, 21, 17, 24, 20, 19, 22, 23, 10, 11, 12, 13, 14, 15, 16, 3, 4, 5, 1, 0, 60, 61, 35, 36, 18, 0, 18, 40, 60, 61, 36, 35, 0, 7, 18, 1, 0, 18, 36, 35, 40, 0, 70, 71, 72, 0, 43, 42, 0, 8, 2, 46, 26, 39, 28, 34, 29, 58, 57, 51, 52, 53, 54, 55, 56, 41, 48, 42, 43, 49, 44, 1, 30, 6, 32, 33, 64, 38, 77, 78, 47, 79, 7, 18, 0, 45, 0, 31, 0, 37, 0, 46, 0, 1, 42, 43, 30, 32, 33, 64, 38, 77, 78, 79, 18, 2, 8, 28, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 58, 34, 6, 29, 0, 76, 0, 32, 33, 6, 0, 50, 0, 38, 0, 30, 0, 41, 44, 6, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 7, 29, 58, 34, 59, 8, 28, 2, 0, 77, 0, 68
    public interface BaseAction {
        final public static char baseAction [] = {62, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 41, 41, 23, 23, 21, 21, 22, 22, 20, 20, 63, 63, 63, 63, 63, 63, 19, 19, 64, 64, 17, 17, 65, 65, 18, 18, 18, 42, 42, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 74, 74, 36, 36, 34, 34, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 62, 66, 66, 62, 37, 37, 45, 45, 75, 75, 33, 33, 43, 43, 46, 44, 44, 47, 39, 39, 39, 39, 35, 35, 40, 40, 40, 38, 38, 32, 48, 48, 49, 49, 49, 49, 49, 49, 31, 56, 56, 30, 30, 50, 50, 50, 57, 58, 58, 58, 68, 68, 67, 59, 51, 69, 69, 52, 70, 70, 60, 60, 53, 61, 61, 71, 71, 54, 55, 72, 72, 1, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 142, 1, 263, 86, 80, 54, 79, 1498, 50, 55, 1518, 38, 1389, 44, 45, 46, 47, 48, 49, 33, 118, 1447, 121, 122, 123, 124, 125, 126, 343, 132, 133, 134, 1, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327,
          1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 142, 1, 263, 86, 80, 54, 79, 1498, 50, 55, 1518, 37, 1389, 44, 45, 46, 47, 48, 49, 159, 120, 1447, 121, 122, 123, 124, 125, 126, 31, 132, 133, 134, 34, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1536, 1, 1335, 1492, 470, 1397, 1535, 77, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1536, 1, 29, 86, 1395, 471, 1547, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1536, 1, 29, 86, 1514, 1562, 78, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1536, 1, 29, 86, 58, 1472, 1557, 105, 86, 80, 1533, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1530, 1,
          105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 135, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1451, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1538, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1384, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1539, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1530, 1, 133, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1544, 1, 105, 86, 80, 54, 79,
          1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1548, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1552, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1560, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1468, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 137, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1429, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1564, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518,
          36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 150, 1, 105, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 3, 1483, 1, 187, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 1556, 187, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 5, 1525, 2, 161, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1515, 7, 1525, 161, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 1543, 161, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 11, 9, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 15, 213, 86, 80, 54, 79
          , 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 1567, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 1569, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 1516, 1523, 1490, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 1517, 17, 1523, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 1383, 19, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 29, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 1327, 1329, 21, 213, 86, 80, 54, 79, 1498, 50, 55, 1518, 36, 1389, 44, 45, 46, 47, 48, 49, 33, 1329, 263, 86, 80, 54, 79, 1498, 50, 55, 1518, 4, 1389, 44, 45, 46, 47, 48, 49, 288, 86, 80, 54, 79, 1498, 1457, 55, 1518, 313, 86, 80, 1497, 79, 1498, 319, 86, 80, 1497, 79, 1498, 319, 86, 80, 1497, 79, 1498, 319,
          86, 80, 1371, 79, 1498, 319, 86, 80, 1374, 79, 1498, 319, 86, 80, 1378, 79, 1498, 1496, 315, 281, 290, 315, 330, 1500, 369, 88, 369, 85, 62, 76, 319, 86, 80, 1381, 79, 1498, 319, 86, 80, 1387, 79, 1498, 319, 86, 80, 1546, 79, 1498, 319, 86, 80, 1393, 79, 1498, 270, 96, 1380, 1372, 96, 1380, 1372, 139, 349, 94, 382, 360, 93, 382, 29, 86, 141, 382, 1361, 365, 382, 1386, 256, 382, 71, 62, 382, 207, 398, 382, 1203, 89, 382, 1243, 368, 382, 159, 92, 1380, 1372, 1508, 160, 1507, 1508, 160, 1512, 382, 1508, 160, 1541, 1508, 160, 1542, 1508, 160, 1458, 1508, 160, 1553, 1508, 160, 1558, 1508, 160, 1559, 1508, 160, 1563, 382, 105, 42, 382, 1386, 328, 382, 328, 1508, 160, 155, 102, 423, 1441, 1397, 328, 348, 1223, 382, 340, 346, 354, 426, 346, 346, 346, 346, 346, 443, 455, 1508, 160, 1473, 1508, 160, 1568, 1508, 160, 1570, 476, 114, 475, 114, 476, 455, 112, 1540, 111, 1508, 220, 114, 1540, 267, 1368, 488, 115, 100, 103, 1325, 1328, 106, 475, 103, 269, 337, 345, 374, 338, 375, 7, 40, 379, 127, 167, 377, 381,
    public interface BaseCheck {
        final public static short baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 1, 0, 3, 5, 4, 4, 0, 1, 0, 1, 0, 2, 0, 2, 4, 0, 2, 4, 6, 9, 11, 9, 2, 2, 0, 1, 2, 6, 9, 2, 0, 3, 1, 1, 1, 1, 1, 1, 3, 0, 3, 0, 1, 1, 1, 1, 2, 3, 5, 6, 0, 3, 1, 1, 5, 0, 1, 8, 0, 2, 0, 2, 6, 0, 4, 0, 2, 6, 10, 0, 1, - 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, 0, 0, 0, 0, 0, 0, 0, - 8, 0, 0, 0, - 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, 0, 0, 0, 0, 0, 0, 0, - 17, 0, 0, 0, - 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 153, 0, 0
          , - 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 13, 0, 0, - 152, 0, - 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 50, 0, 0, 0, 0, - 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 72, 0, 0, 0, 0, - 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 101, 0, 0, 0, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 160
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -
          106, 0, 0, 0, 0, 0, 0, 0, 0, - 33, 0, 0, 0, 0, 0, - 36, 0, 0, 0, 0, 0, - 59, 0, 0, 0, 0, 0, - 34, 0, 0, 0, 0, 0, - 37, 0, 0, 0, 0, 0, - 56, 0, 0, 0, 0, 0, 0, - 31, - 1, - 65, - 32, - 75, 0, - 29, 0, - 30, 0, - 6, 0, - 58, 0, 0, 0, 0, 0, - 89, 0, 0, 0, 0, 0, - 102, 0, 0, 0, 0, 0, - 122, 0, 0, 0, 0, 0, - 11, 0, 0, 0, 0, 0, 0, - 9, - 14, 0, - 43, - 15, 0, - 45, - 81, 0, 0, - 90, 0, - 16, - 92, 0, - 76, - 116, - 18, - 12, - 120, 0, - 74, - 136, 0, 0, - 143, 0, - 19, - 155, - 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 166, 0, 0, - 172, 0, - 25, - 181, - 26, 0, 0, 0, 0, - 113, 0, 0, - 35, - 88, 0, - 61, - 3, - 5, - 141, - 114, - 10, - 21, - 22, - 23, - 28, - 131, - 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 161, 0, - 159, 0, - 162, - 173, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 178, 0, 0, 0, 0, 0, 0, - 183, - 20, - 24, - 27, - 38, - 39, - 40, - 41, - 42, 0, - 44, 0, - 46, - 47, - 48, - 49, 0, - 51, - 53, 0, - 54, 0, - 55, - 57, - 60, - 62, - 63, - 64, - 69, 0, 0, -
    public interface InSymb {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 119, 1522, 420, 1655, 1656, 1657, 1573, 190, 250, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 1573, 1635, 1636, 415, 1632, 1633, 1634, 1524, 1573, 1526, 1573, 1491, 1573, 1434, 1573, 1573, 1522, 420, 1655, 1656, 1657, 510, 190, 250, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 380, 1635, 1636, 415, 1632, 1633, 1634, 1524, 1436, 1526, 104, 450, 1375, 1654, 1630, 87, 480, 315, 540, 1573, 1493, 1572, 570, 1333, 1527, 1573, 1522, 420, 1655, 1656, 1657, 1626, 190, 250, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 1331, 1635, 1636, 415, 1632, 1633, 1634, 1524, 87, 1526, 1573, 1522, 420, 1655, 1656, 1657, 1333, 190, 250, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 345, 1635, 1636, 415, 1632, 1633, 1634, 1524, 1331, 1526, 1573, 1545, 420, 1655, 1656, 1657, 100, 190, 250, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 1573, 1635, 1636, 415, 1632, 1633, 1634, 1524, 101, 1526, 1573, 1522, 600, 1655, 1656, 1657, 1573, 190, 250,
          1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 91, 1635, 1636, 415, 1632, 1633, 1634, 1524, 1573, 1522, 420, 1655, 1656, 1657, 1318, 190, 250, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 136, 1635, 1636, 415, 1632, 1633, 1634, 1524, 1573, 1522, 600, 1655, 1656, 1657, 216, 190, 250, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 780, 1635, 1636, 415, 1632, 1633, 1634, 28, 1604, 1604, 1604, 1604, 1604, 750, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 20, 1604, 1604, 1604, 1604, 1604, 1604, 1573, 1522, 600, 1655, 1656, 1657, 1573, 1573, 1288, 1616, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 280, 90, 1635, 1636, 415, 1632, 1633, 1634, 1573, 1522, 28, 1655, 1656, 1657, 1573, 1306, 630, 1970, 1521, 1640, 1641, 1642, 1643, 1644, 1645, 276, 1385, 1595, 1596, 1597, 1598, 1599, 1600, 1573, 1491, 95, 1655, 1656, 1657, 1573, 1491, 1573, 1655, 1656, 1657, 87, 1573, 315, 113, 1434, 32, 75, 1300, 1333, 1300, 1300, 1300, 1573, 1573, 1294, 99, 1573, 1495, 1573, 1504, 87, 99
          , 1603, 128, 1573, 276, 1385, 1369, 1331, 128, 2224, 1444, 1436, 1449, 1607, 1573, 2224, 1448, 1312, 1452, 1573, 130, 1453, 1573, 1573, 1494, 1503, 130, 1331, 1573, 1573, 1505, 1573, 1454, 1573, 1502, 1573, 130, 1455, 720, 1510, 1456, 75, 1608, 1704, 1573, 1573, 1573, 1573, 1573, 8, 14, 18, 41, 1573, 1529, 1349, 16, 1573, 6, 660, 1513, 1337, 1573, 1445, 1573, 1537, 1573, 1573, 77, 1573, 54, 690, 1343, 1624, 2063, 1680, 1262, 139, 1573, 385, 144, 1718, 1573, 1573, 1689, 1573, 1279, 1573, 1355, 1573, 1573, 1573, 1182, 1013, 1573, 1639, 1637, 39, 1629, 1063, 1625, 350, 1573, 1450, 1159, 986, 1573, 348, 1554, 152, 1573, 1396, 1573, 1573, 1683, 1573, 1550, 1573, 1681, 930, 1551, 1038, 1573, 1573, 154, 147, 1573, 1573, 1713, 12, 149, 1279, 1470, 1638, 1573, 1721, 1573, 1573, 1573, 1573, 1573, 1573, 158, 1573, 1573, 1573, 128, 958, 1573, 1573, 1690, 1573, 1573, 1573, 1573, 1573, 1573, 1682, 1573, 1573, 1573, 1573, 1573, 1573, 1704, 1573, 1573, 1573, 1573, 1573, 1111, 1135, 1087, 1573, 1573, 1573, 1583,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 0, 27, 0, 1, 0, 1, 0, 0, 1, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 45, 19, 20, 21, 22, 23, 24, 25, 29, 27, 0, 62, 63, 46, 32, 0, 67, 2, 69, 0, 1, 40, 73, 8, 75, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 19, 20, 21, 22, 23, 24, 25, 0, 27, 0, 1, 2, 3, 4, 5, 8, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 19, 20, 21, 22, 23, 24, 25, 28, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 0, 27, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 40, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 5, 26, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 5, 60, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 0, 0, 2, 9
    public interface TerminalIndex {
[XpandParserprs-4.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 95 garbage recoveries were required (larger size recommended for improved performance)
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XpandParserprs-5.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [write] - Syntax error parsing file 't.t' as a [program], at or near:
public interface XpandParsersym {
    final public static int TK_AND = 49, TK_AROUND = 35, TK_ARROW = 48, TK_AS = 38, TK_ASSIGN = 51, TK_BAR = 60, TK_CEND = 78, TK_COLON = 30, TK_COMMA = 33, TK_COMMENT = 41, TK_CSTART = 77, TK_Collection = 3, TK_DCOLON = 28, TK_DEFINE = 36, TK_DISABLE = 80, TK_DIV = 59, TK_DOT = 34, TK_ELSE = 72, TK_ELSEIF = 71, TK_ENDAROUND = 31, TK_ENDDEFINE = 37, TK_ENDFILE = 69, TK_ENDFOREACH = 67, TK_ENDIF = 73, TK_ENDLET = 75, TK_ENDPROTECT = 81, TK_EOF_TOKEN = 40, TK_EQ = 52, TK_ERROR = 63, TK_ERROR_TOKEN = 83, TK_EXPAND = 64, TK_EXTENSION = 62, TK_FILE = 68, TK_FOR = 25, TK_FOREACH = 39, TK_GE = 54, TK_GT = 56, TK_ID = 79, TK_IDENT = 1, TK_IF = 70, TK_IMPORT = 61, TK_INT_CONST = 18, TK_ITERATOR = 66, TK_LCURLY = 16, TK_LE = 55, TK_LET = 74, TK_LG = 82, TK_LPAREN = 2, TK_LSQUARE = 46, TK_LT = 57, TK_List = 4, TK_MINUS = 17, TK_MULTI = 29, TK_NE = 53, TK_NOT = 7, TK_OR = 50, TK_PLUS = 58, TK_PROTECT = 76, TK_QUESTION_MARK = 45, TK_RCURLY = 32, TK_REAL_CONST = 19, TK_RPAREN = 6, TK_RSQUARE = 47, TK_SEPARATOR = 65,
      TK_STRING = 8, TK_Set = 5, TK_TEXT = 26, TK_case = 44, TK_collect = 10, TK_default = 43, TK_exists = 13, TK_false = 21, TK_forAll = 15, TK_implies = 42, TK_let = 27, TK_new = 20, TK_notExists = 14, TK_null = 23, TK_reject = 12, TK_select = 11, TK_switch = 24, TK_true = 22, TK_typeSelect = 9;
public interface XpandParsersym {
    final public static int TK_AND = 48, TK_AROUND = 35, TK_ARROW = 47, TK_AS = 38, TK_ASSIGN = 50, TK_BAR = 59, TK_CEND = 77, TK_COLON = 30, TK_COMMA = 33, TK_CSTART = 76, TK_Collection = 3, TK_DCOLON = 28, TK_DEFINE = 36, TK_DISABLE = 79, TK_DIV = 58, TK_DOT = 34, TK_ELSE = 71, TK_ELSEIF = 70, TK_ENDAROUND = 31, TK_ENDDEFINE = 37, TK_ENDFILE = 68, TK_ENDFOREACH = 66, TK_ENDIF = 72, TK_ENDLET = 74, TK_ENDPROTECT = 80, TK_EOF_TOKEN = 40, TK_EQ = 51, TK_ERROR = 62, TK_ERROR_TOKEN = 82, TK_EXPAND = 63, TK_EXTENSION = 61, TK_FILE = 67, TK_FOR = 26, TK_FOREACH = 39, TK_GE = 53, TK_GT = 55, TK_ID = 78, TK_IDENT = 1, TK_IF = 69, TK_IMPORT = 60, TK_INT_CONST = 18, TK_ITERATOR = 65, TK_LCURLY = 17, TK_LE = 54, TK_LET = 73, TK_LG = 81, TK_LPAREN = 2, TK_LSQUARE = 45, TK_LT = 56, TK_List = 4, TK_MINUS = 7, TK_MULTI = 29, TK_NE = 52, TK_NOT = 8, TK_OR = 49, TK_PLUS = 57, TK_PROTECT = 75, TK_QUESTION_MARK = 44, TK_RCURLY = 32, TK_REAL_CONST = 19, TK_RPAREN = 6, TK_RSQUARE = 46, TK_SEPARATOR = 64, TK_STRING = 9, TK_Set =
      5, TK_TEXT = 24, TK_case = 43, TK_collect = 11, TK_default = 42, TK_exists = 14, TK_false = 21, TK_forAll = 16, TK_implies = 41, TK_let = 27, TK_new = 20, TK_notExists = 15, TK_null = 23, TK_reject = 13, TK_select = 12, TK_switch = 25, TK_true = 22, TK_typeSelect = 10;
public interface XpandParsersym {
    final public static int TK_AND = 48, TK_AROUND = 35, TK_ARROW = 47, TK_AS = 38, TK_ASSIGN = 50, TK_BAR = 59, TK_CEND = 77, TK_COLON = 30, TK_COMMA = 33, TK_CSTART = 76, TK_Collection = 3, TK_DCOLON = 28, TK_DEFINE = 36, TK_DISABLE = 79, TK_DIV = 58, TK_DOT = 34, TK_ELSE = 71, TK_ELSEIF = 70, TK_ENDAROUND = 31, TK_ENDDEFINE = 37, TK_ENDFILE = 68, TK_ENDFOREACH = 66, TK_ENDIF = 72, TK_ENDLET = 74, TK_ENDPROTECT = 80, TK_EOF_TOKEN = 40, TK_EQ = 51, TK_ERROR = 62, TK_ERROR_TOKEN = 82, TK_EXPAND = 63, TK_EXTENSION = 61, TK_FILE = 67, TK_FOR = 26, TK_FOREACH = 39, TK_GE = 53, TK_GT = 55, TK_ID = 78, TK_IDENT = 1, TK_IF = 69, TK_IMPORT = 60, TK_INT_CONST = 18, TK_ITERATOR = 65, TK_LCURLY = 17, TK_LE = 54, TK_LET = 73, TK_LG = 81, TK_LPAREN = 2, TK_LSQUARE = 45, TK_LT = 56, TK_List = 4, TK_MINUS = 7, TK_MULTI = 29, TK_NE = 52, TK_NOT = 8, TK_OR = 49, TK_PLUS = 57, TK_PROTECT = 75, TK_QUESTION_MARK = 44, TK_RCURLY = 32, TK_REAL_CONST = 19, TK_RPAREN = 6, TK_RSQUARE = 46, TK_SEPARATOR = 64, TK_STRING = 9, TK_Set =
      5, TK_TEXT = 24, TK_case = 43, TK_collect = 11, TK_default = 42, TK_exists = 14, TK_false = 21, TK_forAll = 16, TK_implies = 41, TK_let = 27, TK_new = 20, TK_notExists = 15, TK_null = 23, TK_reject = 13, TK_select = 12, TK_switch = 25, TK_true = 22, TK_typeSelect = 10;
public interface XpandParsersym {
    final public static int TK_AND = 48, TK_AROUND = 35, TK_ARROW = 47, TK_AS = 38, TK_ASSIGN = 50, TK_BAR = 59, TK_CEND = 77, TK_COLON = 30, TK_COMMA = 33, TK_CSTART = 76, TK_Collection = 3, TK_DCOLON = 28, TK_DEFINE = 36, TK_DISABLE = 79, TK_DIV = 58, TK_DOT = 34, TK_ELSE = 71, TK_ELSEIF = 70, TK_ENDAROUND = 31, TK_ENDDEFINE = 37, TK_ENDFILE = 68, TK_ENDFOREACH = 66, TK_ENDIF = 72, TK_ENDLET = 74, TK_ENDPROTECT = 80, TK_EOF_TOKEN = 40, TK_EQ = 51, TK_ERROR = 62, TK_ERROR_TOKEN = 82, TK_EXPAND = 63, TK_EXTENSION = 61, TK_FILE = 67, TK_FOR = 26, TK_FOREACH = 39, TK_GE = 53, TK_GT = 55, TK_ID = 78, TK_IDENT = 1, TK_IF = 69, TK_IMPORT = 60, TK_INT_CONST = 19, TK_ITERATOR = 65, TK_LCURLY = 17, TK_LE = 54, TK_LET = 73, TK_LG = 81, TK_LPAREN = 2, TK_LSQUARE = 45, TK_LT = 56, TK_List = 4, TK_MINUS = 7, TK_MULTI = 29, TK_NE = 52, TK_NOT = 8, TK_OR = 49, TK_PLUS = 57, TK_PROTECT = 75, TK_QUESTION_MARK = 44, TK_RCURLY = 32, TK_REAL_CONST = 20, TK_RPAREN = 6, TK_RSQUARE = 46, TK_SEPARATOR = 64, TK_STRING = 9, TK_Set =
      5, TK_TEXT = 18, TK_case = 43, TK_collect = 11, TK_default = 42, TK_exists = 14, TK_false = 22, TK_forAll = 16, TK_implies = 41, TK_let = 27, TK_new = 21, TK_notExists = 15, TK_null = 24, TK_reject = 13, TK_select = 12, TK_switch = 25, TK_true = 23, TK_typeSelect = 10;
public interface XpandParsersym {
    final public static int TK_AND = 48, TK_AROUND = 35, TK_ARROW = 47, TK_AS = 38, TK_ASSIGN = 50, TK_BAR = 59, TK_CEND = 77, TK_COLON = 30, TK_COMMA = 33, TK_CSTART = 76, TK_Collection = 3, TK_DCOLON = 28, TK_DEFINE = 36, TK_DISABLE = 79, TK_DIV = 58, TK_DOT = 34, TK_ELSE = 71, TK_ELSEIF = 70, TK_ENDAROUND = 31, TK_ENDDEFINE = 37, TK_ENDFILE = 68, TK_ENDFOREACH = 66, TK_ENDIF = 72, TK_ENDLET = 74, TK_ENDPROTECT = 80, TK_EOF_TOKEN = 40, TK_EQ = 51, TK_ERROR = 62, TK_ERROR_TOKEN = 82, TK_EXPAND = 63, TK_EXTENSION = 61, TK_FILE = 67, TK_FOR = 26, TK_FOREACH = 39, TK_GE = 53, TK_GT = 55, TK_ID = 78, TK_IDENT = 1, TK_IF = 69, TK_IMPORT = 60, TK_INT_CONST = 19, TK_ITERATOR = 65, TK_LCURLY = 17, TK_LE = 54, TK_LET = 73, TK_LG = 81, TK_LPAREN = 2, TK_LSQUARE = 45, TK_LT = 56, TK_List = 4, TK_MINUS = 7, TK_MULTI = 29, TK_NE = 52, TK_NOT = 8, TK_OR = 49, TK_PLUS = 57, TK_PROTECT = 75, TK_QUESTION_MARK = 44, TK_RCURLY = 32, TK_REAL_CONST = 20, TK_RPAREN = 6, TK_RSQUARE = 46, TK_SEPARATOR = 64, TK_STRING = 9, TK_Set =
      5, TK_TEXT = 18, TK_case = 43, TK_collect = 11, TK_default = 42, TK_exists = 14, TK_false = 22, TK_forAll = 16, TK_implies = 41, TK_let = 27, TK_new = 21, TK_notExists = 15, TK_null = 24, TK_reject = 13, TK_select = 12, TK_switch = 25, TK_true = 23, TK_typeSelect = 10;
public interface XpandParsersym {
    final public static int TK_AND = 49, TK_AROUND = 36, TK_ARROW = 48, TK_AS = 39, TK_ASSIGN = 51, TK_BAR = 59, TK_CEND = 77, TK_COLON = 30, TK_COMMA = 33, TK_CSTART = 76, TK_Collection = 3, TK_DCOLON = 28, TK_DEFINE = 37, TK_DISABLE = 79, TK_DIV = 58, TK_DOT = 35, TK_ELSE = 71, TK_ELSEIF = 70, TK_ENDAROUND = 31, TK_ENDDEFINE = 38, TK_ENDFILE = 68, TK_ENDFOREACH = 66, TK_ENDIF = 72, TK_ENDLET = 74, TK_ENDPROTECT = 80, TK_EOF_TOKEN = 41, TK_EQ = 52, TK_ERROR = 62, TK_ERROR_TOKEN = 82, TK_EXPAND = 63, TK_EXTENSION = 61, TK_FILE = 67, TK_FOR = 26, TK_FOREACH = 40, TK_GE = 54, TK_GT = 56, TK_ID = 78, TK_IDENT = 1, TK_IF = 69, TK_IMPORT = 60, TK_INT_CONST = 18, TK_ITERATOR = 65, TK_LCURLY = 17, TK_LE = 55, TK_LET = 73, TK_LG = 81, TK_LPAREN = 2, TK_LSQUARE = 46, TK_LT = 57, TK_List = 4, TK_MINUS = 6, TK_MULTI = 29, TK_NE = 53, TK_NOT = 8, TK_OR = 50, TK_PLUS = 34, TK_PROTECT = 75, TK_QUESTION_MARK = 45, TK_RCURLY = 32, TK_REAL_CONST = 19, TK_RPAREN = 7, TK_RSQUARE = 47, TK_SEPARATOR = 64, TK_STRING = 9, TK_Set =
      5, TK_TEXT = 24, TK_case = 44, TK_collect = 11, TK_default = 43, TK_exists = 14, TK_false = 21, TK_forAll = 16, TK_implies = 42, TK_let = 27, TK_new = 20, TK_notExists = 15, TK_null = 23, TK_reject = 13, TK_select = 12, TK_switch = 25, TK_true = 22, TK_typeSelect = 10;
public class XpandPartitionScanner extends RuleBasedPartitionScanner {
public class XpandPartitionScanner extends RuleBasedScanner implements IPartitionTokenScanner {
    @Override
    public void setPartialRange (IDocument document, int offset, int length, String contentType, int partitionOffset);
public class XpandResourceParser {
    public XpandResource parse (final IFile file);
public class XpandResourceParser {
    public XpandResource parse (final Reader source, final String qualifiedTemplateName) throws IOException, ParserException;
public class XpandTextEmitter implements TextEmitter {
public class XpandTextEmitter implements TextEmitter {
[XpandTextEmitter-4.java, Txl/api_clone_java.Txl] : TXL0193E predefined function [read], called from [program_remove_clone] - Syntax error parsing file 'XpandTextEmitter-5.java' as a [program], at or near:
[XpandTextEmitter-5.java, Txl/api_clone_java.Txl] : TXL0192E line 76 of XpandTextEmitter-5.java - Syntax error at or near:
[XtendKWLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
public class XtendKWLexerprs implements XtendKWLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 154, EOFT_SYMBOL = 33, EOLT_SYMBOL = 55, ERROR_ACTION = 155, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 182, MAX_LA = 0, NT_OFFSET = 54, NUM_NONTERMINALS = 2, NUM_RULES = 27, NUM_STATES = 124, NUM_SYMBOLS = 56, SEGMENT_SIZE = 8192, START_STATE = 28;
    public interface IsKeyword {
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 0, 8, 0, 1, 11, 12, 6, 0, 15, 16, 17, 0, 1, 20, 7, 8, 9, 0, 7, 0, 27, 19, 29, 30, 13, 8, 7, 0, 9, 0, 1, 0, 0, 2, 0, 3, 5, 0, 4, 7, 6, 0, 25, 0, 0, 1, 0, 0, 0, 8, 0, 22, 15, 10, 0, 7, 0, 1, 0, 5, 33, 14, 0, 1, 0, 1, 0, 0, 0, 23, 3, 5, 4, 0, 0, 2, 0, 0, 1, 21, 0, 31, 0, 3, 0, 3, 12, 0, 0, 5, 2, 0, 0, 17, 3, 8, 0, 0, 0, 2, 0, 0, 0, 3, 12, 0, 0, 0, 1, 13, 0, 1, 10, 0, 0, 0, 3, 19, 4, 0, 14, 2, 0, 0, 9, 0, 3, 26, 0, 24, 2, 9, 0, 1, 0, 1, 0, 0, 0, 1, 0, 4, 0, 18, 0, 1, 10, 0, 0, 0, 3, 0, 10, 0, 0, 2, 0, 9, 0, 1, 0, 12, 11, 0, 8, 5, 3, 13, 28, 0, 0, 2, 0, 1, 0, 1, 6, 0, 0, 1, 0, 0, 0, 6, 0, 0, 2, 0, 0, 2, 0, 3, 7, 0, 4, 14, 0, 15, 0, 6, 20, 0, 4, 2, 0, 1, 0, 1, 0, 0, 0, 2, 16, 0, 6, 0, 3, 0, 1, 0, 5, 0, 1, 0, 0, 0, 0, 2, 18, 5, 4, 8, 0, 0, 2, 2, 0, 0, 0, 3, 21, 4, 0, 0, 2, 0, 0, 2, 10, 0, 7, 5, 0, 1, 0, 0, 0, 0, 0, 0, 4, 2, 7, 6, 0, 11, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
public class XtendKWLexerprs implements XtendKWLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 154, EOFT_SYMBOL = 33, EOLT_SYMBOL = 54, ERROR_ACTION = 155, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 182, MAX_LA = 0, NT_OFFSET = 53, NUM_NONTERMINALS = 2, NUM_RULES = 27, NUM_STATES = 124, NUM_SYMBOLS = 55, SEGMENT_SIZE = 8192, START_STATE = 28;
    public interface IsKeyword {
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 0, 8, 0, 1, 11, 12, 6, 0, 15, 16, 17, 0, 1, 20, 7, 8, 9, 0, 7, 0, 27, 19, 29, 30, 13, 8, 7, 0, 9, 0, 1, 0, 0, 2, 0, 3, 5, 0, 4, 7, 6, 0, 25, 0, 0, 1, 0, 0, 0, 8, 0, 22, 15, 10, 0, 7, 0, 1, 0, 5, 33, 14, 0, 1, 0, 1, 0, 0, 0, 23, 3, 5, 4, 0, 0, 2, 0, 0, 1, 21, 0, 31, 0, 3, 0, 3, 12, 0, 0, 5, 2, 0, 0, 17, 3, 8, 0, 0, 0, 2, 0, 0, 0, 3, 12, 0, 0, 0, 1, 13, 0, 1, 10, 0, 0, 0, 3, 19, 4, 0, 14, 2, 0, 0, 9, 0, 3, 26, 0, 24, 2, 9, 0, 1, 0, 1, 0, 0, 0, 1, 0, 4, 0, 18, 0, 1, 10, 0, 0, 0, 3, 0, 10, 0, 0, 2, 0, 9, 0, 1, 0, 12, 11, 0, 8, 5, 3, 13, 28, 0, 0, 2, 0, 1, 0, 1, 6, 0, 0, 1, 0, 0, 0, 6, 0, 0, 2, 0, 0, 2, 0, 3, 7, 0, 4, 14, 0, 15, 0, 6, 20, 0, 4, 2, 0, 1, 0, 1, 0, 0, 0, 2, 16, 0, 6, 0, 3, 0, 1, 0, 5, 0, 1, 0, 0, 0, 0, 2, 18, 5, 4, 8, 0, 0, 2, 2, 0, 0, 0, 3, 21, 4, 0, 0, 2, 0, 0, 2, 10, 0, 7, 5, 0, 1, 0, 0, 0, 0, 0, 0, 4, 2, 7, 6, 0, 11, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
public interface XtendKWLexersym {
    final public static int Char_A = 10, Char_B = 26, Char_C = 27, Char_D = 40, Char_DollarSign = 34, Char_E = 28, Char_EOF = 33, Char_F = 41, Char_G = 29, Char_H = 42, Char_I = 43, Char_J = 30, Char_K = 44, Char_L = 15, Char_M = 45, Char_N = 46, Char_O = 31, Char_P = 47, Char_Q = 48, Char_R = 32, Char_S = 20, Char_T = 49, Char_U = 50, Char_V = 21, Char_W = 51, Char_X = 52, Char_Y = 53, Char_Z = 54, Char_a = 9, Char_b = 35, Char_c = 6, Char_d = 16, Char_e = 1, Char_f = 17, Char_g = 36, Char_h = 18, Char_i = 5, Char_j = 22, Char_k = 37, Char_l = 3, Char_m = 23, Char_n = 11, Char_o = 7, Char_p = 12, Char_q = 38, Char_r = 8, Char_s = 4, Char_t = 2, Char_u = 13, Char_v = 24, Char_w = 19, Char_x = 14, Char_y = 25, Char_z = 39;
public interface XtendKWLexersym {
    final public static int Char_A = 10, Char_B = 26, Char_C = 27, Char_D = 39, Char_E = 28, Char_EOF = 33, Char_F = 40, Char_G = 29, Char_H = 41, Char_I = 42, Char_J = 30, Char_K = 43, Char_L = 15, Char_M = 44, Char_N = 45, Char_O = 31, Char_P = 46, Char_Q = 47, Char_R = 32, Char_S = 20, Char_T = 48, Char_U = 49, Char_V = 21, Char_W = 50, Char_X = 51, Char_Y = 52, Char_Z = 53, Char_a = 9, Char_b = 34, Char_c = 6, Char_d = 16, Char_e = 1, Char_f = 17, Char_g = 35, Char_h = 18, Char_i = 5, Char_j = 22, Char_k = 36, Char_l = 3, Char_m = 23, Char_n = 11, Char_o = 7, Char_p = 12, Char_q = 37, Char_r = 8, Char_s = 4, Char_t = 2, Char_u = 13, Char_v = 24, Char_w = 19, Char_x = 14, Char_y = 25, Char_z = 38;
public class XtendLexer extends LpgLexStream implements RuleAction, XtendLexersym, XtendParsersym {
public class XtendLexer extends LpgLexStream implements RuleAction, XtendLexersym, XtendParsersym {
    @Override
    public void reportError (int errorCode, String locationInfo, String tokenText);
    @Override
    public void reportError (int errorCode, String locationInfo, int leftToken, int rightToken, String tokenText);
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class XtendLexerprs implements XtendLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 353, EOFT_SYMBOL = 100, EOLT_SYMBOL = 104, ERROR_ACTION = 354, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 577, MAX_LA = 1, NT_OFFSET = 103, NUM_NONTERMINALS = 24, NUM_RULES = 223, NUM_STATES = 31, NUM_SYMBOLS = 127, SEGMENT_SIZE = 8192, START_STATE = 224;
    public interface BaseAction {
        final public static char baseAction [] = {17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 14, 14, 18, 12, 12, 12, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 19, 19, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 15, 15, 15, 15, 20, 20, 20, 20, 21, 21, 16, 16, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11, 11, 11, 11, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 17, 493, 37, 40, 43, 44, 113, 470, 199, 146, 145, 43, 44, 319, 806, 252, 150, 804, 230, 6, 240, 837, 114, 231, 299, 196, 195, 43, 44, 814, 38, 144, 838, 164, 197, 199, 296, 287, 825, 38, 290, 299, 196
    public interface BaseCheck {
    public interface TermAction {
        final public static char termAction [] = {0, 354, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 495, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 462, 485, 479, 481, 492, 494, 513, 516, 473, 483, 474, 482, 484, 486, 487, 488, 489, 490, 491, 493, 469, 470, 471, 472, 465, 466, 478, 475, 476, 477, 496, 480, 463, 464, 354, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 495, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 462, 485, 479, 481, 492, 494, 389, 517, 473, 483, 474, 482, 484, 486, 487, 488, 489, 490, 491, 493, 469, 470, 471, 472, 465, 466, 478, 475, 476, 477,
          496, 480, 463, 464, 36, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 495, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 501, 485, 479, 481, 492, 494, 503, 502, 473, 483, 474, 482, 484, 486, 487, 488, 489, 490, 491, 493, 469, 470, 471, 472, 505, 506, 478, 475, 476, 477, 496, 480, 161, 354, 507, 166, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 547, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 552, 537, 533, 535, 544, 546, 524, 527, 354, 354, 528, 536, 288, 538, 539, 540, 541, 542, 543, 545, 522, 523, 525, 526, 354, 354, 532, 529, 530, 531, 548, 534, 167, 452,
          453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 547, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 552, 537, 533, 535, 544, 546, 524, 527, 354, 354, 528, 536, 288, 538, 539, 540, 541, 542, 543, 545, 522, 523, 525, 526, 354, 354, 532, 529, 530, 531, 548, 534, 354, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 244, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 462, 271, 272, 237, 385, 269, 278, 363, 247, 264, 270, 577, 353, 378, 379, 376, 377, 387, 382, 255, 361, 276, 368, 369, 465, 466, 354, 354, 354, 354, 354, 354, 463, 464, 1, 452, 453, 454, 455, 456, 457, 458, 459,
          460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 354, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 354, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 354, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 5, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 401, 405, 400, 402, 403, 404, 413, 417, 419, 420, 426, 427, 428, 429, 430, 431, 354, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 424, 425, 399, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 354, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 564, 568, 563, 565, 566, 567,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
          , 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 0, 0, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 0, 0, 91, 92, 93, 94, 95, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 0, 0, 91, 92, 93, 94, 95, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
          22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 100, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 0, 0, 0, 0, 0, 0, 97, 98, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
public class XtendLexerprs implements XtendLexersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 355, EOFT_SYMBOL = 101, EOLT_SYMBOL = 104, ERROR_ACTION = 356, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 581, MAX_LA = 1, NT_OFFSET = 103, NUM_NONTERMINALS = 24, NUM_RULES = 225, NUM_STATES = 31, NUM_SYMBOLS = 127, SEGMENT_SIZE = 8192, START_STATE = 226;
    public interface BaseAction {
        final public static char baseAction [] = {17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 14, 14, 18, 12, 12, 12, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 19, 19, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 15, 15, 15, 15, 20, 20, 20, 20, 21, 21, 16, 16, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11, 11, 11, 11, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 17, 498, 37, 40, 43, 44, 113, 474, 201, 147, 146, 43, 44, 321, 812, 254, 151, 810, 232, 6, 242, 843, 114, 233, 302, 198, 197, 43, 44, 820, 38, 145, 844, 165, 199, 201, 299, 289, 831, 38, 292,
    public interface BaseCheck {
    public interface TermAction {
        final public static char termAction [] = {0, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 497, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 464, 487, 481, 483, 494, 496, 516, 519, 475, 485, 476, 484, 486, 488, 489, 490, 491, 492, 493, 495, 471, 472, 473, 474, 467, 468, 480, 477, 478, 479, 498, 499, 482, 465, 466, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 497, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 464, 487, 481, 483, 494, 496, 391, 520, 475, 485, 476, 484, 486, 488, 489, 490, 491, 492, 493, 495, 471, 472, 473, 474, 467, 468, 480, 477, 478,
          479, 498, 499, 482, 465, 466, 36, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 497, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 504, 487, 481, 483, 494, 496, 506, 505, 475, 485, 476, 484, 486, 488, 489, 490, 491, 492, 493, 495, 471, 472, 473, 474, 508, 509, 480, 477, 478, 479, 498, 499, 482, 162, 356, 510, 167, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 550, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 556, 540, 536, 538, 547, 549, 527, 530, 356, 356, 531, 539, 290, 541, 542, 543, 544, 545, 546, 548, 525, 526, 528, 529, 356, 356, 535, 532, 533, 534, 551,
          552, 537, 168, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 550, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 556, 540, 536, 538, 547, 549, 527, 530, 356, 356, 531, 539, 290, 541, 542, 543, 544, 545, 546, 548, 525, 526, 528, 529, 356, 356, 535, 532, 533, 534, 551, 552, 537, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 246, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 464, 273, 274, 239, 387, 271, 280, 365, 249, 266, 272, 581, 355, 380, 381, 378, 379, 389, 384, 257, 363, 278, 370, 371, 467, 468, 356, 356, 356, 356, 356, 356, 356, 465, 466, 1, 454, 455,
          456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 356, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 356, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 5, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 403, 407, 402, 404, 405, 406, 415, 419, 421, 422, 428, 429, 430, 431, 432, 433, 356, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 356, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50
          , 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 0, 100, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 0, 0, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 0, 0, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
          , 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 101, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 0, 0, 0, 0, 0, 0, 0, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
[XtendLexerprs-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 10 garbage recoveries were required (larger size recommended for improved performance)
public interface XtendLexersym {
    final public static int Char_0 = 1, Char_1 = 2, Char_2 = 3, Char_3 = 4, Char_4 = 5, Char_5 = 6, Char_6 = 7, Char_7 = 8, Char_8 = 9, Char_9 = 10, Char_A = 21, Char_Acute = 101, Char_AfterASCII = 103, Char_Ampersand = 67, Char_AtSign = 92, Char_B = 22, Char_BackQuote = 93, Char_BackSlash = 77, Char_C = 23, Char_CR = 98, Char_Caret = 96, Char_Colon = 68, Char_Comma = 83, Char_CtlCharNotWS = 99, Char_D = 24, Char_DollarSign = 102, Char_Dot = 69, Char_DoubleQuote = 73, Char_E = 25, Char_EOF = 100, Char_Equal = 27, Char_Exclamation = 75, Char_F = 26, Char_FF = 90, Char_G = 45, Char_GreaterThan = 70, Char_H = 46, Char_HT = 89, Char_I = 47, Char_J = 48, Char_K = 49, Char_L = 50, Char_LF = 97, Char_LeftBrace = 78, Char_LeftBracket = 80, Char_LeftParen = 87, Char_LessThan = 84, Char_M = 51, Char_Minus = 86, Char_N = 52, Char_O = 53, Char_P = 54, Char_Percent = 91, Char_Plus = 85, Char_Q = 55, Char_QuestionMark = 82, Char_R = 56, Char_RightBrace = 79, Char_RightBracket = 81, Char_RightParen = 88, Char_S = 57,
      Char_SemiColon = 76, Char_Sharp = 95, Char_SingleQuote = 74, Char_Slash = 71, Char_Space = 65, Char_Star = 72, Char_T = 58, Char_Tilde = 94, Char_U = 59, Char_V = 60, Char_VerticalBar = 66, Char_W = 61, Char_X = 62, Char_Y = 63, Char_Z = 64, Char__ = 44, Char_a = 13, Char_b = 11, Char_c = 14, Char_d = 15, Char_e = 16, Char_f = 12, Char_g = 28, Char_h = 29, Char_i = 30, Char_j = 31, Char_k = 32, Char_l = 33, Char_m = 34, Char_n = 17, Char_o = 35, Char_p = 36, Char_q = 37, Char_r = 18, Char_s = 38, Char_t = 19, Char_u = 20, Char_v = 39, Char_w = 40, Char_x = 41, Char_y = 42, Char_z = 43;
public interface XtendLexersym {
    final public static int Char_0 = 1, Char_1 = 2, Char_2 = 3, Char_3 = 4, Char_4 = 5, Char_5 = 6, Char_6 = 7, Char_7 = 8, Char_8 = 9, Char_9 = 10, Char_A = 21, Char_Acute = 102, Char_AfterASCII = 103, Char_Ampersand = 67, Char_AtSign = 92, Char_B = 22, Char_BackQuote = 93, Char_BackSlash = 77, Char_C = 23, Char_CR = 99, Char_Caret = 97, Char_Colon = 68, Char_Comma = 83, Char_CtlCharNotWS = 100, Char_D = 24, Char_DollarSign = 96, Char_Dot = 69, Char_DoubleQuote = 73, Char_E = 25, Char_EOF = 101, Char_Equal = 27, Char_Exclamation = 75, Char_F = 26, Char_FF = 90, Char_G = 45, Char_GreaterThan = 70, Char_H = 46, Char_HT = 89, Char_I = 47, Char_J = 48, Char_K = 49, Char_L = 50, Char_LF = 98, Char_LeftBrace = 78, Char_LeftBracket = 80, Char_LeftParen = 87, Char_LessThan = 84, Char_M = 51, Char_Minus = 86, Char_N = 52, Char_O = 53, Char_P = 54, Char_Percent = 91, Char_Plus = 85, Char_Q = 55, Char_QuestionMark = 82, Char_R = 56, Char_RightBrace = 79, Char_RightBracket = 81, Char_RightParen = 88, Char_S = 57,
      Char_SemiColon = 76, Char_Sharp = 95, Char_SingleQuote = 74, Char_Slash = 71, Char_Space = 65, Char_Star = 72, Char_T = 58, Char_Tilde = 94, Char_U = 59, Char_V = 60, Char_VerticalBar = 66, Char_W = 61, Char_X = 62, Char_Y = 63, Char_Z = 64, Char__ = 44, Char_a = 13, Char_b = 11, Char_c = 14, Char_d = 15, Char_e = 16, Char_f = 12, Char_g = 28, Char_h = 29, Char_i = 30, Char_j = 31, Char_k = 32, Char_l = 33, Char_m = 34, Char_n = 17, Char_o = 35, Char_p = 36, Char_q = 37, Char_r = 18, Char_s = 38, Char_t = 19, Char_u = 20, Char_v = 39, Char_w = 40, Char_x = 41, Char_y = 42, Char_z = 43;
public class XtendParser extends PrsStream implements RuleAction {
public class XtendParser extends PrsStream implements RuleAction {
    @Override
    public void reportError (int errorCode, String locationInfo, String tokenText);
    @Override
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0987E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0989E - Out of kid space - 4800000 kids have been allocated.
public class XtendParserprs implements XtendParsersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 1004, EOFT_SYMBOL = 34, EOLT_SYMBOL = 34, ERROR_ACTION = 1005, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1130, MAX_LA = 2, NT_OFFSET = 61, NUM_NONTERMINALS = 57, NUM_RULES = 125, NUM_STATES = 121, NUM_SYMBOLS = 118, SEGMENT_SIZE = 8192, START_STATE = 864;
    public interface Asb {
    public interface Asr {
    public interface BaseAction {
        final public static char baseAction [] = {48, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 34, 34, 23, 23, 21, 21, 22, 22, 20, 20, 49, 49, 49, 49, 49, 49, 19, 19, 50, 50, 17, 17, 51, 51, 18, 18, 18, 35, 35, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 36, 36, 32, 32, 31, 31, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 48, 37, 37, 40, 38, 38, 41, 41, 39, 39, 42, 42, 43, 43, 43, 44, 45, 45, 52, 52, 53, 53, 56, 56, 54, 54, 33, 30, 30, 30, 30, 30, 55, 55, 47, 47, 46, 29, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 982, 1, 54, 981, 62, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 982, 1, 325, 990, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 982, 1, 333, 78, 1, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909,
          917, 968, 967, 973, 11, 963, 5, 975, 3, 962, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 977, 1, 90, 86, 80, 980, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 979, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 979, 1, 118, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 987, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 991, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 3, 997, 1, 171, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 994, 171, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48
          , 49, 902, 909, 917, 968, 967, 973, 11, 963, 5, 975, 2, 146, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 963, 7, 975, 146, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 986, 146, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 11, 9, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 15, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 1001, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 1002, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 967, 973, 931, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 968, 17, 973, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 917, 19
          , 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 29, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 902, 909, 21, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 905, 44, 45, 46, 47, 48, 49, 33, 909, 220, 86, 80, 54, 79, 936, 50, 55, 970, 38, 905, 44, 45, 46, 47, 48, 49, 220, 86, 80, 54, 79, 936, 50, 55, 970, 37, 905, 44, 45, 46, 47, 48, 49, 220, 86, 80, 54, 79, 936, 50, 55, 970, 4, 905, 44, 45, 46, 47, 48, 49, 266, 86, 80, 54, 79, 936, 926, 55, 970, 304, 86, 80, 947, 79, 936, 304, 86, 80, 947, 79, 936, 298, 86, 80, 110, 79, 936, 281, 86, 80, 947, 79, 936, 272, 281, 86, 80, 933, 79, 936, 272, 74, 143, 86, 942, 946, 273, 74, 417, 133, 287, 948, 281, 86, 80, 881, 79, 936, 287, 76, 281, 86, 80, 989, 79, 936, 290, 133, 143, 86, 58, 355, 89, 383, 939, 855, 99, 100, 861, 98, 361, 996, 855, 99, 100, 861, 865, 288, 848, 882, 372, 873, 115, 88, 289, 122, 94, 156, 836, 873, 115, 85, 249, 995, 91, 383, 996, 882, 355, 389, 389, 408, 389, 389, 389, 430, 430
    public interface BaseCheck {
        final public static byte baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 3, 0, 2, 3, 0, 2, 3, 4, 0, 2, 1, 1, 15, 11, 10, 11, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 0, 3, 3, 3, 3, 0, 1, 1, 3, 1, - 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, - 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, - 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 9, 0, - 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 69, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 119, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 77, 0, 0, 0, 0, 0, 0, 0, 0, - 28, 0, 0, 0, 0, 0, - 29, 0, 0, 0, 0, 0, - 16, 0, 0, 0, 0, 0, - 37, 0, 0, 0, 0, 0, - 6, - 8, 0, 0, 0, 0, 0, - 10, 0, - 20, 0, 0, 0, - 11, 0, - 97, - 1, - 3, 0, - 15, 0, 0, 0, 0, 0, - 7, 0, - 73, 0, 0, 0, 0, 0, - 21, - 5, - 52, 0, 0, - 40, 0, - 113, 0, 0, 0, 0, 0, 0, - 41, 0, 0, 0, 0, 0, 0, - 45, 0, 0, - 54, 0, - 18, 0, - 55, 0, 0, 0, 0, 0, - 19, 0, - 56, 0, 0, - 63, 0, 0, - 64, - 85, - 105, - 94, - 106, - 107, - 108, - 110, -
    public interface InSymb {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeLa {
    public interface ScopeLhs {
    public interface ScopeRhs {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 1005, 972, 282, 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 87, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 974, 1005, 1005, 976, 1005, 972, 282, 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 907, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 974, 1005, 1005, 976, 824, 1062, 857, 895, 886, 1005, 972, 282, 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1058, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 974, 1005, 1004, 976, 1005, 972, 282, 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 974, 1005, 941, 976, 1005, 988, 282, 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 90, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 974, 1005, 934, 976, 1005, 972, 312, 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 974, 1005, 972, 282
          , 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 188, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 974, 1005, 972, 312, 1087, 1088, 1089, 781, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 883, 1064, 1065, 1066, 764, 1005, 972, 312, 1087, 1088, 1089, 950, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 883, 1064, 1065, 1066, 54, 798, 798, 798, 798, 798, 20, 798, 798, 798, 798, 798, 798, 798, 798, 1005, 798, 798, 798, 798, 798, 798, 798, 1005, 972, 1086, 1087, 1088, 1089, 105, 107, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 934, 1100, 1087, 1088, 1089, 93, 28, 32, 1005, 1569, 1027, 1028, 1029, 1030, 1031, 1032, 1005, 1453, 1005, 1087, 1088, 1089, 73, 934, 97, 1087, 1088, 1089, 87, 1036, 158, 938, 1005, 929, 915, 928, 927, 925, 87, 87, 158, 109, 934, 1005, 915, 915, 1111, 934, 867, 1113, 220, 1005, 1005, 1005, 944, 1035, 907, 1039, 1040, 849, 1005, 945, 1005, 1005, 830, 1005, 907, 907, 75, 934, 1005, 951, 1005, 1005, 1130, 1005,
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 0, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 0, 27, 2, 29, 32, 59, 60, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 34, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 53, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 15, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 0, 1, 33, 3, 4, 5, 0, 0, 8,
    public interface TerminalIndex {
public class XtendParserprs implements XtendParsersym, lpg.lpgjavaruntime.ParseTable {
    final public static int ACCEPT_ACTION = 1004, EOFT_SYMBOL = 35, EOLT_SYMBOL = 35, ERROR_ACTION = 1005, IDENTIFIER_SYMBOL = 0, LA_STATE_OFFSET = 1130, MAX_LA = 2, NT_OFFSET = 61, NUM_NONTERMINALS = 57, NUM_RULES = 125, NUM_STATES = 121, NUM_SYMBOLS = 118, SEGMENT_SIZE = 8192, START_STATE = 863;
    public interface Asb {
    public interface Asr {
    public interface BaseAction {
        final public static char baseAction [] = {49, 28, 29, 29, 27, 27, 25, 25, 26, 26, 24, 24, 34, 34, 23, 23, 21, 21, 22, 22, 20, 20, 50, 50, 50, 50, 50, 50, 19, 19, 35, 35, 17, 17, 51, 51, 18, 18, 18, 36, 36, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 6, 6, 6, 15, 15, 16, 11, 11, 14, 12, 13, 7, 7, 7, 8, 8, 8, 8, 8, 8, 37, 37, 32, 32, 31, 31, 3, 3, 4, 5, 5, 5, 2, 2, 1, 1, 49, 38, 38, 41, 39, 39, 42, 42, 40, 40, 43, 43, 44, 44, 44, 45, 46, 46, 52, 52, 53, 53, 56, 56, 54, 54, 33, 30, 30, 30, 30, 30, 55, 55, 48, 48, 47, 29, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 982, 1, 301, 981, 62, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 982, 1, 323, 990, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 982, 1, 327, 78, 1, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889
          , 969, 968, 973, 11, 964, 5, 975, 3, 958, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 977, 1, 90, 86, 80, 980, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 979, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 979, 1, 118, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 987, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 991, 1, 90, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 3, 997, 1, 171, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 5, 975, 994, 171, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28,
          865, 889, 969, 968, 973, 11, 964, 5, 975, 2, 146, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 964, 7, 975, 146, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 986, 146, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 11, 9, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 15, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 1001, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 1002, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 968, 973, 933, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 969, 17, 973, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 889, 19, 196, 86, 80, 54,
          79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 28, 865, 928, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 33, 865, 196, 86, 80, 54, 79, 936, 50, 55, 970, 36, 909, 44, 45, 46, 47, 48, 49, 29, 865, 220, 86, 80, 54, 79, 936, 50, 55, 970, 38, 909, 44, 45, 46, 47, 48, 49, 220, 86, 80, 54, 79, 936, 50, 55, 970, 37, 909, 44, 45, 46, 47, 48, 49, 220, 86, 80, 54, 79, 936, 50, 55, 970, 4, 909, 44, 45, 46, 47, 48, 49, 266, 86, 80, 54, 79, 936, 925, 55, 970, 299, 86, 80, 950, 79, 936, 299, 86, 80, 950, 79, 936, 287, 86, 80, 110, 79, 936, 281, 86, 80, 950, 79, 936, 273, 281, 86, 80, 926, 79, 936, 273, 74, 87, 86, 944, 268, 949, 74, 419, 133, 320, 289, 951, 281, 86, 80, 885, 79, 936, 76, 281, 86, 80, 989, 79, 936, 133, 320, 87, 86, 58, 115, 385, 89, 940, 249, 854, 99, 100, 859, 98, 996, 355, 854, 99, 100, 859, 864, 358, 847, 880, 385, 881, 54, 88, 375, 122, 835, 156, 54, 85, 355, 725, 995, 91, 996, 94, 880, 393, 881, 744, 397, 306, 393, 328, 393, 393, 316, 430, 430, 124, 393, 27
    public interface BaseCheck {
        final public static byte baseCheck [] = {0, 1, 6, 1, 4, 1, 1, 3, 1, 5, 10, 1, 0, 5, 1, 3, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 4, 6, 4, 1, 1, 1, 1, 1, 1, 0, 1, 2, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 3, 3, 0, 2, 3, 0, 2, 3, 4, 0, 2, 1, 1, 15, 11, 10, 11, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 0, 3, 3, 3, 3, 0, 1, 1, 3, 1, - 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 2, 0, - 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 4, 0, - 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 9, 0, - 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 67, 0, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 119, 0
          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 75, 0, 0, 0, 0, 0, 0, 0, 0, - 28, 0, 0, 0, 0, 0, - 29, 0, 0, 0, 0, 0, - 16, 0, 0, 0, 0, 0, - 37, 0, 0, 0, 0, 0, - 6, - 8, 0, 0, 0, 0, 0, - 10, 0, - 20, 0, 0, - 11, 0, 0, - 97, - 1, - 3, - 54, 0, - 15, 0, 0, 0, 0, 0, 0, - 71, 0, 0, 0, 0, 0, - 5, - 7, - 51, 0, 0, - 21, - 113, 0, 0, - 55, 0, 0, 0, 0, 0, 0, - 40, 0, 0, 0, 0, 0, - 41, 0, 0, - 62, 0, - 18, 0, - 53, 0, 0, 0, - 19, 0, - 63, 0, 0, 0, 0, 0, 0, - 84, 0, 0, - 93, - 12, - 105, - 94, - 106, - 107, - 13,
    public interface InSymb {
    public interface Nasb {
    public interface Nasr {
    public interface NonterminalIndex {
    public interface ScopeLa {
    public interface ScopeLhs {
    public interface ScopeRhs {
    public interface ScopeState {
    public interface TermAction {
        final public static char termAction [] = {0, 1005, 972, 282, 1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 87, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 974, 75, 1005, 976, 1005, 972, 282, 1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 907, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 974, 1005, 942, 976, 841, 1062, 856, 902, 896, 1005, 972, 282, 1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1058, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 974, 1005, 931, 976, 1005, 972, 282, 1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 974, 1005, 1569, 976, 1005, 988, 282, 1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 90, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 974, 1005, 947, 976, 1005, 972, 312, 1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 974, 1005, 972, 282,
          1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 188, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 974, 1005, 972, 312, 1087, 1088, 1089, 780, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 882, 1064, 1065, 1066, 763, 1005, 972, 312, 1087, 1088, 1089, 953, 1048, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 126, 1067, 1068, 882, 1064, 1065, 1066, 54, 797, 797, 797, 797, 797, 20, 797, 797, 797, 797, 797, 797, 797, 797, 1005, 797, 797, 797, 797, 797, 797, 797, 1005, 972, 107, 1087, 1088, 1089, 1036, 105, 971, 1072, 1073, 1074, 1075, 1076, 1077, 1005, 931, 1035, 1087, 1088, 1089, 1005, 1448, 32, 1087, 1088, 1089, 1027, 1028, 1029, 1030, 1031, 1032, 73, 931, 1005, 1087, 1088, 1089, 87, 1005, 158, 97, 1005, 935, 913, 930, 929, 927, 87, 87, 158, 109, 931, 93, 913, 913, 1005, 931, 867, 1113, 1005, 21, 1111, 220, 1100, 1005, 907, 1005, 1005, 1004, 1005, 948, 1039, 1040, 1005, 954, 907, 907, 1005, 931, 823, 1005, 1005, 829, 1036, 1097, 1005, 1005, 1005, 1130, 402
    public interface TermCheck {
        final public static byte termCheck [] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 0, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 31, 29, 32, 59, 60, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 53, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 15, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 0, 1, 0, 3, 4, 5, 23, 0, 8,
    public interface TerminalIndex {
[XtendParserprs-3.java, Txl/api_clone_java.Txl] : TXL0513W - (Warning) 38 garbage recoveries were required (larger size recommended for improved performance)
public interface XtendParsersym {
    final public static int TK_AND = 40, TK_ARROW = 39, TK_ASSIGN = 42, TK_BAR = 52, TK_COLON = 26, TK_COMMA = 31, TK_Collection = 3, TK_DCOLON = 28, TK_DIV = 51, TK_DOT = 30, TK_EOF_TOKEN = 34, TK_EQ = 43, TK_ERROR_TOKEN = 61, TK_GE = 45, TK_GLOBALVAR = 60, TK_GT = 47, TK_IDENT = 1, TK_INT_CONST = 17, TK_JAVA = 59, TK_LCURLY = 16, TK_LE = 46, TK_LPAREN = 2, TK_LSQUARE = 32, TK_LT = 48, TK_List = 4, TK_MINUS = 23, TK_MULTI = 50, TK_NE = 44, TK_NOT = 6, TK_OR = 41, TK_PLUS = 49, TK_QUESTION_MARK = 38, TK_RCURLY = 29, TK_REAL_CONST = 18, TK_RPAREN = 15, TK_RSQUARE = 33, TK_SEMI = 25, TK_STRING = 7, TK_Set = 5, TK_cached = 58, TK_case = 37, TK_collect = 9, TK_create = 57, TK_default = 36, TK_exists = 12, TK_extension = 54, TK_false = 20, TK_forAll = 14, TK_implies = 35, TK_import = 53, TK_let = 27, TK_new = 19, TK_notExists = 13, TK_null = 22, TK_private = 56, TK_reexport = 55, TK_reject = 11, TK_select = 10, TK_switch = 24, TK_true = 21, TK_typeSelect = 8;
public interface XtendParsersym {
    final public static int TK_AND = 41, TK_ARROW = 40, TK_ASSIGN = 43, TK_BAR = 52, TK_COLON = 26, TK_COMMA = 31, TK_Collection = 3, TK_DCOLON = 28, TK_DIV = 51, TK_DOT = 30, TK_EOF_TOKEN = 35, TK_EQ = 44, TK_ERROR_TOKEN = 61, TK_GE = 46, TK_GLOBALVAR = 60, TK_GT = 48, TK_IDENT = 1, TK_INT_CONST = 17, TK_JAVA = 59, TK_LCURLY = 16, TK_LE = 47, TK_LPAREN = 2, TK_LSQUARE = 32, TK_LT = 49, TK_List = 4, TK_MINUS = 23, TK_MULTI = 50, TK_NE = 45, TK_NOT = 6, TK_OR = 42, TK_PLUS = 34, TK_QUESTION_MARK = 39, TK_RCURLY = 29, TK_REAL_CONST = 18, TK_RPAREN = 15, TK_RSQUARE = 33, TK_SEMI = 25, TK_STRING = 7, TK_Set = 5, TK_cached = 58, TK_case = 38, TK_collect = 9, TK_create = 57, TK_default = 37, TK_exists = 12, TK_extension = 54, TK_false = 20, TK_forAll = 14, TK_implies = 36, TK_import = 53, TK_let = 27, TK_new = 19, TK_notExists = 13, TK_null = 22, TK_private = 56, TK_reexport = 55, TK_reject = 11, TK_select = 10, TK_switch = 24, TK_true = 21, TK_typeSelect = 8;
public class XtendResourceParser {
    public XtendResource parse (final IFile file);
public class XtendResourceParser {
    public XtendResource parse (final Reader source, final String name) throws IOException, ParserException;
    public static ParserException.ErrorLocationInfo createError (LexStream lexStream, int left_loc, int right_loc);
public class XtendResourceParser {
    public static ParserException.ErrorLocationInfo createError (LexStream lexStream, int left_loc, int right_loc);
public class XtendResourceParser {
public class XYLayoutDataImpl extends EObjectImpl implements XYLayoutData {
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    public boolean eIsSet (int featureID);
    public void eSet (int featureID, Object newValue);
public class XYLayoutDataImpl extends EObjectImpl implements XYLayoutData {
    @Override
    protected EClass eStaticClass ();
    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs);
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs);
    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType);
    @Override
    public boolean eIsSet (int featureID);
    @Override
    public void eSet (int featureID, Object newValue);
    @Override
public class XYLayoutDataImpl extends EObjectImpl implements XYLayoutData {
    protected Dimension size = null;
    protected Point topLeft = null;
public class XYLayoutDataImpl extends EObjectImpl implements XYLayoutData {
    protected Dimension size;
    protected Point topLeft;
public class XYLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class XYLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
public class XYLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected EStructuralFeature getChildFeature (Object object, Object child);
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public Collection getChildrenFeatures (Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class XYLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child);
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class XYLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class XYLayoutDataItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class XYLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object);
    public List getPropertyDescriptors (Object object);
    public Object getImage (Object object);
    public ResourceLocator getResourceLocator ();
    public void notifyChanged (Notification notification);
public class XYLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
    protected void collectNewChildDescriptors (Collection < CommandParameter > newChildDescriptors, Object object);
    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object);
    @Override
    public Object getImage (Object object);
    @Override
    public ResourceLocator getResourceLocator ();
    @Override
    public String getText (Object object);
    @Override
public class XYLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class XYLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IItemLabelProvider, IItemPropertySource, IStructuredItemContentProvider, ITreeItemContentProvider {
    @Override
public class ZoomContributionItem extends PresentationContributionItem implements Listener, ZoomListener {
public class ZoomContributionItem extends CustomContributionItem implements Listener, ZoomListener {
public class ZoomTool extends RubberbandSelectionTool {
    public ZoomTool () {
public class ZoomTool extends RubberbandSelectionTool {
    public ZoomTool (boolean zoomIn) {
public class ZoomTool extends RubberbandSelectionTool {
public class ZoomTool extends RubberbandSelectionTool {
public class ZOrderAction extends PresentationAction {
public class ZOrderAction extends DiagramAction {
abstract public class ZOrderCommand extends AbstractModelCommand {
    public ZOrderCommand (String label, View view) {
abstract public class ZOrderCommand extends AbstractTransactionalCommand {
    public ZOrderCommand (TransactionalEditingDomain editingDomain, String label, View view) {
