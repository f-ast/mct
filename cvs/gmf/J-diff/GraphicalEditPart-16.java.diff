19d18
< 
53a53
> import org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker;
55d54
< import org.eclipse.gmf.runtime.diagram.core.listener.PresentationListener;
68c67
< import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
---
> import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
158c157
< 		PresentationListener.getInstance().addNotificationListener(element,listener);
---
> 		DiagramEventBroker.getInstance().addNotificationListener(element,listener);
182c181
< 		PresentationListener.getInstance().addNotificationListener(element,feature,listener);
---
> 		DiagramEventBroker.getInstance().addNotificationListener(element,feature,listener);
186c185
< 	/** Creates a connector editpart. */
---
> 	/** Creates a connection editpart. */
188,189c187,188
< 			Object connectorView) {
< 		return (org.eclipse.gef.ConnectionEditPart) createChild(connectorView);
---
> 			Object connectionView) {
> 		return (org.eclipse.gef.ConnectionEditPart) createChild(connectionView);
227c226
< 					PresentationListener.getInstance().
---
> 					DiagramEventBroker.getInstance().
230c229
< 					PresentationListener.getInstance().removeNotificationListener((EObject) obj[0],(NotificationListener) obj[1]);
---
> 					DiagramEventBroker.getInstance().removeNotificationListener((EObject) obj[0],(NotificationListener) obj[1]);
376c375
< 	 * and a <code>CreateConnectorViewRequest</code>'s source and target editparts.
---
> 	 * and a <code>CreateConnectionViewRequest</code>'s source and target editparts.
572c571
< 	 * notation 3- Connectors are not refereshed since they are maintained by
---
> 	 * notation 3- Connections are not refereshed since they are maintained by
638c637
< 			setBackgroundColor(PresentationResourceManager.getInstance().getColor(new Integer(style.getFillColor())));
---
> 			setBackgroundColor(DiagramResourceManager.getInstance().getColor(new Integer(style.getFillColor())));
658c657
< 			setFontColor(PresentationResourceManager.getInstance().getColor(new Integer(style.getFontColor())));
---
> 			setFontColor(DiagramResourceManager.getInstance().getColor(new Integer(style.getFontColor())));
666c665
< 			setForegroundColor(PresentationResourceManager.getInstance().getColor(new Integer(style.getLineColor())));
---
> 			setForegroundColor(DiagramResourceManager.getInstance().getColor(new Integer(style.getLineColor())));
693c692
< 			PresentationListener.getInstance().
---
> 			DiagramEventBroker.getInstance().
698c697
< 			PresentationListener.getInstance().removeNotificationListener((EObject) objects[0],(NotificationListener) objects[1]);
---
> 			DiagramEventBroker.getInstance().removeNotificationListener((EObject) objects[0],(NotificationListener) objects[1]);
724c723
< 			PresentationResourceManager.getInstance().getFont(
---
> 			DiagramResourceManager.getInstance().getFont(
1147c1146
< 	 * GEF does not check if the connector's source or target are the same as the editpart
---
> 	 * GEF does not check if the connection's source or target are the same as the editpart
1150,1151c1149,1150
< 	 * "in a model transaction, view's source connectors are detached, a new view is
< 	 * created, and the connectors are attached to it, then the old view is destroyed"
---
> 	 * "in a model transaction, view's source connections are detached, a new view is
> 	 * created, and the connections are attached to it, then the old view is destroyed"
1154c1153
< 	 * PresentationListener which prevents the first connector detach event from coming and 
---
> 	 * DiagramEventBroker which prevents the first connection detach event from coming and 
