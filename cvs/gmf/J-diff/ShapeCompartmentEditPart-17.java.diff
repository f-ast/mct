26a27
> import org.eclipse.draw2d.FigureListener;
38a40
> import org.eclipse.gef.EditPartListener;
86a89,113
>     // Listen to editparts being added to or removed from this compartment
>     // editpart so that when a figure moves within the compartment we can call
>     // refreshConnections(). See bugzilla#146581.
>     private EditPartListener editpartListener = new EditPartListener.Stub() {
> 
>         private FigureListener childFigureListener = new FigureListener() {
> 
>             public void figureMoved(IFigure source) {
>                 refreshConnections();
>             }
>         };
> 
>         public void childAdded(EditPart child, int index) {
>             ((GraphicalEditPart) child).getFigure().addFigureListener(
>                 childFigureListener);
>         }
> 
>         public void removingChild(EditPart child, int index) {
>             ((GraphicalEditPart) child).getFigure().removeFigureListener(
>                 childFigureListener);
> 
>         }
> 
>     };
> 
105d131
< 
133a160,161
>                 boolean noSource = false;
>                 boolean noTarget = false;
141a170
>                     noSource  = !fig.isVisible();
153a183
>                     noTarget = !fig.isVisible();
160a191,196
>                 if (noSource || noTarget){
>                   if (noSource && cep.getTarget()!=null)
>                       cep.getTarget().refresh();
>                   if (noTarget && cep.getSource()!=null)
>                         cep.getSource().refresh();
>                 }else{
161a198,223
>                     refreshConnectionEnds(cep);
>                 }
> 			}
> 		}
>         
>         private void refreshConnectionEnds(ConnectionEditPart cEP){
>             EditPart srcEditPart = cEP.getSource();
>             EditPart trgEditPart = cEP.getTarget();
>             Object model = cEP.getModel();
>             if (model instanceof Edge){
>                 Edge edge = (Edge)model;
>                 View source = edge.getSource();
>                 View target = edge.getTarget();
>                 if (srcEditPart==null){
>                     refreshEditPart(cEP.getViewer(), source);
>                 }
>                 if (trgEditPart==null){
>                     refreshEditPart(cEP.getViewer(), target);
>                 }
>             }
>         }
> 
>         private void refreshEditPart(EditPartViewer  viewer, View view) {
>             EditPart ep = (EditPart)viewer.getEditPartRegistry().get(view);
>             if (ep!=null){
>                 ep.refresh();
505a568,578
> 					forceRefreshConnections();
> 				}
> 			});
> 		}
> 	}
>     
>     /**
>      * Refresh the connections associated the the children of this shape
>      * compartment.
>      */
>     protected void forceRefreshConnections() {
518,520c591
< 				}
< 			});
< 		}
---
>         
625a697,700
>         View view  = getNotationView();
>         if (view !=null && !view.isVisible())
>             forceRefreshConnections();
>         else
708a784,793
>     public void addNotify() {
>         addEditPartListener(editpartListener);
>         super.addNotify();
>     }
> 
>     public void removeNotify() {
>         removeEditPartListener(editpartListener);
>         super.removeNotify();
>     }
> 
