869,892d868
< 	 * Will invoke {@link #refreshSemantic()} if
< 	 * {@link #shouldHandleSemanticEvent(NotificationEvent)} returns <tt>true</tt>.
< 	 * 
< 	 * @param event a semantic event.
< 	 * @deprecated use {@link CanonicalEditPolicy#handleNotificationEvent} instead
< 	 */
< 	protected void handleSemanticEvent(Notification event) {
< 		refresh();
< 	}
< 		
< 	/**
< 	 * Return <tt>true</tt> is the event is triggered by adding to or
< 	 * removing from one of element's slots.
< 	 * 
< 	 * @param event a semantic event
< 	 * @return <tt>true</tt> if {@link #refreshSemantic()} should be invoked;
< 	 * otherwise <tt>false</tt>.
< 	 * @deprecated use {@link CanonicalEditPolicy#shouldHandleNotificationEvent} instead
< 	 */
< 	protected boolean shouldHandleSemanticEvent(Notification event) {
< 		return NotificationUtil.isElementAddedToSlot(event) || NotificationUtil.isElementRemovedFromSlot(event);
< 	}
< 	
< 	/**
911,917d886
< 		// This can be removed when all clients have migrated
< 		// to handleNotificationEvent
< 		if (shouldHandleSemanticEvent(event)) {
< 			handleSemanticEvent(event);
< 			return;
< 		}
< 		
