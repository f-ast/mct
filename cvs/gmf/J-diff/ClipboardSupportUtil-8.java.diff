27a28
> import org.eclipse.emf.ecore.EStructuralFeature;
29a31,32
> import org.eclipse.emf.ecore.util.ExtendedMetaData;
> import org.eclipse.emf.ecore.util.FeatureMapUtil;
131a135,160
> 	 * Queries whether a reference is mutable.  A reference is considered
> 	 * mutable if and only if it is changeable and it is either not derived
> 	 * or it is a member of a feature map (though not itself a feature map).
> 	 * 
> 	 * @param reference the reference to test
> 	 * 
> 	 * @return <code>true</code> if the reference is mutable;
> 	 *     <code>false</code>, otherwise
> 	 */
> 	static boolean isMutable(EReference reference) {
> 		boolean result = reference.isChangeable();
> 		
> 		if (result) {
> 			if (reference.isDerived()) {
> 				// check whether it is a feature-map member that is not, itself,
> 				//    a feature map
> 				EStructuralFeature group = ExtendedMetaData.INSTANCE.getGroup(reference);
> 				
> 				result = (group != null) && !FeatureMapUtil.isFeatureMap(reference);
> 			}
> 		}
> 		
> 		return result;
> 	}
> 	
> 	/**
141c170
< 		if (reference.isChangeable() && (reference.isDerived() == false)) {
---
> 		if (isMutable(reference)) {
390c419
< 		if (reference.isChangeable() && (reference.isDerived() == false)) {
---
> 		if (isMutable(reference)) {
421c450
< 		if (reference.isChangeable() && (reference.isDerived() == false)) {
---
> 		if (isMutable(reference)) {
459c488
< 		if (reference.isChangeable() && (reference.isDerived() == false)) {
---
> 		if (isMutable(reference)) {
793,794c822
< 				if ((parentReference.isChangeable())
< 					&& (parentReference.isDerived() == false)) {
---
> 				if (isMutable(parentReference)) {
