2c2
<  * Copyright (c) 2002, 2003 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
26a27
> import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
49,58d49
<     /**
<      * This is a HAck to avoid breaking clients who still send the Unresolved event
<      * It should be remomved in 1.1 release and replaced by a refresh edit policy 
<      * that will be installed by the clients
<      *
<      */
<     private interface EventType {
<         public static final int UNRESOLVE = 1003;
<     }
< 
103,104c94,105
<         else if (notification.getEventType() == EventType.UNRESOLVE 
<                 && notification.getNotifier() == ((View)getModel()).getElement())
---
>         else if (notification.getEventType() == EventType.UNRESOLVE && hasNotationView()){
>             // make sure we refresh if the unresolved element is the edit
>             // part's semantic element the comparison should be id based not
>             // instance based, since get element will resolve the element
>             // and resolving the element will  result in returning a different
>             // instance than the proxy we had as a notifier
>             EObject notifier = (EObject) notification.getNotifier();
>             EObject viewElement = getNotationView().getElement();
>             if (viewElement!=null){
>                 String id1 = EMFCoreUtil.getProxyID(notifier);
>                 String id2 = EMFCoreUtil.getProxyID(viewElement);
>                 if (id1.equals(id2)) {
106c107,109
< 
---
>                 }
>             }
>          }
