42,44d41
< import org.eclipse.gmf.gmfgraph.Layout;
< import org.eclipse.gmf.gmfgraph.LayoutData;
< import org.eclipse.gmf.gmfgraph.LineKind;
127c124
< 		final NotificationListener layoutListener = new NotificationListener() {
---
> 		final NotificationListener Layoutable_LayoutData_PropertiesListener = new NotificationListener() {
130,131c127
< 				Layout layout = (Layout) notification.getNotifier();
< 				layoutPropertyChanged(layout);
---
> 				layoutDataChanged(modelElement.getLayoutData());
134,135c130,131
< 		if (modelElement.getLayout() != null) {
< 			addListenerFilter("LayoutPropertiesListener", layoutListener, modelElement.getLayout());
---
> 		if (modelElement.getLayoutData() != null) {
> 			addListenerFilter("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData());
137c133
< 		addListenerFilter("ModelElementLayoutListener", new NotificationListener() {
---
> 		addListenerFilter("Layoutable_LayoutData_Listener", new NotificationListener() {
140,143c136,138
< 				Layout newLayout = (Layout) notification.getNewValue();
< 				removeListenerFilter("LayoutPropertiesListener");
< 				if (newLayout != null) {
< 					addListenerFilter("LayoutPropertiesListener", layoutListener, newLayout);
---
> 				removeListenerFilter("Layoutable_LayoutData_PropertiesListener");
> 				if (modelElement.getLayoutData() != null) {
> 					addListenerFilter("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData());
145c140
< 				layoutChanged(newLayout, true);
---
> 				layoutDataChanged(modelElement.getLayoutData());
147c142
< 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_Layout());
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData());
149c144
< 		final NotificationListener layoutDataListener = new NotificationListener() {
---
> 		final NotificationListener Layoutable_Layout_PropertiesListener = new NotificationListener() {
152c147
< 				layoutDataPropertyChanged();
---
> 				layoutChanged(modelElement.getLayout());
155,156c150,151
< 		if (modelElement.getLayoutData() != null) {
< 			addListenerFilter("LayoutDataPropertiesListener", layoutDataListener, modelElement.getLayoutData());
---
> 		if (modelElement.getLayout() != null) {
> 			addListenerFilter("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout());
158c153
< 		addListenerFilter("ModelElementLayoutDataListener", new NotificationListener() {
---
> 		addListenerFilter("Layoutable_Layout_Listener", new NotificationListener() {
161,164c156,158
< 				LayoutData newLayoutData = (LayoutData) notification.getNewValue();
< 				removeListenerFilter("LayoutDataPropertiesListener");
< 				if (newLayoutData != null) {
< 					addListenerFilter("LayoutDataPropertiesListener", layoutDataListener, newLayoutData);
---
> 				removeListenerFilter("Layoutable_Layout_PropertiesListener");
> 				if (modelElement.getLayout() != null) {
> 					addListenerFilter("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout());
166c160
< 				layoutDataChanged();
---
> 				layoutChanged(modelElement.getLayout());
168c162
< 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData());
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_Layout());
170c164
< 		addListenerFilter("ModelElementPropertiesListener", new NotificationListener() {
---
> 		addListenerFilter("Shape_Outline_Listener", new NotificationListener() {
173,187c167
< 				switch (notification.getFeatureID(Ellipse.class)) {
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.ELLIPSE__OUTLINE: {
< 					boolean value = modelElement.isOutline();
< 					myFigure.setOutline(value);
< 					break;
< 				}
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.ELLIPSE__FILL: {
< 					boolean value = modelElement.isFill();
< 					myFigure.setFill(value);
< 					break;
< 				}
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.ELLIPSE__LINE_WIDTH: {
< 					int value = modelElement.getLineWidth();
< 					myFigure.setLineWidth(value);
< 					break;
---
> 				myFigure.setOutline(modelElement.isOutline());
189,195c169,174
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.ELLIPSE__LINE_KIND: {
< 					LineKind value = modelElement.getLineKind();
< 					myFigure.setLineStyle("LINE_DASH".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DOT
< 							: "LINE_DASHDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT
< 									: "LINE_DASHDOTDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT
< 											: "LINE_CUSTOM".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
< 					break;
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_Outline());
> 
> 		addListenerFilter("Shape_Fill_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setFill(modelElement.isFill());
197,200c176,181
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.ELLIPSE__XOR_FILL: {
< 					boolean value = modelElement.isXorFill();
< 					myFigure.setFillXOR(value);
< 					break;
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_Fill());
> 
> 		addListenerFilter("Shape_LineWidth_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setLineWidth(modelElement.getLineWidth());
202,205c183,188
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.ELLIPSE__XOR_OUTLINE: {
< 					boolean value = modelElement.isXorOutline();
< 					myFigure.setOutlineXOR(value);
< 					break;
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_LineWidth());
> 
> 		addListenerFilter("Shape_LineKind_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
206a190,195
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_LineKind());
> 
> 		addListenerFilter("Shape_XorFill_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setFillXOR(modelElement.isXorFill());
208c197,202
< 				myFigure.repaint();
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_XorFill());
> 
> 		addListenerFilter("Shape_XorOutline_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setOutlineXOR(modelElement.isXorOutline());
210c204
< 		}, modelElement);
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_XorOutline());
470,471c464,470
< 				boolean value = modelElement.isOutline();
< 				myFigure.setOutline(value);
---
> 				layoutDataChanged(modelElement.getLayoutData());
> 			}
> 			{
> 				layoutChanged(modelElement.getLayout());
> 			}
> 			{
> 				myFigure.setOutline(modelElement.isOutline());
474,475c473
< 				boolean value = modelElement.isFill();
< 				myFigure.setFill(value);
---
> 				myFigure.setFill(modelElement.isFill());
478,479c476
< 				int value = modelElement.getLineWidth();
< 				myFigure.setLineWidth(value);
---
> 				myFigure.setLineWidth(modelElement.getLineWidth());
482,485c479
< 				LineKind value = modelElement.getLineKind();
< 				myFigure.setLineStyle("LINE_DASH".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DOT
< 						: "LINE_DASHDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT : "LINE_DASHDOTDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT
< 								: "LINE_CUSTOM".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
---
> 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
488,489c482
< 				boolean value = modelElement.isXorFill();
< 				myFigure.setFillXOR(value);
---
> 				myFigure.setFillXOR(modelElement.isXorFill());
492,493c485
< 				boolean value = modelElement.isXorOutline();
< 				myFigure.setOutlineXOR(value);
---
> 				myFigure.setOutlineXOR(modelElement.isXorOutline());
495d486
< 			layoutChanged(modelElement.getLayout(), false);
