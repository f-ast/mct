160a161,169
> 			public Object caseDiagramViewmap(DiagramViewmap object) {
> 				return createDiagramViewmapAdapter();
> 			}
> 			public Object caseCompartmentViewmap(CompartmentViewmap object) {
> 				return createCompartmentViewmapAdapter();
> 			}
> 			public Object caseLabelViewmap(LabelViewmap object) {
> 				return createLabelViewmapAdapter();
> 			}
534a544,585
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.DiagramViewmap <em>Diagram Viewmap</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.DiagramViewmap
> 	 * @generated
> 	 */
> 	public Adapter createDiagramViewmapAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.CompartmentViewmap <em>Compartment Viewmap</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.CompartmentViewmap
> 	 * @generated
> 	 */
> 	public Adapter createCompartmentViewmapAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.LabelViewmap <em>Label Viewmap</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.LabelViewmap
> 	 * @generated
> 	 */
> 	public Adapter createLabelViewmapAdapter() {
> 		return null;
> 	}
> 
> 	/**
