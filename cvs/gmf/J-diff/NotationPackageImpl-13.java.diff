18a19
> import org.eclipse.emf.ecore.EClassifier;
25d25
< 
27d26
< 
75a75
> import org.eclipse.gmf.runtime.notation.NotationObject;
524a525,531
> 	private EClass notationObjectEClass = null;
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
625a633,639
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	private EDataType uuidEDataType = null;
> 
> 	/**
2095a2110,2127
> 	public EClass getNotationObject() {
> 		return notationObjectEClass;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EAttribute getNotationObject_UUID() {
> 		return (EAttribute)notationObjectEClass.getEStructuralFeatures().get(0);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
2230a2263,2271
> 	public EDataType getUUID() {
> 		return uuidEDataType;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
2467a2509,2511
> 		notationObjectEClass = createEClass(NOTATION_OBJECT);
> 		createEAttribute(notationObjectEClass, NOTATION_OBJECT__UUID);
> 
2485a2530
> 		uuidEDataType = createEDataType(UUID);
2516a2562
> 		fillStyleEClass.getESuperTypes().add(this.getNotationObject());
2517a2564
> 		lineStyleEClass.getESuperTypes().add(this.getNotationObject());
2518a2566
> 		fontStyleEClass.getESuperTypes().add(this.getNotationObject());
2519a2568
> 		titleStyleEClass.getESuperTypes().add(this.getNotationObject());
2520a2570
> 		sortingStyleEClass.getESuperTypes().add(this.getNotationObject());
2521a2572
> 		descriptionStyleEClass.getESuperTypes().add(this.getNotationObject());
2522a2574
> 		sizeEClass.getESuperTypes().add(this.getNotationObject());
2523a2576
> 		locationEClass.getESuperTypes().add(this.getNotationObject());
2526a2580
> 		ratioEClass.getESuperTypes().add(this.getNotationObject());
2527a2582
> 		identityAnchorEClass.getESuperTypes().add(this.getNotationObject());
2528a2584
> 		routingStyleEClass.getESuperTypes().add(this.getNotationObject());
2530a2587,2588
> 		viewEClass.getESuperTypes().add(this.getNotationObject());
> 		relativeBendpointsEClass.getESuperTypes().add(this.getNotationObject());
2532a2591,2592
> 		imageEClass.getESuperTypes().add(this.getNotationObject());
> 		canonicalStyleEClass.getESuperTypes().add(this.getNotationObject());
2541a2602
> 		pageStyleEClass.getESuperTypes().add(this.getNotationObject());
2542a2604
> 		drawerStyleEClass.getESuperTypes().add(this.getNotationObject());
2543a2606
> 		guideStyleEClass.getESuperTypes().add(this.getNotationObject());
2544a2608,2610
> 		guideEClass.getESuperTypes().add(this.getNotationObject());
> 		nodeEntryEClass.getESuperTypes().add(this.getNotationObject());
> 		filteringStyleEClass.getESuperTypes().add(this.getNotationObject());
2549a2616
> 		imageStyleEClass.getESuperTypes().add(this.getNotationObject());
2552a2620
> 		stringToPropertyValueMapEntryEClass.getESuperTypes().add(this.getNotationObject());
2555a2624
> 		namedStyleEClass.getESuperTypes().add(this.getNotationObject());
2556a2626
> 		stringObjectConverterEClass.getESuperTypes().add(this.getNotationObject());
2571a2642
> 		diagramLinkStyleEClass.getESuperTypes().add(this.getNotationObject());
2572a2644
> 		multiDiagramLinkStyleEClass.getESuperTypes().add(this.getNotationObject());
2573a2646
> 		textStyleEClass.getESuperTypes().add(this.getNotationObject());
2574a2648
> 		lineTypeStyleEClass.getESuperTypes().add(this.getNotationObject());
2575a2650
> 		arrowStyleEClass.getESuperTypes().add(this.getNotationObject());
2892a2968,2970
> 		initEClass(notationObjectEClass, NotationObject.class, "NotationObject", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS); //$NON-NLS-1$
> 		initEAttribute(getNotationObject_UUID(), this.getUUID(), "uUID", null, 1, 1, NotationObject.class, IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, IS_ID, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED); //$NON-NLS-1$
> 
2962a3041
> 		initEDataType(uuidEDataType, byte[].class, "UUID", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS); //$NON-NLS-1$
2965a3045,3086
> 
> 		// Create annotations
> 		// http:///org/eclipse/emf/ecore/util/ExtendedMetaData
> 		createExtendedMetaDataAnnotations();
> 	}
> 	
> 	/**
> 	 * Initializes the annotations for <b>http:///org/eclipse/emf/ecore/util/ExtendedMetaData</b>.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	protected void createExtendedMetaDataAnnotations() {
> 		String source = "http:///org/eclipse/emf/ecore/util/ExtendedMetaData"; //$NON-NLS-1$		
> 		addAnnotation
> 		  (getNotationObject_UUID(), 
> 		   source, 
> 		   new String[] {
> 			 "name", "id", //$NON-NLS-1$ //$NON-NLS-2$
> 			 "namespace", "http://www.omg.org/XMI", //$NON-NLS-1$ //$NON-NLS-2$
> 			 "kind", "attribute" //$NON-NLS-1$ //$NON-NLS-2$
> 		   });	
> 	}
> 
> 	void createAnnotations()
> 	{
> 	  for (EClassifier eClassifier : getEClassifiers())
> 	  {
> 	    String name = eClassifier.getName();
>         if (name.equals("Node") || name.indexOf("Style") != -1 || name.equals("Location") || name.equals("Size") ||
>              name.indexOf("Anchor") != -1 || name.indexOf("point") != -1 || name.equals("Bounds") || name.indexOf("Edge") != -1 || name.indexOf("Constraint") != -1)
>         {
>   	      String source = "foo";                                                                                   
>   	      addAnnotation
>   	        (eClassifier, 
>   	         source, 
>   	         new String[] 
>   	         {
>   	         "uuid", "false"
>   	         });  
>         }
> 	  }
