40d39
< 	protected final FigureQualifiedNameSwitch myFigureNameSwitch;
52,53c51,52
< 
< 		public boolean needsMapMode(); // FIXME remove or (?) return MapModeCodeGenStrategy
---
> 		public MapModeCodeGenStrategy getMapMode();
> 		public String getRuntimeToken();
65c64,65
< 		private final boolean myNeedsMapMode;
---
> 		private final MapModeCodeGenStrategy myMapMode;
> 		private final String myRuntimeToken;
68c68
< 			this(pluginId, mainPackageName, true);
---
> 			this(pluginId, mainPackageName, MapModeCodeGenStrategy.DYNAMIC, null);
71,72c71,72
< 		public ConfigImpl(String pluginId, String mainPackageName, boolean useMapMode) {
< 			this(pluginId, mainPackageName, pluginId, "", "PluginActivator", (mainPackageName == null ? "" : mainPackageName + ".")  + "activator", useMapMode);
---
> 		public ConfigImpl(String pluginId, String mainPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken) {
> 			this(pluginId, mainPackageName, pluginId, "", "PluginActivator", (mainPackageName == null ? "" : mainPackageName + ".")  + "activator", mapMode, null);
75c75
< 		public ConfigImpl(String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, boolean needsMapMode){
---
> 		public ConfigImpl(String pluginId, String mainPackageName, String pluginFriendlyName, String pluginProviderName, String pluginActivatorClassName, String pluginActivatorPackageName, MapModeCodeGenStrategy mapMode, String runtimeToken){
82c82,83
< 			myNeedsMapMode = needsMapMode;
---
> 			myMapMode = mapMode;
> 			myRuntimeToken = runtimeToken;
109,110c110,115
< 		public boolean needsMapMode() {
< 			return myNeedsMapMode;
---
> 		public MapModeCodeGenStrategy getMapMode() {
> 			return myMapMode;
> 		}
> 
> 		public String getRuntimeToken() {
> 			return myRuntimeToken;
127,128c132,133
< 	public StandaloneGenerator(Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch) {
< 		this(p, config, fqnSwitch, null);
---
> 	public StandaloneGenerator(Processor p, Config config) {
> 		this(p, config, null);
131,132c136,137
< 	public StandaloneGenerator(Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch, URL[] dynamicTemplates) {
< 		assert p != null && config != null && fqnSwitch != null;
---
> 	public StandaloneGenerator(Processor p, Config config, URL[] dynamicTemplates) {
> 		assert p != null && config != null;
135d139
< 		myFigureNameSwitch = fqnSwitch;
137c141
< 		MapModeCodeGenStrategy strategy;
---
> 		final MapModeCodeGenStrategy strategy;
139c143
< 		if (config.needsMapMode()) {
---
> 		if (config.getMapMode() == MapModeCodeGenStrategy.DYNAMIC) {
143c147
< 			strategy = MapModeCodeGenStrategy.STATIC;
---
> 			strategy = config.getMapMode() == null ? MapModeCodeGenStrategy.STATIC : config.getMapMode();
147c151
< 		myFigureGenerator = new FigureGenerator(fqnSwitch, strategy, accessor, false, dynamicTemplates);
---
> 		myFigureGenerator = new FigureGenerator(config.getRuntimeToken(), strategy, accessor, false, dynamicTemplates);
190c194
< 		doGenerateFile(myAuxiliaryGenerators.getManifestMFEmitter(), new Path("META-INF/MANIFEST.MF"), myArgs, myProcessor.getRequiredBundles(myFigureNameSwitch));
---
> 		doGenerateFile(myAuxiliaryGenerators.getManifestMFEmitter(), new Path("META-INF/MANIFEST.MF"), myArgs, myProcessor.getRequiredBundles(null));
