13a14
> import java.util.HashSet;
19a21
> import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
31a34
> import org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour;
35d37
< import org.eclipse.gmf.internal.common.codegen.ImportUtil;
91a94,95
> 		HashSet<OpenDiagramBehaviour> openDiagramBehaviors = new HashSet<OpenDiagramBehaviour>();
> 		generateBehaviors(myDiagram, openDiagramBehaviors);
108a113
> 			generateBehaviors(next, openDiagramBehaviors);
121a127
> 			generateBehaviors(next, openDiagramBehaviors);
196a203,215
> 	private void generateBehaviors(GenCommonBase element, HashSet<OpenDiagramBehaviour> generatedBehaviors) throws UnexpectedBehaviourException, InterruptedException {
> 		for (OpenDiagramBehaviour behaviour : element.getBehaviour(OpenDiagramBehaviour.class)) {
> 			if (!generatedBehaviors.contains(behaviour)) {
> 				generatedBehaviors.add(behaviour);
> 				generateOpenDiagramEditPolicy(behaviour);
> 			}
> 		}
> 	}
> 
> 	private void generateOpenDiagramEditPolicy(OpenDiagramBehaviour behaviour) throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(myEmitters.getOpenDiagramEditPolicyEmitter(), behaviour.getEditPolicyQualifiedClassName(), behaviour);
> 	}
> 
