15d14
< import java.util.Iterator;
22d20
< import org.eclipse.emf.common.util.EList;
32d29
< import org.eclipse.emf.ecore.util.EObjectValidator;
57,60c54
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.emf.ecore.EValidator#validate(org.eclipse.emf.ecore.EDataType, java.lang.Object, org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
< 	 */
< 	public boolean validate(EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context) {
---
> 	public boolean validate(EDataType eDataType, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
64,67c58
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.emf.ecore.EValidator#validate(org.eclipse.emf.ecore.EObject, org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
< 	 */
< 	public boolean validate(EObject eObject, DiagnosticChain diagnostics, Map context) {
---
> 	public boolean validate(EObject eObject, DiagnosticChain diagnostics, Map<Object, Object> context) {
71,74c62
< 	/**
< 	 * @see EObjectValidator#validate(org.eclipse.emf.ecore.EClass, org.eclipse.emf.ecore.EObject, org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
< 	 */
< 	public boolean validate(EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context) {
---
> 	public boolean validate(EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map<Object, Object> context) {
86c74
< 	protected boolean validateOCL(EObject eObject, final DiagnosticChain diagnostics, Map context) {		
---
> 	protected boolean validateOCL(EObject eObject, final DiagnosticChain diagnostics, Map<Object, Object> context) {		
110c98
< 		protected boolean handleEAnnotation(EAnnotation annotation, DiagnosticChain diagnostics, Map context) {
---
> 		protected boolean handleEAnnotation(EAnnotation annotation, DiagnosticChain diagnostics, Map<Object, Object> context) {
114c102
< 		protected boolean handleEAnnotation(EAnnotation annotation, EObject contextInstance, DiagnosticChain diagnostics, Map context) {
---
> 		protected boolean handleEAnnotation(EAnnotation annotation, EObject contextInstance, DiagnosticChain diagnostics, Map<Object, Object> context) {
120,121c108
< 			for(Iterator it = annotation.getDetails().iterator(); it.hasNext();) {
< 				Map.Entry nextDetail = (Map.Entry)it.next();
---
> 			for(Map.Entry<String,String> nextDetail : annotation.getDetails()) {
188,189c175,176
< 		private static String readBodyDetail(Map.Entry bodyEntry, DiagnosticChain diagnostics) {
< 			String body = (String)bodyEntry.getValue();
---
> 		private static String readBodyDetail(Map.Entry<String, String> bodyEntry, DiagnosticChain diagnostics) {
> 			String body = bodyEntry.getValue();
200c187
< 		protected boolean handleMetaModel(EClass eClass, EObject modelElement, DiagnosticChain diagnostics, Map context) {
---
> 		protected boolean handleMetaModel(EClass eClass, EObject modelElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
203,204c190
< 			for (Iterator it = eClass.getEAnnotations().iterator(); it.hasNext();) {
< 				EAnnotation nextAnnocation = (EAnnotation) it.next();
---
> 			for (EAnnotation nextAnnocation : eClass.getEAnnotations()) {
209,213c195,197
< 			
< 			for (Iterator it = eClass.getEOperations().iterator(); it.hasNext();) {
< 				EOperation nextOperation = (EOperation) it.next();
< 				for(Iterator annotIt = nextOperation.getEAnnotations().iterator(); annotIt.hasNext();) {
< 					EAnnotation annotation = (EAnnotation)annotIt.next();
---
> 			// FIXME do not duplicate same &= handleEAnnotation three times, 
> 			for (EOperation nextOperation : eClass.getEOperations()) {
> 				for(EAnnotation annotation : nextOperation.getEAnnotations()) {
220,223c204,205
< 			for (Iterator it = eClass.getEStructuralFeatures().iterator(); it.hasNext();) {
< 				EStructuralFeature nextFeature = (EStructuralFeature) it.next();
< 				for(Iterator annotIt = nextFeature.getEAnnotations().iterator(); annotIt.hasNext();) {
< 					EAnnotation annotation = (EAnnotation)annotIt.next();
---
> 			for (EStructuralFeature nextFeature : eClass.getEStructuralFeatures()) {
> 				for(EAnnotation annotation : nextFeature.getEAnnotations()) {
230,232c212
< 			EList superTypes = eClass.getESuperTypes();
< 			for (Iterator it = superTypes.iterator(); it.hasNext();) {
< 				EClass nextSuperType = (EClass) it.next();
---
> 			for (EClass nextSuperType : eClass.getESuperTypes()) {
266c246
< 		protected boolean handleConstrainedElement(ConstraintAdapter constraint, EObject constrainedElement, DiagnosticChain diagnostics, Map context) {
---
> 		protected boolean handleConstrainedElement(ConstraintAdapter constraint, EObject constrainedElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
