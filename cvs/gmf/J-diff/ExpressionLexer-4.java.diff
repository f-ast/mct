13,14c13
< public class ExpressionLexer extends LpgLexStream implements ExpressionParsersym, ExpressionLexersym, RuleAction
< {
---
> public class ExpressionLexer extends LpgLexStream implements ExpressionParsersym, ExpressionLexersym, RuleAction {
17c16
<     private LexParser lexParser = new LexParser(this, prs, this);
---
>     private final LexParser lexParser = new LexParser(this, prs, this);
27,28c26
<     public ExpressionLexer(String filename, int tab) throws java.io.IOException 
<     {
---
>     public ExpressionLexer(String filename, int tab) throws java.io.IOException {
32,33c30
<     public ExpressionLexer(char[] input_chars, String filename, int tab)
<     {
---
>     public ExpressionLexer(char[] input_chars, String filename, int tab) {
37,38c34
<     public ExpressionLexer(char[] input_chars, String filename)
<     {
---
>     public ExpressionLexer(char[] input_chars, String filename) {
47,48c43
<     public void lexer(PrsStream prsStream)
<     {
---
>     public void lexer(PrsStream prsStream) {
52,54c47,48
<     public void lexer(Monitor monitor, PrsStream prsStream)
<     {
<         if (getInputChars() == null)
---
>     public void lexer(Monitor monitor, PrsStream prsStream) {
>         if (getInputChars() == null) {
55a50
>         }
78,79c73
<     ExpressionKWLexer kwLexer;
<     boolean printTokens;
---
>     private ExpressionKWLexer kwLexer;
84,85c78
<     public ExpressionLexer(String filename) throws java.io.IOException
<     {
---
>     public ExpressionLexer(String filename) throws java.io.IOException {
90,91c83
<     public void initialize(char [] content, String filename)
<     {
---
>     public void initialize(char [] content, String filename) {
93c85
<         if (this.kwLexer == null)
---
>         if (this.kwLexer == null) {
95c87,89
<         else this.kwLexer.setInputChars(getInputChars());
---
>         } else {
>         	this.kwLexer.setInputChars(getInputChars());
>         }
98,99c92
<     final void makeToken(int kind)
<     {
---
>     final void makeToken(int kind) {
103d95
<         if (printTokens) printValue(startOffset, endOffset);
106,107c98
<     final void makeComment(int kind)
<     {
---
>     final void makeComment(int kind) {
113,115c104
<     final void skipToken()
<     {
<         if (printTokens) printValue(getLeftSpan(), getRightSpan());
---
>     final void skipToken() {
118,119c107
<     final void checkForKeyWord()
<     {
---
>     final void checkForKeyWord() {
124,130d111
<         if (printTokens) printValue(startOffset, endOffset);
<     }
<     
<     final void printValue(int startOffset, int endOffset)
<     {
<         String s = new String(getInputChars(), startOffset, endOffset - startOffset + 1);
<         System.out.print(s);
136,137c117
<     public final static int tokenKind[] =
<     {
---
>     public final static int tokenKind[] = {
270,271c250
<     public final int getKind(int i)  // Classify character at ith location
<     {
---
>     public final int getKind(int i) { // Classify character at ith location
280,283c259,260
<     public void ruleAction( int ruleNumber)
<     {
<         switch(ruleNumber)
<         {
---
>     public void ruleAction( int ruleNumber) {
>         switch(ruleNumber) {
