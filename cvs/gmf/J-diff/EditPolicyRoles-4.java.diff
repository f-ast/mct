2c2
<  * Copyright (c) 2002, 2004 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2005 IBM Corporation and others.
15c15
<  * A list of keys defining the presentation editpolicy roles. An editpolicy is
---
>  * A list of keys defining the GMF diagram editpolicy roles. An editpolicy is
23a24
> 
25,26c26,27
< 	 * The key used to install a <i>decoration</i> EditPolicy, one that
< 	 * handles creation and removal of decorations.
---
> 	 * The key used to install a <i>decoration</i> EditPolicy, one that handles
> 	 * creation and removal of decorations.
36,37c37,38
< 	 * The key used to install a <i>connector handles</i> EditPolicy, one
< 	 * that adds or changes the behavior of connector handles.
---
> 	 * The key used to install a <i>connection handles</i> EditPolicy, one that
> 	 * adds or changes the behavior of connection handles.
39c40
< 	public static final String CONNECTOR_HANDLES_ROLE = "ConnectorHandlesPolicy"; //$NON-NLS-1$
---
> 	public static final String CONNECTION_HANDLES_ROLE = "ConnectionHandlesPolicy"; //$NON-NLS-1$
48,53c49,54
< 	 * The key used to install an <i>open</i> EditPolicy. The OPEN_ROLE
< 	 * policy is typically installed on edit part whose underlying data can
< 	 * only be examined/modified by opening another editor window. For example,
< 	 * if an edit part represented another diagram, then an "open" request on
< 	 * that edit part should result in the corresponding diagram being opened
< 	 * in another editor window.
---
> 	 * The key used to install an <i>open</i> EditPolicy. The OPEN_ROLE policy
> 	 * is typically installed on edit part whose underlying data can only be
> 	 * examined/modified by opening another editor window. For example, if an
> 	 * edit part represented another diagram, then an "open" request on that
> 	 * edit part should result in the corresponding diagram being opened in
> 	 * another editor window.
58c59
< 	 * The key used to install a <i>show/hide connector labels</i> EditPolicy
---
> 	 * The key used to install a <i>show/hide connection labels</i> EditPolicy
60c61
< 	public static final String CONNECTOR_LABELS = "ConnectorLabels"; //$NON-NLS-1$
---
> 	public static final String CONNECTION_LABELS_ROLE = "ConnectionLabelsPolicy"; //$NON-NLS-1$
73c74
< 	 * The key used to install a <i>refresh connectors</i> EditPolicy.
---
> 	 * The key used to install a <i>refresh connections</i> EditPolicy.
75c76
< 	public static final String REFRESH_CONNECTORS_ROLE = "RefreshConnectorsPolicy"; //$NON-NLS-1$
---
> 	public static final String REFRESH_CONNECTIONS_ROLE = "RefreshConnectionsPolicy"; //$NON-NLS-1$
84,86c85,87
< 	 * The key used to install a <i>sort filter</i> EditPolicy. The sort filter role
< 	 * creates and opens the sort filter dialog if it is given content by its
< 	 * children via the sort filter content role.
---
> 	 * The key used to install a <i>sort filter</i> EditPolicy. The sort filter
> 	 * role creates and opens the sort filter dialog if it is given content by
> 	 * its children via the sort filter content role.
91,92c92,93
< 	 * The key used to install a <i>sort filter</i> content EditPolicy. The sort
< 	 * filter content role understands how to provide content for the sort
---
> 	 * The key used to install a <i>sort filter</i> content EditPolicy. The
> 	 * sort filter content role understands how to provide content for the sort
103c104
< 		 * The key used to install an <i> actionbar</i> EditPolicy. The actionbar
---
> 	 * The key used to install a <i>popup bar</i> EditPolicy. The popup bar
106,107c107
< 	public static final String ACTIONBAR_ROLE = "ActionBarEditPolicy"; //$NON-NLS-1$
< 	
---
> 	public static final String POPUPBAR_ROLE = "PopupBarEditPolicy"; //$NON-NLS-1$
117,118c117,119
< 	 * The key used to install a <i>ShowAsAlternateViewPolicy</i> EditPolicy which understands
< 	 * notational requests such as: <code>REQ_SHOW_AS_ALTERNATE_VIEW</code>
---
> 	 * The key used to install a <i>ShowAsAlternateViewPolicy</i> EditPolicy
> 	 * which understands notational requests such as:
> 	 * <code>REQ_SHOW_AS_ALTERNATE_VIEW</code>
124,125c125,126
< 	* notational requests such as: <code>REQ_CREATE</code> where the request is
< 	* of type <code>CreateViewRequest</code>
---
> 	 * notational requests such as: <code>REQ_CREATE</code> where the request
> 	 * is of type <code>CreateViewRequest</code>
131,132c132,133
< 	 * understands how to handle snap feedback when shapes are moved and snapping
< 	 * is enabled
---
> 	 * understands how to handle snap feedback when shapes are moved and
> 	 * snapping is enabled
140a142,163
> 	
> 	/**
> 	 * @deprecated Renamed to CONNECTION_HANDLES_ROLE
> 	 */
> 	public static final String CONNECTOR_HANDLES_ROLE = "ConnectorHandlesPolicy"; //$NON-NLS-1$
> 	
> 	/**
> 	 * @deprecated Renamed to CONNECTION_LABELS
> 	 */
> 	public static final String CONNECTOR_LABELS = "ConnectorLabels"; //$NON-NLS-1$
> 	
> 	/**
> 	 * @deprecated Renamed to REFRESH_CONNECTIONS_ROLE
> 	 */
> 	public static final String REFRESH_CONNECTORS_ROLE = "RefreshConnectorsPolicy"; //$NON-NLS-1$
> 	
> 	/**
> 	 * @deprecated Renamed to POPUPBAR_ROLE
> 	 */
> 	public static final String ACTIONBAR_ROLE = "ActionBarEditPolicy"; //$NON-NLS-1$
> 
> 
