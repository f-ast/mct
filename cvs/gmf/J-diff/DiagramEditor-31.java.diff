2c2
<  * Copyright (c) 2002, 2005 - 2006 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
75a76
> import org.eclipse.gmf.runtime.common.ui.util.IPartSelector;
82a84,85
> import org.eclipse.gmf.runtime.diagram.ui.editparts.TreeDiagramEditPart;
> import org.eclipse.gmf.runtime.diagram.ui.editparts.TreeEditPart;
91,92d93
< import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.TreeDiagramEditPart;
< import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.TreeEditPart;
129d129
< import org.eclipse.ui.IWorkbenchPage;
221c221
<             getViewer().setEditPartFactory(new EditPartFactory() {
---
>             getViewer().setEditPartFactory(getOutlineViewEditPartFactory());
223,230d222
<                 public EditPart createEditPart(EditPart context, Object model) {
<                     if (model instanceof Diagram) {
<                         return new TreeDiagramEditPart(model);
<                     } else {
<                         return new TreeEditPart(model);
<                     }
<                 }
<             });
254a247
>             showOutlineAction.setToolTipText(DiagramUIMessages.OutlineView_OutlineTipText);
263a257
>             showOverviewAction.setToolTipText(DiagramUIMessages.OutlineView_OverviewTipText);
748c742,747
<             action = new ToggleRouterAction((IWorkbenchPage) ((IWorkbenchPart) this).getSite().getPage());
---
>             action = new ToggleRouterAction(((IWorkbenchPart) this).getSite().getPage());
>             ((ToggleRouterAction) action).setPartSelector(new IPartSelector() {
>             	public boolean selects(IWorkbenchPart part) {
>             		return part == DiagramEditor.this;
>             	}
>             });
1012a1012
>             getDiagramGraphicalViewer().getContents().deactivate();
1487a1488,1524
>     
>     /**
>      * Returns false if the editor is read only and returns true if the editor
>      * is writable.
>      * 
>      * By default, edit parts have their edit mode enabled and this method
>      * returns true.
>      * 
>      * Subclasses may override and disable the edit mode on parts.
>      * 
>      * @see org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart.
>      * 
>      * @return false if the editor is read only and returns true if the editor
>      * is writable.
>      */
>     public boolean isWritable() {
>         return (getDiagramEditPart() != null && getDiagramEditPart().isEditModeEnabled());
>     }
>     
>     /**
>      * Creates edit part factory that will be creating tree edit parts in
>      * the tree viewer
>      * @return <code>EditPartFactory</code> factory for the tree viewer
>      */
>     protected EditPartFactory getOutlineViewEditPartFactory() {
> 		return new EditPartFactory() {
> 
> 			public EditPart createEditPart(EditPart context, Object model) {
> 				if (model instanceof Diagram) {
> 					return new TreeDiagramEditPart(model);
> 				} else {
> 					return new TreeEditPart(model);
> 				}
> 			}
> 		};
> 	}
> 
