82a83,84
> import org.eclipse.gmf.runtime.notation.Node;
> import org.eclipse.gmf.runtime.notation.NotationFactory;
109c111
< 	private String elementGuid;
---
> 	protected String elementGuid;
113a116,120
> 	// temporary object used to make getModel returns a view 
> 	// this should be removed after the assumption that getModel
> 	// will return a view is removed
> 	private static Node dummyNode = null;
> 	
117c124
< 	 * @param view
---
> 	 * @param model
120,121c127,128
< 	public GraphicalEditPart(View view) {
< 		setModel(view);
---
> 	public GraphicalEditPart(EObject model) {
> 		setModel(model);
132,133c139,145
< 		EObject semanticProxy = ((View) getModel()).getElement();
< 		EObject semanticElement = ProxyUtil.resolve(MEditingDomainGetter.getMEditingDomain((View)getModel()), semanticProxy);
---
> 		EObject semanticProxy = null;
> 		if (hasNotationView())
> 			semanticProxy = ((View) getModel()).getElement();
> 		else
> 			semanticProxy = (EObject)basicGetModel();
> 		
> 		EObject semanticElement = ProxyUtil.resolve(MEditingDomainGetter.getMEditingDomain((EObject)getModel()), semanticProxy);
185,187d196
< 		if (listenerFilters == null)
< 			listenerFilters = new HashMap();
< 		DiagramEventBroker.getInstance().addNotificationListener(element,feature,listener);
249a259,266
> 	/**
> 	 * Access the model member variable
> 	 * @return
> 	 */
> 	final protected Object basicGetModel(){
> 		return super.getModel();
> 	}
> 
252,253c269
< 		
< 		Object model = getModel();
---
> 		Object model = basicGetModel();
260,261c276,279
< 		if ( View.class.isAssignableFrom(key) && model instanceof View) {
< 			return model;
---
> 		if ( View.class.isAssignableFrom(key)) {
> 			Object _model = getModel();
> 			if (_model instanceof View)
> 				return _model;
265d282
< 			model instanceof View &&
268c285,294
< 			EObject semanticObject = ViewUtil.resolveSemanticElement((View)model);
---
> 			EObject semanticObject = null;
> 			if (hasNotationView()){
> 				semanticObject = ViewUtil.resolveSemanticElement((View)model);
> 			}
> 			else{
> 				EObject element = (EObject)model;
> 				if (element.eIsProxy()){
> 					semanticObject = ProxyUtil.resolve(MEditingDomainGetter.getMEditingDomain(element), element);
> 				}
> 			}
340c366
< 			cmd =  (Command) MEditingDomainGetter.getMEditingDomain((View)getModel()).runAsRead(new MRunnable() {
---
> 			cmd =  (Command) MEditingDomainGetter.getMEditingDomain((EObject)getModel()).runAsRead(new MRunnable() {
455c481
< 			if (parent instanceof IPrimaryEditPart)
---
> 			if (parent instanceof IPrimaryEditPart && parent.getModel() instanceof View)
503d528
< 			//return ((View)model).getVisibleChildren();
525a551
> 		if (hasNotationView())
526a553,554
> 		else
> 			return null;
536c564
< 		return (EObject) MEditingDomainGetter.getMEditingDomain((View)getModel()).runAsRead(new MRunnable() {
---
> 		return (EObject) MEditingDomainGetter.getMEditingDomain((EObject)getModel()).runAsRead(new MRunnable() {
538a567,568
> 				Object model = getModel();
> 				if (model instanceof View)
539a570,577
> 				else if (model instanceof EObject){
> 					EObject element = (EObject)model;
> 					if (element.eIsProxy())
> 				    	return ProxyUtil.resolve(element); 
> 					else
> 						return element;
> 				}
> 				return null;
624c662
< 		MEditingDomainGetter.getMEditingDomain((View)getModel()).runAsRead(new MRunnable() {
---
> 		MEditingDomainGetter.getMEditingDomain((EObject)getModel()).runAsRead(new MRunnable() {
678c716,723
< 		setVisibility(((View)getModel()).isVisible());
---
> 		Object model = null;
> 		EditPart ep = this;
> 		while (!(model instanceof View) && ep!=null){
> 			model = ep.getModel();
> 			ep = ep.getParent();
> 		}
> 		if (model instanceof View)
> 			setVisibility(((View)model).isVisible());
759a805
> 		if (hasNotationView())
769a816
> 		if (hasNotationView())
790a838
> 		if (hasNotationView())
870a919
> 					hasNotationView()&&
875a925
> 			if (hasNotationView())
977a1028
> 		if (hasNotationView()) {
978a1030,1032
> 		} else {
> 			getViewer().getEditPartRegistry().put(basicGetModel(), this);
> 		}
982c1036,1040
< 		EObject ref = ((View) getModel()).getElement();
---
> 		EObject ref = null;
> 		if (hasNotationView())
> 			ref = getNotationView().getElement();
> 		else
> 			ref = (EObject) basicGetModel();
987d1044
< 
991a1049
> 
1229a1288,1312
> 	/**
> 	 * indicates if this edit part's model is a view or not 
> 	 * @return <code>true</code> or <code>false</code>
> 	 */
> 	public boolean hasNotationView(){
> 		return true;
> 	}
> 	
> 	/* (non-Javadoc)
> 	 * @see org.eclipse.gef.EditPart#getModel()
> 	 */
> 	public Object getModel() {
> 		if (hasNotationView()){
> 			return super.getModel();
> 		} else {
> 			Object _model = basicGetModel();
> 			// this is just temporary, so we do not break the assumption that the model
> 			// is always a view
> 			if (dummyNode == null){
> 				dummyNode = NotationFactory.eINSTANCE.createNode();
> 			}
> 			dummyNode.setElement((EObject)_model);
> 			return dummyNode;
> 		}
> 	}
