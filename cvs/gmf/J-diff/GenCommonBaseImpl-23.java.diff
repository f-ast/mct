8a9
> import java.util.ArrayList;
9a11,12
> import java.util.Iterator;
> import java.util.List;
21c24
< import org.eclipse.emf.ecore.util.EObjectContainmentEList;
---
> import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
24c27
< import org.eclipse.gmf.codegen.gmfgen.CustomBehaviour;
---
> import org.eclipse.gmf.codegen.gmfgen.Behaviour;
28a32
> import org.eclipse.gmf.codegen.gmfgen.SharedBehaviour;
46c50
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenCommonBaseImpl#getCustomBehaviour <em>Custom Behaviour</em>}</li>
---
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenCommonBaseImpl#getBehaviour <em>Behaviour</em>}</li>
164c168
< 	 * The cached value of the '{@link #getCustomBehaviour() <em>Custom Behaviour</em>}' containment reference list.
---
> 	 * The cached value of the '{@link #getBehaviour() <em>Behaviour</em>}' containment reference list.
167c171
< 	 * @see #getCustomBehaviour()
---
> 	 * @see #getBehaviour()
171c175
< 	protected EList customBehaviour = null;
---
> 	protected EList behaviour = null;
416,418c420,422
< 	public EList getCustomBehaviour() {
< 		if (customBehaviour == null) {
< 			customBehaviour = new EObjectContainmentEList(CustomBehaviour.class, this, GMFGenPackage.GEN_COMMON_BASE__CUSTOM_BEHAVIOUR);
---
> 	public EList getBehaviour() {
> 		if (behaviour == null) {
> 			behaviour = new EObjectContainmentWithInverseEList(Behaviour.class, this, GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR, GMFGenPackage.BEHAVIOUR__SUBJECT);
420c424
< 		return customBehaviour;
---
> 		return behaviour;
490a495,496
> 			case GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR:
> 				return ((InternalEList)getBehaviour()).basicAdd(otherEnd, msgs);
506,507c512,513
< 			case GMFGenPackage.GEN_COMMON_BASE__CUSTOM_BEHAVIOUR:
< 				return ((InternalEList)getCustomBehaviour()).basicRemove(otherEnd, msgs);
---
> 			case GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR:
> 				return ((InternalEList)getBehaviour()).basicRemove(otherEnd, msgs);
534,535c540,541
< 			case GMFGenPackage.GEN_COMMON_BASE__CUSTOM_BEHAVIOUR:
< 				return getCustomBehaviour();
---
> 			case GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR:
> 				return getBehaviour();
568,570c574,576
< 			case GMFGenPackage.GEN_COMMON_BASE__CUSTOM_BEHAVIOUR:
< 				getCustomBehaviour().clear();
< 				getCustomBehaviour().addAll((Collection)newValue);
---
> 			case GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR:
> 				getBehaviour().clear();
> 				getBehaviour().addAll((Collection)newValue);
604,605c610,611
< 			case GMFGenPackage.GEN_COMMON_BASE__CUSTOM_BEHAVIOUR:
< 				getCustomBehaviour().clear();
---
> 			case GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR:
> 				getBehaviour().clear();
632,633c638,639
< 			case GMFGenPackage.GEN_COMMON_BASE__CUSTOM_BEHAVIOUR:
< 				return customBehaviour != null && !customBehaviour.isEmpty();
---
> 			case GMFGenPackage.GEN_COMMON_BASE__BEHAVIOUR:
> 				return behaviour != null && !behaviour.isEmpty();
697a704,717
> 	@SuppressWarnings("unchecked")
> 	public <T extends Behaviour> List<T> getBehaviour(Class<T> behaviourClass) {
> 		ArrayList<T> rv = new ArrayList<T>(getBehaviour().size());
> 		for (Iterator it = getBehaviour().iterator(); it.hasNext(); ) {
> 			Object next = it.next();
> 			if (next instanceof SharedBehaviour) {
> 				next = ((SharedBehaviour) next).getDelegate();
> 			}
> 			if (behaviourClass.isInstance(next)) {
> 				rv.add((T) next);
> 			}
> 		}
> 		return rv;
> 	}
