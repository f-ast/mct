21a22
> import org.eclipse.emf.common.util.URI;
22a24,25
> import org.eclipse.emf.ecore.resource.Resource.Factory;
> import org.eclipse.emf.ecore.resource.Resource.Factory.Registry;
32a36
> import org.eclipse.gmf.runtime.emf.core.internal.util.EMFCoreConstants;
97c101
< 		ResourceSet rset = domain.getResourceSet();
---
> 		final ResourceSet rset = domain.getResourceSet();
105a110,143
> 			// Set up a delegating resource factory registry that ensures that
> 			//  the pathmap URI is normalized before finding a resource factory.
> 			final Registry existingRegistry = rset.getResourceFactoryRegistry();
> 			
> 			rset.setResourceFactoryRegistry(new Registry() {
> 				private Registry delegateRegistry = existingRegistry;
> 
> 				public Map<String, Object> getContentTypeToFactoryMap() {
> 					return delegateRegistry.getContentTypeToFactoryMap();
> 				}
> 
> 				public Map<String, Object> getExtensionToFactoryMap() {
> 					return delegateRegistry.getExtensionToFactoryMap();
> 				}
> 
> 				public Factory getFactory(URI uri, String contentType) {
> 					if (uri != null && uri.scheme().equals(EMFCoreConstants.PATH_MAP_SCHEME)) {
> 						uri = rset.getURIConverter().normalize(uri);
> 					}
> 					return delegateRegistry.getFactory(uri, contentType);
> 				}
> 
> 				public Factory getFactory(URI uri) {
> 					if (uri != null && uri.scheme().equals(EMFCoreConstants.PATH_MAP_SCHEME)) {
> 						uri = rset.getURIConverter().normalize(uri);
> 					}
> 					return delegateRegistry.getFactory(uri);
> 				}
> 
> 				public Map<String, Object> getProtocolToFactoryMap() {
> 					return delegateRegistry.getProtocolToFactoryMap();
> 				}
> 			});
> 			
