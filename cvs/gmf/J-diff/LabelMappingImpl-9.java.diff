14a15
> import org.eclipse.emf.ecore.util.EcoreUtil;
158a160,190
> 	public NotificationChain basicSetMapEntry(MappingEntry newMapEntry, NotificationChain msgs) {
> 		msgs = eBasicSetContainer((InternalEObject)newMapEntry, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setMapEntry(MappingEntry newMapEntry) {
> 		if (newMapEntry != eInternalContainer() || (eContainerFeatureID != GMFMapPackage.LABEL_MAPPING__MAP_ENTRY && newMapEntry != null)) {
> 			if (EcoreUtil.isAncestor(this, newMapEntry))
> 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
> 			NotificationChain msgs = null;
> 			if (eInternalContainer() != null)
> 				msgs = eBasicRemoveFromContainer(msgs);
> 			if (newMapEntry != null)
> 				msgs = ((InternalEObject)newMapEntry).eInverseAdd(this, GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS, MappingEntry.class, msgs);
> 			msgs = basicSetMapEntry(newMapEntry, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, newMapEntry, newMapEntry));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
165c197
< 				return eBasicSetContainer(otherEnd, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
---
> 				return basicSetMapEntry((MappingEntry)otherEnd, msgs);
179c211
< 				return eBasicSetContainer(null, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
---
> 				return basicSetMapEntry(null, msgs);
230a263,265
> 			case GMFMapPackage.LABEL_MAPPING__MAP_ENTRY:
> 				setMapEntry((MappingEntry)newValue);
> 				return;
248a284,286
> 			case GMFMapPackage.LABEL_MAPPING__MAP_ENTRY:
> 				setMapEntry((MappingEntry)null);
> 				return;
