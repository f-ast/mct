18a19,20
> import org.eclipse.emf.common.util.EList;
> import org.eclipse.emf.common.util.URI;
21c23
< 
---
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
23d24
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
26,27d26
< import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;
< import org.eclipse.gmf.runtime.emf.core.util.ResourceUtil;
43,47c42
< 	static public Diagram load(final IFile file) throws EmfNotationException {
< 		return load(file, MEditingDomain.INSTANCE);
< 	}
< 	
< 	static public Diagram load(final IFile file, MEditingDomain editingDomain) throws EmfNotationException {
---
> 	static public Diagram load(final IFile file, TransactionalEditingDomain editingDomain) throws EmfNotationException {
73,74c68,74
< 		EObject element = ResourceUtil.getFirstRoot(notationModel);
< 		return (element instanceof Diagram) ? (Diagram)element : null;
---
> 		EList contents = notationModel.getContents();
> 		if (!contents.isEmpty()) {
> 			Object element = contents.get(0);
> 			return (element instanceof Diagram) ? (Diagram) element
> 				: null;
> 		}
> 		return null;
83c83,85
<             MEditingDomainGetter.getMEditingDomain(notationModel).saveResourceAs(notationModel, fileName);
---
> //            URI uri = URI.createPlatformResourceURI(fFile.getFullPath().toString(), true);
> 			notationModel.setURI(URI.createURI((fileName)));
> 			notationModel.save(null);
85c87
<         	MEditingDomainGetter.getMEditingDomain(notationModel).saveResource(notationModel);
---
> 			notationModel.save(null);
