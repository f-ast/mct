130a131
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNodeDescriptorClassName <em>Node Descriptor Class Name</em>}</li>
1418a1420,1439
> 	 * The default value of the '{@link #getNodeDescriptorClassName() <em>Node Descriptor Class Name</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getNodeDescriptorClassName()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final String NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;
> 
> 	/**
> 	 * The cached value of the '{@link #getNodeDescriptorClassName() <em>Node Descriptor Class Name</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getNodeDescriptorClassName()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected String nodeDescriptorClassName = NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT;
> 
> 	/**
2530a2552,2580
> 	public String getNodeDescriptorClassNameGen() {
> 		return nodeDescriptorClassName;
> 	}
> 	
> 	public String getNodeDescriptorClassName() {
> 		String value = getNodeDescriptorClassNameGen();
> 		if(isEmpty(value)) {
> 			value = getDomainPackageCapName() + "NodeDescriptor"; //$NON-NLS-1$						
> 		}
> 		return value;		
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setNodeDescriptorClassName(String newNodeDescriptorClassName) {
> 		String oldNodeDescriptorClassName = nodeDescriptorClassName;
> 		nodeDescriptorClassName = newNodeDescriptorClassName;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME, oldNodeDescriptorClassName, nodeDescriptorClassName));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
3934a3985,3986
> 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
> 				return getNodeDescriptorClassName();
4162a4215,4217
> 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
> 				setNodeDescriptorClassName((String)newValue);
> 				return;
4398a4454,4456
> 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
> 				setNodeDescriptorClassName(NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT);
> 				return;
4569a4628,4629
> 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
> 				return NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT == null ? nodeDescriptorClassName != null : !NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT.equals(nodeDescriptorClassName);
4706a4767
> 				case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.UPDATER__NODE_DESCRIPTOR_CLASS_NAME;
4825a4887
> 				case GMFGenPackage.UPDATER__NODE_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME;
5122a5185,5193
> 	 * @generated NOT
> 	 */
> 	public String getNodeDescriptorQualifiedClassName() {
> 		return getEditorPackageName() + '.' + getNodeDescriptorClassName();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
5257a5329,5330
> 		result.append(", nodeDescriptorClassName: ");
> 		result.append(nodeDescriptorClassName);
