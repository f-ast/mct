14,17d13
< import org.eclipse.draw2d.IFigure;
< import org.eclipse.draw2d.Locator;
< import org.eclipse.draw2d.PositionConstants;
< import org.eclipse.draw2d.geometry.Rectangle;
20,27c16
<  * Controls the location of border items around another figure.
<  * 
<  * An <code>IBorderItemLocator</code> is used in conjunction with
<  * {@link org.eclipse.gmf.runtime.diagram.ui.editpolicies.BorderItemSelectionEditPolicy}
<  * for feedback when moving border items and with
<  * {@link org.eclipse.gmf.runtime.diagram.ui.editparts.AbstractBorderItemEditPart}
<  * when refreshing the bounds of the border item figure.
<  * 
---
>  * @deprecated use org.eclipse.gmf.runtime.draw2d.ui.figures.IBorderItemLocator instead
31c20
< 	extends Locator {
---
> 	extends org.eclipse.gmf.runtime.draw2d.ui.figures.IBorderItemLocator {
33,70c22,23
< 	/**
< 	 * Sets the constraint for the location of this border item.
< 	 * 
< 	 * @param constraint
< 	 *            the position and optionally size
< 	 */
< 	public void setConstraint(Rectangle constraint);
< 
< 	/**
< 	 * Returns a suitable location for the border item given a proposed
< 	 * location. By implementing this method, the feedback shown when the user
< 	 * moves a border item can reflect where the locator will actually place the
< 	 * border item.
< 	 * <p>
< 	 * For example, if the border item is restricted to being on the border of
< 	 * its parent shape, when the user attempts to move the border item outside
< 	 * the border of the parent shape (the proposed location), the feedback will
< 	 * always show the border item on the border. In this case, this method
< 	 * would return a location on the border close to the proposed location.
< 	 * </p>
< 	 * 
< 	 * @param proposedLocation
< 	 *            a proposed location and optionally size
< 	 * @param borderItem
< 	 *            the border item in question
< 	 * @return a rectangle containing the valid location
< 	 */
< 	public Rectangle getValidLocation(Rectangle proposedLocation,
< 			IFigure borderItem);
< 	
< 	/**
< 	 * Returns the side of the parent figure on which the border item is
< 	 * currently on.
< 	 * 
< 	 * @return the side on which this border item appears as defined in
< 	 *         {@link PositionConstants}
< 	 */
< 	public int getCurrentSideOfParent();
---
>     // deprectaed use 
>     // org.eclipse.gmf.runtime.draw2d.ui.figures.IBorderItemLocator instead
