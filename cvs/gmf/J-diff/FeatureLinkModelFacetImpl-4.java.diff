8a9,12
> import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
> 
> import org.eclipse.emf.common.notify.Notification;
> 
11a16,20
> import org.eclipse.emf.ecore.InternalEObject;
> 
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> import org.eclipse.emf.ecore.impl.EObjectImpl;
> 
19a29,32
>  * The following features are implemented:
>  * <ul>
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.FeatureLinkModelFacetImpl#getMetaFeature <em>Meta Feature</em>}</li>
>  * </ul>
24c37,47
< public class FeatureLinkModelFacetImpl extends FeatureModelFacetImpl implements FeatureLinkModelFacet {
---
> public class FeatureLinkModelFacetImpl extends EObjectImpl implements FeatureLinkModelFacet {
> 	/**
> 	 * The cached value of the '{@link #getMetaFeature() <em>Meta Feature</em>}' reference.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getMetaFeature()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected GenFeature metaFeature = null;
> 
45a69,106
> 	 * @generated
> 	 */
> 	public GenFeature getMetaFeature() {
> 		if (metaFeature != null && metaFeature.eIsProxy()) {
> 			InternalEObject oldMetaFeature = (InternalEObject)metaFeature;
> 			metaFeature = (GenFeature)eResolveProxy(oldMetaFeature);
> 			if (metaFeature != oldMetaFeature) {
> 				if (eNotificationRequired())
> 					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.FEATURE_LINK_MODEL_FACET__META_FEATURE, oldMetaFeature, metaFeature));
> 			}
> 		}
> 		return metaFeature;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public GenFeature basicGetMetaFeature() {
> 		return metaFeature;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setMetaFeature(GenFeature newMetaFeature) {
> 		GenFeature oldMetaFeature = metaFeature;
> 		metaFeature = newMetaFeature;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.FEATURE_LINK_MODEL_FACET__META_FEATURE, oldMetaFeature, metaFeature));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
68a130,184
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
> 		switch (featureID) {
> 			case GMFGenPackage.FEATURE_LINK_MODEL_FACET__META_FEATURE:
> 				if (resolve) return getMetaFeature();
> 				return basicGetMetaFeature();
> 		}
> 		return super.eGet(featureID, resolve, coreType);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void eSet(int featureID, Object newValue) {
> 		switch (featureID) {
> 			case GMFGenPackage.FEATURE_LINK_MODEL_FACET__META_FEATURE:
> 				setMetaFeature((GenFeature)newValue);
> 				return;
> 		}
> 		super.eSet(featureID, newValue);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void eUnset(int featureID) {
> 		switch (featureID) {
> 			case GMFGenPackage.FEATURE_LINK_MODEL_FACET__META_FEATURE:
> 				setMetaFeature((GenFeature)null);
> 				return;
> 		}
> 		super.eUnset(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public boolean eIsSet(int featureID) {
> 		switch (featureID) {
> 			case GMFGenPackage.FEATURE_LINK_MODEL_FACET__META_FEATURE:
> 				return metaFeature != null;
> 		}
> 		return super.eIsSet(featureID);
> 	}
> 
