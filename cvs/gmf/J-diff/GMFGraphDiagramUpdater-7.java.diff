34a35
> import org.eclipse.gmf.gmfgraph.Polygon;
54a56,58
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polygon2EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polygon3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.PolygonEditPart;
95a100,101
> 		case PolygonEditPart.VISUAL_ID:
> 			return getPolygon_3023SemanticChildren(view);
101a108,109
> 		case Polygon2EditPart.VISUAL_ID:
> 			return getPolygon_3024SemanticChildren(view);
109a118,119
> 		case Polygon3EditPart.VISUAL_ID:
> 			return getPolygon_3025SemanticChildren(view);
141a152,154
> 			if (visualID == Polygon2EditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 			}
173a187,190
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
205a223,226
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
237a259,262
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
269a295,298
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
296a326,345
> 	public static List getPolygon_3023SemanticChildren(View view) {
> 		if (!view.isSetElement()) {
> 			return Collections.EMPTY_LIST;
> 		}
> 		Polygon modelElement = (Polygon) view.getElement();
> 		List result = new LinkedList();
> 		for (Iterator it = modelElement.getTemplate().iterator(); it.hasNext();) {
> 			Point childElement = (Point) it.next();
> 			int visualID = GMFGraphVisualIDRegistry.getNodeVisualID(view, childElement);
> 			if (visualID == PointEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
> 		}
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
321a371,374
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
353a407,410
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
380a438,457
> 	public static List getPolygon_3024SemanticChildren(View view) {
> 		if (!view.isSetElement()) {
> 			return Collections.EMPTY_LIST;
> 		}
> 		Polygon modelElement = (Polygon) view.getElement();
> 		List result = new LinkedList();
> 		for (Iterator it = modelElement.getTemplate().iterator(); it.hasNext();) {
> 			Point childElement = (Point) it.next();
> 			int visualID = GMFGraphVisualIDRegistry.getNodeVisualID(view, childElement);
> 			if (visualID == PointEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
> 		}
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
405a483,486
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
437a519,522
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
469a555,558
> 			if (visualID == PolygonEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
496a586,605
> 	public static List getPolygon_3025SemanticChildren(View view) {
> 		if (!view.isSetElement()) {
> 			return Collections.EMPTY_LIST;
> 		}
> 		Polygon modelElement = (Polygon) view.getElement();
> 		List result = new LinkedList();
> 		for (Iterator it = modelElement.getTemplate().iterator(); it.hasNext();) {
> 			Point childElement = (Point) it.next();
> 			int visualID = GMFGraphVisualIDRegistry.getNodeVisualID(view, childElement);
> 			if (visualID == PointEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
> 		}
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
533a643,646
> 			if (visualID == Polygon3EditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
610a724,725
> 		case PolygonEditPart.VISUAL_ID:
> 			return getPolygon_3023ContainedLinks(view);
616a732,733
> 		case Polygon2EditPart.VISUAL_ID:
> 			return getPolygon_3024ContainedLinks(view);
624a742,743
> 		case Polygon3EditPart.VISUAL_ID:
> 			return getPolygon_3025ContainedLinks(view);
657a777,778
> 		case PolygonEditPart.VISUAL_ID:
> 			return getPolygon_3023IncomingLinks(view);
663a785,786
> 		case Polygon2EditPart.VISUAL_ID:
> 			return getPolygon_3024IncomingLinks(view);
671a795,796
> 		case Polygon3EditPart.VISUAL_ID:
> 			return getPolygon_3025IncomingLinks(view);
704a830,831
> 		case PolygonEditPart.VISUAL_ID:
> 			return getPolygon_3023OutgoingLinks(view);
710a838,839
> 		case Polygon2EditPart.VISUAL_ID:
> 			return getPolygon_3024OutgoingLinks(view);
718a848,849
> 		case Polygon3EditPart.VISUAL_ID:
> 			return getPolygon_3025OutgoingLinks(view);
825a957,963
> 	public static List getPolygon_3023ContainedLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
846a985,991
> 	public static List getPolygon_3024ContainedLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
874a1020,1026
> 	public static List getPolygon_3025ContainedLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
982a1135,1145
> 	public static List getPolygon_3023IncomingLinks(View view) {
> 		Polygon modelElement = (Polygon) view.getElement();
> 		Map crossReferences = EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
> 		List result = new LinkedList();
> 		result.addAll(getIncomingTypeModelFacetLinks_ChildAccess_4002(modelElement, crossReferences));
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
1015a1179,1189
> 	public static List getPolygon_3024IncomingLinks(View view) {
> 		Polygon modelElement = (Polygon) view.getElement();
> 		Map crossReferences = EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
> 		List result = new LinkedList();
> 		result.addAll(getIncomingTypeModelFacetLinks_ChildAccess_4002(modelElement, crossReferences));
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
1059a1234,1244
> 	public static List getPolygon_3025IncomingLinks(View view) {
> 		Polygon modelElement = (Polygon) view.getElement();
> 		Map crossReferences = EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
> 		List result = new LinkedList();
> 		result.addAll(getIncomingTypeModelFacetLinks_ChildAccess_4002(modelElement, crossReferences));
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
1163a1349,1355
> 	public static List getPolygon_3023OutgoingLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
1184a1377,1383
> 	public static List getPolygon_3024OutgoingLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
1212a1412,1418
> 	public static List getPolygon_3025OutgoingLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
