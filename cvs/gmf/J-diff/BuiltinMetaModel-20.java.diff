690c690
< 				return new HashSet<Object>(target);
---
> 				return new LinkedHashSet<Object>(target);
734c734
< 		listOps.add(new InternalOperation<List>(opf.create("withoutFirst", collectionTypes.getCollectionType(ecorePkg.getEJavaObject()))) {
---
> 		listOps.add(new InternalOperation<List>(opf.create("withoutFirst", CollectionTypesSupport.LIST_OF_OBJECT)) {
745c745
< 		listOps.add(new InternalOperation<List>(opf.create("withoutLast", collectionTypes.getCollectionType(ecorePkg.getEJavaObject()))) {
---
> 		listOps.add(new InternalOperation<List>(opf.create("withoutLast", CollectionTypesSupport.LIST_OF_OBJECT)) {
755a756,764
> 		listOps.add(new InternalOperation<List>(opf.create("purgeDups", CollectionTypesSupport.LIST_OF_OBJECT)) {
> 			@Override
> 			public Object evaluate(List target, Object[] params) {
> 				if (target.isEmpty()) {
> 					return target;
> 				}
> 				return new LinkedList<Object>(new LinkedHashSet<Object>(target));
> 			}
> 		});
