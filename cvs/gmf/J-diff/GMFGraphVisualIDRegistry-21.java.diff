17a18
> import org.eclipse.gmf.gmfgraph.Node;
26a28,30
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelNameEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelVisualFacetsEditPart;
34a39,44
> import org.eclipse.gmf.graphdef.editor.edit.parts.Label2EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.Label3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelText2EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelText3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelTextEditPart;
72a83,87
> 	private static GMFGraphAbstractExpression Node_2006_Constraint;
> 
> 	/**
> 	 * @generated
> 	 */
185a201,203
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return Label2EditPart.VISUAL_ID;
> 			}
202a221,223
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
219a241,243
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
236a261,263
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
253a281,283
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
280a311,313
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
297a331,333
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
324a361,363
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
341a381,383
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
358a401,403
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return LabelEditPart.VISUAL_ID;
> 			}
388a434,436
> 			if (GMFGraphPackage.eINSTANCE.getLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return Label3EditPart.VISUAL_ID;
> 			}
394c442
< 			if (GMFGraphPackage.eINSTANCE.getNode().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getNode().isSuperTypeOf(domainElement.eClass()) && isNode_2006((Node) domainElement)) {
402a451,453
> 			if (GMFGraphPackage.eINSTANCE.getDiagramLabel().isSuperTypeOf(domainElement.eClass())) {
> 				return DiagramLabelEditPart.VISUAL_ID;
> 			}
458a510,517
> 		case DiagramLabelEditPart.VISUAL_ID:
> 			if (DiagramLabelNameEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (DiagramLabelVisualFacetsEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
477a537,539
> 			if (Label2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
494a557,559
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
511a577,579
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
528a597,599
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
545a617,619
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
556a631,635
> 		case LabelEditPart.VISUAL_ID:
> 			if (LabelTextEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
572a652,654
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
589a672,674
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
600a686,690
> 		case Label2EditPart.VISUAL_ID:
> 			if (LabelText2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
616a707,709
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
633a727,729
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
650a747,749
> 			if (LabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
661a761,765
> 		case Label3EditPart.VISUAL_ID:
> 			if (LabelText3EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
680a785,787
> 			if (Label3EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
694a802,804
> 			if (DiagramLabelEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
725a836,846
> 	private static boolean isNode_2006(Node domainElement) {
> 		if (Node_2006_Constraint == null) { // lazy initialization
> 			Node_2006_Constraint = GMFGraphOCLFactory.getExpression("not self.oclIsKindOf(gmfgraph::DiagramLabel)", GMFGraphPackage.eINSTANCE.getNode()); //$NON-NLS-1$
> 		}
> 		Object result = Node_2006_Constraint.evaluate(domainElement);
> 		return result instanceof Boolean && ((Boolean) result).booleanValue();
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
