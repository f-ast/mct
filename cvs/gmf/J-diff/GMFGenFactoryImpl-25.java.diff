17,18c17
< import org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind;
< import org.eclipse.gmf.codegen.gmfgen.CompartmentPlacementKind;
---
> import org.eclipse.gmf.codegen.gmfgen.ColorAttributes;
23a23,24
> import org.eclipse.gmf.codegen.gmfgen.GenAuditContainer;
> import org.eclipse.gmf.codegen.gmfgen.GenAuditRule;
26a28
> import org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel;
32d33
< import org.eclipse.gmf.codegen.gmfgen.GenNode;
33a35,37
> import org.eclipse.gmf.codegen.gmfgen.GenSeverity;
> import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;
> import org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap;
90,91c94
< 			case GMFGenPackage.GEN_NODE: return createGenNode();
< 			case GMFGenPackage.GEN_COMPARTMENT: return createGenCompartment();
---
> 			case GMFGenPackage.GEN_TOP_LEVEL_NODE: return createGenTopLevelNode();
92a96
> 			case GMFGenPackage.GEN_COMPARTMENT: return createGenCompartment();
129,132d132
< 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND:
< 				return createCompartmentPlacementKindFromString(eDataType, initialValue);
< 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND:
< 				return createCompartmentLayoutKindFromString(eDataType, initialValue);
149,152d148
< 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND:
< 				return convertCompartmentPlacementKindToString(eDataType, instanceValue);
< 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND:
< 				return convertCompartmentLayoutKindToString(eDataType, instanceValue);
177,179c173,175
< 	public GenNode createGenNode() {
< 		GenNodeImpl genNode = new GenNodeImpl();
< 		return genNode;
---
> 	public GenTopLevelNode createGenTopLevelNode() {
> 		GenTopLevelNodeImpl genTopLevelNode = new GenTopLevelNodeImpl();
> 		return genTopLevelNode;
187,189c183,185
< 	public GenCompartment createGenCompartment() {
< 		GenCompartmentImpl genCompartment = new GenCompartmentImpl();
< 		return genCompartment;
---
> 	public GenChildNode createGenChildNode() {
> 		GenChildNodeImpl genChildNode = new GenChildNodeImpl();
> 		return genChildNode;
197,199c193,195
< 	public GenChildNode createGenChildNode() {
< 		GenChildNodeImpl genChildNode = new GenChildNodeImpl();
< 		return genChildNode;
---
> 	public GenCompartment createGenCompartment() {
> 		GenCompartmentImpl genCompartment = new GenCompartmentImpl();
> 		return genCompartment;
447,486d442
< 	public CompartmentPlacementKind createCompartmentPlacementKindFromString(EDataType eDataType, String initialValue) {
< 		CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
< 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 		return result;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String convertCompartmentPlacementKindToString(EDataType eDataType, Object instanceValue) {
< 		return instanceValue == null ? null : instanceValue.toString();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public CompartmentLayoutKind createCompartmentLayoutKindFromString(EDataType eDataType, String initialValue) {
< 		CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
< 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 		return result;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String convertCompartmentLayoutKindToString(EDataType eDataType, Object instanceValue) {
< 		return instanceValue == null ? null : instanceValue.toString();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
