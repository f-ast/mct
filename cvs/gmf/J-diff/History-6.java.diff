33,36c33,36
< 	private final Map/*<NodeMapping, GenTopLevelNode>*/ myTopNodeMap;	
< 	private final Map/*<NodeMapping, Set<GenChildNode>>*/ myNodeMap;
< 	private final Map/*<LinkMapping, GenLink>*/ myLinkMap;
< 	private final Map/*<MetricRule, GenMetricRule>*/ myMetricMap;
---
> 	private final Map<NodeMapping, GenTopLevelNode> myTopNodeMap;	
> 	private final Map<NodeMapping, Set<GenChildNode>> myNodeMap;
> 	private final Map<LinkMapping, GenLink> myLinkMap;
> 	private final Map<MetricRule, GenMetricRule> myMetricMap;
39,42c39,42
< 		myTopNodeMap = new HashMap();		
< 		myNodeMap = new HashMap();
< 		myLinkMap = new HashMap();
< 		myMetricMap = new HashMap();
---
> 		myTopNodeMap = new HashMap<NodeMapping, GenTopLevelNode>();		
> 		myNodeMap = new HashMap<NodeMapping, Set<GenChildNode>>();
> 		myLinkMap = new HashMap<LinkMapping, GenLink>();
> 		myMetricMap = new HashMap<MetricRule, GenMetricRule>();
59c59
< 		Set genNodes = (Set) myNodeMap.get(nodeMap);
---
> 		Set<GenChildNode> genNodes = myNodeMap.get(nodeMap);
61c61
< 			genNodes = new HashSet/*<GenChildNode>*/();
---
> 			genNodes = new HashSet<GenChildNode>();
82c82
< 		return (GenMetricRule) myMetricMap.get(metric);
---
> 		return myMetricMap.get(metric);
112c112
< 		Set genNodes = (Set) myNodeMap.get(nodeMap);
---
> 		Set<GenChildNode> genNodes = myNodeMap.get(nodeMap);
116c116
< 		return (GenChildNode[]) genNodes.toArray(new GenChildNode[genNodes.size()]);
---
> 		return genNodes.toArray(new GenChildNode[genNodes.size()]);
121c121
< 		return (GenTopLevelNode) myTopNodeMap.get(nodeMap);
---
> 		return myTopNodeMap.get(nodeMap);
132c132
< 		return (GenLink) myLinkMap.get(linkMap);
---
> 		return myLinkMap.get(linkMap);
