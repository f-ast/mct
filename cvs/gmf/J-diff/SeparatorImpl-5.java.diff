8a9
> import org.eclipse.emf.common.notify.Notification;
14a16
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
16a19
> import org.eclipse.emf.ecore.util.EcoreUtil;
69a73,103
> 	public NotificationChain basicSetGroup(ToolGroup newGroup, NotificationChain msgs) {
> 		msgs = eBasicSetContainer((InternalEObject)newGroup, GMFGenPackage.SEPARATOR__GROUP, msgs);
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setGroup(ToolGroup newGroup) {
> 		if (newGroup != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.SEPARATOR__GROUP && newGroup != null)) {
> 			if (EcoreUtil.isAncestor(this, newGroup))
> 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
> 			NotificationChain msgs = null;
> 			if (eInternalContainer() != null)
> 				msgs = eBasicRemoveFromContainer(msgs);
> 			if (newGroup != null)
> 				msgs = ((InternalEObject)newGroup).eInverseAdd(this, GMFGenPackage.TOOL_GROUP__ENTRIES, ToolGroup.class, msgs);
> 			msgs = basicSetGroup(newGroup, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.SEPARATOR__GROUP, newGroup, newGroup));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
76c110
< 				return eBasicSetContainer(otherEnd, GMFGenPackage.SEPARATOR__GROUP, msgs);
---
> 				return basicSetGroup((ToolGroup)otherEnd, msgs);
90c124
< 				return eBasicSetContainer(null, GMFGenPackage.SEPARATOR__GROUP, msgs);
---
> 				return basicSetGroup(null, msgs);
128a163,192
> 	public void eSet(int featureID, Object newValue) {
> 		switch (featureID) {
> 			case GMFGenPackage.SEPARATOR__GROUP:
> 				setGroup((ToolGroup)newValue);
> 				return;
> 		}
> 		super.eSet(featureID, newValue);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public void eUnset(int featureID) {
> 		switch (featureID) {
> 			case GMFGenPackage.SEPARATOR__GROUP:
> 				setGroup((ToolGroup)null);
> 				return;
> 		}
> 		super.eUnset(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
