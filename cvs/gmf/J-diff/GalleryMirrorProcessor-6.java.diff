15d14
< import java.util.Enumeration;
18a18
> import org.eclipse.gmf.gmfgraph.ConnectionFigure;
19a20
> import org.eclipse.gmf.gmfgraph.DecorationFigure;
20a22
> import org.eclipse.gmf.gmfgraph.FigureDescriptor;
32c34
< 	private final GenerationInfoImpl myGenerationInfo;
---
> 	private final Map<FigureDescriptor, String> myFigure2FQN = new IdentityHashMap<FigureDescriptor, String>();
37d38
< 		myGenerationInfo = new GenerationInfoImpl();
50,55c51,55
< 		for (Enumeration<Figure> originalFigures = myGenerationInfo.getProcessedFigures(); originalFigures.hasMoreElements();) {
< 			Figure nextOriginal = originalFigures.nextElement();
< 			String nextConvertedFqn = myGenerationInfo.getGeneratedClassFQN(nextOriginal);
< 			CustomFigure custom = DiagramElementsCopier.createCustomFigure(nextOriginal);
< 			custom.setName(nextOriginal.getName());
< 			custom.setBundleName(myGeneratedBundle);
---
> 		for (FigureDescriptor fd : myFigure2FQN.keySet()) {
> 			Figure nextOriginal = fd.getActualFigure();
> 			String nextConvertedFqn = myFigure2FQN.get(fd);
> 			CustomFigure custom = createCustomFigure(nextOriginal);
> 			custom.setName(fd.getName());
63,64c63,64
< 	public GenerationInfo getGenerationInfo() {
< 		return myGenerationInfo;
---
> 	public Map<FigureDescriptor, String> getGenerationInfo() {
> 		return Collections.unmodifiableMap(myFigure2FQN);
67,68c67,68
< 	protected void handle(Figure next, String fqn) {
< 		myGenerationInfo.registerFQN(next, fqn);
---
> 	protected void handle(FigureDescriptor next, String fqn) {
> 		myFigure2FQN.put(next, fqn);
71,74c71,74
< 	public interface GenerationInfo {
< 		// FIXME use iterator instead to allow enhanced for loop
< 		public Enumeration<Figure> getProcessedFigures();
< 		public String getGeneratedClassFQN(Figure figure);
---
> 	static CustomFigure createCustomFigure(Figure original){
> 		GMFGraphFactory factory = GMFGraphFactory.eINSTANCE;
> 		if (original instanceof DecorationFigure){
> 			return factory.createCustomDecoration();
76,92c76,77
< 
< 	private static class GenerationInfoImpl implements GenerationInfo {
< 		private final Map<Figure, String> myFigure2FQN = new IdentityHashMap<Figure, String>();
< 		
< 		public GenerationInfoImpl(){
< 		}
< 		
< 		public void registerFQN(Figure figure, String fqn){
< 			myFigure2FQN.put(figure, fqn);
< 		}
< 		
< 		public String getGeneratedClassFQN(Figure figure) {
< 			return myFigure2FQN.get(figure);
< 		}
< 		
< 		public Enumeration<Figure> getProcessedFigures() {
< 			return Collections.enumeration(myFigure2FQN.keySet());
---
> 		if (original instanceof ConnectionFigure){
> 			return factory.createCustomConnection();
93a79
> 		return factory.createCustomFigure();
