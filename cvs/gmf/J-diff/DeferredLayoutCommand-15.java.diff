31a32
> import org.eclipse.gef.commands.CompoundCommand;
32a34
> import org.eclipse.gmf.runtime.common.core.command.ICommand;
39a42
> import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
63,65d65
< 	/** the layout command saved for undo */
< 	protected Command layoutCmd;
< 
195c195
< 		layoutCmd = containerEP.getCommand(request);
---
> 		Command layoutCmd = containerEP.getCommand(request);
198c198,200
< 			layoutCmd.execute();
---
>             ICommand optimizedCommand = optimizeCommand(layoutCmd);
> 			optimizedCommand.execute(progressMonitor, info);
>             optimizedCommand = null;
202a205,225
>     private ICommand optimizeCommand(Command command) {
>         if (command instanceof ICommandProxy) {
>             ICommand icmd = ((ICommandProxy)command).getICommand();
>             return icmd; 
>         } else {
>             if(command instanceof CompoundCommand) {
>                 CompositeTransactionalCommand transactionalCommand = new CompositeTransactionalCommand(getEditingDomain(), command.getLabel());
>                 transactionalCommand.setTransactionNestingEnabled(false);
>                 
>                 CompoundCommand compound = (CompoundCommand)command;
>                 Iterator commandIter = compound.getCommands().iterator();
>                 while(commandIter.hasNext()) {
>                     Command iteredCommand = (Command)commandIter.next();
>                     ICommand iteredICommand = optimizeCommand(iteredCommand);
>                     transactionalCommand.compose(iteredICommand);
>                 }
>                 return transactionalCommand;
>             }
>             return new CommandProxy(command);
>         }
>     }
