42c42
< public class NodeEntryImpl extends NotationObjectImpl implements BasicEMap.Entry {
---
> public class NodeEntryImpl extends NotationEObjectImpl implements BasicEMap.Entry {
54c54,81
< 	 * The cached value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
---
> 	 * The offset of the flags representing the value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int VALUE_EFLAG_OFFSET = 8;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int VALUE_EFLAG_DEFAULT = Alignment.VALUES.indexOf(VALUE_EDEFAULT) << VALUE_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link Alignment Alignment}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final Alignment[] VALUE_EFLAG_VALUES = (Alignment[])Alignment.VALUES.toArray(new Alignment[Alignment.VALUES.size()]);
> 
> 				/**
> 	 * The flags representing the value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
61c88
< 	protected Alignment value = VALUE_EDEFAULT;
---
> 	protected static final int VALUE_EFLAG = 0x7 << VALUE_EFLAG_OFFSET;
79a107
> 		eFlags |= VALUE_EFLAG_DEFAULT;
97c125
< 		return value;
---
> 		return VALUE_EFLAG_VALUES[(eFlags & VALUE_EFLAG) >>> VALUE_EFLAG_OFFSET];
106,107c134,136
< 		Alignment oldValue = value;
< 		value = newValue == null ? VALUE_EDEFAULT : newValue;
---
> 		Alignment oldValue = VALUE_EFLAG_VALUES[(eFlags & VALUE_EFLAG) >>> VALUE_EFLAG_OFFSET];
> 		if (newValue == null) newValue = VALUE_EDEFAULT;
> 		eFlags = eFlags & ~VALUE_EFLAG | Alignment.VALUES.indexOf(newValue) << VALUE_EFLAG_OFFSET;
109c138
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.NODE_ENTRY__VALUE, oldValue, value));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.NODE_ENTRY__VALUE, oldValue, newValue));
158,159d186
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				return getUUID();
176,178d202
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				setUUID((byte[])newValue);
< 				return;
196,198d219
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				setUUID(UUID_EDEFAULT);
< 				return;
216,217d236
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
219c238
< 				return value != VALUE_EDEFAULT;
---
> 				return (eFlags & VALUE_EFLAG) != VALUE_EFLAG_DEFAULT;
236c255
< 		result.append(value);
---
> 		result.append(VALUE_EFLAG_VALUES[(eFlags & VALUE_EFLAG) >>> VALUE_EFLAG_OFFSET]);
