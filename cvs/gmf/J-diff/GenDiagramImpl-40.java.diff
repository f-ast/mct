33a34
> import org.eclipse.gmf.codegen.gmfgen.GenCompartment;
36a38
> import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;
48a51
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getContainedNodes <em>Contained Nodes</em>}</li>
51c54,55
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNodes <em>Nodes</em>}</li>
---
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getChildNodes <em>Child Nodes</em>}</li>
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getTopLevelNodes <em>Top Level Nodes</em>}</li>
52a57
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getCompartments <em>Compartments</em>}</li>
127c132
< 	 * The cached value of the '{@link #getNodes() <em>Nodes</em>}' containment reference list.
---
> 	 * The cached value of the '{@link #getChildNodes() <em>Child Nodes</em>}' containment reference list.
130c135
< 	 * @see #getNodes()
---
> 	 * @see #getChildNodes()
134c139,149
< 	protected EList nodes = null;
---
> 	protected EList childNodes = null;
> 
> 	/**
> 	 * The cached value of the '{@link #getTopLevelNodes() <em>Top Level Nodes</em>}' containment reference list.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getTopLevelNodes()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected EList topLevelNodes = null;
146a162,171
> 	 * The cached value of the '{@link #getCompartments() <em>Compartments</em>}' containment reference list.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getCompartments()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected EList compartments = null;
> 
> 	/**
1048a1074,1082
> 	 * @generated NOT
> 	 */
> 	public EList getContainedNodes() {
> 		return getTopLevelNodes();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
1127,1129c1161,1163
< 	public EList getNodes() {
< 		if (nodes == null) {
< 			nodes = new EObjectContainmentWithInverseEList(GenNode.class, this, GMFGenPackage.GEN_DIAGRAM__NODES, GMFGenPackage.GEN_NODE__DIAGRAM);
---
> 	public EList getChildNodes() {
> 		if (childNodes == null) {
> 			childNodes = new EObjectContainmentWithInverseEList(GenChildNode.class, this, GMFGenPackage.GEN_DIAGRAM__CHILD_NODES, GMFGenPackage.GEN_CHILD_NODE__DIAGRAM);
1131c1165,1177
< 		return nodes;
---
> 		return childNodes;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EList getTopLevelNodes() {
> 		if (topLevelNodes == null) {
> 			topLevelNodes = new EObjectContainmentWithInverseEList(GenTopLevelNode.class, this, GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES, GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM);
> 		}
> 		return topLevelNodes;
1150a1197,1208
> 	public EList getCompartments() {
> 		if (compartments == null) {
> 			compartments = new EObjectContainmentWithInverseEList(GenCompartment.class, this, GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS, GMFGenPackage.GEN_COMPARTMENT__DIAGRAM);
> 		}
> 		return compartments;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
2475a2534,2557
> 	public EList getAllContainers() {
> 		EList result = new BasicEList();
> 		result.addAll(getAllNodes());
> 		result.addAll(getCompartments());
> 		return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public EList getAllNodes() {
> 		EList result = new BasicEList();
> 		result.addAll(getTopLevelNodes());
> 		result.addAll(getChildNodes());
> 		return new BasicEList.UnmodifiableEList(result.size(), result.toArray());
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
2541,2542c2623,2626
< 			case GMFGenPackage.GEN_DIAGRAM__NODES:
< 				return ((InternalEList)getNodes()).basicAdd(otherEnd, msgs);
---
> 			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
> 				return ((InternalEList)getChildNodes()).basicAdd(otherEnd, msgs);
> 			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
> 				return ((InternalEList)getTopLevelNodes()).basicAdd(otherEnd, msgs);
2544a2629,2630
> 			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
> 				return ((InternalEList)getCompartments()).basicAdd(otherEnd, msgs);
2560,2561c2646,2649
< 			case GMFGenPackage.GEN_DIAGRAM__NODES:
< 				return ((InternalEList)getNodes()).basicRemove(otherEnd, msgs);
---
> 			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
> 				return ((InternalEList)getChildNodes()).basicRemove(otherEnd, msgs);
> 			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
> 				return ((InternalEList)getTopLevelNodes()).basicRemove(otherEnd, msgs);
2563a2652,2653
> 			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
> 				return ((InternalEList)getCompartments()).basicRemove(otherEnd, msgs);
2578a2669,2670
> 			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
> 				return getContainedNodes();
2585,2586c2677,2680
< 			case GMFGenPackage.GEN_DIAGRAM__NODES:
< 				return getNodes();
---
> 			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
> 				return getChildNodes();
> 			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
> 				return getTopLevelNodes();
2588a2683,2684
> 			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
> 				return getCompartments();
2691a2788,2791
> 			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
> 				getContainedNodes().clear();
> 				getContainedNodes().addAll((Collection)newValue);
> 				return;
2698,2700c2798,2804
< 			case GMFGenPackage.GEN_DIAGRAM__NODES:
< 				getNodes().clear();
< 				getNodes().addAll((Collection)newValue);
---
> 			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
> 				getChildNodes().clear();
> 				getChildNodes().addAll((Collection)newValue);
> 				return;
> 			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
> 				getTopLevelNodes().clear();
> 				getTopLevelNodes().addAll((Collection)newValue);
2705a2810,2813
> 			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
> 				getCompartments().clear();
> 				getCompartments().addAll((Collection)newValue);
> 				return;
2856a2965,2967
> 			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
> 				getContainedNodes().clear();
> 				return;
2863,2864c2974,2978
< 			case GMFGenPackage.GEN_DIAGRAM__NODES:
< 				getNodes().clear();
---
> 			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
> 				getChildNodes().clear();
> 				return;
> 			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
> 				getTopLevelNodes().clear();
2868a2983,2985
> 			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
> 				getCompartments().clear();
> 				return;
3017a3135,3136
> 			case GMFGenPackage.GEN_DIAGRAM__CONTAINED_NODES:
> 				return !getContainedNodes().isEmpty();
3022,3023c3141,3144
< 			case GMFGenPackage.GEN_DIAGRAM__NODES:
< 				return nodes != null && !nodes.isEmpty();
---
> 			case GMFGenPackage.GEN_DIAGRAM__CHILD_NODES:
> 				return childNodes != null && !childNodes.isEmpty();
> 			case GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES:
> 				return topLevelNodes != null && !topLevelNodes.isEmpty();
3025a3147,3148
> 			case GMFGenPackage.GEN_DIAGRAM__COMPARTMENTS:
> 				return compartments != null && !compartments.isEmpty();
3556c3679
< 		for (Iterator it = getNodes().iterator(); it.hasNext();) {
---
> 		for (Iterator it = getAllNodes().iterator(); it.hasNext();) {
3565,3575d3687
< 			
< 			for (Iterator childIt = nextNode.getChildNodes().iterator(); childIt.hasNext();) {
< 				GenChildNode nextChild = (GenChildNode) childIt.next();
< 				TypeModelFacet childModelFacet = nextChild.getModelFacet();
< 				if(childModelFacet.getModelElementInitializer() != null) {
< 					requiredIDs.addAll(childModelFacet.getModelElementInitializer().getRequiredPluginIDs());
< 				}
< 				if(childModelFacet.getModelElementSelector() != null) {
< 					requiredIDs.addAll(childModelFacet.getModelElementSelector().getRequiredPluginIDs());				
< 				}				
< 			}
