10a11,13
> import java.util.Collections;
> import java.util.HashSet;
> import java.util.Iterator;
11a15
> import java.util.Set;
15a20
> import org.eclipse.emf.ecore.EReference;
23a29
> import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
119c125
< 	 * @generated
---
> 	 * @generated NOT
123c129
< 			(createItemPropertyDescriptor
---
> 			(new ItemPropertyDescriptor
132c138,158
< 				 null));
---
> 				 null) {
> 						protected Collection getComboBoxObjects(Object object) {
> 							if (object instanceof LinkMapping) {
> 								LinkMapping nm = (LinkMapping) object;
> 								if (nm.getDomainMetaElement() != null) {
> 									Set features = new HashSet();
> 									for (Iterator it = nm.getDomainMetaElement().getEPackage().eAllContents(); it.hasNext(); ) {
> 										Object next = it.next();
> 										if (next instanceof EReference) {
> 											EReference ref = (EReference) next;
> 											if (ref.isContainment() && nm.getDomainMetaElement().equals(ref.getEType())) {
> 												features.add(ref);
> 											}
> 										}
> 									}
> 									return features;
> 								}
> 							}
> 							return Collections.EMPTY_LIST;
> 						}
> 				});
139c165
< 	 * @generated
---
> 	 * @generated NOT
143c169
< 			(createItemPropertyDescriptor
---
> 			(new ItemPropertyDescriptor
152c178,188
< 				 null));
---
> 				 null) {
> 						protected Collection getComboBoxObjects(Object object) {
> 							if (object instanceof LinkMapping) {
> 								LinkMapping nm = (LinkMapping) object;
> 								if (nm.getDomainMetaElement() != null) {
> 									return nm.getDomainMetaElement().getEAllAttributes();
> 								}
> 							}
> 							return Collections.EMPTY_LIST;
> 						}
> 					});
183c219
< 			(createItemPropertyDescriptor
---
> 			(new ItemPropertyDescriptor
192c228,248
< 				 null));
---
> 				 null) {
> 						protected Collection getComboBoxObjects(Object object) {
> 							if (object instanceof LinkMapping) {
> 								LinkMapping nm = (LinkMapping) object;
> 								if (nm.getDomainMetaElement() != null) {
> 									Set features = new HashSet();
> 									for (Iterator it = nm.getDomainMetaElement().getEPackage().eAllContents(); it.hasNext(); ) {
> 										Object next = it.next();
> 										if (next instanceof EReference) {
> 											EReference ref = (EReference) next;
> 											if (!ref.isContainment()) {
> 												features.add(ref);
> 											}
> 										}
> 									}
> 									return features;
> 								}
> 							}
> 							return Collections.EMPTY_LIST;
> 						}
> 				});
