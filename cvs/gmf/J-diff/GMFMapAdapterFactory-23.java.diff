75a76
> 	@Override
92,94c93,96
< 	protected GMFMapSwitch modelSwitch =
< 		new GMFMapSwitch() {
< 			public Object caseMapping(Mapping object) {
---
> 	protected GMFMapSwitch<Adapter> modelSwitch =
> 		new GMFMapSwitch<Adapter>() {
> 			@Override
> 			public Adapter caseMapping(Mapping object) {
97c99,100
< 			public Object caseMappingEntry(MappingEntry object) {
---
> 			@Override
> 			public Adapter caseMappingEntry(MappingEntry object) {
100c103,104
< 			public Object caseNeedsContainment(NeedsContainment object) {
---
> 			@Override
> 			public Adapter caseNeedsContainment(NeedsContainment object) {
103c107,108
< 			public Object caseNodeReference(NodeReference object) {
---
> 			@Override
> 			public Adapter caseNodeReference(NodeReference object) {
106c111,112
< 			public Object caseChildReference(ChildReference object) {
---
> 			@Override
> 			public Adapter caseChildReference(ChildReference object) {
109c115,116
< 			public Object caseTopNodeReference(TopNodeReference object) {
---
> 			@Override
> 			public Adapter caseTopNodeReference(TopNodeReference object) {
112c119,120
< 			public Object caseNodeMapping(NodeMapping object) {
---
> 			@Override
> 			public Adapter caseNodeMapping(NodeMapping object) {
115c123,124
< 			public Object caseCompartmentMapping(CompartmentMapping object) {
---
> 			@Override
> 			public Adapter caseCompartmentMapping(CompartmentMapping object) {
118c127,128
< 			public Object caseLinkMapping(LinkMapping object) {
---
> 			@Override
> 			public Adapter caseLinkMapping(LinkMapping object) {
121c131,132
< 			public Object caseCanvasMapping(CanvasMapping object) {
---
> 			@Override
> 			public Adapter caseCanvasMapping(CanvasMapping object) {
124c135,136
< 			public Object caseLabelMapping(LabelMapping object) {
---
> 			@Override
> 			public Adapter caseLabelMapping(LabelMapping object) {
127c139,140
< 			public Object caseFeatureLabelMapping(FeatureLabelMapping object) {
---
> 			@Override
> 			public Adapter caseFeatureLabelMapping(FeatureLabelMapping object) {
130c143,144
< 			public Object caseDesignLabelMapping(DesignLabelMapping object) {
---
> 			@Override
> 			public Adapter caseDesignLabelMapping(DesignLabelMapping object) {
133c147,148
< 			public Object caseConstraint(Constraint object) {
---
> 			@Override
> 			public Adapter caseConstraint(Constraint object) {
136c151,152
< 			public Object caseLinkConstraints(LinkConstraints object) {
---
> 			@Override
> 			public Adapter caseLinkConstraints(LinkConstraints object) {
139c155,156
< 			public Object caseValueExpression(ValueExpression object) {
---
> 			@Override
> 			public Adapter caseValueExpression(ValueExpression object) {
142c159,160
< 			public Object caseElementInitializer(ElementInitializer object) {
---
> 			@Override
> 			public Adapter caseElementInitializer(ElementInitializer object) {
145c163,164
< 			public Object caseFeatureSeqInitializer(FeatureSeqInitializer object) {
---
> 			@Override
> 			public Adapter caseFeatureSeqInitializer(FeatureSeqInitializer object) {
148c167,168
< 			public Object caseFeatureInitializer(FeatureInitializer object) {
---
> 			@Override
> 			public Adapter caseFeatureInitializer(FeatureInitializer object) {
151c171,172
< 			public Object caseFeatureValueSpec(FeatureValueSpec object) {
---
> 			@Override
> 			public Adapter caseFeatureValueSpec(FeatureValueSpec object) {
154c175,176
< 			public Object caseReferenceNewElementSpec(ReferenceNewElementSpec object) {
---
> 			@Override
> 			public Adapter caseReferenceNewElementSpec(ReferenceNewElementSpec object) {
157c179,180
< 			public Object caseMenuOwner(MenuOwner object) {
---
> 			@Override
> 			public Adapter caseMenuOwner(MenuOwner object) {
160c183,184
< 			public Object caseToolOwner(ToolOwner object) {
---
> 			@Override
> 			public Adapter caseToolOwner(ToolOwner object) {
163c187,188
< 			public Object caseAppearanceSteward(AppearanceSteward object) {
---
> 			@Override
> 			public Adapter caseAppearanceSteward(AppearanceSteward object) {
166c191,192
< 			public Object caseAuditContainer(AuditContainer object) {
---
> 			@Override
> 			public Adapter caseAuditContainer(AuditContainer object) {
169c195,196
< 			public Object caseRuleBase(RuleBase object) {
---
> 			@Override
> 			public Adapter caseRuleBase(RuleBase object) {
172c199,200
< 			public Object caseAuditRule(AuditRule object) {
---
> 			@Override
> 			public Adapter caseAuditRule(AuditRule object) {
175c203,204
< 			public Object caseDomainElementTarget(DomainElementTarget object) {
---
> 			@Override
> 			public Adapter caseDomainElementTarget(DomainElementTarget object) {
178c207,208
< 			public Object caseDomainAttributeTarget(DomainAttributeTarget object) {
---
> 			@Override
> 			public Adapter caseDomainAttributeTarget(DomainAttributeTarget object) {
181c211,212
< 			public Object caseDiagramElementTarget(DiagramElementTarget object) {
---
> 			@Override
> 			public Adapter caseDiagramElementTarget(DiagramElementTarget object) {
184c215,216
< 			public Object caseNotationElementTarget(NotationElementTarget object) {
---
> 			@Override
> 			public Adapter caseNotationElementTarget(NotationElementTarget object) {
187c219,220
< 			public Object caseMetricContainer(MetricContainer object) {
---
> 			@Override
> 			public Adapter caseMetricContainer(MetricContainer object) {
190c223,224
< 			public Object caseMetricRule(MetricRule object) {
---
> 			@Override
> 			public Adapter caseMetricRule(MetricRule object) {
193c227,228
< 			public Object caseAuditedMetricTarget(AuditedMetricTarget object) {
---
> 			@Override
> 			public Adapter caseAuditedMetricTarget(AuditedMetricTarget object) {
196c231,232
< 			public Object caseAuditable(Auditable object) {
---
> 			@Override
> 			public Adapter caseAuditable(Auditable object) {
199c235,236
< 			public Object caseMeasurable(Measurable object) {
---
> 			@Override
> 			public Adapter caseMeasurable(Measurable object) {
202c239,240
< 			public Object defaultCase(EObject object) {
---
> 			@Override
> 			public Adapter defaultCase(EObject object) {
214a253
> 	@Override
216c255
< 		return (Adapter)modelSwitch.doSwitch((EObject)target);
---
> 		return modelSwitch.doSwitch((EObject)target);
