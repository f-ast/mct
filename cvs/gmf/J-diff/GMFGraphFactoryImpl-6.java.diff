14a15
> import org.eclipse.gmf.gmfgraph.Alignment;
15a17,18
> import org.eclipse.gmf.gmfgraph.BorderLayout;
> import org.eclipse.gmf.gmfgraph.BorderLayoutData;
22a26
> import org.eclipse.gmf.gmfgraph.CustomAttribute;
26a31,32
> import org.eclipse.gmf.gmfgraph.CustomLayout;
> import org.eclipse.gmf.gmfgraph.CustomLayoutData;
36a43,44
> import org.eclipse.gmf.gmfgraph.GridLayout;
> import org.eclipse.gmf.gmfgraph.GridLayoutData;
128a137,143
> 			case GMFGraphPackage.CUSTOM_LAYOUT_DATA: return createCustomLayoutData();
> 			case GMFGraphPackage.GRID_LAYOUT_DATA: return createGridLayoutData();
> 			case GMFGraphPackage.BORDER_LAYOUT_DATA: return createBorderLayoutData();
> 			case GMFGraphPackage.CUSTOM_LAYOUT: return createCustomLayout();
> 			case GMFGraphPackage.GRID_LAYOUT: return createGridLayout();
> 			case GMFGraphPackage.BORDER_LAYOUT: return createBorderLayout();
> 			case GMFGraphPackage.CUSTOM_ATTRIBUTE: return createCustomAttribute();
148a164,165
> 			case GMFGraphPackage.ALIGNMENT:
> 				return createAlignmentFromString(eDataType, initialValue);
168a186,187
> 			case GMFGraphPackage.ALIGNMENT:
> 				return convertAlignmentToString(eDataType, instanceValue);
498a518,587
> 	public CustomLayoutData createCustomLayoutData() {
> 		CustomLayoutDataImpl customLayoutData = new CustomLayoutDataImpl();
> 		return customLayoutData;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public GridLayoutData createGridLayoutData() {
> 		GridLayoutDataImpl gridLayoutData = new GridLayoutDataImpl();
> 		return gridLayoutData;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public BorderLayoutData createBorderLayoutData() {
> 		BorderLayoutDataImpl borderLayoutData = new BorderLayoutDataImpl();
> 		return borderLayoutData;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public CustomLayout createCustomLayout() {
> 		CustomLayoutImpl customLayout = new CustomLayoutImpl();
> 		return customLayout;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public GridLayout createGridLayout() {
> 		GridLayoutImpl gridLayout = new GridLayoutImpl();
> 		return gridLayout;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public BorderLayout createBorderLayout() {
> 		BorderLayoutImpl borderLayout = new BorderLayoutImpl();
> 		return borderLayout;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public CustomAttribute createCustomAttribute() {
> 		CustomAttributeImpl customAttribute = new CustomAttributeImpl();
> 		return customAttribute;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
578a668,687
> 	public Alignment createAlignmentFromString(EDataType eDataType, String initialValue) {
> 		Alignment result = Alignment.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertAlignmentToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
