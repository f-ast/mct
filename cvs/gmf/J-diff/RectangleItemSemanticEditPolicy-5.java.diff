2c2
<  * Copyright (c) 2006 Borland Software Corporation and others.
---
>  *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
13,20c13,16
< import org.eclipse.gef.commands.Command;
< import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
< import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
< import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
< import org.eclipse.emf.ecore.EObject;
< import org.eclipse.emf.ecore.EAnnotation;
< import org.eclipse.gmf.runtime.notation.View;
< import org.eclipse.emf.ecore.EClass;
---
> import java.util.ArrayList;
> import java.util.Collection;
> import java.util.Collections;
> import java.util.Iterator;
21a18,21
> import org.eclipse.emf.ecore.EObject;
> import org.eclipse.gef.EditPart;
> import org.eclipse.gef.commands.Command;
> import org.eclipse.gef.commands.CompoundCommand;
23d22
< 
24a24
> import org.eclipse.gmf.gmfgraph.FigureHandle;
26c26,30
< 
---
> import org.eclipse.gmf.graphdef.editor.edit.commands.EllipseCreateCommand;
> import org.eclipse.gmf.graphdef.editor.edit.commands.PolylineCreateCommand;
> import org.eclipse.gmf.graphdef.editor.edit.commands.Rectangle2CreateCommand;
> import org.eclipse.gmf.graphdef.editor.edit.commands.RoundedRectangleCreateCommand;
> import org.eclipse.gmf.graphdef.editor.edit.parts.RectangleEditPart;
28,29c32,33
< 
< import org.eclipse.gmf.runtime.emf.type.core.commands.CreateElementCommand;
---
> import org.eclipse.gmf.runtime.diagram.ui.requests.EditCommandRequestWrapper;
> import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
31d34
< 
32a36,37
> import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
> import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
33a39,40
> import org.eclipse.gmf.runtime.notation.Edge;
> import org.eclipse.gmf.runtime.notation.View;
48c55
< 			return getMSLWrapper(new CreateRectangle_3002Command(req));
---
> 			return getMSLWrapper(new Rectangle2CreateCommand(req));
54c61
< 			return getMSLWrapper(new CreateEllipse_3003Command(req));
---
> 			return getMSLWrapper(new EllipseCreateCommand(req));
60c67
< 			return getMSLWrapper(new CreateRoundedRectangle_3004Command(req));
---
> 			return getMSLWrapper(new RoundedRectangleCreateCommand(req));
66c73
< 			return getMSLWrapper(new CreatePolyline_3005Command(req));
---
> 			return getMSLWrapper(new PolylineCreateCommand(req));
74,197d80
< 	private static class CreateRectangle_3002Command extends CreateElementCommand {
< 
< 		/**
< 		 * @generated
< 		 */
< 		public CreateRectangle_3002Command(CreateElementRequest req) {
< 			super(req);
< 		}
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EClass getEClassToEdit() {
< 			return GMFGraphPackage.eINSTANCE.getRectangle();
< 		};
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EObject getElementToEdit() {
< 			EObject container = ((CreateElementRequest) getRequest()).getContainer();
< 			if (container instanceof View) {
< 				container = ((View) container).getElement();
< 			}
< 			return container;
< 		}
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	private static class CreateEllipse_3003Command extends CreateElementCommand {
< 
< 		/**
< 		 * @generated
< 		 */
< 		public CreateEllipse_3003Command(CreateElementRequest req) {
< 			super(req);
< 		}
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EClass getEClassToEdit() {
< 			return GMFGraphPackage.eINSTANCE.getRectangle();
< 		};
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EObject getElementToEdit() {
< 			EObject container = ((CreateElementRequest) getRequest()).getContainer();
< 			if (container instanceof View) {
< 				container = ((View) container).getElement();
< 			}
< 			return container;
< 		}
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	private static class CreateRoundedRectangle_3004Command extends CreateElementCommand {
< 
< 		/**
< 		 * @generated
< 		 */
< 		public CreateRoundedRectangle_3004Command(CreateElementRequest req) {
< 			super(req);
< 		}
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EClass getEClassToEdit() {
< 			return GMFGraphPackage.eINSTANCE.getRectangle();
< 		};
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EObject getElementToEdit() {
< 			EObject container = ((CreateElementRequest) getRequest()).getContainer();
< 			if (container instanceof View) {
< 				container = ((View) container).getElement();
< 			}
< 			return container;
< 		}
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	private static class CreatePolyline_3005Command extends CreateElementCommand {
< 
< 		/**
< 		 * @generated
< 		 */
< 		public CreatePolyline_3005Command(CreateElementRequest req) {
< 			super(req);
< 		}
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EClass getEClassToEdit() {
< 			return GMFGraphPackage.eINSTANCE.getRectangle();
< 		};
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected EObject getElementToEdit() {
< 			EObject container = ((CreateElementRequest) getRequest()).getContainer();
< 			if (container instanceof View) {
< 				container = ((View) container).getElement();
< 			}
< 			return container;
< 		}
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
199,201c82,83
< 		return getMSLWrapper(new DestroyElementCommand(req) {
< 
< 			protected EObject getElementToDestroy() {
---
> 		CompoundCommand cc = new CompoundCommand();
> 		Collection allEdges = new ArrayList();
203,205c85,92
< 				EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
< 				if (annotation != null) {
< 					return view;
---
> 		allEdges.addAll(view.getSourceEdges());
> 		allEdges.addAll(view.getTargetEdges());
> 		for (Iterator it = allEdges.iterator(); it.hasNext();) {
> 			Edge nextEdge = (Edge) it.next();
> 			EditPart nextEditPart = (EditPart) getHost().getViewer().getEditPartRegistry().get(nextEdge);
> 			EditCommandRequestWrapper editCommandRequest = new EditCommandRequestWrapper(new DestroyElementRequest(((RectangleEditPart) getHost()).getEditingDomain(), req.isConfirmationRequired()),
> 					Collections.EMPTY_MAP);
> 			cc.add(nextEditPart.getCommand(editCommandRequest));
207,210c94,95
< 				return super.getElementToDestroy();
< 			}
< 
< 		});
---
> 		cc.add(getMSLWrapper(new DestroyElementCommand(req)));
> 		return cc;
218c103
< 			return req.getTarget() == null ? null : getCreateCompleteIncomingDiagramElement_Figure4001Command(req);
---
> 			return req.getTarget() == null ? null : getCreateCompleteIncomingDiagramElementFigure_4001Command(req);
226,227c111,114
< 	protected Command getCreateCompleteIncomingDiagramElement_Figure4001Command(CreateRelationshipRequest req) {
< 		if (!(req.getSource() instanceof DiagramElement)) {
---
> 	protected Command getCreateCompleteIncomingDiagramElementFigure_4001Command(CreateRelationshipRequest req) {
> 		EObject sourceEObject = req.getSource();
> 		EObject targetEObject = req.getTarget();
> 		if (false == sourceEObject instanceof DiagramElement || false == targetEObject instanceof FigureHandle) {
230,231c117,119
< 		DiagramElement element = (DiagramElement) req.getSource();
< 		if (element.getFigure() != null) {
---
> 		DiagramElement source = (DiagramElement) sourceEObject;
> 		FigureHandle target = (FigureHandle) targetEObject;
> 		if (!GMFGraphBaseItemSemanticEditPolicy.LinkConstraints.canCreateDiagramElementFigure_4001(source, target)) {
234c122
< 		SetRequest setReq = new SetRequest(req.getSource(), GMFGraphPackage.eINSTANCE.getDiagramElement_Figure(), req.getTarget());
---
> 		SetRequest setReq = new SetRequest(sourceEObject, GMFGraphPackage.eINSTANCE.getDiagramElement_Figure(), target);
236a125
> 
