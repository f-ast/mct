26a27
> import org.eclipse.emf.ecore.EValidator;
59a61
> import org.eclipse.ui.IEditorDescriptor;
68a71,72
> import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin;
> import org.eclipse.ui.part.FileEditorInput;
695c699,708
<     	IMarker marker = (markerMap != null) ? markerMap.getMap().get(diagnostic) : null;
---
>     	IMarker marker = null;
>     	if(markerMap != null) {
>         	if(!markerMap.getMap().containsKey(diagnostic) && 
>         			diagnostic == rootDiagnotic && !diagnostic.getChildren().isEmpty()) {
>         		// the root is usually just a wrapper containing real diagnostics with markers 
>         		// -> take the first one
>         		diagnostic = (Diagnostic)diagnostic.getChildren().get(0);
>         	}
>         	marker = markerMap.getMap().get(diagnostic);        	
>     	}    	
697,698d709
< 		IFile file = ValidationHelper.getFileFromDiagnostic(diagnostic);		
< 		if(file != null) {
707,708c718,722
< 				IEditorPart editorPart = IDE.openEditor(page, file, true);
< 				IGotoMarker gotoMarkerSupport = (editorPart != null) ? (IGotoMarker)editorPart.getAdapter(IGotoMarker.class) : null;
---
> 			// activate the problem view to			
> 			page.showView("org.eclipse.ui.views.ProblemView"); //$NON-NLS-1$
> 		} catch (PartInitException e) {
> 			CodeGenUIPlugin.getDefault().getLog().log(e.getStatus());			
> 		} 
710c724,740
< 				if(gotoMarkerSupport != null && marker != null) {
---
> 		IFile file = ValidationHelper.getFileFromDiagnostic(diagnostic);		
> 		if(file != null) {
> 			try {
> 			    String editorId = "org.eclipse.ui.DefaultTextEditor"; //$NON-NLS-1$			   
> 			    IEditorPart editorPart = null;			    
> 			    if(marker == null || marker.getAttribute(EValidator.URI_ATTRIBUTE, null) != null) {
> 			    	IEditorDescriptor[] editorDescriptors = PlatformUI.getWorkbench()
> 						.getEditorRegistry().getEditors(file.getName());				    	
> 			    	if(editorDescriptors.length > 0) {
> 			    		editorId = editorDescriptors[0].getId();
> 			    	}
> 			    }
> 			    
> 			    editorPart = page.openEditor(new FileEditorInput(file), editorId, true, IWorkbenchPage.MATCH_INPUT | IWorkbenchPage.MATCH_ID);			    
> 				IGotoMarker gotoMarkerSupport = null;
> 				if(editorPart != null) {
> 					gotoMarkerSupport = (IGotoMarker)editorPart.getAdapter(IGotoMarker.class);
711a742,744
> 				}
> 
> 				if(gotoMarkerSupport != null && marker != null) {
714,716d746
< 				} else {
< 					// no marker support or target marker is available
< 					return;
719,722d748
< 				// activate the problem view to 
< 				PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()
< 					.showView("org.eclipse.ui.views.ProblemView"); //$NON-NLS-1$
< 				
