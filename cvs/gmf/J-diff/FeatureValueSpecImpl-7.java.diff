15c15
< import org.eclipse.emf.ecore.util.EcoreUtil;
---
> import org.eclipse.gmf.mappings.FeatureInitializer;
116,146d115
< 	public NotificationChain basicSetFeatureSeqInitializer(FeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs) {
< 		msgs = eBasicSetContainer((InternalEObject)newFeatureSeqInitializer, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
< 		return msgs;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setFeatureSeqInitializer(FeatureSeqInitializer newFeatureSeqInitializer) {
< 		if (newFeatureSeqInitializer != eInternalContainer() || (eContainerFeatureID != GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER && newFeatureSeqInitializer != null)) {
< 			if (EcoreUtil.isAncestor(this, newFeatureSeqInitializer))
< 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
< 			NotificationChain msgs = null;
< 			if (eInternalContainer() != null)
< 				msgs = eBasicRemoveFromContainer(msgs);
< 			if (newFeatureSeqInitializer != null)
< 				msgs = ((InternalEObject)newFeatureSeqInitializer).eInverseAdd(this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS, FeatureSeqInitializer.class, msgs);
< 			msgs = basicSetFeatureSeqInitializer(newFeatureSeqInitializer, msgs);
< 			if (msgs != null) msgs.dispatch();
< 		}
< 		else if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, newFeatureSeqInitializer, newFeatureSeqInitializer));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
152c121
< 				return basicSetFeatureSeqInitializer((FeatureSeqInitializer)otherEnd, msgs);
---
> 				return eBasicSetContainer(otherEnd, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
165c134
< 				return basicSetFeatureSeqInitializer(null, msgs);
---
> 				return eBasicSetContainer(null, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
209,211d177
< 			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
< 				setFeatureSeqInitializer((FeatureSeqInitializer)newValue);
< 				return;
226,228d191
< 			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
< 				setFeatureSeqInitializer((FeatureSeqInitializer)null);
< 				return;
247a211,242
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
> 		if (baseClass == FeatureInitializer.class) {
> 			switch (derivedFeatureID) {
> 				case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE: return GMFMapPackage.FEATURE_INITIALIZER__FEATURE;
> 				case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER: return GMFMapPackage.FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER;
> 				default: return -1;
> 			}
> 		}
> 		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
> 		if (baseClass == FeatureInitializer.class) {
> 			switch (baseFeatureID) {
> 				case GMFMapPackage.FEATURE_INITIALIZER__FEATURE: return GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE;
> 				case GMFMapPackage.FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER: return GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER;
> 				default: return -1;
> 			}
> 		}
> 		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
> 	}
> 
