14a15
> import java.util.Collections;
16c17
< import java.util.Iterator;
---
> import java.util.Map;
81,82c82
< 			for(Iterator it = getEditingDomain().getResourceSet().getResources().iterator(); it.hasNext(); ) {
< 				Resource next = (Resource) it.next();
---
> 			for(Resource next : getEditingDomain().getResourceSet().getResources()) {
95c95,102
< 		myDiagramDisplayer.save(monitor);
---
> 		myDiagramDisplayer.save(getSaveOptions(), monitor);
> 	}
> 
> 	/**
> 	 * Returns the options with which the resources will be saved. Subclasses should override.
> 	 */
> 	protected Map<?, ?> getSaveOptions() {
> 		return Collections.emptyMap();
349,350c356,357
< 				for(Iterator it = resourceSet.getResources().iterator(); it.hasNext(); ) {
< 					((Resource) it.next()).setTrackingModification(true);
---
> 				for(Resource next : resourceSet.getResources()) {
> 					next.setTrackingModification(true);
353a361
> 
366,368c374,376
< 					Collection resources = (Collection) msg.getNewValue();
< 					for(Iterator it = resources.iterator(); it.hasNext(); ) {
< 						((Resource) it.next()).setTrackingModification(true);
---
> 					@SuppressWarnings("unchecked") Collection<Resource> resources = (Collection<Resource>) msg.getNewValue();
> 					for(Resource next : resources) {
> 						next.setTrackingModification(true);
