53d52
< import org.eclipse.gmf.codegen.gmfgen.Updater;
129,131d127
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getDiagramUpdaterClassName <em>Diagram Updater Class Name</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getNodeDescriptorClassName <em>Node Descriptor Class Name</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getLinkDescriptorClassName <em>Link Descriptor Class Name</em>}</li>
1380,1439d1375
< 	 * The default value of the '{@link #getDiagramUpdaterClassName() <em>Diagram Updater Class Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getDiagramUpdaterClassName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final String DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT = null;
< 
< 	/**
< 	 * The cached value of the '{@link #getDiagramUpdaterClassName() <em>Diagram Updater Class Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getDiagramUpdaterClassName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected String diagramUpdaterClassName = DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT;
< 
< 	/**
< 	 * The default value of the '{@link #getNodeDescriptorClassName() <em>Node Descriptor Class Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getNodeDescriptorClassName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final String NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;
< 
< 	/**
< 	 * The cached value of the '{@link #getNodeDescriptorClassName() <em>Node Descriptor Class Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getNodeDescriptorClassName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected String nodeDescriptorClassName = NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT;
< 
< 	/**
< 	 * The default value of the '{@link #getLinkDescriptorClassName() <em>Link Descriptor Class Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getLinkDescriptorClassName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final String LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT = null;
< 
< 	/**
< 	 * The cached value of the '{@link #getLinkDescriptorClassName() <em>Link Descriptor Class Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getLinkDescriptorClassName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected String linkDescriptorClassName = LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT;
< 
< 	/**
2523,2609d2458
< 	public String getDiagramUpdaterClassNameGen() {
< 		return diagramUpdaterClassName;
< 	}
< 
< 	public String getDiagramUpdaterClassName() {
< 		String value = getDiagramUpdaterClassNameGen();
< 		if(isEmpty(value)) {
< 			value = getDomainPackageCapName() + "DiagramUpdater"; //$NON-NLS-1$						
< 		}
< 		return value;		
< 	}
< 	
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setDiagramUpdaterClassName(String newDiagramUpdaterClassName) {
< 		String oldDiagramUpdaterClassName = diagramUpdaterClassName;
< 		diagramUpdaterClassName = newDiagramUpdaterClassName;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME, oldDiagramUpdaterClassName, diagramUpdaterClassName));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String getNodeDescriptorClassNameGen() {
< 		return nodeDescriptorClassName;
< 	}
< 	
< 	public String getNodeDescriptorClassName() {
< 		String value = getNodeDescriptorClassNameGen();
< 		if(isEmpty(value)) {
< 			value = getDomainPackageCapName() + "NodeDescriptor"; //$NON-NLS-1$						
< 		}
< 		return value;		
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setNodeDescriptorClassName(String newNodeDescriptorClassName) {
< 		String oldNodeDescriptorClassName = nodeDescriptorClassName;
< 		nodeDescriptorClassName = newNodeDescriptorClassName;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME, oldNodeDescriptorClassName, nodeDescriptorClassName));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String getLinkDescriptorClassNameGen() {
< 		return linkDescriptorClassName;
< 	}
< 	
< 	public String getLinkDescriptorClassName() {
< 		String value = getLinkDescriptorClassNameGen();
< 		if(isEmpty(value)) {
< 			value = getDomainPackageCapName() + "LinkDescriptor"; //$NON-NLS-1$						
< 		}
< 		return value;		
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setLinkDescriptorClassName(String newLinkDescriptorClassName) {
< 		String oldLinkDescriptorClassName = linkDescriptorClassName;
< 		linkDescriptorClassName = newLinkDescriptorClassName;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME, oldLinkDescriptorClassName, linkDescriptorClassName));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
3981,3986d3829
< 			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
< 				return getDiagramUpdaterClassName();
< 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
< 				return getNodeDescriptorClassName();
< 			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
< 				return getLinkDescriptorClassName();
4209,4217d4051
< 			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
< 				setDiagramUpdaterClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
< 				setNodeDescriptorClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
< 				setLinkDescriptorClassName((String)newValue);
< 				return;
4448,4456d4281
< 			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
< 				setDiagramUpdaterClassName(DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
< 				setNodeDescriptorClassName(NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
< 				setLinkDescriptorClassName(LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT);
< 				return;
4624,4629d4448
< 			case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME:
< 				return DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT == null ? diagramUpdaterClassName != null : !DIAGRAM_UPDATER_CLASS_NAME_EDEFAULT.equals(diagramUpdaterClassName);
< 			case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME:
< 				return NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT == null ? nodeDescriptorClassName != null : !NODE_DESCRIPTOR_CLASS_NAME_EDEFAULT.equals(nodeDescriptorClassName);
< 			case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME:
< 				return LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT == null ? linkDescriptorClassName != null : !LINK_DESCRIPTOR_CLASS_NAME_EDEFAULT.equals(linkDescriptorClassName);
4763,4770d4581
< 		if (baseClass == Updater.class) {
< 			switch (derivedFeatureID) {
< 				case GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME: return GMFGenPackage.UPDATER__DIAGRAM_UPDATER_CLASS_NAME;
< 				case GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.UPDATER__NODE_DESCRIPTOR_CLASS_NAME;
< 				case GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.UPDATER__LINK_DESCRIPTOR_CLASS_NAME;
< 				default: return -1;
< 			}
< 		}
4883,4890d4693
< 		if (baseClass == Updater.class) {
< 			switch (baseFeatureID) {
< 				case GMFGenPackage.UPDATER__DIAGRAM_UPDATER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__DIAGRAM_UPDATER_CLASS_NAME;
< 				case GMFGenPackage.UPDATER__NODE_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__NODE_DESCRIPTOR_CLASS_NAME;
< 				case GMFGenPackage.UPDATER__LINK_DESCRIPTOR_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__LINK_DESCRIPTOR_CLASS_NAME;
< 				default: return -1;
< 			}
< 		}
5158,5184d4960
< 	 * @generated NOT
< 	 */
< 	public String getDiagramUpdaterQualifiedClassName() {
< 		return getEditorPackageName() + '.' + getDiagramUpdaterClassName();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated NOT
< 	 */
< 	public String getNodeDescriptorQualifiedClassName() {
< 		return getEditorPackageName() + '.' + getNodeDescriptorClassName();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated NOT
< 	 */
< 	public String getLinkDescriptorQualifiedClassName() {
< 		return getEditorPackageName() + '.' + getLinkDescriptorClassName();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
5316,5321d5091
< 		result.append(", diagramUpdaterClassName: ");
< 		result.append(diagramUpdaterClassName);
< 		result.append(", nodeDescriptorClassName: ");
< 		result.append(nodeDescriptorClassName);
< 		result.append(", linkDescriptorClassName: ");
< 		result.append(linkDescriptorClassName);
