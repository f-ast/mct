14a15,17
> import java.awt.print.PageFormat;
> import java.awt.print.Paper;
> import java.awt.print.PrinterJob;
17a21,27
> import org.eclipse.draw2d.geometry.PrecisionPoint;
> import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.DefaultValues;
> import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.ILabels;
> import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.PageSetupPageType;
> import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.PageSetupWidgetFactory;
> import org.eclipse.gmf.runtime.diagram.ui.internal.properties.WorkspaceViewerProperties;
> import org.eclipse.gmf.runtime.diagram.ui.preferences.PrintingPreferencePage;
19a30,31
> import org.eclipse.swt.events.FocusEvent;
> import org.eclipse.swt.events.FocusListener;
36,42d47
< import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.DefaultValues;
< import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.ILabels;
< import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.PageSetupPageType;
< import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.PageSetupWidgetFactory;
< import org.eclipse.gmf.runtime.diagram.ui.internal.properties.WorkspaceViewerProperties;
< import org.eclipse.gmf.runtime.diagram.ui.preferences.PrintingPreferencePage;
< 
392a398,406
> 	 * Determine if the current set of units are in inches.
> 	 *  	
> 	 * @return true if the current units are in inches.
> 	 */
> 	private boolean isUnitsInInch() {
> 		return (fCurrentUnit.startsWith("inc")); //$NON-NLS-1$
> 	}
> 	
> 	/** 
411a426,444
> 		
> 		fTextMarginTop.addFocusListener(new FocusListener() {
> 
> 			public void focusGained(FocusEvent e) {
> 				// do nothing.
> 			}
> 
> 			public void focusLost(FocusEvent e) {
> 				double marginTop = getDblFromString(fTextMarginTop.getText());
> 				double minimumTop = DefaultValues.MINIMUM_MARGIN_TOP;
> 				if (!isUnitsInInch()) {
> 					marginTop = fConvertor.convertMilimToInches(marginTop);
> 					minimumTop = fConvertor.convertInchesToMilim(minimumTop);
> 				}
> 				if (marginTop < DefaultValues.MINIMUM_MARGIN_TOP) {
> 					fTextMarginTop.setText(fNumberFormat.format(minimumTop));
> 				}
> 			}
> 		});
417a451
> 			
419a454,472
> 		fTextMarginBottom.addFocusListener(new FocusListener() {
> 			public void focusGained(FocusEvent e) {
> 				// do nothing.
> 			}
> 			/**
> 			 * Ensure we have minimum margins set.
> 			 */
> 			public void focusLost(FocusEvent e) {
> 				double marginBottom = getDblFromString(fTextMarginBottom.getText());
> 				double minimumBottom = DefaultValues.MINIMUM_MARGIN_BOTTOM;
> 				if (!isUnitsInInch()) {
> 					marginBottom = fConvertor.convertMilimToInches(marginBottom);
> 					minimumBottom = fConvertor.convertInchesToMilim(minimumBottom);
> 				}
> 				if (marginBottom < DefaultValues.MINIMUM_MARGIN_BOTTOM) {
> 					fTextMarginBottom.setText(fNumberFormat.format(minimumBottom));
> 				}
> 			}
> 		});
427a481,500
> 
> 		fTextMarginLeft.addFocusListener(new FocusListener() {
> 			public void focusGained(FocusEvent e) {
> 				// do nothing.
> 			}
> 			/**
> 			 * Ensure we have minimum margins set.
> 			 */
> 			public void focusLost(FocusEvent e) {
> 				double marginLeft = getDblFromString(fTextMarginLeft.getText());
> 				double minimumLeft = DefaultValues.MINIMUM_MARGIN_LEFT;
> 				if (!isUnitsInInch()) {
> 					marginLeft = fConvertor.convertMilimToInches(marginLeft);
> 					minimumLeft = fConvertor.convertInchesToMilim(minimumLeft);
> 				}
> 				if (marginLeft < DefaultValues.MINIMUM_MARGIN_LEFT) {
> 					fTextMarginLeft.setText(fNumberFormat.format(minimumLeft));
> 				}
> 			}
> 		});
435a509,527
> 		fTextMarginRight.addFocusListener(new FocusListener() {
> 			public void focusGained(FocusEvent e) {
> 				// do nothing.
> 			}
> 			/**
> 			 * Ensure we have minimum margins set.
> 			 */
> 			public void focusLost(FocusEvent e) {
> 				double marginRight = getDblFromString(fTextMarginRight.getText());
> 				double minimumRight = DefaultValues.MINIMUM_MARGIN_RIGHT;
> 				if (!isUnitsInInch()) {
> 					marginRight = fConvertor.convertMilimToInches(marginRight);
> 					minimumRight = fConvertor.convertInchesToMilim(minimumRight);
> 				}
> 				if (marginRight < DefaultValues.MINIMUM_MARGIN_RIGHT) {
> 					fTextMarginRight.setText(fNumberFormat.format(minimumRight));
> 				}
> 			}
> 		});
831c923
< 				if (fCurrentUnit.startsWith("inc")) { //$NON-NLS-1$
---
> 				if (isUnitsInInch()) { 
