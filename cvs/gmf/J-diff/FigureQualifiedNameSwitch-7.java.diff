2c2
<  * Copyright (c) 2005 Borland Software Corporation
---
>  * Copyright (c) 2006 Borland Software Corporation
14,31c14
< import org.eclipse.gmf.gmfgraph.BorderLayout;
< import org.eclipse.gmf.gmfgraph.CustomClass;
< import org.eclipse.gmf.gmfgraph.Ellipse;
< import org.eclipse.gmf.gmfgraph.FlowLayout;
< import org.eclipse.gmf.gmfgraph.GridLayout;
< import org.eclipse.gmf.gmfgraph.GridLayoutData;
< import org.eclipse.gmf.gmfgraph.Label;
< import org.eclipse.gmf.gmfgraph.LabeledContainer;
< import org.eclipse.gmf.gmfgraph.Polygon;
< import org.eclipse.gmf.gmfgraph.PolygonDecoration;
< import org.eclipse.gmf.gmfgraph.Polyline;
< import org.eclipse.gmf.gmfgraph.PolylineConnection;
< import org.eclipse.gmf.gmfgraph.PolylineDecoration;
< import org.eclipse.gmf.gmfgraph.Rectangle;
< import org.eclipse.gmf.gmfgraph.RoundedRectangle;
< import org.eclipse.gmf.gmfgraph.StackLayout;
< import org.eclipse.gmf.gmfgraph.XYLayout;
< import org.eclipse.gmf.gmfgraph.XYLayoutData;
---
> import org.eclipse.emf.ecore.EObject;
33a17,26
>  * FigureQualifiedNameSwitch serves to substitute base implementation class names for 
>  * figures defined in GMFGraph. Namely, we use this switch to provide different
>  * implementation for some classes available in gmf-runtime (e.g. {@link RuntimeFQNSwitch})
>  * This is (almost) marker for GMFGraphSwitch that imposes additional obligations:
>  * <ul>
>  * <li> doSwitch(FigureGallery) provides String[] of additional plug-ins figure classes depend on
>  * (XXX) decide whether org.eclipse.draw2d should be included there.
>  * <li> doSwitch(any other GMFGraph object) returns fully-qualified class name, if known.
>  * (XXX) tell about behavior with wrong arguments
>  * </ul>
35d27
<  *
37,89c29
< public class FigureQualifiedNameSwitch extends GMFGraphSwitch {
< 
< 	public Object caseCustomClass(CustomClass object) {
< 		return object.getQualifiedClassName();
< 	}
< 
< 	public Object caseGridLayout(GridLayout object) {
< 		return "org.eclipse.gmf.internal.codegen.draw2d.GridLayout";
< 	}
< 
< 	public Object caseGridLayoutData(GridLayoutData object) {
< 		return "org.eclipse.gmf.internal.codegen.draw2d.GridLayoutData";
< 	}
< 	
< 	public Object caseFlowLayout(FlowLayout object) {
< 		return object.isForceSingleLine() ? "org.eclipse.draw2d.ToolbarLayout" : "org.eclipse.draw2d.FlowLayout";
< 	}
< 	
< 	public Object caseXYLayout(XYLayout object) {
< 		return "org.eclipse.draw2d.XYLayout";
< 	}
< 	
< 	public Object caseXYLayoutData(XYLayoutData object) {
< 		return "org.eclipse.draw2d.geometry.Rectangle";
< 	}
< 	
< 	public Object caseStackLayout(StackLayout object) {
< 		return "org.eclipse.draw2d.StackLayout";
< 	}
< 
< 	public Object caseBorderLayout(BorderLayout object) {
< 		return "org.eclipse.draw2d.BorderLayout";
< 	}
< 
< 	public Object caseLabel(Label object) {
< 		return "org.eclipse.draw2d.Label"; //$NON-NLS-1$
< 	}
< 
< 	public Object caseLabeledContainer(LabeledContainer object) {
< 		return "org.eclipse.draw2d.LabeledContainer"; //$NON-NLS-1$
< 	}
< 
< 	public Object caseRectangle(Rectangle object) {
< 		return "org.eclipse.draw2d.RectangleFigure"; //$NON-NLS-1$
< 	}
< 
< 	public Object caseRoundedRectangle(RoundedRectangle object) {
< 		return "org.eclipse.draw2d.RoundedRectangle"; //$NON-NLS-1$
< 	}
< 
< 	public Object caseEllipse(Ellipse object) {
< 		return "org.eclipse.draw2d.Ellipse"; //$NON-NLS-1$
< 	}
---
> public interface FigureQualifiedNameSwitch {
91,109c31
< 	public Object casePolygon(Polygon object) {
< 		return "org.eclipse.draw2d.Polygon"; //$NON-NLS-1$
< 	}
< 
< 	public Object casePolygonDecoration(PolygonDecoration object) {
< 		return "org.eclipse.draw2d.PolygonDecoration"; //$NON-NLS-1$
< 	}
< 
< 	public Object casePolyline(Polyline object) {
< 		return "org.eclipse.draw2d.Polyline"; //$NON-NLS-1$
< 	}
< 
< 	public Object casePolylineDecoration(PolylineDecoration object) {
< 		return "org.eclipse.draw2d.PolylineDecoration"; //$NON-NLS-1$
< 	}
< 
< 	public Object casePolylineConnection(PolylineConnection object) {
< 		return "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx"; //$NON-NLS-1$
< 	}
---
> 	Object doSwitch(EObject theEObject);
