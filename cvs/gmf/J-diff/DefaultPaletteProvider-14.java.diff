34a35
> import org.eclipse.gmf.runtime.common.ui.util.ActivityUtil;
50,54d50
< import org.eclipse.ui.IPluginContribution;
< import org.eclipse.ui.PlatformUI;
< import org.eclipse.ui.activities.IIdentifier;
< import org.eclipse.ui.activities.IWorkbenchActivitySupport;
< import org.eclipse.ui.activities.WorkbenchActivityHelper;
157c153
<                 if (areActivitiesEnabled(descriptor.getID(), pluginID)) {
---
>                 if (ActivityUtil.isEnabled(descriptor.getID(), pluginID)) {
715,749d710
<     /**
<      * Checks if there are activities that have been matched to the plug-in or
<      * id in which the item has been contributed and if at least one of those
<      * matching activities are enabled.
<      * 
<      * @return true if at least one matching activity is enabled
<      */
<     private static boolean areActivitiesEnabled(final String paletteEntryID, final String pluginID) {
<         // Note: This is a duplicate of the areActivitiesEnabled() method in
<         // org.eclipse.gmf.runtime.common.ui.services.util.ActivityFilterProviderDescriptor.
<         
<         if (!WorkbenchActivityHelper.isFiltering())
<             return true;
< 
<         IWorkbenchActivitySupport workbenchActivitySupport = PlatformUI
<             .getWorkbench().getActivitySupport();
<         IIdentifier id = workbenchActivitySupport.getActivityManager()
<             .getIdentifier(
<                 WorkbenchActivityHelper
<                     .createUnifiedId(new IPluginContribution() {
< 
<                         public String getLocalId() {
<                             return paletteEntryID;
<                         }
< 
<                         public String getPluginId() {
<                             return pluginID;
<                         }
<                     }));
<         if (id != null && !id.isEnabled()) {
<             return false;
<         }
< 
<         return true;
<     }
