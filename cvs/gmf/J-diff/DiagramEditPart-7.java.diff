14,15d13
< import java.beans.PropertyChangeEvent;
< import java.beans.PropertyChangeListener;
22d19
< import org.eclipse.draw2d.FigureListener;
25a23
> import org.eclipse.draw2d.LayoutListener;
50a49
> import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.PageBreakEditPart;
59a59
> import org.eclipse.jface.preference.IPreferenceStore;
72d71
< 	
74d72
< 	
109a108,121
> 	/**
> 	 * @author mmostafa
> 	 * PageBreaksLayoutListener Listens to post layout so it can update the page breaks  
> 	 */
> 	private class PageBreaksLayoutListener extends LayoutListener.Stub {
> 
> 		public void postLayout(IFigure container) {
> 			super.postLayout(container);
> 			updatePageBreaksLocation();
> 		}
> 		
> 		
> 	}
> 
146d157
< 			
160c171
< 
---
> 		f.addLayoutListener(new PageBreaksLayoutListener());
259,277d269
< 
< 		// Fired when figures are added or moved on the diagram			
< 		child.addFigureListener(new FigureListener() {
< 			public void figureMoved(IFigure source) {
< 				updatePageBreaksLocation();
< 			}
< 		});
< 
< 		// Fired when figures are to be deleted on the diagram
< 		child.addPropertyChangeListener(new PropertyChangeListener() {
< 			public void propertyChange(PropertyChangeEvent evt) {
< 				String pName = evt.getPropertyName();
< 				Object newValue = evt.getNewValue();
< 				if (pName == "parent" && newValue == null) { //$NON-NLS-1$
< 					shouldUpdatePageBreakLocation = true;
< 					//updatePageBreaksLocation();
< 				}
< 			}
< 		});
287,288c279,282
< 
< 		if (((DiagramRootEditPart) getRoot()).getWorkspaceViewerPreferences() == null)
---
> 		// do not update unless we really need to
> 		PageBreakEditPart pagebreakEditpart = ((DiagramRootEditPart)getRoot()).getPageBreakEditPart();
> 		if (pagebreakEditpart == null ||
> 			pagebreakEditpart.getFigure().isVisible())
290,295c284
< 
< 		((DiagramRootEditPart) getRoot())
< 		.getPageBreakEditPart()
< 		.resize(
< 		getChildrenBounds());
< 		
---
> 		pagebreakEditpart.resize(getChildrenBounds());
383d371
< 
