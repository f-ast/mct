11a12
> import org.eclipse.emf.common.util.BasicEList;
15a17
> import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
44c46
< 	protected EList genNodes = null;
---
> 	protected EList<GenNode> genNodes = null;
54c56
< 	protected EList genLinks = null;
---
> 	protected EList<GenLink> genLinks = null;
69a72
> 	@Override
79c82
< 	public EList getGenNodes() {
---
> 	public EList<GenNode> getGenNodes() {
81c84
< 			genNodes = new EObjectResolvingEList(GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
---
> 			genNodes = new EObjectResolvingEList<GenNode>(GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
91c94
< 	public EList getGenLinks() {
---
> 	public EList<GenLink> getGenLinks() {
93c96
< 			genLinks = new EObjectResolvingEList(GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
---
> 			genLinks = new EObjectResolvingEList<GenLink>(GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
103c106,107
< 	public EList getElements() {
---
> 	public EList<GenCommonBase> getElements() {
> 		EList<? extends GenCommonBase> picked;
105c109,111
< 			return getGenLinks();
---
> 			picked = getGenLinks();
> 		} else {
> 			picked = getGenNodes();
107c113
< 		return getGenNodes();
---
> 		return new BasicEList.UnmodifiableEList<GenCommonBase>(picked.size(), picked.toArray());
114a121
> 	@Override
131a139,140
> 	@SuppressWarnings("unchecked")
> 		@Override
136c145
< 				getGenNodes().addAll((Collection)newValue);
---
> 				getGenNodes().addAll((Collection<? extends GenNode>)newValue);
140c149
< 				getGenLinks().addAll((Collection)newValue);
---
> 				getGenLinks().addAll((Collection<? extends GenLink>)newValue);
150a160
> 	@Override
167a178
> 	@Override
