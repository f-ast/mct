16a17
> import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
378a380
> 		requiredPlugins.addAll(getMetricsRequiredPluginIDs());
428,429c430,437
< 		if(getDiagram().isValidationEnabled() || (getEditorGen().getAudits() != null && !getEditorGen().getAudits().getAllAuditRules().isEmpty())) {
< 			return Collections.singleton("org.eclipse.emf.validation"); //$NON-NLS-1$ 
---
> 		if(getDiagram().isValidationEnabled() || getEditorGen().hasAudits()) {
> 			HashSet pluginIDs = new HashSet();			
> 			pluginIDs.add("org.eclipse.emf.validation"); //$NON-NLS-1$
> 			
> 			if(getEditorGen().getAudits() != null) {
> 				collectGenPackagesRequiredPluginIDs(getEditorGen().getAudits().getAllTargetedModelPackages(), pluginIDs);
> 			}			
> 			return pluginIDs;
433a442,457
> 	private Set getMetricsRequiredPluginIDs() {
> 		if(getEditorGen().getMetrics() != null) {
> 			HashSet pluginIDs = new HashSet();
> 			collectGenPackagesRequiredPluginIDs(getEditorGen().getMetrics().getAllTargetedModelPackages(), pluginIDs);
> 			return pluginIDs;
> 		}
> 		return Collections.EMPTY_SET;
> 	}	
> 	
> 	private void collectGenPackagesRequiredPluginIDs(Collection/*GenPackage*/ genPackages, Set/*String*/ pluginIDs) {
> 		for (Iterator it = genPackages.iterator(); it.hasNext();) {
> 			GenPackage nextPackage = (GenPackage) it.next();
> 			pluginIDs.add(nextPackage.getGenModel().getModelPluginID());
> 		}
> 	}	
> 
