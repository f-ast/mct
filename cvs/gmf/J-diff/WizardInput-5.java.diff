18a19,20
> import org.eclipse.core.resources.IWorkspace;
> import org.eclipse.core.runtime.IPath;
39a42
> import org.eclipse.gmf.tooldef.GMFToolFactory;
57a61
> 	private boolean myIsBlankToolDef = false;
100a105,127
> 	public boolean isNewBlankToolDef() {
> 		return myIsBlankToolDef;
> 	}
> 
> 	public URI createBlankToolDef() {
> 		checkUnload(myRegistry);
> 		myRegistry = null;
> 		IPath toolDefFile = getMappingFile().getFullPath().removeFileExtension().addFileExtension("gmftool");
> 		String baseName = getMappingFile().getFullPath().removeFileExtension().lastSegment();
> 		int i = 1;
> 		final IWorkspace wr = getMappingFile().getProject().getWorkspace(); 
> 		while (wr.getRoot().findMember(toolDefFile) != null) {
> 			toolDefFile = toolDefFile.removeLastSegments(1).append(baseName + i).addFileExtension("gmftool");
> 			i++;
> 		}
> 		URI toolDefURI = URI.createPlatformResourceURI(toolDefFile.toString());
> 		myRegistry = GMFToolFactory.eINSTANCE.createToolRegistry();
> 		myRegistry.setPalette(GMFToolFactory.eINSTANCE.createPalette());
> 		getResourceSet().createResource(toolDefURI).getContents().add(myRegistry);
> 		myIsBlankToolDef  = true;
> 		return toolDefURI;
> 	}
> 
103a131
> 		myIsBlankToolDef = false;
173c201
< 		myFeeder = new MapDefFeeder(this);
---
> 		myFeeder = new MapDefFeeder(this, createToolDefSupplier());
176a205,212
> 	private ToolDefSupplier createToolDefSupplier() {
> 		if (isNewBlankToolDef()) {
> 			return new CreateToolDef(getToolDef());
> 		} else {
> 			return new ToolDefLookup(getToolDef());
> 		}
> 	}
> 
