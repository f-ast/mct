17a18,19
> import org.eclipse.core.runtime.IStatus;
> import org.eclipse.core.runtime.Status;
23a26
> import org.eclipse.gmf.internal.codegen.CodeGenUIPlugin;
24a28,29
> import org.eclipse.jface.dialogs.MessageDialog;
> import org.eclipse.jface.dialogs.MessageDialogWithToggle;
26a32
> import org.eclipse.jface.preference.IPreferenceStore;
28a35
> import org.eclipse.swt.widgets.Shell;
32d38
< 
34a41
>  * 
37a45,48
> 
> 	private static final String ASK_INFO = "ask_info";
> 	private static final String ASK_OK = "ask_ok";
> 
38a50
> 
40a53,54
> 	private IStatus myRunStatus;
> 
46a61
> 			myRunStatus = Status.CANCEL_STATUS;
47a63,77
> 
> 			if (getRunStatus().isOK()) {
> 				if (!MessageDialogWithToggle.ALWAYS.equals(getPreferences().getString(ASK_OK))) {
> 					MessageDialogWithToggle.openInformation(getShell(), getStatusDialogTitle(), CodeGenUIPlugin.getBundleString("generatecode.ok"), CodeGenUIPlugin.getBundleString("generatecode.neveragain"), false, getPreferences(), ASK_OK);
> 				}
> 			} else if ((myRunStatus.getSeverity() & IStatus.ERROR) != 0) {
> 				CodeGenUIPlugin.getDefault().getLog().log(getRunStatus());
> 				MessageDialog.openError(getShell(), getStatusDialogTitle(), formatMessage("generatecode.err", getRunStatus()));
> 			} else if ((myRunStatus.getSeverity() & IStatus.WARNING) != 0) {
> 				MessageDialog.openWarning(getShell(), getStatusDialogTitle(), formatMessage("generatecode.warn", getRunStatus()));
> 			} else if ((myRunStatus.getSeverity() & IStatus.INFO) != 0) {
> 				if (!MessageDialogWithToggle.ALWAYS.equals(getPreferences().getString(ASK_INFO))) {
> 					MessageDialogWithToggle.openInformation(getShell(), getStatusDialogTitle(), formatMessage("generatecode.info", getRunStatus()), CodeGenUIPlugin.getBundleString("generatecode.neveragain"), false, getPreferences(), ASK_INFO);
> 				}
> 			}
61a92,96
> 		myRunStatus = g.getRunStatus();
> 	}
> 
> 	private String getStatusDialogTitle() {
> 		return CodeGenUIPlugin.getBundleString("generatecode.status.title");
73a109,136
> 	private String formatMessage(String bundleStringKey, IStatus status) {
> 		if (status.isMultiStatus()) {
> 			IStatus[] children = status.getChildren();
> 			StringBuffer sb = new StringBuffer();
> 			// don't care about too nested statuses just because will switch to
> 			// jobs soon, with
> 			// required support already in place
> 			for (int i = 0; i < children.length; i++) {
> 				sb.append(children[i].getMessage());
> 				sb.append('\n');
> 			}
> 			return CodeGenUIPlugin.getBundleString(bundleStringKey, new Object[] { sb.toString() });
> 		} else {
> 			return CodeGenUIPlugin.getBundleString(bundleStringKey, new Object[] { status.getMessage() });
> 		}
> 	}
> 
> 	private IStatus getRunStatus() {
> 		return myRunStatus;
> 	}
> 
> 	private static IPreferenceStore getPreferences() {
> 		return CodeGenUIPlugin.getDefault().getPreferenceStore();
> 	}
> 
> 	private Shell getShell() {
> 		return myPart.getSite().getShell();
> 	}
