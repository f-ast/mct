17a18
> import org.eclipse.gmf.gmfgraph.Polyline;
37a39,41
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polygon2EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polygon3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.PolygonEditPart;
46a51,52
> import org.eclipse.gmf.graphdef.editor.expressions.GMFGraphAbstractExpression;
> import org.eclipse.gmf.graphdef.editor.expressions.GMFGraphOCLFactory;
66a73,87
> 	private static GMFGraphAbstractExpression Polyline_3014_Constraint;
> 
> 	/**
> 	 * @generated
> 	 */
> 	private static GMFGraphAbstractExpression Polyline_3017_Constraint;
> 
> 	/**
> 	 * @generated
> 	 */
> 	private static GMFGraphAbstractExpression Polyline_3021_Constraint;
> 
> 	/**
> 	 * @generated
> 	 */
159c180
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3017((Polyline) domainElement)) {
161a183,185
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return Polygon2EditPart.VISUAL_ID;
> 			}
173c197
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
175a200,202
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
187c214
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
189a217,219
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
201c231
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
203a234,236
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
215c248
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
217a251,253
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
223a260,264
> 		case PolygonEditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getPoint().isSuperTypeOf(domainElement.eClass())) {
> 				return PointEditPart.VISUAL_ID;
> 			}
> 			break;
234c275
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
236a278,280
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
248c292
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
250a295,297
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
256a304,308
> 		case Polygon2EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getPoint().isSuperTypeOf(domainElement.eClass())) {
> 				return PointEditPart.VISUAL_ID;
> 			}
> 			break;
267c319
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
269a322,324
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
281c336
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
283a339,341
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
295c353
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3014((Polyline) domainElement)) {
297a356,358
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return PolygonEditPart.VISUAL_ID;
> 			}
303a365,369
> 		case Polygon3EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getPoint().isSuperTypeOf(domainElement.eClass())) {
> 				return PointEditPart.VISUAL_ID;
> 			}
> 			break;
317c383
< 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass()) && isPolyline_3021((Polyline) domainElement)) {
319a386,388
> 			if (GMFGraphPackage.eINSTANCE.getPolygon().isSuperTypeOf(domainElement.eClass())) {
> 				return Polygon3EditPart.VISUAL_ID;
> 			}
405a475,477
> 			if (Polygon2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
419a492,494
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
433a509,511
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
447a526,528
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
461a543,545
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
467a552,556
> 		case PolygonEditPart.VISUAL_ID:
> 			if (PointEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
480a570,572
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
494a587,589
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
500a596,600
> 		case Polygon2EditPart.VISUAL_ID:
> 			if (PointEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
513a614,616
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
527a631,633
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
541a648,650
> 			if (PolygonEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
547a657,661
> 		case Polygon3EditPart.VISUAL_ID:
> 			if (PointEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
563a678,680
> 			if (Polygon3EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
605a723,755
> 	/**
> 	 * @generated
> 	 */
> 	private static boolean isPolyline_3014(Polyline domainElement) {
> 		if (Polyline_3014_Constraint == null) { // lazy initialization
> 			Polyline_3014_Constraint = GMFGraphOCLFactory.getExpression("not oclIsKindOf(gmfgraph::Polygon)", GMFGraphPackage.eINSTANCE.getPolyline()); //$NON-NLS-1$
> 		}
> 		Object result = Polyline_3014_Constraint.evaluate(domainElement);
> 		return result instanceof Boolean && ((Boolean) result).booleanValue();
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	private static boolean isPolyline_3017(Polyline domainElement) {
> 		if (Polyline_3017_Constraint == null) { // lazy initialization
> 			Polyline_3017_Constraint = GMFGraphOCLFactory.getExpression("not oclIsKindOf(gmfgraph::Polygon)", GMFGraphPackage.eINSTANCE.getPolyline()); //$NON-NLS-1$
> 		}
> 		Object result = Polyline_3017_Constraint.evaluate(domainElement);
> 		return result instanceof Boolean && ((Boolean) result).booleanValue();
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	private static boolean isPolyline_3021(Polyline domainElement) {
> 		if (Polyline_3021_Constraint == null) { // lazy initialization
> 			Polyline_3021_Constraint = GMFGraphOCLFactory.getExpression("not oclIsKindOf(gmfgraph::Polygon)", GMFGraphPackage.eINSTANCE.getPolyline()); //$NON-NLS-1$
> 		}
> 		Object result = Polyline_3021_Constraint.evaluate(domainElement);
> 		return result instanceof Boolean && ((Boolean) result).booleanValue();
> 	}
> 
