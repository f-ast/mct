14a15,16
> import org.eclipse.gmf.mappings.*;
> 
80a83,84
> 			case GMFMapPackage.NODE_LABEL_MAPPING: return createNodeLabelMapping();
> 			case GMFMapPackage.LINK_LABEL_MAPPING: return createLinkLabelMapping();
99a104,105
> 			case GMFMapPackage.LINK_LABEL_ALIGNMENT:
> 				return createLinkLabelAlignmentFromString(eDataType, initialValue);
113a120,121
> 			case GMFMapPackage.LINK_LABEL_ALIGNMENT:
> 				return convertLinkLabelAlignmentToString(eDataType, instanceValue);
175a184,203
> 	public NodeLabelMapping createNodeLabelMapping() {
> 		NodeLabelMappingImpl nodeLabelMapping = new NodeLabelMappingImpl();
> 		return nodeLabelMapping;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public LinkLabelMapping createLinkLabelMapping() {
> 		LinkLabelMappingImpl linkLabelMapping = new LinkLabelMappingImpl();
> 		return linkLabelMapping;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
255a284,303
> 	public LinkLabelAlignment createLinkLabelAlignmentFromString(EDataType eDataType, String initialValue) {
> 		LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertLinkLabelAlignmentToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
