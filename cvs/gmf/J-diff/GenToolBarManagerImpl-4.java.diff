8a9
> import org.eclipse.emf.common.notify.NotificationChain;
10c11
< 
---
> import org.eclipse.emf.ecore.InternalEObject;
11a13,15
> import org.eclipse.gmf.codegen.gmfgen.GenContributionItem;
> import org.eclipse.gmf.codegen.gmfgen.GenContributionManager;
> import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
18a23,26
>  * The following features are implemented:
>  * <ul>
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenToolBarManagerImpl#getOwner <em>Owner</em>}</li>
>  * </ul>
42a51,169
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public GenContributionManager getOwner() {
> 		if (eContainerFeatureID != GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER) return null;
> 		return (GenContributionManager)eContainer();
> 	}
> 
> 	@Override
> 	public GenEditorGenerator getEditorGen() {
> 		return getOwner() != null ? getOwner().getEditorGen() : (eContainer() instanceof GenEditorGenerator ? (GenEditorGenerator) eContainer() : null);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
> 		switch (featureID) {
> 			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
> 				if (eInternalContainer() != null)
> 					msgs = eBasicRemoveFromContainer(msgs);
> 				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER, msgs);
> 		}
> 		return super.eInverseAdd(otherEnd, featureID, msgs);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
> 		switch (featureID) {
> 			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
> 				return eBasicSetContainer(null, GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER, msgs);
> 		}
> 		return super.eInverseRemove(otherEnd, featureID, msgs);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
> 		switch (eContainerFeatureID) {
> 			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
> 				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS, GenContributionManager.class, msgs);
> 		}
> 		return super.eBasicRemoveFromContainerFeature(msgs);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
> 		switch (featureID) {
> 			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
> 				return getOwner();
> 		}
> 		return super.eGet(featureID, resolve, coreType);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public boolean eIsSet(int featureID) {
> 		switch (featureID) {
> 			case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER:
> 				return getOwner() != null;
> 		}
> 		return super.eIsSet(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
> 		if (baseClass == GenContributionItem.class) {
> 			switch (derivedFeatureID) {
> 				case GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER: return GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER;
> 				default: return -1;
> 			}
> 		}
> 		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
> 		if (baseClass == GenContributionItem.class) {
> 			switch (baseFeatureID) {
> 				case GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER: return GMFGenPackage.GEN_TOOL_BAR_MANAGER__OWNER;
> 				default: return -1;
> 			}
> 		}
> 		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
> 	}
> 
