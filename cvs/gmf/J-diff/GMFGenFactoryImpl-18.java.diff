108,113c108,122
< 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND:
< 				return createCompartmentPlacementKindFromString(eDataType, initialValue);
< 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND:
< 				return createCompartmentLayoutKindFromString(eDataType, initialValue);
< 			case GMFGenPackage.LINK_LABEL_ALIGNMENT:
< 				return createLinkLabelAlignmentFromString(eDataType, initialValue);
---
> 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND: {
> 				CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
> 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 				return result;
> 			}
> 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND: {
> 				CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
> 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 				return result;
> 			}
> 			case GMFGenPackage.LINK_LABEL_ALIGNMENT: {
> 				LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
> 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 				return result;
> 			}
129c138
< 				return convertCompartmentPlacementKindToString(eDataType, instanceValue);
---
> 				return instanceValue == null ? null : instanceValue.toString();
131c140
< 				return convertCompartmentLayoutKindToString(eDataType, instanceValue);
---
> 				return instanceValue == null ? null : instanceValue.toString();
133c142
< 				return convertLinkLabelAlignmentToString(eDataType, instanceValue);
---
> 				return instanceValue == null ? null : instanceValue.toString();
416,475d424
< 	public CompartmentPlacementKind createCompartmentPlacementKindFromString(EDataType eDataType, String initialValue) {
< 		CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
< 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 		return result;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String convertCompartmentPlacementKindToString(EDataType eDataType, Object instanceValue) {
< 		return instanceValue == null ? null : instanceValue.toString();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public CompartmentLayoutKind createCompartmentLayoutKindFromString(EDataType eDataType, String initialValue) {
< 		CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
< 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 		return result;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String convertCompartmentLayoutKindToString(EDataType eDataType, Object instanceValue) {
< 		return instanceValue == null ? null : instanceValue.toString();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public LinkLabelAlignment createLinkLabelAlignmentFromString(EDataType eDataType, String initialValue) {
< 		LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
< 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 		return result;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String convertLinkLabelAlignmentToString(EDataType eDataType, Object instanceValue) {
< 		return instanceValue == null ? null : instanceValue.toString();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
