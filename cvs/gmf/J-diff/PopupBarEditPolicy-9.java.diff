2c2
<  * Copyright (c) 2003, 2006 IBM Corporation and others.
---
>  * Copyright (c) 2003, 2007 IBM Corporation and others.
27d26
< import org.eclipse.draw2d.Viewport;
914,923c913
< 
< 			if (willBalloonBeClipped(thePoint)) {
< 				Rectangle rcBounds = getHostFigure().getBounds().getCopy();
< 				getHostFigure().translateToAbsolute(rcBounds);
< 				getBalloon().translateToRelative(rcBounds);
< 				Dimension dim = getBalloon().getSize();
< 				int offsetX = dim.width + ACTION_WIDTH_HGT;
< 				thePoint.x = rcBounds.right() - offsetX;
< 			}
< 
---
> 			adjustToFitInViewport(thePoint);
938,943c928
< 			if (isRightDisplay() && willBalloonBeClipped(thePoint)) {
< 				this.setLeftHandDisplay();
< 				theoffset.width = (int) (rcBounds.width * myBallonOffsetPercent);
< 				thePoint.x = rcBounds.x + theoffset.width;
< 
< 			}
---
> 			adjustToFitInViewport(thePoint);
948,956c933,958
< 	private boolean willBalloonBeClipped(Point pnt) {
< 		Control ctrl1 = getHost().getViewer().getControl();
< 		if (ctrl1 instanceof FigureCanvas) {
< 			FigureCanvas figureCanvas = (FigureCanvas) ctrl1;
< 			Viewport vp = figureCanvas.getViewport();
< 			Rectangle vpRect = vp.getClientArea();
< 			Dimension dim = getBalloon().getSize();
< 			if ((pnt.x + dim.width) >= (vpRect.x + vpRect.width)) {
< 				return true;
---
> 	/**
>      * Uses the balloon location passed in and its size to determine if the
>      * balloon will appear outside the viewport. If so, the balloon location
>      * will be modified accordingly.
>      * 
>      * @param balloonLocation
>      *            the suggested balloon location passed in and potentially
>      *            modified when this method completes
>      */
>     private void adjustToFitInViewport(Point balloonLocation) {
>         Control control = getHost().getViewer().getControl();
>         if (control instanceof FigureCanvas) {
>             Rectangle viewportRect = ((FigureCanvas) control).getViewport()
>                 .getClientArea();
>             Rectangle balloonRect = new Rectangle(balloonLocation, getBalloon()
>                 .getSize());
> 
>             int yDiff = viewportRect.y - balloonRect.y;
>             if (yDiff > 0) {
>                 // balloon is above the viewport, shift down
>                 balloonLocation.translate(0, yDiff);
>             }
>             int xDiff = balloonRect.right() - viewportRect.right();
>             if (xDiff > 0) {
>                 // balloon is to the right of the viewport, shift left
>                 balloonLocation.translate(-xDiff, 0);
959d960
< 		return false;
973d973
< 		setRightHandDisplay(); // set back to default
1024a1025
>      * @deprecated this is not being used anymore
1032c1033
< 	 * 
---
> 	 * @deprecated this is not being used anymore
1040a1042
>      * @deprecated this is not being used anymore
