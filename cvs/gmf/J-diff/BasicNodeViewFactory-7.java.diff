13a14,17
> import java.util.HashMap;
> import java.util.Map;
> 
> import org.eclipse.core.commands.ExecutionException;
14a19,22
> import org.eclipse.core.runtime.IProgressMonitor;
> import org.eclipse.core.runtime.IStatus;
> import org.eclipse.core.runtime.NullProgressMonitor;
> import org.eclipse.core.runtime.Status;
16c24,29
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
---
> import org.eclipse.emf.transaction.Transaction;
> import org.eclipse.emf.transaction.util.TransactionUtil;
> import org.eclipse.emf.workspace.AbstractEMFOperation;
> import org.eclipse.gmf.runtime.common.core.util.Log;
> import org.eclipse.gmf.runtime.common.core.util.StringStatics;
> import org.eclipse.gmf.runtime.common.core.util.Trace;
19,20c32,34
< import org.eclipse.gmf.runtime.emf.core.edit.MRunOption;
< import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
---
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
72d85
< 		int options = MRunOption.UNCHECKED | MRunOption.SILENT;
74,75c87,100
< 		MEditingDomainGetter.getMEditingDomain(containerView).runWithOptions(new MRunnable() {
< 			public Object run() {
---
> 
> 		Map options = new HashMap();
> 		options.put(Transaction.OPTION_UNPROTECTED, Boolean.TRUE);
> 		options.put(Transaction.OPTION_NO_NOTIFICATIONS, Boolean.TRUE);
> 		options.put(Transaction.OPTION_NO_TRIGGERS, Boolean.TRUE);
> 
> 		AbstractEMFOperation operation = new AbstractEMFOperation(
> 			TransactionUtil.getEditingDomain(node), StringStatics.BLANK,
> 			options) {
> 
> 			protected IStatus doExecute(IProgressMonitor monitor,
> 					IAdaptable info)
> 				throws ExecutionException {
> 
78,79c103,118
< 				decorateView(containerView,node, semanticAdapter, semanticHint, index, childPersisted);
< 				return null;
---
> 				decorateView(containerView, node, semanticAdapter,
> 					semanticHint, index, childPersisted);
> 
> 				return Status.OK_STATUS;
> 			}
> 		};
> 		try {
> 			operation.execute(new NullProgressMonitor(), null);
> 		} catch (ExecutionException e) {
> 			Trace.catching(DiagramUIPlugin.getInstance(),
> 				DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass(),
> 				"createView", e); //$NON-NLS-1$
> 			Log
> 				.warning(DiagramUIPlugin.getInstance(),
> 					DiagramUIStatusCodes.IGNORED_EXCEPTION_WARNING,
> 					"createView", e); //$NON-NLS-1$
81d119
< 		},options);
