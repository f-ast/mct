10a11,12
> import org.eclipse.emf.ecore.EClass;
> 
17c19
<  * Feature sequence initializer
---
>  * Feature sequence initializer to initialize a sequence of features
23a26,27
>  *   <li>{@link org.eclipse.gmf.mappings.FeatureSeqInitializer#getElementClass <em>Element Class</em>}</li>
>  *   <li>{@link org.eclipse.gmf.mappings.FeatureSeqInitializer#getCreatingInitializer <em>Creating Initializer</em>}</li>
34,35c38,39
< 	 * The list contents are of type {@link org.eclipse.gmf.mappings.FeatureValueSpec}.
< 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.mappings.FeatureValueSpec#getFeatureSeqInitializer <em>Feature Seq Initializer</em>}'.
---
> 	 * The list contents are of type {@link org.eclipse.gmf.mappings.FeatureInitializer}.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.mappings.FeatureInitializer#getFeatureSeqInitializer <em>Feature Seq Initializer</em>}'.
47,48c51,53
< 	 * @see org.eclipse.gmf.mappings.FeatureValueSpec#getFeatureSeqInitializer
< 	 * @model type="org.eclipse.gmf.mappings.FeatureValueSpec" opposite="featureSeqInitializer" containment="true" required="true"
---
> 	 * @see org.eclipse.gmf.mappings.FeatureInitializer#getFeatureSeqInitializer
> 	 * @model type="org.eclipse.gmf.mappings.FeatureInitializer" opposite="featureSeqInitializer" containment="true" required="true"
> 	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='context' ocl='self.elementClass'"
52a58,101
> 	/**
> 	 * Returns the value of the '<em><b>Element Class</b></em>' reference.
> 	 * <!-- begin-user-doc -->
> 	 * <p>
> 	 * If the meaning of the '<em>Element Class</em>' reference isn't clear,
> 	 * there really should be more of a description here...
> 	 * </p>
> 	 * <!-- end-user-doc -->
> 	 * @return the value of the '<em>Element Class</em>' reference.
> 	 * @see #setElementClass(EClass)
> 	 * @see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureSeqInitializer_ElementClass()
> 	 * @model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not creatingInitializer.feature.oclIsUndefined() implies creatingInitializer.feature.oclAsType(ecore::EReference).eReferenceType.isSuperTypeOf(elementClass)' description='\'elementClass\' must be the same as or sub-type of the containing \'GenReferenceNewElementSpec\' reference type'"
> 	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not creatingInitializer.feature.oclIsUndefined() implies not (elementClass.interface or elementClass.abstract)' description='\'elementClass\' must be a concrete EClass which is the same or sub-type of the containing \'GenReferenceNewElementSpec\' reference type'"
> 	 * @generated
> 	 */
> 	EClass getElementClass();
> 
> 	/**
> 	 * Sets the value of the '{@link org.eclipse.gmf.mappings.FeatureSeqInitializer#getElementClass <em>Element Class</em>}' reference.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @param value the new value of the '<em>Element Class</em>' reference.
> 	 * @see #getElementClass()
> 	 * @generated
> 	 */
> 	void setElementClass(EClass value);
> 
> 	/**
> 	 * Returns the value of the '<em><b>Creating Initializer</b></em>' container reference.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.mappings.ReferenceNewElementSpec#getNewElementInitializers <em>New Element Initializers</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * <p>
> 	 * If the meaning of the '<em>Creating Initializer</em>' container reference isn't clear,
> 	 * there really should be more of a description here...
> 	 * </p>
> 	 * <!-- end-user-doc -->
> 	 * @return the value of the '<em>Creating Initializer</em>' container reference.
> 	 * @see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureSeqInitializer_CreatingInitializer()
> 	 * @see org.eclipse.gmf.mappings.ReferenceNewElementSpec#getNewElementInitializers
> 	 * @model opposite="newElementInitializers" changeable="false"
> 	 * @generated
> 	 */
> 	ReferenceNewElementSpec getCreatingInitializer();
> 
