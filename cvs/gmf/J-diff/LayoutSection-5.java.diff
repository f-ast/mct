13,21d12
< import java.util.Collections;
< import java.util.List;
< 
< import org.eclipse.core.commands.ExecutionException;
< import org.eclipse.core.commands.operations.OperationHistoryFactory;
< import org.eclipse.core.resources.IFile;
< import org.eclipse.core.runtime.IAdaptable;
< import org.eclipse.core.runtime.IProgressMonitor;
< import org.eclipse.core.runtime.NullProgressMonitor;
23,25d13
< import org.eclipse.emf.transaction.util.TransactionUtil;
< import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
< import org.eclipse.gef.EditPart;
37,40d24
< import org.eclipse.gmf.runtime.common.core.command.CommandResult;
< import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
< import org.eclipse.gmf.runtime.notation.View;
< import org.eclipse.jface.layout.GridDataFactory;
44,46d27
< import org.eclipse.swt.layout.FormAttachment;
< import org.eclipse.swt.layout.FormData;
< import org.eclipse.swt.layout.FormLayout;
118c99
< 		myLayoutKindRadios.setLayout(new org.eclipse.swt.layout.FillLayout(SWT.VERTICAL));
---
> 		myLayoutKindRadios.setLayout(new org.eclipse.swt.layout.FillLayout(org.eclipse.swt.SWT.VERTICAL));
121d101
< 		GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myFlowLayoutIsVertical);
123d102
< 		GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myFlowLayoutMatchMinor);
125d103
< 		GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myFlowLayoutForceSingle);
145c123
< 		myFlowLayoutAlign.setLayout(new org.eclipse.swt.layout.FillLayout(SWT.VERTICAL));
---
> 		myFlowLayoutAlign.setLayout(new org.eclipse.swt.layout.FillLayout(org.eclipse.swt.SWT.VERTICAL));
146a125,127
> 		org.eclipse.jface.layout.GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myFlowLayoutIsVertical);
> 		org.eclipse.jface.layout.GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myFlowLayoutMatchMinor);
> 		org.eclipse.jface.layout.GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myFlowLayoutForceSingle);
166d146
< 		GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myGridLayoutSameWidth);
191a172
> 		org.eclipse.jface.layout.GridDataFactory.swtDefaults().align(SWT.BEGINNING, SWT.BEGINNING).span(2, 1).applyTo(myGridLayoutSameWidth);
197,200c178,181
< 		parent.setLayout(new FormLayout());
< 		FormData fd;
< 		fd = new FormData();
< 		fd.left = new FormAttachment(0, 20);
---
> 		parent.setLayout(new org.eclipse.swt.layout.FormLayout());
> 		org.eclipse.swt.layout.FormData fd;
> 		fd = new org.eclipse.swt.layout.FormData();
> 		fd.left = new org.eclipse.swt.layout.FormAttachment(0, 20);
202,203c183,184
< 		fd = new FormData();
< 		fd.left = new FormAttachment(myLayoutKindRadios, 20, SWT.RIGHT);
---
> 		fd = new org.eclipse.swt.layout.FormData();
> 		fd.left = new org.eclipse.swt.layout.FormAttachment(myLayoutKindRadios, 20, org.eclipse.swt.SWT.RIGHT);
205,206c186,187
< 		fd = new FormData();
< 		fd.left = new FormAttachment(myLayoutKindRadios, 20, SWT.RIGHT);
---
> 		fd = new org.eclipse.swt.layout.FormData();
> 		fd.left = new org.eclipse.swt.layout.FormAttachment(myLayoutKindRadios, 20, org.eclipse.swt.SWT.RIGHT);
208,209c189,190
< 		fd = new FormData();
< 		fd.left = new FormAttachment(myLayoutKindRadios, 20, SWT.RIGHT);
---
> 		fd = new org.eclipse.swt.layout.FormData();
> 		fd.left = new org.eclipse.swt.layout.FormAttachment(myLayoutKindRadios, 20, org.eclipse.swt.SWT.RIGHT);
544,545c525,528
< 		final List<IFile> files = Collections.singletonList(WorkspaceSynchronizer.getFile(getInput().eResource()));
< 		AbstractTransactionalCommand cmd = new AbstractTransactionalCommand(TransactionUtil.getEditingDomain(getInput()), "", files) {
---
> 		final java.util.List<org.eclipse.core.resources.IFile> files = java.util.Collections.singletonList(org.eclipse.emf.workspace.util.WorkspaceSynchronizer.getFile(getInput().eResource()));
> 		org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand cmd = new org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand(
> 				org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(getInput()), "", files) {
> 
547c530,531
< 			protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
---
> 			protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info)
> 					throws org.eclipse.core.commands.ExecutionException {
549c533
< 				return CommandResult.newOKCommandResult();
---
> 				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult();
554,555c538,539
< 			OperationHistoryFactory.getOperationHistory().execute(cmd, new NullProgressMonitor(), null);
< 		} catch (ExecutionException ex) {
---
> 			org.eclipse.core.commands.operations.OperationHistoryFactory.getOperationHistory().execute(cmd, new org.eclipse.core.runtime.NullProgressMonitor(), null);
> 		} catch (org.eclipse.core.commands.ExecutionException ex) {
571,577c555,562
< 		if (element instanceof EditPart) {
< 			Object model = ((EditPart) element).getModel();
< 			rv = model instanceof View ? ((View) model).getElement() : null;
< 		} else if (element instanceof View) {
< 			rv = ((View) element).getElement();
< 		} else if (element instanceof IAdaptable) {
< 			View view = (View) ((IAdaptable) element).getAdapter(View.class);
---
> 		if (element instanceof org.eclipse.gef.EditPart) {
> 			Object model = ((org.eclipse.gef.EditPart) element).getModel();
> 			rv = model instanceof org.eclipse.gmf.runtime.notation.View ? ((org.eclipse.gmf.runtime.notation.View) model).getElement() : null;
> 		} else if (element instanceof org.eclipse.gmf.runtime.notation.View) {
> 			rv = ((org.eclipse.gmf.runtime.notation.View) element).getElement();
> 		} else if (element instanceof org.eclipse.core.runtime.IAdaptable) {
> 			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element)
> 					.getAdapter(org.eclipse.gmf.runtime.notation.View.class);
589,590c574,575
< 		final GMFGraphPackage ePack = GMFGraphPackage.eINSTANCE;
< 		myModelListeners = new org.eclipse.emf.common.notify.Adapter[] { new AttachAdapter(ePack.getLayoutable_Layout(), new ChangeTracker() {
---
> 		myModelListeners = new org.eclipse.emf.common.notify.Adapter[] { new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(), new ChangeTracker() {
> 
592,598c577,587
< 				// FIXME enable/disable widget(s) -- HOWEVER, need access to Binding/Widget here, so can't share the template with e.g. Alex's ItemProviders
< 			}
< 		}, new FeatureTracker(this, ePack.getFlowLayout_Vertical(), ePack.getFlowLayout_MatchMinorSize(), ePack.getFlowLayout_ForceSingleLine(), ePack.getFlowLayout_MajorSpacing(), ePack
< 				.getFlowLayout_MinorSpacing(), ePack.getGridLayout_NumColumns(), ePack.getGridLayout_EqualWidth(), ePack.getCustomClass_QualifiedClassName(), ePack.getFlowLayout_MinorAlignment(),
< 				ePack.getFlowLayout_MajorAlignment()), new AttachAdapter(ePack.getBorderLayout_Spacing(), new FeatureTracker(this, ePack.getDimension_Dx(), ePack.getDimension_Dy())),
< 				new AttachAdapter(ePack.getGridLayout_Margins(), new FeatureTracker(this, ePack.getDimension_Dx(), ePack.getDimension_Dy())), new AttachAdapter(ePack.getGridLayout_Spacing(),
< 						new FeatureTracker(this, ePack.getDimension_Dx(), ePack.getDimension_Dy()))) };
---
> 				// FIXME enable/disable widget(s) -- HOWEVER, need access to
> 				// Binding/Widget here, so can't share the template with e.g.
> 				// Alex's ItemProviders
> 			}
> 		}, new FeatureTracker(this, GMFGraphPackage.eINSTANCE.getFlowLayout_Vertical(), GMFGraphPackage.eINSTANCE.getFlowLayout_MatchMinorSize(), GMFGraphPackage.eINSTANCE
> 				.getFlowLayout_ForceSingleLine(), GMFGraphPackage.eINSTANCE.getFlowLayout_MajorSpacing(), GMFGraphPackage.eINSTANCE.getFlowLayout_MinorSpacing(), GMFGraphPackage.eINSTANCE
> 				.getGridLayout_NumColumns(), GMFGraphPackage.eINSTANCE.getGridLayout_EqualWidth(), GMFGraphPackage.eINSTANCE.getCustomClass_QualifiedClassName(), GMFGraphPackage.eINSTANCE
> 				.getFlowLayout_MinorAlignment(), GMFGraphPackage.eINSTANCE.getFlowLayout_MajorAlignment()), new AttachAdapter(GMFGraphPackage.eINSTANCE.getBorderLayout_Spacing(), new FeatureTracker(
> 				this, GMFGraphPackage.eINSTANCE.getDimension_Dx(), GMFGraphPackage.eINSTANCE.getDimension_Dy())), new AttachAdapter(GMFGraphPackage.eINSTANCE.getGridLayout_Margins(),
> 				new FeatureTracker(this, GMFGraphPackage.eINSTANCE.getDimension_Dx(), GMFGraphPackage.eINSTANCE.getDimension_Dy())), new AttachAdapter(GMFGraphPackage.eINSTANCE
> 				.getGridLayout_Spacing(), new FeatureTracker(this, GMFGraphPackage.eINSTANCE.getDimension_Dx(), GMFGraphPackage.eINSTANCE.getDimension_Dy()))) };
616c605
< 	private org.eclipse.swt.widgets.Label createLabel(Composite parent, String label) {
---
> 	private org.eclipse.swt.widgets.Label createLabel(org.eclipse.swt.widgets.Composite parent, String label) {
624,625c613,614
< 	private Group createGroup(Composite parent, String label) {
< 		Group g = new Group(parent, SWT.SHADOW_NONE);
---
> 	private org.eclipse.swt.widgets.Group createGroup(org.eclipse.swt.widgets.Composite parent, String label) {
> 		org.eclipse.swt.widgets.Group g = new org.eclipse.swt.widgets.Group(parent, SWT.SHADOW_NONE);
