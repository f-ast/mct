2c2
<  * Copyright (c) 2003, 2004 IBM Corporation and others.
---
>  * Copyright (c) 2003, 2006 IBM Corporation and others.
13a14,15
> import org.eclipse.core.commands.ExecutionException;
> import org.eclipse.core.runtime.IAdaptable;
15,17c17,18
< import org.eclipse.core.runtime.NullProgressMonitor;
< import org.eclipse.ui.views.properties.IPropertySource;
< 
---
> import org.eclipse.emf.ecore.EObject;
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
19c20,21
< import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
---
> import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
> import org.eclipse.ui.views.properties.IPropertySource;
30c32
< public class RestoreDefaultPropertyValueCommand extends AbstractModelCommand {
---
> public class RestoreDefaultPropertyValueCommand extends AbstractTransactionalCommand {
58a61
>      * @param editingDomain the editing domain in which to make the change
65c68
< 	public RestoreDefaultPropertyValueCommand(
---
> 	public RestoreDefaultPropertyValueCommand(TransactionalEditingDomain editingDomain,  
71c74,78
< 		super(label, affectedObjects);
---
> 		super(
>             editingDomain,
>             label,
>             (affectedObjects instanceof EObject) ? getWorkspaceFiles((EObject) affectedObjects)
>                 : null);
76,79c83
< 	/* (non-Javadoc)
< 		 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#isRedoable()
< 		 */
< 	public boolean isRedoable() {
---
> 	public boolean canRedo() {
83,86c87
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#isUndoable()
< 	 */
< 	public boolean isUndoable() {
---
> 	public boolean canUndo() {
90,93c91,93
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
< 	 */
< 	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
---
> 	protected CommandResult doExecuteWithResult(
>             IProgressMonitor progressMonitor, IAdaptable info)
>         throws ExecutionException {
102c102
< 				newOKCommandResult(
---
> 				CommandResult.newOKCommandResult(
107c107
< 			result = newOKCommandResult();
---
> 			result = CommandResult.newOKCommandResult();
112,116c112,113
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doRedo()
< 	 */
< 	protected CommandResult doRedo() {
< 		return doExecute(new NullProgressMonitor());
---
> 	protected CommandResult doRedoWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
> 		return doExecuteWithResult(progressMonitor, info);
119,122c116
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doUndo()
< 	 */
< 	protected CommandResult doUndo() {
---
> 	protected CommandResult doUndoWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
128c122
< 			result = newOKCommandResult(getUndoValue());
---
> 			result = CommandResult.newOKCommandResult(getUndoValue());
132c126
< 				newOKCommandResult(
---
>                 CommandResult.newOKCommandResult(
