108,122c108,113
< 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND: {
< 				CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
< 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND: {
< 				CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
< 			case GMFGenPackage.LINK_LABEL_ALIGNMENT: {
< 				LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
---
> 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND:
> 				return createCompartmentPlacementKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND:
> 				return createCompartmentLayoutKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.LINK_LABEL_ALIGNMENT:
> 				return createLinkLabelAlignmentFromString(eDataType, initialValue);
138c129
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 				return convertCompartmentPlacementKindToString(eDataType, instanceValue);
140c131
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 				return convertCompartmentLayoutKindToString(eDataType, instanceValue);
142c133
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 				return convertLinkLabelAlignmentToString(eDataType, instanceValue);
424a416,475
> 	public CompartmentPlacementKind createCompartmentPlacementKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertCompartmentPlacementKindToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public CompartmentLayoutKind createCompartmentLayoutKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertCompartmentLayoutKindToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public LinkLabelAlignment createLinkLabelAlignmentFromString(EDataType eDataType, String initialValue) {
> 		LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertLinkLabelAlignmentToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
