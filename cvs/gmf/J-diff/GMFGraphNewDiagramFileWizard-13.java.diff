20d19
< import org.eclipse.core.resources.IContainer;
23a23
> import org.eclipse.core.runtime.IPath;
30,33d29
< import org.eclipse.emf.ecore.util.FeatureMap;
< import org.eclipse.emf.edit.provider.IWrapperItemProvider;
< import org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider;
< import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
42,44d37
< import org.eclipse.jface.viewers.ISelectionChangedListener;
< import org.eclipse.jface.viewers.IStructuredSelection;
< import org.eclipse.jface.viewers.SelectionChangedEvent;
46d38
< import org.eclipse.jface.viewers.TreeViewer;
48,54d39
< import org.eclipse.jface.wizard.WizardPage;
< import org.eclipse.swt.SWT;
< import org.eclipse.swt.layout.GridData;
< import org.eclipse.swt.layout.GridLayout;
< import org.eclipse.swt.widgets.Composite;
< import org.eclipse.swt.widgets.Label;
< import org.eclipse.ui.IWorkbenchPage;
66,70d50
< 	private TransactionalEditingDomain myEditingDomain;
< 
< 	/**
< 	 * @generated
< 	 */
76c56
< 	private IFile mySelectedModelFile;
---
> 	private ModelElementSelectionPage diagramRootElementSelectionPage;
81,86c61
< 	private IWorkbenchPage myWorkbenchPage;
< 
< 	/**
< 	 * @generated
< 	 */
< 	private IStructuredSelection mySelection;
---
> 	private TransactionalEditingDomain myEditingDomain;
91c66,69
< 	private EObject myDiagramRoot;
---
> 	public GMFGraphNewDiagramFileWizard(org.eclipse.emf.common.util.URI domainModelURI, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
> 		assert domainModelURI != null : "Domain model uri must be specified"; //$NON-NLS-1$
> 		assert diagramRoot != null : "Doagram root element must be specified"; //$NON-NLS-1$
> 		assert editingDomain != null : "Editing domain must be specified"; //$NON-NLS-1$
93,101c71,90
< 	/**
< 	 * @generated
< 	 */
< 	public GMFGraphNewDiagramFileWizard(IFile selectedModelFile, IWorkbenchPage workbenchPage, IStructuredSelection selection, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
< 		assert selectedModelFile != null : "Null selectedModelFile in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
< 		assert workbenchPage != null : "Null workbenchPage in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
< 		assert selection != null : "Null selection in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
< 		assert diagramRoot != null : "Null diagramRoot in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
< 		assert editingDomain != null : "Null editingDomain in GMFGraphNewDiagramFileWizard constructor"; //$NON-NLS-1$
---
> 		myFileCreationPage = new WizardNewFileCreationPage("Initialize new diagram file", StructuredSelection.EMPTY);
> 		myFileCreationPage.setTitle("Diagram file");
> 		myFileCreationPage.setDescription("Create new diagram based on " + CanvasEditPart.MODEL_ID + " model content");
> 		IPath filePath;
> 		String fileName = domainModelURI.trimFileExtension().lastSegment();
> 		if (domainModelURI.isPlatformResource()) {
> 			filePath = new Path(domainModelURI.trimSegments(1).toPlatformString(true));
> 		} else if (domainModelURI.isFile()) {
> 			filePath = new Path(domainModelURI.trimSegments(1).toFileString());
> 		} else {
> 			// TODO : use some default path
> 			throw new IllegalArgumentException("Unsupported URI: " + domainModelURI);
> 		}
> 		myFileCreationPage.setContainerFullPath(filePath);
> 		myFileCreationPage.setFileName(GMFGraphDiagramEditorUtil.getUniqueFileName(filePath, fileName, "gmfgraph_diagram")); //$NON-NLS-1$
> 
> 		diagramRootElementSelectionPage = new DiagramRootElementSelectionPage("Select diagram root element");
> 		diagramRootElementSelectionPage.setTitle("Diagram root element");
> 		diagramRootElementSelectionPage.setDescription("Select semantic model element to be depicted on diagram");
> 		diagramRootElementSelectionPage.setModelElement(diagramRoot);
103,106d91
< 		mySelectedModelFile = selectedModelFile;
< 		myWorkbenchPage = workbenchPage;
< 		mySelection = selection;
< 		myDiagramRoot = diagramRoot;
114,129d98
< 		myFileCreationPage = new WizardNewFileCreationPage("Initialize new Ecore diagram file", mySelection) {
< 
< 			public void createControl(Composite parent) {
< 				super.createControl(parent);
< 				IContainer parentContainer = mySelectedModelFile.getParent();
< 				String originalFileName = mySelectedModelFile.getProjectRelativePath().removeFileExtension().lastSegment();
< 				String fileExtension = ".gmfgraph_diagram"; //$NON-NLS-1$
< 				String fileName = originalFileName + fileExtension;
< 				for (int i = 1; parentContainer.getFile(new Path(fileName)).exists(); i++) {
< 					fileName = originalFileName + i + fileExtension;
< 				}
< 				setFileName(fileName);
< 			}
< 		};
< 		myFileCreationPage.setTitle("Diagram file");
< 		myFileCreationPage.setDescription("Create new diagram based on " + CanvasEditPart.MODEL_ID + " model content");
131c100
< 		addPage(new RootElementSelectorPage());
---
> 		addPage(diagramRootElementSelectionPage);
137a107
> 		List affectedFiles = new LinkedList();
144,147d113
< 		ResourceSet resourceSet = myEditingDomain.getResourceSet();
< 		final Resource diagramResource = resourceSet.createResource(org.eclipse.emf.common.util.URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true));
< 		List affectedFiles = new LinkedList();
< 		affectedFiles.add(mySelectedModelFile);
148a115,117
> 		org.eclipse.emf.common.util.URI diagramModelURI = org.eclipse.emf.common.util.URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true);
> 		ResourceSet resourceSet = myEditingDomain.getResourceSet();
> 		final Resource diagramResource = resourceSet.createResource(diagramModelURI);
152c121
< 				int diagramVID = GMFGraphVisualIDRegistry.getDiagramVisualID(myDiagramRoot);
---
> 				int diagramVID = GMFGraphVisualIDRegistry.getDiagramVisualID(diagramRootElementSelectionPage.getModelElement());
156c125
< 				Diagram diagram = ViewService.createDiagram(myDiagramRoot, CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);
---
> 				Diagram diagram = ViewService.createDiagram(diagramRootElementSelectionPage.getModelElement(), CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);
158d126
< 
169c137
< 			GMFGraphDiagramEditorPlugin.getInstance().logError("Save operation failed for: " + diagramFile.getFullPath().toString(), ex); //$NON-NLS-1$
---
> 			GMFGraphDiagramEditorPlugin.getInstance().logError("Save operation failed for: " + diagramModelURI, ex); //$NON-NLS-1$
179,202c147
< 	private class RootElementSelectorPage extends WizardPage implements ISelectionChangedListener {
< 
< 		/**
< 		 * @generated
< 		 */
< 		protected RootElementSelectorPage() {
< 			super("Select diagram root element");
< 			setTitle("Diagram root element");
< 			setDescription("Select semantic model element to be depicted on diagram");
< 		}
< 
< 		/**
< 		 * @generated
< 		 */
< 		public void createControl(Composite parent) {
< 			initializeDialogUnits(parent);
< 			Composite topLevel = new Composite(parent, SWT.NONE);
< 			topLevel.setLayout(new GridLayout());
< 			topLevel.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_FILL | GridData.HORIZONTAL_ALIGN_FILL));
< 			topLevel.setFont(parent.getFont());
< 			setControl(topLevel);
< 			createModelBrowser(topLevel);
< 			setPageComplete(validatePage());
< 		}
---
> 	private static class DiagramRootElementSelectionPage extends ModelElementSelectionPage {
207,227c152,153
< 		private void createModelBrowser(Composite parent) {
< 			Composite panel = new Composite(parent, SWT.NONE);
< 			panel.setLayoutData(new GridData(GridData.FILL_BOTH));
< 			GridLayout layout = new GridLayout();
< 			layout.marginWidth = 0;
< 			panel.setLayout(layout);
< 
< 			Label label = new Label(panel, SWT.NONE);
< 			label.setText("Select diagram root element:");
< 			label.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));
< 
< 			TreeViewer treeViewer = new TreeViewer(panel, SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
< 			GridData layoutData = new GridData(GridData.FILL_BOTH);
< 			layoutData.heightHint = 300;
< 			layoutData.widthHint = 300;
< 			treeViewer.getTree().setLayoutData(layoutData);
< 			treeViewer.setContentProvider(new AdapterFactoryContentProvider(GMFGraphDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory()));
< 			treeViewer.setLabelProvider(new AdapterFactoryLabelProvider(GMFGraphDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory()));
< 			treeViewer.setInput(myDiagramRoot.eResource());
< 			treeViewer.setSelection(new StructuredSelection(myDiagramRoot));
< 			treeViewer.addSelectionChangedListener(this);
---
> 		protected DiagramRootElementSelectionPage(String pageName) {
> 			super(pageName);
233,250c159,160
< 		public void selectionChanged(SelectionChangedEvent event) {
< 			myDiagramRoot = null;
< 			if (event.getSelection() instanceof IStructuredSelection) {
< 				IStructuredSelection selection = (IStructuredSelection) event.getSelection();
< 				if (selection.size() == 1) {
< 					Object selectedElement = selection.getFirstElement();
< 					if (selectedElement instanceof IWrapperItemProvider) {
< 						selectedElement = ((IWrapperItemProvider) selectedElement).getValue();
< 					}
< 					if (selectedElement instanceof FeatureMap.Entry) {
< 						selectedElement = ((FeatureMap.Entry) selectedElement).getValue();
< 					}
< 					if (selectedElement instanceof EObject) {
< 						myDiagramRoot = (EObject) selectedElement;
< 					}
< 				}
< 			}
< 			setPageComplete(validatePage());
---
> 		protected String getSelectionTitle() {
> 			return "Select diagram root element:";
256,258c166,168
< 		private boolean validatePage() {
< 			if (myDiagramRoot == null) {
< 				setErrorMessage("No diagram root element selected");
---
> 		protected boolean validatePage() {
> 			if (selectedModelElement == null) {
> 				setErrorMessage("Diagram root element is not selected");
262,263c172,173
< 					new CreateDiagramViewOperation(new EObjectAdapter(myDiagramRoot), CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT));
< 			setErrorMessage(result ? null : "Invalid diagram root element was selected");
---
> 					new CreateDiagramViewOperation(new EObjectAdapter(selectedModelElement), CanvasEditPart.MODEL_ID, GMFGraphDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT));
> 			setErrorMessage(result ? null : "Invalid diagram root element is selected");
266d175
< 
