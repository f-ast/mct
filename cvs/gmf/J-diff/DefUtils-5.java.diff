159c159
< 		private Map contextCache = new HashMap(5);
---
> 		private Map<Object, EClassifier> contextCache = new HashMap<Object, EClassifier>(5);
172c172
< 						return (EClassifier)contextCache.get(typeNameObj);
---
> 						return contextCache.get(typeNameObj);
175c175
< 					List nameSeq = new ArrayList(Arrays.asList(typeName));
---
> 					List nameSeq = new ArrayList<String>(Arrays.asList(typeName));
236c236
< 		private Map/*<EClass, ContextProvider>*/ referencedContexts = Collections.EMPTY_MAP;		
---
> 		private Map<EClass, ContextProvider> referencedContexts = Collections.emptyMap();		
258c258
< 				List subTypes  = getSubTypes(getRootEPackage(referencedClass.getEPackage()), referencedClass, new ArrayList());
---
> 				List<EClassifier> subTypes  = getSubTypes(getRootEPackage(referencedClass.getEPackage()), referencedClass, new ArrayList<EClassifier>());
260c260
< 				referencedContexts = new HashMap(5);				
---
> 				referencedContexts = new HashMap<EClass, ContextProvider>(5);				
270c270
< 				List statuses = Collections.EMPTY_LIST;
---
> 				List<IStatus> statuses = Collections.emptyList();
279c279
< 							statuses = new ArrayList();
---
> 							statuses = new ArrayList<IStatus>();
285c285
< 					setStatus((IStatus)statuses.get(0));					
---
> 					setStatus(statuses.get(0));					
288c288
< 							(IStatus[])statuses.toArray(new IStatus[statuses.size()]),
---
> 							statuses.toArray(new IStatus[statuses.size()]),
313c313
< 			ContextProvider provider = (ContextProvider)referencedContexts.get(contextProviderEClass);
---
> 			ContextProvider provider = referencedContexts.get(contextProviderEClass);
316c316
< 					ContextProvider nextProvider = (ContextProvider)referencedContexts.get(it.next());
---
> 					ContextProvider nextProvider = referencedContexts.get(it.next());
495c495
< 			Class leftClass = left.getInstanceClass();			
---
> 			Class<?> leftClass = left.getInstanceClass();			
553a554
> 	@SuppressWarnings("unchecked")
570a572
> 	@SuppressWarnings("unchecked")
665c667
< 	static List getSubTypes(EPackage ePackage, EClass superType, List foundSubTypes) {
---
> 	static List<EClassifier> getSubTypes(EPackage ePackage, EClass superType, List<EClassifier> foundSubTypes) {
