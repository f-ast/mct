12d11
< 
24a24
> import org.eclipse.emf.ecore.EStructuralFeature;
60,61c60,69
< 	protected final void setCopier(EClass eClass, Copier copier){
< 		getRecord(eClass, true).setCopier(copier);
---
> 	protected final void setMatcher(EClass eClass, EAttribute attribute){  
> 		checkStructuralFeature(eClass, attribute);
> 		setMatcher(eClass, new ReflectiveMatcher(attribute));
> 	}
> 	
> 	protected final void setMatcher(EClass eClass, EReference reference) {
> 		checkStructuralFeature(eClass, reference);
> 		// XXX Perhaps, for cases, when reference's target is in some other package,
> 		// might be reasonable to have an alternative matching, non-resolving, just comparing proxyURI?
> 		setMatcher(eClass, new ReflectiveMatcher(reference));
68a77,80
> 	protected final void setCopier(EClass eClass, Copier copier){
> 		getRecord(eClass, true).setCopier(copier);
> 	}
> 	
86,100d97
< 	protected final void setMatcher(EClass eClass, EAttribute attribute){  
< 		checkStructuralFeature(eClass, attribute);
< 		Matcher matcher = new ReflectiveMatcher(attribute);
< 		setMatcher(eClass, matcher);
< 	}
< 	
< 	protected final void setMatcher(EClass eClass, EReference reference){
< 		if (eClass.getEPackage().equals(reference.eClass().getEPackage())){
< 			//XXX: use lazyly resolved matcher??? 
< 			setMatcher(eClass, new ReflectiveMatcher(reference));
< 		} else {
< 			setMatcher(eClass, new ReflectiveMatcher(reference));
< 		}
< 	}
< 
144c141
< 	private void checkStructuralFeature(EClass expectedClass, EAttribute feature) {
---
> 	private static void checkStructuralFeature(EClass expectedClass, EStructuralFeature feature) {
