8a9
> import org.eclipse.emf.common.notify.Notification;
11a13
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
12a15
> import org.eclipse.emf.ecore.util.EcoreUtil;
64a68,98
> 	 * @generated
> 	 */
> 	public NotificationChain basicSetOwner(GenContributionManager newOwner, NotificationChain msgs) {
> 		msgs = eBasicSetContainer((InternalEObject)newOwner, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, msgs);
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setOwner(GenContributionManager newOwner) {
> 		if (newOwner != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER && newOwner != null)) {
> 			if (EcoreUtil.isAncestor(this, newOwner))
> 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
> 			NotificationChain msgs = null;
> 			if (eInternalContainer() != null)
> 				msgs = eBasicRemoveFromContainer(msgs);
> 			if (newOwner != null)
> 				msgs = ((InternalEObject)newOwner).eInverseAdd(this, GMFGenPackage.GEN_CONTRIBUTION_MANAGER__ITEMS, GenContributionManager.class, msgs);
> 			msgs = basicSetOwner(newOwner, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, newOwner, newOwner));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
82c116
< 				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, msgs);
---
> 				return basicSetOwner((GenContributionManager)otherEnd, msgs);
96c130
< 				return eBasicSetContainer(null, GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER, msgs);
---
> 				return basicSetOwner(null, msgs);
136a171,200
> 	public void eSet(int featureID, Object newValue) {
> 		switch (featureID) {
> 			case GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER:
> 				setOwner((GenContributionManager)newValue);
> 				return;
> 		}
> 		super.eSet(featureID, newValue);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
> 	public void eUnset(int featureID) {
> 		switch (featureID) {
> 			case GMFGenPackage.GEN_CONTRIBUTION_ITEM__OWNER:
> 				setOwner((GenContributionManager)null);
> 				return;
> 		}
> 		super.eUnset(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	@Override
