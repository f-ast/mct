22a23
> import org.eclipse.jface.viewers.ICellEditorValidator;
30a32
> import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.DiagramUIPropertiesMessages;
74c76,110
<         return super.createDataTypeCellEditor(composite);
---
>         CellEditor cellEditor = super.createDataTypeCellEditor(composite);
>         
>         if (isFontHeight()) {
>         	cellEditor.setValidator(getPositiveIntegerValidator());
>         }
>         	
>         return cellEditor;
>     }
> 
>     /**
>      * Create a cell validator that ensures positive integers
>      * @return positive integer cell editor validator
>      */
>     private ICellEditorValidator getPositiveIntegerValidator() {
> 		ICellEditorValidator cellValidator = new ICellEditorValidator() {
> 			public String isValid(Object value) {
> 				String error = null;
> 				if (value instanceof String) {
> 					String strValue = (String) value;
> 					try {
> 						if (Integer.parseInt(strValue) <= 0) {
> 								throw new NumberFormatException();
> 						}
> 					} catch (NumberFormatException e) {
> 							error = DiagramUIPropertiesMessages.Positive_Number_Error;
> 					}
> 				}
> 				return error;
> 			}
> 		};
> 		return cellValidator;
>     }
>     
>     private boolean isFontHeight() {
>         return getFeature() == NotationPackage.eINSTANCE.getFontStyle_FontHeight();
