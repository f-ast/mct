14,15d13
< import org.eclipse.emf.codegen.util.CodeGenUtil;
< import org.eclipse.gmf.common.IncrementalNamesDispenser;
17a16
> import org.eclipse.gmf.mappings.CompartmentMapping;
29,42c28,29
< 	private final String suffix;
< 
< 	private final NamesDispenser namesDispenser;
< 
< 	public DesignNamingStrategy(String suffix) {
< 		this(suffix, null, new IncrementalNamesDispenser());
< 	}
< 
< 	public DesignNamingStrategy(String suffix, NamingStrategy chained, NamesDispenser namesDispenser) {
< 		super(chained);
< 		assert suffix != null;
< 		this.suffix = suffix;
< 		assert namesDispenser != null;
< 		this.namesDispenser = namesDispenser;
---
> 	public DesignNamingStrategy(String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
> 		super(suffix, namesDispenser, chainedNamingStrategy, prefixNamingStrategy);
75,77c62,64
< 	public String get(LabelMapping mapping) {
< 		if (mapping.getDiagramLabel() != null) {
< 			String name = mapping.getDiagramLabel().getName();
---
> 	public String get(CompartmentMapping mapping) {
> 		if (mapping.getCompartment() != null) {
> 			String name = mapping.getCompartment().getName();
78a66,67
> 				name = Character.toUpperCase(name.charAt(0)) + name.substring(1);
> 				name = getCompartmentHostPrefix(mapping) + name;
85,87c74,77
< 	protected String createClassName(String name) {
< 		assert !isEmpty(name);
< 		name = CodeGenUtil.validJavaIdentifier(name);
---
> 	public String get(LabelMapping mapping) {
> 		if (mapping.getDiagramLabel() != null) {
> 			String name = mapping.getDiagramLabel().getName();
> 			if (!isEmpty(name)) {
89c79,86
< 		return namesDispenser.get(name, suffix);
---
> 				// Since names should be unique in gmfgraph model names of
> 				// labels most likely will contain their host names appended
> 				// as prefixes so we do not add them to make names smaller.
> 				//name = getLabelHostPrefix(mapping) + name;
> 				return createClassName(name);
> 			}
> 		}
> 		return super.get(mapping);
