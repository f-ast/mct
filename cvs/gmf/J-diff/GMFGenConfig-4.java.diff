21a22
> import org.eclipse.gmf.internal.common.reconcile.Decision;
73a75
> 		restore(GMFGEN.getGenDiagram(), GMFGEN.getGenCommonBase_EditPartClassName());
78c80
< 		//[155332]preserveIfNotByPattern(GMFGEN.getGenTopLevelNode(), GMFGEN.getGenCommonBase_EditPartClassName(), ".*" + GenCommonBase.EDIT_PART_SUFFIX);
---
> 		restore(GMFGEN.getGenTopLevelNode(), GMFGEN.getGenCommonBase_EditPartClassName());
84c86
< 		//[155332]preserveIfNotByPattern(GMFGEN.getGenChildNode(), GMFGEN.getGenCommonBase_EditPartClassName(), ".*" + GenCommonBase.EDIT_PART_SUFFIX);
---
> 		restore(GMFGEN.getGenChildNode(), GMFGEN.getGenCommonBase_EditPartClassName());
98c100,105
< 		//[155332]preserveIfNotByPattern(GMFGEN.getGenCompartment(), GMFGEN.getGenCommonBase_EditPartClassName(), ".*" + GenCommonBase.EDIT_PART_SUFFIX);
---
> 		restore(GMFGEN.getGenCompartment(), GMFGEN.getGenCommonBase_EditPartClassName());
> 
> 		setMatcher(GMFGEN.getGenLink(), new VisualIDMatcher());
> 		restore(GMFGEN.getGenLink(), GMFGEN.getGenCommonBase_NotationViewFactoryClassName());
> 		restore(GMFGEN.getGenLink(), GMFGEN.getGenCommonBase_EditPartClassName());
> 		restore(GMFGEN.getGenLink(), GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName());
203a211,214
> 	private void restore(EClass eClass, EAttribute feature) {
> 		addDecision(eClass, new Decision.ALWAYS_OLD(feature));
> 	}
> 
