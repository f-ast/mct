15a16
> import org.eclipse.core.commands.ExecutionException;
18c19,20
< 
---
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
> import org.eclipse.emf.transaction.util.TransactionUtil;
19a22,23
> import org.eclipse.gmf.runtime.common.core.util.Log;
> import org.eclipse.gmf.runtime.common.core.util.Trace;
21a26,28
> import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypeDebugOptions;
> import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePlugin;
> import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePluginStatusCodes;
44c51,52
<  * the <code>org.eclipse.gmf.runtime.emf.type.core.elementTypes</code> extension point.
---
>  * the <code>org.eclipse.gmf.runtime.emf.type.core.elementTypes</code>
>  * extension point.
48,49c56
< public class AbstractEditHelperAdvice
< 	implements IEditHelperAdvice {
---
> public class AbstractEditHelperAdvice implements IEditHelperAdvice {
262c269,270
< 	protected ICommand getBeforeDuplicateCommand(DuplicateElementsRequest request) {
---
> 	protected ICommand getBeforeDuplicateCommand(
> 			DuplicateElementsRequest request) {
278,279c286
< 	 * Gets my 'before' advice for getting the edit context for
< 	 * an edit request.
---
> 	 * Gets my 'before' advice for getting the edit context for an edit request.
421c428,429
< 	 * @param requestParameters parameters to be set in the creation request
---
> 	 * @param requestParameters
> 	 *            parameters to be set in the creation request
425,426c433,434
< 	protected EObject createType(EObject container, IElementType typeToCreate, Map requestParameters,
< 			IProgressMonitor progressMonitor) {
---
> 	protected EObject createType(EObject container, IElementType typeToCreate,
>             Map requestParameters, IProgressMonitor progressMonitor) {
432,433c440,444
< 		CreateElementRequest request = new CreateElementRequest(container,
< 			typeToCreate);
---
>         TransactionalEditingDomain editingDomain = TransactionUtil
>             .getEditingDomain(container);
> 
> 		CreateElementRequest request = new CreateElementRequest(editingDomain,
> 				container, typeToCreate);
445,446c456,469
< 		if (createTypeCommand != null && createTypeCommand.isExecutable()) {
< 			createTypeCommand.execute(progressMonitor);
---
> 		if (createTypeCommand != null && createTypeCommand.canExecute()) {
>             
>             try {
>                 createTypeCommand.execute(progressMonitor, null);
>                 
>             } catch (ExecutionException e) {
>                 Trace.catching(EMFTypePlugin.getPlugin(),
>                     EMFTypeDebugOptions.EXCEPTIONS_CATCHING,
>                     AbstractEditHelperAdvice.class, "createType", e); //$NON-NLS-1$
>                 Log.error(EMFTypePlugin.getPlugin(),
>                     EMFTypePluginStatusCodes.COMMAND_FAILURE, e
>                         .getMessage(), e);
>                 return null;
>             }
