22d21
< import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
24d22
< import org.eclipse.gmf.codegen.gmfgen.FeatureLinkModelFacet;
45d42
< import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;
107,110c104
< 			//See plugin.xmljet
< 			String className = "OpenDiagramIn" + myEditorGen.getDomainGenModel().getModelName() + "DiagramViewAction";
< 			className = CodeGenUtil.validJavaIdentifier(className);
< 			internalGenerateJavaClass(myEmitters.getOpenDiagramInViewActionGenerator(), myEditorGen.getEditor().getPackageName(), className, myEditorGen.getEditor());
---
> 			internalGenerateJavaClass(myEmitters.getOpenDiagramInViewActionGenerator(), myEmitters.getOpenDiagramInViewActionQualifiedClassNameGenerator(), myEditorGen.getEditor());
152a147,149
> 			if (next.getLabels().size() > 0) {
> 				generateConnectionEndpointEditPolicy(next);
> 			}
278a276
> 		internalGenerateJavaClass(myEmitters.getValidateActionGenerator(), myEmitters.getValidateActionQualifiedNameGenerator(), myDiagram);
294a293
> 		internalGenerateJavaClass(myEmitters.getMetricsActionEmitter(), myEmitters.getMetricsActionQualifiedNameEmitter(), myDiagram);
302d300
< 		String commandNameInfix = genNode.getDomainMetaClass().getName() + genNode.getVisualID();
304,308c302
< 			internalGenerateJavaClass(myEmitters.getCreateNodeCommandEmitter(), 
< 					myDiagram.getEditCommandsPackageName(),
< 					"Create" + commandNameInfix + "Command",
< 					genNode
< 				);
---
> 			internalGenerateJavaClass(myEmitters.getCreateNodeCommandEmitter(), myEmitters.getCreateNodeCommandQualifiedClassNameEmitter(), genNode);
310,319c304,305
< 		internalGenerateJavaClass(myEmitters.getAddNodeCommandEmitter(), 
< 				myDiagram.getEditCommandsPackageName(),
< 				"Add" + commandNameInfix + "Command",
< 				genNode
< 			);
< 		internalGenerateJavaClass(myEmitters.getCloneNodeCommandEmitter(), 
< 				myDiagram.getEditCommandsPackageName(),
< 				"Clone" + commandNameInfix + "Command",
< 				genNode
< 			);
---
> 		internalGenerateJavaClass(myEmitters.getAddNodeCommandEmitter(), myEmitters.getAddNodeCommandQualifiedClassNameEmitter(), genNode);
> 		internalGenerateJavaClass(myEmitters.getCloneNodeCommandEmitter(), myEmitters.getCloneNodeCommandQualifiedClassNameEmitter(), genNode);
326,360c312,315
< 		String commandNameInfix;
< 		if (genLink.getModelFacet() instanceof TypeLinkModelFacet) {
< 			TypeLinkModelFacet modelFacet = (TypeLinkModelFacet) genLink.getModelFacet();
< 			commandNameInfix = modelFacet.getMetaClass().getName();
< 		} else if (genLink.getModelFacet() instanceof FeatureLinkModelFacet) {
< 			GenFeature metaFeature = ((FeatureLinkModelFacet) genLink.getModelFacet()).getMetaFeature();
< 			commandNameInfix = metaFeature.getFeatureAccessorName();
< 		} else {
< 			return;
< 		}
< 		commandNameInfix += genLink.getVisualID();
< 		internalGenerateJavaClass(
< 				myEmitters.getCreateLinkStartCommandEmitter(),
< 				myDiagram.getEditCommandsPackageName(),
< 				"Create" + commandNameInfix + "StartCommand",
< 				genLink
< 			);
< 		internalGenerateJavaClass(
< 				myEmitters.getCreateLinkCompleteCommandEmitter(),
< 				myDiagram.getEditCommandsPackageName(),
< 				"Create" + commandNameInfix + "Command",
< 				genLink
< 			);
< 		internalGenerateJavaClass(
< 				myEmitters.getReconnectLinkSourceCommandEmitter(),
< 				myDiagram.getEditCommandsPackageName(),
< 				"Reconnect" + commandNameInfix + "SourceCommand",
< 				genLink
< 			);
< 		internalGenerateJavaClass(
< 				myEmitters.getReconnectLinkTargetCommandEmitter(),
< 				myDiagram.getEditCommandsPackageName(),
< 				"Reconnect" + commandNameInfix + "TargetCommand",
< 				genLink
< 			);
---
> 		internalGenerateJavaClass(myEmitters.getCreateLinkStartCommandEmitter(), myEmitters.getCreateLinkStartCommandQualifiedClassNameEmitter(), genLink);
> 		internalGenerateJavaClass(myEmitters.getCreateLinkCompleteCommandEmitter(), myEmitters.getCreateLinkCompleteCommandQualifiedClassNameEmitter(), genLink);
> 		internalGenerateJavaClass(myEmitters.getReconnectLinkSourceCommandEmitter(), myEmitters.getReconnectLinkSourceCommandQualifiedClassNameEmitter(), genLink);
> 		internalGenerateJavaClass(myEmitters.getReconnectLinkTargetCommandEmitter(), myEmitters.getReconnectLinkTargetCommandQualifiedClassNameEmitter(), genLink);
364,369c319
< 		String editPolicyClassName = containerBase.getEditPartClassName();
< 		if (editPolicyClassName.endsWith(GenCommonBase.EDIT_PART_SUFFIX)) {
< 			editPolicyClassName = editPolicyClassName.substring(0, editPolicyClassName.length() - GenCommonBase.EDIT_PART_SUFFIX.length());
< 		}
< 		editPolicyClassName += "LayoutEditPolicy";
< 		internalGenerateJavaClass(myEmitters.getLayoutEditPolicyEmitter(), myDiagram.getEditPoliciesPackageName(), editPolicyClassName, containerBase);
---
> 		internalGenerateJavaClass(myEmitters.getLayoutEditPolicyEmitter(), myEmitters.getLayoutEditPolicyQualifiedClassNameEmitter(), containerBase);
377,382c327
< 		String editPolicyClassName = genLink.getEditPartClassName();
< 		if (editPolicyClassName.endsWith(GenCommonBase.EDIT_PART_SUFFIX)) {
< 			editPolicyClassName = editPolicyClassName.substring(0, editPolicyClassName.length() - GenCommonBase.EDIT_PART_SUFFIX.length());
< 		}
< 		editPolicyClassName += "GraphicalNodeEditPolicy";
< 		internalGenerateJavaClass(myEmitters.getGraphicalEditPolicyEmitter(), myDiagram.getEditPoliciesPackageName(), editPolicyClassName, genLink);
---
> 		internalGenerateJavaClass(myEmitters.getGraphicalEditPolicyEmitter(), myEmitters.getGraphicalEditPolicyQualifiedClassNameEmitter(), genLink);
386,389c331
< 		//Actually, next is expected to be either GenLink or GenNode
< 		String editPolicyClassName = genElement.getEditPartClassName();
< 		if (editPolicyClassName.endsWith(GenCommonBase.EDIT_PART_SUFFIX)) {
< 			editPolicyClassName = editPolicyClassName.substring(0, editPolicyClassName.length() - GenCommonBase.EDIT_PART_SUFFIX.length());
---
> 		internalGenerateJavaClass(myEmitters.getComponentEditPolicyEmitter(), myEmitters.getComponentEditPolicyQualifiedClassNameEmitter(), genElement);
391,392c333,335
< 		editPolicyClassName += "ComponentEditPolicy";
< 		internalGenerateJavaClass(myEmitters.getComponentEditPolicyEmitter(), myDiagram.getEditPoliciesPackageName(), editPolicyClassName, genElement);
---
> 
> 	private void generateConnectionEndpointEditPolicy(GenLink genLink) throws InterruptedException, UnexpectedBehaviourException {
> 		internalGenerateJavaClass(myEmitters.getConnectionEndpointEditPolicyEmitter(), myEmitters.getConnectionEndpointEditPolicyQualifiedClassNameEmitter(), genLink);
