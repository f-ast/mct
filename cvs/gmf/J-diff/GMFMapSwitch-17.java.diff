269,274d268
< 			case GMFMapPackage.RULE_TARGET: {
< 				RuleTarget ruleTarget = (RuleTarget)theEObject;
< 				Object result = caseRuleTarget(ruleTarget);
< 				if (result == null) result = defaultCase(theEObject);
< 				return result;
< 			}
278c272,273
< 				if (result == null) result = caseRuleTarget(domainElementTarget);
---
> 				if (result == null) result = caseAuditable(domainElementTarget);
> 				if (result == null) result = caseMeasurable(domainElementTarget);
285c280,281
< 				if (result == null) result = caseRuleTarget(diagramElementTarget);
---
> 				if (result == null) result = caseAuditable(diagramElementTarget);
> 				if (result == null) result = caseMeasurable(diagramElementTarget);
292c288,321
< 				if (result == null) result = caseRuleTarget(notationElementTarget);
---
> 				if (result == null) result = caseAuditable(notationElementTarget);
> 				if (result == null) result = caseMeasurable(notationElementTarget);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFMapPackage.METRIC_CONTAINER: {
> 				MetricContainer metricContainer = (MetricContainer)theEObject;
> 				Object result = caseMetricContainer(metricContainer);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFMapPackage.METRIC_RULE: {
> 				MetricRule metricRule = (MetricRule)theEObject;
> 				Object result = caseMetricRule(metricRule);
> 				if (result == null) result = caseRuleBase(metricRule);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFMapPackage.AUDITED_METRIC_TARGET: {
> 				AuditedMetricTarget auditedMetricTarget = (AuditedMetricTarget)theEObject;
> 				Object result = caseAuditedMetricTarget(auditedMetricTarget);
> 				if (result == null) result = caseAuditable(auditedMetricTarget);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFMapPackage.AUDITABLE: {
> 				Auditable auditable = (Auditable)theEObject;
> 				Object result = caseAuditable(auditable);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFMapPackage.MEASURABLE: {
> 				Measurable measurable = (Measurable)theEObject;
> 				Object result = caseMeasurable(measurable);
646c675
< 	 * Returns the result of interpretting the object as an instance of '<em>Rule Target</em>'.
---
> 	 * Returns the result of interpretting the object as an instance of '<em>Domain Element Target</em>'.
652c681
< 	 * @return the result of interpretting the object as an instance of '<em>Rule Target</em>'.
---
> 	 * @return the result of interpretting the object as an instance of '<em>Domain Element Target</em>'.
656c685
< 	public Object caseRuleTarget(RuleTarget object) {
---
> 	public Object caseDomainElementTarget(DomainElementTarget object) {
661c690
< 	 * Returns the result of interpretting the object as an instance of '<em>Domain Element Target</em>'.
---
> 	 * Returns the result of interpretting the object as an instance of '<em>Diagram Element Target</em>'.
667c696
< 	 * @return the result of interpretting the object as an instance of '<em>Domain Element Target</em>'.
---
> 	 * @return the result of interpretting the object as an instance of '<em>Diagram Element Target</em>'.
671c700
< 	public Object caseDomainElementTarget(DomainElementTarget object) {
---
> 	public Object caseDiagramElementTarget(DiagramElementTarget object) {
676c705
< 	 * Returns the result of interpretting the object as an instance of '<em>Diagram Element Target</em>'.
---
> 	 * Returns the result of interpretting the object as an instance of '<em>Notation Element Target</em>'.
682c711
< 	 * @return the result of interpretting the object as an instance of '<em>Diagram Element Target</em>'.
---
> 	 * @return the result of interpretting the object as an instance of '<em>Notation Element Target</em>'.
686c715
< 	public Object caseDiagramElementTarget(DiagramElementTarget object) {
---
> 	public Object caseNotationElementTarget(NotationElementTarget object) {
691c720
< 	 * Returns the result of interpretting the object as an instance of '<em>Notation Element Target</em>'.
---
> 	 * Returns the result of interpretting the object as an instance of '<em>Metric Container</em>'.
697c726
< 	 * @return the result of interpretting the object as an instance of '<em>Notation Element Target</em>'.
---
> 	 * @return the result of interpretting the object as an instance of '<em>Metric Container</em>'.
701c730,790
< 	public Object caseNotationElementTarget(NotationElementTarget object) {
---
> 	public Object caseMetricContainer(MetricContainer object) {
> 		return null;
> 	}
> 
> 	/**
> 	 * Returns the result of interpretting the object as an instance of '<em>Metric Rule</em>'.
> 	 * <!-- begin-user-doc -->
> 	 * This implementation returns null;
> 	 * returning a non-null result will terminate the switch.
> 	 * <!-- end-user-doc -->
> 	 * @param object the target of the switch.
> 	 * @return the result of interpretting the object as an instance of '<em>Metric Rule</em>'.
> 	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
> 	 * @generated
> 	 */
> 	public Object caseMetricRule(MetricRule object) {
> 		return null;
> 	}
> 
> 	/**
> 	 * Returns the result of interpretting the object as an instance of '<em>Audited Metric Target</em>'.
> 	 * <!-- begin-user-doc -->
> 	 * This implementation returns null;
> 	 * returning a non-null result will terminate the switch.
> 	 * <!-- end-user-doc -->
> 	 * @param object the target of the switch.
> 	 * @return the result of interpretting the object as an instance of '<em>Audited Metric Target</em>'.
> 	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
> 	 * @generated
> 	 */
> 	public Object caseAuditedMetricTarget(AuditedMetricTarget object) {
> 		return null;
> 	}
> 
> 	/**
> 	 * Returns the result of interpretting the object as an instance of '<em>Auditable</em>'.
> 	 * <!-- begin-user-doc -->
> 	 * This implementation returns null;
> 	 * returning a non-null result will terminate the switch.
> 	 * <!-- end-user-doc -->
> 	 * @param object the target of the switch.
> 	 * @return the result of interpretting the object as an instance of '<em>Auditable</em>'.
> 	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
> 	 * @generated
> 	 */
> 	public Object caseAuditable(Auditable object) {
> 		return null;
> 	}
> 
> 	/**
> 	 * Returns the result of interpretting the object as an instance of '<em>Measurable</em>'.
> 	 * <!-- begin-user-doc -->
> 	 * This implementation returns null;
> 	 * returning a non-null result will terminate the switch.
> 	 * <!-- end-user-doc -->
> 	 * @param object the target of the switch.
> 	 * @return the result of interpretting the object as an instance of '<em>Measurable</em>'.
> 	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
> 	 * @generated
> 	 */
> 	public Object caseMeasurable(Measurable object) {
