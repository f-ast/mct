16a17
> import java.util.Collections;
33a35
> import org.eclipse.gef.ConnectionEditPart;
653a656,710
> 	/* (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.diagram.ui.internal.editparts.ISurfaceEditPart#getPrimaryEditParts()
> 	 */
> 	public List getPrimaryEditParts() {
> 		List connections = new ArrayList();
> 
> 		Object diagramEditPart = getViewer().getEditPartRegistry().get(
> 			getDiagramView());
> 
> 		List shapes = getChildren();
> 		Set connectableEditParts = new HashSet(shapes);
> 		Iterator iter = shapes.iterator();
> 		while (iter.hasNext()) {
> 			getBorderItemEditParts((EditPart) iter.next(), connectableEditParts);
> 		}
> 
> 		if (diagramEditPart instanceof DiagramEditPart) {
> 			Iterator diagramConnections = ((DiagramEditPart) diagramEditPart)
> 				.getConnections().iterator();
> 			while (diagramConnections.hasNext()) {
> 				ConnectionEditPart connection = (ConnectionEditPart) diagramConnections
> 					.next();
> 				if (connectableEditParts.contains(connection.getSource())
> 					|| connectableEditParts.contains(connection.getTarget()))
> 					connections.add(connection);
> 			}
> 		}
> 
> 		if (connections.size() > 0 || shapes.size() > 0) {
> 			List primaryEditParts = new ArrayList();
> 			primaryEditParts.addAll(shapes);
> 			primaryEditParts.addAll(connections);
> 			return primaryEditParts;
> 		}
> 		return Collections.EMPTY_LIST;
> 	}
> 	
> 	/**
> 	 * This method searches an edit part for a child that is a border item edit part
> 	 * @param parent part needed to search
> 	 * @param set to be modified of border item edit parts that are direct children of the parent
> 	 */
> 	private void getBorderItemEditParts(EditPart parent, Set retval) {
> 		
> 		Iterator iter = parent.getChildren().iterator();
> 		while(iter.hasNext()) {
> 			EditPart child = (EditPart)iter.next();
> 			if( child instanceof IBorderItemEditPart ) {
> 				retval.add(child);
> 				retval.addAll(child.getChildren());
> 			}
> 			getBorderItemEditParts(child, retval);
> 		}
> 	}
> 
