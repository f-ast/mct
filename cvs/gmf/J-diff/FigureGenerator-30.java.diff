24d23
< import org.eclipse.gmf.gmfgraph.util.FigureQualifiedNameSwitch;
33a33,42
> 
> 	private static final String VAR_MM_ACCESS = "mapModeAccessor";
> 	private static final String VAR_OUTPUT_FIELDS = "outputStaticFields";
> 	private static final String VAR_OUTPUT_METHODS = "outputAdditionalMethods";
> 	private static final String VAR_PACKAGE_STMT = "packageStatement";
> 	private static final String VAR_RT_TOKEN = "runtimeToken";
> 
> 	private static final String SLOT_FIELDS = "staticFields";
> 	private static final String SLOT_METHODS = "additionalMethods";
> 
46,47c55,62
< 	public FigureGenerator(FigureQualifiedNameSwitch fqnSwitch, boolean asInnerClass) {
< 		this(fqnSwitch, MapModeCodeGenStrategy.DYNAMIC, "getMapMode().", asInnerClass);
---
> 
> 	/**
> 	 * XXX consider using enum for runtimeToken
> 	 * @param runtimeToken either "full" or null to indicate full GMF runtime use, any other value is to be processed by custom templates 
> 	 * @param asInnerClass
> 	 */
> 	public FigureGenerator(String runtimeToken, boolean asInnerClass) {
> 		this(runtimeToken, MapModeCodeGenStrategy.DYNAMIC, "getMapMode().", asInnerClass);
50,51c65,66
< 	public FigureGenerator(FigureQualifiedNameSwitch fqnSwitch, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass) {
< 		this(fqnSwitch, mapModeStrategy, mapModeAccessor, asInnerClass, null);
---
> 	public FigureGenerator(String runtimeToken, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass) {
> 		this(runtimeToken, mapModeStrategy, mapModeAccessor, asInnerClass, null);
54c69
< 	public FigureGenerator(FigureQualifiedNameSwitch fqnSwitch, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass, URL[] dynamicTemplates) {
---
> 	public FigureGenerator(String runtimeToken, MapModeCodeGenStrategy mapModeStrategy, String mapModeAccessor, boolean asInnerClass, URL[] dynamicTemplates) {
63c78,81
< 			globals.add(new Variable("mapModeAccessor", mapModeAccessor == null ? "" : mapModeAccessor));
---
> 			globals.add(new Variable(VAR_MM_ACCESS, mapModeAccessor == null ? "" : mapModeAccessor));
> 		}
> 		if (runtimeToken != null) {
> 			globals.add(new Variable(VAR_RT_TOKEN, runtimeToken));
65,66c83
< 		globals.add(new Variable(FigureQualifiedNameSwitch.class.getSimpleName(), fqnSwitch));
< 		packageStatement = new Variable("packageStatement", "");
---
> 		packageStatement = new Variable(VAR_PACKAGE_STMT, "");
69c86
< 		globals.add(new Variable("outputAdditionalMethods", "") {
---
> 		globals.add(new Variable(VAR_OUTPUT_METHODS, "") {
75c92
< 		globals.add(new Variable("outputStaticFields", "") {
---
> 		globals.add(new Variable(VAR_OUTPUT_FIELDS, "") {
82,83c99,100
< 		slots.put("additionalMethods", additionalMethods);
< 		slots.put("staticFields", additionalFields);
---
> 		slots.put(SLOT_METHODS, additionalMethods);
> 		slots.put(SLOT_FIELDS, additionalFields);
