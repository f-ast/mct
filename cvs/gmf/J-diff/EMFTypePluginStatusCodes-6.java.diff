2c2
<  * Copyright (c) 2005 IBM Corporation and others.
---
>  * Copyright (c) 2005, 2006 IBM Corporation and others.
46a47,48
> 	public static final int CONTEXT_NOT_INITED = 16;
> 
66a69,85
> 	public static final int CLIENT_CONTEXT_NOT_INITED = 50;
> 	
> 	public static final int BINDING_NO_CONTEXT = 60;
> 	
> 	public static final int BINDING_NO_SUCH_CONTEXT = 61;
> 	
> 	public static final int PATTERN_INVALID_SYNTAX = 62;
> 	
> 	public static final int BINDING_NO_REF_OR_PATTERN = 63;
> 	
> 	public static final int BINDING_BOTH_REF_AND_PATTERN = 64;
> 	
> 	public static final int CLIENT_MATCHER_FAILURE = 70;
> 	
> 	public static final int CLIENT_NO_MATCHER = 71;
> 
> 
175a195,214
> 
> 	/**
> 	 * Convenience method to construct a new CoreException indicating that an
> 	 * element type factory initialization failed.
> 	 * 
> 	 * @param factoryName
> 	 *            the factory name
> 	 * @param reason
> 	 *            the localized reason why the element type factory
> 	 *            was not initialized
> 	 * @return the new CoreException
> 	 */
> 	public static CoreException getContextInitException(String contextId,
> 			String reason) {
> 
> 		return new CoreException(new Status(IStatus.WARNING, EMFTypePlugin
> 				.getPluginId(), CONTEXT_NOT_INITED, EMFTypeCoreMessages.bind(
> 				EMFTypeCoreMessages.clientContext_not_init_WARN_,
> 				contextId, reason), null));
> 	}
