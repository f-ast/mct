113a114
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenDiagramImpl#getShortcutPropertyTesterClassName <em>Shortcut Property Tester Class Name</em>}</li>
1222a1224,1243
> 	 * The default value of the '{@link #getShortcutPropertyTesterClassName() <em>Shortcut Property Tester Class Name</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getShortcutPropertyTesterClassName()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final String SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT = null;
> 
> 	/**
> 	 * The cached value of the '{@link #getShortcutPropertyTesterClassName() <em>Shortcut Property Tester Class Name</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getShortcutPropertyTesterClassName()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected String shortcutPropertyTesterClassName = SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT;
> 
> 	/**
1971a1993,2021
> 	public String getShortcutPropertyTesterClassNameGen() {
> 		return shortcutPropertyTesterClassName;
> 	}
> 	
> 	public String getShortcutPropertyTesterClassName() {
> 		String value = getShortcutPropertyTesterClassNameGen();
> 		if (isEmpty(value)) {
> 			value = getDomainPackageCapName() + "ShortcutPropertyTester"; //$NON-NLS-1$
> 		}
> 		return value;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setShortcutPropertyTesterClassName(String newShortcutPropertyTesterClassName) {
> 		String oldShortcutPropertyTesterClassName = shortcutPropertyTesterClassName;
> 		shortcutPropertyTesterClassName = newShortcutPropertyTesterClassName;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME, oldShortcutPropertyTesterClassName, shortcutPropertyTesterClassName));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
3670a3721,3729
> 	public String getShortcutPropertyTesterQualifiedClassName() {
> 		return getEditorPackageName() + '.' + getShortcutPropertyTesterClassName();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
3950a4010,4011
> 			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
> 				return getShortcutPropertyTesterClassName();
4166a4228,4230
> 			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
> 				setShortcutPropertyTesterClassName((String)newValue);
> 				return;
4405a4470,4472
> 			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
> 				setShortcutPropertyTesterClassName(SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT);
> 				return;
4586a4654,4655
> 			case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME:
> 				return SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT == null ? shortcutPropertyTesterClassName != null : !SHORTCUT_PROPERTY_TESTER_CLASS_NAME_EDEFAULT.equals(shortcutPropertyTesterClassName);
4718a4788
> 				case GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME: return GMFGenPackage.SHORTCUTS__SHORTCUT_PROPERTY_TESTER_CLASS_NAME;
4833a4904
> 				case GMFGenPackage.SHORTCUTS__SHORTCUT_PROPERTY_TESTER_CLASS_NAME: return GMFGenPackage.GEN_DIAGRAM__SHORTCUT_PROPERTY_TESTER_CLASS_NAME;
5296a5368,5369
> 		result.append(", shortcutPropertyTesterClassName: ");
> 		result.append(shortcutPropertyTesterClassName);
