14,19d13
< import org.eclipse.ui.IEditorInput;
< import org.eclipse.ui.IEditorMatchingStrategy;
< import org.eclipse.ui.IEditorPart;
< import org.eclipse.ui.IEditorReference;
< import org.eclipse.ui.PartInitException;
< 
26,27c20,24
< import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;
< 
---
> import org.eclipse.ui.IEditorInput;
> import org.eclipse.ui.IEditorMatchingStrategy;
> import org.eclipse.ui.IEditorPart;
> import org.eclipse.ui.IEditorReference;
> import org.eclipse.ui.PartInitException;
30a28
>  * 
37,38c35,39
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.ui.IEditorMatchingStrategy#matches(org.eclipse.ui.IEditorReference, org.eclipse.ui.IEditorInput)
---
> 	/*
> 	 * (non-Javadoc)
> 	 * 
> 	 * @see org.eclipse.ui.IEditorMatchingStrategy#matches(org.eclipse.ui.IEditorReference,
> 	 *      org.eclipse.ui.IEditorInput)
63c64,67
< 			IDiagramDocumentProvider docProvider = (IDiagramDocumentProvider)DocumentProviderRegistry.getDefault().getDocumentProvider(input, new IDocumentProviderSelector() {
---
> 			IDiagramDocumentProvider docProvider = (IDiagramDocumentProvider) DocumentProviderRegistry
> 				.getDefault().getDocumentProvider(input,
> 					new IDocumentProviderSelector() {
> 
66c70,71
< 					return documentType.equals(IDiagramDocument.class.getName());
---
> 							return documentType.equals(IDiagramDocument.class
> 								.getName());
71c76,78
< 				IEditorInput editorInput = docProvider.createInputWithEditingDomain(input, getDefaultDomain());
---
> 				IEditorInput editorInput = docProvider
> 					.createInputWithEditingDomain(input,
> 						((DiagramDocumentEditor) editor).getEditingDomain());
78,84d84
< 	/**
< 	 * Gets the default editing domain for this matching strategy.
< 	 * @return <code>MEditingDomain</code>
< 	 */
< 	public MEditingDomain getDefaultDomain() {
< 		return MEditingDomain.INSTANCE;
< 	}
