61a62
> 	public static final String OPTION_OUTPUT_RESOURCE_FULL_PATH = SECTION_ID + ".outputResource";
64a66
> 	private FileNameOption myOutputGalleryPathOption;
71c73,75
< 		myInputPathOption = addFileNameOption(OPTION_INPUT_RESOURCE_FULL_PATH, "Input GMFGraph instance", "", THE_ONLY_PAGE_INDEX);
---
> 		myInputPathOption = addFileNameOption(false, OPTION_INPUT_RESOURCE_FULL_PATH, "Input GMFGraph instance", "", THE_ONLY_PAGE_INDEX);
> 		myOutputGalleryPathOption = addFileNameOption(true, OPTION_OUTPUT_RESOURCE_FULL_PATH, "Create Figure Gallery", "", THE_ONLY_PAGE_INDEX);
> 		myOutputGalleryPathOption.setRequired(false);
84a89
> 		validateOptions(myOutputGalleryPathOption);
118a124,139
> 		createFigureGallery(generator.getGenerationInfo());
> 	}
> 	
> 	private void createFigureGallery(StandaloneGenerator.GenerationInfo info) throws CoreException {
> 		if (!myOutputGalleryPathOption.isEmpty()){
> 			String path = myOutputGalleryPathOption.getText();
> 			Resource galleryResource = new ResourceSetImpl().createResource(URI.createFileURI(path));
> 			galleryResource.getContents().add(new StandaloneGalleryConverter().convertFigureGallery(info));
> 			try {
> 				galleryResource.save(null);
> 			} catch (IOException e) {
> 				throw new CoreException(new Status(//
> 						IStatus.ERROR, MY_PLUGIN_ID, 0, e.getMessage(), e
> 				));
> 			}
> 		}
179a201,203
> 		if (!validateOutputGalleryPath()){
> 			return;
> 		}
243c267
< 	private FileNameOption addFileNameOption(String name, String label, String value, int pageIndex) {
---
> 	private FileNameOption addFileNameOption(boolean saveNotLoad, String name, String label, String value, int pageIndex) {
244a269
> 		result.setSaveNotLoad(saveNotLoad);
271a297,313
> 	private boolean validateOutputGalleryPath() {
> 		if (myOutputGalleryPathOption.isEmpty()){
> 			//optional -- ok
> 			return true;
> 		}
> 		String path = myOutputGalleryPathOption.getText();
> 		try {
> 			URI.createFileURI(path);
> 		} catch (IllegalArgumentException e){
> 			String message = MessageFormat.format("Path {0} is invalid", new Object[] {path});
> 			getTheOnlyPage().setPageComplete(false);
> 			getTheOnlyPage().setErrorMessage(message);
> 			return false;
> 		}
> 		return true;
> 	}
> 
