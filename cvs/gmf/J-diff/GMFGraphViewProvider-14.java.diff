14d13
< import org.eclipse.emf.ecore.EClass;
16,18d14
< import org.eclipse.gmf.runtime.diagram.core.providers.AbstractViewProvider;
< import org.eclipse.gmf.runtime.notation.View;
< import org.eclipse.gmf.runtime.emf.type.core.IElementType;
19a16,17
> import org.eclipse.gmf.graphdef.editor.edit.parts.ChildAccessEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentAccessorEditPart;
25a24,25
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramElementFigureEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelAccessorEditPart;
26a27
> import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;
27a29,30
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorNameEditPart;
34a38
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;
36a41
> import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;
38a44
> import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;
40d45
< 
42d46
< 
43a48,49
> import org.eclipse.gmf.graphdef.editor.view.factories.ChildAccessViewFactory;
> import org.eclipse.gmf.graphdef.editor.view.factories.CompartmentAccessorViewFactory;
50a57
> import org.eclipse.gmf.graphdef.editor.view.factories.DiagramLabelAccessorViewFactory;
51a59
> import org.eclipse.gmf.graphdef.editor.view.factories.Ellipse3ViewFactory;
52a61,62
> import org.eclipse.gmf.graphdef.editor.view.factories.FigureDescriptorNameViewFactory;
> import org.eclipse.gmf.graphdef.editor.view.factories.FigureDescriptorViewFactory;
59a70
> import org.eclipse.gmf.graphdef.editor.view.factories.Polyline3ViewFactory;
61a73
> import org.eclipse.gmf.graphdef.editor.view.factories.Rectangle3ViewFactory;
63a76
> import org.eclipse.gmf.graphdef.editor.view.factories.RoundedRectangle3ViewFactory;
64a78,81
> import org.eclipse.gmf.runtime.diagram.core.providers.AbstractViewProvider;
> import org.eclipse.gmf.runtime.emf.type.core.IElementType;
> import org.eclipse.gmf.runtime.emf.type.core.IHintedType;
> import org.eclipse.gmf.runtime.notation.View;
90c107,111
< 		if (elementType != null && !GMFGraphElementTypes.isKnownElementType(elementType)) {
---
> 		EObject domainElement = getSemanticElement(semanticAdapter);
> 
> 		int visualID;
> 		if (semanticHint == null) {
> 			if (elementType != null || domainElement == null) {
93,96c114,159
< 		EClass semanticType = getSemanticEClass(semanticAdapter);
< 		EObject semanticElement = getSemanticElement(semanticAdapter);
< 		int nodeVID = GMFGraphVisualIDRegistry.getNodeVisualID(containerView, semanticElement, semanticType, semanticHint);
< 		switch (nodeVID) {
---
> 			visualID = GMFGraphVisualIDRegistry.getNodeVisualID(containerView, domainElement);
> 		} else {
> 			visualID = GMFGraphVisualIDRegistry.getVisualID(semanticHint);
> 			if (elementType != null) {
> 				if (!GMFGraphElementTypes.isKnownElementType(elementType) || false == elementType instanceof IHintedType) {
> 					return null;
> 				}
> 				String elementTypeHint = ((IHintedType) elementType).getSemanticHint();
> 				if (!semanticHint.equals(elementTypeHint)) {
> 					return null;
> 				}
> 				if (domainElement != null && visualID != GMFGraphVisualIDRegistry.getNodeVisualID(containerView, domainElement)) {
> 					return null;
> 				}
> 			} else {
> 				switch (visualID) {
> 				case CanvasEditPart.VISUAL_ID:
> 				case CompartmentEditPart.VISUAL_ID:
> 				case NodeEditPart.VISUAL_ID:
> 				case ConnectionEditPart.VISUAL_ID:
> 				case FigureGalleryEditPart.VISUAL_ID:
> 				case FigureDescriptorEditPart.VISUAL_ID:
> 				case RectangleEditPart.VISUAL_ID:
> 				case Rectangle2EditPart.VISUAL_ID:
> 				case EllipseEditPart.VISUAL_ID:
> 				case RoundedRectangleEditPart.VISUAL_ID:
> 				case PolylineEditPart.VISUAL_ID:
> 				case Ellipse2EditPart.VISUAL_ID:
> 				case RoundedRectangle2EditPart.VISUAL_ID:
> 				case Polyline2EditPart.VISUAL_ID:
> 				case Rectangle3EditPart.VISUAL_ID:
> 				case Ellipse3EditPart.VISUAL_ID:
> 				case RoundedRectangle3EditPart.VISUAL_ID:
> 				case Polyline3EditPart.VISUAL_ID:
> 				case ChildAccessEditPart.VISUAL_ID:
> 				case CompartmentAccessorEditPart.VISUAL_ID:
> 				case DiagramLabelAccessorEditPart.VISUAL_ID:
> 				case DiagramElementFigureEditPart.VISUAL_ID:
> 					return null;
> 				}
> 			}
> 		}
> 		if (!GMFGraphVisualIDRegistry.canCreateNode(containerView, visualID)) {
> 			return null;
> 		}
> 		switch (visualID) {
112a176,179
> 		case FigureDescriptorEditPart.VISUAL_ID:
> 			return FigureDescriptorViewFactory.class;
> 		case FigureDescriptorNameEditPart.VISUAL_ID:
> 			return FigureDescriptorNameViewFactory.class;
128a196,203
> 		case Rectangle3EditPart.VISUAL_ID:
> 			return Rectangle3ViewFactory.class;
> 		case Ellipse3EditPart.VISUAL_ID:
> 			return Ellipse3ViewFactory.class;
> 		case RoundedRectangle3EditPart.VISUAL_ID:
> 			return RoundedRectangle3ViewFactory.class;
> 		case Polyline3EditPart.VISUAL_ID:
> 			return Polyline3ViewFactory.class;
146c221
< 		if (elementType != null && !GMFGraphElementTypes.isKnownElementType(elementType)) {
---
> 		if (elementType == null) {
149,150c224,225
< 		if (GMFGraphElementTypes.DiagramElementFigure_4001.equals(elementType)) {
< 			return DiagramElementFigureViewFactory.class;
---
> 		if (!GMFGraphElementTypes.isKnownElementType(elementType) || false == elementType instanceof IHintedType) {
> 			return null;
152,153c227,228
< 		EClass semanticType = getSemanticEClass(semanticAdapter);
< 		if (semanticType == null) {
---
> 		String elementTypeHint = ((IHintedType) elementType).getSemanticHint();
> 		if (elementTypeHint == null) {
156,158c231,237
< 		EObject semanticElement = getSemanticElement(semanticAdapter);
< 		int linkVID = GMFGraphVisualIDRegistry.getLinkWithClassVisualID(semanticElement, semanticType);
< 		switch (linkVID) {
---
> 		if (semanticHint != null && !semanticHint.equals(elementTypeHint)) {
> 			return null;
> 		}
> 		int visualID = GMFGraphVisualIDRegistry.getVisualID(elementTypeHint);
> 		EObject domainElement = getSemanticElement(semanticAdapter);
> 		if (domainElement != null && visualID != GMFGraphVisualIDRegistry.getLinkWithClassVisualID(domainElement)) {
> 			return null;
160c239,249
< 		return getUnrecognizedConnectorViewClass(semanticAdapter, containerView, semanticHint);
---
> 		switch (visualID) {
> 		case ChildAccessEditPart.VISUAL_ID:
> 			return ChildAccessViewFactory.class;
> 		case CompartmentAccessorEditPart.VISUAL_ID:
> 			return CompartmentAccessorViewFactory.class;
> 		case DiagramLabelAccessorEditPart.VISUAL_ID:
> 			return DiagramLabelAccessorViewFactory.class;
> 		case DiagramElementFigureEditPart.VISUAL_ID:
> 			return DiagramElementFigureViewFactory.class;
> 		}
> 		return null;
173,180d261
< 	/**
< 	 * @generated
< 	 */
< 	private Class getUnrecognizedConnectorViewClass(IAdaptable semanticAdapter, View containerView, String semanticHint) {
< 		// Handle unrecognized child node classes here
< 		return null;
< 	}
< 
