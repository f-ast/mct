16d15
< import org.eclipse.emf.ecore.EStructuralFeature;
28d26
< import org.eclipse.gmf.codegen.gmfgen.Viewmap;
165c163
< 		return (GenDiagram)eContainer;
---
> 		return (GenDiagram)eContainer();
191,333c189,190
< 	public EList getLabels() {
< 		if (labels == null) {
< 			labels = new EObjectContainmentWithInverseEList(GenNodeLabel.class, this, GMFGenPackage.GEN_NODE__LABELS, GMFGenPackage.GEN_NODE_LABEL__NODE);
< 		}
< 		return labels;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public EList getCompartments() {
< 		if (compartments == null) {
< 			compartments = new EObjectContainmentWithInverseEList(GenCompartment.class, this, GMFGenPackage.GEN_NODE__COMPARTMENTS, GMFGenPackage.GEN_COMPARTMENT__NODE);
< 		}
< 		return compartments;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public CompartmentPlacementKind getChildContainersPlacement() {
< 		return childContainersPlacement;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setChildContainersPlacement(CompartmentPlacementKind newChildContainersPlacement) {
< 		CompartmentPlacementKind oldChildContainersPlacement = childContainersPlacement;
< 		childContainersPlacement = newChildContainersPlacement == null ? CHILD_CONTAINERS_PLACEMENT_EDEFAULT : newChildContainersPlacement;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__CHILD_CONTAINERS_PLACEMENT, oldChildContainersPlacement, childContainersPlacement));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public boolean isExplicitContentPane() {
< 		return explicitContentPane;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setExplicitContentPane(boolean newExplicitContentPane) {
< 		boolean oldExplicitContentPane = explicitContentPane;
< 		explicitContentPane = newExplicitContentPane;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__EXPLICIT_CONTENT_PANE, oldExplicitContentPane, explicitContentPane));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String getGraphicalNodeEditPolicyClassNameGen() {
< 		return graphicalNodeEditPolicyClassName;
< 	}
< 
< 	public String getGraphicalNodeEditPolicyClassName() {
< 		String value = getGraphicalNodeEditPolicyClassNameGen();
< 		if (isEmpty(value)) {
< 			value = getClassNamePart() + GRAPHICAL_NODE_EDIT_POLICY_SUFFIX;
< 		}
< 		return value;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setGraphicalNodeEditPolicyClassName(String newGraphicalNodeEditPolicyClassName) {
< 		String oldGraphicalNodeEditPolicyClassName = graphicalNodeEditPolicyClassName;
< 		graphicalNodeEditPolicyClassName = newGraphicalNodeEditPolicyClassName;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME, oldGraphicalNodeEditPolicyClassName, graphicalNodeEditPolicyClassName));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public TypeModelFacet getModelFacet() {
< 		return modelFacet;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public NotificationChain basicSetModelFacet(TypeModelFacet newModelFacet, NotificationChain msgs) {
< 		TypeModelFacet oldModelFacet = modelFacet;
< 		modelFacet = newModelFacet;
< 		if (eNotificationRequired()) {
< 			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__MODEL_FACET, oldModelFacet, newModelFacet);
< 			if (msgs == null) msgs = notification; else msgs.add(notification);
< 		}
< 		return msgs;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setModelFacet(TypeModelFacet newModelFacet) {
< 		if (newModelFacet != modelFacet) {
< 			NotificationChain msgs = null;
< 			if (modelFacet != null)
< 				msgs = ((InternalEObject)modelFacet).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_NODE__MODEL_FACET, null, msgs);
< 			if (newModelFacet != null)
< 				msgs = ((InternalEObject)newModelFacet).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_NODE__MODEL_FACET, null, msgs);
< 			msgs = basicSetModelFacet(newModelFacet, msgs);
< 			if (msgs != null) msgs.dispatch();
< 		}
< 		else if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__MODEL_FACET, newModelFacet, newModelFacet));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
< 		if (featureID >= 0) {
< 			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
< 				case GMFGenPackage.GEN_NODE__CHILD_NODES:
< 					return ((InternalEList)getChildNodes()).basicAdd(otherEnd, msgs);
---
> 	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
> 		switch (featureID) {
335c192
< 					if (eContainer != null)
---
> 				if (eInternalContainer() != null)
342,344d198
< 				default:
< 					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
< 			}
346,348c200
< 		if (eContainer != null)
< 			msgs = eBasicRemoveFromContainer(msgs);
< 		return eBasicSetContainer(otherEnd, featureID, msgs);
---
> 		return super.eInverseAdd(otherEnd, featureID, msgs);
356,362c208,209
< 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
< 		if (featureID >= 0) {
< 			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
< 				case GMFGenPackage.GEN_NODE__VIEWMAP:
< 					return basicSetViewmap(null, msgs);
< 				case GMFGenPackage.GEN_NODE__CHILD_NODES:
< 					return ((InternalEList)getChildNodes()).basicRemove(otherEnd, msgs);
---
> 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
> 		switch (featureID) {
371,373d217
< 				default:
< 					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
< 			}
375c219
< 		return eBasicSetContainer(null, featureID, msgs);
---
> 		return super.eInverseRemove(otherEnd, featureID, msgs);
383,384c227
< 	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
< 		if (eContainerFeatureID >= 0) {
---
> 	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
387,390c230
< 					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__NODES, GenDiagram.class, msgs);
< 				default:
< 					return eDynamicBasicRemoveFromContainer(msgs);
< 			}
---
> 				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__NODES, GenDiagram.class, msgs);
392c232
< 		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
---
> 		return super.eBasicRemoveFromContainerFeature(msgs);
400,418c240,241
< 	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				if (resolve) return getDiagramRunTimeClass();
< 				return basicGetDiagramRunTimeClass();
< 			case GMFGenPackage.GEN_NODE__VISUAL_ID:
< 				return new Integer(getVisualID());
< 			case GMFGenPackage.GEN_NODE__EDIT_PART_CLASS_NAME:
< 				return getEditPartClassName();
< 			case GMFGenPackage.GEN_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				return getItemSemanticEditPolicyClassName();
< 			case GMFGenPackage.GEN_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				return getNotationViewFactoryClassName();
< 			case GMFGenPackage.GEN_NODE__VIEWMAP:
< 				return getViewmap();
< 			case GMFGenPackage.GEN_NODE__CHILD_NODES:
< 				return getChildNodes();
< 			case GMFGenPackage.GEN_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				return getCanonicalEditPolicyClassName();
---
> 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
> 		switch (featureID) {
434c257
< 		return eDynamicGet(eFeature, resolve);
---
> 		return super.eGet(featureID, resolve, coreType);
442,468c265,266
< 	public void eSet(EStructuralFeature eFeature, Object newValue) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				setDiagramRunTimeClass((GenClass)newValue);
< 				return;
< 			case GMFGenPackage.GEN_NODE__VISUAL_ID:
< 				setVisualID(((Integer)newValue).intValue());
< 				return;
< 			case GMFGenPackage.GEN_NODE__EDIT_PART_CLASS_NAME:
< 				setEditPartClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				setItemSemanticEditPolicyClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				setNotationViewFactoryClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_NODE__VIEWMAP:
< 				setViewmap((Viewmap)newValue);
< 				return;
< 			case GMFGenPackage.GEN_NODE__CHILD_NODES:
< 				getChildNodes().clear();
< 				getChildNodes().addAll((Collection)newValue);
< 				return;
< 			case GMFGenPackage.GEN_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				setCanonicalEditPolicyClassName((String)newValue);
< 				return;
---
> 	public void eSet(int featureID, Object newValue) {
> 		switch (featureID) {
490c288
< 		eDynamicSet(eFeature, newValue);
---
> 		super.eSet(featureID, newValue);
498,523c296,297
< 	public void eUnset(EStructuralFeature eFeature) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				setDiagramRunTimeClass((GenClass)null);
< 				return;
< 			case GMFGenPackage.GEN_NODE__VISUAL_ID:
< 				setVisualID(VISUAL_ID_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_NODE__EDIT_PART_CLASS_NAME:
< 				setEditPartClassName(EDIT_PART_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				setItemSemanticEditPolicyClassName(ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_NODE__VIEWMAP:
< 				setViewmap((Viewmap)null);
< 				return;
< 			case GMFGenPackage.GEN_NODE__CHILD_NODES:
< 				getChildNodes().clear();
< 				return;
< 			case GMFGenPackage.GEN_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				setCanonicalEditPolicyClassName(CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT);
< 				return;
---
> 	public void eUnset(int featureID) {
> 		switch (featureID) {
543c317
< 		eDynamicUnset(eFeature);
---
> 		super.eUnset(featureID);
551,568c325,326
< 	public boolean eIsSet(EStructuralFeature eFeature) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				return diagramRunTimeClass != null;
< 			case GMFGenPackage.GEN_NODE__VISUAL_ID:
< 				return visualID != VISUAL_ID_EDEFAULT;
< 			case GMFGenPackage.GEN_NODE__EDIT_PART_CLASS_NAME:
< 				return EDIT_PART_CLASS_NAME_EDEFAULT == null ? editPartClassName != null : !EDIT_PART_CLASS_NAME_EDEFAULT.equals(editPartClassName);
< 			case GMFGenPackage.GEN_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				return ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? itemSemanticEditPolicyClassName != null : !ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(itemSemanticEditPolicyClassName);
< 			case GMFGenPackage.GEN_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : !NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals(notationViewFactoryClassName);
< 			case GMFGenPackage.GEN_NODE__VIEWMAP:
< 				return viewmap != null;
< 			case GMFGenPackage.GEN_NODE__CHILD_NODES:
< 				return childNodes != null && !childNodes.isEmpty();
< 			case GMFGenPackage.GEN_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				return CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? canonicalEditPolicyClassName != null : !CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(canonicalEditPolicyClassName);
---
> 	public boolean eIsSet(int featureID) {
> 		switch (featureID) {
584c342,480
< 		return eDynamicIsSet(eFeature);
---
> 		return super.eIsSet(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EList getLabels() {
> 		if (labels == null) {
> 			labels = new EObjectContainmentWithInverseEList(GenNodeLabel.class, this, GMFGenPackage.GEN_NODE__LABELS, GMFGenPackage.GEN_NODE_LABEL__NODE);
> 		}
> 		return labels;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EList getCompartments() {
> 		if (compartments == null) {
> 			compartments = new EObjectContainmentWithInverseEList(GenCompartment.class, this, GMFGenPackage.GEN_NODE__COMPARTMENTS, GMFGenPackage.GEN_COMPARTMENT__NODE);
> 		}
> 		return compartments;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public CompartmentPlacementKind getChildContainersPlacement() {
> 		return childContainersPlacement;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setChildContainersPlacement(CompartmentPlacementKind newChildContainersPlacement) {
> 		CompartmentPlacementKind oldChildContainersPlacement = childContainersPlacement;
> 		childContainersPlacement = newChildContainersPlacement == null ? CHILD_CONTAINERS_PLACEMENT_EDEFAULT : newChildContainersPlacement;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__CHILD_CONTAINERS_PLACEMENT, oldChildContainersPlacement, childContainersPlacement));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public boolean isExplicitContentPane() {
> 		return explicitContentPane;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setExplicitContentPane(boolean newExplicitContentPane) {
> 		boolean oldExplicitContentPane = explicitContentPane;
> 		explicitContentPane = newExplicitContentPane;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__EXPLICIT_CONTENT_PANE, oldExplicitContentPane, explicitContentPane));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String getGraphicalNodeEditPolicyClassNameGen() {
> 		return graphicalNodeEditPolicyClassName;
> 	}
> 
> 	public String getGraphicalNodeEditPolicyClassName() {
> 		String value = getGraphicalNodeEditPolicyClassNameGen();
> 		if (isEmpty(value)) {
> 			value = getClassNamePart() + GRAPHICAL_NODE_EDIT_POLICY_SUFFIX;
> 		}
> 		return value;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setGraphicalNodeEditPolicyClassName(String newGraphicalNodeEditPolicyClassName) {
> 		String oldGraphicalNodeEditPolicyClassName = graphicalNodeEditPolicyClassName;
> 		graphicalNodeEditPolicyClassName = newGraphicalNodeEditPolicyClassName;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME, oldGraphicalNodeEditPolicyClassName, graphicalNodeEditPolicyClassName));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public TypeModelFacet getModelFacet() {
> 		return modelFacet;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public NotificationChain basicSetModelFacet(TypeModelFacet newModelFacet, NotificationChain msgs) {
> 		TypeModelFacet oldModelFacet = modelFacet;
> 		modelFacet = newModelFacet;
> 		if (eNotificationRequired()) {
> 			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__MODEL_FACET, oldModelFacet, newModelFacet);
> 			if (msgs == null) msgs = notification; else msgs.add(notification);
> 		}
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setModelFacet(TypeModelFacet newModelFacet) {
> 		if (newModelFacet != modelFacet) {
> 			NotificationChain msgs = null;
> 			if (modelFacet != null)
> 				msgs = ((InternalEObject)modelFacet).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_NODE__MODEL_FACET, null, msgs);
> 			if (newModelFacet != null)
> 				msgs = ((InternalEObject)newModelFacet).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_NODE__MODEL_FACET, null, msgs);
> 			msgs = basicSetModelFacet(newModelFacet, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__MODEL_FACET, newModelFacet, newModelFacet));
