2c2
<  * Copyright (c) 2005 IBM Corporation and others.
---
>  * Copyright (c) 2005, 2006 IBM Corporation and others.
13a14,15
> import java.util.Iterator;
> 
18a21,23
> import org.eclipse.gef.EditPart;
> import org.eclipse.gef.EditPolicy;
> import org.eclipse.gef.editparts.AbstractGraphicalEditPart;
19a25
> import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
48a55,87
>      * remove all the canonical edit policies on the passed edit part, if the considerChildren 
>      * flag is ON, it will remove the canonical editpolicies on every edit part in the 
>      * passed edit part hirarchy
>      * @param editPart the edit part to remove the edit policy from
>      * @param considerChildren determine the the canonical edit policies will be removed from 
>      *        children as well or not
>      */
>     public static void removeCanonicalEditPolicies(EditPart editPart, boolean considerChildren) {
>         EditPolicy ep = editPart.getEditPolicy(EditPolicyRoles.CANONICAL_ROLE);
>         if (ep!=null){
>             editPart.removeEditPolicy(ep);
>         }
>         if (considerChildren){
>             Iterator childrenIterator = editPart.getChildren().iterator();
>             removeCanonicalEditPolicies(childrenIterator);
>             if (editPart instanceof AbstractGraphicalEditPart){
>                 AbstractGraphicalEditPart gEP = (AbstractGraphicalEditPart)editPart;
>                 Iterator sourceConnectionsIterator = gEP.getSourceConnections().iterator();
>                 removeCanonicalEditPolicies(sourceConnectionsIterator);
>                 Iterator targetConnectionsIterator = gEP.getTargetConnections().iterator();
>                 removeCanonicalEditPolicies(targetConnectionsIterator);
>             }
>         }
>     }
> 
>     private static void removeCanonicalEditPolicies(Iterator childrenIterator) {
>         while (childrenIterator.hasNext()) {
>             EditPart child = (EditPart)childrenIterator.next();
>             removeCanonicalEditPolicies(child,true);
>         }
>     }
> 	
> 	/**
