24d23
< import org.eclipse.draw2d.geometry.PrecisionRectangle;
177,178d175
< 		Rectangle originalBounds = new PrecisionRectangle(new Rectangle(calculateImageRectangle(editParts)));
< 		mm.LPtoDP(originalBounds);
180,182c177
< 		int deviceMargins = mm.LPtoDP(getImageMargin());
< 		int threshold = useMargins ? deviceMargins : 0; 
< 		double xScalingFactor = 1.0, yScalingFactor = xScalingFactor;
---
> 		ConstrainedImageRenderingData data = getConstrainedImageRenderingData(editParts, maxDeviceWidth, maxDeviceHeight, useMargins);
184,203c179
< 		originalBounds.shrink(deviceMargins, deviceMargins);
< 		
< 		if (maxDeviceWidth > threshold) {
< 			xScalingFactor = (maxDeviceWidth  - threshold - threshold)/ (originalBounds.preciseWidth());
< 		}
< 		if (maxDeviceHeight > threshold) {
< 			yScalingFactor = (maxDeviceHeight - threshold - threshold) / (originalBounds.preciseHeight());
< 		}
< 		
< 		double scalingFactor = Math.min(Math.min(xScalingFactor, yScalingFactor), 1);
< 		
< 		int imageWidth = originalBounds.width + threshold + threshold;
< 		int imageHeight = originalBounds.height + threshold + threshold;
< 		
< 		if (scalingFactor < 1) {
< 			imageWidth = (int) Math.round(originalBounds.preciseWidth() * scalingFactor) + threshold + threshold;
< 			imageHeight = (int) Math.round(originalBounds.preciseHeight() * scalingFactor) + threshold + threshold;
< 		}
< 		
< 		awtImage = new BufferedImage(imageWidth, imageHeight, BufferedImage.TYPE_4BYTE_ABGR_PRE);
---
> 		awtImage = new BufferedImage(data.imageWidth, data.imageHeight, BufferedImage.TYPE_4BYTE_ABGR_PRE);
227c203
< 				new org.eclipse.swt.graphics.Rectangle(0, 0, imageWidth, imageHeight));
---
> 				new org.eclipse.swt.graphics.Rectangle(0, 0, data.imageWidth, data.imageHeight));
234,235c210,211
< 		g2d.translate(threshold, threshold);
< 		mapModeGraphics.scale(scalingFactor);
---
> 		g2d.translate(data.margin, data.margin);
> 		mapModeGraphics.scale(data.scalingFactor);
237c213
< 		Point location = new PrecisionPoint(originalBounds.preciseX(), originalBounds.preciseY());
---
> 		Point location = new PrecisionPoint(data.imageOriginalBounds.preciseX(), data.imageOriginalBounds.preciseY());
