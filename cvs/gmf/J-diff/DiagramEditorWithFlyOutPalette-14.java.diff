2c2
<  * Copyright (c) 2002, 2007 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2008 IBM Corporation and others.
26a27
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
34a36
> import org.eclipse.jface.preference.IPreferenceStore;
322,324c324,325
< 			FlyoutPaletteComposite.FlyoutPreferences flyoutPrefs = new FlyoutPreferencesImpl();
< 			flyoutPrefs.setPaletteState(getInitialPaletteState());
< 			flyoutPrefs.setPaletteWidth(getInitialPaletteSize());
---
> 			FlyoutPaletteComposite.FlyoutPreferences flyoutPrefs = new FlyoutPreferencesImpl(
>                 getPreferenceStore());
352a354,366
>      * Returns a preference store where GMF global workspace preferences can be
>      * saved. For example, the palette customizations are saved in this
>      * preference store. These settings are workspace-wide and not specific to
>      * any particular diagram.  Override to customize.
>      * 
>      * @return the preference store
>      * @since 2.1
>      */
>     protected IPreferenceStore getPreferenceStore() {
>         return DiagramUIPlugin.getInstance().getPreferenceStore();
>     }
> 	
> 	/**
444a459,469
>     /**
>      * Returns the initial docking location of the palette either
>      * {@link PositionConstants#EAST} or {@link PositionConstants#WEST}. The
>      * 
>      * @return the initial dock location either {@link PositionConstants#EAST}
>      *         or {@link PositionConstants#WEST}
>      */
>     protected int getInitialDockLocation() {
>         return PositionConstants.EAST;
>     }
> 
524c549,550
< 	 * An implementation of the fly-out palette preferences.
---
>      * An implementation of the fly-out palette preferences that stores the
>      * flyout palette settings in the given Preferences.
526c552
< 	private static final class FlyoutPreferencesImpl
---
> 	private final class FlyoutPreferencesImpl
529,530c555,557
< 		// 'EAST' is the default dock location
< 		private int dockLocation = PositionConstants.EAST;
---
>         private static final String PALETTE_DOCK_LOCATION = "org.eclipse.gmf.pdock"; //$NON-NLS-1$
>         private static final String PALETTE_SIZE = "org.eclipse.gmf.psize"; //$NON-NLS-1$
>         private static final String PALETTE_STATE = "org.eclipse.gmf.pstate"; //$NON-NLS-1$
532,534c559
< 		// '4' is the value of the FlyoutPaletteComposite.STATE_UNCOLLAPSED constant
< 		//   which is private.
< 		private int paletteState = UNCOLLAPSED_PINNED;
---
>         private IPreferenceStore preferences;
536,538c561,563
< 		// '125' is the value of the FlyoutPaletteComposite.DEFAULT_PALETTE_SIZE constant
< 		//   which was formerly public but is now private
< 		private int paletteWidth = 125;
---
>         private FlyoutPreferencesImpl(IPreferenceStore preferenceStore) {
>             preferences = preferenceStore;
>         }
540,542d564
< 		/* (non-Javadoc)
< 		 * @see org.eclipse.gef.ui.palette.FlyoutPaletteComposite.FlyoutPreferences#getDockLocation()
< 		 */
544c566,570
< 			return dockLocation;
---
>             if (preferences.contains(PALETTE_DOCK_LOCATION)) {
>                 return preferences.getInt(PALETTE_DOCK_LOCATION);
>             } else {
>                 return getInitialDockLocation();
>             }
547,549d572
< 		/* (non-Javadoc)
< 		 * @see org.eclipse.gef.ui.palette.FlyoutPaletteComposite.FlyoutPreferences#getPaletteState()
< 		 */
551c574,578
< 			return paletteState;
---
>             if (preferences.contains(PALETTE_STATE)) {
>                 return preferences.getInt(PALETTE_STATE);
>             } else {
>                 return getInitialPaletteState();
>             }
554,556d580
< 		/* (non-Javadoc)
< 		 * @see org.eclipse.gef.ui.palette.FlyoutPaletteComposite.FlyoutPreferences#getPaletteWidth()
< 		 */
558c582,586
< 			return paletteWidth;
---
>             if (preferences.contains(PALETTE_SIZE)) {
>                 return preferences.getInt(PALETTE_SIZE);
>             } else {
>                 return getInitialPaletteSize();
>             }
561,563d588
< 		/* (non-Javadoc)
< 		 * @see org.eclipse.gef.ui.palette.FlyoutPaletteComposite.FlyoutPreferences#setDockLocation(int)
< 		 */
565c590
< 			dockLocation = location;
---
>             preferences.setValue(PALETTE_DOCK_LOCATION, location);
568,570d592
< 		/* (non-Javadoc)
< 		 * @see org.eclipse.gef.ui.palette.FlyoutPaletteComposite.FlyoutPreferences#setPaletteState(int)
< 		 */
572c594
< 			paletteState = state;
---
>             preferences.setValue(PALETTE_STATE, state);
575,577d596
< 		/* (non-Javadoc)
< 		 * @see org.eclipse.gef.ui.palette.FlyoutPaletteComposite.FlyoutPreferences#setPaletteWidth(int)
< 		 */
579c598
< 			paletteWidth = width;
---
>             preferences.setValue(PALETTE_SIZE, width);
625c644
<         return new PaletteCustomizerEx();
---
>         return new PaletteCustomizerEx(getPreferenceStore());
