16d15
< import org.eclipse.draw2d.FigureUtilities;
20d18
< import org.eclipse.draw2d.geometry.Dimension;
22d19
< import org.eclipse.draw2d.geometry.Rectangle;
28d24
< import org.eclipse.gef.tools.CellEditorLocator;
30,38d25
< import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
< import org.eclipse.jface.viewers.CellEditor;
< import org.eclipse.jface.viewers.ICellEditorValidator;
< import org.eclipse.swt.SWT;
< import org.eclipse.swt.accessibility.AccessibleEvent;
< import org.eclipse.swt.graphics.Color;
< import org.eclipse.swt.graphics.Image;
< import org.eclipse.swt.widgets.Text;
< 
47a35
> import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
53d40
< import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
60,61d46
< import org.eclipse.gmf.runtime.gef.ui.parts.TextCellEditorEx;
< import org.eclipse.gmf.runtime.gef.ui.parts.WrapTextCellEditor;
64a50,54
> import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
> import org.eclipse.jface.viewers.ICellEditorValidator;
> import org.eclipse.swt.accessibility.AccessibleEvent;
> import org.eclipse.swt.graphics.Color;
> import org.eclipse.swt.graphics.Image;
76,99d65
< 	/**
< 	 * the text cell editor locator
< 	 * @author mmostafa
< 	 *
< 	 */
< 	public class TextCellEditorLocator implements CellEditorLocator {
< 
< 		public void relocate(CellEditor celleditor) {
< 			Text text = (Text) celleditor.getControl();
< 			Rectangle rect = getLabel().getTextBounds().getCopy();
< 			getLabel().translateToAbsolute(rect);
< 			
< 			if (getLabel().isTextWrapped() && getLabel().getText().length() > 0)
< 				rect.setSize(new Dimension(text.computeSize(rect.width, SWT.DEFAULT)));
< 			else {
< 				int avr = FigureUtilities.getFontMetrics(text.getFont()).getAverageCharWidth();
< 				rect.setSize(new Dimension(text.computeSize(SWT.DEFAULT, SWT.DEFAULT)).expand(avr*2, 0));
< 			}
< 
< 			if (!rect.equals(new Rectangle(text.getBounds())))
< 				text.setBounds(rect.x, rect.y, rect.width, rect.height);
< 		}
< 
< 	}
577,581c543
< 					this,
< 					getLabel().isTextWrapped()
< 						? WrapTextCellEditor.class
< 						: TextCellEditorEx.class,
< 					new TextCellEditorLocator()));
---
> 					this));
