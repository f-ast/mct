32a33,34
> import org.eclipse.gmf.runtime.gef.ui.palette.customize.PaletteCustomizerEx;
> import org.eclipse.gmf.runtime.gef.ui.palette.customize.PaletteViewerEx;
139c141
< 		return new PaletteViewer();
---
> 		return new PaletteViewerEx();
179c181
< 
---
>                 viewer.setCustomizer(createPaletteCustomizer());
386a389
> 	    PaletteRoot paletteRoot;
388c391
< 			return PaletteService.getInstance().createPalette(this,
---
> 			paletteRoot = PaletteService.getInstance().createPalette(this,
393c396
< 			return existingPaletteRoot;
---
> 			paletteRoot = existingPaletteRoot;
394a398,399
>         applyCustomizationsToPalette(paletteRoot);
>         return paletteRoot;
456,464d460
< 		viewer.setCustomizer(new PaletteCustomizer() {
< 			public void revertToSaved() {
< 			    //
< 			}
< 
< 			public void save() {
< 			    //
< 			}
< 		});
608a605,627
>     /**
>      * Applies any current customizations to the palette root. If the palette
>      * viewer is not set or it does not have its palette root set, this method
>      * will do nothing.
>      */
>     protected void applyCustomizationsToPalette(PaletteRoot paletteRoot) {
>         PaletteCustomizer customizer = (getPaletteViewer() != null) ? getPaletteViewer()
>             .getCustomizer()
>             : createPaletteCustomizer();
>         if (customizer instanceof PaletteCustomizerEx) {
>             ((PaletteCustomizerEx) customizer)
>                 .applyCustomizationsToPalette(paletteRoot);
>         }
>     }
> 
>     /**
>      * Creation factory method for the palette customizer.
>      * @return a new palette customizer
>      */
>     protected PaletteCustomizer createPaletteCustomizer() {
>         return new PaletteCustomizerEx();
>     }
> 
