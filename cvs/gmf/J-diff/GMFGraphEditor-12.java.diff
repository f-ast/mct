67a68
> import org.eclipse.emf.edit.ui.provider.UnwrappingSelectionProvider;
631a633,634
> 		initializeEditingDomain();
> 	}
632a636,642
> 	/**
> 	 * This sets up the editing domain for the model editor.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	protected void initializeEditingDomain() {
635,638c645
< 		List<AdapterFactory> factories = new ArrayList<AdapterFactory>();
< 		factories.add(new ResourceItemProviderAdapterFactory());
< 		factories.add(new GMFGraphItemProviderAdapterFactory());
< 		factories.add(new ReflectiveItemProviderAdapterFactory());
---
> 		adapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);
640c647,649
< 		adapterFactory = new ComposedAdapterFactory(factories);
---
> 		adapterFactory.addAdapterFactory(new ResourceItemProviderAdapterFactory());
> 		adapterFactory.addAdapterFactory(new GMFGraphItemProviderAdapterFactory());
> 		adapterFactory.addAdapterFactory(new ReflectiveItemProviderAdapterFactory());
842c851
< 		getSite().registerContextMenu(contextMenu, viewer);
---
> 		getSite().registerContextMenu(contextMenu, new UnwrappingSelectionProvider(viewer));
1403a1413,1417
> 		// Save only resources that have actually changed.
> 		//
> 		final Map<Object, Object> saveOptions = new HashMap<Object, Object>();
> 		saveOptions.put(Resource.OPTION_SAVE_ONLY_IF_CHANGED, Resource.OPTION_SAVE_ONLY_IF_CHANGED_MEMORY_BUFFER);
> 
1419c1433
< 								resource.save(Collections.EMPTY_MAP);
---
> 								resource.save(saveOptions);
