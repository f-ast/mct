16a17
> import org.eclipse.emf.transaction.RunnableWithResult;
20c21,22
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
---
> import org.eclipse.gmf.runtime.common.core.util.Log;
> import org.eclipse.gmf.runtime.common.core.util.Trace;
23a26,28
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
25d29
< import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
254,255c258,262
< 			Boolean retval = (Boolean) MEditingDomainGetter.getMEditingDomain(
< 				view).runAsRead(new MRunnable() {
---
> 			Boolean retval;
> 			try {
> 				retval = (Boolean) ((IGraphicalEditPart) getHost())
> 					.getEditingDomain().runExclusive(
> 						new RunnableWithResult.Impl() {
257,259c264,266
< 				public Object run() {
< 					return ViewUtil.resolveSemanticElement(view) != null ? Boolean.TRUE
< 						: Boolean.FALSE;
---
> 					public void run() {
> 						setResult(ViewUtil.resolveSemanticElement(view) != null ? Boolean.TRUE
> 							: Boolean.FALSE);
262a270,278
> 			} catch (InterruptedException e) {
> 				   Trace.catching(DiagramUIPlugin.getInstance(),
> 						DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass(),
> 						"isHostResolvable", e); //$NON-NLS-1$
> 					Log.error(DiagramUIPlugin.getInstance(),
> 						DiagramUIStatusCodes.IGNORED_EXCEPTION_WARNING,
> 						"isHostResolvable", e); //$NON-NLS-1$
> 				   return false;
> 			}
