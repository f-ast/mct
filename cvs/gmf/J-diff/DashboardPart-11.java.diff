18d17
< import org.eclipse.core.resources.ProjectScope;
21,22d19
< import org.eclipse.core.runtime.IStatus;
< import org.eclipse.core.runtime.Platform;
39,40d35
< import org.osgi.service.prefs.BackingStoreException;
< import org.osgi.service.prefs.Preferences;
51,52d45
< 	private static final String PREF_KEY = "gmf_dashboard"; //$NON-NLS-1$
< 
186,216c179
< 		mediator.setProjectAndState(project, new DashboardState(getPreferences(project)));
< 	}
< 
< 	private Preferences getPreferences(IProject project) {
< 		Preferences node = getExistingPreferences(project);
< 		if (node != null) {
< 			return node;
< 		}
< 		return new ProjectScope(project).getNode(Plugin.getPluginID()).node(PREF_KEY);
< 	}
< 
< 	private Preferences getExistingPreferences(IProject project) {
< 		Preferences node = Platform.getPreferencesService().getRootNode().node(ProjectScope.SCOPE);
< 		try {
< 			if (!node.nodeExists(project.getName())) {
< 				return null;
< 			}
< 			node = node.node(project.getName());
< 			if (!node.nodeExists(Plugin.getPluginID())) {
< 				return null;
< 			}
< 			node = node.node(Plugin.getPluginID());
< 			if (!node.nodeExists(PREF_KEY)) {
< 				return null;
< 			}
< 			return node.node(PREF_KEY);
< 		} catch (BackingStoreException e) {
< 			IStatus status = Plugin.createError("Unable to read state", e);
< 			Plugin.getDefault().getLog().log(status);
< 		}
< 		return null;
---
> 		mediator.setProjectAndState(project, new DashboardState(project));
