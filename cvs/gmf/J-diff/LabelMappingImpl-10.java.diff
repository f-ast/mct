15d14
< import org.eclipse.emf.ecore.util.EcoreUtil;
160,190d158
< 	public NotificationChain basicSetMapEntry(MappingEntry newMapEntry, NotificationChain msgs) {
< 		msgs = eBasicSetContainer((InternalEObject)newMapEntry, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
< 		return msgs;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setMapEntry(MappingEntry newMapEntry) {
< 		if (newMapEntry != eInternalContainer() || (eContainerFeatureID != GMFMapPackage.LABEL_MAPPING__MAP_ENTRY && newMapEntry != null)) {
< 			if (EcoreUtil.isAncestor(this, newMapEntry))
< 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
< 			NotificationChain msgs = null;
< 			if (eInternalContainer() != null)
< 				msgs = eBasicRemoveFromContainer(msgs);
< 			if (newMapEntry != null)
< 				msgs = ((InternalEObject)newMapEntry).eInverseAdd(this, GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS, MappingEntry.class, msgs);
< 			msgs = basicSetMapEntry(newMapEntry, msgs);
< 			if (msgs != null) msgs.dispatch();
< 		}
< 		else if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, newMapEntry, newMapEntry));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
197c165
< 				return basicSetMapEntry((MappingEntry)otherEnd, msgs);
---
> 				return eBasicSetContainer(otherEnd, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
211c179
< 				return basicSetMapEntry(null, msgs);
---
> 				return eBasicSetContainer(null, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY, msgs);
263,265d230
< 			case GMFMapPackage.LABEL_MAPPING__MAP_ENTRY:
< 				setMapEntry((MappingEntry)newValue);
< 				return;
284,286d248
< 			case GMFMapPackage.LABEL_MAPPING__MAP_ENTRY:
< 				setMapEntry((MappingEntry)null);
< 				return;
