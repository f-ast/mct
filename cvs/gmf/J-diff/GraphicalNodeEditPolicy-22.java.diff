2c2
<  * Copyright (c) 2002, 2003 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
22a23,24
> import org.eclipse.draw2d.ConnectionLayer;
> import org.eclipse.draw2d.ConnectionRouter;
29a32
> import org.eclipse.gef.LayerConstants;
62a66
> import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.ConnectionLayerEx;
149,150c153,155
< 			Command cmd = getConnectionCompleteCommand(
< 				cmdResult.getReturnValue(), getRequest());
---
>             Object connectionType = cmdResult.getReturnValue();
> 
>             Command cmd = getConnectionCompleteCommand(connectionType, getRequest());
154a160,166
>             if (connectionType instanceof IElementType) {
>                 CreateRequest createRequest = ((CreateUnspecifiedTypeConnectionRequest) request)
>                     .getRequestForType((IElementType) connectionType);
>                 Object newObject = createRequest.getNewObject();
> 
>                 return CommandResult.newOKCommandResult(newObject);
>             }
190a203,242
> 	/* 
> 	 * (non-Javadoc)
> 	 * @see org.eclipse.gef.editpolicies.GraphicalNodeEditPolicy#getDummyConnectionRouter(org.eclipse.gef.requests.CreateConnectionRequest)
> 	 */
> 	protected ConnectionRouter getDummyConnectionRouter(CreateConnectionRequest arg0) {
> 		EditPart ep = getHost();
> 		if (ep instanceof IGraphicalEditPart) {
> 			IGraphicalEditPart gep = ((IGraphicalEditPart)ep);
> 			Routing routingVal = Routing.MANUAL_LITERAL;
> 			if (gep.getNotationView() != null) {
> 				Diagram dgrm = gep.getNotationView().getDiagram();
> 				EditPart epfromReg = (EditPart)gep.getViewer().getEditPartRegistry().get(dgrm);
> 				if (epfromReg != null)
> 					routingVal = (Routing)epfromReg.getAdapter(Routing.class);
> 			}
> 			else {
> 				IPreferenceStore store = (IPreferenceStore) ((IGraphicalEditPart)ep).getDiagramPreferencesHint().getPreferenceStore();
> 				routingVal = Routing.get(store.getInt(IPreferenceConstants.PREF_LINE_STYLE));
> 			}
> 			
> 			ConnectionLayer cLayer = (ConnectionLayer) getLayer(LayerConstants.CONNECTION_LAYER);
> 			if (cLayer instanceof ConnectionLayerEx) {
> 				ConnectionLayerEx cLayerEx = (ConnectionLayerEx)cLayer;
> 				if (routingVal == Routing.MANUAL_LITERAL) {
> 					return cLayerEx.getObliqueRouter();
> 				}
> 				else if (routingVal == Routing.RECTILINEAR_LITERAL) {
> 					return cLayerEx.getRectilinearRouter();
> 				}
> 				else if (routingVal == Routing.TREE_LITERAL) {
> 					return cLayerEx.getTreeRouter();
> 				}
> 			}
> 		}
> 		
> 		return super.getDummyConnectionRouter(arg0);
> 	}
> 
> 
> 
274c326
< 			hint = PackageUtil.getDisplayName(createElementRequest.getElementType().getEClass());
---
> 			hint = PackageUtil.getID(createElementRequest.getElementType().getEClass());
626c678
< 				if (cmd != null) {
---
> 				if (cmd != null && cmd.canExecute()) {
631,644c683,686
< 			return new Command() {
< 
< 				/**
< 				 * If at least one of the relationship types is supported, then
< 				 * this is supported.
< 				 */
< 				public boolean canExecute() {
< 					for (Iterator iter = commands.iterator(); iter.hasNext();) {
< 						Command cmd = (Command) iter.next();
< 						if (cmd.canExecute()) {
< 							return true;
< 						}
< 					}
< 					return false;
---
> 			if (commands.isEmpty()) {
> 				// GEF's AbstractConnectionCreationTool expects a null command
> 				// when the gesture should be disabled.
> 				return null;
646c688,690
< 			};
---
> 			
> 			// return an executable command that does nothing
> 			return new Command() {/* do nothing*/};
826a871,874
>                     
>                     if (individualCmd != null && individualCmd.canExecute()) {
>                         validRelTypes.add(type);
>                     }
852d899
< 					}
855a903,904
>                         unspecifiedRequest.addRequest(type, connectionRequest);
>                     }
865c914
< 	 * relationship (if applicable) for a unspecified type request. This command
---
> 	 * relationship (if applicable) for an unspecified type request. This command
