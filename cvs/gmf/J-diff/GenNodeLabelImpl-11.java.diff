9d8
< import org.eclipse.emf.common.notify.Notification;
13,14d11
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
< import org.eclipse.emf.ecore.util.EcoreUtil;
68,98d64
< 	public NotificationChain basicSetNode(GenNode newNode, NotificationChain msgs) {
< 		msgs = eBasicSetContainer((InternalEObject)newNode, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
< 		return msgs;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setNode(GenNode newNode) {
< 		if (newNode != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_NODE_LABEL__NODE && newNode != null)) {
< 			if (EcoreUtil.isAncestor(this, newNode))
< 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
< 			NotificationChain msgs = null;
< 			if (eInternalContainer() != null)
< 				msgs = eBasicRemoveFromContainer(msgs);
< 			if (newNode != null)
< 				msgs = ((InternalEObject)newNode).eInverseAdd(this, GMFGenPackage.GEN_NODE__LABELS, GenNode.class, msgs);
< 			msgs = basicSetNode(newNode, msgs);
< 			if (msgs != null) msgs.dispatch();
< 		}
< 		else if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE_LABEL__NODE, newNode, newNode));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
105c71
< 				return basicSetNode((GenNode)otherEnd, msgs);
---
> 				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
119c85
< 				return basicSetNode(null, msgs);
---
> 				return eBasicSetContainer(null, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
158,187d123
< 	public void eSet(int featureID, Object newValue) {
< 		switch (featureID) {
< 			case GMFGenPackage.GEN_NODE_LABEL__NODE:
< 				setNode((GenNode)newValue);
< 				return;
< 		}
< 		super.eSet(featureID, newValue);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	@Override
< 	public void eUnset(int featureID) {
< 		switch (featureID) {
< 			case GMFGenPackage.GEN_NODE_LABEL__NODE:
< 				setNode((GenNode)null);
< 				return;
< 		}
< 		super.eUnset(featureID);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	@Override
