85d84
< import org.eclipse.gmf.internal.codegen.dispatch.TemplateRegistry;
113,121c112,116
< 		TemplateRegistry registry = initRegistry();
< 		String[] variables = new String[] {
< 		        "org.eclipse.emf.codegen", //$NON-NLS-1$
< 				"org.eclipse.emf.codegen.ecore", //$NON-NLS-1$
< 				"org.eclipse.emf.common", //$NON-NLS-1$
< 				"org.eclipse.emf.ecore", //$NON-NLS-1$
< 				"org.eclipse.gmf.common", //$NON-NLS-1$
< 				"org.eclipse.gmf.codegen" //$NON-NLS-1$
< 		};
---
> 		this(usePrecompiled, templateDirectory, getDefaultVariables(), new StaticTemplateRegistry(CodegenEmitters.class.getClassLoader()));
> 	}
> 	
> 	public CodegenEmitters(boolean usePrecompiled, String templateDirectory, String[] variables, StaticTemplateRegistry registry) {
> 		initRegistry(registry);
152,153c147
< 	private static TemplateRegistry initRegistry() {
< 		final StaticTemplateRegistry tr = new StaticTemplateRegistry(CodegenEmitters.class.getClassLoader());
---
> 	private static void initRegistry(StaticTemplateRegistry tr) {
205d198
< 		return tr;
211c204
< 	private static void put(StaticTemplateRegistry tr, String path, Class<?> precompiledTemplate) {
---
> 	protected static void put(StaticTemplateRegistry tr, String path, Class<?> precompiledTemplate) {
803c796
< 	private TextEmitter newXpandEmitter(String definition) {
---
> 	protected TextEmitter newXpandEmitter(String definition) {
805a799,810
> 
> 	protected static String[] getDefaultVariables(){
> 		return new String[] {
> 		        "org.eclipse.emf.codegen", //$NON-NLS-1$
> 				"org.eclipse.emf.codegen.ecore", //$NON-NLS-1$
> 				"org.eclipse.emf.common", //$NON-NLS-1$
> 				"org.eclipse.emf.ecore", //$NON-NLS-1$
> 				"org.eclipse.gmf.common", //$NON-NLS-1$
> 				"org.eclipse.gmf.codegen", //$NON-NLS-1$
> 		};
> 	}
> 
