44a45
> import org.eclipse.gmf.codegen.gmfgen.OpenDiagramBehaviour;
96c97
< 		//generateOpenDiagramEditPolicy(); disable until all subtleties are fixed 
---
> 		generateBehaviours(myDiagram);
129a131
> 			generateBehaviours(next);
228a231
> 		generateBehaviours(node);
421,422c424,438
< 	private void generateOpenDiagramEditPolicy() throws UnexpectedBehaviourException, InterruptedException {
< 		internalGenerateJavaClass(myEmitters.getOpenDiagramEditPolicyEmitter(), myDiagram.getEditPoliciesPackageName(), "OpenDiagramEditPolicy", myDiagram);
---
> 	/**
> 	 * Generate classes for behaviours specified for the diagram element. 
> 	 * As part of its job, this method tries not to generate shared policies more than once.
> 	 */
> 	private void generateBehaviours(GenCommonBase commonBase) throws UnexpectedBehaviourException, InterruptedException {
> 		for (OpenDiagramBehaviour behaviour : commonBase.getBehaviour(OpenDiagramBehaviour.class)) {
> 			if (behaviour.getSubject() == commonBase) { // extravagant way to check whether this behaviour is shared or not
> 				generateOpenDiagramEditPolicy(behaviour);
> 			}
> 		}
> 
> 	}
> 
> 	private void generateOpenDiagramEditPolicy(OpenDiagramBehaviour behaviour) throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(myEmitters.getOpenDiagramEditPolicyEmitter(), behaviour.getEditPolicyQualifiedClassName(), behaviour);
1038a1055
> 		c.registerFactor(GMFGenPackage.eINSTANCE.getBehaviour(), 1);
