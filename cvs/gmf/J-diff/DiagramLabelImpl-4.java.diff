8a9,10
> import org.eclipse.emf.common.notify.Notification;
> 
10a13,14
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
> 
18a23,26
>  * The following features are implemented:
>  * <ul>
>  *   <li>{@link org.eclipse.gmf.gmfgraph.impl.DiagramLabelImpl#isElementIcon <em>Element Icon</em>}</li>
>  * </ul>
24a33,52
> 	 * The default value of the '{@link #isElementIcon() <em>Element Icon</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isElementIcon()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean ELEMENT_ICON_EDEFAULT = false;
> 
> 	/**
> 	 * The cached value of the '{@link #isElementIcon() <em>Element Icon</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isElementIcon()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected boolean elementIcon = ELEMENT_ICON_EDEFAULT;
> 
> 	/**
41a70,159
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public boolean isElementIcon() {
> 		return elementIcon;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setElementIcon(boolean newElementIcon) {
> 		boolean oldElementIcon = elementIcon;
> 		elementIcon = newElementIcon;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON, oldElementIcon, elementIcon));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
> 		switch (featureID) {
> 			case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON:
> 				return isElementIcon() ? Boolean.TRUE : Boolean.FALSE;
> 		}
> 		return super.eGet(featureID, resolve, coreType);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void eSet(int featureID, Object newValue) {
> 		switch (featureID) {
> 			case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON:
> 				setElementIcon(((Boolean)newValue).booleanValue());
> 				return;
> 		}
> 		super.eSet(featureID, newValue);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void eUnset(int featureID) {
> 		switch (featureID) {
> 			case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON:
> 				setElementIcon(ELEMENT_ICON_EDEFAULT);
> 				return;
> 		}
> 		super.eUnset(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public boolean eIsSet(int featureID) {
> 		switch (featureID) {
> 			case GMFGraphPackage.DIAGRAM_LABEL__ELEMENT_ICON:
> 				return elementIcon != ELEMENT_ICON_EDEFAULT;
> 		}
> 		return super.eIsSet(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String toString() {
> 		if (eIsProxy()) return super.toString();
> 
> 		StringBuffer result = new StringBuffer(super.toString());
> 		result.append(" (elementIcon: ");
> 		result.append(elementIcon);
> 		result.append(')');
> 		return result.toString();
> 	}
> 
