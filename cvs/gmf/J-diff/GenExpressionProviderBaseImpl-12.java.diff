5c5
<  * $Id: GenExpressionProviderBaseImpl.java,v 1.10 2008/02/29 21:19:52 atikhomirov Exp $
---
>  * $Id: GenExpressionProviderBaseImpl.java,v 1.11 2008/03/04 16:50:38 atikhomirov Exp $
10a11
> import org.eclipse.emf.common.notify.Notification;
14a16
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
16a19
> import org.eclipse.emf.ecore.util.EcoreUtil;
100a104,134
> 	public NotificationChain basicSetContainer(GenExpressionProviderContainer newContainer, NotificationChain msgs) {
> 		msgs = eBasicSetContainer((InternalEObject)newContainer, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, msgs);
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setContainer(GenExpressionProviderContainer newContainer) {
> 		if (newContainer != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER && newContainer != null)) {
> 			if (EcoreUtil.isAncestor(this, newContainer))
> 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
> 			NotificationChain msgs = null;
> 			if (eInternalContainer() != null)
> 				msgs = eBasicRemoveFromContainer(msgs);
> 			if (newContainer != null)
> 				msgs = ((InternalEObject)newContainer).eInverseAdd(this, GMFGenPackage.GEN_EXPRESSION_PROVIDER_CONTAINER__PROVIDERS, GenExpressionProviderContainer.class, msgs);
> 			msgs = basicSetContainer(newContainer, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, newContainer, newContainer));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
107c141
< 				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, msgs);
---
> 				return basicSetContainer((GenExpressionProviderContainer)otherEnd, msgs);
121c155
< 				return eBasicSetContainer(null, GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER, msgs);
---
> 				return basicSetContainer(null, msgs);
168a203,205
> 			case GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER:
> 				setContainer((GenExpressionProviderContainer)newValue);
> 				return;
183a221,223
> 			case GMFGenPackage.GEN_EXPRESSION_PROVIDER_BASE__CONTAINER:
> 				setContainer((GenExpressionProviderContainer)null);
> 				return;
