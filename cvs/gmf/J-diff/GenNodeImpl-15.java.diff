12d11
< import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;
28a28
> import org.eclipse.gmf.codegen.gmfgen.GenNodeLabel;
29a30
> import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;
40a42
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenNodeImpl#getLabels <em>Labels</em>}</li>
43a46
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenNodeImpl#getModelFacet <em>Model Facet</em>}</li>
60a64,73
> 	 * The cached value of the '{@link #getLabels() <em>Labels</em>}' containment reference list.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getLabels()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected EList labels = null;
> 
> 	/**
100a114,123
> 	 * The cached value of the '{@link #getModelFacet() <em>Model Facet</em>}' containment reference.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getModelFacet()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected TypeModelFacet modelFacet = null;
> 
> 	/**
170a194,205
> 	public EList getLabels() {
> 		if (labels == null) {
> 			labels = new EObjectContainmentWithInverseEList(GenNodeLabel.class, this, GMFGenPackage.GEN_NODE__LABELS, GMFGenPackage.GEN_NODE_LABEL__NODE);
> 		}
> 		return labels;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
215a251,293
> 	public TypeModelFacet getModelFacet() {
> 		return modelFacet;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public NotificationChain basicSetModelFacet(TypeModelFacet newModelFacet, NotificationChain msgs) {
> 		TypeModelFacet oldModelFacet = modelFacet;
> 		modelFacet = newModelFacet;
> 		if (eNotificationRequired()) {
> 			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__MODEL_FACET, oldModelFacet, newModelFacet);
> 			if (msgs == null) msgs = notification; else msgs.add(notification);
> 		}
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setModelFacet(TypeModelFacet newModelFacet) {
> 		if (newModelFacet != modelFacet) {
> 			NotificationChain msgs = null;
> 			if (modelFacet != null)
> 				msgs = ((InternalEObject)modelFacet).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_NODE__MODEL_FACET, null, msgs);
> 			if (newModelFacet != null)
> 				msgs = ((InternalEObject)newModelFacet).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.GEN_NODE__MODEL_FACET, null, msgs);
> 			msgs = basicSetModelFacet(newModelFacet, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_NODE__MODEL_FACET, newModelFacet, newModelFacet));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
226a305,306
> 				case GMFGenPackage.GEN_NODE__LABELS:
> 					return ((InternalEList)getLabels()).basicAdd(otherEnd, msgs);
255a336,337
> 				case GMFGenPackage.GEN_NODE__LABELS:
> 					return ((InternalEList)getLabels()).basicRemove(otherEnd, msgs);
259a342,343
> 				case GMFGenPackage.GEN_NODE__MODEL_FACET:
> 					return basicSetModelFacet(null, msgs);
300,305d383
< 			case GMFGenPackage.GEN_NODE__DOMAIN_NAME_FEATURE:
< 				if (resolve) return getDomainNameFeature();
< 				return basicGetDomainNameFeature();
< 			case GMFGenPackage.GEN_NODE__CONTAINMENT_META_FEATURE:
< 				if (resolve) return getContainmentMetaFeature();
< 				return basicGetContainmentMetaFeature();
316a395,396
> 			case GMFGenPackage.GEN_NODE__LABELS:
> 				return getLabels();
322a403,404
> 			case GMFGenPackage.GEN_NODE__MODEL_FACET:
> 				return getModelFacet();
346,351d427
< 			case GMFGenPackage.GEN_NODE__DOMAIN_NAME_FEATURE:
< 				setDomainNameFeature((GenFeature)newValue);
< 				return;
< 			case GMFGenPackage.GEN_NODE__CONTAINMENT_META_FEATURE:
< 				setContainmentMetaFeature((GenFeature)newValue);
< 				return;
363a440,443
> 			case GMFGenPackage.GEN_NODE__LABELS:
> 				getLabels().clear();
> 				getLabels().addAll((Collection)newValue);
> 				return;
374a455,457
> 			case GMFGenPackage.GEN_NODE__MODEL_FACET:
> 				setModelFacet((TypeModelFacet)newValue);
> 				return;
398,403d480
< 			case GMFGenPackage.GEN_NODE__DOMAIN_NAME_FEATURE:
< 				setDomainNameFeature((GenFeature)null);
< 				return;
< 			case GMFGenPackage.GEN_NODE__CONTAINMENT_META_FEATURE:
< 				setContainmentMetaFeature((GenFeature)null);
< 				return;
415a493,495
> 			case GMFGenPackage.GEN_NODE__LABELS:
> 				getLabels().clear();
> 				return;
424a505,507
> 			case GMFGenPackage.GEN_NODE__MODEL_FACET:
> 				setModelFacet((TypeModelFacet)null);
> 				return;
444,447d526
< 			case GMFGenPackage.GEN_NODE__DOMAIN_NAME_FEATURE:
< 				return domainNameFeature != null;
< 			case GMFGenPackage.GEN_NODE__CONTAINMENT_META_FEATURE:
< 				return containmentMetaFeature != null;
457a537,538
> 			case GMFGenPackage.GEN_NODE__LABELS:
> 				return labels != null && !labels.isEmpty();
463a545,546
> 			case GMFGenPackage.GEN_NODE__MODEL_FACET:
> 				return modelFacet != null;
