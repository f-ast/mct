61c61,67
< 				updatePaletteRoot();
---
> 				if (getEditDomain() != null
> 					&& getEditDomain().getPaletteViewer() != null
> 					&& getEditDomain().getPaletteViewer().getPaletteRoot() != null) {
> 
> 					createPaletteRoot(getEditDomain().getPaletteViewer()
> 						.getPaletteRoot());
> 				}
122c128
< 		getEditDomain().setPaletteRoot(createPaletteRoot());
---
> 		getEditDomain().setPaletteRoot(createPaletteRoot(null));
337c343,345
< 	 * Creates the palette root for the palette viewer.
---
> 	 * Creates the palette root for the palette viewer or updates the existing
> 	 * palette root passed in if entries should be added/removed based on the
> 	 * current state.
339c347,350
< 	 * @return the new palette root
---
> 	 * @param existingPaletteRoot
> 	 *            the existing palette root if the palette has already been
> 	 *            created, or null if the palette root has not yet been created
> 	 * @return the new palette root or the updated palette root
341c352,353
< 	private PaletteRoot createPaletteRoot() {
---
> 	protected PaletteRoot createPaletteRoot(PaletteRoot existingPaletteRoot) {
> 		if (existingPaletteRoot == null) {
344,356c356,359
< 	}
< 
< 	/**
< 	 * Updates the palette root by adding/removing entries as necessary.
< 	 */
< 	private void updatePaletteRoot() {
< 		if (getEditDomain() != null
< 			&& getEditDomain().getPaletteViewer() != null
< 			&& getEditDomain().getPaletteViewer().getPaletteRoot() != null) {
< 			
< 			PaletteService.getInstance().updatePalette(
< 				getEditDomain().getPaletteViewer().getPaletteRoot(), this,
< 				getDefaultPaletteContent());
---
> 		} else {
> 			PaletteService.getInstance().updatePalette(existingPaletteRoot,
> 				this, getDefaultPaletteContent());
> 			return existingPaletteRoot;
