13a14,15
> import java.util.HashMap;
> import java.util.Map;
14a17
> import org.eclipse.core.commands.ExecutionException;
18a22
> import org.eclipse.core.runtime.IAdaptable;
20a25
> import org.eclipse.core.runtime.NullProgressMonitor;
26a32,39
> import org.eclipse.emf.transaction.Transaction;
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
> import org.eclipse.emf.transaction.util.TransactionUtil;
> import org.eclipse.emf.workspace.AbstractEMFOperation;
> import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
> import org.eclipse.gmf.runtime.common.core.util.Log;
> import org.eclipse.gmf.runtime.common.core.util.StringStatics;
> import org.eclipse.gmf.runtime.common.core.util.Trace;
34a48
> import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.EditorDebugOptions;
37,38c51
< import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;
< import org.eclipse.gmf.runtime.emf.core.util.ResourceUtil;
---
> import org.eclipse.gmf.runtime.emf.core.internal.util.EMFCoreConstants;
128c141
< 			IFile resourceFile = ResourceUtil.getFile(resource);
---
> 			IFile resourceFile = WorkspaceSynchronizer.getFile(resource);
140c153
< 		MEditingDomain domain = diagramDocument.getEditingDomain();
---
> 		TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
153c166
< 		IFile resourceFile = ResourceUtil.getFile(resource);
---
> 		IFile resourceFile = WorkspaceSynchronizer.getFile(resource);
160c173
< 		MEditingDomain domain = diagramDocument.getEditingDomain();
---
> 		TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
162c175
< 		DiagramIOUtil.save(domain, file, diagram, overwrite, DiagramIOUtil.hasUnrecognizedData(diagram.eResource()), monitor);
---
> 		DiagramIOUtil.save(domain, file, diagram, DiagramIOUtil.hasUnrecognizedData(diagram.eResource()), monitor);
170c183,199
< 		Collection copiedContents = EcoreUtil.copyAll(contents);
---
> 		final Collection copiedContents = EcoreUtil.copyAll(contents);
> 
> 		TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(sourceDiagram);
> 		final Resource newResource = editingDomain
>             .createResource(
>                 EcoreUtil.generateUUID() + EMFCoreConstants.INVALID_PATH);
>          
>         Map options = new HashMap();
>         options.put(Transaction.OPTION_UNPROTECTED, Boolean.TRUE);
>  
>         AbstractEMFOperation operation = new AbstractEMFOperation(
>             editingDomain, StringStatics.BLANK,
>             options) {
> 
>             protected IStatus doExecute(IProgressMonitor monitor,
>                     IAdaptable info)
>                 throws ExecutionException {
172d200
< 		Resource newResource = ResourceUtil.getEditingDomain().createResource(null);
174a203,217
>                 return Status.OK_STATUS;
>             }
>         };
>         try {
>             operation.execute(new NullProgressMonitor(), null);
>         } catch (ExecutionException e) {
>             Trace.catching(EditorIDEPlugin.getInstance(),
>                 EditorDebugOptions.EXCEPTIONS_CATCHING, getClass(),
>                 "createView", e); //$NON-NLS-1$
>             Log
>                 .warning(EditorIDEPlugin.getInstance(),
>                     EditorStatusCodes.RESOURCE_FAILURE,
>                     "createView", e); //$NON-NLS-1$
>         }
>  	
233c276
< 	public IEditorInput createInputWithEditingDomain(IEditorInput editorInput, MEditingDomain domain) {
---
> 	public IEditorInput createInputWithEditingDomain(IEditorInput editorInput, TransactionalEditingDomain domain) {
