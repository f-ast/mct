35c35
< 	extends EntryBaseItemProvider
---
> 	extends AbstractToolEntryItemProvider
62d61
< 			addDefaultPropertyDescriptor(object);
65d63
< 			addQualifiedToolNamePropertyDescriptor(object);
71,92d68
< 	 * This adds a property descriptor for the Default feature.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	protected void addDefaultPropertyDescriptor(Object object) {
< 		itemPropertyDescriptors.add
< 			(createItemPropertyDescriptor
< 				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
< 				 getResourceLocator(),
< 				 getString("_UI_ToolEntry_default_feature"),
< 				 getString("_UI_PropertyDescriptor_description", "_UI_ToolEntry_default_feature", "_UI_ToolEntry_type"),
< 				 GMFGenPackage.eINSTANCE.getToolEntry_Default(),
< 				 true,
< 				 false,
< 				 false,
< 				 ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE,
< 				 getString("_UI_ToolPropertyCategory"),
< 				 null));
< 	}
< 
< 	/**
137,174d112
< 	 * This adds a property descriptor for the Qualified Tool Name feature.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	protected void addQualifiedToolNamePropertyDescriptor(Object object) {
< 		itemPropertyDescriptors.add
< 			(createItemPropertyDescriptor
< 				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
< 				 getResourceLocator(),
< 				 getString("_UI_ToolEntry_qualifiedToolName_feature"),
< 				 getString("_UI_PropertyDescriptor_description", "_UI_ToolEntry_qualifiedToolName_feature", "_UI_ToolEntry_type"),
< 				 GMFGenPackage.eINSTANCE.getToolEntry_QualifiedToolName(),
< 				 true,
< 				 false,
< 				 false,
< 				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
< 				 getString("_UI_ToolPropertyCategory"),
< 				 null));
< 	}
< 
< 	/**
< 	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
< 	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
< 	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public Collection getChildrenFeatures(Object object) {
< 		if (childrenFeatures == null) {
< 			super.getChildrenFeatures(object);
< 			childrenFeatures.add(GMFGenPackage.eINSTANCE.getToolEntry_Properties());
< 		}
< 		return childrenFeatures;
< 	}
< 
< 	/**
196,205d133
< 
< 		switch (notification.getFeatureID(ToolEntry.class)) {
< 			case GMFGenPackage.TOOL_ENTRY__DEFAULT:
< 			case GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME:
< 				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
< 				return;
< 			case GMFGenPackage.TOOL_ENTRY__PROPERTIES:
< 				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
< 				return;
< 		}
