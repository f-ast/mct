16a17
> import org.eclipse.gmf.gmfgraph.Label;
30a32,33
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelNameEditPart;
37a41,46
> import org.eclipse.gmf.graphdef.editor.edit.parts.Label2EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.Label3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelText2EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelText3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.LabelTextEditPart;
141a151,152
> 		case DiagramLabelEditPart.VISUAL_ID:
> 			return getImage("Navigator?TopLevelNode?http://www.eclipse.org/gmf/2006/GraphicalDefinition?DiagramLabel", GMFGraphElementTypes.DiagramLabel_2009); //$NON-NLS-1$
157a169,170
> 		case LabelEditPart.VISUAL_ID:
> 			return getImage("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Label", GMFGraphElementTypes.Label_3026); //$NON-NLS-1$
165a179,180
> 		case Label2EditPart.VISUAL_ID:
> 			return getImage("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Label", GMFGraphElementTypes.Label_3027); //$NON-NLS-1$
175a191,192
> 		case Label3EditPart.VISUAL_ID:
> 			return getImage("Navigator?Node?http://www.eclipse.org/gmf/2006/GraphicalDefinition?Label", GMFGraphElementTypes.Label_3028); //$NON-NLS-1$
253a271,272
> 		case DiagramLabelEditPart.VISUAL_ID:
> 			return getDiagramLabel_2009Text(view);
269a289,290
> 		case LabelEditPart.VISUAL_ID:
> 			return getLabel_3026Text(view);
277a299,300
> 		case Label2EditPart.VISUAL_ID:
> 			return getLabel_3027Text(view);
287a311,312
> 		case Label3EditPart.VISUAL_ID:
> 			return getLabel_3028Text(view);
372a398,414
> 	private String getDiagramLabel_2009Text(View view) {
> 		IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter(GMFGraphElementTypes.DiagramLabel_2009, (view.getElement() != null ? view.getElement() : view), GMFGraphVisualIDRegistry
> 				.getType(DiagramLabelNameEditPart.VISUAL_ID));
> 		IParser parser = ParserService.getInstance().getParser(hintAdapter);
> 
> 		if (parser != null) {
> 			return parser.getPrintString(hintAdapter, ParserOptions.NONE.intValue());
> 		} else {
> 			GMFGraphDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5013); //$NON-NLS-1$
> 			return ""; //$NON-NLS-1$
> 		}
> 
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
480a523,539
> 	private String getLabel_3026Text(View view) {
> 		IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter(GMFGraphElementTypes.Label_3026, (view.getElement() != null ? view.getElement() : view), GMFGraphVisualIDRegistry
> 				.getType(LabelTextEditPart.VISUAL_ID));
> 		IParser parser = ParserService.getInstance().getParser(hintAdapter);
> 
> 		if (parser != null) {
> 			return parser.getPrintString(hintAdapter, ParserOptions.NONE.intValue());
> 		} else {
> 			GMFGraphDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5010); //$NON-NLS-1$
> 			return ""; //$NON-NLS-1$
> 		}
> 
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
532a592,608
> 	private String getLabel_3027Text(View view) {
> 		IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter(GMFGraphElementTypes.Label_3027, (view.getElement() != null ? view.getElement() : view), GMFGraphVisualIDRegistry
> 				.getType(LabelText2EditPart.VISUAL_ID));
> 		IParser parser = ParserService.getInstance().getParser(hintAdapter);
> 
> 		if (parser != null) {
> 			return parser.getPrintString(hintAdapter, ParserOptions.NONE.intValue());
> 		} else {
> 			GMFGraphDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5011); //$NON-NLS-1$
> 			return ""; //$NON-NLS-1$
> 		}
> 
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
597a674,690
> 	private String getLabel_3028Text(View view) {
> 		IAdaptable hintAdapter = new GMFGraphParserProvider.HintAdapter(GMFGraphElementTypes.Label_3028, (view.getElement() != null ? view.getElement() : view), GMFGraphVisualIDRegistry
> 				.getType(LabelText3EditPart.VISUAL_ID));
> 		IParser parser = ParserService.getInstance().getParser(hintAdapter);
> 
> 		if (parser != null) {
> 			return parser.getPrintString(hintAdapter, ParserOptions.NONE.intValue());
> 		} else {
> 			GMFGraphDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5012); //$NON-NLS-1$
> 			return ""; //$NON-NLS-1$
> 		}
> 
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
