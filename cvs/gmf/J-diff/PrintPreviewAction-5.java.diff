2c2
<  * Copyright (c) 2002, 2005 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
40c40
< 	IPrintActionHelper printActionHelper;
---
> 	private IPrintActionHelper printActionHelper;
45c45
< 	PrintPreviewHelper printPreviewHelper;
---
> 	private PrintPreviewHelper printPreviewHelper;
56a57
> 	 * @deprecated please use the other constructor as this will be protected
61,62c62,75
< 		this.printActionHelper = printActionHelper;
< 		this.printPreviewHelper = printPreviewHelper;
---
> 		setPrintActionHelper(printActionHelper);
> 		setPrintPreviewHelper(printPreviewHelper);
> 	}
> 	
> 	/**
> 	 * Creates a new instance.
> 	 * 
> 	 * @param printActionHelper
> 	 *            the helper class used to show the print settings dialog and
> 	 *            perform the actual printing if the user were to print from
> 	 *            within the print preview dialog.
> 	 */
> 	public PrintPreviewAction(IPrintActionHelper printActionHelper) {
> 		this(printActionHelper, new PrintPreviewHelper());
70c83,119
< 		printPreviewHelper.doPrintPreview(printActionHelper);
---
> 		getPrintPreviewHelper().doPrintPreview(getPrintActionHelper());
> 	}
> 
> 	/**
> 	 * Return the print action helper that helps perform the print action in
> 	 * the print preview dialog.
> 	 * @return IPrintActionHelper the print action helper.
> 	 */
> 	private IPrintActionHelper getPrintActionHelper() {
> 		return printActionHelper;
> 	}
> 
> 	/**
> 	 * Set the print action helper that helps perform the print action in the
> 	 * print preview dialog.
> 	 * @param printActionHelper the IPrintActionHelper
> 	 */
> 	protected void setPrintActionHelper(IPrintActionHelper printActionHelper) {
> 		this.printActionHelper = printActionHelper;
> 	}
> 
> 	/**
> 	 * Return the print preview helper responsible for performing the print
> 	 * preview.
> 	 * @return PrintPreviewHelper the print preview helper.
> 	 */
> 	private PrintPreviewHelper getPrintPreviewHelper() {
> 		return printPreviewHelper;
> 	}
> 
> 	/**
> 	 * Set the print preview helper responsible for performing the print
> 	 * preview.
> 	 * @return printPreviewHelper the PrintPreviewHelper
> 	 */
> 	protected void setPrintPreviewHelper(PrintPreviewHelper printPreviewHelper) {
> 		this.printPreviewHelper = printPreviewHelper;
