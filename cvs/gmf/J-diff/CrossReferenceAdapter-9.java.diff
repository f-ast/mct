98c98,99
< 							add((Resource) notifier, child);
---
> 							updateImportsAndExports((Resource) notifier, child,
> 									true);
198c199,200
< 				add(resource, newValue);
---
> 				// handle processing of the new value that has been added
> 				updateImportsAndExports(resource, newValue, true);
199a202
> 
216c219,220
< 					add(resource, next);
---
> 					// handle processing of the new value that has been added
> 					updateImportsAndExports(resource, next, true);
234c238,239
< 				remove(resource, oldValue);
---
> 				// handle processing of the old value that has been removed
> 				updateImportsAndExports(resource, oldValue, false);
252c257,258
< 					remove(resource, next);
---
> 					// handle processing of the old value that has been removed
> 					updateImportsAndExports(resource, next, false);
261,262c267
< 	 * Adds all aggregate cross-references for the specified resource, due to
< 	 * attachment of an eObject.
---
> 	 * Updates the imports and exports map for the specified eObject
267,271c272,281
< 	 *            an object being removed from it
< 	 */
< 	protected void add(Resource resource, EObject eObject) {
< 		// now, register incoming unidirectional references and opposites
< 		CrossReferenceAdapter adapter = getExistingCrossReferenceAdapter(eObject);
---
> 	 *            the specified eObject
> 	 * @param register
> 	 *            boolean flag to indicate whether to register imports or
> 	 *            unregister imports
> 	 */
> 	public void updateImportsAndExports(Resource resource, EObject value,
> 			boolean register) {
> 		CrossReferenceAdapter adapter = getExistingCrossReferenceAdapter(value);
> 
> 		if (register) {
273c283,285
< 			for (Iterator iter = adapter.getInverseReferencers(eObject, null,
---
> 				// now, register incoming unidirectional references and
> 				// opposites
> 				for (Iterator iter = adapter.getInverseReferencers(value, null,
275,284c287,288
< 				registerReference(((EObject) iter.next()).eResource(), resource);
< 			}
< 		}
< 
< 		// go through the children of the eObject
< 		for (Iterator i = resolve() ? eObject.eContents().iterator()
< 				: ((InternalEList) eObject.eContents()).basicIterator(); i
< 				.hasNext();) {
< 			EObject notifier = (EObject) i.next();
< 			add(resource, notifier);
---
> 					registerReference(((EObject) iter.next()).eResource(),
> 							resource);
287,297c291
< 
< 	/**
< 	 * Removes all aggregate cross-references for the specified resource, due to
< 	 * detachment of an eObject.
< 	 * 
< 	 * @param resource
< 	 *            a resource
< 	 * @param eObject
< 	 *            an object being removed from it
< 	 */
< 	protected void remove(Resource resource, EObject eObject) {
---
> 		} else {
299c293
< 		EContentsEList.FeatureIterator crossReferences = (EContentsEList.FeatureIterator) (resolve() ? eObject
---
> 			EContentsEList.FeatureIterator crossReferences = (EContentsEList.FeatureIterator) (resolve() ? value
301c295,296
< 				: ((InternalEList) eObject.eCrossReferences()).basicIterator());
---
> 					: ((InternalEList) value.eCrossReferences())
> 							.basicIterator());
306c301,302
< 				EReference eReference = (EReference) crossReferences.feature();
---
> 					EReference eReference = (EReference) crossReferences
> 							.feature();
317d312
< 		CrossReferenceAdapter adapter = getExistingCrossReferenceAdapter(eObject);
319c314
< 			for (Iterator iter = adapter.getInverseReferencers(eObject, null,
---
> 				for (Iterator iter = adapter.getInverseReferencers(value, null,
324a320,327
> 		}
> 
> 		// process contents
> 		if (adapter != null) {
> 			adapter.updateImportsAndExportsForContents(resource, value,
> 					register);
> 		}
> 	}
325a329,342
> 	/**
> 	 * Updates the imports and exports map for the contents of the specified
> 	 * eObject
> 	 * 
> 	 * @param resource
> 	 *            a resource
> 	 * @param eObject
> 	 *            the specified eObject
> 	 * @param register
> 	 *            boolean flag to indicate whether to register imports or
> 	 *            unregister imports
> 	 */
> 	public void updateImportsAndExportsForContents(Resource resource,
> 			EObject value, boolean register) {
327,328c344,345
< 		for (Iterator i = resolve() ? eObject.eContents().iterator()
< 				: ((InternalEList) eObject.eContents()).basicIterator(); i
---
> 		for (Iterator i = resolve() ? value.eContents().iterator()
> 				: ((InternalEList) value.eContents()).basicIterator(); i
330,331c347
< 			EObject notifier = (EObject) i.next();
< 			remove(resource, notifier);
---
> 			updateImportsAndExports(resource, (EObject) i.next(), register);
