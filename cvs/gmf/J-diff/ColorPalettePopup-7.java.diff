2c2
<  * Copyright (c) 2005 IBM Corporation and others.
---
>  * Copyright (c) 2005, 2006 IBM Corporation and others.
17d16
< import org.eclipse.gmf.runtime.diagram.ui.properties.internal.DiagramPropertiesPlugin;
19,20d17
< import org.eclipse.jface.preference.IPreferenceStore;
< import org.eclipse.jface.preference.PreferenceConverter;
92c89
< 		 * @since 2.0
---
> 		 * 
191,192d187
< 	private String preferenceId;
< 
196c191,196
< 	 * Creates a PopupList above the specified shell.
---
>      * The default color to be used if the user presses the default button.
>      */
>     private boolean useDefaultColor = false;
> 
> 	/**
>      * Creates a color palette popup above the specified shell.
200a201,202
>      * @deprecated Use the other constructor. This one does not retrieve the
>      *             default value from the correct preference store.
204d205
< 		this.preferenceId = preferenceId;
215,216d215
< 	 * 
< 	 * @since 3.0
218c217
< 	private ColorPalettePopup(Shell parent, int rowHeight) {
---
> 	public ColorPalettePopup(Shell parent, int rowHeight) {
246,247c245,246
< 		Button defaultColor = new Button(shell, SWT.PUSH);
< 		defaultColor.setText(DEAFULT_COLOR_STRING);
---
> 		Button defaultButton = new Button(shell, SWT.PUSH);
> 		defaultButton.setText(DEAFULT_COLOR_STRING);
251c250
< 		defaultColor.setLayoutData(data);
---
> 		defaultButton.setLayoutData(data);
253c252
< 		defaultColor.addSelectionListener(new SelectionAdapter() {
---
> 		defaultButton.addSelectionListener(new SelectionAdapter() {
256,261c255
< 
< 				IPreferenceStore store = DiagramPropertiesPlugin.getDefault()
< 					.getPreferenceStore();
< 				if (preferenceId != null)
< 					selectedColor = PreferenceConverter.getColor(store,
< 						preferenceId);
---
>                 useDefaultColor = true;
333a328,334
> 	/**
>      * Gets the color the user selected. Could be null as the user may have
>      * cancelled the gesture or they may have selected the default color button.
>      * See {@link #useDefaultColor()}.
>      * 
>      * @return the selected color or null
>      */
337a339,346
>     /**
>      * Returns true if the user selected to use the default color
>      * 
>      * @return true if the default color is to be used; false otherwise
>      */
>     public boolean useDefaultColor() {
>         return useDefaultColor;
>     }
