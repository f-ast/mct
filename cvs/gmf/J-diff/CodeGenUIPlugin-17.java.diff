18a19,21
> import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;
> import org.eclipse.gmf.codegen.util.CodegenEmitters;
> import org.eclipse.gmf.codegen.util.EmitterSource;
25a29,30
> 	private EmitterSource<GenEditorGenerator, CodegenEmitters> emitterSource;
> 
30a36,39
> 		if (emitterSource != null) {
> 			emitterSource.dispose();
> 			emitterSource = null;
> 		}
73a83,94
> 
> 	public CodegenEmitters getEmitters(GenEditorGenerator genModel) {
> 		if (emitterSource == null) {
> 			emitterSource = new EmitterSource<GenEditorGenerator, CodegenEmitters>() {
> 				@Override
> 				protected CodegenEmitters newEmitters(GenEditorGenerator genModel) {
> 					return new CodegenEmitters(!genModel.isDynamicTemplates(), genModel.getTemplateDirectory());
> 				}
> 			};
> 		}
> 		return emitterSource.getEmitters(genModel, genModel.isDynamicTemplates());
> 	}
