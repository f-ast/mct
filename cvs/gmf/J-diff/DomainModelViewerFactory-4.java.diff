19a20
> import org.eclipse.gmf.internal.bridge.wizards.pages.simple.ResolvedItem.Resolution;
37a39,44
> 	private static final String P_NODE = "Node"; //$NON-NLS-1$
> 
> 	private static final String P_LINK = "Link"; //$NON-NLS-1$
> 
> 	private static final String P_LABEL = "Label"; //$NON-NLS-1$
> 
44c51
< 			viewer.setColumnProperties(new String[] { "no", Resolution.NODE.getName(), Resolution.LINK.getName(), Resolution.LABEL.getName() }); //$NON-NLS-1$
---
> 			viewer.setColumnProperties(new String[] { "no", P_NODE, P_LINK, P_LABEL }); //$NON-NLS-1$
47c54
< 			viewer.setColumnProperties(new String[] { "no", Resolution.NODE.getName(), Resolution.LINK.getName() }); //$NON-NLS-1$
---
> 			viewer.setColumnProperties(new String[] { "no", P_NODE, P_LINK }); //$NON-NLS-1$
67c74
< 			return Boolean.valueOf(item.getResolution() == Resolution.getByName(property));
---
> 			return Boolean.valueOf(item.getResolution() == getResolution(property));
77c84
< 			Resolution resolution = Resolution.getByName(property);
---
> 			Resolution resolution = getResolution(property);
83c90
< 				viewer.update(item, new String[] { Resolution.NODE.getName(), Resolution.LINK.getName(), Resolution.LABEL.getName() });
---
> 				viewer.update(item, new String[] { P_NODE, P_LINK, P_LABEL });
85c92,93
< 				viewer.update(item, new String[] { Resolution.NODE.getName(), Resolution.LINK.getName() });
---
> 				viewer.update(item, new String[] { P_NODE, P_LINK });
> 			}
86a95,104
> 		
> 		private Resolution getResolution(String property) {
> 			if (P_NODE.equals(property)) {
> 				return Resolution.NODE;
> 			} else if (P_LINK.equals(property)) {
> 				return Resolution.LINK;
> 			} else if (P_LABEL.equals(property)) {
> 				return Resolution.LABEL;
> 			}
> 			return null;
