39a40
> import org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants;
49a51,52
> import org.eclipse.jface.preference.IPreferenceStore;
> import org.eclipse.jface.preference.PreferenceConverter;
51a55
> import org.eclipse.swt.SWT;
53a58
> import org.eclipse.swt.graphics.FontData;
370a376,381
>         else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) ||
>                 NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) ||
>                 NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) ||
>                 NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
> 			refreshFont();
> 		} 
400a412
>         refreshFont();
405a418,441
>     /* (non-Javadoc)
>      * @see org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart#refreshFont()
>      */
>     protected void refreshFont() {
>         FontStyle style = (FontStyle) getPrimaryView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
>         FontData fontData = null;
>         
>         if (style != null) {
>             fontData = new FontData(
>                 style.getFontName(), 
>                 style.getFontHeight(), 
>                 (style.isBold() ? SWT.BOLD : SWT.NORMAL) | 
>                 (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
>         } else {
>             // initialize font to defaults
>             fontData =
>                 PreferenceConverter.getFontData(
>                     (IPreferenceStore)getDiagramPreferencesHint().getPreferenceStore(),
>                     IPreferenceConstants.PREF_DEFAULT_FONT);
>         }
>         
>         setFont(fontData);
>     }
> 
