9,11d8
< import java.util.List;
< import java.util.Map;
< 
13a11,12
> import org.eclipse.emf.ecore.EObject;
> 
20c19
<  * Container for audit rules representing a hierarchical organization of audits in the constraint category hierarchy of emft.validation framework
---
>  * Represents constraint category of emft.validation framework
25a25
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getRoot <em>Root</em>}</li>
29c29
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}</li>
---
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getPath <em>Path</em>}</li>
31d30
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers <em>Child Containers</em>}</li>
39c38
< public interface GenAuditContainer extends GenRuleContainerBase {
---
> public interface GenAuditContainer extends EObject {
41,43c40,41
< 	 * Returns the value of the '<em><b>Audits</b></em>' containment reference list.
< 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule}.
< 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer <em>Container</em>}'.
---
> 	 * Returns the value of the '<em><b>Root</b></em>' container reference.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getCategories <em>Categories</em>}'.
46c44
< 	 * If the meaning of the '<em>Audits</em>' container reference list isn't clear,
---
> 	 * If the meaning of the '<em>Root</em>' container reference isn't clear,
50,56c48,51
< 	 * <!-- begin-model-doc -->
< 	 * The audit rules organized in this container
< 	 * <!-- end-model-doc -->
< 	 * @return the value of the '<em>Audits</em>' containment reference list.
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Audits()
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer
< 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule" opposite="container" containment="true"
---
> 	 * @return the value of the '<em>Root</em>' container reference.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Root()
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getCategories
> 	 * @model opposite="categories" required="true" changeable="false"
59,77c54
< 	EList getAudits();
< 
< 	/**
< 	 * Returns the value of the '<em><b>Child Containers</b></em>' containment reference list.
< 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer}.
< 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}'.
< 	 * <!-- begin-user-doc -->
< 	 * <p>
< 	 * If the meaning of the '<em>Child Containers</em>' reference isn't clear,
< 	 * there really should be more of a description here...
< 	 * </p>
< 	 * <!-- end-user-doc -->
< 	 * @return the value of the '<em>Child Containers</em>' containment reference list.
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_ChildContainers()
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer
< 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" opposite="parentContainer" containment="true"
< 	 * @generated
< 	 */
< 	EList getChildContainers();
---
> 	GenAuditRoot getRoot();
163,212c140,141
< 	 * Returns the value of the '<em><b>Parent Container</b></em>' container reference.
< 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers <em>Child Containers</em>}'.
< 	 * <!-- begin-user-doc -->
< 	 * <p>
< 	 * If the meaning of the '<em>Parent Container</em>' container reference isn't clear,
< 	 * there really should be more of a description here...
< 	 * </p>
< 	 * <!-- end-user-doc -->
< 	 * @return the value of the '<em>Parent Container</em>' container reference.
< 	 * @see #setParentContainer(GenAuditContainer)
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_ParentContainer()
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers
< 	 * @model opposite="childContainers"
< 	 * @generated
< 	 */
< 	GenAuditContainer getParentContainer();
< 
< 	/**
< 	 * Sets the value of the '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}' container reference.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @param value the new value of the '<em>Parent Container</em>' container reference.
< 	 * @see #getParentContainer()
< 	 * @generated
< 	 */
< 	void setParentContainer(GenAuditContainer value);
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Gets all audit rules from this audit container hierarchy recursively
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule"
< 	 * @generated
< 	 */
< 	EList getAllAuditRules();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Gets all audit containers from this audit container hierarchy recursively
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer"
< 	 * @generated
< 	 */
< 	EList getAllAuditContainers();
< 
< 	/**
---
> 	 * Returns the value of the '<em><b>Path</b></em>' reference list.
> 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer}.
216c145
< 	 * Gets hierarchical path of this audit container as ordered list of containers beginning with the root and ended with this container
---
> 	 * Hierarchical path of this audit container as ordered list of containers beginning with the root and ended with this container
218c147,149
< 	 * @model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" required="true"
---
> 	 * @return the value of the '<em>Path</em>' reference list.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Path()
> 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" required="true"
223a155,157
> 	 * Returns the value of the '<em><b>Audits</b></em>' reference list.
> 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule}.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory <em>Category</em>}'.
224a159,162
> 	 * <p>
> 	 * If the meaning of the '<em>Audits</em>' reference list isn't clear,
> 	 * there really should be more of a description here...
> 	 * </p>
226,251c164,167
< 	 * <!-- begin-model-doc -->
< 	 * Maps all rules in the container hierarchy to client context IDs of their target contexts. key: (context ID of rule target) value: (EList<GenAuditRule>)
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" required="true"
< 	 * @generated
< 	 */
< 	Map getAllRulesToTargetContextMap();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Gets all model packages to which rules in this container hierarchy are targeted. Checks rules recursively.
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" type="org.eclipse.emf.codegen.ecore.genmodel.GenPackage"
< 	 * @generated
< 	 */
< 	EList getAllTargetedModelPackages();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Indicates whether this container hierarchy contains at least 1 rule targeted on notation elements. Checks recursively.
< 	 * <!-- end-model-doc -->
< 	 * @model
---
> 	 * @return the value of the '<em>Audits</em>' reference list.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Audits()
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory
> 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule" opposite="category"
254c170
< 	boolean hasDiagramElementRule();
---
> 	EList getAudits();
256,258d171
< 	List/*String*/ getAllContextSelectorsLocalClassNames();
< 	List/*String*/ getAllRequiredConstraintAdaptersLocalClassNames();
< 	List/*GenAuditRule*/ getAllJavaLangAudits();
