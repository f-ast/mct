16d15
< import java.util.Iterator;
58c57
< 	public ValueSpecDef getDefinition(EObject eObject, DiagnosticChain diagnostics, Map context) {
---
> 	public ValueSpecDef getDefinition(EObject eObject, DiagnosticChain diagnostics, Map<Object, Object> context) {
63c62
< 	public boolean validate(EDataType eDataType, Object value, DiagnosticChain diagnostics, Map context) {
---
> 	public boolean validate(EDataType eDataType, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
67c66
< 	public boolean validate(EObject eObject, DiagnosticChain diagnostics, Map context) {
---
> 	public boolean validate(EObject eObject, DiagnosticChain diagnostics, Map<Object, Object> context) {
74c73
< 	public boolean validate(EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map context) {
---
> 	public boolean validate(EClass eClass, EObject eObject, DiagnosticChain diagnostics, Map<Object, Object> context) {
86c85
< 	protected boolean validateModel(EObject eObject, DiagnosticChain diagnostics, Map context) {
---
> 	protected boolean validateModel(EObject eObject, DiagnosticChain diagnostics, Map<Object, Object> context) {
131,133c130,131
< 				for (Iterator it = contextData.environment.keySet().iterator(); it.hasNext();) {
< 					String varName = (String) it.next();
< 					TypeProvider typeProvider = (TypeProvider)contextData.environment.get(varName);
---
> 				for (String varName : contextData.environment.keySet()) {
> 					TypeProvider typeProvider = contextData.environment.get(varName);
175c173
< 	public ContextData getContextBinding(EObject eObject, EObject[] contextHolder, Map context) {
---
> 	public ContextData getContextBinding(EObject eObject, EObject[] contextHolder, Map<Object, Object> context) {
211c209
< 	protected boolean validateMetaModel(EModelElement modelElement, DiagnosticChain diagnostics, Map context) {
---
> 	protected boolean validateMetaModel(EModelElement modelElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
244c242
< 	public static ContextProvider getContextClass(EStructuralFeature bindFeature, final Map validationContext) {
---
> 	public static ContextProvider getContextClass(EStructuralFeature bindFeature, final Map<Object, Object> validationContext) {
259c257
< 	private ContextProvider createContextProvider(String ctxExpression, EClass contextClass, Map context) {
---
> 	private ContextProvider createContextProvider(String ctxExpression, EClass contextClass, Map<Object, Object> context) {
263c261
< 	public ValueSpecDef getDefinition(EClass metaClass, EObject modelElement, DiagnosticChain diagnostics, DefData data, Map context) {
---
> 	public ValueSpecDef getDefinition(EClass metaClass, EObject modelElement, DiagnosticChain diagnostics, DefData data, Map<Object, Object> context) {
270,271c268
< 			for (Iterator it = metaClass.getEAnnotations().iterator(); it.hasNext();) {
< 				EAnnotation nextAnnotation = (EAnnotation) it.next();
---
> 			for (EAnnotation nextAnnotation : metaClass.getEAnnotations()) {
285c282
< 		EList superTypes = metaClass.getESuperTypes();		
---
> 		EList<EClass> superTypes = metaClass.getESuperTypes();		
291,295c288,289
< 			for (Iterator it = metaClass.getEStructuralFeatures().iterator(); it.hasNext();) {
< 				EStructuralFeature nextAttr = (EStructuralFeature) it.next();
< 
< 				for (Iterator annotationIt = nextAttr.getEAnnotations().iterator(); annotationIt.hasNext();) {
< 					EAnnotation annotation = (EAnnotation)annotationIt.next();
---
> 			for (EStructuralFeature nextAttr : metaClass.getEStructuralFeatures()) {
> 				for (EAnnotation annotation : nextAttr.getEAnnotations()) {
358,359c352
< 		for (Iterator it = superTypes.iterator(); it.hasNext();) {
< 			EClass superClass = (EClass) it.next();
---
> 		for (EClass superClass : superTypes) {
382c375
< 	private static TypeProvider getTypeInfo(EModelElement typeAnnotationSource, EClass resolutionContext, DiagnosticChain diagnostics, Map validationContext) {
---
> 	private static TypeProvider getTypeInfo(EModelElement typeAnnotationSource, EClass resolutionContext, DiagnosticChain diagnostics, Map<Object, Object> validationContext) {
384c377
< 		List annotations = DefUtils.getAnnotationsWithKeyAndValue(typeAnnotationSource, Annotations.CONSTRAINTS_META_URI, Annotations.Meta.DEF_KEY, Annotations.Meta.TYPE);
---
> 		List<EAnnotation> annotations = DefUtils.getAnnotationsWithKeyAndValue(typeAnnotationSource, Annotations.CONSTRAINTS_META_URI, Annotations.Meta.DEF_KEY, Annotations.Meta.TYPE);
386c379
< 		EAnnotation typeAnnotation = annotations.isEmpty() ? null : (EAnnotation)annotations.get(0);		
---
> 		EAnnotation typeAnnotation = annotations.isEmpty() ? null : annotations.get(0);		
438c431
< 	private static ValueSpecDef findDefinition(EClass eClass, Map context) {
---
> 	private static ValueSpecDef findDefinition(EClass eClass, Map<Object, Object> context) {
440c433
< 			Map defMap = (Map)context.get(ValueSpecDef.class);
---
> 			Map<?,?> defMap = (Map<?,?>)context.get(ValueSpecDef.class);
446c439
< 	private static ContextData getCachedCtxBinding(EModelElement modelElement, Map context) {
---
> 	private static ContextData getCachedCtxBinding(EModelElement modelElement, Map<Object, Object> context) {
448c441
< 			Map bindMap = (Map)context.get(ContextProvider.class);
---
> 			Map<?,?> bindMap = (Map<?,?>)context.get(ContextProvider.class);
459,460c452,453
< 	private static Map getEnvProvider(EStructuralFeature contextBindFeature, Map context) {
< 		List varDefs = DefUtils.getAnnotationsWithKeyAndValue( 
---
> 	private static Map<String, TypeProvider> getEnvProvider(EStructuralFeature contextBindFeature, Map<Object, Object> context) {
> 		List<EAnnotation> varDefs = DefUtils.getAnnotationsWithKeyAndValue( 
468,470c461
< 		for (Iterator it = varDefs.iterator(); it.hasNext();) {
< 			EAnnotation nextVarAnnotation = (EAnnotation) it.next();
< 			
---
> 		for (EAnnotation nextVarAnnotation : varDefs) {
473c464
< 			Map.Entry typeExpression = DefUtils.getKeyPreffixAnnotation(nextVarAnnotation, typePrefix);
---
> 			Map.Entry<String, String> typeExpression = DefUtils.getKeyPrefixAnnotation(nextVarAnnotation, typePrefix);
475c466
< 				String body = (String)typeExpression.getValue();
---
> 				String body = typeExpression.getValue();
499,500c490
< 	@SuppressWarnings("unchecked")
< 	private static void registerCtxBinding(EStructuralFeature contextDefOwner, ContextData contextData, Map context) {
---
> 	private static void registerCtxBinding(EStructuralFeature contextDefOwner, ContextData contextData, Map<Object, Object> context) {
502c492,493
< 			Map bindMap = (Map)context.get(ContextProvider.class);
---
> 			@SuppressWarnings("unchecked")
> 			Map<EStructuralFeature, ContextData> bindMap = (Map<EStructuralFeature, ContextData>)context.get(ContextProvider.class);
511,512c502
< 	@SuppressWarnings("unchecked")
< 	private static void registerDefinition(EClass eClass, ValueSpecDef definition, Map context) {
---
> 	private static void registerDefinition(EClass eClass, ValueSpecDef definition, Map<Object, Object> context) {
517c507,508
< 			Map defMap = (Map)context.get(ValueSpecDef.class);
---
> 			@SuppressWarnings("unchecked")
> 			Map<EClass, ValueSpecDef> defMap = (Map<EClass, ValueSpecDef>) context.get(ValueSpecDef.class);
538,539c529,530
< 		final Map environment;
< 		public ContextData(ContextProvider contextProvider, Map environment) {	
---
> 		final Map<String, TypeProvider> environment;
> 		public ContextData(ContextProvider contextProvider, Map<String, TypeProvider> environment) {	
