12a13,14
> import org.eclipse.gmf.codegen.gmfgen.*;
> 
167d168
< 				if (result == null) result = caseElementType(genDiagram);
240,245d240
< 			case GMFGenPackage.ELEMENT_TYPE: {
< 				ElementType elementType = (ElementType)theEObject;
< 				Object result = caseElementType(elementType);
< 				if (result == null) result = defaultCase(theEObject);
< 				return result;
< 			}
271d265
< 				if (result == null) result = caseElementType(genNode);
282d275
< 				if (result == null) result = caseElementType(genTopLevelNode);
293d285
< 				if (result == null) result = caseElementType(genChildNode);
312d303
< 				if (result == null) result = caseElementType(genLink);
347a339,365
> 			case GMFGenPackage.ELEMENT_TYPE: {
> 				ElementType elementType = (ElementType)theEObject;
> 				Object result = caseElementType(elementType);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFGenPackage.METAMODEL_TYPE: {
> 				MetamodelType metamodelType = (MetamodelType)theEObject;
> 				Object result = caseMetamodelType(metamodelType);
> 				if (result == null) result = caseElementType(metamodelType);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFGenPackage.SPECIALIZATION_TYPE: {
> 				SpecializationType specializationType = (SpecializationType)theEObject;
> 				Object result = caseSpecializationType(specializationType);
> 				if (result == null) result = caseElementType(specializationType);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
> 			case GMFGenPackage.NOTATION_TYPE: {
> 				NotationType notationType = (NotationType)theEObject;
> 				Object result = caseNotationType(notationType);
> 				if (result == null) result = caseElementType(notationType);
> 				if (result == null) result = defaultCase(theEObject);
> 				return result;
> 			}
854a873,917
> 	 * Returns the result of interpretting the object as an instance of '<em>Metamodel Type</em>'.
> 	 * <!-- begin-user-doc -->
> 	 * This implementation returns null;
> 	 * returning a non-null result will terminate the switch.
> 	 * <!-- end-user-doc -->
> 	 * @param object the target of the switch.
> 	 * @return the result of interpretting the object as an instance of '<em>Metamodel Type</em>'.
> 	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
> 	 * @generated
> 	 */
> 	public Object caseMetamodelType(MetamodelType object) {
> 		return null;
> 	}
> 
> 	/**
> 	 * Returns the result of interpretting the object as an instance of '<em>Specialization Type</em>'.
> 	 * <!-- begin-user-doc -->
> 	 * This implementation returns null;
> 	 * returning a non-null result will terminate the switch.
> 	 * <!-- end-user-doc -->
> 	 * @param object the target of the switch.
> 	 * @return the result of interpretting the object as an instance of '<em>Specialization Type</em>'.
> 	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
> 	 * @generated
> 	 */
> 	public Object caseSpecializationType(SpecializationType object) {
> 		return null;
> 	}
> 
> 	/**
> 	 * Returns the result of interpretting the object as an instance of '<em>Notation Type</em>'.
> 	 * <!-- begin-user-doc -->
> 	 * This implementation returns null;
> 	 * returning a non-null result will terminate the switch.
> 	 * <!-- end-user-doc -->
> 	 * @param object the target of the switch.
> 	 * @return the result of interpretting the object as an instance of '<em>Notation Type</em>'.
> 	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
> 	 * @generated
> 	 */
> 	public Object caseNotationType(NotationType object) {
> 		return null;
> 	}
> 
> 	/**
