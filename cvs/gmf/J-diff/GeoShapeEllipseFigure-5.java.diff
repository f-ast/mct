2c2
<  * Copyright (c) 2003, 2004 IBM Corporation and others.
---
>  * Copyright (c) 2003, 2008 IBM Corporation and others.
12d11
< 
20a20
> import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;
28,29c28,29
< public class GeoShapeEllipseFigure extends GeoShapeFigure
< 	implements IOvalAnchorableFigure {
---
> public class GeoShapeEllipseFigure extends GeoShapeFigure implements
> 		IOvalAnchorableFigure {
33,35c33,40
< 	 * @param width initial width of the figure
< 	 * @param height initial height of the figure
< 	 * @param spacing <code>int</code> that is the margin between children in logical units
---
> 	 * 
> 	 * @param width
> 	 *            initial width of the figure
> 	 * @param height
> 	 *            initial height of the figure
> 	 * @param spacing
> 	 *            <code>int</code> that is the margin between children in
> 	 *            logical units
41c46,48
< 	/* (non-Javadoc)
---
> 	/*
> 	 * (non-Javadoc)
> 	 * 
46c53
< 		Rectangle r = getBounds();
---
> 		Rectangle r = getOvalBounds().getCopy();
50a58,61
> 		// set the line type and line width
> 		g.setLineStyle(getLineStyle());
> 		g.setLineWidth(getLineWidth());
> 
52c63,68
< 		g.drawOval(r.x, r.y, r.width - 1, r.height - 1);
---
> 		r.width--;
> 		r.height--;
> 		if (getLineWidth() > 1) {
> 			r.shrink((getLineWidth() - 1) / 2, (getLineWidth() - 1) / 2);
> 		}
> 		g.drawOval(r);
55c71,73
< 	/* (non-Javadoc)
---
> 	/*
> 	 * (non-Javadoc)
> 	 * 
59c77,87
< 		return getBounds();
---
> 		Rectangle r = getBounds();
> 
> 		Rectangle ovalRect = new Rectangle(r);
> 
> 		// not using the full bounds of the rectangle to draw
> 		// the oval in as it results in the top and the left
> 		// edge of the oval being chopped off.  That is why 
> 		// we are indenting by 1
> 		ovalRect.setSize(r.width-1, r.height-1);
> 		
> 		return ovalRect;
62c90,92
< 	/* (non-Javadoc)
---
> 	/*
> 	 * (non-Javadoc)
> 	 * 
71c101,103
< 	/* (non-Javadoc)
---
> 	/*
> 	 * (non-Javadoc)
> 	 * 
