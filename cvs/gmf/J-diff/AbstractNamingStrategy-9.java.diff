13a14,17
> import org.eclipse.emf.codegen.util.CodeGenUtil;
> import org.eclipse.gmf.codegen.gmfgen.GenLink;
> import org.eclipse.gmf.codegen.gmfgen.GenNode;
> import org.eclipse.gmf.common.NamesDispenser;
17a22
> import org.eclipse.gmf.mappings.MappingEntry;
25c30
< 	private final NamingStrategy myDelegate;
---
> 	private final String suffix;
27,28c32,50
< 	public AbstractNamingStrategy() {
< 		this(null);
---
> 	private final NamesDispenser namesDispenser;
> 
> 	private final NamingStrategy chainedNamingStrategy;
> 
> 	private final NamingStrategy prefixNamingStrategy;
> 
> 	public AbstractNamingStrategy(String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
> 		this.suffix = suffix;
> 		this.namesDispenser = namesDispenser;
> 		this.chainedNamingStrategy = chainedNamingStrategy;
> 		this.prefixNamingStrategy = prefixNamingStrategy;
> 	}
> 
> 	protected String createClassName(String s) {
> 		s = getValidClassName(s);
> 		if (namesDispenser == null) {
> 			return suffix == null ? s : s + suffix;
> 		}
> 		return namesDispenser.get(s, suffix);
31,32c53,56
< 	public AbstractNamingStrategy(NamingStrategy chained) {
< 		myDelegate = chained;
---
> 	protected String getValidClassName(String s) {
> 		assert !isEmpty(s);
> 		s = CodeGenUtil.validJavaIdentifier(s);
> 		return Character.toUpperCase(s.charAt(0)) + s.substring(1);
35,37c59,73
< 	public String get(CanvasMapping cme) {
< 		if (myDelegate != null) {
< 			return myDelegate.get(cme);
---
> 	protected boolean isEmpty(String s) {
> 		return s == null || s.length() == 0;
> 	}
> 
> 	protected final NamingStrategy getChainedNamingStrategy() {
> 		return chainedNamingStrategy;
> 	}
> 
> 	protected final NamingStrategy getPrefixNamingStrategy() {
> 		return prefixNamingStrategy;
> 	}
> 
> 	public String get(CanvasMapping mapping) {
> 		if (chainedNamingStrategy != null) {
> 			return chainedNamingStrategy.get(mapping);
42,44c78,80
< 	public String get(NodeMapping nme) {
< 		if (myDelegate != null) {
< 			return myDelegate.get(nme);
---
> 	public String get(NodeMapping mapping) {
> 		if (chainedNamingStrategy != null) {
> 			return chainedNamingStrategy.get(mapping);
49,51c85,87
< 	public String get(LinkMapping lme) {
< 		if (myDelegate != null) {
< 			return myDelegate.get(lme);
---
> 	public String get(LinkMapping mapping) {
> 		if (chainedNamingStrategy != null) {
> 			return chainedNamingStrategy.get(mapping);
56,58c92,94
< 	public String get(CompartmentMapping cm) {
< 		if (myDelegate != null) {
< 			return myDelegate.get(cm);
---
> 	public String get(CompartmentMapping mapping) {
> 		if (chainedNamingStrategy != null) {
> 			return chainedNamingStrategy.get(mapping);
63,65c99,101
< 	public String get(LabelMapping labelMapping) {
< 		if (myDelegate != null) {
< 			return myDelegate.get(labelMapping);
---
> 	public String get(LabelMapping mapping) {
> 		if (chainedNamingStrategy != null) {
> 			return chainedNamingStrategy.get(mapping);
70,71c106,107
< 	protected final NamingStrategy getDelegate() {
< 		return myDelegate;
---
> 	protected String getCompartmentHostPrefix(CompartmentMapping mapping) {
> 		return getPrefixNamingStrategy() != null ? getPrefixNamingStrategy().get(mapping.getParentNode()) : GenNode.CLASS_NAME_PREFIX;
74,75c110,118
< 	protected static boolean isEmpty(String s) {
< 		return s == null || s.length() == 0;
---
> 	protected String getLabelHostPrefix(LabelMapping mapping) {
> 		MappingEntry parentMapping = mapping.getMapEntry();
> 		if (parentMapping instanceof NodeMapping) {
> 			return getPrefixNamingStrategy() != null ? getPrefixNamingStrategy().get((NodeMapping) parentMapping) : GenNode.CLASS_NAME_PREFIX;
> 		} else if (parentMapping instanceof LinkMapping) {
> 			return getPrefixNamingStrategy() != null ? getPrefixNamingStrategy().get((LinkMapping) parentMapping) : GenLink.CLASS_NAME_PREFIX;
> 		} else {
> 			throw new IllegalArgumentException(String.valueOf(mapping));
> 		}
