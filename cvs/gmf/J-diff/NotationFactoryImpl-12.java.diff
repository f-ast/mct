165a166,167
> 			case NotationPackage.LINE_TYPE_STYLE: return createLineTypeStyle();
> 			case NotationPackage.ARROW_STYLE: return createArrowStyle();
197a200,203
> 			case NotationPackage.LINE_TYPE:
> 				return createLineTypeFromString(eDataType, initialValue);
> 			case NotationPackage.ARROW_TYPE:
> 				return createArrowTypeFromString(eDataType, initialValue);
235a242,245
> 			case NotationPackage.LINE_TYPE:
> 				return convertLineTypeToString(eDataType, instanceValue);
> 			case NotationPackage.ARROW_TYPE:
> 				return convertArrowTypeToString(eDataType, instanceValue);
761a772,791
> 	public LineTypeStyle createLineTypeStyle() {
> 		LineTypeStyleImpl lineTypeStyle = new LineTypeStyleImpl();
> 		return lineTypeStyle;
> 	}
> 
> 				/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public ArrowStyle createArrowStyle() {
> 		ArrowStyleImpl arrowStyle = new ArrowStyleImpl();
> 		return arrowStyle;
> 	}
> 
> 				/**
> 	 * <!-- begin-user-doc -->
>      * <!-- end-user-doc -->
> 	 * @generated
> 	 */
959a990,1029
> 	 * @generated
> 	 */
> 	public LineType createLineTypeFromString(EDataType eDataType, String initialValue) {
> 		LineType result = LineType.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
> 		return result;
> 	}
> 
> 				/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertLineTypeToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 				/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public ArrowType createArrowTypeFromString(EDataType eDataType, String initialValue) {
> 		ArrowType result = ArrowType.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
> 		return result;
> 	}
> 
> 				/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertArrowTypeToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
