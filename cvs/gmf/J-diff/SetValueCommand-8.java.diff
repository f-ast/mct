2c2
<  * Copyright (c) 2005, 2006 IBM Corporation and others.
---
>  * Copyright (c) 2005, 2007 IBM Corporation and others.
14a15
> import java.util.Iterator;
19a21
> import org.eclipse.emf.ecore.EObject;
22d23
< 
29c30
<  * @author ldamus
---
>  * @author ldamus, mmostafa
61,63c62,72
< 		if (FeatureMapUtil.isMany(getElementToEdit(),feature)) {
< 			((Collection) getElementToEdit().eGet(feature)).add(value);
< 
---
>         EObject elementToEdit = getElementToEdit();
>         boolean many = FeatureMapUtil.isMany(elementToEdit,feature);
>         if (many) {
>             Collection collection = ((Collection)elementToEdit.eGet(feature));
>             if (value instanceof List){
>                 List values = (List)value;
>                 collection.clear();
>                 collection.addAll(values);
>             }else {
>                 collection.add(value);
>             }
76,77c85,86
< 
<         if (getElementToEdit() == null || !super.canExecute()) {
---
>         EObject elementToEdit = getElementToEdit();
>         if (elementToEdit == null || !super.canExecute()) {
80,81c89,90
< 
<         if (value == null && FeatureMapUtil.isMany(getElementToEdit(), feature)) {
---
>         boolean many = FeatureMapUtil.isMany(elementToEdit, feature);
>         if (value == null && many) {
84d92
< 
86a95,103
>         if (allFeatures.contains(feature) && feature.isChangeable()){
>             if (!many && (value==null || feature.getEType().isInstance(value)))
>                 return true;
>             else {
>                 return verifyMany();
>             }
>         }
>         return false;
>     }
88,89c105,115
<         return allFeatures.contains(feature) && feature.isChangeable()
<             && (value == null || feature.getEType().isInstance(value));
---
>     private boolean verifyMany() {
>         if (value instanceof List){
>             List values = (List)value;
>             for (Iterator iter = values.iterator(); iter.hasNext();) {
>                 Object element = iter.next();
>                 if (!feature.getEType().isInstance(element))
>                     return false;
>             }
>             return true;
>         }
>         return feature.getEType().isInstance(value);
