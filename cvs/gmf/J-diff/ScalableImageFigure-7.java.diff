45,46c45,49
<     /** The cached SVGImage */
<     private RenderedImage renderedImage = null;
---
> 	private static final int
> 		FLAG_USE_DEFAULT_IMAGESIZE = MAX_FLAG << 1,
> 		FLAG_MAINTAIN_ASPECT_RATIO = MAX_FLAG << 2,
> 		FLAG_ANTI_ALIAS = MAX_FLAG << 3,
> 		FLAG_USE_ORIGINAL_COLORS = MAX_FLAG << 4;
48c51,52
<     private boolean useDefaultImageSize = false;
---
> 	/** The original <code>RenderedImage</code> at 100% device coordinate size */
>     private RenderedImage origRenderedImage = null;
50,54c54,55
<     private boolean maintainAspectRatio = true;
<     
<     private boolean antiAlias = true;
<     
<     private boolean useOriginalColors = false;
---
>     /** The cached <code>RenderedImage</code> that was last painted to the graphics context */
>     private RenderedImage lastRenderedImage = null;
62c63
< 		return antiAlias;
---
> 		return getFlag(FLAG_ANTI_ALIAS);
72c73
< 		this.antiAlias = antiAlias;
---
> 		setFlag(FLAG_ANTI_ALIAS, antiAlias);
83c84
< 		return maintainAspectRatio;
---
> 		return getFlag(FLAG_MAINTAIN_ASPECT_RATIO);
94c95
< 		this.maintainAspectRatio = maintainAspectRatio;
---
> 		setFlag(FLAG_MAINTAIN_ASPECT_RATIO, maintainAspectRatio);
108c109,114
< 		this.renderedImage = RenderedImageFactory.getInstance(byteOS.toByteArray());
---
> 		this.origRenderedImage = RenderedImageFactory.getInstance(byteOS.toByteArray());
> 		
> 		setFlag(FLAG_USE_DEFAULT_IMAGESIZE, false);
> 		setFlag(FLAG_USE_ORIGINAL_COLORS, false);
> 		setFlag(FLAG_MAINTAIN_ASPECT_RATIO, true);
> 		setFlag(FLAG_ANTI_ALIAS, true);
115c121
< 		this.renderedImage = renderedImage;
---
> 		this(renderedImage, false, false, true);
124,125c130
< 		this.renderedImage = renderedImage;
< 		setAntiAlias(antiAlias);
---
> 		this(renderedImage, false, false, antiAlias);
139,141c144,148
< 		this(renderedImage, antiAlias);
< 		this.useDefaultImageSize = useDefaultImageSize;
< 		this.useOriginalColors = useOriginalColors;
---
> 		origRenderedImage = renderedImage;
> 		setFlag(FLAG_USE_DEFAULT_IMAGESIZE, useDefaultImageSize);
> 		setFlag(FLAG_USE_ORIGINAL_COLORS, useOriginalColors);
> 		setFlag(FLAG_MAINTAIN_ASPECT_RATIO, true);
> 		setFlag(FLAG_ANTI_ALIAS, antiAlias);
166c173
< 			if (useDefaultImageSize) {
---
> 			if (getFlag(FLAG_USE_DEFAULT_IMAGESIZE)) {
168c175
< 					RenderedImage rndImage = getRenderedImage(new Dimension(0, 0));
---
> 					setRenderedImage( getRenderedImage(new Dimension(0, 0)));
170,171c177,178
< 					if (rndImage != null)
< 						swtImage = rndImage.getSWTImage();
---
> 					if (getRenderedImage() != null)
> 						swtImage = getRenderedImage().getSWTImage();
183a191,201
> 	/* (non-Javadoc)
> 	 * @see org.eclipse.draw2d.Figure#setBounds(org.eclipse.draw2d.geometry.Rectangle)
> 	 */
> 	public void setBounds(Rectangle rect) {
> 		Dimension devDim = new Dimension(rect.getSize());
> 		MapModeUtil.getMapMode(this).LPtoDP(devDim);
> 		setRenderedImage( getRenderedImage(devDim) );
> 		
> 		super.setBounds(rect);
> 	}
> 
191,199c209
< 		Dimension absDim = new Dimension(getBounds().getSize());
< 		translateToAbsolute(absDim);
< 		
< 		RenderedImage rndImage = getRenderedImage(absDim);
< 		
< 		if (rndImage != null)
< 			return rndImage.getSWTImage();
< 		
< 		return null;
---
> 		return getRenderedImage().getSWTImage();
219,227c229
< 		if (getRenderedImage() != null) {
< 			if (getRenderedImage().equals(newRenderedImage)) {
< 				newRenderedImage = getRenderedImage();
< 			}
< 		}
< 		
< 		setRenderedImage(newRenderedImage);
< 		
< 		return getRenderedImage();
---
> 		return newRenderedImage;
236c238
< 		return useOriginalColors;
---
> 		return getFlag(FLAG_USE_ORIGINAL_COLORS);
251c253
<            	((DrawableRenderedImage) graphics).drawRenderedImage(getRenderedImage(new Dimension(getBounds().width, getBounds().height)),
---
>            	lastRenderedImage = ((DrawableRenderedImage) graphics).drawRenderedImage(getRenderedImage(new Dimension(getBounds().width, getBounds().height)),
252a255
>            	assert lastRenderedImage != null;
254,259c257
< 		   // translate to device coordinates for rendering
< 		   area = (Rectangle)MapModeUtil.getMapMode(this).LPtoDP(area);
<            RenderedImage rndImage = getRenderedImage(new Dimension(area.width, area.height));
<            if (rndImage != null && renderedImage.getSWTImage()!=null)
<            		graphics.drawImage(renderedImage.getSWTImage(), x, y); 
<            	// no need to dispose img since it is managed by the SVGImage object lifetime
---
> 			graphics.drawImage(getRenderedImage().getSWTImage(), x, y); 
281c279
< 		return renderedImage;
---
> 		return origRenderedImage;
290c288
< 		this.renderedImage = renderedImage;
---
> 		this.origRenderedImage = renderedImage;
