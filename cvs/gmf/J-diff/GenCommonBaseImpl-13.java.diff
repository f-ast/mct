12d11
< 
14d12
< import org.eclipse.emf.ecore.EStructuralFeature;
21d18
< 
168,169c165,166
< 			GenClass oldDiagramRunTimeClass = diagramRunTimeClass;
< 			diagramRunTimeClass = (GenClass)eResolveProxy((InternalEObject)diagramRunTimeClass);
---
> 			InternalEObject oldDiagramRunTimeClass = (InternalEObject)diagramRunTimeClass;
> 			diagramRunTimeClass = (GenClass)eResolveProxy(oldDiagramRunTimeClass);
389,391c386,387
< 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
< 		if (featureID >= 0) {
< 			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
---
> 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
> 		switch (featureID) {
394,416d389
< 				default:
< 					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
< 			}
< 		}
< 		return eBasicSetContainer(null, featureID, msgs);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated NOT
< 	 */
< 	public String getEditPartQualifiedClassName() {
< 		return getDiagram().getEditPartsPackageName() + '.' + getEditPartClassName();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated NOT
< 	 */
< 	public String getItemSemanticEditPolicyQualifiedClassName() {
< 		return getDiagram().getEditPoliciesPackageName() + '.' + getItemSemanticEditPolicyClassName();
418,425c391
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated NOT
< 	 */
< 	public String getNotationViewFactoryQualifiedClassName() {
< 		return getDiagram().getNotationViewFactoriesPackageName() + '.' + getNotationViewFactoryClassName();
---
> 		return super.eInverseRemove(otherEnd, featureID, msgs);
431,437d396
< 	 * @generated NOT
< 	 */
< 	public abstract GenDiagram getDiagram();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
440,441c399,400
< 	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
---
> 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
> 		switch (featureID) {
456c415
< 		return eDynamicGet(eFeature, resolve);
---
> 		return super.eGet(featureID, resolve, coreType);
464,465c423,424
< 	public void eSet(EStructuralFeature eFeature, Object newValue) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
---
> 	public void eSet(int featureID, Object newValue) {
> 		switch (featureID) {
485c444
< 		eDynamicSet(eFeature, newValue);
---
> 		super.eSet(featureID, newValue);
493,494c452,453
< 	public void eUnset(EStructuralFeature eFeature) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
---
> 	public void eUnset(int featureID) {
> 		switch (featureID) {
514c473
< 		eDynamicUnset(eFeature);
---
> 		super.eUnset(featureID);
522,523c481,482
< 	public boolean eIsSet(EStructuralFeature eFeature) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
---
> 	public boolean eIsSet(int featureID) {
> 		switch (featureID) {
537c496,523
< 		return eDynamicIsSet(eFeature);
---
> 		return super.eIsSet(featureID);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public String getEditPartQualifiedClassName() {
> 		return getDiagram().getEditPartsPackageName() + '.' + getEditPartClassName();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public String getItemSemanticEditPolicyQualifiedClassName() {
> 		return getDiagram().getEditPoliciesPackageName() + '.' + getItemSemanticEditPolicyClassName();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public String getNotationViewFactoryQualifiedClassName() {
> 		return getDiagram().getNotationViewFactoriesPackageName() + '.' + getNotationViewFactoryClassName();
542a529,535
> 	 * @generated NOT
> 	 */
> 	public abstract GenDiagram getDiagram();
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
