164c164
< 		Rectangle borderItemBounds = borderItem.getBounds();
---
> 		Dimension borderItemSize = getSize(borderItem);
167c167
< 			x = parentFigureX - borderItemBounds.width
---
> 			x = parentFigureX - borderItemSize.width
174c174
< 			y = parentFigureY - borderItemBounds.height
---
> 			y = parentFigureY - borderItemSize.height
199c199
< 		Rectangle borderItemBounds = borderItem.getBounds();
---
> 		Dimension borderItemSize = getSize(borderItem);
202c202
< 		int westX = parentFigureX - borderItemBounds.width
---
> 		int westX = parentFigureX - borderItemSize.width
208c208
< 		int northY = parentFigureY - borderItemBounds.height
---
> 		int northY = parentFigureY - borderItemSize.height
215c215
< 				newY = northY + borderItemBounds.height;
---
> 				newY = northY + borderItemSize.height;
217,218c217,218
< 				- borderItemBounds.height) {
< 				newY = southY - borderItemBounds.height;
---
> 				- borderItemSize.height) {
> 				newY = southY - borderItemSize.height;
225c225
< 				newY = northY + borderItemBounds.height;
---
> 				newY = northY + borderItemSize.height;
227,228c227,228
< 				- borderItemBounds.height) {
< 				newY = southY - borderItemBounds.height;
---
> 				- borderItemSize.height) {
> 				newY = southY - borderItemSize.height;
235c235
< 				newX = westX + borderItemBounds.width;
---
> 				newX = westX + borderItemSize.width;
237,238c237,238
< 				- borderItemBounds.width) {
< 				newX = eastX - borderItemBounds.width;
---
> 				- borderItemSize.width) {
> 				newX = eastX - borderItemSize.width;
245c245
< 				newX = westX + borderItemBounds.width;
---
> 				newX = westX + borderItemSize.width;
247,248c247,248
< 				- borderItemBounds.width) {
< 				newX = eastX - borderItemBounds.width;
---
> 				- borderItemSize.width) {
> 				newX = eastX - borderItemSize.width;
297c297
< 		Rectangle borderItemBounds = borderItem.getBounds();
---
> 		Dimension borderItemSize = getSize(borderItem);
302c302
< 					recommendedLocation.y += borderItemBounds.height
---
> 					recommendedLocation.y += borderItemSize.height
306c306
< 					- borderItemBounds.height) { // off the bottom,
---
> 					- borderItemSize.height) { // off the bottom,
313c313
< 					recommendedLocation.x += borderItemBounds.width
---
> 					recommendedLocation.x += borderItemSize.width
317c317
< 					- borderItemBounds.width) {
---
> 					- borderItemSize.width) {
324c324
< 					recommendedLocation.y -= (borderItemBounds.height + vertical_gap);
---
> 					recommendedLocation.y -= (borderItemSize.height + vertical_gap);
333c333
< 					recommendedLocation.x -= (borderItemBounds.width + horizontal_gap);
---
> 					recommendedLocation.x -= (borderItemSize.width + horizontal_gap);
427a428
>         Dimension size = getSize(borderItem);
429c430
< 			getPreferredLocation(borderItem), borderItem.getBounds().getSize());
---
> 			getPreferredLocation(borderItem), size);
436a438
>         borderItem.setSize(size);
438,439c440
< 		setCurrentSideOfParent(findClosestSideOfParent(new Rectangle(ptNewLocation, borderItem
< 			.getBounds().getSize()), getParentBorder()));
---
> 		setCurrentSideOfParent(findClosestSideOfParent(new Rectangle(ptNewLocation, size), getParentBorder()));
507a509,521
> 	
> 	/**
> 	 * Gets the size of the border item figure.
> 	 * @param borderItem
> 	 * @return the size of the border item figure.
> 	 */
> 	protected final Dimension getSize(IFigure borderItem) {
>         Dimension size = getConstraint().getSize();
>         if (LayoutHelper.UNDEFINED.getSize().equals(size)) {
>         	size = borderItem.getPreferredSize();
>         }
>         return size;
> 	}
