15d14
< import org.eclipse.emf.ecore.EClass;
18,21d16
< import org.eclipse.gmf.gmfgraph.Compartment;
< import org.eclipse.gmf.gmfgraph.Connection;
< import org.eclipse.gmf.gmfgraph.Ellipse;
< import org.eclipse.gmf.gmfgraph.FigureGallery;
23,26d17
< import org.eclipse.gmf.gmfgraph.Node;
< import org.eclipse.gmf.gmfgraph.Polyline;
< import org.eclipse.gmf.gmfgraph.Rectangle;
< import org.eclipse.gmf.gmfgraph.RoundedRectangle;
27a19
> import org.eclipse.gmf.graphdef.editor.edit.parts.ChildAccessEditPart;
34a27
> import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;
35a29,30
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorNameEditPart;
42a38
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;
44a41
> import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;
46a44
> import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;
122,130c120
< 		EClass domainElementMetaclass = domainElement.eClass();
< 		return getDiagramVisualID(domainElement, domainElementMetaclass);
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	private static int getDiagramVisualID(EObject domainElement, EClass domainElementMetaclass) {
< 		if (GMFGraphPackage.eINSTANCE.getCanvas().isSuperTypeOf(domainElementMetaclass) && isDiagramCanvas_1000((Canvas) domainElement)) {
---
> 		if (GMFGraphPackage.eINSTANCE.getCanvas().isSuperTypeOf(domainElement.eClass()) && isDiagram((Canvas) domainElement)) {
133c123
< 		return getUnrecognizedDiagramID(domainElement);
---
> 		return -1;
140c130
< 		if (domainElement == null) {
---
> 		if (domainElement == null || !CanvasEditPart.MODEL_ID.equals(org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry.getModelID(containerView))) {
143,144c133,136
< 		EClass domainElementMetaclass = domainElement.eClass();
< 		return getNodeVisualID(containerView, domainElement, domainElementMetaclass, null);
---
> 		switch (org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry.getVisualID(containerView)) {
> 		case FigureDescriptorEditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return RectangleEditPart.VISUAL_ID;
146,153c138,139
< 
< 	/**
< 	 * @generated
< 	 */
< 	public static int getNodeVisualID(View containerView, EObject domainElement, EClass domainElementMetaclass, String semanticHint) {
< 		String containerModelID = getModelID(containerView);
< 		if (!CanvasEditPart.MODEL_ID.equals(containerModelID)) {
< 			return -1;
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
> 				return Ellipse2EditPart.VISUAL_ID;
155,162c141,142
< 		int containerVisualID;
< 		if (CanvasEditPart.MODEL_ID.equals(containerModelID)) {
< 			containerVisualID = getVisualID(containerView);
< 		} else {
< 			if (containerView instanceof Diagram) {
< 				containerVisualID = CanvasEditPart.VISUAL_ID;
< 			} else {
< 				return -1;
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return RoundedRectangle2EditPart.VISUAL_ID;
163a144,145
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
> 				return Polyline2EditPart.VISUAL_ID;
165,169c147,150
< 		int nodeVisualID = semanticHint != null ? getVisualID(semanticHint) : -1;
< 		switch (containerVisualID) {
< 		case CompartmentEditPart.VISUAL_ID:
< 			if (CompartmentNameEditPart.VISUAL_ID == nodeVisualID) {
< 				return CompartmentNameEditPart.VISUAL_ID;
---
> 			break;
> 		case RectangleEditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return Rectangle2EditPart.VISUAL_ID;
171,172c152,153
< 			if (CompartmentVisualFacetsEditPart.VISUAL_ID == nodeVisualID) {
< 				return CompartmentVisualFacetsEditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
> 				return EllipseEditPart.VISUAL_ID;
174,177c155,156
< 			return getUnrecognizedCompartment_2001ChildNodeID(domainElement, semanticHint);
< 		case NodeEditPart.VISUAL_ID:
< 			if (NodeNameEditPart.VISUAL_ID == nodeVisualID) {
< 				return NodeNameEditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return RoundedRectangleEditPart.VISUAL_ID;
179,180c158,159
< 			if (NodeVisualFacetsEditPart.VISUAL_ID == nodeVisualID) {
< 				return NodeVisualFacetsEditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
> 				return PolylineEditPart.VISUAL_ID;
182,185c161,164
< 			return getUnrecognizedNode_2002ChildNodeID(domainElement, semanticHint);
< 		case ConnectionEditPart.VISUAL_ID:
< 			if (ConnectionNameEditPart.VISUAL_ID == nodeVisualID) {
< 				return ConnectionNameEditPart.VISUAL_ID;
---
> 			break;
> 		case Rectangle2EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return Rectangle2EditPart.VISUAL_ID;
187,188c166,167
< 			if (ConnectionVisualFacetsEditPart.VISUAL_ID == nodeVisualID) {
< 				return ConnectionVisualFacetsEditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
> 				return EllipseEditPart.VISUAL_ID;
190,193c169,170
< 			return getUnrecognizedConnection_2003ChildNodeID(domainElement, semanticHint);
< 		case FigureGalleryEditPart.VISUAL_ID:
< 			if (FigureGalleryNameEditPart.VISUAL_ID == nodeVisualID) {
< 				return FigureGalleryNameEditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return RoundedRectangleEditPart.VISUAL_ID;
195,196c172,173
< 			if (FigureGalleryFiguresEditPart.VISUAL_ID == nodeVisualID) {
< 				return FigureGalleryFiguresEditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
> 				return PolylineEditPart.VISUAL_ID;
198,201c175,177
< 			return getUnrecognizedFigureGallery_2004ChildNodeID(domainElement, semanticHint);
< 		case RectangleEditPart.VISUAL_ID:
< 			if ((semanticHint == null || Rectangle2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRectangle_3002((Rectangle) domainElement))) {
---
> 			break;
> 		case EllipseEditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
204,205c180
< 			if ((semanticHint == null || EllipseEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeEllipse_3003((Ellipse) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
208,209c183
< 			if ((semanticHint == null || RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRoundedRectangle_3004((RoundedRectangle) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
212,213c186
< 			if ((semanticHint == null || PolylineEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodePolyline_3005((Polyline) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
216,219c189,191
< 			return getUnrecognizedRectangle_3001ChildNodeID(domainElement, semanticHint);
< 		case Rectangle2EditPart.VISUAL_ID:
< 			if ((semanticHint == null || Rectangle2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRectangle_3002((Rectangle) domainElement))) {
---
> 			break;
> 		case RoundedRectangleEditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
222,223c194
< 			if ((semanticHint == null || EllipseEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeEllipse_3003((Ellipse) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
226,227c197
< 			if ((semanticHint == null || RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRoundedRectangle_3004((RoundedRectangle) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
230,231c200
< 			if ((semanticHint == null || PolylineEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodePolyline_3005((Polyline) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
234,237c203,205
< 			return getUnrecognizedRectangle_3002ChildNodeID(domainElement, semanticHint);
< 		case EllipseEditPart.VISUAL_ID:
< 			if ((semanticHint == null || Rectangle2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRectangle_3002((Rectangle) domainElement))) {
---
> 			break;
> 		case Ellipse2EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
240,241c208
< 			if ((semanticHint == null || EllipseEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeEllipse_3003((Ellipse) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
244,245c211
< 			if ((semanticHint == null || RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRoundedRectangle_3004((RoundedRectangle) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
248,249c214
< 			if ((semanticHint == null || PolylineEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodePolyline_3005((Polyline) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
252,255c217,219
< 			return getUnrecognizedEllipse_3003ChildNodeID(domainElement, semanticHint);
< 		case RoundedRectangleEditPart.VISUAL_ID:
< 			if ((semanticHint == null || Rectangle2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRectangle_3002((Rectangle) domainElement))) {
---
> 			break;
> 		case RoundedRectangle2EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
258,259c222
< 			if ((semanticHint == null || EllipseEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeEllipse_3003((Ellipse) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
262,263c225
< 			if ((semanticHint == null || RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRoundedRectangle_3004((RoundedRectangle) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
266,267c228
< 			if ((semanticHint == null || PolylineEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodePolyline_3005((Polyline) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
270,275c231,233
< 			return getUnrecognizedRoundedRectangle_3004ChildNodeID(domainElement, semanticHint);
< 		case PolylineEditPart.VISUAL_ID:
< 			return getUnrecognizedPolyline_3005ChildNodeID(domainElement, semanticHint);
< 		case Ellipse2EditPart.VISUAL_ID:
< 			if ((semanticHint == null || Rectangle2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRectangle_3002((Rectangle) domainElement))) {
---
> 			break;
> 		case Rectangle3EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
278,279c236
< 			if ((semanticHint == null || EllipseEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeEllipse_3003((Ellipse) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
282,283c239
< 			if ((semanticHint == null || RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRoundedRectangle_3004((RoundedRectangle) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
286,287c242
< 			if ((semanticHint == null || PolylineEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodePolyline_3005((Polyline) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
290,293c245,261
< 			return getUnrecognizedEllipse_3006ChildNodeID(domainElement, semanticHint);
< 		case RoundedRectangle2EditPart.VISUAL_ID:
< 			if ((semanticHint == null || Rectangle2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRectangle_3002((Rectangle) domainElement))) {
---
> 			break;
> 		case Ellipse3EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return Rectangle2EditPart.VISUAL_ID;
> 			}
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
> 				return EllipseEditPart.VISUAL_ID;
> 			}
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return RoundedRectangleEditPart.VISUAL_ID;
> 			}
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
> 				return PolylineEditPart.VISUAL_ID;
> 			}
> 			break;
> 		case RoundedRectangle3EditPart.VISUAL_ID:
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
296,297c264
< 			if ((semanticHint == null || EllipseEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeEllipse_3003((Ellipse) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
300,301c267
< 			if ((semanticHint == null || RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRoundedRectangle_3004((RoundedRectangle) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
304,305c270
< 			if ((semanticHint == null || PolylineEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodePolyline_3005((Polyline) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
308,316c273
< 			return getUnrecognizedRoundedRectangle_3007ChildNodeID(domainElement, semanticHint);
< 		case Polyline2EditPart.VISUAL_ID:
< 			return getUnrecognizedPolyline_3008ChildNodeID(domainElement, semanticHint);
< 		case CompartmentVisualFacetsEditPart.VISUAL_ID:
< 			return getUnrecognizedCompartmentVisualFacets_7001ChildNodeID(domainElement, semanticHint);
< 		case NodeVisualFacetsEditPart.VISUAL_ID:
< 			return getUnrecognizedNodeVisualFacets_7002ChildNodeID(domainElement, semanticHint);
< 		case ConnectionVisualFacetsEditPart.VISUAL_ID:
< 			return getUnrecognizedConnectionVisualFacets_7003ChildNodeID(domainElement, semanticHint);
---
> 			break;
318,320c275,276
< 			if ((semanticHint == null || RectangleEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRectangle_3001((Rectangle) domainElement))) {
< 				return RectangleEditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getFigureDescriptor().isSuperTypeOf(domainElement.eClass())) {
> 				return FigureDescriptorEditPart.VISUAL_ID;
322,324c278,279
< 			if ((semanticHint == null || Ellipse2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeEllipse_3006((Ellipse) domainElement))) {
< 				return Ellipse2EditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return Rectangle3EditPart.VISUAL_ID;
326,328c281,282
< 			if ((semanticHint == null || RoundedRectangle2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeRoundedRectangle_3007((RoundedRectangle) domainElement))) {
< 				return RoundedRectangle2EditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getEllipse().isSuperTypeOf(domainElement.eClass())) {
> 				return Ellipse3EditPart.VISUAL_ID;
330,332c284,288
< 			if ((semanticHint == null || Polyline2EditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodePolyline_3008((Polyline) domainElement))) {
< 				return Polyline2EditPart.VISUAL_ID;
---
> 			if (GMFGraphPackage.eINSTANCE.getRoundedRectangle().isSuperTypeOf(domainElement.eClass())) {
> 				return RoundedRectangle3EditPart.VISUAL_ID;
> 			}
> 			if (GMFGraphPackage.eINSTANCE.getPolyline().isSuperTypeOf(domainElement.eClass())) {
> 				return Polyline3EditPart.VISUAL_ID;
334c290
< 			return getUnrecognizedFigureGalleryFigures_7004ChildNodeID(domainElement, semanticHint);
---
> 			break;
336,337c292
< 			if ((semanticHint == null || CompartmentEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getCompartment().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeCompartment_2001((Compartment) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getCompartment().isSuperTypeOf(domainElement.eClass())) {
340,341c295
< 			if ((semanticHint == null || NodeEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getNode().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeNode_2002((Node) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getNode().isSuperTypeOf(domainElement.eClass())) {
344,345c298
< 			if ((semanticHint == null || ConnectionEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getConnection().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeConnection_2003((Connection) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getConnection().isSuperTypeOf(domainElement.eClass())) {
348,349c301
< 			if ((semanticHint == null || FigureGalleryEditPart.VISUAL_ID == nodeVisualID) && GMFGraphPackage.eINSTANCE.getFigureGallery().isSuperTypeOf(domainElementMetaclass)
< 					&& (domainElement == null || isNodeFigureGallery_2004((FigureGallery) domainElement))) {
---
> 			if (GMFGraphPackage.eINSTANCE.getFigureGallery().isSuperTypeOf(domainElement.eClass())) {
352c304
< 			return getUnrecognizedCanvas_1000ChildNodeID(domainElement, semanticHint);
---
> 			break;
360,362c312,315
< 	public static int getLinkWithClassVisualID(EObject domainElement) {
< 		if (domainElement == null) {
< 			return -1;
---
> 	public static boolean canCreateNode(View containerView, int nodeVisualID) {
> 		String containerModelID = org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry.getModelID(containerView);
> 		if (!CanvasEditPart.MODEL_ID.equals(containerModelID) && !"GMFGraph".equals(containerModelID)) { //$NON-NLS-1$
> 			return false;
364,365c317,324
< 		EClass domainElementMetaclass = domainElement.eClass();
< 		return getLinkWithClassVisualID(domainElement, domainElementMetaclass);
---
> 		int containerVisualID;
> 		if (CanvasEditPart.MODEL_ID.equals(containerModelID)) {
> 			containerVisualID = org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry.getVisualID(containerView);
> 		} else {
> 			if (containerView instanceof Diagram) {
> 				containerVisualID = CanvasEditPart.VISUAL_ID;
> 			} else {
> 				return false;
367,373d325
< 
< 	/**
< 	 * @generated
< 	 */
< 	public static int getLinkWithClassVisualID(EObject domainElement, EClass domainElementMetaclass) {
< 		{
< 			return getUnrecognizedLinkWithClassID(domainElement);
374a327,330
> 		switch (containerVisualID) {
> 		case CompartmentEditPart.VISUAL_ID:
> 			if (CompartmentNameEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
376,383c332
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isDiagramCanvas_1000(Canvas element) {
---
> 			if (CompartmentVisualFacetsEditPart.VISUAL_ID == nodeVisualID) {
386,394c335,338
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedDiagramID(EObject domainElement) {
< 		return -1;
---
> 			break;
> 		case NodeEditPart.VISUAL_ID:
> 			if (NodeNameEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
396,403c340
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeCompartment_2001(Compartment element) {
---
> 			if (NodeVisualFacetsEditPart.VISUAL_ID == nodeVisualID) {
406,413c343,345
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeNode_2002(Node element) {
---
> 			break;
> 		case ConnectionEditPart.VISUAL_ID:
> 			if (ConnectionNameEditPart.VISUAL_ID == nodeVisualID) {
416,423c348
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeConnection_2003(Connection element) {
---
> 			if (ConnectionVisualFacetsEditPart.VISUAL_ID == nodeVisualID) {
426,433c351,353
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeFigureGallery_2004(FigureGallery element) {
---
> 			break;
> 		case FigureGalleryEditPart.VISUAL_ID:
> 			if (FigureGalleryNameEditPart.VISUAL_ID == nodeVisualID) {
436,443c356
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeRectangle_3001(Rectangle element) {
---
> 			if (FigureGalleryFiguresEditPart.VISUAL_ID == nodeVisualID) {
446,453c359,361
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeRectangle_3002(Rectangle element) {
---
> 			break;
> 		case FigureDescriptorEditPart.VISUAL_ID:
> 			if (FigureDescriptorNameEditPart.VISUAL_ID == nodeVisualID) {
456,463c364
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeEllipse_3003(Ellipse element) {
---
> 			if (RectangleEditPart.VISUAL_ID == nodeVisualID) {
466,473c367
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeRoundedRectangle_3004(RoundedRectangle element) {
---
> 			if (Ellipse2EditPart.VISUAL_ID == nodeVisualID) {
476,483c370
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodePolyline_3005(Polyline element) {
---
> 			if (RoundedRectangle2EditPart.VISUAL_ID == nodeVisualID) {
486,493c373
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeEllipse_3006(Ellipse element) {
---
> 			if (Polyline2EditPart.VISUAL_ID == nodeVisualID) {
496,503c376,378
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodeRoundedRectangle_3007(RoundedRectangle element) {
---
> 			break;
> 		case RectangleEditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
506,513c381
< 
< 	/**
< 	 * User can change implementation of this method to check some additional 
< 	 * conditions here.
< 	 *
< 	 * @generated
< 	 */
< 	private static boolean isNodePolyline_3008(Polyline element) {
---
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
516,524c384,385
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedCompartment_2001ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
526,534c387,388
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedNode_2002ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
536,544c390,393
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedConnection_2003ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			break;
> 		case Rectangle2EditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
546,554c395,396
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedFigureGallery_2004ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
556,564c398,399
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedRectangle_3001ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
566,574c401,402
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedRectangle_3002ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
576,584c404,407
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedEllipse_3003ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			break;
> 		case EllipseEditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
586,594c409,410
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedRoundedRectangle_3004ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
596,604c412,413
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedPolyline_3005ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
606,614c415,416
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedEllipse_3006ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
616,624c418,421
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedRoundedRectangle_3007ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			break;
> 		case RoundedRectangleEditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
626,634c423,424
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedPolyline_3008ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
636,644c426,427
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedCompartmentVisualFacets_7001ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
646,654c429,430
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedNodeVisualFacets_7002ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
656,664c432,535
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedConnectionVisualFacets_7003ChildNodeID(EObject domainElement, String semanticHint) {
< 		return -1;
---
> 			break;
> 		case Ellipse2EditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
> 		case RoundedRectangle2EditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
> 		case Rectangle3EditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
> 		case Ellipse3EditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
> 		case RoundedRectangle3EditPart.VISUAL_ID:
> 			if (Rectangle2EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (EllipseEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (RoundedRectangleEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (PolylineEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
> 		case FigureGalleryFiguresEditPart.VISUAL_ID:
> 			if (FigureDescriptorEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (Rectangle3EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (Ellipse3EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (RoundedRectangle3EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (Polyline3EditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
> 		case CanvasEditPart.VISUAL_ID:
> 			if (CompartmentEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (NodeEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (ConnectionEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			if (FigureGalleryEditPart.VISUAL_ID == nodeVisualID) {
> 				return true;
> 			}
> 			break;
> 		}
> 		return false;
668,670d538
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
673c541,542
< 	private static int getUnrecognizedFigureGalleryFigures_7004ChildNodeID(EObject domainElement, String semanticHint) {
---
> 	public static int getLinkWithClassVisualID(EObject domainElement) {
> 		if (domainElement == null) {
676,683c545,547
< 
< 	/**
< 	 * User can change implementation of this method to handle some specific
< 	 * situations not covered by default logic.
< 	 *
< 	 * @generated
< 	 */
< 	private static int getUnrecognizedCanvas_1000ChildNodeID(EObject domainElement, String semanticHint) {
---
> 		if (GMFGraphPackage.eINSTANCE.getChildAccess().isSuperTypeOf(domainElement.eClass())) {
> 			return ChildAccessEditPart.VISUAL_ID;
> 		}
693,694c557,558
< 	private static int getUnrecognizedLinkWithClassID(EObject domainElement) {
< 		return -1;
---
> 	private static boolean isDiagram(Canvas element) {
> 		return true;
695a560
> 
