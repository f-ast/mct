13a14
> import java.net.MalformedURLException;
19a21
> import org.eclipse.core.runtime.FileLocator;
30a33,36
> import org.eclipse.gmf.runtime.common.core.util.Trace;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
184d189
< //			String permissionStr = configElement.getAttribute(PERMISSION);
197,199d201
< 			String pluginId = configElement.getDeclaringExtension().getNamespace();
< 			Bundle bundle = Platform.getBundle(pluginId);
< 
201,207c203
< 			if (smallIconPath != null) {
< 				URL fullPathString =
< 					Platform.find(bundle, new Path(smallIconPath));
< 				if (fullPathString != null) {
< 					small_icon = ImageDescriptor.createFromURL(fullPathString);
< 				}
< 			}
---
>             small_icon = findIconImageDescriptor(configElement, smallIconPath);
210,216c206
< 			if (largeIconPath != null) {
< 				URL fullPathString =
< 					Platform.find(bundle, new Path(largeIconPath));
< 				if (fullPathString != null) {
< 					large_icon = ImageDescriptor.createFromURL(fullPathString);
< 				}
< 			}
---
>             large_icon = findIconImageDescriptor(configElement, largeIconPath);
228a219,249
>          * Finds the image descriptor that is associated with the icon path.
>          * @param configElement
>          * @param smallIconPath
>          * @return
>          */
>         private ImageDescriptor findIconImageDescriptor(IConfigurationElement configElement, String iconPath) {
>             String pluginId = configElement.getDeclaringExtension().getNamespaceIdentifier();
>             Bundle bundle = Platform.getBundle(pluginId);
>             try
>             {
>                 if (iconPath != null) {
>                 	URL fullPathString = FileLocator.find(bundle, new Path(iconPath), null);
>                     fullPathString = fullPathString != null ? fullPathString : new URL(iconPath);
>                     if (fullPathString != null) {
>                 		return ImageDescriptor.createFromURL(fullPathString);
>                 	}
>                 }
>             }
>             catch (MalformedURLException e)
>             {
>                 Trace.catching(DiagramUIPlugin.getInstance(),
>                     DiagramUIDebugOptions.EXCEPTIONS_CATCHING,
>                     DefaultPaletteProvider.class, e.getLocalizedMessage(), e); 
>                 Log.error(DiagramUIPlugin.getInstance(),
>                     DiagramUIStatusCodes.RESOURCE_FAILURE, e.getMessage(), e);
>             }
>             
>             return null;
>         }
> 
> 		/**
