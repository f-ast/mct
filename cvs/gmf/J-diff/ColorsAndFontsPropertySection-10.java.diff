27c27,28
< import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.ResourceManager;
---
> import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.DiagramUIPropertiesImages;
> import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.DiagramUIPropertiesMessages;
36a38
> import org.eclipse.jface.resource.ImageDescriptor;
70,71c72,73
< 	protected static final String FONT_COLOR_COMMAND_NAME = ResourceManager
< 		.getI18NString("FontColor.commandText") + StringStatics.SPACE //$NON-NLS-1$
---
> 	protected static final String FONT_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.
> 		FontColor_commandText + StringStatics.SPACE 
74,75c76,77
< 	protected static final String LINE_COLOR_COMMAND_NAME = ResourceManager
< 		.getI18NString("LineColor.commandText") + StringStatics.SPACE //$NON-NLS-1$
---
> 	protected static final String LINE_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.
> 		LineColor_commandText + StringStatics.SPACE 
79,80c81,82
< 	protected static final String FONT_COMMAND_NAME = ResourceManager
< 		.getI18NString("Font.commandText") + StringStatics.SPACE //$NON-NLS-1$
---
> 	protected static final String FONT_COMMAND_NAME = DiagramUIPropertiesMessages.
> 		Font_commandText + StringStatics.SPACE 
84,85c86,87
< 	static protected final String FILL_COLOR_COMMAND_NAME = ResourceManager
< 		.getI18NString("FillColor.commandText") + StringStatics.SPACE //$NON-NLS-1$
---
> 	static protected final String FILL_COLOR_COMMAND_NAME = DiagramUIPropertiesMessages.
> 		FillColor_commandText + StringStatics.SPACE 
88,96c90,91
< 	// image names
< 	protected static final String FILL_COLOR_IMAGE_NAME = "fill_color.gif"; //$NON-NLS-1$
< 
< 	protected static final String BOLD_IMAGE_NAME = "bold.gif"; //$NON-NLS-1$
< 
< 	protected static final String ITALIC_IMAGE_NAME = "italic.gif"; //$NON-NLS-1$
< 	
< 	protected static final String FONTS_AND_COLORS_LABEL = ResourceManager
< 		.getI18NString("FontAndColor.nameLabel"); //$NON-NLS-1$
---
> 	protected static final String FONTS_AND_COLORS_LABEL = DiagramUIPropertiesMessages.
> 		FontAndColor_nameLabel;
170,175d164
< 	private static final String FONT_COLOR_IMAGE_NAME = "font_color.gif"; //$NON-NLS-1$
< 
< 	private static final String LINE_COLOR_IMAGE_NAME = "line_color.gif"; //$NON-NLS-1$
< 
< 	
< 
280,281c269
< 		fontBoldButton.setImage(ResourceManager.getInstance().getImage(
< 			BOLD_IMAGE_NAME));
---
> 		fontBoldButton.setImage(DiagramUIPropertiesImages.get(DiagramUIPropertiesImages.IMG_BOLD));
285,286c273
< 		fontItalicButton.setImage(ResourceManager.getInstance().getImage(
< 			ITALIC_IMAGE_NAME));
---
> 		fontItalicButton.setImage(DiagramUIPropertiesImages.get(DiagramUIPropertiesImages.IMG_ITALIC));
305,306c292
< 		fontColorButton.setImage(ResourceManager.getInstance().getImage(
< 			FONT_COLOR_IMAGE_NAME));
---
> 		fontColorButton.setImage(DiagramUIPropertiesImages.get(DiagramUIPropertiesImages.IMG_FONT_COLOR));
318,319c304
< 		lineColorButton.setImage(ResourceManager.getInstance().getImage(
< 			LINE_COLOR_IMAGE_NAME));
---
> 		lineColorButton.setImage(DiagramUIPropertiesImages.get(DiagramUIPropertiesImages.IMG_LINE_COLOR));
329,330c314
< 		fillColorButton.setImage(ResourceManager.getInstance().getImage(
< 			FILL_COLOR_IMAGE_NAME));
---
> 		fillColorButton.setImage(DiagramUIPropertiesImages.get(DiagramUIPropertiesImages.IMG_FILL_COLOR));
363c347
< 			LINE_COLOR_COMMAND_NAME, LINE_COLOR_IMAGE_NAME);
---
> 			LINE_COLOR_COMMAND_NAME, DiagramUIPropertiesImages.DESC_LINE_COLOR);
375c359
< 			FONT_COLOR_COMMAND_NAME, FONT_COLOR_IMAGE_NAME);
---
> 			FONT_COLOR_COMMAND_NAME, DiagramUIPropertiesImages.DESC_FONT_COLOR);
393a378
> 	 * @deprecated Use {@link #changeColor(SelectionEvent, ToolItem, String, String, String, ImageDescriptor) instead and pass in the image descriptor itself.  To be removed on: 05/12/26
432c417
< 					ResourceManager.getInstance().getImage(imageName)
---
> 					DiagramUIPropertiesImages.get(imageName)
443a429,491
> 	 * @param event -
> 	 *            selection event
> 	 * @param button -
> 	 *            event source
> 	 * @param preferenceId -
> 	 *            id of the preference of the default color value for that
> 	 *            property
> 	 * @param propertyId -
> 	 *            id of the property
> 	 * @param commandName -
> 	 *            name of the command
> 	 * @param imageDescriptor -
> 	 *            the image to draw overlay on the button after the new
> 	 *            color is set
> 	 * @return - new RGB color, or null if none selected
> 	 */
> 	protected RGB changeColor(SelectionEvent event, ToolItem button,
> 			String preferenceId, final String propertyId, String commandName,
> 			ImageDescriptor imageDescriptor) {
> 
> 		ColorPalettePopup popup = new ColorPalettePopup(button.getParent()
> 			.getShell(), preferenceId, IDialogConstants.BUTTON_BAR_HEIGHT);
> 
> 		Rectangle r = button.getBounds();
> 		Point location = button.getParent().toDisplay(r.x, r.y);
> 		popup.open(new Point(location.x, location.y + r.height));
> 		if (popup.getSelectedColor() != null) {
> 			final RGB color = popup.getSelectedColor();
> 
> 			// Update model in response to user
> 
> 			if (color != null) {
> 
> 				List commands = new ArrayList();
> 				Iterator it = getInputIterator();
> 
> 				while (it.hasNext()) {
> 					final IGraphicalEditPart ep = (IGraphicalEditPart) it
> 						.next();
> 					commands.add(createCommand(commandName, ((View) ep
> 						.getModel()).eResource(), new Runnable() {
> 
> 						public void run() {
> 							ENamedElement element = (EStructuralFeature)MetaModelUtil.getElement(propertyId);
> 							if (element instanceof EStructuralFeature)
> 								ep.setStructuralFeatureValue((EStructuralFeature)MetaModelUtil.getElement(propertyId), FigureUtilities
> 									.RGBToInteger(color));
> 						}
> 					}));
> 				}
> 
> 				executeAsCompositeCommand(commandName, commands);
> 				Image overlyedImage = new ColorOverlayImageDescriptor(
> 					imageDescriptor.getImageData(), color).createImage();
> 				button.setImage(overlyedImage);
> 			}
> 
> 			return color;
> 		}
> 		return null;
> 
> 	}
> 	/**
555,556c603,604
< 		Image overlyedImage = new ColorOverlayImageDescriptor(ResourceManager
< 			.getInstance().getImage(FONT_COLOR_IMAGE_NAME).getImageData(),
---
> 		Image overlyedImage = new ColorOverlayImageDescriptor(
> 				DiagramUIPropertiesImages.DESC_FONT_COLOR.getImageData(),
560,561c608,609
< 		overlyedImage = new ColorOverlayImageDescriptor(ResourceManager
< 			.getInstance().getImage(LINE_COLOR_IMAGE_NAME).getImageData(),
---
> 		overlyedImage = new ColorOverlayImageDescriptor(
> 				DiagramUIPropertiesImages.DESC_LINE_COLOR.getImageData(),
