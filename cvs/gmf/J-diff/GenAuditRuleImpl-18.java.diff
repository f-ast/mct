14d13
< import org.eclipse.emf.ecore.util.EcoreUtil;
16d14
< import org.eclipse.gmf.codegen.gmfgen.GenAuditRoot;
17a16
> import org.eclipse.gmf.codegen.gmfgen.GenAuditRoot;
201,231d199
< 	public NotificationChain basicSetRoot(GenAuditRoot newRoot, NotificationChain msgs) {
< 		msgs = eBasicSetContainer((InternalEObject)newRoot, GMFGenPackage.GEN_AUDIT_RULE__ROOT, msgs);
< 		return msgs;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setRoot(GenAuditRoot newRoot) {
< 		if (newRoot != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.GEN_AUDIT_RULE__ROOT && newRoot != null)) {
< 			if (EcoreUtil.isAncestor(this, newRoot))
< 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
< 			NotificationChain msgs = null;
< 			if (eInternalContainer() != null)
< 				msgs = eBasicRemoveFromContainer(msgs);
< 			if (newRoot != null)
< 				msgs = ((InternalEObject)newRoot).eInverseAdd(this, GMFGenPackage.GEN_AUDIT_ROOT__RULES, GenAuditRoot.class, msgs);
< 			msgs = basicSetRoot(newRoot, msgs);
< 			if (msgs != null) msgs.dispatch();
< 		}
< 		else if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_AUDIT_RULE__ROOT, newRoot, newRoot));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
524c492
< 				return basicSetRoot((GenAuditRoot)otherEnd, msgs);
---
> 				return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_AUDIT_RULE__ROOT, msgs);
542c510
< 				return basicSetRoot(null, msgs);
---
> 				return eBasicSetContainer(null, GMFGenPackage.GEN_AUDIT_RULE__ROOT, msgs);
606,608d573
< 			case GMFGenPackage.GEN_AUDIT_RULE__ROOT:
< 				setRoot((GenAuditRoot)newValue);
< 				return;
642,644d606
< 			case GMFGenPackage.GEN_AUDIT_RULE__ROOT:
< 				setRoot((GenAuditRoot)null);
< 				return;
