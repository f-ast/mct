29a30,31
> import org.eclipse.emf.transaction.DemultiplexingListener;
> import org.eclipse.emf.transaction.NotificationFilter;
39d40
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
47,52d47
< import org.eclipse.gmf.runtime.emf.core.edit.DemuxingMListener;
< import org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener;
< import org.eclipse.gmf.runtime.emf.core.edit.MFilter;
< import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
< import org.eclipse.gmf.runtime.emf.core.edit.MUndoInterval;
< import org.eclipse.gmf.runtime.emf.core.exceptions.MSLActionAbandonedException;
71,72c66
< 	extends AbstractPropertySection
< 	implements IDemuxedMListener {
---
> 	extends AbstractPropertySection {
79c73,79
< 	protected DemuxingMListener eventListener = new DemuxingMListener(this);
---
> 	protected DemultiplexingListener eventListener = new DemultiplexingListener(getFilter()) {
> 
> 		protected void handleNotification(TransactionalEditingDomain domain,
> 				Notification notification) {
> 			update(notification, (EObject) notification.getNotifier());
> 		}
> 	};
101a102
>     private TransactionalEditingDomain editingDomain = null;
239,245c240,245
< 		executeAsReadAction(new MRunnable() {
< 
< 			public Object run() {
< 				code.run();
< 				return null;
< 			}
< 		});
---
> 		try {
> 			getEditingDomain().runExclusive(code);
> 		} catch (InterruptedException e) {
> 			Trace.catching(DiagramPropertiesPlugin.getDefault(),
> 				DiagramPropertiesDebugOptions.EXCEPTIONS_CATCHING, getClass(),
> 				"executeAsReadAction", e); //$NON-NLS-1$
247,256d246
< 	
< 	/**
< 	 * A utility method allows execute a piece of code wrapping it in the read
< 	 * call to the model.
< 	 * 
< 	 * @param code -
< 	 *            MRunnable code to execute
< 	 */
< 	protected Object executeAsReadAction(MRunnable code) {		
< 		return MEditingDomainGetter.getMEditingDomain(getEObjectList()).runAsRead(code);
314c304,306
< 		eventListener.stopListening();
---
>         if (editingDomain != null) {
>             editingDomain.removeResourceSetListener(getEventListener());
>         }
322c314,317
< 		eventListener.startListening();
---
>         editingDomain = getEditingDomain();
>         if (editingDomain != null) {
>             editingDomain.addResourceSetListener(getEventListener());
>         }
367,400c362,364
< 	public MFilter getFilter() {
< 		return MFilter.ELEMENT_MODIFIED_FILTER;
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleResourceLoadedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.resource.Resource)
< 	 */
< 	public void handleResourceLoadedEvent(Notification notification,
< 			Resource resource) {
< 		/* not implemented */
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleResourceUnloadedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.resource.Resource, org.eclipse.emf.ecore.EObject)
< 	 */
< 	public void handleResourceUnloadedEvent(Notification notification,
< 			Resource resource, EObject modelRoot) {
< 		/* not implemented */
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleResourceDirtiedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.resource.Resource)
< 	 */
< 	public void handleResourceDirtiedEvent(Notification notification,
< 			Resource resource) {
< 		/* not implemented */
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleResourceSavedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.resource.Resource)
< 	 */
< 	public void handleResourceSavedEvent(Notification notification,
< 			Resource resource) {
< 		/* not implemented */
---
> 	public NotificationFilter getFilter() {
> 		return NotificationFilter.createEventTypeFilter(Notification.SET).and(
>             NotificationFilter.createNotifierTypeFilter(EObject.class));
403,433d366
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleResourceImportedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.resource.Resource)
< 	 */
< 	public void handleResourceImportedEvent(Notification notification,
< 			Resource resource) {
< 		/* not implemented */
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleResourceExportedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.resource.Resource)
< 	 */
< 	public void handleResourceExportedEvent(Notification notification,
< 			Resource resource) {
< 		/* not implemented */
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleElementCreatedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
< 	 */
< 	public void handleElementCreatedEvent(Notification notification,
< 			EObject owner, EObject newElement) {
< 		/* not implemented */
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleElementDeletedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
< 	 */
< 	public void handleElementDeletedEvent(Notification notification,
< 			EObject owner, EObject oldElement) {
< 		/* not implemented */
< 	}
514,544d446
< 	 * Handle the action abandoned exception
< 	 * 
< 	 * @param exception
< 	 *            the action abandoned exception
< 	 */
< 	protected void handleException(MSLActionAbandonedException exception) {
< 		Trace.catching(DiagramPropertiesPlugin.getDefault(),
< 			DiagramPropertiesDebugOptions.EXCEPTIONS_CATCHING, getClass(),
< 			exception.getMessage(), exception);
< 		Log.warning(DiagramPropertiesPlugin.getDefault(),
< 			DiagramPropertiesStatusCodes.IGNORED_EXCEPTION_WARNING,
< 			exception.getMessage(), exception);
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleUndoIntervalClosedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.gmf.runtime.emf.core.edit.MUndoInterval)
< 	 */
< 	public void handleUndoIntervalClosedEvent(Notification notification,
< 			MUndoInterval undoInterval) {
< 		/* not implemented */
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#handleUndoIntervalsFlushedEvent(org.eclipse.emf.common.notify.Notification, org.eclipse.gmf.runtime.emf.core.edit.MUndoInterval)
< 	 */
< 	public void handleUndoIntervalsFlushedEvent(Notification notification,
< 			MUndoInterval undoInterval) {
< 		/* not implemented */
< 	}
< 
< 	/**
561c463
< 	protected DemuxingMListener getEventListener() {
---
> 	protected DemultiplexingListener getEventListener() {
611d512
< 
613d513
< 
615a516,517
>         } else if (!getEObjectList().isEmpty()) {
>             return TransactionUtil.getEditingDomain(getEObjectList().get(0));
617d518
< 
621d521
< 	
683a584
> 	
