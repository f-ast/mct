39,41d38
< import org.eclipse.gmf.gmfgraph.Layout;
< import org.eclipse.gmf.gmfgraph.LayoutData;
< import org.eclipse.gmf.gmfgraph.LineKind;
125c122
< 		final NotificationListener layoutListener = new NotificationListener() {
---
> 		final NotificationListener Layoutable_LayoutData_PropertiesListener = new NotificationListener() {
128,129c125
< 				Layout layout = (Layout) notification.getNotifier();
< 				layoutPropertyChanged(layout);
---
> 				layoutDataChanged(modelElement.getLayoutData());
132,133c128,129
< 		if (modelElement.getLayout() != null) {
< 			addListenerFilter("LayoutPropertiesListener", layoutListener, modelElement.getLayout());
---
> 		if (modelElement.getLayoutData() != null) {
> 			addListenerFilter("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData());
135c131
< 		addListenerFilter("ModelElementLayoutListener", new NotificationListener() {
---
> 		addListenerFilter("Layoutable_LayoutData_Listener", new NotificationListener() {
138,141c134,136
< 				Layout newLayout = (Layout) notification.getNewValue();
< 				removeListenerFilter("LayoutPropertiesListener");
< 				if (newLayout != null) {
< 					addListenerFilter("LayoutPropertiesListener", layoutListener, newLayout);
---
> 				removeListenerFilter("Layoutable_LayoutData_PropertiesListener");
> 				if (modelElement.getLayoutData() != null) {
> 					addListenerFilter("Layoutable_LayoutData_PropertiesListener", Layoutable_LayoutData_PropertiesListener, modelElement.getLayoutData());
143c138
< 				layoutChanged(newLayout, true);
---
> 				layoutDataChanged(modelElement.getLayoutData());
145c140
< 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_Layout());
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData());
147c142
< 		final NotificationListener layoutDataListener = new NotificationListener() {
---
> 		final NotificationListener Layoutable_Layout_PropertiesListener = new NotificationListener() {
150c145
< 				layoutDataPropertyChanged();
---
> 				layoutChanged(modelElement.getLayout());
153,154c148,149
< 		if (modelElement.getLayoutData() != null) {
< 			addListenerFilter("LayoutDataPropertiesListener", layoutDataListener, modelElement.getLayoutData());
---
> 		if (modelElement.getLayout() != null) {
> 			addListenerFilter("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout());
156c151
< 		addListenerFilter("ModelElementLayoutDataListener", new NotificationListener() {
---
> 		addListenerFilter("Layoutable_Layout_Listener", new NotificationListener() {
159,162c154,156
< 				LayoutData newLayoutData = (LayoutData) notification.getNewValue();
< 				removeListenerFilter("LayoutDataPropertiesListener");
< 				if (newLayoutData != null) {
< 					addListenerFilter("LayoutDataPropertiesListener", layoutDataListener, newLayoutData);
---
> 				removeListenerFilter("Layoutable_Layout_PropertiesListener");
> 				if (modelElement.getLayout() != null) {
> 					addListenerFilter("Layoutable_Layout_PropertiesListener", Layoutable_Layout_PropertiesListener, modelElement.getLayout());
164c158
< 				layoutDataChanged();
---
> 				layoutChanged(modelElement.getLayout());
166c160
< 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData());
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getLayoutable_Layout());
168c162
< 		addListenerFilter("ModelElementPropertiesListener", new NotificationListener() {
---
> 		addListenerFilter("Shape_Outline_Listener", new NotificationListener() {
171,185c165
< 				switch (notification.getFeatureID(Rectangle.class)) {
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__OUTLINE: {
< 					boolean value = modelElement.isOutline();
< 					myFigure.setOutline(value);
< 					break;
< 				}
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__FILL: {
< 					boolean value = modelElement.isFill();
< 					myFigure.setFill(value);
< 					break;
< 				}
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__LINE_WIDTH: {
< 					int value = modelElement.getLineWidth();
< 					myFigure.setLineWidth(value);
< 					break;
---
> 				myFigure.setOutline(modelElement.isOutline());
187,193c167,172
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__LINE_KIND: {
< 					LineKind value = modelElement.getLineKind();
< 					myFigure.setLineStyle("LINE_DASH".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DOT
< 							: "LINE_DASHDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT
< 									: "LINE_DASHDOTDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT
< 											: "LINE_CUSTOM".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
< 					break;
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_Outline());
> 
> 		addListenerFilter("Shape_Fill_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setFill(modelElement.isFill());
195,198c174,179
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__XOR_FILL: {
< 					boolean value = modelElement.isXorFill();
< 					myFigure.setFillXOR(value);
< 					break;
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_Fill());
> 
> 		addListenerFilter("Shape_LineWidth_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setLineWidth(modelElement.getLineWidth());
200,203c181,186
< 				case org.eclipse.gmf.gmfgraph.GMFGraphPackage.RECTANGLE__XOR_OUTLINE: {
< 					boolean value = modelElement.isXorOutline();
< 					myFigure.setOutlineXOR(value);
< 					break;
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_LineWidth());
> 
> 		addListenerFilter("Shape_LineKind_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
204a188,193
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_LineKind());
> 
> 		addListenerFilter("Shape_XorFill_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setFillXOR(modelElement.isXorFill());
206c195,200
< 				myFigure.repaint();
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_XorFill());
> 
> 		addListenerFilter("Shape_XorOutline_Listener", new NotificationListener() {
> 
> 			public void notifyChanged(Notification notification) {
> 				myFigure.setOutlineXOR(modelElement.isXorOutline());
208c202
< 		}, modelElement);
---
> 		}, modelElement, GMFGraphPackage.eINSTANCE.getShape_XorOutline());
468,469c462,468
< 				boolean value = modelElement.isOutline();
< 				myFigure.setOutline(value);
---
> 				layoutDataChanged(modelElement.getLayoutData());
> 			}
> 			{
> 				layoutChanged(modelElement.getLayout());
> 			}
> 			{
> 				myFigure.setOutline(modelElement.isOutline());
472,473c471
< 				boolean value = modelElement.isFill();
< 				myFigure.setFill(value);
---
> 				myFigure.setFill(modelElement.isFill());
476,477c474
< 				int value = modelElement.getLineWidth();
< 				myFigure.setLineWidth(value);
---
> 				myFigure.setLineWidth(modelElement.getLineWidth());
480,483c477
< 				LineKind value = modelElement.getLineKind();
< 				myFigure.setLineStyle("LINE_DASH".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASH : "LINE_DOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DOT
< 						: "LINE_DASHDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOT : "LINE_DASHDOTDOT".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_DASHDOTDOT
< 								: "LINE_CUSTOM".equals(value.getName()) ? org.eclipse.draw2d.Graphics.LINE_CUSTOM : org.eclipse.draw2d.Graphics.LINE_SOLID);
---
> 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
486,487c480
< 				boolean value = modelElement.isXorFill();
< 				myFigure.setFillXOR(value);
---
> 				myFigure.setFillXOR(modelElement.isXorFill());
490,491c483
< 				boolean value = modelElement.isXorOutline();
< 				myFigure.setOutlineXOR(value);
---
> 				myFigure.setOutlineXOR(modelElement.isXorOutline());
493d484
< 			layoutChanged(modelElement.getLayout(), false);
