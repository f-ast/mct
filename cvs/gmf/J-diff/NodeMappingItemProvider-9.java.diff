21d20
< import org.eclipse.emf.ecore.EStructuralFeature;
29,30d27
< import org.eclipse.emf.edit.provider.ViewerNotification;
< import org.eclipse.gmf.mappings.GMFMapFactory;
41c38
< 	extends MappingEntryItemProvider
---
> 	extends AbstractNodeMappingItemProvider
68,71d64
< 			addDiagramNodePropertyDescriptor(object);
< 			addDomainMetaElementPropertyDescriptor(object);
< 			addContainmentFeaturePropertyDescriptor(object);
< 			addEditFeaturePropertyDescriptor(object);
77,116d69
< 	 * This adds a property descriptor for the Diagram Node feature.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	protected void addDiagramNodePropertyDescriptor(Object object) {
< 		itemPropertyDescriptors.add
< 			(createItemPropertyDescriptor
< 				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
< 				 getResourceLocator(),
< 				 getString("_UI_AbstractNodeMapping_diagramNode_feature"),
< 				 getString("_UI_PropertyDescriptor_description", "_UI_AbstractNodeMapping_diagramNode_feature", "_UI_AbstractNodeMapping_type"),
< 				 GMFMapPackage.eINSTANCE.getAbstractNodeMapping_DiagramNode(),
< 				 true,
< 				 null,
< 				 null,
< 				 null));
< 	}
< 
< 	/**
< 	 * This adds a property descriptor for the Domain Meta Element feature.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	protected void addDomainMetaElementPropertyDescriptor(Object object) {
< 		itemPropertyDescriptors.add
< 			(createItemPropertyDescriptor
< 				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
< 				 getResourceLocator(),
< 				 getString("_UI_AbstractNodeMapping_domainMetaElement_feature"),
< 				 getString("_UI_PropertyDescriptor_description", "_UI_AbstractNodeMapping_domainMetaElement_feature", "_UI_AbstractNodeMapping_type"),
< 				 GMFMapPackage.eINSTANCE.getAbstractNodeMapping_DomainMetaElement(),
< 				 true,
< 				 null,
< 				 null,
< 				 null));
< 	}
< 
< 	/**
187,216d139
< 	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
< 	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
< 	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public Collection getChildrenFeatures(Object object) {
< 		if (childrenFeatures == null) {
< 			super.getChildrenFeatures(object);
< 			childrenFeatures.add(GMFMapPackage.eINSTANCE.getAbstractNodeMapping_DomainSpecialization());
< 			childrenFeatures.add(GMFMapPackage.eINSTANCE.getAbstractNodeMapping_DomainInitializer());
< 			childrenFeatures.add(GMFMapPackage.eINSTANCE.getAbstractNodeMapping_ChildMappings());
< 		}
< 		return childrenFeatures;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	protected EStructuralFeature getChildFeature(Object object, Object child) {
< 		// Check the type of the specified child object and return the proper feature to use for
< 		// adding (see {@link AddCommand}) it as a child.
< 
< 		return super.getChildFeature(object, child);
< 	}
< 
< 	/**
245,252d167
< 
< 		switch (notification.getFeatureID(NodeMapping.class)) {
< 			case GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION:
< 			case GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER:
< 			case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS:
< 				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
< 				return;
< 		}
265,279d179
< 
< 		newChildDescriptors.add
< 			(createChildParameter
< 				(GMFMapPackage.eINSTANCE.getAbstractNodeMapping_DomainSpecialization(),
< 				 GMFMapFactory.eINSTANCE.createConstraint()));
< 
< 		newChildDescriptors.add
< 			(createChildParameter
< 				(GMFMapPackage.eINSTANCE.getAbstractNodeMapping_DomainInitializer(),
< 				 GMFMapFactory.eINSTANCE.createFeatureSeqInitializer()));
< 
< 		newChildDescriptors.add
< 			(createChildParameter
< 				(GMFMapPackage.eINSTANCE.getAbstractNodeMapping_ChildMappings(),
< 				 GMFMapFactory.eINSTANCE.createChildNodeMapping()));
