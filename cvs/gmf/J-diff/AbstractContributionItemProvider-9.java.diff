2c2
<  * Copyright (c) 2002, 2005 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
24a25
> import org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler;
35a37
> import org.eclipse.gmf.runtime.common.ui.util.IPartSelector;
246c248,249
< 							partDescriptor),
---
> 							partDescriptor, 
> 							item),
255c258,259
< 						partDescriptor),
---
> 						partDescriptor, 
> 						item),
375c379,380
< 						partDescriptor),
---
> 						partDescriptor,
> 						item),
802a808
> 		private final IPartSelector partSelector;
808a815
>          * @param partSelector selects parts that match this contribution item
812c819,821
< 			IWorkbenchPartDescriptor partDescriptor) {
---
> 			IWorkbenchPartDescriptor partDescriptor,
> 			IPartSelector partSelector) {
> 			
814a824
> 			this.partSelector = partSelector;
820,821c830,837
< 				if (action != null)
< 					return new PluginActionContributionItem(action);
---
> 				if (action != null) {
> 					PluginActionContributionItem item = new PluginActionContributionItem(action);
> 					// set the part selector to minimize action refresh on parts that are not relevant
> 					if (partSelector != null) {
> 						item.setPartSelector(partSelector);
> 					}
> 					return item;
> 				}
1256a1273,1290
> 		
> 		/**
> 		 * Sets the part selector for this action. The part selector is used by
> 		 * the <code>AbstractActionHandler</code> to determine whether or not
> 		 * the action is applicable to a given selected part. If the part is not
> 		 * applicable, the action will not be refreshed when selection changes
> 		 * in the part.
> 		 * 
> 		 * @param partSelector
> 		 *            the part selector
> 		 */
> 		public void setPartSelector(IPartSelector partSelector) {
> 			IAction action = getAction();
> 			
> 			if (action instanceof AbstractActionHandler) {
> 				((AbstractActionHandler) action).setPartSelector(partSelector);
> 			}
> 		}
