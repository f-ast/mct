46c46
< public class RoutingStyleImpl extends NotationObjectImpl implements RoutingStyle {
---
> public class RoutingStyleImpl extends NotationEObjectImpl implements RoutingStyle {
58c58,85
< 	 * The cached value of the '{@link #getRouting() <em>Routing</em>}' attribute.
---
> 	 * The offset of the flags representing the value of the '{@link #getRouting() <em>Routing</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ROUTING_EFLAG_OFFSET = 8;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getRouting() <em>Routing</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ROUTING_EFLAG_DEFAULT = Routing.VALUES.indexOf(ROUTING_EDEFAULT) << ROUTING_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link Routing Routing}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final Routing[] ROUTING_EFLAG_VALUES = (Routing[])Routing.VALUES.toArray(new Routing[Routing.VALUES.size()]);
> 
> 				/**
> 	 * The flags representing the value of the '{@link #getRouting() <em>Routing</em>}' attribute.
65c92
< 	protected Routing routing = ROUTING_EDEFAULT;
---
> 	protected static final int ROUTING_EFLAG = 0x3 << ROUTING_EFLAG_OFFSET;
78c105,132
< 	 * The cached value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
---
> 	 * The offset of the flags representing the value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int SMOOTHNESS_EFLAG_OFFSET = 10;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int SMOOTHNESS_EFLAG_DEFAULT = Smoothness.VALUES.indexOf(SMOOTHNESS_EDEFAULT) << SMOOTHNESS_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link Smoothness Smoothness}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final Smoothness[] SMOOTHNESS_EFLAG_VALUES = (Smoothness[])Smoothness.VALUES.toArray(new Smoothness[Smoothness.VALUES.size()]);
> 
> 				/**
> 	 * The flags representing the value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
85c139
< 	protected Smoothness smoothness = SMOOTHNESS_EDEFAULT;
---
> 	protected static final int SMOOTHNESS_EFLAG = 0x3 << SMOOTHNESS_EFLAG_OFFSET;
105c159
< 	protected static final int AVOID_OBSTRUCTIONS_EFLAG = 1 << 8;
---
> 	protected static final int AVOID_OBSTRUCTIONS_EFLAG = 1 << 12;
125c179
< 	protected static final int CLOSEST_DISTANCE_EFLAG = 1 << 9;
---
> 	protected static final int CLOSEST_DISTANCE_EFLAG = 1 << 13;
138c192,219
< 	 * The cached value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
---
> 	 * The offset of the flags representing the value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_STATUS_EFLAG_OFFSET = 14;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_STATUS_EFLAG_DEFAULT = JumpLinkStatus.VALUES.indexOf(JUMP_LINK_STATUS_EDEFAULT) << JUMP_LINK_STATUS_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link JumpLinkStatus Jump Link Status}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final JumpLinkStatus[] JUMP_LINK_STATUS_EFLAG_VALUES = (JumpLinkStatus[])JumpLinkStatus.VALUES.toArray(new JumpLinkStatus[JumpLinkStatus.VALUES.size()]);
> 
> 				/**
> 	 * The flags representing the value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
145c226
< 	protected JumpLinkStatus jumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
---
> 	protected static final int JUMP_LINK_STATUS_EFLAG = 0x3 << JUMP_LINK_STATUS_EFLAG_OFFSET;
158c239,266
< 	 * The cached value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
---
> 	 * The offset of the flags representing the value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_TYPE_EFLAG_OFFSET = 16;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_TYPE_EFLAG_DEFAULT = JumpLinkType.VALUES.indexOf(JUMP_LINK_TYPE_EDEFAULT) << JUMP_LINK_TYPE_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link JumpLinkType Jump Link Type}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final JumpLinkType[] JUMP_LINK_TYPE_EFLAG_VALUES = (JumpLinkType[])JumpLinkType.VALUES.toArray(new JumpLinkType[JumpLinkType.VALUES.size()]);
> 
> 				/**
> 	 * The flags representing the value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
165c273
< 	protected JumpLinkType jumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
---
> 	protected static final int JUMP_LINK_TYPE_EFLAG = 0x3 << JUMP_LINK_TYPE_EFLAG_OFFSET;
185c293
< 	protected static final int JUMP_LINKS_REVERSE_EFLAG = 1 << 10;
---
> 	protected static final int JUMP_LINKS_REVERSE_EFLAG = 1 << 18;
211c319
< 		return routing;
---
> 		return ROUTING_EFLAG_VALUES[(eFlags & ROUTING_EFLAG) >>> ROUTING_EFLAG_OFFSET];
220,221c328,330
< 		Routing oldRouting = routing;
< 		routing = newRouting == null ? ROUTING_EDEFAULT : newRouting;
---
> 		Routing oldRouting = ROUTING_EFLAG_VALUES[(eFlags & ROUTING_EFLAG) >>> ROUTING_EFLAG_OFFSET];
> 		if (newRouting == null) newRouting = ROUTING_EDEFAULT;
> 		eFlags = eFlags & ~ROUTING_EFLAG | Routing.VALUES.indexOf(newRouting) << ROUTING_EFLAG_OFFSET;
223c332
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__ROUTING, oldRouting, routing));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__ROUTING, oldRouting, newRouting));
232c341
< 		return smoothness;
---
> 		return SMOOTHNESS_EFLAG_VALUES[(eFlags & SMOOTHNESS_EFLAG) >>> SMOOTHNESS_EFLAG_OFFSET];
241,242c350,352
< 		Smoothness oldSmoothness = smoothness;
< 		smoothness = newSmoothness == null ? SMOOTHNESS_EDEFAULT : newSmoothness;
---
> 		Smoothness oldSmoothness = SMOOTHNESS_EFLAG_VALUES[(eFlags & SMOOTHNESS_EFLAG) >>> SMOOTHNESS_EFLAG_OFFSET];
> 		if (newSmoothness == null) newSmoothness = SMOOTHNESS_EDEFAULT;
> 		eFlags = eFlags & ~SMOOTHNESS_EFLAG | Smoothness.VALUES.indexOf(newSmoothness) << SMOOTHNESS_EFLAG_OFFSET;
244c354
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__SMOOTHNESS, oldSmoothness, smoothness));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__SMOOTHNESS, oldSmoothness, newSmoothness));
295c405
< 		return jumpLinkStatus;
---
> 		return JUMP_LINK_STATUS_EFLAG_VALUES[(eFlags & JUMP_LINK_STATUS_EFLAG) >>> JUMP_LINK_STATUS_EFLAG_OFFSET];
304,305c414,416
< 		JumpLinkStatus oldJumpLinkStatus = jumpLinkStatus;
< 		jumpLinkStatus = newJumpLinkStatus == null ? JUMP_LINK_STATUS_EDEFAULT : newJumpLinkStatus;
---
> 		JumpLinkStatus oldJumpLinkStatus = JUMP_LINK_STATUS_EFLAG_VALUES[(eFlags & JUMP_LINK_STATUS_EFLAG) >>> JUMP_LINK_STATUS_EFLAG_OFFSET];
> 		if (newJumpLinkStatus == null) newJumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
> 		eFlags = eFlags & ~JUMP_LINK_STATUS_EFLAG | JumpLinkStatus.VALUES.indexOf(newJumpLinkStatus) << JUMP_LINK_STATUS_EFLAG_OFFSET;
307c418
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_STATUS, oldJumpLinkStatus, jumpLinkStatus));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_STATUS, oldJumpLinkStatus, newJumpLinkStatus));
316c427
< 		return jumpLinkType;
---
> 		return JUMP_LINK_TYPE_EFLAG_VALUES[(eFlags & JUMP_LINK_TYPE_EFLAG) >>> JUMP_LINK_TYPE_EFLAG_OFFSET];
325,326c436,438
< 		JumpLinkType oldJumpLinkType = jumpLinkType;
< 		jumpLinkType = newJumpLinkType == null ? JUMP_LINK_TYPE_EDEFAULT : newJumpLinkType;
---
> 		JumpLinkType oldJumpLinkType = JUMP_LINK_TYPE_EFLAG_VALUES[(eFlags & JUMP_LINK_TYPE_EFLAG) >>> JUMP_LINK_TYPE_EFLAG_OFFSET];
> 		if (newJumpLinkType == null) newJumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
> 		eFlags = eFlags & ~JUMP_LINK_TYPE_EFLAG | JumpLinkType.VALUES.indexOf(newJumpLinkType) << JUMP_LINK_TYPE_EFLAG_OFFSET;
328c440
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_TYPE, oldJumpLinkType, jumpLinkType));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_TYPE, oldJumpLinkType, newJumpLinkType));
359,360d470
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				return getUUID();
386,388d495
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				setUUID((byte[])newValue);
< 				return;
421,423d527
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				setUUID(UUID_EDEFAULT);
< 				return;
456,457d559
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
459c561
< 				return routing != ROUTING_EDEFAULT;
---
> 				return (eFlags & ROUTING_EFLAG) != ROUTING_EFLAG_DEFAULT;
461c563
< 				return smoothness != SMOOTHNESS_EDEFAULT;
---
> 				return (eFlags & SMOOTHNESS_EFLAG) != SMOOTHNESS_EFLAG_DEFAULT;
467c569
< 				return jumpLinkStatus != JUMP_LINK_STATUS_EDEFAULT;
---
> 				return (eFlags & JUMP_LINK_STATUS_EFLAG) != JUMP_LINK_STATUS_EFLAG_DEFAULT;
469c571
< 				return jumpLinkType != JUMP_LINK_TYPE_EDEFAULT;
---
> 				return (eFlags & JUMP_LINK_TYPE_EFLAG) != JUMP_LINK_TYPE_EFLAG_DEFAULT;
486c588
< 		result.append(routing);
---
> 		result.append(ROUTING_EFLAG_VALUES[(eFlags & ROUTING_EFLAG) >>> ROUTING_EFLAG_OFFSET]);
488c590
< 		result.append(smoothness);
---
> 		result.append(SMOOTHNESS_EFLAG_VALUES[(eFlags & SMOOTHNESS_EFLAG) >>> SMOOTHNESS_EFLAG_OFFSET]);
494c596
< 		result.append(jumpLinkStatus);
---
> 		result.append(JUMP_LINK_STATUS_EFLAG_VALUES[(eFlags & JUMP_LINK_STATUS_EFLAG) >>> JUMP_LINK_STATUS_EFLAG_OFFSET]);
496c598
< 		result.append(jumpLinkType);
---
> 		result.append(JUMP_LINK_TYPE_EFLAG_VALUES[(eFlags & JUMP_LINK_TYPE_EFLAG) >>> JUMP_LINK_TYPE_EFLAG_OFFSET]);
