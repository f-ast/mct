2c2
<  * Copyright (c) 2002, 2003 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
14d13
< import java.util.Collection;
15a15,17
> import java.util.List;
> 
> import org.eclipse.core.commands.ExecutionException;
19a22
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
23c26
< import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
---
> import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
33c36
< public class SetPropertyCommand extends AbstractModelCommand {
---
> public class SetPropertyCommand extends AbstractTransactionalCommand {
43a47
>      * @param editingDomain the editing domain
49,50c53,55
< 	public SetPropertyCommand(String label, IAdaptable viewAdapter, String propertyId, Object newValue) {
< 		super(label, null);
---
> 	public SetPropertyCommand(TransactionalEditingDomain editingDomain, String label,
>             IAdaptable viewAdapter, String propertyId, Object newValue) {
> 		super(editingDomain, label, null);
57a63
> 	 * @param editingDomain the editing domain
63,64c69,70
< 	public SetPropertyCommand(IAdaptable viewAdapter, String propertyId, String propertyName, Object newValue) {
< 		this(null, viewAdapter, propertyId, newValue);
---
> 	public SetPropertyCommand(TransactionalEditingDomain editingDomain, IAdaptable viewAdapter, String propertyId, String propertyName, Object newValue) {
> 		this(editingDomain, null, viewAdapter, propertyId, newValue);
68,71c74,75
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.ICommand#getAffectedObjects()
< 	 */
< 	public Collection getAffectedObjects() {
---
> 	public List getAffectedFiles() {
> 
75c79
< 				return getWorkspaceFilesFor(view);
---
> 				return getWorkspaceFiles(view);
77c81
< 		return super.getAffectedObjects();
---
> 		return super.getAffectedFiles();
89,92c93,96
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
< 	 */
< 	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
---
> 	protected CommandResult doExecuteWithResult(
>             IProgressMonitor progressMonitor, IAdaptable info)
>         throws ExecutionException {
>         
99c103
< 		return newOKCommandResult();
---
> 		return CommandResult.newOKCommandResult();
