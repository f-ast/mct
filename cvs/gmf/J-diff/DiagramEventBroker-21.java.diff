18a19
> import java.util.HashSet;
279a281
>         Set existingObjects = new HashSet();
285a288
>         boolean deleteElementCheckRequired = !deletedObjects.isEmpty();
292c295,304
<             	if (deletedObjects.contains(notifier)) {
---
>                 boolean deleted = false;
>                 if (deleteElementCheckRequired){
>                     deleted = !existingObjects.contains(notifier);
>                     if (deleted){
>                         deleted = isDeleted(deletedObjects, (EObject)notifier);
>                         if (!deleted)
>                             existingObjects.add(notifier);
>                     }
>                 }
>             	if (deleted) {
330a343,344
>         Set existingObjects = new HashSet();
>         boolean deleteElementCheckRequired = !deletedObjects.isEmpty();
338c352,361
<                 if (!customNotification && deletedObjects.contains(notifier)) {
---
>                 boolean deleted = false;
>                 if (deleteElementCheckRequired && !customNotification){
>                     deleted = !existingObjects.contains(notifier);
>                     if (deleted){
>                         deleted = isDeleted(deletedObjects, (EObject)notifier);
>                         if (!deleted)
>                             existingObjects.add(notifier);
>                     }
>                 }
>                 if (!customNotification && deleted) {
346a370,406
> 
>     /**
>      * decide if the passed object is deleted or not; the decision is done by 
>      * checking is the passed notifier or any of its ancestors exists in the passed
>      * deletedObjects Set, if it find the obnject to be deleted it will add it 
>      * to the deleted objects set.
>      * @param deletedObjects
>      * @param notifier
>      * @return
>      */
>     private boolean isDeleted(Set deletedObjects, EObject notifier) {
>         EObject object = notifier;
>         while (object!=null){
>             if (deletedObjects.contains(object)){
>                 if (object != notifier){
>                     //so we do not waste time on the second call
>                     addDeletedBranch(deletedObjects,notifier);
>                 }
>                 return true;
>             }
>             object = object.eContainer();
>         }
>         return false;
>     }
>     
>     private void addDeletedBranch(Set deletedObjects, EObject notifier) {
>         EObject object = notifier;
>         while (object != null){
>             if (!deletedObjects.add(object)){
>                 break;
>             }
>             object = object.eContainer();
>         }
>         
>     }
> 
> 
