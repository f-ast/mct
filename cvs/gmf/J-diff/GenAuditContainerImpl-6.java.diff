8a9
> import java.util.ArrayList;
30a32,34
> import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase;
> import org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderContainer;
> import org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider;
377a382,439
> 	 * @generated NOT
> 	 */	
> 	public List getAllContextSelectorsLocalClassNames() {
> 		HashSet classNames = new HashSet();
> 		EList allRules = getAllAuditRules();
> 		for (Iterator it = allRules.iterator(); it.hasNext();) {
> 			String nextClassName = ((GenAuditRule) it.next()).getContextSelectorLocalClassName();
> 			if(nextClassName != null) {
> 				classNames.add(nextClassName);
> 			}			
> 		}
> 		return new ArrayList(classNames);
> 	}
> 	
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public List getAllRequiredConstraintAdaptersLocalClassNames() {
> 		HashSet classNames = new HashSet();
> 		EList allRules = getAllAuditRules();
> 		for (Iterator it = allRules.iterator(); it.hasNext();) {
> 			GenAuditRule nextAudit = (GenAuditRule) it.next();
> 			if(nextAudit.requiresConstraintAdapter()) {
> 				String nextClassName = nextAudit.getConstraintAdapterLocalClassName();
> 				if(nextClassName != null) {
> 					classNames.add(nextClassName);
> 				}
> 			}
> 		}
> 		return new ArrayList(classNames);
> 	}
> 	
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */	
> 	public List getAllJavaLangAudits() {
> 		List audits = new ArrayList();
> 		if(getEditor() == null || getEditor().getExpressionProviders() == null) {
> 			return audits;
> 		}
> 		GenExpressionProviderContainer exprProviders = getEditor().getExpressionProviders();
> 		for (Iterator it = getAllAuditRules().iterator(); it.hasNext();) {
> 			GenAuditRule nextAudit = (GenAuditRule) it.next();
> 			GenExpressionProviderBase provider = exprProviders.getProvider(nextAudit.getRule());
> 			if(nextAudit.getRule() != null && provider instanceof GenJavaExpressionProvider) {
> 				audits.add(nextAudit);
> 			}
> 		}
> 		return audits;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
