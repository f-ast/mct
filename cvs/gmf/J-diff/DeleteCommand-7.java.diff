2c2
<  * Copyright (c) 2002, 2003 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
13a14,15
> import org.eclipse.core.commands.ExecutionException;
> import org.eclipse.core.runtime.IAdaptable;
14a17
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
18c21
< import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
---
> import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
26c29
< public class DeleteCommand extends AbstractModelCommand {
---
> public class DeleteCommand extends AbstractTransactionalCommand {
31a35,36
>      * @param editingDomain
>      *            the editing domain through which model changes are made
34,35c39,41
< 	public DeleteCommand(View view) {
< 		super(DiagramCoreMessages.DeleteCommand_Label, view);
---
> 	public DeleteCommand(TransactionalEditingDomain editingDomain, View view) {
> 		super(editingDomain, DiagramCoreMessages.DeleteCommand_Label,
>             getWorkspaceFiles(view));
48c54
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
---
> 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand2#doExecute(org.eclipse.core.runtime.IProgressMonitor)
50c56,59
< 	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
---
> 	protected CommandResult doExecuteWithResult(
>             IProgressMonitor progressMonitor, IAdaptable info)
>         throws ExecutionException {
>         
52c61
< 		return newOKCommandResult();
---
> 		return CommandResult.newOKCommandResult();
