11a12
> import org.eclipse.emf.ecore.EPackage;
12a14
> import org.eclipse.emf.ecore.plugin.EcorePlugin;
15,16d16
< import org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap;
< import org.eclipse.gmf.codegen.gmfgen.ColorAttributes;
19d18
< import org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap;
21a21
> import org.eclipse.gmf.codegen.gmfgen.FigureViewmap;
29a30
> import org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints;
33d33
< import org.eclipse.gmf.codegen.gmfgen.LinkDecoration;
39a40
> import org.eclipse.gmf.codegen.gmfgen.SnippetViewmap;
52a54,72
> 	 * Creates the default factory implementation.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public static GMFGenFactory init() {
> 		try {
> 			GMFGenFactory theGMFGenFactory = (GMFGenFactory)EPackage.Registry.INSTANCE.getEFactory("http://www.eclipse.org/gmf/2005/GenModel"); 
> 			if (theGMFGenFactory != null) {
> 				return theGMFGenFactory;
> 			}
> 		}
> 		catch (Exception exception) {
> 			EcorePlugin.INSTANCE.log(exception);
> 		}
> 		return new GMFGenFactoryImpl();
> 	}
> 
> 	/**
82,87c102,103
< 			case GMFGenPackage.BASIC_NODE_VIEWMAP: return createBasicNodeViewmap();
< 			case GMFGenPackage.DECORATED_CONNECTION_VIEWMAP: return createDecoratedConnectionViewmap();
< 			case GMFGenPackage.LINK_DECORATION: return createLinkDecoration();
< 			case GMFGenPackage.DIAGRAM_VIEWMAP: return createDiagramViewmap();
< 			case GMFGenPackage.COMPARTMENT_VIEWMAP: return createCompartmentViewmap();
< 			case GMFGenPackage.LABEL_VIEWMAP: return createLabelViewmap();
---
> 			case GMFGenPackage.FIGURE_VIEWMAP: return createFigureViewmap();
> 			case GMFGenPackage.SNIPPET_VIEWMAP: return createSnippetViewmap();
109,123c125,130
< 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND: {
< 				CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
< 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND: {
< 				CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
< 			case GMFGenPackage.LINK_LABEL_ALIGNMENT: {
< 				LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
---
> 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND:
> 				return createCompartmentPlacementKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND:
> 				return createCompartmentLayoutKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.LINK_LABEL_ALIGNMENT:
> 				return createLinkLabelAlignmentFromString(eDataType, initialValue);
139c146
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 				return convertCompartmentPlacementKindToString(eDataType, instanceValue);
141c148
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 				return convertCompartmentLayoutKindToString(eDataType, instanceValue);
143c150
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 				return convertLinkLabelAlignmentToString(eDataType, instanceValue);
286,288c293,295
< 	public BasicNodeViewmap createBasicNodeViewmap() {
< 		BasicNodeViewmapImpl basicNodeViewmap = new BasicNodeViewmapImpl();
< 		return basicNodeViewmap;
---
> 	public FigureViewmap createFigureViewmap() {
> 		FigureViewmapImpl figureViewmap = new FigureViewmapImpl();
> 		return figureViewmap;
296,298c303,305
< 	public DecoratedConnectionViewmap createDecoratedConnectionViewmap() {
< 		DecoratedConnectionViewmapImpl decoratedConnectionViewmap = new DecoratedConnectionViewmapImpl();
< 		return decoratedConnectionViewmap;
---
> 	public SnippetViewmap createSnippetViewmap() {
> 		SnippetViewmapImpl snippetViewmap = new SnippetViewmapImpl();
> 		return snippetViewmap;
306,308c313,315
< 	public LinkDecoration createLinkDecoration() {
< 		LinkDecorationImpl linkDecoration = new LinkDecorationImpl();
< 		return linkDecoration;
---
> 	public ValueExpression createValueExpression() {
> 		ValueExpressionImpl valueExpression = new ValueExpressionImpl();
> 		return valueExpression;
316,318c323,325
< 	public DiagramViewmap createDiagramViewmap() {
< 		DiagramViewmapImpl diagramViewmap = new DiagramViewmapImpl();
< 		return diagramViewmap;
---
> 	public ModelElementSelector createModelElementSelector() {
> 		ModelElementSelectorImpl modelElementSelector = new ModelElementSelectorImpl();
> 		return modelElementSelector;
326,328c333,335
< 	public CompartmentViewmap createCompartmentViewmap() {
< 		CompartmentViewmapImpl compartmentViewmap = new CompartmentViewmapImpl();
< 		return compartmentViewmap;
---
> 	public Palette createPalette() {
> 		PaletteImpl palette = new PaletteImpl();
> 		return palette;
336,338c343,345
< 	public LabelViewmap createLabelViewmap() {
< 		LabelViewmapImpl labelViewmap = new LabelViewmapImpl();
< 		return labelViewmap;
---
> 	public NodeEntry createNodeEntry() {
> 		NodeEntryImpl nodeEntry = new NodeEntryImpl();
> 		return nodeEntry;
346,348c353,355
< 	public ValueExpression createValueExpression() {
< 		ValueExpressionImpl valueExpression = new ValueExpressionImpl();
< 		return valueExpression;
---
> 	public LinkEntry createLinkEntry() {
> 		LinkEntryImpl linkEntry = new LinkEntryImpl();
> 		return linkEntry;
356,358c363,365
< 	public ModelElementSelector createModelElementSelector() {
< 		ModelElementSelectorImpl modelElementSelector = new ModelElementSelectorImpl();
< 		return modelElementSelector;
---
> 	public ToolGroup createToolGroup() {
> 		ToolGroupImpl toolGroup = new ToolGroupImpl();
> 		return toolGroup;
366,368c373,375
< 	public Palette createPalette() {
< 		PaletteImpl palette = new PaletteImpl();
< 		return palette;
---
> 	public GenFeatureSeqInitializer createGenFeatureSeqInitializer() {
> 		GenFeatureSeqInitializerImpl genFeatureSeqInitializer = new GenFeatureSeqInitializerImpl();
> 		return genFeatureSeqInitializer;
376,378c383,385
< 	public NodeEntry createNodeEntry() {
< 		NodeEntryImpl nodeEntry = new NodeEntryImpl();
< 		return nodeEntry;
---
> 	public GenFeatureValueSpec createGenFeatureValueSpec() {
> 		GenFeatureValueSpecImpl genFeatureValueSpec = new GenFeatureValueSpecImpl();
> 		return genFeatureValueSpec;
386,388c393,395
< 	public LinkEntry createLinkEntry() {
< 		LinkEntryImpl linkEntry = new LinkEntryImpl();
< 		return linkEntry;
---
> 	public GenLinkConstraints createGenLinkConstraints() {
> 		GenLinkConstraintsImpl genLinkConstraints = new GenLinkConstraintsImpl();
> 		return genLinkConstraints;
396,398c403,406
< 	public ToolGroup createToolGroup() {
< 		ToolGroupImpl toolGroup = new ToolGroupImpl();
< 		return toolGroup;
---
> 	public CompartmentPlacementKind createCompartmentPlacementKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
406,408c414,415
< 	public GenFeatureSeqInitializer createGenFeatureSeqInitializer() {
< 		GenFeatureSeqInitializerImpl genFeatureSeqInitializer = new GenFeatureSeqInitializerImpl();
< 		return genFeatureSeqInitializer;
---
> 	public String convertCompartmentPlacementKindToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
416,418c423,426
< 	public GenFeatureValueSpec createGenFeatureValueSpec() {
< 		GenFeatureValueSpecImpl genFeatureValueSpec = new GenFeatureValueSpecImpl();
< 		return genFeatureValueSpec;
---
> 	public CompartmentLayoutKind createCompartmentLayoutKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
426,428c434,455
< 	public GenLinkConstraints createGenLinkConstraints() {
< 		GenLinkConstraintsImpl genLinkConstraints = new GenLinkConstraintsImpl();
< 		return genLinkConstraints;
---
> 	public String convertCompartmentLayoutKindToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public LinkLabelAlignment createLinkLabelAlignmentFromString(EDataType eDataType, String initialValue) {
> 		LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertLinkLabelAlignmentToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
