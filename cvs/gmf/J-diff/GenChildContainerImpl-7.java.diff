8a9,10
> import java.util.Collection;
> 
10d11
< import org.eclipse.emf.common.notify.Notification;
11a13,14
> import org.eclipse.emf.common.util.EList;
> 
15,16c18,20
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
< import org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind;
---
> import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
> import org.eclipse.emf.ecore.util.InternalEList;
> 
19,20c23
< import org.eclipse.gmf.codegen.gmfgen.GenDiagram;
< import org.eclipse.gmf.codegen.gmfgen.GenNode;
---
> import org.eclipse.gmf.codegen.gmfgen.GenChildNode;
31,37c34
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#getGroupID <em>Group ID</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#getTitleKey <em>Title Key</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#isCanCollapse <em>Can Collapse</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#isHideIfEmpty <em>Hide If Empty</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#isNeedsTitle <em>Needs Title</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#getLayoutKind <em>Layout Kind</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#getParentNode <em>Parent Node</em>}</li>
---
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#getChildNodes <em>Child Nodes</em>}</li>
43,63c40
< public class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
< 	/**
< 	 * The default value of the '{@link #getGroupID() <em>Group ID</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getGroupID()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final String GROUP_ID_EDEFAULT = null;
< 
< 	/**
< 	 * The cached value of the '{@link #getGroupID() <em>Group ID</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getGroupID()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected String groupID = GROUP_ID_EDEFAULT;
< 
---
> public abstract class GenChildContainerImpl extends GenCommonBaseImpl implements GenChildContainer {
65c42
< 	 * The default value of the '{@link #getTitleKey() <em>Title Key</em>}' attribute.
---
> 	 * The cached value of the '{@link #getChildNodes() <em>Child Nodes</em>}' containment reference list.
68c45
< 	 * @see #getTitleKey()
---
> 	 * @see #getChildNodes()
72,162c49
< 	protected static final String TITLE_KEY_EDEFAULT = null;
< 
< 	/**
< 	 * The cached value of the '{@link #getTitleKey() <em>Title Key</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getTitleKey()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected String titleKey = TITLE_KEY_EDEFAULT;
< 
< 	/**
< 	 * The default value of the '{@link #isCanCollapse() <em>Can Collapse</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isCanCollapse()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final boolean CAN_COLLAPSE_EDEFAULT = true;
< 
< 	/**
< 	 * The cached value of the '{@link #isCanCollapse() <em>Can Collapse</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isCanCollapse()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected boolean canCollapse = CAN_COLLAPSE_EDEFAULT;
< 
< 	/**
< 	 * The default value of the '{@link #isHideIfEmpty() <em>Hide If Empty</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isHideIfEmpty()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final boolean HIDE_IF_EMPTY_EDEFAULT = true;
< 
< 	/**
< 	 * The cached value of the '{@link #isHideIfEmpty() <em>Hide If Empty</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isHideIfEmpty()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected boolean hideIfEmpty = HIDE_IF_EMPTY_EDEFAULT;
< 
< 	/**
< 	 * The default value of the '{@link #isNeedsTitle() <em>Needs Title</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isNeedsTitle()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final boolean NEEDS_TITLE_EDEFAULT = true;
< 
< 	/**
< 	 * The cached value of the '{@link #isNeedsTitle() <em>Needs Title</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isNeedsTitle()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected boolean needsTitle = NEEDS_TITLE_EDEFAULT;
< 
< 	/**
< 	 * The default value of the '{@link #getLayoutKind() <em>Layout Kind</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getLayoutKind()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final CompartmentLayoutKind LAYOUT_KIND_EDEFAULT = CompartmentLayoutKind.BORDER_LITERAL;
< 
< 	/**
< 	 * The cached value of the '{@link #getLayoutKind() <em>Layout Kind</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getLayoutKind()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected CompartmentLayoutKind layoutKind = LAYOUT_KIND_EDEFAULT;
---
> 	protected EList childNodes = null;
187,221c74,76
< 	public String getGroupID() {
< 		return groupID;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setGroupID(String newGroupID) {
< 		String oldGroupID = groupID;
< 		groupID = newGroupID;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID, oldGroupID, groupID));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String getTitleKey() {
< 		return titleKey;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setTitleKey(String newTitleKey) {
< 		String oldTitleKey = titleKey;
< 		titleKey = newTitleKey;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY, oldTitleKey, titleKey));
---
> 	public EList getChildNodes() {
> 		if (childNodes == null) {
> 			childNodes = new EObjectContainmentWithInverseEList(GenChildNode.class, this, GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES, GMFGenPackage.GEN_CHILD_NODE__CONTAINER);
223,315c78
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public boolean isCanCollapse() {
< 		return canCollapse;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setCanCollapse(boolean newCanCollapse) {
< 		boolean oldCanCollapse = canCollapse;
< 		canCollapse = newCanCollapse;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE, oldCanCollapse, canCollapse));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public boolean isHideIfEmpty() {
< 		return hideIfEmpty;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setHideIfEmpty(boolean newHideIfEmpty) {
< 		boolean oldHideIfEmpty = hideIfEmpty;
< 		hideIfEmpty = newHideIfEmpty;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY, oldHideIfEmpty, hideIfEmpty));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public boolean isNeedsTitle() {
< 		return needsTitle;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setNeedsTitle(boolean newNeedsTitle) {
< 		boolean oldNeedsTitle = needsTitle;
< 		needsTitle = newNeedsTitle;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE, oldNeedsTitle, needsTitle));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public CompartmentLayoutKind getLayoutKind() {
< 		return layoutKind;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setLayoutKind(CompartmentLayoutKind newLayoutKind) {
< 		CompartmentLayoutKind oldLayoutKind = layoutKind;
< 		layoutKind = newLayoutKind == null ? LAYOUT_KIND_EDEFAULT : newLayoutKind;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND, oldLayoutKind, layoutKind));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public GenNode getParentNode() {
< 		if (eContainerFeatureID != GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE) return null;
< 		return (GenNode)eContainer;
---
> 		return childNodes;
326,329c89,90
< 				case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE:
< 					if (eContainer != null)
< 						msgs = eBasicRemoveFromContainer(msgs);
< 					return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE, msgs);
---
> 				case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES:
> 					return ((InternalEList)getChildNodes()).basicAdd(otherEnd, msgs);
349,350c110,111
< 				case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE:
< 					return eBasicSetContainer(null, GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE, msgs);
---
> 				case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES:
> 					return ((InternalEList)getChildNodes()).basicRemove(otherEnd, msgs);
363,379d123
< 	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
< 		if (eContainerFeatureID >= 0) {
< 			switch (eContainerFeatureID) {
< 				case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE:
< 					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_NODE__CHILD_CONTAINERS, GenNode.class, msgs);
< 				default:
< 					return eDynamicBasicRemoveFromContainer(msgs);
< 			}
< 		}
< 		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
393,406c137,138
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID:
< 				return getGroupID();
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY:
< 				return getTitleKey();
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE:
< 				return isCanCollapse() ? Boolean.TRUE : Boolean.FALSE;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY:
< 				return isHideIfEmpty() ? Boolean.TRUE : Boolean.FALSE;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE:
< 				return isNeedsTitle() ? Boolean.TRUE : Boolean.FALSE;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND:
< 				return getLayoutKind();
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE:
< 				return getParentNode();
---
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES:
> 				return getChildNodes();
433,449c165,167
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID:
< 				setGroupID((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY:
< 				setTitleKey((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE:
< 				setCanCollapse(((Boolean)newValue).booleanValue());
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY:
< 				setHideIfEmpty(((Boolean)newValue).booleanValue());
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE:
< 				setNeedsTitle(((Boolean)newValue).booleanValue());
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND:
< 				setLayoutKind((CompartmentLayoutKind)newValue);
---
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES:
> 				getChildNodes().clear();
> 				getChildNodes().addAll((Collection)newValue);
477,493c195,196
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID:
< 				setGroupID(GROUP_ID_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY:
< 				setTitleKey(TITLE_KEY_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE:
< 				setCanCollapse(CAN_COLLAPSE_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY:
< 				setHideIfEmpty(HIDE_IF_EMPTY_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE:
< 				setNeedsTitle(NEEDS_TITLE_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND:
< 				setLayoutKind(LAYOUT_KIND_EDEFAULT);
---
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES:
> 				getChildNodes().clear();
516,529c219,220
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__GROUP_ID:
< 				return GROUP_ID_EDEFAULT == null ? groupID != null : !GROUP_ID_EDEFAULT.equals(groupID);
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__TITLE_KEY:
< 				return TITLE_KEY_EDEFAULT == null ? titleKey != null : !TITLE_KEY_EDEFAULT.equals(titleKey);
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__CAN_COLLAPSE:
< 				return canCollapse != CAN_COLLAPSE_EDEFAULT;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__HIDE_IF_EMPTY:
< 				return hideIfEmpty != HIDE_IF_EMPTY_EDEFAULT;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__NEEDS_TITLE:
< 				return needsTitle != NEEDS_TITLE_EDEFAULT;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__LAYOUT_KIND:
< 				return layoutKind != LAYOUT_KIND_EDEFAULT;
< 			case GMFGenPackage.GEN_CHILD_CONTAINER__PARENT_NODE:
< 				return getParentNode() != null;
---
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES:
> 				return childNodes != null && !childNodes.isEmpty();
534,578d224
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String toString() {
< 		if (eIsProxy()) return super.toString();
< 
< 		StringBuffer result = new StringBuffer(super.toString());
< 		result.append(" (groupID: ");
< 		result.append(groupID);
< 		result.append(", titleKey: ");
< 		result.append(titleKey);
< 		result.append(", canCollapse: ");
< 		result.append(canCollapse);
< 		result.append(", hideIfEmpty: ");
< 		result.append(hideIfEmpty);
< 		result.append(", needsTitle: ");
< 		result.append(needsTitle);
< 		result.append(", layoutKind: ");
< 		result.append(layoutKind);
< 		result.append(')');
< 		return result.toString();
< 	}
< 
< 	public String getClassNamePrefix() {
< 		return getGroupID() == null ? "GenContainer$" + hashCode() : getGroupID();
< 	}
< 
< 	public String getClassNameSuffux() {
< 		return "Container";
< 	}
< 
< 	public GenDiagram getDiagram() {
< 		GenNode parentNode = getParentNode();
< 		if (parentNode == null) {
< 			return null;
< 		}
< 		return parentNode.getDiagram();
< 	}
< 	
< 	public String getUniqueIdentifier() {
< 		return getGroupID() + "_" + getVisualID();
< 	}
< 
