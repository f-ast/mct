2c2
<  * Copyright (c) 2006 IBM Corporation and others.
---
>  * Copyright (c) 2006, 2008 IBM Corporation and others.
20a21
> import java.io.OutputStream;
69,70d69
<         monitor.worked(1);
< 
72a72,73
>             exportToOutputStream(os, image, imageFormat, monitor);
>             os.close();
73a75,84
>             refreshLocal(destination);
>         } catch (IOException ex) {
>             Log.error(Draw2dRenderPlugin.getInstance(), IStatus.ERROR, ex
>                 .getMessage(), ex);
>             IStatus status =
>                 new Status(IStatus.ERROR, "exportToFile", IStatus.OK, //$NON-NLS-1$
>                     ex.getMessage(), null);
>             throw new CoreException(status);
>         }
>     }
74a86,97
>     /**
>      * Allows export of an image to specific supported image file formats.
> 	 *
>      * @param stream stream to write the data to
>      * @param image the image
>      * @param imageFormat image format
>      * @param monitor progress monitor
>      * @throws CoreException
>      */
>     public static void exportToOutputStream(OutputStream stream, BufferedImage image,
> 			String imageFormat, IProgressMonitor monitor) throws CoreException {
> 		monitor.worked(1);
81c104,105
<                     newImg = new BufferedImage(image.getWidth(), image.getHeight(), BufferedImage.TYPE_INT_RGB);
---
> 				newImg = new BufferedImage(image.getWidth(), image.getHeight(),
> 						BufferedImage.TYPE_INT_RGB);
86,87c110
<                 imageTranscoder.addTranscodingHint(
<                     JPEGTranscoder.KEY_QUALITY,
---
> 			imageTranscoder.addTranscodingHint(JPEGTranscoder.KEY_QUALITY,
89,90c112
<             }
<             else if (imageFormat == PNG_FILE) {
---
> 		} else if (imageFormat == PNG_FILE) {
92,93c114
<             }
<             else {
---
> 		} else {
97c118
<             TranscoderOutput to = new TranscoderOutput(os);
---
> 		TranscoderOutput to = new TranscoderOutput(stream);
104,105c125,126
<                 IStatus status =
<                     new Status(IStatus.ERROR, "exportToFile", IStatus.OK, //$NON-NLS-1$
---
> 			IStatus status = new Status(IStatus.ERROR,
> 					"exportToStream", IStatus.OK, //$NON-NLS-1$
109d129
<             
111,122d130
< 
<             os.close();
<             monitor.worked(1);
<             refreshLocal(destination);
<         } catch (IOException ex) {
<             Log.error(Draw2dRenderPlugin.getInstance(), IStatus.ERROR, ex
<                 .getMessage(), ex);
<             IStatus status =
<                 new Status(IStatus.ERROR, "exportToFile", IStatus.OK, //$NON-NLS-1$
<                     ex.getMessage(), null);
<             throw new CoreException(status);
<         }
132c140,141
<      * @exception CoreException if this method fails
---
> 	 * @exception CoreException
> 	 *                if this method fails
