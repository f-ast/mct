14,17d13
< import java.util.Dictionary;
< import java.util.Map;
< import java.util.Set;
< 
19d14
< 
20a16
> import org.eclipse.gmf.runtime.notation.View;
24,28d19
<  * Each request contains a map which will help the policy to navigate through
<  * the properties.
<  * 
<  * Each entry in the map is the factory hint of the edit part as key and a 
<  * dictionary of appearance properties  as a value. 
30,46c21
<  * Each map describes appearance properties of a top-level shape together with it's
<  * children.
<  * 
<  * For example, the connectable shape edit part with name, attribute, operation and
<  *  shape compartments will return a map where:
<  *  1 entry: 
<  * 		connectable shape factory hint ->  dictionary:
<  * 										   ID_FONT  -> font data
<  * 										   ID_FONTCOLOR -> font color
<  * 										   ID_LINECOLOR -> line color
<  * 										   ID_FILLCOLOR -> fill color
<  *  2d entry: attribute compartment hint -> dictionary(empty)
<  *  3d entry: operation compartment hint -> dictionary(empty)
<  *  4d entry: shape compartment hint -> dictionary(empty)
<  * 
<  * @author Natalia Balaba
<  * @canBeSeenBy %level1
---
>  * @author sshaw / nbalaba
51c26
< 	 * A map which describes appearance properties
---
> 	 * reference to the <code>View</code> to copy the appearance styles from.
53c28
< 	private Map properties = null;
---
> 	private View viewToCopyFrom = null;
57d31
< 	 * @param - map hich describes appearance properties
64c38
< 	 * @param map
---
> 	 * @return <code>View</code> that is used as a baseline for copying the appearance styles of.
66,67c40,41
< 	public void setProperties(Map map) {
< 		properties = map;
---
> 	public View getViewToCopyFrom() {
> 		return viewToCopyFrom;
71,72c45
< 	 * Return all the factpry hints present in the request
< 	 * @return - set of hints (strings)
---
> 	 * @param viewToCopyFrom the <code>View</code> that is used as a baseline for copying the appearance styles of.
74,75c47,48
< 	public Set getSemanticHints(){
< 		return properties.keySet();
---
> 	public void setViewToCopyFrom(View viewToCopyFrom) {
> 		this.viewToCopyFrom = viewToCopyFrom;
77,89d49
< 	
< 	/**
< 	 * Return properties dictionary for the given factory hint. The dictionary
< 	 * contains property ids as keys and property values as values (java objects,
< 	 * not just strings like in java.util.Properties)
< 	 * 
< 	 * @param semanticHint - facytory hint
< 	 * @return - properties dictionary for the given factory hint
< 	 */
< 	public Dictionary getPropertiesFor(String semanticHint){
< 		return (Dictionary) properties.get(semanticHint);
< 	}
< 
