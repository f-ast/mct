322d321
< 			String oldContents = null;
324c323
< 				oldContents = cu.getSource();
---
> 				final String oldContents = cu.getSource();
325a325,332
> 				genText = formatCode(genText);
> 				if (!genText.equals(oldContents)) { // compare text with fqns; works for jet templates
> 					cu.getBuffer().setContents(genText);
> 					getImportsPostrocessor().organizeImports(cu, isToRestoreExistingImports, new SubProgressMonitor(pm, 1));
> 					String newContents = formatCode(cu.getSource());
> 					if (!newContents.equals(oldContents)) { // compare text with organized imports; works for xpand templates
> 						cu.getBuffer().setContents(newContents);
> 						cu.save(new SubProgressMonitor(pm, 1), true);
329,333d335
< 			genText = formatCode(genText);
< 			if (!genText.equals(oldContents)) {
< 				ICompilationUnit newCU = pf.createCompilationUnit(cu.getElementName(), genText, true, new SubProgressMonitor(pm, 1));
<                 getImportsPostrocessor().organizeImports(newCU, isToRestoreExistingImports, new SubProgressMonitor(pm, 1));
<                 newCU.save(new SubProgressMonitor(pm, 1), true);
335c337,344
< 				pm.worked(1);
---
> 					pm.worked(2);
> 				}
> 			} else {
> 				cu = pf.createCompilationUnit(cu.getElementName(), genText, true, new SubProgressMonitor(pm, 1));
> 				getImportsPostrocessor().organizeImports(cu, isToRestoreExistingImports, new SubProgressMonitor(pm, 1));
> 				String newContents = formatCode(cu.getSource());
> 				cu.getBuffer().setContents(newContents);
> 				cu.save(new SubProgressMonitor(pm, 1), true);
