42c42
< import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
---
> import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
44c44
< import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectorViewRequest;
---
> import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewRequest;
48c48
< import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectorViewRequest.ConnectorViewDescriptor;
---
> import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewRequest.ConnectionViewDescriptor;
57c57
<  * This implementation will manage connectors owned by the semantic host.
---
>  * This implementation will manage connections owned by the semantic host.
92c92
< 	 *            semantic connector
---
> 	 *            semantic connection
107c107
< 	 *            semantic connector
---
> 	 *            semantic connection
111c111
< 	/** Returns the diagram's connector views. */
---
> 	/** Returns the diagram's connection views. */
124c124
< 	 * Return <tt>true</tt> if the connector should be drawn between the
---
> 	 * Return <tt>true</tt> if the connection should be drawn between the
128c128
< 	 *            connector's source element
---
> 	 *            connection's source element
130c130
< 	 *            connector's target element
---
> 	 *            connection's target element
135c135
< 			EObject connector) {
---
> 			EObject connection) {
262c262
< 	 * Creates a connector view facde element for the supplied semantic element.
---
> 	 * Creates a connection view facde element for the supplied semantic element.
268c268
< 	 *            connectors source editpart
---
> 	 *            connections source editpart
270c270
< 	 *            connectors target editpart
---
> 	 *            connections target editpart
287c287
< 		CreateConnectorViewRequest ccr = getCreateConnectionViewRequest(
---
> 		CreateConnectionViewRequest ccr = getCreateConnectionViewRequest(
298c298
< 		 * targetedit part is persisted the set connector ends command will
---
> 		 * targetedit part is persisted the set connection ends command will
301c301
< 		 * will create a persisted connector view.
---
> 		 * will create a persisted connection view.
304,305c304,305
< 			CreateConnectorViewRequest.ConnectorViewDescriptor descriptor = ccr
< 				.getConnectorViewDescriptor();
---
> 			CreateConnectionViewRequest.ConnectionViewDescriptor descriptor = ccr
> 				.getConnectionViewDescriptor();
331c331
< 						PresentationResourceManager
---
> 						DiagramResourceManager
347c347
< 	 * @param connector
---
> 	 * @param connection
353c353
< 	protected EditPart getTargetEditPartFor(EObject connector) {
---
> 	protected EditPart getTargetEditPartFor(EObject connection) {
356,357c356,357
< 		tel = getTargetElement(connector);
< 		tep = getEditPartFor(tel, connector);
---
> 		tel = getTargetElement(connection);
> 		tep = getEditPartFor(tel, connection);
365c365
< 	 * @param connector
---
> 	 * @param connection
371c371
< 	protected EditPart getSourceEditPartFor(EObject connector) {
---
> 	protected EditPart getSourceEditPartFor(EObject connection) {
374,375c374,375
< 		sel = getSourceElement(connector);
< 		sep = getEditPartFor(sel, connector);
---
> 		sel = getSourceElement(connection);
> 		sep = getEditPartFor(sel, connection);
389,390c389,390
< 		if (request instanceof CreateConnectorViewRequest) {
< 			CreateConnectorViewRequest ccr = (CreateConnectorViewRequest) request;
---
> 		if (request instanceof CreateConnectionViewRequest) {
> 			CreateConnectionViewRequest ccr = (CreateConnectionViewRequest) request;
428c428
< 	 * Return a create connector view request.
---
> 	 * Return a create connection view request.
440c440
< 	private CreateConnectorViewRequest getCreateConnectionViewRequest(
---
> 	private CreateConnectionViewRequest getCreateConnectionViewRequest(
442c442
< 		return new CreateConnectorViewRequest(getConnectionViewDescriptor(
---
> 		return new CreateConnectionViewRequest(getConnectionViewDescriptor(
447c447
< 	 * Return a connector view descriptor.
---
> 	 * Return a connection view descriptor.
455c455
< 	 * @return a create <i>non-persisted </i> connector view descriptor
---
> 	 * @return a create <i>non-persisted </i> connection view descriptor
457c457
< 	private ConnectorViewDescriptor getConnectionViewDescriptor(
---
> 	private ConnectionViewDescriptor getConnectionViewDescriptor(
459c459
< 		return new ConnectorViewDescriptor(elementAdapter, hint, index, false,
---
> 		return new ConnectionViewDescriptor(elementAdapter, hint, index, false,
464,465c464,465
< 	 * Updates the set of connector views so that it is in sync with the
< 	 * semantic connectors. This method is called in response to notification
---
> 	 * Updates the set of connection views so that it is in sync with the
> 	 * semantic connections. This method is called in response to notification
468,471c468,471
< 	 * The update is performed by comparing the exising connector views with the
< 	 * set of semantic connectors returned from {@link #getSemanticConnectors()}.
< 	 * Views whose semantic connector no longer exists or whose semantic
< 	 * connector ends are <tt>null</tt> are
---
> 	 * The update is performed by comparing the exising connection views with the
> 	 * set of semantic connections returned from {@link #getSemanticConnectors()}.
> 	 * Views whose semantic connection no longer exists or whose semantic
> 	 * connection ends are <tt>null</tt> are
474c474
< 	 * {@link  #createConnectorView(IElement, EditPart, EditPart, int, String)
---
> 	 * {@link  #createEdge(IElement, EditPart, EditPart, int, String)
491c491
< 		// current connector views
---
> 		// current connection views
516c516
< 		// now refresh all the connector containers to update the editparts
---
> 		// now refresh all the connection containers to update the editparts
588c588
< 	 * Return the list of connectors between elements contained within the host
---
> 	 * Return the list of connections between elements contained within the host
598,603c598,603
< 		Iterator connectors = getDiagramConnections().iterator();
< 		while (connectors.hasNext()) {
< 			Edge connector = (Edge) connectors.next();
< 			if (connector.getSource() != null && connector.getTarget() != null
< 				&& shouldIncludeConnection(connector, children)) {
< 				retval.add(connector);
---
> 		Iterator connections = getDiagramConnections().iterator();
> 		while (connections.hasNext()) {
> 			Edge connection = (Edge) connections.next();
> 			if (connection.getSource() != null && connection.getTarget() != null
> 				&& shouldIncludeConnection(connection, children)) {
> 				retval.add(connection);
611,612c611,612
< 	 * shape compartment is responsible for the supplied connector. By default,
< 	 * the following conditition must be met for the connector to be accepted:
---
> 	 * shape compartment is responsible for the supplied connection. By default,
> 	 * the following conditition must be met for the connection to be accepted:
621,622c621,622
< 	 * @param connector
< 	 *            the connector view
---
> 	 * @param connection
> 	 *            the connection view
625c625
< 	 * @return <tt>false</tt> if supplied connector should be ignored;
---
> 	 * @return <tt>false</tt> if supplied connection should be ignored;
628,630c628,630
< 	protected boolean shouldIncludeConnection(Edge connector, List children) {
< 		View src = connector.getSource();
< 		View target = connector.getTarget();
---
> 	protected boolean shouldIncludeConnection(Edge connection, List children) {
> 		View src = connection.getSource();
> 		View target = connection.getTarget();
