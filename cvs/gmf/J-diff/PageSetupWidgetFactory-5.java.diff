118c118
< 		group.setLayout(new GridLayout(6, true));
---
> 		group.setLayout(new GridLayout(5, true));
121c121
< 		paperSizeGridData.horizontalSpan = 6;
---
> 		paperSizeGridData.horizontalSpan = 5;
138c138
< 		group.setLayout(new GridLayout(6, true));
---
> 		group.setLayout(new GridLayout(5, true));
141c141
< 		paperSizeGridData.horizontalSpan = 6;
---
> 		paperSizeGridData.horizontalSpan = 5;
157a158,162
>         GridData gridData = new GridData(GridData.GRAB_HORIZONTAL);
>         gridData.grabExcessHorizontalSpace = true;
>     
>         label.setLayoutData(gridData);
> 		
162c167
< 	 * Create a unit label.
---
> 	 * Create a filler label to fill space between fields.
167c172
< 	public static Label createLabelUnit(Group group) {
---
> 	public static Label createLabelFiller(Group group) {
170,171c175,176
< 		GridData gridData = new GridData();
< 		gridData.widthHint = 40;
---
> 		GridData gridData = new GridData(GridData.GRAB_HORIZONTAL);
>         gridData.grabExcessHorizontalSpace = true;
189c194
< 		scGridData.horizontalSpan = 5;
---
> 		scGridData.horizontalSpan = 4;
230,247d234
< 	 * Create a label that appears after margin text field and displays a label
< 	 * corresponding to current measurement units, either inches or millimmetres.
< 	 * 
< 	 * @param group Group group hosting the label
< 	 * @return Label created unit label
< 	 */
< 	public static Label createLabelUnitMargin(Group group) {
< 		Label label = new Label(group, SWT.LEFT);
< 		
< 		GridData gridData = new GridData();
< 		gridData.widthHint = 40;
< 	
< 		label.setLayoutData(gridData);
< 
< 		return label;
< 	}
< 	
< 	/**
