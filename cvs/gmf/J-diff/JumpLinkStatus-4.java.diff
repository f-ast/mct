85c85
< 	public static final JumpLinkStatus NONE_LITERAL = new JumpLinkStatus(NONE, "None"); //$NON-NLS-1$
---
> 	public static final JumpLinkStatus NONE_LITERAL = new JumpLinkStatus(NONE, "None", "None"); //$NON-NLS-2$//$NON-NLS-1$
95c95
< 	public static final JumpLinkStatus ALL_LITERAL = new JumpLinkStatus(ALL, "All"); //$NON-NLS-1$
---
> 	public static final JumpLinkStatus ALL_LITERAL = new JumpLinkStatus(ALL, "All", "All"); //$NON-NLS-2$//$NON-NLS-1$
105c105
< 	public static final JumpLinkStatus BELOW_LITERAL = new JumpLinkStatus(BELOW, "Below"); //$NON-NLS-1$
---
> 	public static final JumpLinkStatus BELOW_LITERAL = new JumpLinkStatus(BELOW, "Below", "Below"); //$NON-NLS-2$//$NON-NLS-1$
115c115
< 	public static final JumpLinkStatus ABOVE_LITERAL = new JumpLinkStatus(ABOVE, "Above"); //$NON-NLS-1$
---
> 	public static final JumpLinkStatus ABOVE_LITERAL = new JumpLinkStatus(ABOVE, "Above", "Above"); //$NON-NLS-2$//$NON-NLS-1$
139a140,155
>      * Returns the '<em><b>Jump Link Status</b></em>' literal with the specified literal value.
>      * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
>      * @generated
>      */
> 	public static JumpLinkStatus get(String literal) {
>         for (int i = 0; i < VALUES_ARRAY.length; ++i) {
>             JumpLinkStatus result = VALUES_ARRAY[i];
>             if (result.toString().equals(literal)) {
>                 return result;
>             }
>         }
>         return null;
>     }
> 
>     /**
145c161
< 	public static JumpLinkStatus get(String name) {
---
>     public static JumpLinkStatus getByName(String name) {
148c164
< 			if (result.toString().equals(name)) {
---
>             if (result.getName().equals(name)) {
156c172
< 	 * Returns the '<em><b>Jump Link Status</b></em>' literal with the specified value.
---
>      * Returns the '<em><b>Jump Link Status</b></em>' literal with the specified integer value.
177,178c193,194
< 	private JumpLinkStatus(int value, String name) {
< 		super(value, name);
---
>     private JumpLinkStatus(int value, String name, String literal) {
>         super(value, name, literal);
