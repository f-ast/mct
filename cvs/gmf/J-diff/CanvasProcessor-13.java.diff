19d18
< import org.eclipse.emf.ecore.util.EcoreUtil;
20a20
> import org.eclipse.gmf.gmfgraph.ChildAccess;
25,26c25
< import org.eclipse.gmf.gmfgraph.Figure;
< import org.eclipse.gmf.gmfgraph.FigureAccessor;
---
> import org.eclipse.gmf.gmfgraph.FigureDescriptor;
28d26
< import org.eclipse.gmf.gmfgraph.FigureHandle;
33d30
< import org.eclipse.gmf.graphdef.codegen.NamingStrategy;
100c97
< 			handleFigure(next.getNodeFigure());
---
> 			handleFigure(next.getFigure());
106c103
< 			handleFigure(next.getConnectionFigure());
---
> 			handleFigure(next.getFigure());
112c109
< 			FigureHandle nextFigure = next.getFigure();
---
> 			FigureDescriptor nextFigure = next.getFigure();
116,120c113
< 			if (nextFigure instanceof Figure) {
< 				handleFigure((Figure) nextFigure);
< 			} else {
< 				throw new IllegalStateException("Don't support accessors for compartments yet");
< 			}
---
> 			handleFigure(nextFigure);
126,151c119,122
< 			if (next.getFigure() instanceof FigureAccessor) {
< 				assert myElementCopier.containsKey(next.getFigure()) : "Should be copied as part of previously referenced CustomFigure";
< 			} else {
< 				assert next.getFigure() instanceof Figure;
< 				Figure f = (Figure) next.getFigure(); 
< 				if (isInsideProcessedFigure(f)) {
< 					// obviously, fact we got here means f is !getReferencingElements().isEmpty()
< 					// feedback.findAccessorFor(f)
< 					FigureAccessor accessor = GMFGraphFactory.eINSTANCE.createFigureAccessor();
< 					accessor.setAccessor(NamingStrategy.INSTANCE.getChildFigureGetterName(f));
< 					myElementCopier.put(f, accessor);
< 					// find closest ancestor figure
< 					/* XXX assume there's no cases like
< 					 * Node1 -->   Rect1
< 					 * Node2 -->     |- Rect2
< 					 * Label -->          |- gef.Label
< 					 * and the Label we process is from Node1. 
< 					 * With the current approach, we'll get mirrored Rect2 instead of mirrored Rect1.
< 					 */
< 					Figure parent = f;
< 					do {
< 						parent = parent.getParent();
< 						// parent can't be null, as we checked isInsideProcessedFigure prior to that.
< 					} while (!myElementCopier.containsKey(parent));
< 					assert myElementCopier.get(parent) instanceof CustomFigure : "We used to keep custom figures only in the mirrored gallery";
< 					((CustomFigure) myElementCopier.get(parent)).getCustomChildren().add(accessor);
---
> 			if (next.getAccessor() != null) {
> 				// accessor
> 				ChildAccess labelAccess = next.getAccessor();
> 				// XXX nothing to do?
153,155c124
< 					handleFigure(f);
< 				}
< 				
---
> 				handleFigure(next.getFigure());
160,165c129,130
< 	private boolean isInsideProcessedFigure(Figure f) {
< 		return EcoreUtil.isAncestor(myElementCopier.keySet(), f);
< 	}
< 
< 	private void handleFigure(Figure figure) throws InterruptedException {
< 		if (myElementCopier.isSubstituted(figure)) {
---
> 	private void handleFigure(FigureDescriptor fd) throws InterruptedException {
> 		if (myElementCopier.isSubstituted(fd)) {
172c137
< 		if (figure instanceof CustomFigure && isPlainBareCustomFigure((CustomFigure) figure)) {
---
> 		if (fd.getActualFigure() instanceof CustomFigure && isPlainBareCustomFigure((CustomFigure) fd.getActualFigure())) {
176c141,142
< 			myOutcomeGallery.getFigures().add((CustomFigure) myElementCopier.copy(figure));
---
> 			final CustomFigure f = (CustomFigure) fd.getActualFigure();
> 			myOutcomeGallery.getFigures().add(myElementCopier.xcopy(f));
178,179c144,145
< 			String fqn = myCallback.visitFigure(figure);
< 			myElementCopier.registerSubstitution(figure, createCustomFigure(figure, fqn));
---
> 			String fqn = myCallback.visitFigure(fd);
> 			myElementCopier.registerSubstitution(fd, createCustomFigure(fd, fqn));
192,195c158,159
< 		featuresToCheck.remove(GMFGraphPackage.eINSTANCE.getIdentity_Name());
< 		featuresToCheck.remove(GMFGraphPackage.eINSTANCE.getFigure_Children());
< 		featuresToCheck.remove(GMFGraphPackage.eINSTANCE.getFigureMarker_Parent());
< 		featuresToCheck.remove(GMFGraphPackage.eINSTANCE.getFigureHandle_ReferencingElements());
---
> 		featuresToCheck.remove(GMFGraphPackage.eINSTANCE.getRealFigure_Name());
> 		featuresToCheck.remove(GMFGraphPackage.eINSTANCE.getRealFigure_Children());
197d160
< 		featuresToCheck.remove(GMFGraphPackage.eINSTANCE.getCustomClass_BundleName());
212,214c175,176
< 	private CustomFigure createCustomFigure(Figure original, String fqn) {
< 		CustomFigure cf = DiagramElementsCopier.createCustomFigure(original);
< 		cf.setName(original.getName());
---
> 	private FigureDescriptor createCustomFigure(FigureDescriptor original, String fqn) {
> 		CustomFigure cf = GalleryMirrorProcessor.createCustomFigure(original.getActualFigure());
216,217c178,182
< 		myOutcomeGallery.getFigures().add(cf);
< 		return cf;
---
> 		FigureDescriptor fd = GMFGraphFactory.eINSTANCE.createFigureDescriptor();
> 		fd.setName(original.getName());
> 		fd.setActualFigure(cf);
> 		myOutcomeGallery.getDescriptors().add(fd);
> 		return fd;
