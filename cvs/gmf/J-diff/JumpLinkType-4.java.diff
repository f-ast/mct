74c74
< 	public static final JumpLinkType SEMICIRCLE_LITERAL = new JumpLinkType(SEMICIRCLE, "Semicircle"); //$NON-NLS-1$
---
> 	public static final JumpLinkType SEMICIRCLE_LITERAL = new JumpLinkType(SEMICIRCLE, "Semicircle", "Semicircle"); //$NON-NLS-2$//$NON-NLS-1$
84c84
< 	public static final JumpLinkType SQUARE_LITERAL = new JumpLinkType(SQUARE, "Square"); //$NON-NLS-1$
---
> 	public static final JumpLinkType SQUARE_LITERAL = new JumpLinkType(SQUARE, "Square", "Square"); //$NON-NLS-2$//$NON-NLS-1$
94c94
< 	public static final JumpLinkType CHAMFERED_LITERAL = new JumpLinkType(CHAMFERED, "Chamfered"); //$NON-NLS-1$
---
> 	public static final JumpLinkType CHAMFERED_LITERAL = new JumpLinkType(CHAMFERED, "Chamfered", "Chamfered"); //$NON-NLS-2$//$NON-NLS-1$
117a118,133
>      * Returns the '<em><b>Jump Link Type</b></em>' literal with the specified literal value.
>      * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
>      * @generated
>      */
> 	public static JumpLinkType get(String literal) {
>         for (int i = 0; i < VALUES_ARRAY.length; ++i) {
>             JumpLinkType result = VALUES_ARRAY[i];
>             if (result.toString().equals(literal)) {
>                 return result;
>             }
>         }
>         return null;
>     }
> 
>     /**
123c139
< 	public static JumpLinkType get(String name) {
---
>     public static JumpLinkType getByName(String name) {
126c142
< 			if (result.toString().equals(name)) {
---
>             if (result.getName().equals(name)) {
134c150
< 	 * Returns the '<em><b>Jump Link Type</b></em>' literal with the specified value.
---
>      * Returns the '<em><b>Jump Link Type</b></em>' literal with the specified integer value.
154,155c170,171
< 	private JumpLinkType(int value, String name) {
< 		super(value, name);
---
>     private JumpLinkType(int value, String name, String literal) {
>         super(value, name, literal);
