11a12,13
> import java.util.LinkedList;
> import java.util.List;
28a31
> import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;
5346,5348c5349,5350
< 		if(getEditorGen() != null && getEditorGen().getDiagram() != null) {
< 			for (Iterator it = getEditorGen().getDiagram().eAllContents(); it.hasNext(); ) {
< 				Object next = it.next();
---
> 		for (Iterator it = getAllNodes().iterator(); it.hasNext(); ) {
> 			GenNode next = (GenNode) it.next();
5350,5351c5352
< 				if (next instanceof GenNode) {
< 					modelFacet = ((GenNode) next).getModelFacet();
---
> 			modelFacet = next.getModelFacet();
5353c5354
< 						resultMap.put(modelFacet, (GenNode)next);					
---
> 				resultMap.put(modelFacet, next);					
5355,5358d5355
< 				} else if (next instanceof GenLink && ((GenLink) next).getModelFacet() instanceof TypeLinkModelFacet) {
< 					modelFacet = (TypeLinkModelFacet) ((GenLink) next).getModelFacet();
< 					if(modelFacet != null) { 
< 						resultMap.put(modelFacet, (GenLink) next);
5359a5357,5362
> 		for (Iterator it = getLinks().iterator(); it.hasNext();) {
> 			GenLink next = (GenLink) it.next();
> 			if (next.getModelFacet() instanceof TypeLinkModelFacet) {
> 				TypeLinkModelFacet modelFacet = (TypeLinkModelFacet) next.getModelFacet();
> 				if(modelFacet != null) {
> 					resultMap.put(modelFacet, next);
5364a5368,5394
> 
> 	public Map<GenClass, GenTopLevelNode> getGenClass2PhantomMap() {
> 		LinkedHashMap<GenClass, GenTopLevelNode> genClass2Phantom = new LinkedHashMap<GenClass, GenTopLevelNode>();
> 		for (Iterator topLevelNodes = getTopLevelNodes().iterator(); topLevelNodes.hasNext();) {
> 			GenTopLevelNode nextTopLevelNode = (GenTopLevelNode) topLevelNodes.next();
> 			TypeModelFacet nextModelFacet = nextTopLevelNode.getModelFacet();
> 			if (nextModelFacet == null || !nextModelFacet.isPhantomElement()) {
> 				continue;
> 			}
> 			genClass2Phantom.put(nextModelFacet.getMetaClass(), nextTopLevelNode);
> 		}
> 		return genClass2Phantom;
> 	}
> 
> 	public List<GenLink> getPhantomLinks() {
> 		LinkedList<GenLink> phantomLinks = new LinkedList<GenLink>();
> 		for (Iterator it = getLinks().iterator(); it.hasNext();) {
> 			GenLink nextLink = (GenLink) it.next();
> 			if (nextLink.getModelFacet() instanceof FeatureModelFacet) {
> 				FeatureModelFacet nextModelFacet = (FeatureModelFacet) nextLink.getModelFacet();
> 				if (nextModelFacet.getMetaFeature().isContains()) {
> 					phantomLinks.add(nextLink);
> 				}
> 			}
> 		}
> 		return phantomLinks;
> 	}
