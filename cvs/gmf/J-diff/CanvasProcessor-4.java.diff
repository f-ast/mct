16d15
< import org.eclipse.emf.codegen.util.CodeGenUtil;
27a27
> import org.eclipse.gmf.graphdef.codegen.NamingStrategy;
113c113
< 					accessor.setAccessor("get" + CodeGenUtil.capName(f.getName()));
---
> 					accessor.setAccessor(NamingStrategy.INSTANCE.getChildFigureGetterName(f));
114a115,129
> 					// find closest ancestor figure
> 					/* XXX assume there's no cases like
> 					 * Node1 -->   Rect1
> 					 * Node2 -->     |- Rect2
> 					 * Label -->          |- gef.Label
> 					 * and the Label we process is from Node1. 
> 					 * With the current approach, we'll get mirrored Rect2 instead of mirrored Rect1.
> 					 */
> 					Figure parent = f;
> 					do {
> 						parent = parent.getParent();
> 						// parent can't be null, as we checked isInsideProcessedFigure prior to that.
> 					} while (!myElementCopier.containsKey(parent));
> 					assert myElementCopier.get(parent) instanceof CustomFigure : "We used to keep custom figures only in the mirrored gallery";
> 					((CustomFigure) myElementCopier.get(parent)).getCustomChildren().add(accessor);
129c144
< 			myElementCopier.copy(figure);
---
> 			myOutcomeGallery.getFigures().add(myElementCopier.copy(figure));
