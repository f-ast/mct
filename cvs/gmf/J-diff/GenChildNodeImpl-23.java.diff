9,11d8
< import java.util.Collection;
< 
< import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
14d10
< import org.eclipse.emf.ecore.EStructuralFeature;
16d11
< import org.eclipse.emf.ecore.util.InternalEList;
25,26d19
< import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;
< import org.eclipse.gmf.codegen.gmfgen.Viewmap;
67c60
< 		return (GenChildContainer)eContainer;
---
> 		return (GenChildContainer)eContainer();
90,102c83,84
< 	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
< 		if (featureID >= 0) {
< 			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
< 				case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 					return ((InternalEList)getChildNodes()).basicAdd(otherEnd, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM:
< 					if (eContainer != null)
< 						msgs = eBasicRemoveFromContainer(msgs);
< 					return eBasicSetContainer(otherEnd, GMFGenPackage.GEN_CHILD_NODE__DIAGRAM, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 					return ((InternalEList)getLabels()).basicAdd(otherEnd, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 					return ((InternalEList)getCompartments()).basicAdd(otherEnd, msgs);
---
> 	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
> 		switch (featureID) {
104c86
< 					if (eContainer != null)
---
> 				if (eInternalContainer() != null)
107,109d88
< 				default:
< 					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
< 			}
111,113c90
< 		if (eContainer != null)
< 			msgs = eBasicRemoveFromContainer(msgs);
< 		return eBasicSetContainer(otherEnd, featureID, msgs);
---
> 		return super.eInverseAdd(otherEnd, featureID, msgs);
121,135c98,99
< 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
< 		if (featureID >= 0) {
< 			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
< 				case GMFGenPackage.GEN_CHILD_NODE__VIEWMAP:
< 					return basicSetViewmap(null, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 					return ((InternalEList)getChildNodes()).basicRemove(otherEnd, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM:
< 					return eBasicSetContainer(null, GMFGenPackage.GEN_CHILD_NODE__DIAGRAM, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__MODEL_FACET:
< 					return basicSetModelFacet(null, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 					return ((InternalEList)getLabels()).basicRemove(otherEnd, msgs);
< 				case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 					return ((InternalEList)getCompartments()).basicRemove(otherEnd, msgs);
---
> 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
> 		switch (featureID) {
138,140d101
< 				default:
< 					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
< 			}
142c103
< 		return eBasicSetContainer(null, featureID, msgs);
---
> 		return super.eInverseRemove(otherEnd, featureID, msgs);
150,151c111
< 	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
< 		if (eContainerFeatureID >= 0) {
---
> 	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
153,154d112
< 				case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM:
< 					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__NODES, GenDiagram.class, msgs);
156,159c114
< 					return eContainer.eInverseRemove(this, GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES, GenChildContainer.class, msgs);
< 				default:
< 					return eDynamicBasicRemoveFromContainer(msgs);
< 			}
---
> 				return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES, GenChildContainer.class, msgs);
161c116
< 		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
---
> 		return super.eBasicRemoveFromContainerFeature(msgs);
169,201c124,125
< 	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				if (resolve) return getDiagramRunTimeClass();
< 				return basicGetDiagramRunTimeClass();
< 			case GMFGenPackage.GEN_CHILD_NODE__VISUAL_ID:
< 				return new Integer(getVisualID());
< 			case GMFGenPackage.GEN_CHILD_NODE__EDIT_PART_CLASS_NAME:
< 				return getEditPartClassName();
< 			case GMFGenPackage.GEN_CHILD_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				return getItemSemanticEditPolicyClassName();
< 			case GMFGenPackage.GEN_CHILD_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				return getNotationViewFactoryClassName();
< 			case GMFGenPackage.GEN_CHILD_NODE__VIEWMAP:
< 				return getViewmap();
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 				return getChildNodes();
< 			case GMFGenPackage.GEN_CHILD_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				return getCanonicalEditPolicyClassName();
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM:
< 				return getDiagram();
< 			case GMFGenPackage.GEN_CHILD_NODE__MODEL_FACET:
< 				return getModelFacet();
< 			case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 				return getLabels();
< 			case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 				return getCompartments();
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_CONTAINERS_PLACEMENT:
< 				return getChildContainersPlacement();
< 			case GMFGenPackage.GEN_CHILD_NODE__EXPLICIT_CONTENT_PANE:
< 				return isExplicitContentPane() ? Boolean.TRUE : Boolean.FALSE;
< 			case GMFGenPackage.GEN_CHILD_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
< 				return getGraphicalNodeEditPolicyClassName();
---
> 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
> 		switch (featureID) {
205,314c129
< 		return eDynamicGet(eFeature, resolve);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void eSet(EStructuralFeature eFeature, Object newValue) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				setDiagramRunTimeClass((GenClass)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VISUAL_ID:
< 				setVisualID(((Integer)newValue).intValue());
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__EDIT_PART_CLASS_NAME:
< 				setEditPartClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				setItemSemanticEditPolicyClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				setNotationViewFactoryClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VIEWMAP:
< 				setViewmap((Viewmap)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 				getChildNodes().clear();
< 				getChildNodes().addAll((Collection)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				setCanonicalEditPolicyClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__MODEL_FACET:
< 				setModelFacet((TypeModelFacet)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 				getLabels().clear();
< 				getLabels().addAll((Collection)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 				getCompartments().clear();
< 				getCompartments().addAll((Collection)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_CONTAINERS_PLACEMENT:
< 				setChildContainersPlacement((CompartmentPlacementKind)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__EXPLICIT_CONTENT_PANE:
< 				setExplicitContentPane(((Boolean)newValue).booleanValue());
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
< 				setGraphicalNodeEditPolicyClassName((String)newValue);
< 				return;
< 		}
< 		eDynamicSet(eFeature, newValue);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void eUnset(EStructuralFeature eFeature) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				setDiagramRunTimeClass((GenClass)null);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VISUAL_ID:
< 				setVisualID(VISUAL_ID_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__EDIT_PART_CLASS_NAME:
< 				setEditPartClassName(EDIT_PART_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				setItemSemanticEditPolicyClassName(ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VIEWMAP:
< 				setViewmap((Viewmap)null);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 				getChildNodes().clear();
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				setCanonicalEditPolicyClassName(CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__MODEL_FACET:
< 				setModelFacet((TypeModelFacet)null);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 				getLabels().clear();
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 				getCompartments().clear();
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_CONTAINERS_PLACEMENT:
< 				setChildContainersPlacement(CHILD_CONTAINERS_PLACEMENT_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__EXPLICIT_CONTENT_PANE:
< 				setExplicitContentPane(EXPLICIT_CONTENT_PANE_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
< 				setGraphicalNodeEditPolicyClassName(GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT);
< 				return;
< 		}
< 		eDynamicUnset(eFeature);
---
> 		return super.eGet(featureID, resolve, coreType);
322,353c137,138
< 	public boolean eIsSet(EStructuralFeature eFeature) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				return diagramRunTimeClass != null;
< 			case GMFGenPackage.GEN_CHILD_NODE__VISUAL_ID:
< 				return visualID != VISUAL_ID_EDEFAULT;
< 			case GMFGenPackage.GEN_CHILD_NODE__EDIT_PART_CLASS_NAME:
< 				return EDIT_PART_CLASS_NAME_EDEFAULT == null ? editPartClassName != null : !EDIT_PART_CLASS_NAME_EDEFAULT.equals(editPartClassName);
< 			case GMFGenPackage.GEN_CHILD_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				return ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? itemSemanticEditPolicyClassName != null : !ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(itemSemanticEditPolicyClassName);
< 			case GMFGenPackage.GEN_CHILD_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				return NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT == null ? notationViewFactoryClassName != null : !NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT.equals(notationViewFactoryClassName);
< 			case GMFGenPackage.GEN_CHILD_NODE__VIEWMAP:
< 				return viewmap != null;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 				return childNodes != null && !childNodes.isEmpty();
< 			case GMFGenPackage.GEN_CHILD_NODE__CANONICAL_EDIT_POLICY_CLASS_NAME:
< 				return CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? canonicalEditPolicyClassName != null : !CANONICAL_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(canonicalEditPolicyClassName);
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM:
< 				return getDiagram() != null;
< 			case GMFGenPackage.GEN_CHILD_NODE__MODEL_FACET:
< 				return modelFacet != null;
< 			case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 				return labels != null && !labels.isEmpty();
< 			case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 				return compartments != null && !compartments.isEmpty();
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_CONTAINERS_PLACEMENT:
< 				return childContainersPlacement != CHILD_CONTAINERS_PLACEMENT_EDEFAULT;
< 			case GMFGenPackage.GEN_CHILD_NODE__EXPLICIT_CONTENT_PANE:
< 				return explicitContentPane != EXPLICIT_CONTENT_PANE_EDEFAULT;
< 			case GMFGenPackage.GEN_CHILD_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:
< 				return GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT == null ? graphicalNodeEditPolicyClassName != null : !GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME_EDEFAULT.equals(graphicalNodeEditPolicyClassName);
---
> 	public boolean eIsSet(int featureID) {
> 		switch (featureID) {
357c142
< 		return eDynamicIsSet(eFeature);
---
> 		return super.eIsSet(featureID);
