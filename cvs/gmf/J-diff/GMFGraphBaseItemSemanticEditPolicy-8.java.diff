1c1
< /**
---
> /*
19a20
> import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
40a42,43
> import org.eclipse.gmf.graphdef.editor.edit.helpers.GMFGraphBaseEditHelper;
> 
57a61,63
> 		if (editHelperContext == null) {
> 			editHelperContext = ViewUtil.resolveSemanticElement((View) getHost().getModel());
> 		}
59,60c65,66
< 		if (elementType == ElementTypeRegistry.getInstance().getType("org.eclipse.gmf.runtime.emf.type.core.default")) {
< 			GMFGraphDiagramEditorPlugin.getInstance().logInfo("Failed to get element type for " + editHelperContext);
---
> 		if (elementType == ElementTypeRegistry.getInstance().getType("org.eclipse.gmf.runtime.emf.type.core.default")) { //$NON-NLS-1$
> 			GMFGraphDiagramEditorPlugin.getInstance().logInfo("Failed to get element type for " + editHelperContext); //$NON-NLS-1$
63,68c69,72
< 		Command semanticHelperCommand = null;
< 		if (elementType != null) {
< 			ICommand semanticCommand = elementType.getEditCommand(completedRequest);
< 			if (semanticCommand != null) {
< 				semanticHelperCommand = new EtoolsProxyCommand(semanticCommand);
< 			}
---
> 		Command epCommand = getSemanticCommandSwitch(completedRequest);
> 		if (epCommand != null) {
> 			ICommand command = epCommand instanceof EtoolsProxyCommand ? ((EtoolsProxyCommand) epCommand).getICommand() : new CommandProxy(epCommand);
> 			completedRequest.setParameter(GMFGraphBaseEditHelper.EDIT_POLICY_COMMAND, command);
70,77c74,80
< 		Command semanticPolicyCommand = getSemanticCommandSwitch(completedRequest);
< 
< 		// combine commands from edit policy and edit helper
< 		if (semanticPolicyCommand == null) {
< 			if (semanticHelperCommand == null) {
< 				return null;
< 			} else {
< 				semanticPolicyCommand = semanticHelperCommand;
---
> 		Command ehCommand = null;
> 		if (elementType != null) {
> 			ICommand command = elementType.getEditCommand(completedRequest);
> 			if (command != null) {
> 				if (!(command instanceof CompositeTransactionalCommand)) {
> 					TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
> 					command = new CompositeTransactionalCommand(editingDomain, null).compose(command);
79,81c82
< 		} else {
< 			if (semanticHelperCommand != null) {
< 				semanticPolicyCommand = semanticPolicyCommand.chain(semanticHelperCommand);
---
> 				ehCommand = new EtoolsProxyCommand(command);
84,85d84
< 
< 		// append command to delete view if necessary
92,93c91,93
< 				Command deleteViewCommand = new EtoolsProxyCommand(new DeleteCommand(((IGraphicalEditPart) getHost()).getEditingDomain(), (View) getHost().getModel()));
< 				semanticPolicyCommand = semanticPolicyCommand.chain(deleteViewCommand);
---
> 				TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
> 				Command deleteViewCommand = new EtoolsProxyCommand(new DeleteCommand(editingDomain, (View) getHost().getModel()));
> 				ehCommand = ehCommand == null ? deleteViewCommand : ehCommand.chain(deleteViewCommand);
95c95
< 			return semanticPolicyCommand;
---
> 			return ehCommand;
211,214c211
< 		TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
< 		CompositeTransactionalCommand modelCmd = new CompositeTransactionalCommand(editingDomain, cmd.getLabel());
< 		modelCmd.compose(cmd);
< 		return new EtoolsProxyCommand(modelCmd);
---
> 		return new EtoolsProxyCommand(cmd);
