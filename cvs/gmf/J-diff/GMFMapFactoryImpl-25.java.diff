118,121c118,119
< 			case GMFMapPackage.LABEL_VIEW_METHOD:
< 				return createLabelViewMethodFromString(eDataType, initialValue);
< 			case GMFMapPackage.LABEL_EDIT_METHOD:
< 				return createLabelEditMethodFromString(eDataType, initialValue);
---
> 			case GMFMapPackage.LABEL_TEXT_ACCESS_METHOD:
> 				return createLabelTextAccessMethodFromString(eDataType, initialValue);
139,142c137,138
< 			case GMFMapPackage.LABEL_VIEW_METHOD:
< 				return convertLabelViewMethodToString(eDataType, instanceValue);
< 			case GMFMapPackage.LABEL_EDIT_METHOD:
< 				return convertLabelEditMethodToString(eDataType, instanceValue);
---
> 			case GMFMapPackage.LABEL_TEXT_ACCESS_METHOD:
> 				return convertLabelTextAccessMethodToString(eDataType, instanceValue);
407,408c403,404
< 	public LabelViewMethod createLabelViewMethodFromString(EDataType eDataType, String initialValue) {
< 		LabelViewMethod result = LabelViewMethod.get(initialValue);
---
> 	public LabelTextAccessMethod createLabelTextAccessMethodFromString(EDataType eDataType, String initialValue) {
> 		LabelTextAccessMethod result = LabelTextAccessMethod.get(initialValue);
418,438c414
< 	public String convertLabelViewMethodToString(EDataType eDataType, Object instanceValue) {
< 		return instanceValue == null ? null : instanceValue.toString();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public LabelEditMethod createLabelEditMethodFromString(EDataType eDataType, String initialValue) {
< 		LabelEditMethod result = LabelEditMethod.get(initialValue);
< 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 		return result;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String convertLabelEditMethodToString(EDataType eDataType, Object instanceValue) {
---
> 	public String convertLabelTextAccessMethodToString(EDataType eDataType, Object instanceValue) {
