26a27,28
> import org.eclipse.gmf.graphdef.editor.edit.parts.ChildAccessEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentAccessorEditPart;
29a32
> import org.eclipse.gmf.graphdef.editor.edit.parts.DiagramLabelAccessorEditPart;
30a34
> import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;
31a36
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;
35a41
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;
37a44
> import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;
39a47
> import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;
249a258,263
> 			connectedViews = getDiagramLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
> 			links.addChildren(createNavigatorItems(connectedViews, links, false));
> 			connectedViews = getDiagramLinksByType(Collections.singleton(view), CompartmentAccessorEditPart.VISUAL_ID);
> 			links.addChildren(createNavigatorItems(connectedViews, links, false));
> 			connectedViews = getDiagramLinksByType(Collections.singleton(view), DiagramLabelAccessorEditPart.VISUAL_ID);
> 			links.addChildren(createNavigatorItems(connectedViews, links, false));
260,261c274,277
< 			GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Compartment_2001_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
< 			Collection connectedViews = getOutgoingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Compartment_2005_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getOutgoingLinksByType(Collections.singleton(view), CompartmentAccessorEditPart.VISUAL_ID);
> 			outgoinglinks.addChildren(createNavigatorItems(connectedViews, outgoinglinks, true));
> 			connectedViews = getOutgoingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
271c287
< 			GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Node_2002_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Node_2006_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
282c298
< 			GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Connection_2003_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Connection_2007_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
294c310,313
< 			connectedViews = getChildrenByType(connectedViews, RectangleEditPart.VISUAL_ID);
---
> 			connectedViews = getChildrenByType(connectedViews, FigureDescriptorEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), FigureGalleryFiguresEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle3EditPart.VISUAL_ID);
297c316
< 			connectedViews = getChildrenByType(connectedViews, Ellipse2EditPart.VISUAL_ID);
---
> 			connectedViews = getChildrenByType(connectedViews, Ellipse3EditPart.VISUAL_ID);
300c319
< 			connectedViews = getChildrenByType(connectedViews, RoundedRectangle2EditPart.VISUAL_ID);
---
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangle3EditPart.VISUAL_ID);
303c322,335
< 			connectedViews = getChildrenByType(connectedViews, Polyline2EditPart.VISUAL_ID);
---
> 			connectedViews = getChildrenByType(connectedViews, Polyline3EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			return result.toArray();
> 		}
> 
> 		case FigureDescriptorEditPart.VISUAL_ID: {
> 			Collection result = new ArrayList();
> 			GMFGraphNavigatorGroup outgoinglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_FigureDescriptor_3009_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_FigureDescriptor_3009_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getChildrenByType(Collections.singleton(view), RectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Ellipse2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangle2EditPart.VISUAL_ID);
304a337,348
> 			connectedViews = getChildrenByType(Collections.singleton(view), Polyline2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getOutgoingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
> 			outgoinglinks.addChildren(createNavigatorItems(connectedViews, outgoinglinks, true));
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
> 			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
> 			if (!outgoinglinks.isEmpty()) {
> 				result.add(outgoinglinks);
> 			}
> 			if (!incominglinks.isEmpty()) {
> 				result.add(incominglinks);
> 			}
310c354
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Rectangle_3001_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Rectangle_3010_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
424c468
< 			connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
434c478
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Rectangle_3002_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Rectangle_3011_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
477c521
< 			connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
487c531
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Ellipse_3003_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Ellipse_3012_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
530c574
< 			connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
540c584
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_RoundedRectangle_3004_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_RoundedRectangle_3013_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
583c627
< 			connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
593,594c637,638
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Polyline_3005_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
< 			Collection connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Polyline_3014_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
604c648
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Ellipse_3006_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Ellipse_3015_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
718c762
< 			connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
728c772
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_RoundedRectangle_3007_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_RoundedRectangle_3016_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
842c886
< 			connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
852,853c896,897
< 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Polyline_3008_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
< 			Collection connectedViews = getIncomingLinksByType(Collections.singleton(view), DiagramElementFigureEditPart.VISUAL_ID);
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Polyline_3017_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
861c905
< 		case DiagramElementFigureEditPart.VISUAL_ID: {
---
> 		case Rectangle3EditPart.VISUAL_ID: {
863,864c907,1291
< 			GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_DiagramElementFigure_4001_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
< 			GMFGraphNavigatorGroup target = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_DiagramElementFigure_4001_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
---
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Rectangle_3018_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
> 			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
> 			if (!incominglinks.isEmpty()) {
> 				result.add(incominglinks);
> 			}
> 			return result.toArray();
> 		}
> 
> 		case Ellipse3EditPart.VISUAL_ID: {
> 			Collection result = new ArrayList();
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Ellipse_3019_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
> 			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
> 			if (!incominglinks.isEmpty()) {
> 				result.add(incominglinks);
> 			}
> 			return result.toArray();
> 		}
> 
> 		case RoundedRectangle3EditPart.VISUAL_ID: {
> 			Collection result = new ArrayList();
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_RoundedRectangle_3020_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, Rectangle2EditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, EllipseEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), RoundedRectangleEditPart.VISUAL_ID);
> 			connectedViews = getChildrenByType(connectedViews, PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getChildrenByType(Collections.singleton(view), PolylineEditPart.VISUAL_ID);
> 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
> 			connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
> 			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
> 			if (!incominglinks.isEmpty()) {
> 				result.add(incominglinks);
> 			}
> 			return result.toArray();
> 		}
> 
> 		case Polyline3EditPart.VISUAL_ID: {
> 			Collection result = new ArrayList();
> 			GMFGraphNavigatorGroup incominglinks = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_Polyline_3021_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getIncomingLinksByType(Collections.singleton(view), ChildAccessEditPart.VISUAL_ID);
> 			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
> 			if (!incominglinks.isEmpty()) {
> 				result.add(incominglinks);
> 			}
> 			return result.toArray();
> 		}
> 
> 		case ChildAccessEditPart.VISUAL_ID: {
> 			Collection result = new ArrayList();
> 			GMFGraphNavigatorGroup target = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_ChildAccess_4002_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_ChildAccess_4002_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
880a1308,1343
> 			connectedViews = getLinksTargetByType(Collections.singleton(view), Rectangle3EditPart.VISUAL_ID);
> 			target.addChildren(createNavigatorItems(connectedViews, target, true));
> 			connectedViews = getLinksTargetByType(Collections.singleton(view), Ellipse3EditPart.VISUAL_ID);
> 			target.addChildren(createNavigatorItems(connectedViews, target, true));
> 			connectedViews = getLinksTargetByType(Collections.singleton(view), RoundedRectangle3EditPart.VISUAL_ID);
> 			target.addChildren(createNavigatorItems(connectedViews, target, true));
> 			connectedViews = getLinksTargetByType(Collections.singleton(view), Polyline3EditPart.VISUAL_ID);
> 			target.addChildren(createNavigatorItems(connectedViews, target, true));
> 			connectedViews = getLinksSourceByType(Collections.singleton(view), FigureDescriptorEditPart.VISUAL_ID);
> 			source.addChildren(createNavigatorItems(connectedViews, source, true));
> 			if (!target.isEmpty()) {
> 				result.add(target);
> 			}
> 			if (!source.isEmpty()) {
> 				result.add(source);
> 			}
> 			return result.toArray();
> 		}
> 
> 		case CompartmentAccessorEditPart.VISUAL_ID: {
> 			Collection result = new ArrayList();
> 			GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_CompartmentAccessor_4003_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getLinksSourceByType(Collections.singleton(view), CompartmentEditPart.VISUAL_ID);
> 			source.addChildren(createNavigatorItems(connectedViews, source, true));
> 			if (!source.isEmpty()) {
> 				result.add(source);
> 			}
> 			return result.toArray();
> 		}
> 
> 		case DiagramElementFigureEditPart.VISUAL_ID: {
> 			Collection result = new ArrayList();
> 			GMFGraphNavigatorGroup target = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_DiagramElementFigure_4005_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			GMFGraphNavigatorGroup source = new GMFGraphNavigatorGroup(Messages.NavigatorGroupName_DiagramElementFigure_4005_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
> 			Collection connectedViews = getLinksTargetByType(Collections.singleton(view), FigureDescriptorEditPart.VISUAL_ID);
> 			target.addChildren(createNavigatorItems(connectedViews, target, true));
887,889d1349
< 			if (!source.isEmpty()) {
< 				result.add(source);
< 			}
892a1353,1355
> 			if (!source.isEmpty()) {
> 				result.add(source);
> 			}
