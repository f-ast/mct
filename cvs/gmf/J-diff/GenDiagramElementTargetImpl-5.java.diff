9c9,10
< import org.eclipse.emf.codegen.ecore.genmodel.GenClassifier;
---
> import java.util.Collection;
> import java.util.Iterator;
11c12,13
< import org.eclipse.emf.common.notify.Notification;
---
> import org.eclipse.emf.codegen.ecore.genmodel.GenClassifier;
> import org.eclipse.emf.common.util.EList;
13,15c15
< import org.eclipse.emf.ecore.InternalEObject;
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
< 
---
> import org.eclipse.emf.ecore.util.EObjectResolvingEList;
35c35
< 	 * The cached value of the '{@link #getElement() <em>Element</em>}' reference.
---
> 	 * The cached value of the '{@link #getElement() <em>Element</em>}' reference list.
42c42
< 	protected GenCommonBase element = null;
---
> 	protected EList element = null;
67,74c67,69
< 	public GenCommonBase getElement() {
< 		if (element != null && element.eIsProxy()) {
< 			InternalEObject oldElement = (InternalEObject)element;
< 			element = (GenCommonBase)eResolveProxy(oldElement);
< 			if (element != oldElement) {
< 				if (eNotificationRequired())
< 					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT, oldElement, element));
< 			}
---
> 	public EList getElement() {
> 		if (element == null) {
> 			element = new EObjectResolvingEList(GenCommonBase.class, this, GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT);
82,102d76
< 	 * @generated
< 	 */
< 	public GenCommonBase basicGetElement() {
< 		return element;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setElement(GenCommonBase newElement) {
< 		GenCommonBase oldElement = element;
< 		element = newElement;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_DIAGRAM_ELEMENT_TARGET__ELEMENT, oldElement, element));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
106c80
< 		if(getElement() == null) {
---
> 		if(getElement().isEmpty()) {
109c83
< 		return getElement().getDiagramRunTimeClass();
---
> 		return ((GenCommonBase)getElement().get(0)).getDiagramRunTimeClass();
118,119c92,102
< 		int id = getElement() != null ? getElement().getVisualID() : -1;
< 		return "Ctx" + (id < 0 ? "_" : Integer.toString(id)); //$NON-NLS-1$ //$NON-NLS-2$
---
> 		StringBuffer buf = new StringBuffer("Ctx"); //$NON-NLS-1$
> 		for (Iterator it = getElement().iterator(); it.hasNext();) {
> 			GenCommonBase nextElement = (GenCommonBase) it.next();			
> 			buf.append('_');
> 			int id = nextElement.getVisualID();
> 			if(id < 0) {
> 				buf.append('n');
> 			}
> 			buf.append(id);			
> 		}
> 		return buf.toString();
130,131c113
< 				if (resolve) return getElement();
< 				return basicGetElement();
---
> 				return getElement();
144c126,127
< 				setElement((GenCommonBase)newValue);
---
> 				getElement().clear();
> 				getElement().addAll((Collection)newValue);
158c141
< 				setElement((GenCommonBase)null);
---
> 				getElement().clear();
172c155
< 				return element != null;
---
> 				return element != null && !element.isEmpty();
