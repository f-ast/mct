25a26
> import org.eclipse.emf.transaction.RunnableWithResult;
30a32
> import org.eclipse.gef.editparts.AbstractEditPart;
33c35,36
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
---
> import org.eclipse.gmf.runtime.common.core.util.Log;
> import org.eclipse.gmf.runtime.common.core.util.Trace;
37a41,43
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
46d51
< import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
119,121c124,129
< 			semanticHint = ((String) MEditingDomainGetter.getMEditingDomain((View)getModel()).runAsRead(new MRunnable() {
< 				public Object run() {
< 					return ((View)getModel()).getType();
---
> 			try {
> 				semanticHint = ((String) getEditingDomain().runExclusive(
> 					new RunnableWithResult.Impl() {
> 
> 							public void run() {
> 								setResult(((View) getModel()).getType());
123a132,140
> 			} catch (InterruptedException e) {
> 				Trace.catching(DiagramUIPlugin.getInstance(),
> 					DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass(),
> 					"getSemanticType", e); //$NON-NLS-1$
> 				Log.error(DiagramUIPlugin.getInstance(),
> 					DiagramUIStatusCodes.IGNORED_EXCEPTION_WARNING,
> 					"getSemanticType", e); //$NON-NLS-1$
> 			}
> 
