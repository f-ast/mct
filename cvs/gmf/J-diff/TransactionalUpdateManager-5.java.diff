30a31
> import org.eclipse.emf.ecore.EcorePackage;
107a109,112
> 	public boolean isNotationModelRefresherInstalled(INotationModelRefresher refresher) {
> 		return myNotationModelRefreshers.isNotationModelRefresherInstalled(refresher);
> 	}
> 
251c256
< 					if (msg.getFeature() == NotationPackage.eINSTANCE.getView_Visible() && affectedEditPart.getModel() == view && affectedEditPart.getParent() instanceof IUpdatableEditPart) {
---
> 					if (shouldNotifyParent(msg) && affectedEditPart.getModel() == view && affectedEditPart.getParent() instanceof IUpdatableEditPart) {
261a267,276
> 	protected boolean shouldNotifyParent(Notification msg) {
> 		if (msg.getFeature() == NotationPackage.eINSTANCE.getView_Visible()) {
> 			return true;
> 		}
> 		if (msg.getFeature() == EcorePackage.eINSTANCE.getEModelElement_EAnnotations()) {
> 			return msg.getNotifier() instanceof View;
> 		}
> 		return false;
> 	}
> 
297a313,330
> 		boolean isNotationModelRefresherInstalled(INotationModelRefresher refresher) {
> 			if (myJustAddedListeners != null && myJustAddedListeners.contains(refresher)) {
> 				return true;
> 			}
> 			if (refresher == null) {
> 				return false;
> 			}
> 			View view = refresher.getView();
> 			if (view == null) {
> 				return false;
> 			}
> 			Collection<INotationModelRefresher> listeners = myListeners.get(view);
> 			if (listeners == null) {
> 				return false;
> 			}
> 			return listeners.contains(refresher);
> 		}
> 
