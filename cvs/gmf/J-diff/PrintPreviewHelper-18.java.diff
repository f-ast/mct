72c72
< import org.eclipse.swt.widgets.Button;
---
> import org.eclipse.swt.widgets.Combo;
302a303,312
> 	 *  Initial zoom levels.
> 	 */
> 	private int[] zoomLevels = { 25, 50, 75, 100, 150, 200, 250, 300, 400 };
> 	
> 	/**
> 	 * A constant used in the combo box for scaling.
> 	 */
> 	private static final String FIT_TO_PAGES = DiagramUIPrintingMessages.PrintPreview_FitToPage_ButtonText;
> 		
> 	/**
356a367
> 		if (!fitToPage) {
357a369
> 		}
670,674c682
< 		final Text textField = new Text(bar, SWT.SINGLE | SWT.BORDER);
< 		textField.setText("XXXXX");//$NON-NLS-1$
< 		textField.setEnabled(true);
< 		textField.pack();
< 		textField.setText(getDisplayScale(PrintHelperUtil.getScale()));
---
> 		final Combo zoomCombo = new Combo(bar, SWT.DROP_DOWN);
676,679c684,687
< 		separator.setWidth(textField.getBounds().width);
< 		separator.setControl(textField);
< 		
< 		textField.addSelectionListener(new SelectionListener() {
---
> 		zoomCombo.add(FIT_TO_PAGES);
> 		for (int i = 0; i < zoomLevels.length; i++) {
> 			zoomCombo.add(getDisplayScale(zoomLevels[i]));
> 		}
681,682c689,693
< 			public void widgetSelected(SelectionEvent e) {
< 				// do nothing.
---
> 		if (this.fitToPage) {
> 			zoomCombo.setText(FIT_TO_PAGES);
> 			zoomCombo.select(0);
> 		} else {
> 			zoomCombo.setText(getDisplayScale(PrintHelperUtil.getScale()));
685,686c696
< 			public void widgetDefaultSelected(SelectionEvent e) {
< 				String scaleFactor = ((Text) e.getSource()).getText();
---
> 		zoomCombo.addSelectionListener(new SelectionAdapter() {
687a698,704
> 			/**
> 			 * Apply the zoom scale as indicated by the text in the combo-box selection.
> 			 * 
> 			 * @param combo Obtain zoom information from the combo-box.
> 			 */
> 			private void doZoom(Combo combo) {
> 				String scaleFactor = combo.getText();
695c712
< 				((Text) e.getSource()).setText(getDisplayScale(scalePercentage));
---
> 				combo.setText(getDisplayScale(scalePercentage));
697,699d713
< 		});
< 		
< 		new ToolItem(bar, SWT.SEPARATOR);
701,710c715,722
< 		ToolItem fitToPageSeparator = new ToolItem(bar, SWT.SEPARATOR);
< 		Button buttonFitToPage = new Button(bar, SWT.PUSH);
< 		buttonFitToPage.setText(DiagramUIPrintingMessages.PrintPreview_FitToPage_ButtonText);
< 		buttonFitToPage.setEnabled(true);
< 		buttonFitToPage.pack();
< 			
< 		fitToPageSeparator.setWidth(buttonFitToPage.getBounds().width);
< 		fitToPageSeparator.setControl(buttonFitToPage);
< 		
< 		buttonFitToPage.addSelectionListener(new SelectionListener() {
---
> 			/*
> 			 * (non-Javadoc)
> 			 * 
> 			 * @see org.eclipse.swt.events.SelectionAdapter#widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent)
> 			 */
> 			public void widgetDefaultSelected(SelectionEvent e) {
> 				doZoom((Combo) e.getSource());
> 			}
711a724,728
> 			/*
> 			 * (non-Javadoc)
> 			 * 
> 			 * @see org.eclipse.swt.events.SelectionAdapter#widgetSelected(org.eclipse.swt.events.SelectionEvent)
> 			 */
713c730,731
< 
---
> 				String selectedString = ((Combo) e.getSource()).getText();
> 				if (FIT_TO_PAGES.compareToIgnoreCase(selectedString) == 0) {
723,724d740
< 					textField.setText(getDisplayScale(PrintHelperUtil
< 							.getScale()));
725a742,743
> 				} else {
> 					doZoom((Combo) e.getSource());
728,729d745
< 			public void widgetDefaultSelected(SelectionEvent e) {
< 				// do nothing
733c749,751
< 		
---
> 		zoomCombo.pack();
> 		separator.setWidth(zoomCombo.getSize().x);
> 		separator.setControl(zoomCombo);
1488c1506
< 		setUserScale(Math.min(hScale, vScale));
---
> 		userScale = Math.min(hScale, vScale)/100f;
