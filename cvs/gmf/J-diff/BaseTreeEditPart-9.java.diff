30c30
< import org.eclipse.gmf.runtime.lite.edit.parts.labels.ILabelTextDisplayer;
---
> import org.eclipse.gmf.runtime.lite.edit.parts.labels.AbstractLabelTextDisplayer;
31a32
> import org.eclipse.gmf.runtime.lite.edit.parts.labels.ILabelTextDisplayer;
105a107
> 	@SuppressWarnings("unchecked")
130a133,135
> 			if (myLabelTextDisplayer == null) {
> 				myLabelTextDisplayer = new NullLabelTextDisplayer();
> 			}
140c145,155
< 		setWidgetText(text == null ? "" : text);	//$NON-NLS-1$
---
> 		if (text == null || text.length() == 0) {
> 			text = getDefaultLabelText();
> 		}
> 		setWidgetText(text);
> 	}
> 
> 	/**
> 	 * @return The text to use if an empty string would be displayed otherwise
> 	 */
> 	protected String getDefaultLabelText() {
> 		return "";	//$NON-NLS-1$
177c192,195
< 		return result == null ? "" : result;
---
> 		if (result == null || result.length() == 0) {
> 			return getDefaultLabelText();
> 		}
> 		return result;
287a306,317
> 
> 	private class NullLabelTextDisplayer extends AbstractLabelTextDisplayer {
> 		private NullLabelTextDisplayer() {}
> 
> 		public String getDisplayText(EObject source) {
> 			return getDefaultLabelText();
> 		}
> 
> 		public boolean isAffectingEvent(Notification notification) {
> 			return false;
> 		}
> 	}
