2c2
<  * Copyright (c) 2005 Borland Software Corporation
---
>  * Copyright (c) 2005, 2007 Borland Software Corporation
24a25
> import org.eclipse.gmf.gmfgraph.DiagramElement;
29d29
< import org.eclipse.gmf.gmfgraph.FigureHandle;
32d31
< import org.eclipse.gmf.gmfgraph.Layoutable;
33a33
> import org.eclipse.gmf.gmfgraph.VisualFacet;
88,92c88,89
< 		FigureHandle figure = diagramNode.getFigure();
< 		if (false == figure instanceof Layoutable){
< 			return;
< 		}
< 		ViewmapLayoutType type = myLayoutTypeSwitch.getLayoutType(((Layoutable) figure).getLayout());
---
> 		Figure figure = diagramNode.getFigure().getActualFigure();
> 		ViewmapLayoutType type = myLayoutTypeSwitch.getLayoutType(figure.getLayout());
96,97c93,94
< 	protected final void setupStyleAttributes(Viewmap viewmap, FigureHandle handle){
< 		if (viewmap == null || false == handle instanceof Figure){
---
> 	protected final void setupStyleAttributes(Viewmap viewmap, Figure figure){
> 		if (viewmap == null || figure == null) {
100d96
< 		Figure figure = (Figure)handle;
126,128c122
< 		FigureHandle handle = node.getFigure();
< 		if (handle instanceof Figure){
< 			Figure figure = (Figure)handle;
---
> 		Figure figure = node.getFigure().getActualFigure();
130c124
< 			DefaultSizeFacet facet = (DefaultSizeFacet) node.find(DefaultSizeFacet.class);
---
> 		DefaultSizeFacet facet = findVF(node, DefaultSizeFacet.class);
143a138,145
> 
> 	protected static <T extends VisualFacet> T findVF(DiagramElement de, Class<T> facetClass) {
> 		for (VisualFacet vf : de.getFacets()) {
> 			if (facetClass.isInstance(vf)) {
> 				return facetClass.cast(vf);
> 			}
> 		}
> 		return null;
