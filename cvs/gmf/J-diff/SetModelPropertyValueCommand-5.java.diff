2c2
<  * Copyright (c) 2003, 2004 IBM Corporation and others.
---
>  * Copyright (c) 2003, 2006 IBM Corporation and others.
13a14,15
> import org.eclipse.core.commands.ExecutionException;
> import org.eclipse.core.runtime.IAdaptable;
16,17c18,19
< import org.eclipse.ui.views.properties.IPropertySource;
< 
---
> import org.eclipse.emf.ecore.EObject;
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
19c21,22
< import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
---
> import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
> import org.eclipse.ui.views.properties.IPropertySource;
28c31
< public class SetModelPropertyValueCommand extends AbstractModelCommand {
---
> public class SetModelPropertyValueCommand extends AbstractTransactionalCommand {
60a64
>      * @param editingDomain the editing domain in which to make this change
73c77
<     public SetModelPropertyValueCommand(String label, Object affectedObjects,
---
>     public SetModelPropertyValueCommand(TransactionalEditingDomain editingDomain, String label, Object affectedObjects,
77c81,85
<         super(label, affectedObjects);
---
>         super(
>             editingDomain,
>             label,
>             (affectedObjects instanceof EObject) ? getWorkspaceFiles((EObject) affectedObjects)
>                 : null);
85,108c93,95
<     /*
<      * (non-Javadoc)
<      * 
<      * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#isRedoable()
<      */
<     public boolean isRedoable() {
<         return true;
<     }
< 
<     /*
<      * (non-Javadoc)
<      * 
<      * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#isUndoable()
<      */
<     public boolean isUndoable() {
<         return true;
<     }
< 
<     /*
<      * (non-Javadoc)
<      * 
<      * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
<      */
<     protected CommandResult doExecute(IProgressMonitor progressMonitor) {
---
>     protected CommandResult doExecuteWithResult(
>             IProgressMonitor progressMonitor, IAdaptable info)
>         throws ExecutionException {
119c106
<         return newOKCommandResult(getPropertyValue());
---
>         return CommandResult.newOKCommandResult(getPropertyValue());
122,128c109,113
<     /*
<      * (non-Javadoc)
<      * 
<      * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doRedo()
<      */
<     protected CommandResult doRedo() {
<         return doExecute(new NullProgressMonitor());
---
>     protected CommandResult doRedoWithResult(IProgressMonitor progressMonitor,
>             IAdaptable info)
>         throws ExecutionException {
>         
>         return doExecuteWithResult(new NullProgressMonitor(), info);
131,136c116
<     /*
<      * (non-Javadoc)
<      * 
<      * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doUndo()
<      */
<     protected CommandResult doUndo() {
---
>     protected CommandResult doUndoWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
145c125
<         return newOKCommandResult(getPropertySource().getPropertyValue(
---
>         return CommandResult.newOKCommandResult(getPropertySource().getPropertyValue(
