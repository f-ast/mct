15d14
< import org.eclipse.emf.ecore.util.EcoreUtil;
91,121d89
< 	public NotificationChain basicSetLinkMapping(LinkMapping newLinkMapping, NotificationChain msgs) {
< 		msgs = eBasicSetContainer((InternalEObject)newLinkMapping, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
< 		return msgs;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setLinkMapping(LinkMapping newLinkMapping) {
< 		if (newLinkMapping != eInternalContainer() || (eContainerFeatureID != GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING && newLinkMapping != null)) {
< 			if (EcoreUtil.isAncestor(this, newLinkMapping))
< 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
< 			NotificationChain msgs = null;
< 			if (eInternalContainer() != null)
< 				msgs = eBasicRemoveFromContainer(msgs);
< 			if (newLinkMapping != null)
< 				msgs = ((InternalEObject)newLinkMapping).eInverseAdd(this, GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, LinkMapping.class, msgs);
< 			msgs = basicSetLinkMapping(newLinkMapping, msgs);
< 			if (msgs != null) msgs.dispatch();
< 		}
< 		else if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, newLinkMapping, newLinkMapping));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
214c182
< 				return basicSetLinkMapping((LinkMapping)otherEnd, msgs);
---
> 				return eBasicSetContainer(otherEnd, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
228c196
< 				return basicSetLinkMapping(null, msgs);
---
> 				return eBasicSetContainer(null, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
277,279d244
< 			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
< 				setLinkMapping((LinkMapping)newValue);
< 				return;
298,300d262
< 			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
< 				setLinkMapping((LinkMapping)null);
< 				return;
