23a24
> import org.eclipse.emf.common.notify.impl.AdapterImpl;
24a26
> import org.eclipse.emf.ecore.util.EcoreUtil;
110a113
> 		gefEditDomain.setCommandStack(createCommandStack());
115a119,128
> 	private CommandStack createCommandStack() {
> 		CommandStackAdapterManager manager = (CommandStackAdapterManager) EcoreUtil.getExistingAdapter(editingDomain.getResourceSet(), CommandStackAdapterManager.class);
> 		if (manager == null) {
> 			manager = new CommandStackAdapterManager();
> 			editingDomain.getResourceSet().eAdapters().add(manager);
> 		}
> 		manager.acquire();
> 		return manager.getCommandStack();
> 	}
> 
126a140,146
> 		CommandStackAdapterManager manager = (CommandStackAdapterManager) EcoreUtil.getExistingAdapter(getEditingDomain().getResourceSet(), CommandStackAdapterManager.class);
> 		assert manager != null;
> 		manager.release();
> 		if (manager.isReleased()) {
> 			getEditingDomain().getResourceSet().eAdapters().remove(manager);
> 		}
> 
399a420,455
> 
> 	private static class CommandStackAdapterManager extends AdapterImpl {
> 		@Override
> 		public boolean isAdapterForType(Object type) {
> 			return CommandStackAdapterManager.class.equals(type);
> 		}
> 
> 		public CommandStack getCommandStack() {
> 			if (myCommandStack == null) {
> 				myCommandStack = new CommandStack();
> 			}
> 			return myCommandStack;
> 		}
> 
> 		public void acquire() {
> 			myRefCount++;
> 		}
> 
> 		public void release() {
> 			if (myRefCount == 0) {
> 				throw new IllegalStateException();
> 			}
> 			myRefCount--;
> 			if (myRefCount == 0) {
> 				myCommandStack.dispose();
> 				myCommandStack = null;
> 			}
> 		}
> 
> 		public boolean isReleased() {
> 			return myRefCount == 0;
> 		}
> 
> 		private CommandStack myCommandStack;
> 		private int myRefCount;
> 	}
