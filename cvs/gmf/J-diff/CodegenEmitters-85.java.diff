17,19d16
< import java.util.ArrayList;
< import java.util.Collections;
< import java.util.List;
21d17
< import org.eclipse.core.runtime.IProgressMonitor;
96d91
< import org.eclipse.gmf.common.codegen.ImportAssistant;
110c105
< import org.eclipse.gmf.internal.xpand.BufferOutput;
---
> import org.eclipse.gmf.internal.common.codegen.XpandTextEmitter;
112,115d106
< import org.eclipse.gmf.internal.xpand.XpandFacade;
< import org.eclipse.gmf.internal.xpand.expression.Variable;
< import org.eclipse.gmf.internal.xpand.model.XpandExecutionContext;
< import org.eclipse.gmf.internal.xpand.model.XpandExecutionContextImpl;
117d107
< import org.eclipse.gmf.internal.xpand.util.ContextFactory;
309c299
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::DiagramEditPart::DiagramEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::DiagramEditPart::DiagramEditPart"); //$NON-NLS-1$
313c303
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::NodeEditPart::NodeEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::NodeEditPart::NodeEditPart"); //$NON-NLS-1$
317c307
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::NodeLabelEditPart::NodeLabelEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::NodeLabelEditPart::NodeLabelEditPart"); //$NON-NLS-1$
321c311
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::ExternalNodeLabelEditPart::ExternalNodeLabelEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::ExternalNodeLabelEditPart::ExternalNodeLabelEditPart"); //$NON-NLS-1$
325c315
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::ChildNodeLabelEditPart::ChildNodeLabelEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::ChildNodeLabelEditPart::ChildNodeLabelEditPart"); //$NON-NLS-1$
329c319
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::CompartmentEditPart::CompartmentEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::CompartmentEditPart::CompartmentEditPart"); //$NON-NLS-1$
333c323
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::LinkEditPart::LinkEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::LinkEditPart::LinkEditPart"); //$NON-NLS-1$
337c327
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::LinkLabelEditPart::LinkLabelEditPart"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::LinkLabelEditPart::LinkLabelEditPart"); //$NON-NLS-1$
341c331
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editparts::EditPartFactory::EditPartFactory"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editparts::EditPartFactory::EditPartFactory"); //$NON-NLS-1$
347c337
< 		return new XpandTextEmitter(myResourceManager, "xpt::policies::BaseItemSemanticEditPolicy::BaseItemSemanticEditPolicy"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::policies::BaseItemSemanticEditPolicy::BaseItemSemanticEditPolicy"); //$NON-NLS-1$
351c341
< 		return new XpandTextEmitter(myResourceManager, "xpt::policies::OpenDiagram::EditPolicy"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::policies::OpenDiagram::EditPolicy"); //$NON-NLS-1$
375c365
< 		return new XpandTextEmitter(myResourceManager, "xpt::policies::NodeItemSemanticEditPolicy::NodeItemSemanticEditPolicy"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::policies::NodeItemSemanticEditPolicy::NodeItemSemanticEditPolicy"); //$NON-NLS-1$
391c381
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editpolicies::TextFeedback::TextSelectionEditPolicy"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editpolicies::TextFeedback::TextSelectionEditPolicy"); //$NON-NLS-1$
395c385
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::editpolicies::TextFeedback::TextNonResizableEditPolicy"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::editpolicies::TextFeedback::TextNonResizableEditPolicy"); //$NON-NLS-1$
429c419
< 		return new XpandTextEmitter(myResourceManager, "xpt::diagram::providers::ElementTypes::ElementTypes"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::diagram::providers::ElementTypes::ElementTypes"); //$NON-NLS-1$
511c501
< 		return new XpandTextEmitter(myResourceManager, "xpt::editor::palette::PaletteFactory::Factory"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::editor::palette::PaletteFactory::Factory"); //$NON-NLS-1$
563c553
< 		return new XpandTextEmitter(myResourceManager, "xpt::navigator::NavigatorContentProvider::NavigatorContentProvider"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::navigator::NavigatorContentProvider::NavigatorContentProvider"); //$NON-NLS-1$
599c589
< 		return new XpandTextEmitter(myResourceManager, "xpt::plugin::plugin"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::plugin::plugin"); //$NON-NLS-1$
603c593
< 		return new XpandTextEmitter(myResourceManager, "xpt::properties::properties"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::properties::properties"); //$NON-NLS-1$
687c677
< 		return new XpandTextEmitter(myResourceManager, "xpt::application::Application::Application"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::application::Application::Application"); //$NON-NLS-1$
691c681
< 		return new XpandTextEmitter(myResourceManager, "xpt::application::ActionBarAdvisor::ActionBarAdvisor"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::application::ActionBarAdvisor::ActionBarAdvisor"); //$NON-NLS-1$
695c685
< 		return new XpandTextEmitter(myResourceManager, "xpt::application::Perspective::Perspective"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::application::Perspective::Perspective"); //$NON-NLS-1$
699c689
< 		return new XpandTextEmitter(myResourceManager, "xpt::application::WorkbenchAdvisor::WorkbenchAdvisor"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::application::WorkbenchAdvisor::WorkbenchAdvisor"); //$NON-NLS-1$
703c693
< 		return new XpandTextEmitter(myResourceManager, "xpt::application::WorkbenchWindowAdvisor::WorkbenchWindowAdvisor"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::application::WorkbenchWindowAdvisor::WorkbenchWindowAdvisor"); //$NON-NLS-1$
711c701
< 		return new XpandTextEmitter(myResourceManager, "xpt::editor::URIDiagramDocumentProvider::URIDiagramDocumentProvider"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::editor::URIDiagramDocumentProvider::URIDiagramDocumentProvider"); //$NON-NLS-1$
719c709
< 		return new XpandTextEmitter(myResourceManager, "xpt::editor::URIEditorInputProxy::URIEditorInputProxy"); //$NON-NLS-1$
---
> 		return newXpandEmitter("xpt::editor::URIEditorInputProxy::URIEditorInputProxy"); //$NON-NLS-1$
727c717
<         return new XpandTextEmitter(myResourceManager, "xpt::Externalizer::Access");
---
>         return newXpandEmitter("xpt::Externalizer::Access");
731c721
<         return new XpandTextEmitter(myResourceManager, "xpt::Externalizer::Values");
---
>         return newXpandEmitter("xpt::Externalizer::Values");
743c733
< 		return new XpandTextEmitter(myResourceManager, definition);
---
> 		return newXpandEmitter(definition);
752c742
< 		return new XpandTextEmitter(myResourceManager, definition);
---
> 		return newXpandEmitter(definition);
754a745
> 
792,834c783,784
< 	private static class XpandTextEmitter implements TextEmitter {
< 		private final ResourceManager myResourceManager;
< 		private final String myTemplateFQN;
< 
< 		public XpandTextEmitter(ResourceManager manager, String templateFQN) {
< 			myResourceManager = manager;
< 			myTemplateFQN = templateFQN;
< 		}
< 
< 		public String generate(IProgressMonitor monitor, Object[] arguments) throws InterruptedException, InvocationTargetException, UnexpectedBehaviourException {
< 			StringBuilder result = new StringBuilder();
< 			// JET gets single Object as an argument, and that's Object[] {diagram, importUtil} in our case.
< 			// FIXME it's JETEmitterAdapter's role to wrap Object[] into single Object passed to emitter, not XpandEmitter's
< 			Object[] actualArguments = arguments != null && arguments.length == 1 && arguments[0] instanceof Object[] ? (Object[]) arguments[0] : arguments;
< 			new XpandFacade(createContext(result)).evaluate(myTemplateFQN, extractTarget(actualArguments), extractArguments(actualArguments));
< 			return result.toString();
< 		}
< 
< 		protected Object extractTarget(Object[] arguments) {
< 			assert arguments != null && arguments.length > 0;
< 			return arguments[0];
< 		}
< 
< 		protected Object[] extractArguments(Object[] arguments) {
< 			assert arguments != null && arguments.length > 0;
< 			ArrayList<Object> res = new ArrayList<Object>(arguments.length);
< 			// strip first one off, assume it's target
< 			for (int i = 1; i < arguments.length; i++) {
< 				if (false == arguments[i] instanceof ImportAssistant) {
< 					// strip assistant off
< 					res.add(arguments[i]);
< 				}
< 			}
< 			return res.toArray();
< 		}
< 
< 		private XpandExecutionContext createContext(StringBuilder result) {
< 			final BufferOutput output = new BufferOutput(result);
< 			final List<Variable> globals = Collections.emptyList();
< 			final XpandExecutionContext xpandContext = ContextFactory.createXpandContext(myResourceManager, output, globals);
< 			((XpandExecutionContextImpl) xpandContext).setContextClassLoader(getClass().getClassLoader());
< 			return xpandContext;
< 		}
---
> 	private TextEmitter newXpandEmitter(String definition) {
> 		return new XpandTextEmitter(myResourceManager, definition, getClass().getClassLoader());
