14,19d13
< import java.util.List;
< 
< import org.eclipse.emf.common.notify.Notification;
< import org.eclipse.emf.ecore.EObject;
< import org.eclipse.emf.ecore.resource.Resource;
< 
21,23d14
< import org.eclipse.gmf.runtime.emf.core.edit.MFilter;
< import org.eclipse.gmf.runtime.emf.core.edit.MListener;
< import org.eclipse.gmf.runtime.emf.core.util.ResourceUtil;
32c23
< public class DiagramDocument
---
> public final class DiagramDocument
36,37d26
< 	boolean fListenerEnabled = true;
< 	
58,119d46
< 	// very expensive listener
< 	MFilter diagramResourceFilter = new MFilter() {
< 		public boolean matches(Notification notification) {
< 			Diagram diagram = getDiagram();
< 			Object notifier = notification.getNotifier();
< 			if(diagram != null && notifier instanceof Resource) {
< 				Resource diagramResource = diagram.eResource();
< 				Resource notifierResource = (Resource)notifier;
< 				if(notifierResource == diagramResource) {
< 					if (notification.getEventType() == Notification.SET) {
< 						Resource resource = (Resource) notifier;
< 						EObject root = ResourceUtil.getFirstRoot(resource);
< 						int featureID = notification.getFeatureID(Resource.class);
< 						if (featureID == Resource.RESOURCE__IS_MODIFIED
< 							&& notification.getNewBooleanValue() != notification
< 								.getOldBooleanValue()) {
< 							if (resource != null && root != null
< 								&& root.eResource() != null
< 								&& root.eResource().equals(resource)
< 								&& resource.isLoaded()) {
< 
< 								if (notification.getNewBooleanValue()) {
< 									return true;
< //								} else {
< //									eventListener.handleResourceSavedEvent(
< //										notification, resource);
< 								}
< 							}
< 						}				
< 					}
< 				}
< 			}
< 			return false;
< 		};
< 	};
< 	
< 	MListener diagramChangeListener = null;
< 	
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument#enableDiagramListener()
< 	 */
< 	public boolean enableDiagramListener() {
< 		boolean oldState = fListenerEnabled;
< 		if(!oldState) {
< 			diagramChangeListener.startListening();
< 		}
< 		fListenerEnabled = true;
< 		return oldState;
< 	}
< 	
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument#disableDiagramListener()
< 	 */
< 	public boolean disableDiagramListener() {
< 		boolean oldState = fListenerEnabled;
< 		if(oldState) {
< 			diagramChangeListener.stopListening();
< 		}
< 		fListenerEnabled = false;
< 		return oldState;
< 	}
< 	
125,134d51
< 		if(fListenerEnabled) {
< 			if(diagramChangeListener == null) {
< 				diagramChangeListener = new MListener(diagramResourceFilter) {
< 					public void onEvent(List events) {
< 						fireDocumentChanged(new DocumentEvent(DiagramDocument.this, DocumentEvent.CONTENT_MODIFIED, events));
< 					}
< 				};
< 			}
< 			diagramChangeListener.startListening();
< 		}
152,163d68
< 		if(fDomain != domain) {
< 			if(diagramChangeListener != null)
< 				diagramChangeListener.stopListening();
< 			
< 			diagramChangeListener = new MListener(domain, diagramResourceFilter) {
< 				public void onEvent(List events) {
< 					fireDocumentChanged(new DocumentEvent(DiagramDocument.this, DocumentEvent.CONTENT_MODIFIED, events));
< 				}
< 			};
< 			if(fListenerEnabled)
< 				diagramChangeListener.startListening();
< 		}
