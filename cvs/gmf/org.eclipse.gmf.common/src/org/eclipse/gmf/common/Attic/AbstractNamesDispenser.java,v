head	1.2;
access;
symbols
	v20081015-1925:1.2
	v20080924-1925:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060616-1200:1.1
	v20060609-1400:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.06.26.14.23.18;	author atikhomirov;	state dead;
branches;
next	1.1;

1.1
date	2006.06.06.08.16.33;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.2
log
@not ready for API, internal for now
@
text
@/*
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.common;

import java.util.Collection;

/**
 * Base names dispenser implementation.
 * 
 * @@author dstadnik
 */
public abstract class AbstractNamesDispenser implements NamesDispenser {

	protected abstract Collection getNamesPool();

	protected static String composeName(String prefixPart, String semanticPart, String suffixPart) {
		String s = suffixPart == null ? semanticPart : semanticPart + suffixPart;
		return prefixPart == null ? s : prefixPart + s;
	}

	public boolean contains(String name) {
		return getNamesPool().contains(name);
	}

	public final String get(String semanticPart, String suffixPart) {
		return get(null, semanticPart, suffixPart);
	}

	public final String get(String semanticPart) {
		return get(null, semanticPart, null);
	}

	public boolean add(String name) {
		return getNamesPool().add(name);
	}

	public void clear() {
		getNamesPool().clear();
	}
}
@


1.1
log
@#144872 Unique figure and diagram element names should be used when graph def is generated for domain model with abstract class
@
text
@@

