head	1.2;
access;
symbols
	v20081015-1925:1.2
	v20080924-1925:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.05.18.19.12.37;	author atikhomirov;	state dead;
branches;
next	1.1;

1.1
date	2006.04.11.12.51.50;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Emitter became top-level entity (TextEmitter), oddness of JetAdapter and Emitter api were cleared.
GeneratorBase lost knowledge about JET.
Parts of gmf.common made internal to avoid possible API issues.
ImportAssistant refactored to know name of compilation unit to avoid problems like #134506.
FigureGenerator's reuse of ImportAssistant removed.
[mgolubev] Tests for #134506 and 142553
@
text
@/**
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    vano - initial API and implementation
 */
package org.eclipse.gmf.common.codegen;

import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;

import org.eclipse.emf.codegen.jet.JETCompiler;
import org.eclipse.emf.codegen.jet.JETException;


public class GIFEmitter {
	
	private String myLocation;

	public GIFEmitter(String location) {
		myLocation = location;
	}
	
	public byte[] generateGif() throws JETException {
		ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
		try {
			InputStream is = new BufferedInputStream(JETCompiler.openStream(myLocation));
			for (int next = is.read(); next != -1; next = is.read()) {
				outputStream.write(next);
			}
			is.close();
		} catch (IOException e) {
			throw new JETException(e);
		}
		return outputStream.toByteArray();
	}

}
@


1.1
log
@Move GIFEmitter to common plug-in to reuse in pure-gef codegen
@
text
@@

