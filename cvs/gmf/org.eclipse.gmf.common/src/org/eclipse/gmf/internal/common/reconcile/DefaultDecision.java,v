head	1.3;
access;
symbols
	v20081015-1925:1.3
	v20080930-1130:1.3
	v20080926-1245:1.3
	v20080924-1925:1.3
	v20080722-1827:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080610-1132:1.3
	v20080521:1.3
	v20080516-1143:1.3
	v20080508-2000:1.3
	v20080417-1610:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20071108-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2007.04.04.16.29.50;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	51544613d27e4567;

1.2
date	2007.03.29.20.10.34;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	4843460c1d3a4567;

1.1
date	2007.03.20.17.52.00;	author atikhomirov;	state Exp;
branches;
next	;
commitid	610746001f3f4567;


desc
@@


1.3
log
@bit of refactoring
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Michael Golubev (Borland) - initial API and implementation
 */

package org.eclipse.gmf.internal.common.reconcile;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;

public class DefaultDecision extends Decision {
	
	private boolean myInverted;

	public DefaultDecision(EStructuralFeature feature){
		this(feature, false);
	}
	
	public DefaultDecision(EStructuralFeature feature, boolean inverted){
		super(feature);
		myInverted = inverted;
	}
	
	public void apply(EObject current, EObject old) {
		assert current.eClass().equals(old.eClass());
		if (!(myInverted ^ isValueSet(current)) && (myInverted ^ isValueSet(old))) {
			preserveOld(current, old);
		} else {
			acceptNew(current, old);
		}
	}
}
@


1.2
log
@Reconciling GenNavigator properties
@
text
@d33 1
a33 1
		if (!(myInverted ^ current.eIsSet(getFeature())) && (myInverted ^ old.eIsSet(getFeature()))) {
a38 1

@


1.1
log
@merged DecisionMaker and Decision into single Decision class, subclasses renamed accordingly (DefaultDecisionMaker as DefaultDecision and StringPatternDecisionMaker as StringPatternDecision).
@
text
@d19 3
d23 4
d28 1
d33 1
a33 1
		if (!current.eIsSet(getFeature()) && old.eIsSet(getFeature())) {
d39 1
@

