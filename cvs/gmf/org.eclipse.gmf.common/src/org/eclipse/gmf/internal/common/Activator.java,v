head	1.2;
access;
symbols
	v20081015-1925:1.2
	v20080930-1130:1.2
	v20080926-1245:1.2
	v20080924-1925:1.2
	v20080722-1827:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080521:1.2
	v20080516-1143:1.2
	v20080508-2000:1.2
	v20080417-1610:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20071108-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070520-1200:1.2
	v20070518-1300:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.11.13.13.54.31;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.13.13.22.15;	author atikhomirov;	state Exp;
branches;
next	;
commitid	52a5455871864567;


desc
@@


1.2
log
@missed copyright stmt
@
text
@/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.common;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Plugin;
import org.eclipse.core.runtime.Status;
import org.osgi.framework.BundleContext;


public class Activator extends Plugin {
	private static Activator anInstance;

	public Activator() {
	}

	@@Override
	public void start(BundleContext context) throws Exception {
		super.start(context);
		anInstance = this;
	}

	@@Override
	public void stop(BundleContext context) throws Exception {
		anInstance = null;
		super.stop(context);
	}

	public static String getID() {
		return anInstance.getBundle().getSymbolicName();
	}

	public static void log(IStatus s) {
		anInstance.getLog().log(s);
	}

	public static void logError(String message, Exception ex) {
		assert ex != null;
		if (message == null) {
			message = ex.getMessage() == null ? new String() : ex.getMessage();
		}
		log(new Status(IStatus.ERROR, getID(), 0, message, ex));
	}
}
@


1.1
log
@do not use hardcoded plugin id
@
text
@d1 11
@

