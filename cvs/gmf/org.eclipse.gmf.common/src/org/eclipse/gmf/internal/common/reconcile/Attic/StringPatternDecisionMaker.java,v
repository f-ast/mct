head	1.2;
access;
symbols
	v20081015-1925:1.2
	v20080924-1925:1.2
	v20070307-0700:1.1
	v20070301-1200:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	v20060925-1700:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.03.20.17.51.59;	author atikhomirov;	state dead;
branches;
next	1.1;
commitid	610746001f3f4567;

1.1
date	2006.03.13.12.02.47;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merged DecisionMaker and Decision into single Decision class, subclasses renamed accordingly (DefaultDecisionMaker as DefaultDecision and StringPatternDecisionMaker as StringPatternDecision).
@
text
@/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Michael Golubev (Borland) - initial API and implementation
 */

package org.eclipse.gmf.internal.common.reconcile;

import java.util.regex.Pattern;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EcorePackage;

public class StringPatternDecisionMaker extends DecisionMaker {
	private Pattern myPattern;
	
	public StringPatternDecisionMaker(String valuePattern, EAttribute attribute){
		this(Pattern.compile(valuePattern), attribute);
	}
	
	public StringPatternDecisionMaker(Pattern valuePattern, EAttribute attribute){
		super(attribute);
		if (attribute.getEAttributeType() != EcorePackage.eINSTANCE.getEString()){
			throw new IllegalArgumentException("Expected string attribute");
		}
		if (attribute.getUpperBound() != 1){
			throw new IllegalArgumentException("Expected multiplicity [0..1] or [1]");
		}
		myPattern = valuePattern;
	}
	
	public Decision makeDecision(EObject current, EObject old) {
		String oldValue = (String)old.eGet(getFeature());
		if (oldValue != null && !myPattern.matcher(oldValue).matches()){
			return Decision.PRESERVE_OLD;
		} else {
			return Decision.ACCEPT_NEW;
		}
	}

}
@


1.1
log
@[mgolubev] #131355 Preserve modified gmfgen attributes which initialy had some default values
@
text
@@

