head	1.5;
access;
symbols
	v20081015-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080722-1827:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080521:1.5
	v20080516-1143:1.5
	v20080508-2000:1.5
	v20080417-1610:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20071108-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070427-0600:1.5
	v20070420-1000:1.5
	v20070413-1300:1.4
	v20070405-1100:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.4
	v20070307-0700:1.3
	v20070301-1200:1.3
	v20070228-2000:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3
	M1_20:1.1
	v20060904-1500:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.04.18.13.13.08;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	24ff462619634567;

1.4
date	2007.03.19.16.49.09;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	5cce45febf044567;

1.3
date	2006.09.22.17.19.57;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.19.14.46.33;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.28.13.18.03;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[181187] akarjakina - Need a method to add extension models to gmfgen model
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.common.ui;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.events.SelectionListener;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.List;

/**
 * @@author dstadnik
 */
public abstract class ListElementSelectorExtension extends ElementSelectorExtension {

	protected List list;

	public void createControl(Composite parent) {
		Composite plate = new Composite(parent, SWT.NONE);
		{
			GridLayout layout = new GridLayout();
			plate.setLayout(layout);

			GridData data = new GridData();
			data.horizontalAlignment = GridData.FILL;
			data.grabExcessHorizontalSpace = true;
			data.verticalAlignment = GridData.FILL;
			data.grabExcessVerticalSpace = true;
			plate.setLayoutData(data);
		}
		Label label = new Label(plate, SWT.NONE);
		label.setText(getModelElementName());
		{
			GridData data = new GridData();
			label.setLayoutData(data);
		}
		list = new List(plate, SWT.SINGLE | SWT.V_SCROLL | SWT.BORDER);
		list.setEnabled(false);
		{
			GridData data = new GridData();
			data.horizontalAlignment = GridData.FILL;
			data.grabExcessHorizontalSpace = true;
			data.verticalAlignment = GridData.FILL;
			data.grabExcessVerticalSpace = true;
			list.setLayoutData(data);
		}

		// logic

		list.addSelectionListener(new SelectionListener() {

			public void widgetDefaultSelected(SelectionEvent e) {
			}

			public void widgetSelected(SelectionEvent e) {
				selectedModelElement = modelElements.get(list.getSelectionIndex());
				fireModelElementChanged();
			}
		});
	}

	public void setResource(Resource resource) {
		selectedModelElement = null;
		modelElements.clear();
		list.removeAll();
		if (resource == null) {
			list.setEnabled(false);
		} else {
			list.setEnabled(true);
			modelElements = getModelElements(resource);
			for (EObject next : modelElements) {
				list.add(getModelElementLabel(next));
			}
			if (!modelElements.isEmpty()) {
				selectedModelElement = modelElements.get(0);
				list.select(0);
			}
		}
		fireModelElementChanged();
	}
}
@


1.4
log
@EMF 2.3 M5 and Java 5 cleanup
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Eclipse.org
d51 1
a51 1
		list = new List(plate, SWT.SINGLE | SWT.V_SCROLL);
@


1.3
log
@issue notifications when contents are changed
@
text
@a13 2
import java.util.Iterator;

d70 1
a70 1
				selectedModelElement = (EObject) modelElements.get(list.getSelectionIndex());
d85 2
a86 2
			for (Iterator it = modelElements.iterator(); it.hasNext();) {
				list.add(getModelElementLabel((EObject) it.next()));
d89 1
a89 1
				selectedModelElement = (EObject) modelElements.get(0);
@


1.2
log
@add copyright header
@
text
@d73 1
d95 1
@


1.1
log
@#155014 Default gmfmap model creation wizard should create initial content
@
text
@d1 11
@

