head	1.2;
access;
symbols
	v20081015-1925:1.2
	v20080924-1925:1.2
	v20070518-1300:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20070307-0700:1.1
	v20070301-1200:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	M1_20:1.1
	v20060904-1500:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.05.18.20.39.13;	author atikhomirov;	state dead;
branches;
next	1.1;
commitid	58f6464e0ef14567;

1.1
date	2006.08.29.17.46.28;	author radvorak;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[187811] akarjakina - Migration support refactored
@
text
@/*
 * Copyright (c) 2005 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License v1.0 which
 * accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors: Radek Dvorak (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.common.migrate;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.gmf.internal.common.ToolingResourceFactory;


/**
 * Backward compatible tooling resource factory, creates resource supporting loading of serialized 
 * contents of incompatible historical versions of tooling models.
 * <p>
 * The resources from this factory handle backward compatibility as follows:<p>
 * If old model version is recognized and resource is loaded with errors, 
 * the loaded resource records a diagnostic indicating old version as possible impact for 
 * loading and proposes to run migration.<br>
 * No load-time migration is performed automatically and migration + overwriting the original 
 * model resource is an explicit step to be done by the user.<br>
 * <b>Note</b>: Backward incompatibilities may cause throwing runtime exceptions during load operation which 
 * is the feature of EMF.
 * <p>
 * For performing in-memory migration at load-time use {@@link CompatibleToolResourceFactory.MigrateOnLoad } factory.
 */
public class CompatibleToolResourceFactory extends ToolingResourceFactory {
	
	/**
	 * This variant of factory produce resources which ensures that old version contents 
	 * is loaded correctly. In case, an obsolete contents is loaded, in-memory migration 
	 * at load-time is performed and loaded resource reports diagnostic 'migration required'.
	 */
	public static class MigrateOnLoad extends ToolingResourceFactory {

		public MigrateOnLoad() {
			super();
		}
		
		public Resource createResource(URI uri) {		
			return MigrationResource.createCheckAndMigrateOnLoadResource(uri);
		}
	}
	
	public CompatibleToolResourceFactory() {
		super();
	}

	public Resource createResource(URI uri) {
		return MigrationResource.createCheckedResource(uri);
	}
}
@


1.1
log
@#154698 Support migration of GMF tooling models in case of backward incomatible changes
@
text
@@

