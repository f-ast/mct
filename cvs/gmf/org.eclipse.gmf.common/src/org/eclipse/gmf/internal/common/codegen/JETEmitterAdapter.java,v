head	1.2;
access;
symbols
	v20081015-1925:1.2
	v20080930-1130:1.2
	v20080926-1245:1.2
	v20080924-1925:1.2
	v20080722-1827:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080521:1.2
	v20080516-1143:1.2
	v20080508-2000:1.2
	v20080417-1610:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20071108-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070520-1200:1.2
	v20070518-1300:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	M4_20:1.1
	v20061222-1800:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	v20060925-1700:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.01.31.18.29.28;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	5f9d45c0e0044567;

1.1
date	2006.05.18.19.12.37;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@move implementation-specific parameter wrapping logic to appropriate emitter
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.common.codegen;

import java.lang.reflect.InvocationTargetException;

import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.codegen.jet.JETEmitter;
import org.eclipse.emf.codegen.jet.JETException;

/**
 * @@author artem
 */
public class JETEmitterAdapter implements TextEmitter {
	private final JETEmitter myEmitter;

	public JETEmitterAdapter(JETEmitter emitter){
		myEmitter = emitter;
	}
	
	public String generate(IProgressMonitor monitor, Object[] params) throws InterruptedException, InvocationTargetException {
		try {
			if (monitor != null && monitor.isCanceled()) {
				throw new InterruptedException();
			}
			return myEmitter.generate(monitor, adaptArgumentsForSkeleton(params));
		} catch (JETException ex) {
			throw new InvocationTargetException(ex);
		}
	}

	/**
	 * JET's generate() method usually takes single argument as input, unless overriden in skeleton 
	 */
	protected Object[] adaptArgumentsForSkeleton(Object[] params) {
		if (params == null || params.length <= 1) {
			return params;
		}
		// more than one argument, hence need to wrap into single object
		return new Object[] { params };
	}
}
@


1.1
log
@Emitter became top-level entity (TextEmitter), oddness of JetAdapter and Emitter api were cleared.
GeneratorBase lost knowledge about JET.
Parts of gmf.common made internal to avoid possible API issues.
ImportAssistant refactored to know name of compilation unit to avoid problems like #134506.
FigureGenerator's reuse of ImportAssistant removed.
[mgolubev] Tests for #134506 and 142553
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
d35 1
a35 1
			return myEmitter.generate(monitor, params);
d40 11
@

