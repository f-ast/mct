head	1.4;
access;
symbols
	v20081015-1925:1.4
	v20080930-1130:1.4
	v20080926-1245:1.4
	v20080924-1925:1.4
	v20080722-1827:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080521:1.4
	v20080516-1143:1.4
	v20080508-2000:1.4
	v20080417-1610:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20071108-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070427-0600:1.4
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20070307-0700:1.3
	v20070301-1200:1.3
	v20070228-2000:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3
	M1_20:1.3
	v20060904-1500:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.04.25.11.27.36;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	7f9e462f3b274567;

1.3
date	2006.09.01.16.03.18;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.23.09.11.38;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.21.13.48.46;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.4
log
@moving towards 146774 - merge for manifest.mf
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitri Stadnik (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.common.codegen;

/**
 * @@author dstadnik
 */
public class TextMerger {
	public String mergeJava(String oldText, String newText) {
		return newText;
	}

	public String mergeProperties(String oldText, String newText) {
		return newText;
	}

	public String mergeXML(String oldText, String newText) {
		return newText;
	}

	public String mergePluginXML(String oldText, String newText) {
		return newText;
	}

	public String mergeManifestMF(String oldText, String newText) {
		return newText;
	}

	public String process(String fileName, String oldText, String newText) {
		if (fileName == null) {
			return newText;
		}
		if (fileName.endsWith(".java")) {
			return mergeJava(oldText, newText);
		} else if (fileName.endsWith(".xml")) {
			if (fileName.equals("plugin.xml")) {
				return mergePluginXML(oldText, newText);
			}
			return mergeXML(oldText, newText);
		} else if (fileName.endsWith(".properties")) {
			return mergeProperties(oldText, newText);
		} else if (fileName.equals("MANIFEST.MF")) {
			return mergeManifestMF(oldText, newText);
		}
		return newText;
	}
}
@


1.3
log
@refactoring: abstract use of JMerge for merging away from generator services (GeneratorBase)
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
d30 13
a42 2
	public String process(String fileNameExt, String oldText, String newText) {
		if ("java".equals(fileNameExt)) {
d44 4
a47 1
		} else if ("xml".equals(fileNameExt)) {
d49 1
a49 1
		} else if ("properties".equals(fileNameExt)) {
d51 2
@


1.2
log
@use emf property merger
@
text
@d1 11
d17 4
a20 1
public abstract class TextMerger {
d22 3
a24 1
	protected static final String TAG = "gmf generator persistent region"; //$NON-NLS-1$
d26 3
a28 3
	protected static final String BEGIN_TAG = TAG + " begin"; //$NON-NLS-1$

	protected static final String END_TAG = TAG + " end"; //$NON-NLS-1$
d30 7
a36 9
	// private static final TextMerger PRP = new TaggedTextMerger("# " + BEGIN_TAG, "# " + END_TAG); //$NON-NLS-1$ //$NON-NLS-2$

	private static final TextMerger PRP = new PropertiesTextMerger();

	private static final TextMerger XML = new TaggedTextMerger("<!-- " + BEGIN_TAG + " -->", "<!-- " + END_TAG + " -->"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$

	public static TextMerger getForFile(String name) {
		if (name.endsWith(".properties")) { //$NON-NLS-1$
			return PRP;
d38 1
a38 4
		if (name.endsWith(".xml")) { //$NON-NLS-1$
			return XML;
		}
		return null;
a39 2

	public abstract String process(String oldText, String newText);
@


1.1
log
@add file merge support for other text files (!java)
@
text
@d14 3
a16 1
	private static final TextMerger PRP = new TaggedTextMerger("# " + BEGIN_TAG, "# " + END_TAG); //$NON-NLS-1$ //$NON-NLS-2$
@

