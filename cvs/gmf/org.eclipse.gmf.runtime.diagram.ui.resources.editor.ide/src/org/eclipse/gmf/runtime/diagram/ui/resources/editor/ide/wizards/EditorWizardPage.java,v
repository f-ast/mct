head	1.6;
access;
symbols
	v20081020-0700:1.6
	v20080722-1827:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080425-1959:1.6
	v20080222-1200:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070601-1400:1.6
	v20070518-1300:1.6
	v20070330-1300:1.6
	v20070208-1800:1.6
	v20070105-1200:1.5.2.1
	M4_20:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061013-1330:1.6
	v20060919-0800:1.5.2.1
	M1_20:1.5
	v20060817-1500:1.5
	v20060803-1200:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060526-1200:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051201-1800:1.4
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.6
date	2006.10.03.15.04.53;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.07.15.19.22;	author mmostafa;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2005.11.25.19.37.50;	author cmahoney;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.14.16.52.32;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.24.50;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.54;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.09.13.16.43.33;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.wizards;


import java.io.InputStream;
import java.lang.reflect.InvocationTargetException;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.common.util.URI;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.internal.l10n.EditorMessages;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.util.IDEEditorUtil;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.EditorDebugOptions;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.EditorPlugin;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.EditorStatusCodes;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.util.DiagramFileCreator;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.util.EditorUtil;
import org.eclipse.jface.dialogs.ErrorDialog;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.osgi.util.NLS;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.actions.WorkspaceModifyOperation;
import org.eclipse.ui.dialogs.WizardNewFileCreationPage;
;

/**
 * @@author qili
 * @@canBeSeenBy %level1
 * 
 * Create Diagram Wizard Page
 */
public abstract class EditorWizardPage
	extends WizardNewFileCreationPage {
	
	/** workbench */
	protected final IWorkbench workbench;
	
	/**
	 * the selection holding the elements to be displayed
	 */
	private final IStructuredSelection selection;
	
	/**
	 * the diagram file for the newlt created diagram
	 */
	protected IFile diagramFile;
	
	/**
	 * A flag indicating whether or not to open the editor of the newly created diagram
	 * The default is true
	 */
	protected boolean openNewlyCreatedDiagramEditor;

	/**
	 * EditorWizardPage constructor
	 *
	 * @@param pageName the page name
	 * @@param aWorkbench
	 *            workbench the workbench this page will be displayed in
	 * @@param selection
	 *            selection the current selection
	 */
	public EditorWizardPage(String pageName, IWorkbench aWorkbench,
			IStructuredSelection selection) {
		super(pageName, selection);
		this.workbench = aWorkbench;
		this.selection = selection;
		this.diagramFile = null;
		this.openNewlyCreatedDiagramEditor = true;
	}

	/**
	 * @@param monitor the <code>IProgressMonitor</code> to use to indicate progress and check for cancellation
	 * @@return boolean indicating whether the creation and opening the Diagram was successful
	 */
	public boolean doFinish(IProgressMonitor monitor) {
		diagramFile = createAndOpenDiagram(
				getContainerFullPath(),
				getFileName(),
				getInitialContents(),
				getDiagramKind(),
				workbench.getActiveWorkbenchWindow(),
				monitor,
				true);

		return diagramFile != null;
	}

	/**
	 * @@param containerPath
	 * @@param fileName
	 * @@param initialContents
	 * @@param kind
	 * @@param dWindow
	 * @@param progressMonitor
	 * @@param saveDiagram
	 * @@return
	 */
	public IFile createAndOpenDiagram(
			IPath containerPath,
			String fileName,
			InputStream initialContents,
			String kind,
			IWorkbenchWindow dWindow,
			IProgressMonitor progressMonitor,
			boolean saveDiagram) {
		return IDEEditorUtil.createAndOpenDiagram(
				getDiagramFileCreator(),
				containerPath,
				fileName,
				initialContents,
				kind,
				dWindow,
				progressMonitor,
				isOpenNewlyCreatedDiagramEditor(),
				saveDiagram);
	}
	
	/**
	 * Answers whether or not this Wizard will open the editor of the newly created diagram
	 * @@return Returns the openNewlyCreatedDiagramEditor.
	 */
	public boolean isOpenNewlyCreatedDiagramEditor() {
		return openNewlyCreatedDiagramEditor;
	}
	
	/**
	 * Sets a flag indicating whether or not the newly created diagram editor should be opened 
	 * @@param openNewlyCreatedDiagramEditor The openNewlyCreatedDiagramEditor to set.
	 */
	public void setOpenNewlyCreatedDiagramEditor(
			boolean openNewlyCreatedDiagramEditor) {
		this.openNewlyCreatedDiagramEditor = openNewlyCreatedDiagramEditor;
	}
	
	
	/**
	 * Performs the operations necessary to create and open the diagram
	 * @@return boolean indicating whether the creation and opening the Diagram was successful 
	 */
	public boolean finish() {
		final boolean[] result = new boolean[1];
		WorkspaceModifyOperation op = new WorkspaceModifyOperation(null) {
			protected void execute(IProgressMonitor monitor) throws CoreException, InterruptedException {
				result[0] = doFinish(monitor);
			}
		};

		try {
			getContainer().run(false, true, op);
		} catch (InterruptedException e) {
			return false;
		} catch (InvocationTargetException e) {
			if (e.getTargetException() instanceof CoreException) {
				ErrorDialog.openError(
					getContainer().getShell(),
					EditorMessages.EditorWizardPage_DialogInternalErrorTitle,
					null,	// no special message
					((CoreException) e.getTargetException()).getStatus());
			}
			else {
				// CoreExceptions are handled above, but unexpected runtime exceptions and errors may still occur.
				Trace.catching(EditorPlugin.getInstance(), EditorDebugOptions.EXCEPTIONS_CATCHING, getClass(), "finish", e.getTargetException()); //$NON-NLS-1$
				Log.error(EditorPlugin.getInstance(), EditorStatusCodes.ERROR, EditorMessages.WizardPage_DIAGRAM_CREATION_FAIL_EXC_, e.getTargetException());
			}
			return false;
		}
		return result[0];
	}
	
	/**
	 * Accessor for the diagram's file
	 * @@return IFile the file owning the diagram
	 */
	public final IFile getDiagramFile() {
		return diagramFile;
	}
	
	/**
	 * @@return the default file name
	 */
	protected String getDefaultFileName() {
		return null;
	}

	/**
	 * @@return the diagram file creator
	 */
	public abstract DiagramFileCreator getDiagramFileCreator();

	/**
	 * @@return the diagram kind
	 */
	protected String getDiagramKind() {
		return null;
	}
	
	
	/* (non-Javadoc)
	 * @@see org.eclipse.ui.dialogs.WizardNewFileCreationPage#getInitialContents()
	 */
	protected InputStream getInitialContents() {
		return EditorUtil.getInitialContents();
	}
	
	/**
	 * Returns the current file name as entered by the user, or its anticipated
	 * initial value.
	 *
	 * @@return the file name, its anticipated initial value, or <code>null</code>
	 *   if no file name is known
	 */
	public String getFileName() {
		String fileName = super.getFileName();

		if (fileName != null)
			fileName = getDiagramFileCreator().appendExtensionToFileName(fileName);

		return fileName;
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.ui.dialogs.WizardNewFileCreationPage#validatePage()
	 */
	protected boolean validatePage() {
		if (super.validatePage()) {
			// do additional validation on the anticipated filename
			String fileName = getFileName();

			if (fileName == null)
				return false;

			IPath path = getContainerFullPath().append(fileName);

			if (ResourcesPlugin.getWorkspace().getRoot().exists(path)) {
				setErrorMessage(EditorMessages.WizardPage_Message_FileExists_ERROR_);
				return false;
			}

			// Some characters reserved in URI should be checked here. :,#,\,/
			URI fileURI = URI.createFileURI(path.toString());
			String ext = fileURI.fileExtension(); 

			if (ext != null
				&& getDiagramFileCreator().getExtension().equals("." + ext)) { //$NON-NLS-1$
				return true;
			}

			setErrorMessage(NLS.bind(EditorMessages.EditorWizardPage_InvalidFilename, fileName));
		}

		return false;
	}

	/**
	 * Accessor for selected elements
	 * @@return IStructuredSelection the selection holding the elements to be displayed on the diagram 
	 */
	public final IStructuredSelection getSelection() {
		return selection;
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.jface.dialogs.IDialogPage#createControl(org.eclipse.swt.widgets.Composite)
	 */
	public void createControl(Composite parent) {
		super.createControl(parent);

		IPath path = getContainerFullPath();

		if (null != path) {
			String fileName = getDiagramFileCreator().getUniqueFileName(path,
				getDefaultFileName());

			setFileName(fileName);
		}

		setPageComplete(validatePage());
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.ui.dialogs.WizardNewFileCreationPage#initialPopulateContainerNameField()
	 */
	protected void initialPopulateContainerNameField() {
		IPath path = EditorUtil.getDefaultDiagramPath(selection.toList(), getDiagramKind());

		if (path == null) {
			super.initialPopulateContainerNameField();

			path = getContainerFullPath();

			if (path == null) {
				IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
				IProject[] projects = root.getProjects();

				path = root.getFullPath();

				for (int i = 0; i < projects.length; ++i) {
					IProject project = projects[i];

					if (project.isOpen()) {
						path = project.getFullPath();
						break;
					}
				}
			}
		}

		setContainerFullPath(path);
 	}

}

@


1.5
log
@bugzilla 117592 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.5.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.4
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d198 2
a199 2
	/* (non-Javadoc)
	 * @@see com.ibm.xtools.viz.ui.internal.wizards.DiagramWizardPage#getDefaultFileName()
d205 2
a206 2
	/* (non-Javadoc)
	 * @@see com.ibm.xtools.viz.ui.internal.wizards.DiagramWizardPage#getDiagramFileCreator()
d210 2
a211 2
	/* (non-Javadoc)
	 * @@see com.ibm.xtools.viz.ui.internal.wizards.DiagramWizardPage#getDiagramKind()
d261 1
a261 1
			String ext = fileURI.fileExtension(); //$NON-NLS-1$
@


1.3
log
@Bugzilla 108928 gmf_head 051114 tmacdoug - org.eclipse.gmf.runtime.diagram.ui.resources.editor API issues
@
text
@a16 1
import java.text.MessageFormat;
a25 8
import org.eclipse.jface.dialogs.ErrorDialog;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.actions.WorkspaceModifyOperation;
import org.eclipse.ui.dialogs.WizardNewFileCreationPage;

d28 1
a28 1
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.internal.l10n.ResourceManager;
d35 8
d176 1
a176 1
					ResourceManager.getI18NString("EditorWizardPage.DialogInternalErrorTitle"),//$NON-NLS-1$
d183 1
a183 1
				Log.error(EditorPlugin.getInstance(), EditorStatusCodes.ERROR, ResourceManager.getI18NString("WizardPage.DIAGRAM_CREATION_FAIL_EXC_"), e.getTargetException());//$NON-NLS-1$
d255 1
a255 1
				setErrorMessage(ResourceManager.getI18NString("WizardPage.Message.FileExists_ERROR_")); //$NON-NLS-1$
d268 1
a268 1
			setErrorMessage(MessageFormat.format(ResourceManager.getI18NString("EditorWizardPage.InvalidFilename"), new String[] {fileName}));//$NON-NLS-1$
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d42 2
a43 2
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.util.EditorFileCreator;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.util.EditorUtil;
d209 1
a209 1
	public abstract EditorFileCreator getDiagramFileCreator();
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

