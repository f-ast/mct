head	1.5;
access;
symbols
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051201-1800:1.4
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.4;
locks; strict;
comment	@# @;


1.5
date	2006.02.28.02.32.26;	author cmahoney;	state dead;
branches;
next	1.4;

1.4
date	2005.09.12.21.24.50;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.06.20.55.07;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.45;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.55;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bugzilla#109422 gmf_head cmahoney 060227 Removing deprecated API
@
text
@/******************************************************************************
 * Copyright (c) 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.parts;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.internal.EditorIDEPlugin;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.ui.parts.Editor;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.util.Util;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.jface.operation.IRunnableWithProgress;
import org.eclipse.ui.IEditorInput;
import org.eclipse.ui.IFileEditorInput;
import org.eclipse.ui.actions.WorkspaceModifyOperation;
import org.eclipse.ui.dialogs.SaveAsDialog;
import org.eclipse.ui.part.FileEditorInput;


/**
 * An editor suited for use in an IDE.  The expected input is an
 * IFileEditorInput.
 * 
 * @@author wdiu, Wayne Diu, refactored from qli's Editor
 * @@deprecated
 */
public class IDEEditor extends Editor {

	/**
	 * Checks if the specified input for this editor is supported.
	 * 
	 * @@param input IEditorInput to check
	 * @@return boolean true if the input is supported, false if it isn't 
	 */
	protected boolean checkInput(IEditorInput input) {
		//we do not support IStorageEditorInput directly
		return input instanceof IFileEditorInput;
	}

	/**
	 * Returns true if the IEditorInput for this editor is file based.
	 * Returns false if the IEditorInput for this editor isn't file based.
	 * 
	 * @@return boolean true if the IEditorInput for this editor is file based,
	 * false if the IEditorInput for this editor isn't file based.
	 */
	protected boolean isFileBased() {
		return getEditorInput() instanceof IFileEditorInput;
	}

	/**
	 * Returns an IEditorInput based on the specified IFile.
	 * 
	 * @@param file the new IEditorInput will be based on this IFile. 
	 * @@return IEditorInput based on the specified IFile. 
	 */
	protected IEditorInput makeInputFromFile(IFile file) {
		return new FileEditorInput(file);
	}
	
	/**
	 * Returns an IEditorInput based on the specified IFile.
	 * 
	 * @@param file the new IEditorInput will be based on this IFile. 
	 * @@return IEditorInput based on the specified IFile. 
	 */
	protected IEditorInput makeInputFromFileAndDiagram(IFile file, Diagram diagram) {
		return new IDEEditorInput(file, diagram);
	}	
	
	/**
	 * Returns an IEditorInput based on the specified IFile.
	 * 
	 * @@param file the new IEditorInput will be based on this IFile. 
	 * @@return IEditorInput based on the specified IFile. 
	 */
	protected IEditorInput makeInputFromFileAndDiagram(IFile file) {
		return new FileEditorInput(file);
	}	

	/**
	 * Returns an IRunnableWithProgress that performs a save operation.
	 * 
	 * @@param IFile the file to be saved
	 * @@param clone true to clone the file, false not to
	 * @@param progressMonitor the IProgressMonitor used for the save
	 * operation
	 */
	protected IRunnableWithProgress getSaveRunnable(final IFile file, final boolean clone, final IProgressMonitor progressMonitor) {
		return new WorkspaceModifyOperation() {
			public void execute(final IProgressMonitor monitor)
				throws CoreException {
				try {
					IDEEditor.super.doSave(file, clone, monitor);
				} catch (Exception e) {
					Util.reportException(e, null, null, EditorIDEPlugin.getPluginId());
				}
			}
		};
	}
	
	/**
	 * Displays the Eclipse IDE's save as dialog in order to obtain the
	 * IFile for saving.
	 * 
	 * @@param progressMonitor the IProgressMonitor used for the save as
	 * operation
	 * @@return IFile the IFile that the contents of the editor will be saved in 
	 */
	protected IFile getIFileForSaveAs(IProgressMonitor progressMonitor) {
		SaveAsDialog dialog =
			new SaveAsDialog(getSite().getWorkbenchWindow().getShell());
		// Only set the original file if it is file based.
		if(isFileBased()) 
			dialog.setOriginalFile(getFile());
		dialog.open();
		IPath path = dialog.getResult();

		if (path == null) {
			if (progressMonitor != null)
				progressMonitor.setCanceled(true);
			return null;
		}

		return
			ResourcesPlugin.getWorkspace().getRoot().getFile(path);
		
	}
	
	/**
	 * Returns an IFile for the specified editor input.
	 * 
	 * @@param IEditorInput to get the IFile from.
	 */
	protected IFile getFile(IEditorInput input) {
		assert checkInput(input);
		return ((IFileEditorInput) input).getFile();
	}
	
}@


1.4
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@@


1.3
log
@bugzilla 108310 gmf-head sshaw 050824 API analysis of draw2d / draw2d.render plug-ins
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d17 4
a27 5
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.internal.EditorIDEPlugin;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.ui.parts.Editor;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.util.Util;
import org.eclipse.gmf.runtime.notation.Diagram;

@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d27 1
a27 1
import com.ibm.xtools.notation.Diagram;
@

