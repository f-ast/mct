head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.6
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080516-1748:1.5
	v20080425-1959:1.5
	v20080222-1200:1.5
	v20080114-1111:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070413-1300:1.5
	v20070330-1300:1.5
	v20070221-1500:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20060925-1700:1.5
	v20060919-0800:1.5
	v20060907-1100:1.5
	M1_20:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060526-1200:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.5
date	2005.11.25.19.36.46;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.29.23;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.23.20.55.59;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.30.15;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.34;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051125 Removing deprecated classes
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.ui.services.modelingassistant;

import java.util.Collections;
import java.util.List;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.runtime.common.core.service.AbstractProvider;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;

/**
 * Abstract class for the Modeling Assistant Provider so that subclasses don't
 * have to override methods they do not provide for. Provides some default
 * behavior.
 * 
 * @@author cmahoney
 */
public abstract class ModelingAssistantProvider
	extends AbstractProvider
	implements IModelingAssistantProvider {

	/**
	 * <p>
	 * For the <code>Get*TypesFor*</code> operations, this will return true if
	 * the corresponding <code>get*TypesFor*</code> call does not return an
	 * empty list.
	 * </p>
	 * 
	 * <p>
	 * For the <code>SelectElementFor*</code> operations, this will return
	 * true if the corresponding <code>getTypesFor*</code> call does not
	 * return an empty list.
	 * </p>
	 */
	public boolean provides(IOperation operation) {
		if (operation instanceof GetRelTypesOnSourceOperation) {

			return !getRelTypesOnSource(
				((GetRelTypesOnSourceOperation) operation).getSource())
				.isEmpty();

		} else if (operation instanceof GetRelTypesOnTargetOperation) {

			return !getRelTypesOnTarget(
				((GetRelTypesOnTargetOperation) operation).getTarget())
				.isEmpty();

		} else if (operation instanceof GetRelTypesOnSourceAndTargetOperation) {

			return !getRelTypesOnSourceAndTarget(
				((GetRelTypesOnSourceAndTargetOperation) operation).getSource(),
				((GetRelTypesOnSourceAndTargetOperation) operation).getTarget())
				.isEmpty();

		} else if (operation instanceof GetTypesForSourceOperation) {

			return !getTypesForSource(
				((GetTypesForSourceOperation) operation).getTarget(),
				((GetTypesForSourceOperation) operation).getRelationshipType())
				.isEmpty();

		} else if (operation instanceof GetTypesForTargetOperation) {

			return !getTypesForTarget(
				((GetTypesForTargetOperation) operation).getSource(),
				((GetTypesForTargetOperation) operation).getRelationshipType())
				.isEmpty();

		} else if (operation instanceof GetRelTypesForSREOnSourceOperation) {

			return !getRelTypesForSREOnSource(
				((GetRelTypesForSREOnSourceOperation) operation).getSource())
				.isEmpty();

		} else if (operation instanceof GetRelTypesForSREOnTargetOperation) {

			return !getRelTypesForSREOnTarget(
				((GetRelTypesForSREOnTargetOperation) operation).getTarget())
				.isEmpty();

		} else if (operation instanceof SelectExistingElementForSourceOperation) {

			return !getTypesForSource(
				((SelectExistingElementForSourceOperation) operation)
					.getTarget(),
				((SelectExistingElementForSourceOperation) operation)
					.getRelationshipType()).isEmpty();

		} else if (operation instanceof SelectExistingElementForTargetOperation) {

			return !getTypesForTarget(
				((SelectExistingElementForTargetOperation) operation)
					.getSource(),
				((SelectExistingElementForTargetOperation) operation)
					.getRelationshipType()).isEmpty();

		} else if (operation instanceof GetTypesOperation) {

			return !getTypes(((GetTypesOperation) operation).getHint(),
				((GetTypesOperation) operation).getData()).isEmpty();

		} else if (operation instanceof GetTypesForPopupBarOperation) {

			return !getTypesForPopupBar(
				((GetTypesForPopupBarOperation) operation).getHost())
				.isEmpty();

		}
		return false;
	}

	/**
	 * Returns an empty list.
	 */
	public List getTypes(String hint, IAdaptable data) {
		return Collections.EMPTY_LIST;
	}

	/**
	 * Returns the same list of relationship types as
	 * <code>getRelTypesOnSource</code>.
	 */
	public List getRelTypesForSREOnSource(IAdaptable source) {
		return getRelTypesOnSource(source);
	}

	/**
	 * Returns the same list of relationship types as
	 * <code>getRelTypesOnTarget</code>.
	 */
	public List getRelTypesForSREOnTarget(IAdaptable target) {
		return getRelTypesOnTarget(target);
	}

	/**
	 * Returns an empty list.
	 */
	public List getRelTypesOnSource(IAdaptable source) {
		return Collections.EMPTY_LIST;
	}

	/**
	 * Returns an empty list.
	 */
	public List getRelTypesOnTarget(IAdaptable target) {
		return Collections.EMPTY_LIST;
	}

	/**
	 * Returns an empty list.
	 */
	public List getRelTypesOnSourceAndTarget(IAdaptable source,
			IAdaptable target) {
		return Collections.EMPTY_LIST;
	}

	/**
	 * Returns an empty list.
	 */
	public List getTypesForSource(IAdaptable target,
			IElementType relationshipType) {
		return Collections.EMPTY_LIST;
	}

	/**
	 * Returns an empty list.
	 */
	public List getTypesForTarget(IAdaptable source,
			IElementType relationshipType) {
		return Collections.EMPTY_LIST;
	}

	public EObject selectExistingElementForSource(IAdaptable target,
			IElementType relationshipType) {

		return null;
	}

	/**
	 * Returns null.
	 */
	public EObject selectExistingElementForTarget(IAdaptable source,
			IElementType relationshipType) {

		return null;
	}

	/**
	 * Returns an empty list.
	 */
	public List getTypesForPopupBar(IAdaptable host) {
		return Collections.EMPTY_LIST;
	}

}
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a206 10
	/**
	 * Returns an empty list.
	 * 
	 * @@see org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.IModelingAssistantProvider#getTypesForActionBar(IAdaptable)
	 * @@deprecated Renamed to {@@link #getTypesForPopupBar(IAdaptable)}
	 */
	public List getTypesForActionBar(IAdaptable host) {
		return Collections.EMPTY_LIST;
	}

@


1.3
log
@Bugzilla 110480 gmf_head sshaw 050923 Modeling Assistant Service should have generic getTypes() operation to be used in commands with popups
Contributed by Cherie Mahoney
@
text
@a18 1

a45 2
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.service.IProvider#provides(org.eclipse.gmf.runtime.common.core.service.IOperation)
d114 1
a114 1
		} else if (operation instanceof GetTypesForActionBarOperation) {
d116 2
a117 2
			return !getTypesForActionBar(
				((GetTypesForActionBarOperation) operation).getHost())
a125 2
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getTypes(String, IAdaptable)
a133 2
	 * 
	 * @@see org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.IModelingAssistantProvider#getRelTypesForSREOnSource(org.eclipse.core.runtime.IAdaptable)
a141 2
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getRelTypesForSREOnTarget(IAdaptable)
a148 2
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getRelTypesOnSource(IAdaptable)
a155 2
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getRelTypesOnTarget(IAdaptable)
a162 3
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getRelTypesOnSourceAndTarget(IAdaptable,
	 *      IAdaptable)
a170 3
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getTypesForSource(IAdaptable,
	 *      IElementType)
a178 3
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getTypesForTarget(IAdaptable,
	 *      IElementType)
a184 4
	/**
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#selectExistingElementForSource(IAdaptable,
	 *      IElementType)
	 */
a192 3
	 * 
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#selectExistingElementForTarget(IAdaptable,
	 *      IElementType)
d202 7
d211 1
d216 1
a217 1

@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d112 1
a112 1
		} else if (operation instanceof GetTypesForAttributeOperation) {
d114 2
a115 3
			return !getTypesForAttribute(
				((GetTypesForAttributeOperation) operation).getAttribute())
				.isEmpty();
d130 1
a130 1
	 * @@see com.ibm.xtools.msl.ui.internal.services.modelingassistant.IModelingAssistantProvider#getTypesForAttribute(IAdaptable)
d132 1
a132 1
	public List getTypesForAttribute(IAdaptable attribute) {
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

