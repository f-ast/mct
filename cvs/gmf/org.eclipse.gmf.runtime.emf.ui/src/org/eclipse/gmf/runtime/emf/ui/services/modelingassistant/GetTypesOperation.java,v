head	1.1;
access;
symbols
	v20081020-0700:1.1
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.6
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080516-1748:1.1
	v20080425-1959:1.1
	v20080222-1200:1.1
	v20080114-1111:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.4
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070413-1300:1.1
	v20070330-1300:1.1
	v20070221-1500:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061013-1330:1.1
	v20060925-1700:1.1
	v20060919-0800:1.1
	v20060907-1100:1.1
	M1_20:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1
	v20060526-1200:1.1
	I20060505-1400:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2005.09.23.20.55.59;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Bugzilla 110480 gmf_head sshaw 050923 Modeling Assistant Service should have generic getTypes() operation to be used in commands with popups
Contributed by Cherie Mahoney
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.ui.services.modelingassistant;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.common.core.service.IProvider;

/**
 * The operation used with the modeling assistant service that gets the type of
 * elements that can be created or used for a specific hint or gesture and optional data.
 * 
 * @@author cmahoney
 */
public class GetTypesOperation
	implements IModelingAssistantOperation {
	
	/** identifies the gesture */
	private final String hint;

	/** additional data required */
	private final IAdaptable data;

	/**
	 * Creates a new <code>GetTypesOperation</code>.
	 * 
	 * @@param hint
	 *            identifies the hint or gesture
	 * @@param data
	 *            <li>provides additional data that is required</li>
	 *            <li>may be null depending on the hint</li>
	 */
	protected GetTypesOperation(String hint, IAdaptable data) {
		this.hint = hint;
		this.data = data;
	}

	/**
	 * The ID for a this operation is the hint itself.
	 */
	public String getId() {
		return getHint();
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.IModelingAssistantOperation#getContext()
	 */
	public IAdaptable getContext() {
		return getData();
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.service.IOperation#execute(org.eclipse.gmf.runtime.common.core.service.IProvider)
	 */
	public Object execute(IProvider provider) {
		return ((IModelingAssistantProvider) provider)
			.getTypes(getHint(), getData());
	}
	
	/**
	 * Gets the hint that identifies the gesture.
	 * 
	 * @@return the hint
	 */
	public String getHint() {
		return hint;
	}
	
	/**
	 * Gets the additional data required (if applicable). 
	 * @@return the data, may be null.
	 */
	public IAdaptable getData() {
		return data;
	}

}@
