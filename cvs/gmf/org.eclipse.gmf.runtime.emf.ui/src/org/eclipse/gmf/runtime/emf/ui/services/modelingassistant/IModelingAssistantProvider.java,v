head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.6
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080516-1748:1.5
	v20080425-1959:1.5
	v20080222-1200:1.5
	v20080114-1111:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070413-1300:1.5
	v20070330-1300:1.5
	v20070221-1500:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20060925-1700:1.5
	v20060919-0800:1.5
	v20060907-1100:1.5
	M1_20:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060526-1200:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.5
date	2005.11.25.19.36.46;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.29.23;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.23.20.55.59;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.30.15;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.34;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051125 Removing deprecated classes
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.ui.services.modelingassistant;

import java.util.List;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.runtime.common.core.service.IProvider;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;

/**
 * The interface for providers of the modeling assistant service.
 * 
 * @@author cmahoney
 */
public interface IModelingAssistantProvider
	extends IProvider {

	/**
	 * Gets a list of types to be used in the popup menu when performing some UI
	 * gesture identified by the hint.
	 * 
	 * @@param hint
	 *            identifies the hint or gesture
	 * @@param data
	 *            <li>provides additional data that is required</li>
	 *            <li>may be null depending on the hint</li>
	 * @@return a list of element types (<code>IElementType</code>)
	 */
	List getTypes(String hint, IAdaptable data);

	/**
	 * Returns a list of relationship types that could appear in EITHER the
	 * popup that appears when creating a connection from source to target or
	 * the popup that appears when creating a connection from source to an
	 * unspecified target.
	 * 
	 * @@param source
	 *            the source: adapts to editpart, view, element, etc.
	 * @@return a list of relationship types (<code>IElementType</code>)
	 */
	List getRelTypesOnSource(IAdaptable source);

	/**
	 * Returns a list of relationship types that could appear in EITHER the
	 * popup that appears when creating a connection from target to source or
	 * the popup that appears when creating a connection from target to an
	 * unspecified source.
	 * 
	 * @@param target
	 *            the target: adapts to editpart, view, element, etc.
	 * @@return a list of relationship types (<code>IElementType</code>)
	 */
	List getRelTypesOnTarget(IAdaptable target);

	/**
	 * Returns a list of relationship types to appear in the popup that the user
	 * can select from when creating a relationship from a source element to a
	 * target element.
	 * 
	 * @@param source
	 *            the source: adapts to editpart, view, element, etc.
	 * @@param target
	 *            the target: adapts to editpart, view, element, etc.
	 * @@return a list of relationship types (<code>IElementType</code>)
	 */
	List getRelTypesOnSourceAndTarget(IAdaptable source, IAdaptable target);

	/**
	 * Returns a list of relationship types to appear in the popup that the user
	 * can select from when showing related elements by double-clicking an
	 * outgoing connector handle.
	 * 
	 * @@param source
	 *            the source: adapts to editpart, view, element, etc.
	 * @@return a list of relationship types (<code>IElementType</code>)
	 */
	List getRelTypesForSREOnSource(IAdaptable source);

	/**
	 * Returns a list of relationship types to appear in the popup that the user
	 * can select from when showing related elements by double-clicking an
	 * incoming connector handle.
	 * 
	 * @@param target
	 *            the target: adapts to editpart, view, element, etc.
	 * @@return a list of relationship types (<code>IElementType</code>
	 *         objects)
	 */
	List getRelTypesForSREOnTarget(IAdaptable target);

	/**
	 * Returns a list of element types to appear in the popup when creating a
	 * relationship from a target element to an unspecified source from which
	 * the user can select the source type.
	 * 
	 * @@param target
	 *            the target: adapts to editpart, view, element, etc.
	 * @@param relationshipType
	 *            the relationship type to be created
	 * @@return a list of types for the new source (<code>IElementType</code>
	 *         objects)
	 */
	List getTypesForSource(IAdaptable target, IElementType relationshipType);

	/**
	 * Returns a list of element types to appear in the popup when creating a
	 * relationship from a source element to an unspecified target from which
	 * the user can select the target type.
	 * 
	 * @@param source
	 *            the source: adapts to editpart, view, element, etc.
	 * @@param relationshipType
	 *            the relationship type to be created
	 * @@return a list of types for the new target (<code>IElementType</code>
	 *         objects)
	 */
	List getTypesForTarget(IAdaptable source, IElementType relationshipType);

	/**
	 * Pops up a dialog that allows the user to select an existing element that
	 * is to be used as the source in a new relationship being created.
	 * 
	 * @@param target
	 *            the target: adapts to editpart, view, element, etc.
	 * @@param relationshipType
	 *            the relationship type to be created
	 * @@return Returns the <code>EObject</code> the user selected, or null if
	 *         an error occurred or the gesture was cancelled.
	 */
	EObject selectExistingElementForSource(IAdaptable target,
			IElementType relationshipType);

	/**
	 * Pops up a dialog that allows the user to select an existing element that
	 * is to be used as the target in a new relationship being created.
	 * 
	 * @@param source
	 *            the source: adapts to editpart, view, element, etc.
	 * @@param relationshipType
	 *            the relationship type to be created
	 * @@return Returns the <code>IElement</code> the user selected, or null if
	 *         an error occurred or the gesture was cancelled.
	 */
	EObject selectExistingElementForTarget(IAdaptable source,
			IElementType relationshipType);


	/**
	 * Gets a list of types to be used in the popup bar to support creating an
	 * shape or element within the context of another.
	 * 
	 * @@param host
	 *            the host on which the popup bar will be displayed: adapts to
	 *            editpart, view, element, etc.
	 * @@return a list of element types (<code>IElementType</code>)
	 */
	List getTypesForPopupBar(IAdaptable host);

}@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d161 1
a161 1
	 * Gets a list of types to be used in the actionbar to support creating an
d165 1
a165 1
	 *            the host on which the actionbar will be displayed: adapts to
a170 12
	/**
	 * Gets a list of types to be used in the actionbar to support creating an
	 * shape or element within the context of another.
	 * 
	 * @@param host
	 *            the host on which the actionbar will be displayed: adapts to
	 *            editpart, view, element, etc.
	 * @@return a list of element types (<code>IElementType</code>)
	 * @@deprecated Renamed to {@@link #getTypesForPopupBar(IAdaptable)}
	 */
	List getTypesForActionBar(IAdaptable host);

@


1.3
log
@Bugzilla 110480 gmf_head sshaw 050923 Modeling Assistant Service should have generic getTypes() operation to be used in commands with popups
Contributed by Cherie Mahoney
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d169 12
d182 1
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d31 2
a32 3
	 * Gets a list of types to be used in the popup menu when qualifying an
	 * attribute type. This is triggered when the user attempts to show an
	 * untyped attribute as an association.
d34 5
a38 3
	 * @@param attribute
	 *            the attribute to be shown as an association: adapts to
	 *            editpart, view, element, etc.
d41 1
a41 1
	List getTypesForAttribute(IAdaptable attribute);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.  	               |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

