head	1.2;
access;
symbols
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080603-1553:1.2
	v20080507-2230:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.1
	v20070601-1400:1.1
	v20070520-1200:1.1
	v20070504-1000:1.1
	v20070405-1100:1.1
	v20070330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061027-1200:1.1.2.1
	v20061013-1330:1.1
	v20060925-1700:1.1.2.1
	v20060919-0800:1.1.2.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060831-1500:1.1
	v20060803-1200:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.06.21.14.09.59;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	1941467a86b54567;

1.1
date	2006.05.18.13.58.29;	author radvorak;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.09.13.23.07.18;	author rgronback;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix copyright years
@
text
@/*
 * Copyright (c) 2005, 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License v1.0 which
 * accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors: 
 *    Radek Dvorak (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.validate;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Plugin;
import org.eclipse.core.runtime.Status;
import org.osgi.framework.BundleContext;

/**
 * The main plugin class to be used in the desktop.
 */
public class GMFValidationPlugin extends Plugin {

	//The shared instance.
	private static GMFValidationPlugin plugin;
	
	/**
	 * The constructor.
	 */
	public GMFValidationPlugin() {
		plugin = this;
	}

	/**
	 * This method is called upon plug-in activation
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
	}

	/**
	 * This method is called when the plug-in is stopped
	 */
	public void stop(BundleContext context) throws Exception {
		super.stop(context);
		plugin = null;
	}

	/**
	 * Returns the shared instance.
	 */
	public static GMFValidationPlugin getDefault() {
		return plugin;
	}

	/**
	 * Creates a new status object for this plugin.
	 *
	 * @@param severity the severity; one of <code>OK</code>, <code>ERROR</code>, 
	 * <code>INFO</code>, <code>WARNING</code>,  or <code>CANCEL</code>
	 * @@param code the plug-in-specific status code, or <code>OK</code>
	 * @@param message a human-readable message, localized to the
	 *    current locale
	 * @@param exception a low-level exception, or <code>null</code> if not
	 *    applicable 
	 */	
	public static IStatus createStatus(int severity, int code, String message, Throwable exception) {
		return new Status(severity, getPluginId(), code, message, exception);		
	}
	
	public static void log(int severity, String message, Throwable exception) {
		Status s = new Status(severity, getPluginId(),
			0, message != null ? message : "", exception); //$NON-NLS-1$		
		log(s);
	}
	
	public static void log(IStatus status) {
		if(status.getSeverity() >= IStatus.WARNING && Trace.shouldTrace()) {
			Trace.trace(status.getMessage());
		}
		getDefault().getLog().log(status);
	}
	
	public static String getPluginId() {
		return getDefault().getBundle().getSymbolicName();		
	}
}
@


1.1
log
@gmf.validation plugin created
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
@


1.1.2.1
log
@[153901] Updated copyright date from 2005 to 2005, 2006 for those changed in CVS in 2006 (based on Tom/Anthony's script).
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 Borland Software Corporation
@

