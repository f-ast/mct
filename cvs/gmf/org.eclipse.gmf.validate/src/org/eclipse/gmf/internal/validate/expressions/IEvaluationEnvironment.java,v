head	1.3;
access;
symbols
	v20080722-1827:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080603-1553:1.3
	v20080507-2230:1.3
	v20080425-1959:1.3
	v20080417-1610:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20080215-1500:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.2
	v20070601-1400:1.2
	v20070520-1200:1.2
	v20070504-1000:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061027-1200:1.1.2.1
	v20061013-1330:1.1
	v20060925-1700:1.1.2.1
	v20060919-0800:1.1.2.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060831-1500:1.1
	v20060803-1200:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1;
locks; strict;
comment	@# @;


1.3
date	2007.06.21.14.09.59;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	1941467a86b54567;

1.2
date	2007.03.14.12.59.24;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	110745f7f1aa4567;

1.1
date	2006.05.18.13.58.28;	author radvorak;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.09.13.23.07.18;	author rgronback;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix copyright years
@
text
@/*
 * Copyright (c) 2005, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License v1.0 which
 * accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors: 
 *    Radek Dvorak (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.validate.expressions;

import java.util.Set;

/**
 * The evaluation environment maintains current values of variables
 * for the evaluation of an expression. Variables are maintained as 
 * key-value pairs with variable name as the key and its value object 
 * as the value part in the pair. 
 */
public interface IEvaluationEnvironment {
	/**
	 * Sets variable value in this environment.
	 * If a variable of the given name already exists, the old value
	 * is replaced.
	 * 
	 * @@param name the name which uniquely identifies the variable
	 * @@param value the value to which the given variable is to be initialized.
	 * 	Can be <code>null</code>
	 */
	void setVariable(String name, Object value);
	/**
	 * Gets variable value set in this environment.
	 * @@param name the name of the variable to query for value
	 * @@return the value of the given variable, or <code>null</code> if no 
	 * 	such variable is set in this environment.
	 *	Remark: Use {@@link #getVariableNames()} in order to detect if the 
	 *	variable is present in the environment or has <code>null</code> value. 
	 */
	Object getValueOf(String name);
	
	/**
	 * Gets the names of all variables currently set in this environments.
	 * @@return set of String objects representing the names, never <code>null</code>   
	 */
	Set<String> getVariableNames();
	
	/**
	 * Removes all variables set in this environment
	 */
	void clear();
}
@


1.2
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
d53 1
a53 1
}@


1.1
log
@gmf.validation plugin created
@
text
@d47 1
a47 1
	Set/*String*/ getVariableNames();
@


1.1.2.1
log
@[153901] Updated copyright date from 2005 to 2005, 2006 for those changed in CVS in 2006 (based on Tom/Anthony's script).
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 Borland Software Corporation
@

