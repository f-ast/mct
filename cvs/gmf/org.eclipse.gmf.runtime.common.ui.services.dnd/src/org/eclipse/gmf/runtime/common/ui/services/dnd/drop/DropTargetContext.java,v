head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070330-1300:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.12.21.27.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.16;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.services.dnd.drop;

import org.eclipse.swt.dnd.DND;
import org.eclipse.swt.dnd.DropTargetEvent;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Item;
import org.eclipse.swt.widgets.TableItem;
import org.eclipse.swt.widgets.TreeItem;
import org.eclipse.ui.IWorkbenchPart;

/**
 * Concrete implementation of <code>IDropTargetContext</code>
 * 
 * @@author Vishy Ramaswamy
 */
public class DropTargetContext
	implements IDropTargetContext {

	/**
	 * The threshold used to determine if the mouse is before or after a target
	 * item.
	 */
	protected static final int LOCATION_EPSILON = 5;

	/**
	 * Attribute for the active part.
	 */
	private final IWorkbenchPart activePart;

	/**
	 * Attribute for the target.
	 */
	protected Object target = null;

	/**
	 * Attribute for the drop target viewer control.
	 */
	private final Control viewerControl;

	/**
	 * Attribute for the current location.
	 */
	protected Point location = null;

	/**
	 * Attribute for the relative location.
	 */
	protected int relativeLocation = IDropTargetContext.LOCATION_NONE;

	/**
	 * Constructor for DropTargetContext.
	 * 
	 * @@param anActivePart
	 *            the active IWorkbenchPart
	 * @@param aViewerControl
	 *            Control of the drop target
	 */
	public DropTargetContext(IWorkbenchPart anActivePart, Control aViewerControl) {
		super();

		assert null != anActivePart : "anActivePart cannot be null"; //$NON-NLS-1$
		assert null != aViewerControl : "aViewerControl cannot be null"; //$NON-NLS-1$

		this.activePart = anActivePart;
		this.viewerControl = aViewerControl;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.services.dnd.drop.IDropTargetContext#getActivePart()
	 */
	public final IWorkbenchPart getActivePart() {
		return activePart;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.services.dnd.drop.IDropTargetContext#getCurrentTarget()
	 */
	public final Object getCurrentTarget() {
		return target;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.services.dnd.drop.IDropTargetContext#getCurrentLocation()
	 */
	public final Point getCurrentLocation() {
		return location;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.services.dnd.drop.IDropTargetContext#getViewerControl()
	 */
	public final Control getViewerControl() {
		return viewerControl;
	}

	/**
	 * Sets the target item of the given drop event as the current target. Also
	 * sets the current coordinates of the current location of the mouse.
	 * 
	 * @@param event
	 *            the event
	 */
	protected void setCurrentTargetAndLocation(DropTargetEvent event) {
		/* Set the target */
		target = event.item == null ? null
			: event.item.getData();

		/* Set the location coordinates */
		location = getViewerControl().toControl(new Point(event.x, event.y));

		/* Set the relative location */
		if (!(event.item instanceof Item)) {
			relativeLocation = IDropTargetContext.LOCATION_NONE;
		} else {
			/* Get the item */
			Item item = (Item) event.item;

			/* Get the bounds */
			Rectangle bounds = null;
			if (item instanceof TreeItem) {
				bounds = ((TreeItem) item).getBounds();
			} else if (item instanceof TableItem) {
				bounds = ((TableItem) item).getBounds(0);
			}

			/* Set the relative location */
			if (bounds == null) {
				relativeLocation = IDropTargetContext.LOCATION_NONE;
			} else if ((location.y - bounds.y) < LOCATION_EPSILON) {
				relativeLocation = IDropTargetContext.LOCATION_BEFORE;
			} else if ((bounds.y + bounds.height - location.y) < LOCATION_EPSILON) {
				relativeLocation = IDropTargetContext.LOCATION_AFTER;
			} else {
				relativeLocation = IDropTargetContext.LOCATION_ON;
			}
		}
	}

	/**
	 * Set details of the event upon entering the drop target
	 * 
	 * @@param event
	 *            DropTargetEvent to have its detail field reset
	 * @@see org.eclipse.swt.dnd.DropTargetListener#dragEnter(org.eclipse.swt.dnd.DropTargetEvent)
	 */
	protected void dragEnter(DropTargetEvent event) {
		event.detail = DND.DROP_NONE;
	}

	/**
	 * Called when the drag operation has changed
	 * 
	 * @@param event
	 *            DropTargetEvent to update
	 * @@see org.eclipse.swt.dnd.DropTargetListener#dragOperationChanged(org.eclipse.swt.dnd.DropTargetEvent)
	 */
	protected void dragOperationChanged(DropTargetEvent event) {
		event.detail = DND.DROP_NONE;
	}

	/**
	 * Called when over the drop target
	 * 
	 * @@param event
	 *            DropTargetEvent to update
	 * @@see org.eclipse.swt.dnd.DropTargetListener#dragOver(org.eclipse.swt.dnd.DropTargetEvent)
	 */
	protected void dragOver(DropTargetEvent event) {
		event.detail = DND.DROP_NONE;
	}

	/**
	 * Called upon a drop
	 * 
	 * @@param event
	 *            DropTargetEvent to update
	 * @@see org.eclipse.swt.dnd.DropTargetListener#drop(org.eclipse.swt.dnd.DropTargetEvent)
	 */
	protected void drop(DropTargetEvent event) {
		event.detail = DND.DROP_NONE;
	}

	/**
	 * Called immediately before a drop
	 * 
	 * @@param event
	 *            DropTargetEvent to have its detail field reset
	 * @@see org.eclipse.swt.dnd.DropTargetListener#dropAccept(org.eclipse.swt.dnd.DropTargetEvent)
	 */
	protected void dropAccept(DropTargetEvent event) {
		event.detail = DND.DROP_NONE;
	}

	/**
	 * Called when leaving the drop target or cancelling
	 * 
	 * @@param event
	 *            DropTargetEvent to update
	 * @@see org.eclipse.swt.dnd.DropTargetListener#dragLeave(org.eclipse.swt.dnd.DropTargetEvent)
	 */
	protected void dragLeave(DropTargetEvent event) {
		/* method not implemented */
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.ui.services.dnd.drop.IDropTargetContext#getRelativeLocation()
	 */
	public final int getRelativeLocation() {
		return relativeLocation;
	}
}@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

