head	1.14;
access;
symbols
	v20080813-1520:1.14
	v20080807-1333:1.14
	v20080806-1520:1.14
	v20080731-1520:1.14
	v20080722-1827:1.14
	v20080716-1642:1.14
	R2_1_maintenance:1.14.0.2
	Root_R2_1_maintenance:1.14
	R2_1_0:1.14
	v20080610-1132:1.14
	v20080528-1052:1.14
	v20080510-0100:1.14
	v20080425-1959:1.14
	v20080417-1610:1.14
	v20080322-0000:1.14
	v20080222-1200:1.13
	v20080215-1500:1.13
	v20080207-0207:1.13
	v20071003-0000:1.13
	v20070809-0000:1.13
	R2_0_maintenance:1.13.0.2
	R2_0:1.13
	R4_20:1.13
	RC3_20:1.13
	v20070601-1400:1.13
	v20070413-1300:1.12
	v20070403-1500:1.12
	v20070330-1300:1.11
	v20060316-0600:1.11
	v20070208-1800:1.10
	v20070103-0300:1.10
	M4_20:1.10
	v20061214-0000:1.10
	M3_20:1.10
	v20061013-1330:1.10
	v20060925-1700:1.9
	v20060907-1100:1.9
	M1_20:1.10
	v20060904-1500:1.10
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060616-1200:1.9
	v20060531-1730:1.9
	v20060526-1200:1.9
	v20060519-0800:1.9
	I20060505-1400:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.7
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.5
	I20060216-1945:1.4
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.1
	I20051223-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.14
date	2008.03.03.17.45.14;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	161b47cc39284567;

1.13
date	2007.05.28.13.33.43;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	3e26465ada334567;

1.12
date	2007.04.03.16.29.06;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	5c60461280c44567;

1.11
date	2007.03.14.12.59.49;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	11c545f7f1bc4567;

1.10
date	2006.08.24.15.38.49;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.17.14.22.41;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.15.20.49.41;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.07.18.39.26;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.27.17.41.04;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.17.14.38.50;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.15.14.44.32;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.13.17.36.12;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.05.17.33.16;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.03;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.14
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.LabeledContainer;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.gmfgraph.LabeledContainer} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class LabeledContainerItemProvider
	extends RealFigureItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public LabeledContainerItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

		}
		return itemPropertyDescriptors;
	}

	/**
	 * This returns LabeledContainer.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/LabeledContainer"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getText(Object object) {
		String label = ((LabeledContainer)object).getName();
		return label == null || label.length() == 0 ?
			getString("_UI_LabeledContainer_type") :
			getString("_UI_LabeledContainer_type") + " " + label;
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

	/**
	 * This returns the label text for {@@link org.eclipse.emf.edit.command.CreateChildCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String getCreateChildText(Object owner, Object feature, Object child, Collection<?> selection) {
		Object childFeature = feature;
		Object childObject = child;

		boolean qualify =
			childFeature == GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor() ||
			childFeature == GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor() ||
			childFeature == GMFGraphPackage.eINSTANCE.getFigure_MaximumSize() ||
			childFeature == GMFGraphPackage.eINSTANCE.getFigure_MinimumSize() ||
			childFeature == GMFGraphPackage.eINSTANCE.getFigure_PreferredSize() ||
			childFeature == GMFGraphPackage.eINSTANCE.getFigure_Location() ||
			childFeature == GMFGraphPackage.eINSTANCE.getFigure_Size();

		if (qualify) {
			return getString
				("_UI_CreateChild_text2",
				 new Object[] { getTypeText(childObject), getFeatureText(childFeature), getTypeText(owner) });
		}
		return super.getCreateChildText(owner, feature, child, selection);
	}

}
@


1.13
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a140 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return GMFGraphEditPlugin.INSTANCE;
	}

@


1.12
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@a15 2
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
a21 4
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.gmfgraph.GMFGraphFactory;
d32 1
a32 1
	extends ItemProviderAdapter
a59 1
			addNamePropertyDescriptor(object);
a64 64
	 * This adds a property descriptor for the Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Identity_name_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Identity_name_feature", "_UI_Identity_type"),
				 GMFGraphPackage.eINSTANCE.getIdentity_Name(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@@link org.eclipse.emf.edit.command.AddCommand}, {@@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@@link org.eclipse.emf.edit.command.MoveCommand} in {@@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getLayoutable_Layout());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_Children());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_MaximumSize());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_MinimumSize());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_Font());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_Insets());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_Border());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_Location());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_Size());
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
a98 21

		switch (notification.getFeatureID(LabeledContainer.class)) {
			case GMFGraphPackage.LABELED_CONTAINER__NAME:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA:
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT:
			case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
			case GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR:
			case GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR:
			case GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE:
			case GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE:
			case GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE:
			case GMFGraphPackage.LABELED_CONTAINER__FONT:
			case GMFGraphPackage.LABELED_CONTAINER__INSETS:
			case GMFGraphPackage.LABELED_CONTAINER__BORDER:
			case GMFGraphPackage.LABELED_CONTAINER__LOCATION:
			case GMFGraphPackage.LABELED_CONTAINER__SIZE:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
a111 200

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(),
				 GMFGraphFactory.eINSTANCE.createCustomLayoutData()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(),
				 GMFGraphFactory.eINSTANCE.createGridLayoutData()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(),
				 GMFGraphFactory.eINSTANCE.createBorderLayoutData()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(),
				 GMFGraphFactory.eINSTANCE.createXYLayoutData()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(),
				 GMFGraphFactory.eINSTANCE.createCustomLayout()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(),
				 GMFGraphFactory.eINSTANCE.createGridLayout()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(),
				 GMFGraphFactory.eINSTANCE.createBorderLayout()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(),
				 GMFGraphFactory.eINSTANCE.createFlowLayout()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(),
				 GMFGraphFactory.eINSTANCE.createXYLayout()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(),
				 GMFGraphFactory.eINSTANCE.createStackLayout()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createFigureRef()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createLabel()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createLabeledContainer()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createRectangle()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createRoundedRectangle()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createEllipse()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createPolyline()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createPolygon()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createScalablePolygon()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createPolylineConnection()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createPolylineDecoration()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createPolygonDecoration()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createCustomFigure()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createCustomDecoration()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Children(),
				 GMFGraphFactory.eINSTANCE.createCustomConnection()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor(),
				 GMFGraphFactory.eINSTANCE.createRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor(),
				 GMFGraphFactory.eINSTANCE.createConstantColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor(),
				 GMFGraphFactory.eINSTANCE.createRGBColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor(),
				 GMFGraphFactory.eINSTANCE.createConstantColor()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_MaximumSize(),
				 GMFGraphFactory.eINSTANCE.createDimension()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_MinimumSize(),
				 GMFGraphFactory.eINSTANCE.createDimension()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize(),
				 GMFGraphFactory.eINSTANCE.createDimension()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Font(),
				 GMFGraphFactory.eINSTANCE.createBasicFont()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Insets(),
				 GMFGraphFactory.eINSTANCE.createInsets()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Border(),
				 GMFGraphFactory.eINSTANCE.createLineBorder()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Border(),
				 GMFGraphFactory.eINSTANCE.createMarginBorder()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Border(),
				 GMFGraphFactory.eINSTANCE.createCompoundBorder()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Border(),
				 GMFGraphFactory.eINSTANCE.createCustomBorder()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Location(),
				 GMFGraphFactory.eINSTANCE.createPoint()));

		newChildDescriptors.add
			(createChildParameter
				(GMFGraphPackage.eINSTANCE.getFigure_Size(),
				 GMFGraphFactory.eINSTANCE.createPoint()));
@


1.11
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a16 1
import org.eclipse.emf.edit.command.CommandParameter;
d195 2
a196 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d202 1
a202 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.10
log
@[154687] mgolubev - Support scalable polygons
@
text
@d17 1
d21 1
d62 2
a63 1
	public List getPropertyDescriptors(Object object) {
d102 2
a103 1
	public Collection getChildrenFeatures(Object object) {
d128 1
d142 1
d153 1
d168 1
d202 2
a203 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d413 2
a414 1
	public String getCreateChildText(Object owner, Object feature, Object child, Collection selection) {
d441 1
@


1.9
log
@#139127 Provide an option for labels to display node icon
@
text
@d290 5
@


1.8
log
@regenerated with M5. Completely clear plugin.properties to get rid of outdated values (mentioned at #132015)
@
text
@d84 2
@


1.7
log
@BasicFont extends Font, finally ;)
@
text
@d136 1
a136 1
		return getResourceLocator().getImage("full/obj16/LabeledContainer");
@


1.6
log
@Updating .genmodel in accordance with latest changes in gmfgraph model.
@
text
@d352 5
@


1.5
log
@Changing default values for fill and outline Shape properties.
@
text
@a63 1
			addLayoutPropertyDescriptor(object);
a69 20
	 * This adds a property descriptor for the Layout feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addLayoutPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Layoutable_layout_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Layoutable_layout_feature", "_UI_Layoutable_type"),
				 GMFGraphPackage.eINSTANCE.getLayoutable_Layout(),
				 true,
				 null,
				 null,
				 null));
	}

	/**
d167 1
@


1.4
log
@[mgolubev] #127252 layout support
@
text
@d157 1
a157 1
		return overlayImage(object, getResourceLocator().getImage("full/obj16/LabeledContainer"));
@


1.3
log
@[mgolubev] #127252 layout support
@
text
@d157 1
a157 1
		return getResourceLocator().getImage("full/obj16/LabeledContainer");
d232 5
d252 15
@


1.2
log
@move towards more draw2d-like model
@
text
@d64 1
a65 1
			addLayoutManagerPropertyDescriptor(object);
d71 1
a71 1
	 * This adds a property descriptor for the Name feature.
d76 1
a76 1
	protected void addNamePropertyDescriptor(Object object) {
d81 3
a83 3
				 getString("_UI_Identity_name_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Identity_name_feature", "_UI_Identity_type"),
				 GMFGraphPackage.eINSTANCE.getIdentity_Name(),
d85 1
a85 1
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
d91 1
a91 1
	 * This adds a property descriptor for the Layout Manager feature.
d96 1
a96 1
	protected void addLayoutManagerPropertyDescriptor(Object object) {
d101 3
a103 3
				 getString("_UI_Figure_layoutManager_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Figure_layoutManager_feature", "_UI_Figure_type"),
				 GMFGraphPackage.eINSTANCE.getFigure_LayoutManager(),
d121 2
a184 1
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_MANAGER:
d187 1
d217 30
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d122 8
a129 3
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_ColorStyle());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_SizeStyle());
			childrenFeatures.add(GMFGraphPackage.eINSTANCE.getFigure_FontStyle());
d187 8
a194 3
			case GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE:
			case GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE:
			case GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE:
d285 2
a286 2
				(GMFGraphPackage.eINSTANCE.getFigure_ColorStyle(),
				 GMFGraphFactory.eINSTANCE.createColorStyle()));
d290 2
a291 2
				(GMFGraphPackage.eINSTANCE.getFigure_SizeStyle(),
				 GMFGraphFactory.eINSTANCE.createSizeStyle()));
d295 47
a341 2
				(GMFGraphPackage.eINSTANCE.getFigure_FontStyle(),
				 GMFGraphFactory.eINSTANCE.createFontStyle()));
d365 5
@

