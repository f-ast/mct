head	1.10;
access;
symbols
	v20080813-1520:1.10
	v20080807-1333:1.10
	v20080806-1520:1.10
	v20080731-1520:1.10
	v20080722-1827:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.2
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080610-1132:1.10
	v20080528-1052:1.10
	v20080510-0100:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080322-0000:1.10
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080207-0207:1.9
	v20071003-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	RC3_20:1.9
	v20070601-1400:1.9
	v20070413-1300:1.8
	v20070403-1500:1.8
	v20070330-1300:1.7
	v20060316-0600:1.7
	v20070208-1800:1.6
	v20070103-0300:1.6
	M4_20:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061013-1330:1.6
	v20060925-1700:1.5
	v20060907-1100:1.5
	M1_20:1.6
	v20060904-1500:1.6
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	I20060505-1400:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.2
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2008.03.03.17.45.14;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	161b47cc39284567;

1.9
date	2007.05.28.13.33.44;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	3e26465ada334567;

1.8
date	2007.04.03.16.29.06;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	5c60461280c44567;

1.7
date	2007.03.14.12.59.50;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	11c545f7f1bc4567;

1.6
date	2006.08.25.18.32.37;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.17.14.22.41;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.15.20.49.41;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.17.14.38.51;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.15.14.44.32;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.04;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.10
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;
import org.eclipse.gmf.gmfgraph.FigureDescriptor;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.Node;

/**
 * This is the item provider adapter for a {@@link org.eclipse.gmf.gmfgraph.Node} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class NodeItemProvider
	extends AbstractNodeItemProvider
	implements	
		IEditingDomainItemProvider,	
		IStructuredItemContentProvider,	
		ITreeItemContentProvider,	
		IItemLabelProvider,	
		IItemPropertySource {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NodeItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addResizeConstraintPropertyDescriptor(object);
			addAffixedParentSidePropertyDescriptor(object);
			addContentPanePropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Resize Constraint feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addResizeConstraintPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Node_resizeConstraint_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Node_resizeConstraint_feature", "_UI_Node_type"),
				 GMFGraphPackage.eINSTANCE.getNode_ResizeConstraint(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Affixed Parent Side feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addAffixedParentSidePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Node_affixedParentSide_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Node_affixedParentSide_feature", "_UI_Node_type"),
				 GMFGraphPackage.eINSTANCE.getNode_AffixedParentSide(),
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Content Pane feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected void addContentPanePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Node_contentPane_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Node_contentPane_feature", "_UI_Node_type"),
				 GMFGraphPackage.eINSTANCE.getNode_ContentPane(),
				 true,
				 false,
				 true,
				 null,
				 null,
				 null));
	}

	/**
	 * This returns Node.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/Node"));
	}

	/**
	 * @@generated
	 */
	public String getTextGen(Object object) {
		String label = ((Node)object).getName();
		return label == null || label.length() == 0 ?
			getString("_UI_Node_type") :
			getString("_UI_Node_type") + " " + label;
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	@@Override
	public String getText(Object object) {
		FigureDescriptor fd = ((Node) object).getFigure();
		if (fd != null && fd.getName() != null) {
			return getTextGen(object) + ' ' + '(' + fd.getName() + ')';
		}
		return getTextGen(object);
	}

	/**
	 * This handles model notifications by calling {@@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(Node.class)) {
			case GMFGraphPackage.NODE__RESIZE_CONSTRAINT:
			case GMFGraphPackage.NODE__AFFIXED_PARENT_SIDE:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);
	}

}
@


1.9
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@a14 1
import org.eclipse.emf.common.util.ResourceLocator;
a203 11
	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public ResourceLocator getResourceLocator() {
		return GMFGraphEditPlugin.INSTANCE;
	}

@


1.8
log
@EMF.Edit and editor were regenerated with EMF M6
@
text
@d25 1
d36 1
a36 1
	extends DiagramElementItemProvider
d66 1
d116 22
d149 10
d162 1
a162 1
	 * @@generated
d166 5
a170 4
		String label = ((Node)object).getName();
		return label == null || label.length() == 0 ?
			getString("_UI_Node_type") :
			getString("_UI_Node_type") + " " + label;
@


1.7
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a15 1
import org.eclipse.emf.edit.command.CommandParameter;
d159 2
a160 2
	 * This adds to the collection of {@@link org.eclipse.emf.edit.command.CommandParameter}s
	 * describing all of the children that can be created under this object.
d166 1
a166 1
	protected void collectNewChildDescriptors(Collection<CommandParameter> newChildDescriptors, Object object) {
@


1.6
log
@[124826] mgolubev - Support nodes with border items
@
text
@d16 1
d20 1
d59 2
a60 1
	public List getPropertyDescriptors(Object object) {
d120 1
d131 1
d146 1
d166 2
a167 1
	protected void collectNewChildDescriptors(Collection newChildDescriptors, Object object) {
d177 1
@


1.5
log
@#139127 Provide an option for labels to display node icon
@
text
@d62 1
d90 22
d146 1
@


1.4
log
@regenerated with M5. Completely clear plugin.properties to get rid of outdated values (mentioned at #132015)
@
text
@d81 2
@


1.3
log
@Changing default values for fill and outline Shape properties.
@
text
@d93 1
a93 1
		return getResourceLocator().getImage("full/obj16/Node");
@


1.2
log
@[mgolubev] #127252 layout support
@
text
@d93 1
a93 1
		return overlayImage(object, getResourceLocator().getImage("full/obj16/Node"));
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d93 1
a93 1
		return getResourceLocator().getImage("full/obj16/Node");
@

