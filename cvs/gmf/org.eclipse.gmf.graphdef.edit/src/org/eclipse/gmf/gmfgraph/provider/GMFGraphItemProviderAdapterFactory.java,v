head	1.16;
access;
symbols
	v20080813-1520:1.16
	v20080807-1333:1.16
	v20080806-1520:1.16
	v20080731-1520:1.15
	v20080722-1827:1.14
	v20080716-1642:1.14
	R2_1_maintenance:1.14.0.2
	Root_R2_1_maintenance:1.14
	R2_1_0:1.14
	v20080610-1132:1.14
	v20080528-1052:1.14
	v20080510-0100:1.13
	v20080425-1959:1.13
	v20080417-1610:1.13
	v20080322-0000:1.13
	v20080222-1200:1.12
	v20080215-1500:1.12
	v20080207-0207:1.12
	v20071003-0000:1.12
	v20070809-0000:1.12
	R2_0_maintenance:1.12.0.2
	R2_0:1.12
	R4_20:1.12
	RC3_20:1.12
	v20070601-1400:1.12
	v20070413-1300:1.11
	v20070403-1500:1.11
	v20070330-1300:1.11
	v20060316-0600:1.11
	v20070208-1800:1.10
	v20070103-0300:1.10
	M4_20:1.10
	v20061214-0000:1.10
	M3_20:1.10
	v20061013-1330:1.10
	v20060925-1700:1.8
	v20060907-1100:1.8
	M1_20:1.10
	v20060904-1500:1.10
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060626-1420:1.8
	v20060616-1200:1.8
	v20060531-1730:1.8
	v20060526-1200:1.8
	v20060519-0800:1.7
	I20060505-1400:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.5
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.1
	I20051223-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.16
date	2008.08.05.12.41.53;	author dstadnik;	state Exp;
branches;
next	1.15;
commitid	189748984a874567;

1.15
date	2008.07.31.12.14.54;	author dstadnik;	state Exp;
branches;
next	1.14;
commitid	4a1b4891ac974567;

1.14
date	2008.05.21.16.42.05;	author atikhomirov;	state Exp;
branches;
next	1.13;
commitid	6f2e483450db4567;

1.13
date	2008.03.03.18.41.11;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	646b47cc46444567;

1.12
date	2007.05.28.13.33.43;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	3e26465ada334567;

1.11
date	2007.03.14.12.59.49;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	11c545f7f1bc4567;

1.10
date	2006.09.01.17.49.38;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.08.24.15.38.49;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.23.21.09.50;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.20.13.59.39;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.22.22.01.22;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.15.14.44.32;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.14.10.11.24;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.13.17.36.12;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.05.17.33.16;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.03;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.16
log
@[243050] support AOI in gmfgraph
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.provider;

import java.util.ArrayList;
import java.util.Collection;

import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.util.GMFGraphAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @@generated
 */
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(GMFGraphEditPlugin.INSTANCE, GMFGraphPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GMFGraphItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Canvas} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CanvasItemProvider canvasItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Canvas}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCanvasAdapter() {
		if (canvasItemProvider == null) {
			canvasItemProvider = new CanvasItemProvider(this);
		}

		return canvasItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.FigureGallery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FigureGalleryItemProvider figureGalleryItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.FigureGallery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFigureGalleryAdapter() {
		if (figureGalleryItemProvider == null) {
			figureGalleryItemProvider = new FigureGalleryItemProvider(this);
		}

		return figureGalleryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Node} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected NodeItemProvider nodeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Node}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createNodeAdapter() {
		if (nodeItemProvider == null) {
			nodeItemProvider = new NodeItemProvider(this);
		}

		return nodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.ChildAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ChildAccessItemProvider childAccessItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.ChildAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createChildAccessAdapter() {
		if (childAccessItemProvider == null) {
			childAccessItemProvider = new ChildAccessItemProvider(this);
		}

		return childAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Compartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CompartmentItemProvider compartmentItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Compartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCompartmentAdapter() {
		if (compartmentItemProvider == null) {
			compartmentItemProvider = new CompartmentItemProvider(this);
		}

		return compartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.DiagramLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DiagramLabelItemProvider diagramLabelItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.DiagramLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createDiagramLabelAdapter() {
		if (diagramLabelItemProvider == null) {
			diagramLabelItemProvider = new DiagramLabelItemProvider(this);
		}

		return diagramLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.GeneralFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GeneralFacetItemProvider generalFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.GeneralFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGeneralFacetAdapter() {
		if (generalFacetItemProvider == null) {
			generalFacetItemProvider = new GeneralFacetItemProvider(this);
		}

		return generalFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.AlignmentFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected AlignmentFacetItemProvider alignmentFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.AlignmentFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createAlignmentFacetAdapter() {
		if (alignmentFacetItemProvider == null) {
			alignmentFacetItemProvider = new AlignmentFacetItemProvider(this);
		}

		return alignmentFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.GradientFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GradientFacetItemProvider gradientFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.GradientFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGradientFacetAdapter() {
		if (gradientFacetItemProvider == null) {
			gradientFacetItemProvider = new GradientFacetItemProvider(this);
		}

		return gradientFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.LabelOffsetFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LabelOffsetFacetItemProvider labelOffsetFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.LabelOffsetFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLabelOffsetFacetAdapter() {
		if (labelOffsetFacetItemProvider == null) {
			labelOffsetFacetItemProvider = new LabelOffsetFacetItemProvider(this);
		}

		return labelOffsetFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.DefaultSizeFacet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DefaultSizeFacetItemProvider defaultSizeFacetItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.DefaultSizeFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createDefaultSizeFacetAdapter() {
		if (defaultSizeFacetItemProvider == null) {
			defaultSizeFacetItemProvider = new DefaultSizeFacetItemProvider(this);
		}

		return defaultSizeFacetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.FigureDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FigureDescriptorItemProvider figureDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.FigureDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFigureDescriptorAdapter() {
		if (figureDescriptorItemProvider == null) {
			figureDescriptorItemProvider = new FigureDescriptorItemProvider(this);
		}

		return figureDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.FigureRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FigureRefItemProvider figureRefItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.FigureRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFigureRefAdapter() {
		if (figureRefItemProvider == null) {
			figureRefItemProvider = new FigureRefItemProvider(this);
		}

		return figureRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Label} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LabelItemProvider labelItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Label}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLabelAdapter() {
		if (labelItemProvider == null) {
			labelItemProvider = new LabelItemProvider(this);
		}

		return labelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.LabeledContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LabeledContainerItemProvider labeledContainerItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.LabeledContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLabeledContainerAdapter() {
		if (labeledContainerItemProvider == null) {
			labeledContainerItemProvider = new LabeledContainerItemProvider(this);
		}

		return labeledContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Rectangle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected RectangleItemProvider rectangleItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Rectangle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createRectangleAdapter() {
		if (rectangleItemProvider == null) {
			rectangleItemProvider = new RectangleItemProvider(this);
		}

		return rectangleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.RoundedRectangle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected RoundedRectangleItemProvider roundedRectangleItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.RoundedRectangle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createRoundedRectangleAdapter() {
		if (roundedRectangleItemProvider == null) {
			roundedRectangleItemProvider = new RoundedRectangleItemProvider(this);
		}

		return roundedRectangleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Ellipse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EllipseItemProvider ellipseItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Ellipse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createEllipseAdapter() {
		if (ellipseItemProvider == null) {
			ellipseItemProvider = new EllipseItemProvider(this);
		}

		return ellipseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Polyline} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PolylineItemProvider polylineItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Polyline}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPolylineAdapter() {
		if (polylineItemProvider == null) {
			polylineItemProvider = new PolylineItemProvider(this);
		}

		return polylineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Polygon} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PolygonItemProvider polygonItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Polygon}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPolygonAdapter() {
		if (polygonItemProvider == null) {
			polygonItemProvider = new PolygonItemProvider(this);
		}

		return polygonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.ScalablePolygon} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ScalablePolygonItemProvider scalablePolygonItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.ScalablePolygon}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createScalablePolygonAdapter() {
		if (scalablePolygonItemProvider == null) {
			scalablePolygonItemProvider = new ScalablePolygonItemProvider(this);
		}

		return scalablePolygonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.PolylineConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PolylineConnectionItemProvider polylineConnectionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.PolylineConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPolylineConnectionAdapter() {
		if (polylineConnectionItemProvider == null) {
			polylineConnectionItemProvider = new PolylineConnectionItemProvider(this);
		}

		return polylineConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.PolylineDecoration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PolylineDecorationItemProvider polylineDecorationItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.PolylineDecoration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPolylineDecorationAdapter() {
		if (polylineDecorationItemProvider == null) {
			polylineDecorationItemProvider = new PolylineDecorationItemProvider(this);
		}

		return polylineDecorationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.PolygonDecoration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PolygonDecorationItemProvider polygonDecorationItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.PolygonDecoration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPolygonDecorationAdapter() {
		if (polygonDecorationItemProvider == null) {
			polygonDecorationItemProvider = new PolygonDecorationItemProvider(this);
		}

		return polygonDecorationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CustomFigure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomFigureItemProvider customFigureItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CustomFigure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomFigureAdapter() {
		if (customFigureItemProvider == null) {
			customFigureItemProvider = new CustomFigureItemProvider(this);
		}

		return customFigureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CustomDecoration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomDecorationItemProvider customDecorationItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CustomDecoration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomDecorationAdapter() {
		if (customDecorationItemProvider == null) {
			customDecorationItemProvider = new CustomDecorationItemProvider(this);
		}

		return customDecorationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CustomConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomConnectionItemProvider customConnectionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CustomConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomConnectionAdapter() {
		if (customConnectionItemProvider == null) {
			customConnectionItemProvider = new CustomConnectionItemProvider(this);
		}

		return customConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.RGBColor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected RGBColorItemProvider rgbColorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.RGBColor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createRGBColorAdapter() {
		if (rgbColorItemProvider == null) {
			rgbColorItemProvider = new RGBColorItemProvider(this);
		}

		return rgbColorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.ConstantColor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ConstantColorItemProvider constantColorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.ConstantColor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createConstantColorAdapter() {
		if (constantColorItemProvider == null) {
			constantColorItemProvider = new ConstantColorItemProvider(this);
		}

		return constantColorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.BasicFont} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected BasicFontItemProvider basicFontItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.BasicFont}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createBasicFontAdapter() {
		if (basicFontItemProvider == null) {
			basicFontItemProvider = new BasicFontItemProvider(this);
		}

		return basicFontItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Point} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PointItemProvider pointItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Point}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createPointAdapter() {
		if (pointItemProvider == null) {
			pointItemProvider = new PointItemProvider(this);
		}

		return pointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Dimension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected DimensionItemProvider dimensionItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Dimension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createDimensionAdapter() {
		if (dimensionItemProvider == null) {
			dimensionItemProvider = new DimensionItemProvider(this);
		}

		return dimensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Insets} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected InsetsItemProvider insetsItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Insets}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createInsetsAdapter() {
		if (insetsItemProvider == null) {
			insetsItemProvider = new InsetsItemProvider(this);
		}

		return insetsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.BorderRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected BorderRefItemProvider borderRefItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.BorderRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createBorderRefAdapter() {
		if (borderRefItemProvider == null) {
			borderRefItemProvider = new BorderRefItemProvider(this);
		}

		return borderRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.LineBorder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LineBorderItemProvider lineBorderItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.LineBorder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLineBorderAdapter() {
		if (lineBorderItemProvider == null) {
			lineBorderItemProvider = new LineBorderItemProvider(this);
		}

		return lineBorderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.MarginBorder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected MarginBorderItemProvider marginBorderItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.MarginBorder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createMarginBorderAdapter() {
		if (marginBorderItemProvider == null) {
			marginBorderItemProvider = new MarginBorderItemProvider(this);
		}

		return marginBorderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CompoundBorder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CompoundBorderItemProvider compoundBorderItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CompoundBorder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCompoundBorderAdapter() {
		if (compoundBorderItemProvider == null) {
			compoundBorderItemProvider = new CompoundBorderItemProvider(this);
		}

		return compoundBorderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CustomBorder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomBorderItemProvider customBorderItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CustomBorder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomBorderAdapter() {
		if (customBorderItemProvider == null) {
			customBorderItemProvider = new CustomBorderItemProvider(this);
		}

		return customBorderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CustomLayoutData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomLayoutDataItemProvider customLayoutDataItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CustomLayoutData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomLayoutDataAdapter() {
		if (customLayoutDataItemProvider == null) {
			customLayoutDataItemProvider = new CustomLayoutDataItemProvider(this);
		}

		return customLayoutDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.GridLayoutData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GridLayoutDataItemProvider gridLayoutDataItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.GridLayoutData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGridLayoutDataAdapter() {
		if (gridLayoutDataItemProvider == null) {
			gridLayoutDataItemProvider = new GridLayoutDataItemProvider(this);
		}

		return gridLayoutDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.BorderLayoutData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected BorderLayoutDataItemProvider borderLayoutDataItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.BorderLayoutData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createBorderLayoutDataAdapter() {
		if (borderLayoutDataItemProvider == null) {
			borderLayoutDataItemProvider = new BorderLayoutDataItemProvider(this);
		}

		return borderLayoutDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.LayoutRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LayoutRefItemProvider layoutRefItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.LayoutRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createLayoutRefAdapter() {
		if (layoutRefItemProvider == null) {
			layoutRefItemProvider = new LayoutRefItemProvider(this);
		}

		return layoutRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CustomLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomLayoutItemProvider customLayoutItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CustomLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomLayoutAdapter() {
		if (customLayoutItemProvider == null) {
			customLayoutItemProvider = new CustomLayoutItemProvider(this);
		}

		return customLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.GridLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GridLayoutItemProvider gridLayoutItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.GridLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createGridLayoutAdapter() {
		if (gridLayoutItemProvider == null) {
			gridLayoutItemProvider = new GridLayoutItemProvider(this);
		}

		return gridLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.BorderLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected BorderLayoutItemProvider borderLayoutItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.BorderLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createBorderLayoutAdapter() {
		if (borderLayoutItemProvider == null) {
			borderLayoutItemProvider = new BorderLayoutItemProvider(this);
		}

		return borderLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.CustomAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CustomAttributeItemProvider customAttributeItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.CustomAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createCustomAttributeAdapter() {
		if (customAttributeItemProvider == null) {
			customAttributeItemProvider = new CustomAttributeItemProvider(this);
		}

		return customAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.FigureAccessor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FigureAccessorItemProvider figureAccessorItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.FigureAccessor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFigureAccessorAdapter() {
		if (figureAccessorItemProvider == null) {
			figureAccessorItemProvider = new FigureAccessorItemProvider(this);
		}

		return figureAccessorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.FlowLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FlowLayoutItemProvider flowLayoutItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.FlowLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createFlowLayoutAdapter() {
		if (flowLayoutItemProvider == null) {
			flowLayoutItemProvider = new FlowLayoutItemProvider(this);
		}

		return flowLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.XYLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected XYLayoutItemProvider xyLayoutItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.XYLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createXYLayoutAdapter() {
		if (xyLayoutItemProvider == null) {
			xyLayoutItemProvider = new XYLayoutItemProvider(this);
		}

		return xyLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.XYLayoutData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected XYLayoutDataItemProvider xyLayoutDataItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.XYLayoutData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createXYLayoutDataAdapter() {
		if (xyLayoutDataItemProvider == null) {
			xyLayoutDataItemProvider = new XYLayoutDataItemProvider(this);
		}

		return xyLayoutDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.StackLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected StackLayoutItemProvider stackLayoutItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.StackLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createStackLayoutAdapter() {
		if (stackLayoutItemProvider == null) {
			stackLayoutItemProvider = new StackLayoutItemProvider(this);
		}

		return stackLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.SVGFigure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SVGFigureItemProvider svgFigureItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.SVGFigure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createSVGFigureAdapter() {
		if (svgFigureItemProvider == null) {
			svgFigureItemProvider = new SVGFigureItemProvider(this);
		}

		return svgFigureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.SVGProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SVGPropertyItemProvider svgPropertyItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.SVGProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createSVGPropertyAdapter() {
		if (svgPropertyItemProvider == null) {
			svgPropertyItemProvider = new SVGPropertyItemProvider(this);
		}

		return svgPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Rectangle2D} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected Rectangle2DItemProvider rectangle2DItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Rectangle2D}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter createRectangle2DAdapter() {
		if (rectangle2DItemProvider == null) {
			rectangle2DItemProvider = new Rectangle2DItemProvider(this);
		}

		return rectangle2DItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@@link #changeNotifier} and to {@@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void dispose() {
		if (canvasItemProvider != null) canvasItemProvider.dispose();
		if (figureGalleryItemProvider != null) figureGalleryItemProvider.dispose();
		if (nodeItemProvider != null) nodeItemProvider.dispose();
		if (connectionItemProvider != null) connectionItemProvider.dispose();
		if (compartmentItemProvider != null) compartmentItemProvider.dispose();
		if (diagramLabelItemProvider != null) diagramLabelItemProvider.dispose();
		if (generalFacetItemProvider != null) generalFacetItemProvider.dispose();
		if (alignmentFacetItemProvider != null) alignmentFacetItemProvider.dispose();
		if (gradientFacetItemProvider != null) gradientFacetItemProvider.dispose();
		if (labelOffsetFacetItemProvider != null) labelOffsetFacetItemProvider.dispose();
		if (defaultSizeFacetItemProvider != null) defaultSizeFacetItemProvider.dispose();
		if (figureDescriptorItemProvider != null) figureDescriptorItemProvider.dispose();
		if (childAccessItemProvider != null) childAccessItemProvider.dispose();
		if (figureRefItemProvider != null) figureRefItemProvider.dispose();
		if (labelItemProvider != null) labelItemProvider.dispose();
		if (labeledContainerItemProvider != null) labeledContainerItemProvider.dispose();
		if (rectangleItemProvider != null) rectangleItemProvider.dispose();
		if (roundedRectangleItemProvider != null) roundedRectangleItemProvider.dispose();
		if (ellipseItemProvider != null) ellipseItemProvider.dispose();
		if (polylineItemProvider != null) polylineItemProvider.dispose();
		if (polygonItemProvider != null) polygonItemProvider.dispose();
		if (scalablePolygonItemProvider != null) scalablePolygonItemProvider.dispose();
		if (polylineConnectionItemProvider != null) polylineConnectionItemProvider.dispose();
		if (polylineDecorationItemProvider != null) polylineDecorationItemProvider.dispose();
		if (polygonDecorationItemProvider != null) polygonDecorationItemProvider.dispose();
		if (customAttributeItemProvider != null) customAttributeItemProvider.dispose();
		if (figureAccessorItemProvider != null) figureAccessorItemProvider.dispose();
		if (customFigureItemProvider != null) customFigureItemProvider.dispose();
		if (customDecorationItemProvider != null) customDecorationItemProvider.dispose();
		if (customConnectionItemProvider != null) customConnectionItemProvider.dispose();
		if (rgbColorItemProvider != null) rgbColorItemProvider.dispose();
		if (constantColorItemProvider != null) constantColorItemProvider.dispose();
		if (basicFontItemProvider != null) basicFontItemProvider.dispose();
		if (pointItemProvider != null) pointItemProvider.dispose();
		if (dimensionItemProvider != null) dimensionItemProvider.dispose();
		if (insetsItemProvider != null) insetsItemProvider.dispose();
		if (borderRefItemProvider != null) borderRefItemProvider.dispose();
		if (lineBorderItemProvider != null) lineBorderItemProvider.dispose();
		if (marginBorderItemProvider != null) marginBorderItemProvider.dispose();
		if (compoundBorderItemProvider != null) compoundBorderItemProvider.dispose();
		if (customBorderItemProvider != null) customBorderItemProvider.dispose();
		if (customLayoutDataItemProvider != null) customLayoutDataItemProvider.dispose();
		if (gridLayoutDataItemProvider != null) gridLayoutDataItemProvider.dispose();
		if (borderLayoutDataItemProvider != null) borderLayoutDataItemProvider.dispose();
		if (layoutRefItemProvider != null) layoutRefItemProvider.dispose();
		if (customLayoutItemProvider != null) customLayoutItemProvider.dispose();
		if (gridLayoutItemProvider != null) gridLayoutItemProvider.dispose();
		if (borderLayoutItemProvider != null) borderLayoutItemProvider.dispose();
		if (flowLayoutItemProvider != null) flowLayoutItemProvider.dispose();
		if (xyLayoutItemProvider != null) xyLayoutItemProvider.dispose();
		if (xyLayoutDataItemProvider != null) xyLayoutDataItemProvider.dispose();
		if (stackLayoutItemProvider != null) stackLayoutItemProvider.dispose();
		if (svgFigureItemProvider != null) svgFigureItemProvider.dispose();
		if (svgPropertyItemProvider != null) svgPropertyItemProvider.dispose();
		if (rectangle2DItemProvider != null) rectangle2DItemProvider.dispose();
	}

}
@


1.15
log
@[234668] support svg figures in gmfgraph
@
text
@d1333 23
d1535 1
@


1.14
log
@[139126] respect implementation bundle of custom borders and layouts
@
text
@d1287 46
d1510 2
@


1.13
log
@[220598] Utilize EMF child extenders for GMF models
@
text
@d873 23
d1057 23
d1448 1
d1456 1
@


1.12
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@d12 1
d16 2
d19 1
d23 1
d31 1
d43 1
a43 1
public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
d61 8
d1299 27
@


1.11
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d146 23
d353 23
d1336 2
@


1.10
log
@[155230] mgolubev - Provide means to specify default size for figure
@
text
@d60 1
a60 1
	protected Collection supportedTypes = new ArrayList();
d73 1
a73 1
		supportedTypes.add(IItemPropertySource.class);		
d90 1
d113 1
d136 1
d159 1
d182 1
d205 1
d228 1
d251 1
d274 1
d297 1
d320 1
d343 1
d366 1
d389 1
d412 1
d435 1
d458 1
d481 1
d504 1
d527 1
d550 1
d573 1
d596 1
d619 1
d642 1
d665 1
d688 1
d711 1
d734 1
d757 1
d780 1
d803 1
d826 1
d849 1
d872 1
d895 1
d918 1
d941 1
d964 1
d987 1
d1010 1
d1033 1
d1056 1
d1079 1
d1102 1
d1125 1
d1148 1
d1171 1
d1205 1
d1216 1
d1226 1
d1230 1
a1230 1
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
@


1.9
log
@[154687] mgolubev - Support scalable polygons
@
text
@d297 22
d1238 1
@


1.8
log
@#140887 Remove Child interface from GMFGraph.
Although the need to reference child figures persist, thus FigureHandle was introduced, to allow diagramElements to reference either *generateable* figures (Figure subclasses) or *just-use* figures (like CustomFigure and FigureAccessor).
Refactoring performed with #131365 "Mirror GMFGraph model when generating standalone figure plugin" in mind
@
text
@d473 22
d1224 1
@


1.7
log
@#136877 Provide inital offset from the host link for the link label
@
text
@a186 22
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.Child} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ChildItemProvider childItemProvider;

	/**
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.Child}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Adapter createChildAdapter() {
		if (childItemProvider == null) {
			childItemProvider = new ChildItemProvider(this);
		}

		return childItemProvider;
	}

	/**
d979 22
a1188 1
		if (childItemProvider != null) childItemProvider.dispose();
d1205 2
a1225 1
		if (customAttributeItemProvider != null) customAttributeItemProvider.dispose();
@


1.6
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@d297 22
d1194 1
@


1.5
log
@[mgolubev] #127252 layout support
@
text
@d253 22
d1170 1
@


1.4
log
@#127461 add label diagram element in gmfgraph model
@
text
@d957 88
d1180 4
@


1.3
log
@[mgolubev] #127252 layout support
@
text
@d209 22
d1058 1
@


1.2
log
@move towards more draw2d-like model
@
text
@d781 154
d1062 7
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d561 1
a561 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.ColorStyle} instances.
d566 1
a566 1
	protected ColorStyleItemProvider colorStyleItemProvider;
d569 1
a569 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.ColorStyle}.
d574 3
a576 3
	public Adapter createColorStyleAdapter() {
		if (colorStyleItemProvider == null) {
			colorStyleItemProvider = new ColorStyleItemProvider(this);
d579 1
a579 1
		return colorStyleItemProvider;
d583 1
a583 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.SizeStyle} instances.
d588 1
a588 1
	protected SizeStyleItemProvider sizeStyleItemProvider;
d591 1
a591 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.SizeStyle}.
d596 3
a598 3
	public Adapter createSizeStyleAdapter() {
		if (sizeStyleItemProvider == null) {
			sizeStyleItemProvider = new SizeStyleItemProvider(this);
d601 1
a601 1
		return sizeStyleItemProvider;
d605 1
a605 1
	 * This keeps track of the one adapter used for all {@@link org.eclipse.gmf.gmfgraph.FontStyle} instances.
d610 1
a610 1
	protected FontStyleItemProvider fontStyleItemProvider;
d613 1
a613 1
	 * This creates an adapter for a {@@link org.eclipse.gmf.gmfgraph.FontStyle}.
d618 3
a620 3
	public Adapter createFontStyleAdapter() {
		if (fontStyleItemProvider == null) {
			fontStyleItemProvider = new FontStyleItemProvider(this);
d623 1
a623 1
		return fontStyleItemProvider;
d649 132
d898 3
a900 3
		if (colorStyleItemProvider != null) colorStyleItemProvider.dispose();
		if (sizeStyleItemProvider != null) sizeStyleItemProvider.dispose();
		if (fontStyleItemProvider != null) fontStyleItemProvider.dispose();
d902 6
@

