head	1.15;
access;
symbols
	v20081023-2107:1.15
	v20081022-1925:1.15
	v20081022-1005:1.15
	v20081020-0700:1.15
	v20080917-1925:1.15
	v20080916-2008:1.15
	v20080911-1728:1.15
	v20080911-1506:1.15
	v20080910-1520:1.15
	v20080910-1510:1.15
	v20080903-1520:1.15
	v20080903-1510:1.15
	v20080813-1510:1.15
	v20080811-1546:1.15
	v20080731-1520:1.15
	v20080725-1738:1.15
	v20080723-2246:1.15
	v20080723-2232:1.15
	v20080723-1700:1.15
	v20080722-1827:1.15
	v20080718-1700:1.15
	v20080718-1731:1.15
	v20080716-1600:1.15
	v20080716-1642:1.15
	R2_1_maintenance:1.15.0.2
	Root_R2_1_maintenance:1.15
	R2_1_0:1.15
	v20080610-1132:1.15
	v20080603-1553:1.15
	v20080527-1255:1.15
	v20080527-1151:1.14
	v20080516-1748:1.15
	v20080516-1143:1.15
	v20080512-1200:1.15
	v20080503-1740:1.15
	v20080501-2127:1.14
	v20080501-1739:1.15
	m20080429-1543:1.14
	v20080425-1959:1.15
	v20080417-1610:1.15
	v20080407-2250:1.15
	v20080407-0930:1.14
	v20080404-1111:1.14
	v20080328-1605:1.14
	v20080322-0000:1.14
	v20080222-1200:1.14
	v20080201-2010:1.14
	v20080201-0201:1.14
	v20080118-1129:1.14
	v20080114-2222:1.14
	v20080114-1111:1.14
	v20080107-1111:1.14
	v20071222-1111:1.14
	v20071214-1111:1.14
	v20071130-1111:1.14
	v20071124-0000:1.14
	v20071112-0000:1.14
	v20071108-0000:1.14
	v20071003-0000:1.14
	v20070915-0000:1.14
	v20070903-0000:1.14
	v20070809-0000:1.14
	R2_0_maintenance:1.14.0.4
	R2_0:1.14
	R4_20:1.14
	v20070621-0000:1.14
	RC3_20:1.14
	v20070614-1400:1.14
	v20070608-1300:1.14
	v20070605-1400:1.14
	v20070601-1400:1.14
	v20070525-1500:1.14
	v20070518-1300:1.14
	bugzilla111892_group_support:1.14.0.2
	Root_bugzilla111892_group_support:1.14
	v20070504-1000:1.14
	v20070420-1000:1.14
	v20070413-1300:1.14
	v20070330-1300:1.14
	v20060330-1300:1.14
	v20070322-1100:1.14
	v20060316-0600:1.14
	v20070221-1500:1.14
	v20070208-1800:1.14
	v20070202-0200:1.13.2.1
	v20070119-1200:1.13.2.1
	v20070111-0800:1.13.2.1
	v20070105-1200:1.13.2.1
	v20070103-0300:1.14
	M4_20:1.14
	v20061218-1500:1.13.2.1
	v20061218-1200:1.14
	v20061214-0000:1.14
	M3_20:1.14
	v20061117-0800:1.14
	v20061027-1200:1.13.2.1
	v20061013-1330:1.14
	v20061012-1100:1.13.2.1
	v20060925-1700:1.13.2.1
	v20060919-0800:1.13.2.1
	v20060907-1100:1.13
	M1_20:1.13
	v20060831-1500:1.13
	v20060824-1600:1.13
	v20060817-1500:1.13
	v20060810-1700:1.13
	v20060803-1200:1.13
	v20060728-0500:1.13
	v20060721-1130:1.13
	v20060713-1700:1.13
	R1_0_maintenance:1.13.0.2
	R1_0:1.13
	v20060627-1200:1.13
	v20060616-1400:1.13
	v20060616-1200:1.13
	v20060609-1400:1.13
	v20060531-1730:1.13
	v20060530-1930:1.13
	v20060526-1200:1.13
	v20060519-0800:1.13
	v20060512-1000:1.13
	I20060512-1000:1.13
	I20060505-1400:1.13
	I20060428-1300:1.13
	I20060424-0500:1.13
	I20060424-0300:1.13
	M6_10:1.13
	I20060407-1200:1.12
	I20060331-1000:1.12
	I20060324-0300:1.12
	I20060317-1300:1.12
	I20060317-1200:1.12
	I20060316-1300:1.12
	I20060309-1300:1.12
	M5_10:1.12
	S20060303-1600:1.12
	I20060227-1730:1.11
	I20060216-1945:1.11
	I20060210-1715:1.11
	I20060209-1815:1.11
	I20060203-0830:1.11
	I20060202-1415:1.11
	I20060129-1145:1.11
	I20060127-0900:1.10
	I20060120-1530:1.9
	I20060113-1700:1.9
	M4_10:1.9
	I20060107-1100:1.9
	I20060105-1630:1.9
	I20051230-1230:1.9
	I20051223-1100:1.9
	I20051217-0925:1.9
	I20051208-2000:1.9
	I20051201-1800:1.9
	I20051124-2000:1.9
	M3_10:1.8
	I20051118-1245:1.8
	I20051111-1800:1.8
	I20051106-0900:1.7
	v20051030:1.6;
locks; strict;
comment	@# @;


1.15
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.14;
commitid	4d0547fad5804567;

1.14
date	2006.10.03.15.02.05;	author ahunter;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.10.20.33.48;	author ldamus;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2006.02.28.02.31.20;	author cmahoney;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.27.20.22.56;	author sshaw;	state Exp;
branches;
next	1.10;

1.10
date	2006.01.20.22.10.12;	author cmahoney;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.21.18.26.02;	author mmostafa;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.08.16.02.30;	author sshaw;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.02.23.30.18;	author sshaw;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.04.20.30.48;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2005.09.22.15.42.19;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.12.21.29.10;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.08.18.58.40;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.44;	author sshaw;	state Exp;
branches;
next	;

1.13.2.1
date	2006.09.13.16.43.41;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.15
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.services.editpart;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.eclipse.core.runtime.Assert;
import org.eclipse.core.runtime.IConfigurationElement;
import org.eclipse.emf.transaction.RunnableWithResult;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.EditPartFactory;
import org.eclipse.gef.RootEditPart;
import org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.core.service.Service;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramRootEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.DefaultCompartmentEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.DefaultConnectionEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.DefaultNodeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.EditPartProviderConfiguration;
import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.IEditPartProvider;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.gmf.runtime.notation.Ratio;
import org.eclipse.gmf.runtime.notation.View;

/**
 * A service that supports the creation of editpart elements.  Default editparts will be created
 * if no sub-implementation creates one.
 * @@see #createGraphicEditPart(View)
 */
/*
 * @@canBeSeenBy %partners
 */
final public class EditPartService
	extends Service
	implements IEditPartProvider, EditPartFactory {
	
	/**
	 * A descriptor for <code>ISemanticProvider</code> defined
	 * by a configuration element.
	 */
	protected static class ProviderDescriptor
		extends Service.ProviderDescriptor {

		/** the provider configuration parsed from XML */
		private EditPartProviderConfiguration providerConfiguration;

		/**
		 * Constructs a <code>ISemanticProvider</code> descriptor for
		 * the specified configuration element.
		 * 
		 * @@param element The configuration element describing the provider.
		 */
		public ProviderDescriptor(IConfigurationElement element) {
			super(element);

			this.providerConfiguration =
				EditPartProviderConfiguration.parse(element);
			Assert.isNotNull(providerConfiguration);
		}

		/**
		 * @@see org.eclipse.gmf.runtime.common.core.service.IProvider#provides(org.eclipse.gmf.runtime.common.core.service.IOperation)
		 */
		public boolean provides(IOperation operation) {
			if (!policyInitialized){
				policy = getPolicy();
				policyInitialized = true;
			}
			if (policy != null)
				return policy.provides(operation);
			if (provider == null) {
				if (isSupportedInExtention(operation)) {
					providerConfiguration = null;
					return getProvider().provides(operation);
				}
				return false;
			}
			return getProvider().provides(operation);
		}

		/**
		 * Cheks if the operation is supported by the XML extension
		 * @@param operation
		 * @@return <code> true</code> or <code>false</code>
		 */
		private boolean isSupportedInExtention(IOperation operation) {
			if (operation instanceof CreateGraphicEditPartOperation) {
				CreateGraphicEditPartOperation o = (CreateGraphicEditPartOperation) operation;
				return providerConfiguration.supports(o.getView());
			} else if (operation instanceof CreateRootEditPartOperation) {
				return providerConfiguration.supportsRootEditPart();
			}
			return false;
		}
		
		/** 
		 * the default implementation is overriden here to make it easier to debug
		 * XML providers, now when you select the ProviderDescriptor in the debug
		 * window the provider class name will be displayed
		 * @@return the provider class name
		 */
		public String toString() {
			return getElement().getAttribute("class"); 	 //$NON-NLS-1$
		}
	}

	/** singelton instance. */
	private final static EditPartService instance = new EditPartService();

	/**
     * constructor
	 */
	private EditPartService() {
		super(true, false);
		configureProviders(DiagramUIPlugin.getPluginId(), "editpartProviders"); //$NON-NLS-1$
	}
	
	/**
	 * Signleton constructor.
	 * @@return the Signleton instance
	 */
	public static EditPartService getInstance() {
		return instance;
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.core.service.Service#newProviderDescriptor(org.eclipse.core.runtime.IConfigurationElement)
	 */
	protected Service.ProviderDescriptor newProviderDescriptor(
		IConfigurationElement element) {
		return new ProviderDescriptor(element);
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.core.service.Service#createPriorityCache()
	 */
	protected Map createPriorityCache() {
		return new HashMap();
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.service.Service#getCachingKey(org.eclipse.gmf.runtime.common.core.service.IOperation)
	 */
	protected Object getCachingKey(IOperation operation) {
		return ((IEditPartOperation)operation).getCachingKey();
	}

	/** 
	 * Creates an <code>IGraphicalEditPart</code> instance by forwarding a <code>CreateGraphicEditPartOperation</code>
	 * to the registered providers.  The supplied parameter is the editpart's constructor
	 * parameter. <P>
	 * The following <i>default</i> editparts are created if none is created by a provider.
	 * <UL>
	 * <LI> <code>IDiagramView</code> ... <code>DiagramEditPart</code>
	 * <LI> <code>ILabelView</code< ... <code>LabelEditPart</code>
	 * <LI> <code>ITextCompartmentView</code> ... <code>TextCompartmentEditPart</code>
	 * </UL>
	 * @@param view the view element <i>controlled</i> by the created editpart
	 * @@return an instance.
	 */
	public IGraphicalEditPart createGraphicEditPart(View view) {
		if (view == null)
			return null;

		IGraphicalEditPart result = null;
		CreateGraphicEditPartOperation createGraphicEditPartOperation = 
			new CreateGraphicEditPartOperation(view);
		result =
				(IGraphicalEditPart) execute(createGraphicEditPartOperation);
		
		if (result == null) {
			if (view instanceof Node) {
				if (((Node)view).getLayoutConstraint() instanceof Ratio) {
					result = new DefaultCompartmentEditPart(view);					
				} else {
					result = new DefaultNodeEditPart(view);
				}
			} else if (view instanceof Edge) {
				result = new DefaultConnectionEditPart(view);
			} else if (view instanceof Diagram) {
				result = new DiagramEditPart(view);
			}
		}
		return result;
	}

	/**
	  * Executes the specified operation using the FIRST execution strategy;
	  * the first provider capable of honoring the supplied operation.
	  * @@param operation
	  * @@return the provider's return value (or <tt>null</tt> if there was no
	  * provider able to honor the supplied operation.
	  */
	private Object execute(IOperation operation) {
		List results = execute(ExecutionStrategy.FIRST, operation);
		return results.isEmpty() ? null : results.get(0);
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gef.EditPartFactory#createEditPart(org.eclipse.gef.EditPart, java.lang.Object)
	 */
	public EditPart createEditPart(EditPart context, final Object model) {
		try {
			return (EditPart)TransactionUtil.getEditingDomain(model).runExclusive( new RunnableWithResult.Impl() {
				public void run() {
					setResult(createGraphicEditPart((View)model));
				}
			});
		} catch (InterruptedException e) {
			Trace.catching(DiagramUIPlugin.getInstance(),
				DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass(),
				"createEditPart", e); //$NON-NLS-1$
			Log.error(DiagramUIPlugin.getInstance(),
				DiagramUIStatusCodes.IGNORED_EXCEPTION_WARNING,
				"createEditPart", e); //$NON-NLS-1$
			return null;
		}
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.IEditPartProvider#createRootEditPart(org.eclipse.gmf.runtime.notation.Diagram)
	 */
	public RootEditPart createRootEditPart(Diagram diagram) {
		RootEditPart result;
		CreateRootEditPartOperation createRootEditPartOperation = new CreateRootEditPartOperation(diagram);
		result = (RootEditPart) execute(createRootEditPartOperation);

		// provide default implementation
		return (result == null) ? new DiagramRootEditPart(diagram.getMeasurementUnit())
			: result;
	}
	
}
@


1.14
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d18 1
a45 1
import org.eclipse.jface.util.Assert;
@


1.13
log
@[135584] gmf_head ldamus 060410 Classes and methods required by clients should be made public
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
@


1.13.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.12
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@a37 1
import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.EditPartOperation;
d167 1
a167 1
		return ((EditPartOperation)operation).getCachingKey();
@


1.11
log
@bugzilla 116224 gmf-head sshaw 060119 Notation meta-model support for coordinate systems
@
text
@d19 2
a23 2
import org.eclipse.jface.util.Assert;

d27 2
a28 1
import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
d32 1
d34 1
a40 1
import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
d46 1
d226 15
a240 5
		return (EditPart)MEditingDomainGetter.getMEditingDomain((View)model).runAsRead( new MRunnable() {
			public Object run() {
				return createGraphicEditPart((View)model);
			}
		});
@


1.10
log
@Bugzilla#123313 gmf_head cmahoney 060120 Making DiagramUIPlugin, DiagramUIStatusCodes, and DiagramUIDebugOptions internal
@
text
@d240 1
a240 1
		return (result == null) ? new DiagramRootEditPart()
@


1.9
log
@bugzilla 117343 gmf-head  mmostafa 051121 getPolicy on the Service class get called more than 500,000 times
@
text
@a27 1
import org.eclipse.gmf.runtime.diagram.ui.DiagramUIPlugin;
d31 1
@


1.8
log
@bugzilla 112788 gmf-head sshaw 051108 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d85 6
a90 2
			if (getPolicy() != null)
				return getPolicy().provides(operation);
@


1.7
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a34 1
import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.CreateRootEditPartOperation;
d226 3
a228 2
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.IEditPartProvider#createRootEditPart()
d230 1
a230 1
	public RootEditPart createRootEditPart() {
d232 1
a232 1
		CreateRootEditPartOperation createRootEditPartOperation = new CreateRootEditPartOperation();
@


1.6
log
@Bugzilla 110635 gmf_head keithc 051004 Delay configuration of services
@
text
@d33 1
a33 1
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.DefaultConnectorEditPart;
d196 1
a196 1
				result = new DefaultConnectorEditPart(view);
@


1.5
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d28 1
a121 1

d130 1
a130 1
	protected EditPartService() {
d132 1
@


1.4
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d111 10
@


1.3
log
@Bugzilla 109092  : rumv_head mmostafa 050908 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@a25 3
import org.eclipse.gmf.runtime.diagram.ui.editparts.DefaultCompartmentEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.DefaultConnectorEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.DefaultNodeEditPart;
d29 3
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d37 5
a41 5
import com.ibm.xtools.notation.Diagram;
import com.ibm.xtools.notation.Edge;
import com.ibm.xtools.notation.Node;
import com.ibm.xtools.notation.Ratio;
import com.ibm.xtools.notation.View;
@

