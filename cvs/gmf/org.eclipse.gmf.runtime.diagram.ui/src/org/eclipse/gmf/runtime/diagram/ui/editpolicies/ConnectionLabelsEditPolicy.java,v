head	1.3;
access;
symbols
	v20081023-2107:1.3
	v20081022-1925:1.3
	v20081022-1005:1.3
	v20081020-0700:1.3
	v20080917-1925:1.3
	v20080916-2008:1.3
	v20080911-1728:1.3
	v20080911-1506:1.3
	v20080910-1520:1.3
	v20080910-1510:1.3
	v20080903-1520:1.3
	v20080903-1510:1.3
	v20080813-1510:1.3
	v20080811-1546:1.3
	v20080731-1520:1.3
	v20080725-1738:1.3
	v20080723-2246:1.3
	v20080723-2232:1.3
	v20080723-1700:1.3
	v20080722-1827:1.3
	v20080718-1700:1.3
	v20080718-1731:1.3
	v20080716-1600:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.6
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080610-1132:1.3
	v20080603-1553:1.3
	v20080527-1255:1.3
	v20080527-1151:1.3
	v20080516-1748:1.3
	v20080516-1143:1.3
	v20080512-1200:1.3
	v20080503-1740:1.3
	v20080501-2127:1.3
	v20080501-1739:1.3
	m20080429-1543:1.3
	v20080425-1959:1.3
	v20080417-1610:1.3
	v20080407-2250:1.3
	v20080407-0930:1.3
	v20080404-1111:1.3
	v20080328-1605:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20080201-2010:1.3
	v20080201-0201:1.3
	v20080118-1129:1.3
	v20080114-2222:1.3
	v20080114-1111:1.3
	v20080107-1111:1.3
	v20071222-1111:1.3
	v20071214-1111:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071112-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.4
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070518-1300:1.3
	bugzilla111892_group_support:1.3.0.2
	Root_bugzilla111892_group_support:1.3
	v20070504-1000:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070202-0200:1.2.2.2
	v20070119-1200:1.2.2.2
	v20070111-0800:1.2.2.2
	v20070105-1200:1.2.2.2
	v20070103-0300:1.3
	M4_20:1.3
	v20061218-1500:1.2.2.2
	v20061218-1200:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.2.2.2
	v20061013-1330:1.3
	v20061012-1100:1.2.2.2
	v20060925-1700:1.2.2.2
	v20060919-0800:1.2.2.2
	v20060907-1100:1.2.2.2
	M1_20:1.2
	v20060831-1500:1.2.2.2
	v20060824-1600:1.2.2.2
	v20060817-1500:1.2.2.2
	v20060810-1700:1.2.2.1
	v20060803-1200:1.2.2.1
	v20060728-0500:1.2.2.1
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1400:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.2
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.10.03.15.02.03;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.25.19.38.12;	author cmahoney;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.11.02.23.30.16;	author sshaw;	state Exp;
branches;
next	;

1.2.2.1
date	2006.07.25.19.04.59;	author mmostafa;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2006.08.11.19.34.22;	author mmostafa;	state Exp;
branches;
next	;


desc
@@


1.3
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editpolicies;
import java.util.Iterator;

import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.editpolicies.AbstractEditPolicy;
import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
import org.eclipse.gmf.runtime.diagram.core.commands.SetPropertyCommand;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
import org.eclipse.gmf.runtime.diagram.ui.requests.ToggleConnectionLabelsRequest;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.notation.LayoutConstraint;
import org.eclipse.gmf.runtime.notation.Location;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;


/**
 * EditPolicy which toggles the visibility of the labels associated with
 * the host.
 * 
 * @@author jcorchis
 */
public class ConnectionLabelsEditPolicy extends AbstractEditPolicy {
	
	/**
	 * Understands the RequestConstants.REQ_TOGGLE_CONNECTION_LABELS request. 
	 * @@param request the request
	 * @@return true if RequestConstants.REQ_TOGGLE_CONNECTION_LABELS.equals(request.getType())
	 * and false otherwise.
	 */
	public boolean understandsRequest(Request request) {
		return RequestConstants.REQ_TOGGLE_CONNECTION_LABELS.equals(request
				.getType());
	}
	/**
	 * Returns a <code>Command<code> which changes the visibility for 
	 * the labels owned by the host.
	 * @@param request the request
	 * @@return the property change commands
	 */
	public Command getCommand(Request request) {
		if (RequestConstants.REQ_TOGGLE_CONNECTION_LABELS.equals(request.getType())) {
			boolean showHide = ((ToggleConnectionLabelsRequest) request)
					.showConnectionLabel();		
            CompositeCommand cc = 
                new CompositeCommand(DiagramUIMessages.Command_hideLabel_Label);
            Object model = getHost().getModel();
            if (model instanceof View){
                View hostView = (View)model;
       			Iterator iter = hostView.getChildren().iterator();
       			while(iter.hasNext()) {
                    View childView = (View)iter.next();
                    if (isLabelView(getHost() ,hostView, childView)){
                        cc.add(new SetPropertyCommand(getEditingDomain(),
                            new EObjectAdapter(childView),
                            Properties.ID_ISVISIBLE,
                            DiagramUIMessages.Command_hideLabel_Label,
                            Boolean.valueOf(showHide)));
                    }
        		}
        		return new ICommandProxy(cc);
            }
		}
		return null;
	}
    
   protected TransactionalEditingDomain getEditingDomain() {
       return ((IGraphicalEditPart) getHost()).getEditingDomain();
   }
    
    
   /**
    * determines if the passed view is a label view or not
    * the default provided implementation is just an educated/generic guss
    * clients can override this method to provide more specific response
    * @@param node
    * @@return
    */
    protected boolean isLabelView(EditPart containerEditPart,View parentView, View view) {
    	// labels are not compartments
        // labels contained by Node Shape Edit Parts or connection edit parts
        // labels had location constrain
        // labels had the string Type set on them 
        if ((containerEditPart instanceof ShapeNodeEditPart ||
             containerEditPart instanceof ConnectionEditPart )
             &&  view instanceof Node){
            Node node = (Node)view;
            String nodeType = node.getType();
            if (!isCompartment(node) &&
                (nodeType != null && nodeType.length()>0)){
                LayoutConstraint lContraint = node.getLayoutConstraint();
                if (lContraint instanceof Location){
                    return true;
                }
            }
        }
               
       return false;
    }
    
    /**
     * determines if the passed view is a compartment view or not
     * the default provided implementation is just an educated/generic guss
     * clients can override this method to provide more specific response
     * @@param node
     * @@return
     */
    protected boolean isCompartment(Node node) {
        if (node.getStyle(NotationPackage.eINSTANCE.getDrawerStyle())!=null){
              return true;
        }
        return false;
    }
	
	/**
	 * If the request returns an executable command the host is returned, otherwise null.
	 * @@param request
	 * @@return getHost() if the request is supported or null.
	 */
	public EditPart getTargetEditPart(Request request) {
		if (understandsRequest(request)) {
			Command command = getHost().getCommand(
				new ToggleConnectionLabelsRequest(false));
			if (command != null && command.canExecute())
				return getHost();
		}
		return null;
	}
}
@


1.2
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@a13 1
import java.util.List;
d15 1
a18 1
import org.eclipse.gef.commands.CompoundCommand;
d20 6
a25 2
import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.LabelEditPart;
a27 1
import org.eclipse.gmf.runtime.diagram.ui.requests.ChangePropertyValueRequest;
d30 6
d66 18
a83 16
			CompoundCommand cc = new CompoundCommand();
			List children = getHost().getChildren();
			Iterator iter = children.iterator();
			while(iter.hasNext()) {
				GraphicalEditPart ep = (GraphicalEditPart) iter.next();	
				if (ep instanceof LabelEditPart) {
					ChangePropertyValueRequest req = new ChangePropertyValueRequest(
						DiagramUIMessages.Command_hideLabel_Label,
						Properties.ID_ISVISIBLE,
						Boolean.valueOf(showHide));
					Command setLabelVisCmd = ep.getCommand(req);
					if (setLabelVisCmd != null && setLabelVisCmd.canExecute())
						cc.add(setLabelVisCmd);
				}
			}
			return cc;
d87 48
@


1.2.2.1
log
@[150950] gmf_R1_0_maintenace mmostafa 060725  GraphicalEditPart#getModelChildren() breaks ConnectionLabelsEditPolicy
@
text
@d14 1
a15 1
import org.eclipse.emf.transaction.TransactionalEditingDomain;
d19 1
d21 2
a22 6
import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
import org.eclipse.gmf.runtime.diagram.core.commands.SetPropertyCommand;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
d25 1
a27 6
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.notation.LayoutConstraint;
import org.eclipse.gmf.runtime.notation.Location;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;
d58 16
a73 18
            CompositeCommand cc = 
                new CompositeCommand(DiagramUIMessages.Command_hideLabel_Label);
            Object model = getHost().getModel();
            if (model instanceof View){
                View hostView = (View)model;
       			Iterator iter = hostView.getChildren().iterator();
       			while(iter.hasNext()) {
                    View childView = (View)iter.next();
                    if (isLabelView(getHost() ,hostView, childView)){
                        cc.add(new SetPropertyCommand(getEditingDomain(),
                            new EObjectAdapter(childView),
                            Properties.ID_ISVISIBLE,
                            DiagramUIMessages.Command_hideLabel_Label,
                            Boolean.valueOf(showHide)));
                    }
        		}
        		return new ICommandProxy(cc);
            }
a76 50
    
   protected TransactionalEditingDomain getEditingDomain() {
       return ((IGraphicalEditPart) getHost()).getEditingDomain();
   }
    
    
   /**
    * determines if the passed view is a label view or not
    * the default provided implementation is just an educated/generic guss
    * clients can override this method to provide more specific response
    * @@param node
    * @@return
    */
    protected boolean isLabelView(EditPart containerEditPart,View parentView, View view) {
    	// labels are not compartments
        // labels contained by Node Shape Edit Parts or connection edit parts
        // labels had location constrain
        // labels had the string Type set on them or they will not have the same
        // semantic element as their parent
        if ((containerEditPart instanceof ShapeNodeEditPart ||
             containerEditPart instanceof ConnectionEditPart )
             &&  view instanceof Node){
            Node node = (Node)view;
            String nodeType = node.getType();
            if (!isCompartment(node) &&
                (nodeType != null && nodeType.length()>0)||
                (parentView!=null && parentView.getElement() != view.getElement())){
                LayoutConstraint lContraint = node.getLayoutConstraint();
                if (lContraint instanceof Location){
                    return true;
                }
            }
        }
               
       return false;
    }
    
    /**
     * determines if the passed view is a compartment view or not
     * the default provided implementation is just an educated/generic guss
     * clients can override this method to provide more specific response
     * @@param node
     * @@return
     */
    protected boolean isCompartment(Node node) {
        if (node.getStyle(NotationPackage.eINSTANCE.getDrawerStyle())!=null){
              return true;
        }
        return false;
    }
@


1.2.2.2
log
@[153633] gmf_R1_0_maintenance mmostafa  060811 ConnectionLabelEditPolicy picks Top Views as target
@
text
@d104 2
a105 1
        // labels had the string Type set on them 
d112 2
a113 1
                (nodeType != null && nodeType.length()>0)){
@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d24 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
d65 1
a65 1
						DiagramResourceManager.getInstance().getString("Command.hideLabel.Label"), //$NON-NLS-1$
@

