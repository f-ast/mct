head	1.3;
access;
symbols
	v20081023-2107:1.3
	v20081022-1925:1.3
	v20081022-1005:1.3
	v20081020-0700:1.3
	v20080917-1925:1.3
	v20080916-2008:1.3
	v20080911-1728:1.3
	v20080911-1506:1.3
	v20080910-1520:1.3
	v20080910-1510:1.3
	v20080903-1520:1.3
	v20080903-1510:1.3
	v20080813-1510:1.3
	v20080811-1546:1.3
	v20080731-1520:1.3
	v20080725-1738:1.3
	v20080723-2246:1.3
	v20080723-2232:1.3
	v20080723-1700:1.3
	v20080722-1827:1.3
	v20080718-1700:1.3
	v20080718-1731:1.3
	v20080716-1600:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.8
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080610-1132:1.3
	v20080603-1553:1.3
	v20080527-1255:1.3
	v20080527-1151:1.3
	v20080516-1748:1.3
	v20080516-1143:1.3
	v20080512-1200:1.3
	v20080503-1740:1.3
	v20080501-2127:1.3
	v20080501-1739:1.3
	m20080429-1543:1.3
	v20080425-1959:1.3
	v20080417-1610:1.3
	v20080407-2250:1.3
	v20080407-0930:1.3
	v20080404-1111:1.3
	v20080328-1605:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20080201-2010:1.3
	v20080201-0201:1.3
	v20080118-1129:1.3
	v20080114-2222:1.3
	v20080114-1111:1.3
	v20080107-1111:1.3
	v20071222-1111:1.3
	v20071214-1111:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071112-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.6
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070518-1300:1.3
	bugzilla111892_group_support:1.3.0.4
	Root_bugzilla111892_group_support:1.3
	v20070504-1000:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070202-0200:1.3
	v20070119-1200:1.3
	v20070111-0800:1.3
	v20070105-1200:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061218-1500:1.3
	v20061218-1200:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.3
	v20061013-1330:1.3
	v20061012-1100:1.3
	v20060925-1700:1.3
	v20060919-0800:1.3
	v20060907-1100:1.3
	M1_20:1.3
	v20060831-1500:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060810-1700:1.3
	v20060803-1200:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.3
date	2005.11.24.19.36.51;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.10;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.37;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[113084] gmf_head etworkow 051124 Page Setup: Margins value change when switching between inches and millimeters
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.internal.dialogs;

import java.util.ArrayList;

import org.eclipse.jface.preference.IPersistentPreferenceStore;
import org.eclipse.jface.preference.IPreferenceNode;
import org.eclipse.jface.preference.IPreferencePage;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jface.preference.PreferenceDialog;
import org.eclipse.jface.preference.PreferenceManager;
import org.eclipse.jface.preference.PreferenceNode;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.events.SelectionListener;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Shell;

import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.ILabels;
import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.PageSetupWidgetFactory;
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.WorkspaceViewerProperties;
import org.eclipse.gmf.runtime.diagram.ui.preferences.PrintingPreferencePage;

/**
 * PSSelectionConfigurationBlock implements part of PSDialog allowing the user to toggle
 * between Diagram or Workspace settings.  It consists of the following controls:
 * 
 * 1. Use workspace settings radio button
 * 2. Use diagram settings radio button
 * 3. Configure workspace settings button
 * 
 * @@author etworkow
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 */
public class PageSetupSelectionConfigBlock implements ILabels {
	
	private Button 
		fButtonUseWorkspaceSettings,
		fButtonConfigure,
		fButtonUseDiagramSettings;
	
	private Shell fShell;

	/** Read preference values from preference store and uses them to initialize all controls. */
	private Initializer fInitialier;
	
	/** Saves preference values in preference store. */
	private Persistor fPersistor;

	/** List of all controls. */
	private ArrayList fControls = new ArrayList();
	
	/** Store holding all preferences */
	private IPreferenceStore fStore;

	/**
	 * Store holding the global preferences if the user chooses to configure the
	 * global page setting preferences
	 */
	private IPreferenceStore fGlobalStore;

	/** Parent dialog hosting thise selection configuration block. */
	private PageSetupDialog fParentDialog;
	
	/**
	 * Creates an instance of PageSetupSelectionConfigBlock.
	 * 
	 * @@param store
	 *            Preference store used to initialize
	 *            PSSelectionConfigurationBlock
	 * @@param globalStore
	 *            the global preference store used if the user chooses to
	 *            configure the global page setting preferences from this dialog
	 * @@param dialog
	 */
	public PageSetupSelectionConfigBlock(IPreferenceStore store, IPreferenceStore globalStore, PageSetupDialog dialog) {
		fInitialier = new Initializer(this);
		fPersistor = new Persistor(this);
		fStore = store;
		fGlobalStore = globalStore;
		fParentDialog = dialog;
	}
	
	/**
	 * Create composite with three buttons allowing the user to toggle
	 * between diagram and workspace setting.
	 * 
	 * @@param parent Composite holding the buttons
	 * @@return Control composite with buttons
	 */
	protected Control createContents(Composite parent) {	
		Composite selectionComposite = new Composite(parent, SWT.NULL);
		selectionComposite.setLayout(new GridLayout(2, true));
				
		createSelectionGroup(selectionComposite);
		fShell = parent.getShell();
		
		fInitialier.initSelectionControls();
		
		return selectionComposite;
	}
	
	/**
	 * Saves preferences in a preference store.
	 */
	protected void save() {
		fPersistor.saveConfigBlockControlValues();
	}
	
	/** 
	 * Create part of PSDialog allowing the user to choose between diagram and workspace settings.
	 */
	private void createSelectionGroup(Composite composite) {
		
		// Add two radio buttons to the group
		fButtonUseWorkspaceSettings = PageSetupWidgetFactory.createRadioButton(composite, LABEL_BUTTON_USE_WORKSPACE_SETTINGS);
		fButtonConfigure = PageSetupWidgetFactory.createPushButton(composite, LABEL_BUTTON_CONFIGURE_WORKSPACE_SETTINGS);
		fButtonUseDiagramSettings = PageSetupWidgetFactory.createRadioButton(composite, LABEL_BUTTON_USE_DIAGRAM_SETTINGS);
		
		if (fGlobalStore == null
			|| !(fGlobalStore instanceof IPersistentPreferenceStore)) {
			fButtonUseWorkspaceSettings.setEnabled(false);
		}
		
		addUseWorkspaceSettingsListener();
		addUseDiagramSettingsListener();
		addConfigureWorkspaceSettingsListener();
		
		fControls.add(fButtonUseWorkspaceSettings);
		fControls.add(fButtonConfigure);
		fControls.add(fButtonUseDiagramSettings);
	}
	
	/**
	 * Attach selection handling logic to 'Use workspace settings' button. 
	 */
	private void addUseWorkspaceSettingsListener() {
		fButtonUseWorkspaceSettings.addSelectionListener(new SelectionListener() {

			public void widgetSelected(SelectionEvent e) {
				fParentDialog.getConfigurationBlock().disableAllControls();
				fButtonConfigure.setEnabled(true);
				fParentDialog.getOkButton().setEnabled(true);
			}

			public void widgetDefaultSelected(SelectionEvent e) {
				// TODO Auto-generated method stub
			}
			
		});
	}
	
	/** 
	 * Attach selection handling logic to 'Use diagram settings' button. 
	 */
	private void addUseDiagramSettingsListener() {
		fButtonUseDiagramSettings.addSelectionListener(new SelectionListener() {

			public void widgetSelected(SelectionEvent e) {
				fParentDialog.getConfigurationBlock().enableAllControls();
				fButtonConfigure.setEnabled(false);
				fParentDialog.getConfigurationBlock().setOkButtonEnableStatus();
			}

			public void widgetDefaultSelected(SelectionEvent e) {
				// TODO Auto-generated method stub
			}			
		});
	}
	
	/** 
	 * Attach selection handling logic to 'Configure workspace settings' button. 
	 */
	private void addConfigureWorkspaceSettingsListener() {
		fButtonConfigure.addSelectionListener(new SelectionListener() {

			public void widgetSelected(SelectionEvent e) {
				// Display Printing preference page allowing the user to configure global printing settings
				IPreferencePage page = new PrintingPreferencePage(fGlobalStore);
				page.setTitle(ILabels.LABEL_PREFERENCE_PAGE_PRINTING);
				
				IPreferenceNode targetNode = new PreferenceNode(ID_PAGE_SETUP_PREF_PAGE, page);
				PreferenceManager manager = new PreferenceManager();
				manager.addToRoot(targetNode);
				
				PreferenceDialog dialog = new PreferenceDialog(fShell, manager);
				
				dialog.create();
				dialog.setMessage(TITLE_PAGE_SETUP_TAB_ITEM);
				dialog.open();
			}

			public void widgetDefaultSelected(SelectionEvent e) {
				// TODO Auto-generated method stub
			}
			
		});
	}

	/** 
	 * Return specified control. 
	 */
	public Control getControl(PageSetupControlType controlType) {
		if (controlType.equals(PageSetupControlType.BUTTON_USE_WORKSPACE_SETTINGS))
			return fButtonUseWorkspaceSettings;
		else if (controlType.equals(PageSetupControlType.BUTTON_USE_DIAGRAM_SETTINGS))
			return fButtonUseDiagramSettings;
		else if (controlType.equals(PageSetupControlType.BUTTON_CONFIGURE_WORKSPACE_SETTINGS))
			return fButtonConfigure;
		else
			return null;
	}
	
	/** 
	 * Calling this method will disable the 'Configure workspace settings' button. 
	 */
	public void disableButtonConfigure() {
		fButtonConfigure.setEnabled(false);
	}
	
	/** 
	 * Calling this method will enable the 'Configure workspace settings' button. 
	 */
	public void enableButtonConfigure() {
		fButtonConfigure.setEnabled(true);
	}
	
	// INITIALIZER
	private class Initializer {

		private PageSetupSelectionConfigBlock fBlockPrint;

		public Initializer(PageSetupSelectionConfigBlock configBlock) {
			fBlockPrint = configBlock;
		}
		
		public void initSelectionControls() {
			initRadioButtons();
		}
		
		private void initRadioButtons() {
			initRadioButton(fBlockPrint, PageSetupControlType.BUTTON_USE_WORKSPACE_SETTINGS, WorkspaceViewerProperties.PREF_USE_WORKSPACE_SETTINGS);
			initRadioButton(fBlockPrint, PageSetupControlType.BUTTON_USE_DIAGRAM_SETTINGS, WorkspaceViewerProperties.PREF_USE_DIAGRAM_SETTINGS);
		}
		
		private void initRadioButton(PageSetupSelectionConfigBlock block, PageSetupControlType controlType, String key) {
			Button button = (Button) block.getControl(controlType);
			button.setSelection(fStore.getBoolean(key));
		}
	}

	// PERSISTOR
	private class Persistor {

		private PageSetupSelectionConfigBlock fBlockPrint;

		public Persistor(PageSetupSelectionConfigBlock configBlock) {
			fBlockPrint = configBlock;
		}
		
		public void saveConfigBlockControlValues() {	
			saveConfigRadioButtonValues();
			//fBlockPrint.emptyControlList();
		}
		
		private void saveConfigRadioButtonValues() {
			saveRadioButton(fBlockPrint, PageSetupControlType.BUTTON_USE_WORKSPACE_SETTINGS, WorkspaceViewerProperties.PREF_USE_WORKSPACE_SETTINGS);
			saveRadioButton(fBlockPrint, PageSetupControlType.BUTTON_USE_DIAGRAM_SETTINGS, WorkspaceViewerProperties.PREF_USE_DIAGRAM_SETTINGS);
		}
		
		private void saveRadioButton(PageSetupSelectionConfigBlock block, PageSetupControlType controlType, String key) {
			Button button = (Button) block.getControl(controlType);
			fStore.setValue(key, button.getSelection());
		}
	}
}

@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d106 1
a106 1
		selectionComposite.setLayout(new GridLayout(2, false));
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

