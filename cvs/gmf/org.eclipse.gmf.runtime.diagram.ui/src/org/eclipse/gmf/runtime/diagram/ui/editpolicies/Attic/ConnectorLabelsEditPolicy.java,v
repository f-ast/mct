head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080731-1520:1.6
	v20080723-2246:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.4;
locks; strict;
comment	@# @;


1.6
date	2005.11.25.19.34.26;	author cmahoney;	state dead;
branches;
next	1.5;

1.5
date	2005.11.02.23.30.16;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.14.19.37.49;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.22.15.42.19;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.07;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.37;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bugzilla#113157 gmf_head cmahoney 051125 Removing deprecated classes
@
text
@/******************************************************************************
 * Copyright (c) 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editpolicies;
import java.util.Iterator;
import java.util.List;

import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gef.editpolicies.AbstractEditPolicy;

import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.LabelEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
import org.eclipse.gmf.runtime.diagram.ui.requests.ChangePropertyValueRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
import org.eclipse.gmf.runtime.diagram.ui.requests.ToggleConnectorLabelsRequest;


/**
 * EditPolicy which toggles the visibility of the labels associated with
 * the host.
 * 
 * @@author jcorchis
 * @@deprecated Renamed to {@@link org.eclipse.gmf.runtime.diagram.ui.editpolicies.ConnectionLabelsEditPolicy}
 *  */
public class ConnectorLabelsEditPolicy extends AbstractEditPolicy {
	
	/**
	 * Understands the RequestConstants.REQ_TOGGLE_CONNECTOR_LABELS request. 
	 * @@param request the request
	 * @@return true if RequestConstants.REQ_TOGGLE_CONNECTOR_LABELS.equals(request.getType())
	 * and false otherwise.
	 */
	public boolean understandsRequest(Request request) {
		return RequestConstants.REQ_TOGGLE_CONNECTOR_LABELS.equals(request
				.getType());
	}
	/**
	 * Returns a <code>Command<code> which changes the visibility for 
	 * the labels owned by the host.
	 * @@param request the request
	 * @@return the property change commands
	 */
	public Command getCommand(Request request) {
		if (RequestConstants.REQ_TOGGLE_CONNECTOR_LABELS.equals(request.getType())) {
			boolean showHide = ((ToggleConnectorLabelsRequest) request)
					.showConnectorLabel();		
			CompoundCommand cc = new CompoundCommand();
			List children = getHost().getChildren();
			Iterator iter = children.iterator();
			while(iter.hasNext()) {
				GraphicalEditPart ep = (GraphicalEditPart) iter.next();	
				if (ep instanceof LabelEditPart) {
					ChangePropertyValueRequest req = new ChangePropertyValueRequest(
						DiagramResourceManager.getInstance().getString("Command.hideLabel.Label"), //$NON-NLS-1$
						Properties.ID_ISVISIBLE,
						Boolean.valueOf(showHide));
					Command setLabelVisCmd = ep.getCommand(req);
					if (setLabelVisCmd != null && setLabelVisCmd.canExecute())
						cc.add(setLabelVisCmd);
				}
			}
			return cc;
		}
		return null;
	}
	
	/**
	 * If the request returns an executable command the host is returned, otherwise null.
	 * @@param request
	 * @@return getHost() if the request is supported or null.
	 */
	public EditPart getTargetEditPart(Request request) {
		if (understandsRequest(request)) {
			Command command = getHost().getCommand(new ToggleConnectorLabelsRequest(false));
			if (command != null && command.canExecute())
				return getHost();
		}
		return null;
	}
}
@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@@


1.4
log
@bugzilla 112685 gmf-head sshaw 051014 Sweep code for creation of Boolean objects
@
text
@d25 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d36 2
a37 1
 */
d67 1
a67 1
						PresentationResourceManager.getInstance().getString("Command.hideLabel.Label"), //$NON-NLS-1$
@


1.3
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d68 1
a68 1
						new Boolean(showHide));
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d24 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

