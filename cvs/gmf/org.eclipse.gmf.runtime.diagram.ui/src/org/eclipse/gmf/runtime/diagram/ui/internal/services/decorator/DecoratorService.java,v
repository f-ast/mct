head	1.9;
access;
symbols
	v20081023-2107:1.9
	v20081022-1925:1.9
	v20081022-1005:1.9
	v20081020-0700:1.9
	v20080917-1925:1.9
	v20080916-2008:1.9
	v20080911-1728:1.9
	v20080911-1506:1.9
	v20080910-1520:1.9
	v20080910-1510:1.9
	v20080903-1520:1.9
	v20080903-1510:1.9
	v20080813-1510:1.9
	v20080811-1546:1.9
	v20080731-1520:1.9
	v20080725-1738:1.9
	v20080723-2246:1.9
	v20080723-2232:1.9
	v20080723-1700:1.9
	v20080722-1827:1.9
	v20080718-1700:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080527-1255:1.9
	v20080527-1151:1.8
	v20080516-1748:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080503-1740:1.9
	v20080501-2127:1.8
	v20080501-1739:1.9
	m20080429-1543:1.8
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080407-2250:1.9
	v20080407-0930:1.8
	v20080404-1111:1.8
	v20080328-1605:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080201-2010:1.8
	v20080201-0201:1.8
	v20080118-1129:1.8
	v20080114-2222:1.8
	v20080114-1111:1.8
	v20080107-1111:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.4
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070518-1300:1.8
	bugzilla111892_group_support:1.8.0.2
	Root_bugzilla111892_group_support:1.8
	v20070504-1000:1.8
	v20070420-1000:1.8
	v20070413-1300:1.8
	v20070330-1300:1.8
	v20060330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070221-1500:1.8
	v20070208-1800:1.8
	v20070202-0200:1.7.2.1
	v20070119-1200:1.7.2.1
	v20070111-0800:1.7.2.1
	v20070105-1200:1.7.2.1
	v20070103-0300:1.8
	M4_20:1.8
	v20061218-1500:1.7.2.1
	v20061218-1200:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061117-0800:1.8
	v20061027-1200:1.7.2.1
	v20061013-1330:1.8
	v20061012-1100:1.7.2.1
	v20060925-1700:1.7.2.1
	v20060919-0800:1.7.2.1
	v20060907-1100:1.7
	M1_20:1.7
	v20060831-1500:1.7
	v20060824-1600:1.7
	v20060817-1500:1.7
	v20060810-1700:1.7
	v20060803-1200:1.7
	v20060728-0500:1.7
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1400:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.5
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.9
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.8;
commitid	4d0547fad5804567;

1.8
date	2006.10.03.15.02.05;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.11.14.00.27;	author cmahoney;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2006.01.20.22.10.12;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.21.18.26.02;	author mmostafa;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.30.19;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.04.20.30.48;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.09;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.50;	author sshaw;	state Exp;
branches;
next	;

1.7.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.9
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.internal.services.decorator;

import org.eclipse.core.runtime.Assert;
import org.eclipse.core.runtime.IConfigurationElement;
import org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.core.service.Service;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.CreateDecoratorsOperation;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorProvider;
import org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorTarget;

/**
 * This service is used to add decorators so that shapes and connections on a
 * diagram can be decorated with adornments.
 * 
 * @@author cmahoney
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 */
public class DecoratorService
	extends Service
	implements IDecoratorProvider {

	/**
	 * A descriptor for <code>IDecoratorProvider</code> defined by a
	 * configuration element.
	 */
	protected static class ProviderDescriptor
		extends Service.ProviderDescriptor {

		/** the provider configuration parsed from XML */
		private DecoratorProviderConfiguration providerConfiguration;

		/**
		 * Constructs an <code>IDecoratorProvider</code> descriptor for the
		 * specified configuration element.
		 * 
		 * @@param element
		 *            The configuration element describing the provider.
		 */
		public ProviderDescriptor(IConfigurationElement element) {
			super(element);

			this.providerConfiguration = DecoratorProviderConfiguration
				.parse(element);
			Assert.isNotNull(providerConfiguration);
		}

		/**
		 * @@see org.eclipse.gmf.runtime.common.core.service.IProvider#provides(org.eclipse.gmf.runtime.common.core.service.IOperation)
		 */
		public boolean provides(IOperation operation) {
			if (!policyInitialized){
				policy = getPolicy();
				policyInitialized = true;
			}
			if (policy != null)
				return policy.provides(operation);
			if (provider == null) {
				if (isSupportedInExtention(operation)) {
					providerConfiguration = null;
					return getProvider().provides(operation);
				}
				return false;
			}
			return getProvider().provides(operation);
		}

		/**
		 * Checks if the operation is supported by the XML extension
		 * 
		 * @@param operation
		 * @@return true if the operation is supported by the XML extension,
		 *         false otherwise
		 */
		private boolean isSupportedInExtention(IOperation operation) {
			if (operation instanceof CreateDecoratorsOperation) {
				CreateDecoratorsOperation o = (CreateDecoratorsOperation) operation;

				return providerConfiguration.supports(o.getDecoratorTarget());
			}
			return false;
		}
	}

	/** The singleton instance of the decorator service. */
	private final static DecoratorService service = new DecoratorService();

	static {
		service.configureProviders(DiagramUIPlugin.getPluginId(), "decoratorProviders"); //$NON-NLS-1$
	}

	/**
	 * Retrieves the singleton instance of the decorator service.
	 * 
	 * @@return The decorator service singleton.
	 */
	public static DecoratorService getInstance() {
		return service;
	}

	/**
	 * Executes a <code>CreateDecoratorsOperation</code> with a
	 * <code>REVERSE</code> execution strategy. This allows higher priority
	 * providers to install their decorators after lower priority providers so
	 * that their decorations will appear on top.
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorProvider#createDecorators(org.eclipse.gmf.runtime.diagram.ui.services.decorator.IDecoratorTarget)
	 */
	public void createDecorators(IDecoratorTarget decoratorTarget) {
		execute(ExecutionStrategy.REVERSE, new CreateDecoratorsOperation(
			decoratorTarget));
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.core.service.Service#newProviderDescriptor(org.eclipse.core.runtime.IConfigurationElement)
	 */
	protected Service.ProviderDescriptor newProviderDescriptor(
		IConfigurationElement element) {
		return new ProviderDescriptor(element);
	}
}@


1.8
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d14 1
a22 1
import org.eclipse.jface.util.Assert;
@


1.7
log
@Bugzilla#135594 gmf_head cmahoney 060411 IDecoratorTarget.Direction needs to be public
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
@


1.7.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.6
log
@Bugzilla#123313 gmf_head cmahoney 060120 Making DiagramUIPlugin, DiagramUIStatusCodes, and DiagramUIDebugOptions internal
@
text
@d20 2
d33 1
a33 1
	implements IDecoratorProviderBase {
d121 1
a121 1
	public void createDecorators(IDecoratorTargetBase decoratorTarget) {
@


1.5
log
@bugzilla 117343 gmf-head  mmostafa 051121 getPolicy on the Service class get called more than 500,000 times
@
text
@d18 1
a18 1
import org.eclipse.gmf.runtime.diagram.ui.DiagramUIPlugin;
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d62 6
a67 2
			if (getPolicy() != null)
				return getPolicy().provides(operation);
@


1.3
log
@Bugzilla 110635 gmf_head keithc 051004 Delay configuration of services
@
text
@d23 1
a23 1
 * This service is used to add decorators so that shapes and connectors on a
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
a14 2
import org.eclipse.jface.util.Assert;

d18 1
d20 1
d94 4
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

