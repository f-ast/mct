head	1.9;
access;
symbols
	v20081023-2107:1.9
	v20081022-1925:1.9
	v20081022-1005:1.9
	v20081020-0700:1.9
	v20080917-1925:1.9
	v20080916-2008:1.9
	v20080911-1728:1.9
	v20080911-1506:1.9
	v20080910-1520:1.9
	v20080910-1510:1.9
	v20080903-1520:1.9
	v20080903-1510:1.9
	v20080813-1510:1.9
	v20080811-1546:1.9
	v20080731-1520:1.9
	v20080725-1738:1.9
	v20080723-2246:1.9
	v20080723-2232:1.9
	v20080723-1700:1.9
	v20080722-1827:1.9
	v20080718-1700:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.6
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080527-1255:1.9
	v20080527-1151:1.9
	v20080516-1748:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080503-1740:1.9
	v20080501-2127:1.9
	v20080501-1739:1.9
	m20080429-1543:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080407-2250:1.9
	v20080407-0930:1.9
	v20080404-1111:1.9
	v20080328-1605:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20080201-2010:1.9
	v20080201-0201:1.9
	v20080118-1129:1.9
	v20080114-2222:1.9
	v20080114-1111:1.9
	v20080107-1111:1.9
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.4
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070518-1300:1.9
	bugzilla111892_group_support:1.9.0.2
	Root_bugzilla111892_group_support:1.9
	v20070504-1000:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070202-0200:1.8.2.2
	v20070119-1200:1.8.2.2
	v20070111-0800:1.8.2.2
	v20070105-1200:1.8.2.2
	v20070103-0300:1.9
	M4_20:1.9
	v20061218-1500:1.8.2.2
	v20061218-1200:1.9
	v20061214-0000:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061027-1200:1.8.2.2
	v20061013-1330:1.9
	v20061012-1100:1.8.2.2
	v20060925-1700:1.8.2.2
	v20060919-0800:1.8.2.1
	v20060907-1100:1.8
	M1_20:1.8
	v20060831-1500:1.8
	v20060824-1600:1.8
	v20060817-1500:1.8
	v20060810-1700:1.8
	v20060803-1200:1.8
	v20060728-0500:1.8
	v20060721-1130:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060616-1400:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-0800:1.8
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051217-0925:1.7
	I20051208-2000:1.7
	I20051201-1800:1.7
	I20051124-2000:1.7
	M3_10:1.7
	I20051118-1245:1.7
	I20051111-1800:1.7
	I20051106-0900:1.7
	v20051030:1.5;
locks; strict;
comment	@# @;


1.9
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.28.02.31.21;	author cmahoney;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2005.11.04.21.27.49;	author sshaw;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.02.23.30.17;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2005.09.22.15.42.19;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.12.21.29.11;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.15.48.53;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.22;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.43;	author sshaw;	state Exp;
branches;
next	;

1.8.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2006.09.19.21.15.32;	author cmahoney;	state Exp;
branches;
next	;


desc
@@


1.9
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.handles;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import org.eclipse.draw2d.Cursors;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.Locator;
import org.eclipse.draw2d.StackLayout;
import org.eclipse.draw2d.TreeSearch;
import org.eclipse.draw2d.geometry.Dimension;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.DragTracker;
import org.eclipse.gef.handles.AbstractHandle;
import org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker;
import org.eclipse.gmf.runtime.diagram.core.listener.NotificationListener;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IResizableCompartmentEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.figures.CollapseFigure;
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
import org.eclipse.gmf.runtime.diagram.ui.internal.tools.CompartmentCollapseTracker;
import org.eclipse.gmf.runtime.notation.DrawerStyle;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;

/**
 * A handle for collapsing resizable compartments
 *  
 * @@author melaasar
 */
public class CompartmentCollapseHandle
	extends AbstractHandle
	implements PropertyChangeListener, NotificationListener {

	/** 
	 * Positions the supplied figure in its owner's top left corner offset by [1,1] 
	 */
	private class CollapseHandleLocator implements Locator {
		public void relocate(IFigure target) {
			Rectangle theBounds = getOwnerFigure().getClientArea().getCopy();          
			getOwnerFigure().translateToAbsolute(theBounds);
            target.translateToRelative(theBounds);
			target.setLocation(theBounds.getLocation());            
		}
	}

	/** handle figure dimension */
	public static Dimension SIZE = new Dimension(11, 11);

	/** the handle figure */
	protected CollapseFigure collapseFigure = null;

	/**
     * Creates a new Compartment Collapse Handle
     * 
     * @@param owner
     */
    public CompartmentCollapseHandle(IGraphicalEditPart owner) {
        setOwner(owner);
        setLocator(new CollapseHandleLocator());
        setCursor(Cursors.ARROW);

        setSize(SIZE);
        setLayoutManager(new StackLayout());

        if (owner != null && owner.getParent() != null
            && owner.getParent() instanceof IGraphicalEditPart)
            add(collapseFigure = new CollapseFigure(((IGraphicalEditPart) owner
                .getParent()).getFigure()));
        else
            add(collapseFigure = new CollapseFigure());

        View view = owner.getNotationView();
        if (view != null) {
            DrawerStyle style = (DrawerStyle) view
                .getStyle(NotationPackage.eINSTANCE.getDrawerStyle());
            if (style != null) {
                collapseFigure.setCollapsed(style.isCollapsed());
                return;
            }
        }
        collapseFigure.setCollapsed(false);
    }

	/**
	 * @@see org.eclipse.draw2d.IFigure#findFigureAt(int, int, TreeSearch)
	 */
	public IFigure findFigureAt(int x, int y, TreeSearch search) {
		IFigure found = super.findFigureAt(x, y, search);
		return (collapseFigure.equals(found)) ? this : found;
	}

	/**
	 * @@see org.eclipse.gef.handles.AbstractHandle#createDragTracker()
	 */
	protected DragTracker createDragTracker() {
		return new CompartmentCollapseTracker(
			(IResizableCompartmentEditPart) getOwner());
	}

	/**
	 * @@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
	 */
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getPropertyName().equals(Properties.ID_COLLAPSED))
			collapseFigure.setCollapsed(
				((Boolean) evt.getNewValue()).booleanValue());
	}
	
	/**
	 * @@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
	 */
	public void notifyChanged(Notification notification) {
		if (NotationPackage.eINSTANCE.getDrawerStyle_Collapsed()==notification.getFeature())
			collapseFigure.setCollapsed(notification.getNewBooleanValue());
	}

	/**
	 * @@see org.eclipse.draw2d.IFigure#addNotify()
	 */
	public void addNotify() {
		super.addNotify();
		IGraphicalEditPart owner = (IGraphicalEditPart) getOwner();
		View view = owner.getNotationView();
		if (view!=null){
			getDiagramEventBroker().addNotificationListener(owner.getNotationView(),CompartmentCollapseHandle.this);
		}
	}

	/**
	 * @@see org.eclipse.draw2d.IFigure#removeNotify()
	 */
	public void removeNotify() {
		IGraphicalEditPart owner = (IGraphicalEditPart) getOwner();
		getDiagramEventBroker().removeNotificationListener(owner.getNotationView(),this);
		super.removeNotify();
	}
	
    private DiagramEventBroker getDiagramEventBroker() {
        TransactionalEditingDomain theEditingDomain = ((IGraphicalEditPart) getOwner())
            .getEditingDomain();
        if (theEditingDomain != null) {
            return DiagramEventBroker.getInstance(theEditingDomain);
        }
        return null;
    }

}
@


1.8
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d28 1
a29 1
import org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker;
d53 1
a53 1
			Rectangle theBounds = getOwnerFigure().getClientArea().getCopy();
d55 2
a56 2
			target.translateToRelative(theBounds);
			target.setLocation(theBounds.getLocation());
d67 30
a96 21
	 * Creates a new Compartment Collapse Handle 
	 * @@param owner
	 */
	public CompartmentCollapseHandle(IGraphicalEditPart owner) {
		setOwner(owner);
		setLocator(new CollapseHandleLocator());
		setCursor(Cursors.ARROW);
		
		setSize(SIZE);
		setLayoutManager(new StackLayout());
		add(collapseFigure = new CollapseFigure());
		View view = owner.getNotationView();
		if (view!=null){
			DrawerStyle style = (DrawerStyle) view.getStyle(NotationPackage.eINSTANCE.getDrawerStyle());
			if (style != null){
				collapseFigure.setCollapsed(style.isCollapsed());
				return;
			}
		}
		collapseFigure.setCollapsed(false);
	}
@


1.8.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.8.2.2
log
@Bugzilla#115905 gmf_R1_0_maintenance crevells 060919 ShapeCompartment collapse handle drawn outside shapecomartment figure
Contributed by: Alex Boyko
@
text
@d28 1
a29 1
import org.eclipse.gmf.runtime.diagram.core.listener.NotificationListener;
d53 1
a53 1
			Rectangle theBounds = getOwnerFigure().getClientArea().getCopy();          
d55 2
a56 2
            target.translateToRelative(theBounds);
			target.setLocation(theBounds.getLocation());            
d67 21
a87 30
     * Creates a new Compartment Collapse Handle
     * 
     * @@param owner
     */
    public CompartmentCollapseHandle(IGraphicalEditPart owner) {
        setOwner(owner);
        setLocator(new CollapseHandleLocator());
        setCursor(Cursors.ARROW);

        setSize(SIZE);
        setLayoutManager(new StackLayout());

        if (owner != null && owner.getParent() != null
            && owner.getParent() instanceof IGraphicalEditPart)
            add(collapseFigure = new CollapseFigure(((IGraphicalEditPart) owner
                .getParent()).getFigure()));
        else
            add(collapseFigure = new CollapseFigure());

        View view = owner.getNotationView();
        if (view != null) {
            DrawerStyle style = (DrawerStyle) view
                .getStyle(NotationPackage.eINSTANCE.getDrawerStyle());
            if (style != null) {
                collapseFigure.setCollapsed(style.isCollapsed());
                return;
            }
        }
        collapseFigure.setCollapsed(false);
    }
@


1.7
log
@bugzilla 112788 gmf-head sshaw 051104 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d25 1
d130 1
a130 1
			DiagramEventBroker.getInstance().addNotificationListener(owner.getNotationView(),CompartmentCollapseHandle.this);
d139 1
a139 1
		DiagramEventBroker.getInstance().removeNotificationListener(owner.getNotationView(),this);
d142 9
@


1.6
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a30 1
import org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure;
a33 1
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;
d60 1
a60 4
	public static Dimension SIZE =
		new Dimension(
			MapMode.LPtoDP(ResizableCompartmentFigure.MIN_CLIENT_SIZE),
			MapMode.LPtoDP(ResizableCompartmentFigure.MIN_CLIENT_SIZE));
d73 1
@


1.5
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d28 1
a28 1
import org.eclipse.gmf.runtime.diagram.core.listener.PresentationListener;
d133 1
a133 1
			PresentationListener.getInstance().addNotificationListener(owner.getNotationView(),CompartmentCollapseHandle.this);
d142 1
a142 1
		PresentationListener.getInstance().removeNotificationListener(owner.getNotationView(),this);
@


1.4
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d24 1
d27 1
d33 1
a34 1
import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
d47 1
a47 1
	implements PropertyChangeListener {
d116 8
d133 1
a133 1
			PresentationListener.getInstance().addPropertyChangeListener(owner.getNotationView(),CompartmentCollapseHandle.this);
d142 1
a142 1
		PresentationListener.getInstance().removePropertyChangeListener(owner.getNotationView(),this);
@


1.3
log
@Bugzilla109092 : rmp_head mmostafa 050912 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d24 1
a24 2

import org.eclipse.gmf.runtime.diagram.core.listener.PropertyChangeNotifier;
a30 1
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
a65 3
	/** the owner's model listener */
	private PropertyChangeNotifier notifier;

d121 1
a121 2
			notifier = ViewUtil.getPropertyChangeNotifier(view);
			notifier.addPropertyChangeListener(CompartmentCollapseHandle.this);
d129 2
a130 1
		notifier.removePropertyChangeListener(this);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d34 3
a36 3
import com.ibm.xtools.notation.DrawerStyle;
import com.ibm.xtools.notation.NotationPackage;
import com.ibm.xtools.notation.View;
@

