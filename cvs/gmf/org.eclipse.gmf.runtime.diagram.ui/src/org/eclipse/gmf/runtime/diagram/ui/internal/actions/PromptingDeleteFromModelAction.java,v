head	1.10;
access;
symbols
	v20081023-2107:1.9.4.1
	v20081022-1925:1.10
	v20081022-1005:1.9.4.1
	v20081020-0700:1.10
	v20080917-1925:1.10
	v20080916-2008:1.9.4.1
	v20080911-1728:1.9
	v20080911-1506:1.9
	v20080910-1520:1.9
	v20080910-1510:1.9
	v20080903-1520:1.9
	v20080903-1510:1.9
	v20080813-1510:1.9
	v20080811-1546:1.9
	v20080731-1520:1.9
	v20080725-1738:1.9
	v20080723-2246:1.9
	v20080723-2232:1.9
	v20080723-1700:1.9
	v20080722-1827:1.9
	v20080718-1700:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.4
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080527-1255:1.9
	v20080527-1151:1.9
	v20080516-1748:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080503-1740:1.9
	v20080501-2127:1.9
	v20080501-1739:1.9
	m20080429-1543:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080407-2250:1.9
	v20080407-0930:1.9
	v20080404-1111:1.9
	v20080328-1605:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20080201-2010:1.9
	v20080201-0201:1.9
	v20080118-1129:1.9
	v20080114-2222:1.9
	v20080114-1111:1.9
	v20080107-1111:1.9
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070518-1300:1.8
	bugzilla111892_group_support:1.8.0.2
	Root_bugzilla111892_group_support:1.8
	v20070504-1000:1.7
	v20070420-1000:1.7
	v20070413-1300:1.7
	v20070330-1300:1.7
	v20060330-1300:1.7
	v20070322-1100:1.7
	v20060316-0600:1.7
	v20070221-1500:1.7
	v20070208-1800:1.7
	v20070202-0200:1.6.2.1
	v20070119-1200:1.6.2.1
	v20070111-0800:1.6.2.1
	v20070105-1200:1.6.2.1
	v20070103-0300:1.7
	M4_20:1.7
	v20061218-1500:1.6.2.1
	v20061218-1200:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061027-1200:1.6.2.1
	v20061013-1330:1.7
	v20061012-1100:1.6.2.1
	v20060925-1700:1.6.2.1
	v20060919-0800:1.6.2.1
	v20060907-1100:1.6
	M1_20:1.6
	v20060831-1500:1.6
	v20060824-1600:1.6
	v20060817-1500:1.6
	v20060810-1700:1.6
	v20060803-1200:1.6
	v20060728-0500:1.6
	v20060721-1130:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060616-1400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.10
date	2008.09.16.21.00.08;	author aboyko;	state Exp;
branches;
next	1.9;
commitid	2f5248d01e574567;

1.9
date	2007.06.18.19.10.08;	author ahunter;	state Exp;
branches
	1.9.4.1;
next	1.8;
commitid	7c604676d8904567;

1.8
date	2007.05.16.20.13.13;	author crevells;	state Exp;
branches;
next	1.7;
commitid	2fe6464b65d94567;

1.7
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.14.18.39.49;	author ahunter;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.01.20.17.40;	author mmostafa;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.02.23.30.18;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.11;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.47;	author sshaw;	state Exp;
branches;
next	;

1.6.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;

1.9.4.1
date	2008.09.16.20.40.47;	author aboyko;	state Exp;
branches;
next	;
commitid	7de448d019ce4567;


desc
@@


1.10
log
@[236868] gmf_head lgrahek 080916 Prompt on deletion dose not work
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.diagram.ui.internal.actions;

import java.util.Iterator;

import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gmf.runtime.diagram.ui.actions.DeleteFromModelAction;
import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants;
import org.eclipse.gmf.runtime.diagram.ui.requests.EditCommandRequestWrapper;
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchPart;


/**
 * Delete Action originating via keyboard using the 'Ctrl+d' hot/shortcut key
 * as well as using context menu "Delete from model"
 * 
 * @@author bagrodia
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 * Created on Jun 30, 2004
 */
public class PromptingDeleteFromModelAction
	extends DeleteFromModelAction {	
	
	/**
	 * used to distinguish context menu calls from keyboard calls (the only difference is in calculating enablement) 
	 */
	private boolean calledFromContextMenu;

	/**
	 * Creates a <code>PromptingDeleteFromModelAction</code> with a default label.
	 *
	 * @@param part The part this action will be associated with.
	 */
	public PromptingDeleteFromModelAction(IWorkbenchPart part) {
		super(part);
		calledFromContextMenu = false;
	}

	/**
	 * Creates a <code>PromptingDeleteFromModelAction</code> with a default label.
	 * @@param workbenchPage The page this action will be associated with.
	 */
	public PromptingDeleteFromModelAction(IWorkbenchPage workbenchPage) {
		super(workbenchPage);
		calledFromContextMenu = false;
	}
	
	/**
	 * Creates a <code>PromptingDeleteFromModelAction</code> with a default label.
	 * @@param workbenchPage The page this action will be associated with.
	 */
	public PromptingDeleteFromModelAction(IWorkbenchPage workbenchPage, boolean fromContextMenu) {
		super(workbenchPage);
		calledFromContextMenu = fromContextMenu;
	}	
	
	/**
	 * Calculates enablement of this action. 
	 * 
	 * @@return <code>true</code> if call is made via keyboard, or from context menu and action should be enabled,
	 *         <code>false</code> otherwise
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#calculateEnabled()
	 */
	protected boolean calculateEnabled() {
		if (calledFromContextMenu) {
			// Need to calculate enablement.
			return super.calculateEnabled();
		} else {
			// for calls from keyboard, always return true for performance reasons
			return true; 
		}
	}
	
	
	/** First gets the delete command, where target request is modified to include the information about
	 * whether confirmation prompt should be issued. Then it runs the obtained command.
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#doRun(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected void doRun(IProgressMonitor progressMonitor) {		
		Request req = getTargetRequest();
		boolean showInformationDialog = ((IPreferenceStore) getPreferencesHint()
					.getPreferenceStore())
					.getBoolean(IPreferenceConstants.PREF_PROMPT_ON_DEL_FROM_MODEL);
		DestroyElementRequest targetRequest = (DestroyElementRequest)((EditCommandRequestWrapper)req).getEditCommandRequest();		
		targetRequest.setConfirm(showInformationDialog);

		Command command = getCommand();
		if ((command instanceof CompoundCommand)&&(((CompoundCommand)command).getChildren().length > 0)){
			CompositeTransactionalCommand compositeModelActionCommand = new CompositeTransactionalCommand(getEditingDomain(),
                getCommandLabel());
			CompoundCommand compoundCommand = (CompoundCommand)command;
			Iterator iterator = compoundCommand.getCommands().iterator();
			while (iterator.hasNext()){
				compositeModelActionCommand.compose(new CommandProxy((Command)iterator.next()));				
			}
			command = new ICommandProxy(compositeModelActionCommand); 
		}
		if (command != null)
			execute(command, progressMonitor);
	}
	
	/**
	 *  Return the semantic request to destroy the element
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createTargetRequest()
	 */
	protected Request createTargetRequest() {		
		TransactionalEditingDomain editingDomain = getEditingDomain();
        if (editingDomain != null) {
            DestroyElementRequest destroyRequest = new DestroyElementRequest(
                editingDomain, false);
            return new EditCommandRequestWrapper(destroyRequest);
        }
        return null;
	}


}
@


1.9
log
@gmf_head ahunter 070618 Update Copyright for files changed in 2007 for GMF 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2007 IBM Corporation and others.
d23 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
d36 1
d45 4
d56 2
a57 1
		super(part);		
d65 2
a66 1
		super(workbenchPage);		
a68 1
	
d70 2
a71 2
	 *  Return the semantic request to destroy the element
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createTargetRequest()
d73 4
a76 15
	protected Request createTargetRequest() {
		
		boolean shouldPrompt = ((IPreferenceStore) getPreferencesHint()
			.getPreferenceStore())
			.getBoolean(IPreferenceConstants.PREF_PROMPT_ON_DEL_FROM_MODEL);
        
		TransactionalEditingDomain editingDomain = getEditingDomain();
        if (editingDomain != null) {
            DestroyElementRequest destroyRequest = new DestroyElementRequest(
                editingDomain, shouldPrompt);
            return new EditCommandRequestWrapper(destroyRequest);
        }
        return null;
	}

d78 5
a82 1
	/* (non-Javadoc)
d86 7
a92 1
		return true;
d96 3
a98 1
	/* (non-Javadoc)
d101 8
a108 2
	protected void doRun(IProgressMonitor progressMonitor) {
		setTargetRequest(null);
d124 13
@


1.9.4.1
log
@[236868] gmf_R2_1_maintenance lgrahek 080916 Prompt on deletion dose not work
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2008 IBM Corporation and others.
d23 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
a35 1
 * as well as using context menu "Delete from model"
a43 4
	/**
	 * used to distinguish context menu calls from keyboard calls (the only difference is in calculating enablement) 
	 */
	private boolean calledFromContextMenu;
d51 1
a51 2
		super(part);
		calledFromContextMenu = false;
d59 1
a59 2
		super(workbenchPage);
		calledFromContextMenu = false;
d62 1
d64 2
a65 2
	 * Creates a <code>PromptingDeleteFromModelAction</code> with a default label.
	 * @@param workbenchPage The page this action will be associated with.
d67 15
a81 4
	public PromptingDeleteFromModelAction(IWorkbenchPage workbenchPage, boolean fromContextMenu) {
		super(workbenchPage);
		calledFromContextMenu = fromContextMenu;
	}	
d83 1
a83 5
	/**
	 * Calculates enablement of this action. 
	 * 
	 * @@return <code>true</code> if call is made via keyboard, or from context menu and action should be enabled,
	 *         <code>false</code> otherwise
d87 1
a87 7
		if (calledFromContextMenu) {
			// Need to calculate enablement.
			return super.calculateEnabled();
		} else {
			// for calls from keyboard, always return true for performance reasons
			return true; 
		}
d91 1
a91 3
	/** First gets the delete command, where target request is modified to include the information about
	 * whether confirmation prompt should be issued. Then it runs the obtained command.
	 * 
d94 2
a95 8
	protected void doRun(IProgressMonitor progressMonitor) {		
		Request req = getTargetRequest();
		boolean showInformationDialog = ((IPreferenceStore) getPreferencesHint()
					.getPreferenceStore())
					.getBoolean(IPreferenceConstants.PREF_PROMPT_ON_DEL_FROM_MODEL);
		DestroyElementRequest targetRequest = (DestroyElementRequest)((EditCommandRequestWrapper)req).getEditCommandRequest();		
		targetRequest.setConfirm(showInformationDialog);

a110 13
	/**
	 *  Return the semantic request to destroy the element
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#createTargetRequest()
	 */
	protected Request createTargetRequest() {		
		TransactionalEditingDomain editingDomain = getEditingDomain();
        if (editingDomain != null) {
            DestroyElementRequest destroyRequest = new DestroyElementRequest(
                editingDomain, false);
            return new EditCommandRequestWrapper(destroyRequest);
        }
        return null;
	}
@


1.8
log
@[187378] gmf_head crevells 070516 Make DeleteFromModelAction public
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.7
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d22 1
@


1.6
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.6.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.5
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d22 1
a22 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d104 1
a104 1
			command = new EtoolsProxyCommand(compositeModelActionCommand); 
@


1.4
log
@bugzilla 109923 gmf-head mmostafa 060201 Class names contain 'xtools'
@
text
@d18 1
a21 4
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchPart;

d26 1
a26 1
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand;
d28 3
d71 9
a79 2
		
		DestroyElementRequest destroyRequest = new DestroyElementRequest(shouldPrompt);
a80 4
		return 	new EditCommandRequestWrapper(destroyRequest);
	}
	
	
d97 2
a98 2
			CompositeModelCommand compositeModelActionCommand = new CompositeModelCommand(
				getCommandLabel());
@


1.3
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d26 1
a26 1
import org.eclipse.gmf.runtime.diagram.ui.commands.XtoolsProxyCommand;
d99 1
a99 1
				compositeModelActionCommand.compose(new XtoolsProxyCommand((Command)iterator.next()));				
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a24 1
import org.eclipse.gmf.runtime.diagram.ui.IPreferenceConstants;
d27 1
d64 1
a64 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#createTargetRequest()
d80 1
a80 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#calculateEnabled()
d88 1
a88 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#doRun(org.eclipse.core.runtime.IProgressMonitor)
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

