head	1.6;
access;
symbols
	v20081023-2107:1.6
	v20081022-1925:1.6
	v20081022-1005:1.6
	v20081020-0700:1.6
	v20080917-1925:1.6
	v20080916-2008:1.6
	v20080911-1728:1.6
	v20080911-1506:1.6
	v20080910-1520:1.6
	v20080910-1510:1.6
	v20080903-1520:1.6
	v20080903-1510:1.6
	v20080813-1510:1.6
	v20080811-1546:1.6
	v20080731-1520:1.6
	v20080725-1738:1.6
	v20080723-2246:1.6
	v20080723-2232:1.6
	v20080723-1700:1.6
	v20080722-1827:1.6
	v20080718-1700:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.8
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080527-1255:1.6
	v20080527-1151:1.6
	v20080516-1748:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080503-1740:1.6
	v20080501-2127:1.6
	v20080501-1739:1.6
	m20080429-1543:1.6
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080407-2250:1.6
	v20080407-0930:1.6
	v20080404-1111:1.6
	v20080328-1605:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20080201-2010:1.6
	v20080201-0201:1.6
	v20080118-1129:1.6
	v20080114-2222:1.6
	v20080114-1111:1.6
	v20080107-1111:1.6
	v20071222-1111:1.6
	v20071214-1111:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071112-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.6
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070518-1300:1.6
	bugzilla111892_group_support:1.6.0.4
	Root_bugzilla111892_group_support:1.6
	v20070504-1000:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070202-0200:1.6
	v20070119-1200:1.6
	v20070111-0800:1.6
	v20070105-1200:1.6
	v20070103-0300:1.6
	M4_20:1.6
	v20061218-1500:1.6
	v20061218-1200:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.6
	v20061013-1330:1.6
	v20061012-1100:1.6
	v20060925-1700:1.6
	v20060919-0800:1.6
	v20060907-1100:1.6
	M1_20:1.6
	v20060831-1500:1.6
	v20060824-1600:1.6
	v20060817-1500:1.6
	v20060810-1700:1.6
	v20060803-1200:1.6
	v20060728-0500:1.6
	v20060721-1130:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060616-1400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.2
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2006.06.14.18.39.49;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.06.20.04.27;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.07.19.46.08;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.25.19.38.12;	author cmahoney;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.02.23.30.16;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editpolicies;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.draw2d.ColorConstants;
import org.eclipse.draw2d.FigureUtilities;
import org.eclipse.draw2d.Graphics;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.RectangleFigure;
import org.eclipse.draw2d.geometry.Dimension;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.AccessibleHandleProvider;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.core.command.ICommand;
import org.eclipse.gmf.runtime.diagram.core.internal.commands.IPropertyValueDeferred;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.commands.SetBoundsCommand;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.ChangeBoundsDeferredRequest;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;

/**
 * A resizable editpolicy for resizable shape editparts 1- It customizes the
 * selection handles 2- It handles the autosize and deferred change bounds
 * request
 * 
 * @@author melaasar
 */
public class ResizableShapeEditPolicy
	extends ResizableEditPolicyEx {

	/**
	 * Cfreates a new AutoSize comamnd
	 * 
	 * @@param request
	 * @@return command
	 */
	protected Command getAutoSizeCommand(Request request) {
        TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
		ICommand resizeCommand = new SetBoundsCommand(editingDomain, 
			DiagramUIMessages.SetAutoSizeCommand_Label,
			new EObjectAdapter((View) getHost().getModel()), new Dimension(-1,
				-1));
		return new ICommandProxy(resizeCommand);
	}

	/**
	 * Method getMoveDeferredCommand.
	 * 
	 * @@param request
	 * @@return Command
	 */
	protected Command getMoveDeferredCommand(ChangeBoundsDeferredRequest request) {
		final class SetDeferredPropertyCommand
			extends AbstractTransactionalCommand {

			private IAdaptable newValue;

			private IAdaptable viewAdapter;

			/**
			 * constructor
			 * 
             * @@param editingDomain
             * the editing domain through which model changes are made
			 * @@param label
			 * @@param viewAdapter
			 * @@param newValue
			 */
			public SetDeferredPropertyCommand(TransactionalEditingDomain editingDomain, String label,
					IAdaptable viewAdapter, IAdaptable newValue) {
				super(editingDomain, label, null);
				this.viewAdapter = viewAdapter;
				this.newValue = newValue;
			}

			protected CommandResult doExecuteWithResult(
                    IProgressMonitor progressMonitor, IAdaptable info)
                throws ExecutionException {
                
				if (null == viewAdapter || null == newValue)
					return CommandResult.newCancelledCommandResult();

				View view = (View) viewAdapter.getAdapter(View.class);
				Point p = (Point) newValue
					.getAdapter(IPropertyValueDeferred.class);
				ViewUtil.setStructuralFeatureValue(view, NotationPackage.eINSTANCE.getLocation_X(),
					new Integer(p.x));
				ViewUtil.setStructuralFeatureValue(view, NotationPackage.eINSTANCE.getLocation_Y(),
					new Integer(p.y));

				// clear for garbage collection
				viewAdapter = null;
				newValue = null;
				return CommandResult.newOKCommandResult();
			}
		}
        View view = (View) getHost().getModel();
        
        TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost())
            .getEditingDomain();
        
        SetDeferredPropertyCommand cmd = new SetDeferredPropertyCommand(editingDomain,
			DiagramUIMessages.ResizableShapeEditPolicy_MoveDeferredCommand_label,
			new EObjectAdapter(view), request
				.getLocationAdapter());
		return new ICommandProxy(cmd);
	}

	public Command getCommand(Request request) {
		if (RequestConstants.REQ_AUTOSIZE.equals(request.getType()))
			return getAutoSizeCommand(request);
		if (RequestConstants.REQ_MOVE_DEFERRED.equals(request.getType()))
			return getMoveDeferredCommand((ChangeBoundsDeferredRequest) request);
		return super.getCommand(request);
	}

	public boolean understandsRequest(Request request) {
		if (RequestConstants.REQ_AUTOSIZE.equals(request.getType())
			|| RequestConstants.REQ_MOVE_DEFERRED.equals(request.getType()))
			return true;
		return super.understandsRequest(request);
	}

	/**
	 * Creates the figure used for feedback.
	 * 
	 * @@return the new feedback figure
	 */
	protected IFigure createDragSourceFeedbackFigure() {
		// Use a ghost rectangle for feedback
		RectangleFigure r = new RectangleFigure();
		FigureUtilities.makeGhostShape(r);
		r.setLineStyle(Graphics.LINE_DOT);
		r.setForegroundColor(ColorConstants.white);
		r.setBounds(getInitialFeedbackBounds());
		addFeedback(r);
		return r;
	}

	/**
	 * Override for AccessibleHandleProvider when deactivated
	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=69316
	 */
	public Object getAdapter(Class key) {
		if (key == AccessibleHandleProvider.class)
			// handles == null when deactivated
			if (handles == null) {
				return null;
			}
		return super.getAdapter(key);
	}
}
@


1.5
log
@bugzilla 134462 gmf-head sshaw 060406 ResizableShapeEditPolicy doesn't follow contract of it's superclass
@
text
@d32 1
a32 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d65 1
a65 1
		return new EtoolsProxyCommand(resizeCommand);
d128 1
a128 1
		return new EtoolsProxyCommand(cmd);
@


1.4
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@a13 3
import java.util.ArrayList;
import java.util.List;

a20 1
import org.eclipse.draw2d.PositionConstants;
a25 2
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gef.Handle;
a27 3
import org.eclipse.gef.handles.MoveHandle;
import org.eclipse.gef.handles.ResizeHandle;
import org.eclipse.gef.tools.ResizeTracker;
a53 35
	 * Customize the selection handles
	 */
	protected List createSelectionHandles() {
		GraphicalEditPart part = (GraphicalEditPart) getHost();
		List selectionhandles = new ArrayList(9);
		MoveHandle moveHandle = new MoveHandle(part);
		moveHandle.setBorder(null);
		selectionhandles.add(moveHandle);
		selectionhandles.add(createHandle(part, PositionConstants.EAST));
		selectionhandles.add(createHandle(part, PositionConstants.SOUTH_EAST));
		selectionhandles.add(createHandle(part, PositionConstants.SOUTH));
		selectionhandles.add(createHandle(part, PositionConstants.SOUTH_WEST));
		selectionhandles.add(createHandle(part, PositionConstants.WEST));
		selectionhandles.add(createHandle(part, PositionConstants.NORTH_WEST));
		selectionhandles.add(createHandle(part, PositionConstants.NORTH));
		selectionhandles.add(createHandle(part, PositionConstants.NORTH_EAST));
		return selectionhandles;
	}

	/**
	 * Create resize handle with a normalized resize tracker
	 * 
	 * @@param owner
	 *            the owner edit part
	 * @@param direction
	 *            the handle direction
	 * @@return handle
	 */
	protected Handle createHandle(GraphicalEditPart owner, int direction) {
		ResizeHandle handle = new ResizeHandle(owner, direction);
		handle.setDragTracker(new ResizeTracker(owner, direction));
		return handle;
	}

	/**
@


1.3
log
@bugzilla 118836 gmf-head sshaw 051207 CanonicalConnectionEditPolicy should delete orphans before creating new ones
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
d17 1
d28 1
d43 1
d47 1
a47 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d104 2
a105 1
		ICommand resizeCommand = new SetBoundsCommand(
d120 1
a120 1
			extends AbstractModelCommand {
d129 2
d135 1
a135 1
			public SetDeferredPropertyCommand(String label,
d137 1
a137 1
				super(label, null);
d142 4
a145 1
			protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d147 1
a147 1
					return newCancelledCommandResult();
d160 1
a160 1
				return newOKCommandResult();
d163 6
a168 1
		SetDeferredPropertyCommand cmd = new SetDeferredPropertyCommand(
d170 1
a170 1
			new EObjectAdapter((View) getHost().getModel()), request
@


1.2
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@a40 1
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
d46 1
d143 1
a143 1
				ViewUtil.setPropertyValue(view, Properties.ID_POSITIONX,
d145 1
a145 1
				ViewUtil.setPropertyValue(view, Properties.ID_POSITIONY,
@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d43 1
a43 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
d102 1
a102 2
			DiagramResourceManager
				.getI18NString("SetAutoSizeCommand.Label"),//$NON-NLS-1$
d155 3
a157 2
			DiagramResourceManager
				.getI18NString("ResizableShapeEditPolicy.MoveDeferredCommand.label"), new EObjectAdapter((View) getHost().getModel()), request.getLocationAdapter()); //$NON-NLS-1$
@

