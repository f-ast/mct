head	1.11;
access;
symbols
	v20081023-2107:1.9.2.2
	v20081022-1925:1.10
	v20081022-1005:1.9.2.1
	v20081020-0700:1.10
	v20080917-1925:1.10
	v20080916-2008:1.9.2.1
	v20080911-1728:1.10
	v20080911-1506:1.9.2.1
	v20080910-1520:1.10
	v20080910-1510:1.9.2.1
	v20080903-1520:1.9
	v20080903-1510:1.9
	v20080813-1510:1.9
	v20080811-1546:1.9
	v20080731-1520:1.9
	v20080725-1738:1.9
	v20080723-2246:1.9
	v20080723-2232:1.9
	v20080723-1700:1.9
	v20080722-1827:1.9
	v20080718-1700:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080527-1255:1.9
	v20080527-1151:1.7
	v20080516-1748:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080503-1740:1.9
	v20080501-2127:1.7
	v20080501-1739:1.8
	m20080429-1543:1.7
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080407-2250:1.8
	v20080407-0930:1.8
	v20080404-1111:1.8
	v20080328-1605:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080201-2010:1.8
	v20080201-0201:1.7
	v20080118-1129:1.7
	v20080114-2222:1.7
	v20080114-1111:1.8
	v20080107-1111:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.7
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070915-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.4
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070518-1300:1.7
	bugzilla111892_group_support:1.7.0.2
	Root_bugzilla111892_group_support:1.7
	v20070504-1000:1.7
	v20070420-1000:1.7
	v20070413-1300:1.7
	v20070330-1300:1.7
	v20060330-1300:1.7
	v20070322-1100:1.7
	v20060316-0600:1.7
	v20070221-1500:1.7
	v20070208-1800:1.7
	v20070202-0200:1.6.2.1
	v20070119-1200:1.6.2.1
	v20070111-0800:1.6.2.1
	v20070105-1200:1.6.2.1
	v20070103-0300:1.7
	M4_20:1.7
	v20061218-1500:1.6.2.1
	v20061218-1200:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061027-1200:1.6.2.1
	v20061013-1330:1.7
	v20061012-1100:1.6.2.1
	v20060925-1700:1.6.2.1
	v20060919-0800:1.6.2.1
	v20060907-1100:1.6
	M1_20:1.6
	v20060831-1500:1.6
	v20060824-1600:1.6
	v20060817-1500:1.6
	v20060810-1700:1.6
	v20060803-1200:1.6
	v20060728-0500:1.6
	v20060721-1130:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060616-1400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-0800:1.6
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.6
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.11
date	2008.10.24.00.12.06;	author ahunter;	state Exp;
branches;
next	1.10;
commitid	35637490112d64567;

1.10
date	2008.09.10.19.15.51;	author aboyko;	state Exp;
branches;
next	1.9;
commitid	704348c81ce74567;

1.9
date	2008.05.03.20.56.21;	author ahunter;	state Exp;
branches
	1.9.2.1;
next	1.8;
commitid	608a481cd1724567;

1.8
date	2007.09.26.18.44.07;	author aboyko;	state Exp;
branches;
next	1.7;
commitid	d9d46faa8764567;

1.7
date	2006.10.03.15.02.05;	author ahunter;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.18.20.51.25;	author cmahoney;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2005.11.08.16.02.31;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.04.21.27.48;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.12.13.14.13;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.09;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.46;	author sshaw;	state Exp;
branches;
next	;

1.6.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;

1.9.2.1
date	2008.09.10.19.10.48;	author aboyko;	state Exp;
branches;
next	1.9.2.2;
commitid	6da248c81bb84567;

1.9.2.2
date	2008.10.23.23.51.52;	author ahunter;	state Exp;
branches;
next	;
commitid	e1ab49010e174567;


desc
@@


1.11
log
@[251951] gmf-head ahunter 081023 [NoteTextLabel] Notes not drawn properly with lineWidth on a HiMetric diagram
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.figures;

import org.eclipse.draw2d.Graphics;
import org.eclipse.draw2d.MarginBorder;
import org.eclipse.draw2d.geometry.Insets;
import org.eclipse.draw2d.geometry.PointList;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
import org.eclipse.gmf.runtime.draw2d.ui.figures.IPolygonAnchorableFigure;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;
import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;

/*
 * @@canBeSeenBy %partners
 */
/**
 * a figure represents the Note view, this figure had a mode called
 * DiagramLinkMode, if this mode is turned ON then the text alignment
 * will be center instead of left and the border will be rectangle
 * instead of the note border shape, also it will not paint the border
 * @@see #setDiagramLinkMode(boolean)
 * @@author sshaw, mmostafa
 *
 */
public class NoteFigure extends DefaultSizeNodeFigure implements IPolygonAnchorableFigure {

	private boolean diagrsamLinkMode = false;


	private boolean withDanglingCorner = true;

	/**
	 * the clip height constant in device coordinates
	 */
	static public final int CLIP_HEIGHT_DP = 12;
	
	/**
	 * the margin constant in device coordinates
	 */
	static public final int MARGIN_DP = 5;
	
	/**
	 * the clip margin constant in device coordinates
	 */
	static public final int CLIP_MARGIN_DP = 14;
		
	/**
	 * Constructor
	 * 
	 * @@param width <code>int</code> value that is the default width in logical units
	 * @@param height <code>int</code> value that is the default height in logical units
	 * @@param insets <code>Insets</code> that is the empty margin inside the note figure in logical units
	 */
	public NoteFigure(int width, int height, Insets insets) {
		super(width, height);
		setBorder(
			new MarginBorder(insets.top, insets.left, insets.bottom, insets.right));

		ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
		layout.setMinorAlignment(ConstrainedToolbarLayout.ALIGN_TOPLEFT);
		layout.setSpacing(insets.top);
		setLayoutManager(layout);
	}
	
	private int getClipHeight() {
		return MapModeUtil.getMapMode(this).DPtoLP(12);
	}
	
	private int getClipWidth() {
		return getClipHeight() + MapModeUtil.getMapMode(this).DPtoLP(1);
	}
	
	/**
	 * Method getPointList.
	 * @@param r
	 * @@return PointList
	 */
	protected PointList getPointList(Rectangle r) {

		PointList p = new PointList();
		
		p.addPoint(r.x, r.y);
		if (!isDiagramLinkMode()){
			p.addPoint(r.x + r.width - getClipWidth(), r.y);
			p.addPoint(r.x + r.width - 1, r.y + getClipHeight());
		}else{
			p.addPoint(r.x + r.width - 1, r.y) ;
		}
		p.addPoint(r.x + r.width - 1, r.y + r.height - 1);
		p.addPoint(r.x, r.y + r.height - 1);
		p.addPoint(r.x, r.y);

		return p;
	}

	protected void paintBorder(Graphics g) {
		if (!isDiagramLinkMode()) {
			Rectangle r = getBounds().getCopy();
			r.shrink(getLineWidth() / 2, getLineWidth() / 2);
			
			PointList p = getPointList(r);
			g.setLineWidth(getLineWidth());  
			g.setLineStyle(getLineStyle());  
			g.drawPolyline(p);
	
			if (withDanglingCorner) {
				PointList corner = new PointList();
				corner.addPoint(r.x + r.width - getClipWidth(), r.y);
				corner.addPoint(r.x + r.width - getClipWidth(), r.y + getClipHeight());
				corner.addPoint(r.x + r.width, r.y + getClipHeight());
				g.drawPolyline(corner);			
			}
		}		 
	}


	protected void paintFigure(Graphics g) {
		super.paintFigure(g);
		Rectangle r = getBounds();
		PointList p = getPointList(r);
		g.fillPolygon(p);			
	}

	
	/**
	 * sets or resets the diagram link mode, in diagram link mode the note
	 * will not paint a border or background for itself
	 * @@param diagramLinkMode , the new diagram link mode state
	 * @@return the old diagram Link mode state
	 */
	public boolean setDiagramLinkMode(boolean diagramLinkMode) {
		boolean bOldDiagramLinkMode = this.diagrsamLinkMode;
		ConstrainedToolbarLayout layout = (ConstrainedToolbarLayout)getLayoutManager();
		if (diagramLinkMode){
			layout.setMinorAlignment(ConstrainedToolbarLayout.ALIGN_CENTER);
		}else {
			layout.setMinorAlignment(ConstrainedToolbarLayout.ALIGN_TOPLEFT);
		}
		this.diagrsamLinkMode = diagramLinkMode;
		return bOldDiagramLinkMode;
	}
	
	/**
	 * @@return true is in diagram Link mode, otherwise false
	 */
	public boolean isDiagramLinkMode() {
		return diagrsamLinkMode;
	}

   /*
    * (non-Javadoc)
    * @@see org.eclipse.gmf.runtime.draw2d.ui.figures.IPolygonAnchorableFigure#getPolygonPoints()
    */ 
    public PointList getPolygonPoints() {
        return getPointList(getBounds());
    }

}
@


1.10
log
@[118858] gmf_head jbruck 080910 [NoteTextLabel] Notes in diagram link mode are incorrectly sized
@
text
@d109 2
a110 1
			Rectangle r = getBounds();
@


1.9
log
@[225137] gmf-head ahunter 080503 Line styles enhancement
@
text
@a15 1
import org.eclipse.draw2d.geometry.Dimension;
a133 8
	/**
	 * @@see org.eclipse.draw2d.IFigure#getPreferredSize(int, int)
	 */
	public Dimension getPreferredSize(int wHint, int hHint) {
		return super.getPreferredSize(wHint, hHint).getUnioned(new Dimension(
								MapModeUtil.getMapMode(this).DPtoLP(100), 
								MapModeUtil.getMapMode(this).DPtoLP(50)));
	}
@


1.9.2.1
log
@[118858] gmf_R2_1_maintenance jbruck 080910 [NoteTextLabel] Notes in diagram link mode are incorrectly sized
@
text
@d16 1
d135 8
@


1.9.2.2
log
@[251951] gmf-R2_1_maintenance ahunter 081023 [NoteTextLabel] Notes not drawn properly with lineWidth on a HiMetric diagram
@
text
@d109 1
a109 2
			Rectangle r = getBounds().getCopy();
			r.shrink(getLineWidth() / 2, getLineWidth() / 2);
@


1.8
log
@[110863] gmf_HEAD jbruck 070926 [Connections] Lines are not correctly meeting the shape border
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d39 1
a39 1
	private boolean diagrsamLinkMode = false;;
a42 1
	private int lineWidth = 1;  
d113 2
a114 1
			g.setLineWidth(lineWidth);  
@


1.7
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d21 1
d37 1
a37 1
public class NoteFigure extends DefaultSizeNodeFigure {
d169 8
@


1.6
log
@Bugzilla#109422 gmf_head cmahoney 060418 Remove deprecated API
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.6.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.5
log
@bugzilla 112788 gmf-head sshaw 051108 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d58 1
a58 32
	
	/**
	 * @@deprecated Clients should map <code>MARGIN_DP</code> to logical coordinates using the <code>IMapMode</code>
	 * object retrieve from @@link{GraphicalEditPart#getMapMode()} or @@link{MapModeUtil.getMapMode(IFigure)}
	 */
	public static final int MARGIN = MapModeUtil.getMapMode().DPtoLP(5);
	
	/**
	 * @@deprecated Clients should map <code>CLIP_HEIGHT_DP</code> to logical coordinates using the <code>IMapMode</code>
	 * object retrieve from @@link{GraphicalEditPart#getMapMode()} or @@link{MapModeUtil.getMapMode(IFigure)}
	 */
	static public final int CLIP_HEIGHT = MapModeUtil.getMapMode().DPtoLP(12);
	
	/**
	 * @@deprecated Clients should map <code>CLIP_HEIGHT_DP</code> to logical coordinates using the <code>IMapMode</code>
	 * object retrieve from @@link{GraphicalEditPart#getMapMode()} or @@link{MapModeUtil.getMapMode(IFigure)}
	 */
	static public final int CLIP_MARGIN = MapModeUtil.getMapMode().DPtoLP(14);
	
	/**
	 * Constructor
	 * 
	 * @@deprecated use @@link(NoteFigure(int width, int height, Insets insets)) instead
	 */
	public NoteFigure() {
		this(MapModeUtil.getMapMode().DPtoLP(100), MapModeUtil.getMapMode().DPtoLP(56), 
			new Insets(MapModeUtil.getMapMode().DPtoLP(MARGIN_DP), 
						MapModeUtil.getMapMode().DPtoLP(MARGIN_DP), 
						MapModeUtil.getMapMode().DPtoLP(MARGIN_DP), 
						MapModeUtil.getMapMode().DPtoLP(CLIP_MARGIN_DP)));
	}
	
@


1.4
log
@bugzilla 112788 gmf-head sshaw 051104 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d169 3
a171 1
		return super.getPreferredSize(wHint, hHint).getUnioned(new Dimension(2645, 1322));
@


1.3
log
@bugzilla 112329 gmf-head sshaw 051012 NoteFigure hardcoding default values
@
text
@d17 1
a19 1

d21 1
a21 1
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;
d38 21
d60 2
a61 1
	 * ther clip height constant
d63 1
a63 1
	static public final int CLIP_HEIGHT = MapMode.DPtoLP(12);
d66 2
a67 1
	 * the margin constant 
d69 1
a69 1
	static public final int MARGIN = MapMode.DPtoLP(5);
d72 2
a73 1
	 * the clip margin constant
d75 1
a75 5
	static public final int CLIP_MARGIN = MapMode.DPtoLP(14);
	static private final int clipHeight = CLIP_HEIGHT;
	static private final int clipWidth = CLIP_HEIGHT + MapMode.DPtoLP(1);
	private static final int DEFAULT_NOTE_WIDTH  = MapMode.DPtoLP(100);
	private static final int DEFAULT_NOTE_HEIGHT = MapMode.DPtoLP(56);
a76 6
	private boolean diagrsamLinkMode = false;;


	private boolean withDanglingCorner = true;
	private int lineWidth = 1;  

d78 3
a80 1
	 * constructor
d83 16
a98 1
		setDefaultSize(new Dimension(DEFAULT_NOTE_WIDTH, DEFAULT_NOTE_HEIGHT));
d100 1
a100 5
			new MarginBorder(
				NoteFigure.MARGIN,
				NoteFigure.MARGIN,
				NoteFigure.MARGIN,
				NoteFigure.CLIP_MARGIN));
d104 1
a104 1
		layout.setSpacing(MapMode.DPtoLP(5));
d108 8
d124 1
d127 2
a128 2
			p.addPoint(r.x + r.width - clipWidth, r.y);
			p.addPoint(r.x + r.width - 1, r.y + clipHeight);
d149 3
a151 3
				corner.addPoint(r.x + r.width - clipWidth, r.y);
				corner.addPoint(r.x + r.width - clipWidth, r.y + clipHeight);
				corner.addPoint(r.x + r.width, r.y + clipHeight);
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d41 1
a41 1
	static public final int CLIP_HEIGHT = 317;
d46 1
a46 1
	static public final int MARGIN = 132;
d51 1
a51 1
	static public final int CLIP_MARGIN = 370;
d53 3
a55 3
	static private final int clipWidth = CLIP_HEIGHT + 26;
	private static final int DEFAULT_NOTE_WIDTH  = 2645;
	private static final int DEFAULT_NOTE_HEIGHT = 1455;
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

