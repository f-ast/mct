head	1.13;
access;
symbols
	v20081023-2107:1.11.2.2
	v20081022-1925:1.13
	v20081022-1005:1.11.2.2
	v20081020-0700:1.13
	v20080917-1925:1.13
	v20080916-2008:1.11.2.2
	v20080911-1728:1.13
	v20080911-1506:1.11.2.2
	v20080910-1520:1.12
	v20080910-1510:1.11.2.1
	v20080903-1520:1.12
	v20080903-1510:1.11.2.1
	v20080813-1510:1.11.2.1
	v20080811-1546:1.12
	v20080731-1520:1.12
	v20080725-1738:1.11.2.1
	v20080723-2246:1.12
	v20080723-2232:1.11.2.1
	v20080723-1700:1.11.2.1
	v20080722-1827:1.12
	v20080718-1700:1.11.2.1
	v20080718-1731:1.12
	v20080716-1600:1.11
	v20080716-1642:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080610-1132:1.11
	v20080603-1553:1.11
	v20080527-1255:1.11
	v20080527-1151:1.10.4.1
	v20080516-1748:1.11
	v20080516-1143:1.11
	v20080512-1200:1.11
	v20080503-1740:1.11
	v20080501-2127:1.10.4.1
	v20080501-1739:1.11
	m20080429-1543:1.10.4.1
	v20080425-1959:1.11
	v20080417-1610:1.11
	v20080407-2250:1.11
	v20080407-0930:1.11
	v20080404-1111:1.11
	v20080328-1605:1.11
	v20080322-0000:1.11
	v20080222-1200:1.11
	v20080201-2010:1.11
	v20080201-0201:1.10.4.1
	v20080118-1129:1.10.4.1
	v20080114-2222:1.10.4.1
	v20080114-1111:1.11
	v20080107-1111:1.11
	v20071222-1111:1.11
	v20071214-1111:1.11
	v20071130-1111:1.11
	v20071124-0000:1.10.4.1
	v20071112-0000:1.11
	v20071108-0000:1.11
	v20071003-0000:1.11
	v20070915-0000:1.10.4.1
	v20070903-0000:1.11
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.4
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070608-1300:1.10
	v20070605-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.10
	v20070518-1300:1.10
	bugzilla111892_group_support:1.10.0.2
	Root_bugzilla111892_group_support:1.10
	v20070504-1000:1.10
	v20070420-1000:1.10
	v20070413-1300:1.10
	v20070330-1300:1.10
	v20060330-1300:1.10
	v20070322-1100:1.10
	v20060316-0600:1.10
	v20070221-1500:1.10
	v20070208-1800:1.10
	v20070202-0200:1.9.2.1
	v20070119-1200:1.9.2.1
	v20070111-0800:1.9.2.1
	v20070105-1200:1.9.2.1
	v20070103-0300:1.10
	M4_20:1.10
	v20061218-1500:1.9.2.1
	v20061218-1200:1.10
	v20061214-0000:1.10
	M3_20:1.10
	v20061117-0800:1.10
	v20061027-1200:1.9.2.1
	v20061013-1330:1.10
	v20061012-1100:1.9.2.1
	v20060925-1700:1.9.2.1
	v20060919-0800:1.9.2.1
	v20060907-1100:1.9
	M1_20:1.9
	v20060831-1500:1.9
	v20060824-1600:1.9
	v20060817-1500:1.9
	v20060810-1700:1.9
	v20060803-1200:1.9
	v20060728-0500:1.9
	v20060721-1130:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060616-1400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-0800:1.8
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.13
date	2008.09.10.21.59.05;	author aboyko;	state Exp;
branches;
next	1.12;
commitid	464a48c843294567;

1.12
date	2008.07.18.21.11.27;	author ahunter;	state Exp;
branches;
next	1.11;
commitid	5c16488106ff4567;

1.11
date	2007.07.31.19.40.07;	author crevells;	state Exp;
branches
	1.11.2.1;
next	1.10;
commitid	3c1946af90164567;

1.10
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	2006.06.14.18.39.49;	author ahunter;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.01.20.17.40;	author mmostafa;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.20.22.10.12;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.25.19.38.13;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.30.18;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.11;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.22;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.47;	author sshaw;	state Exp;
branches;
next	;

1.9.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;

1.10.4.1
date	2007.09.07.17.31.43;	author crevells;	state Exp;
branches;
next	;
commitid	37d446e18aff4567;

1.11.2.1
date	2008.07.18.21.09.33;	author ahunter;	state Exp;
branches;
next	1.11.2.2;
commitid	a434881068d4567;

1.11.2.2
date	2008.09.10.21.50.10;	author aboyko;	state Exp;
branches;
next	;
commitid	41de48c841124567;


desc
@@


1.13
log
@[237316] gmf_head lgrahek 080910 Pressing Delete key on non IGraphicalEditPart causes NPE
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.diagram.ui.internal.actions;

import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.domain.IEditingDomainProvider;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.workspace.AbstractEMFOperation;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.RequestConstants;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gef.ui.actions.DeleteAction;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants;
import org.eclipse.gmf.runtime.diagram.ui.requests.GroupRequestViaKeyboard;
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.ui.IWorkbenchPart;


/**
 * Delete Action originating via keyboard using the 'Delete' hot/shortcut key
 * 
 * @@author bagrodia
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 * Created on Jun 30, 2004
 */
public class PromptingDeleteAction
	extends DeleteAction {
	

	/**
	 * Constructs a <code>PromptingDeleteAction</code> using the specified part.
	 * @@param part The part for this action
	 */
	public PromptingDeleteAction(IWorkbenchPart part) {
		super(part);
	}

	
	
	/**
	 * create a command for the passed list of objects
	 * @@param objects objects to associate with the command
	 * @@return <code>Command</code>
	 */
	
	public Command createCommand(List objects) {
		
		if(objects.isEmpty()) return null;
		
		
		/* Create the delete request */
		GroupRequestViaKeyboard deleteReq =
			new GroupRequestViaKeyboard(RequestConstants.REQ_DELETE);
		
		deleteReq.setShowInformationDialog(DiagramUIPlugin.getInstance()
			.getPreferenceStore().getBoolean(
				IPreferenceConstants.PREF_PROMPT_ON_DEL_FROM_DIAGRAM));

		CompoundCommand deleteCC =
			new CompoundCommand(DiagramUIMessages.DeleteCommand_Label);


		deleteReq.setShowInformationDialog(false);
		boolean containsSemanticElement = false;
		CompositeTransactionalCommand command = null;
        TransactionalEditingDomain editingDomain = null;
		for (int i = 0; i < objects.size(); i++) {			
			if(objects.get(i) instanceof EditPart){
				/* Get the next part */
				EditPart editPart = (EditPart) objects.get(i);
				if (editPart instanceof IGraphicalEditPart){
                    if (editingDomain == null) {
                        editingDomain = ((IGraphicalEditPart) editPart).getEditingDomain();
                    }
					if (!containsSemanticElement&&
						ViewUtil.resolveSemanticElement((View)editPart.getModel()) != null){
						containsSemanticElement = true;
						deleteReq.setShowInformationDialog(true);
					}
				}

				/* Send the request to the edit part */
				Command command2 = editPart.getCommand(deleteReq);
				if (command2 != null && editingDomain != null) {
					if (command == null)
						command = new CompositeTransactionalCommand(editingDomain, command2.getLabel());
					if ( containsSemanticElement ) {
						deleteReq.setShowInformationDialog(false);
					}
					command.compose(new CommandProxy(command2));
				}
			}
		}		
		
		
		if ((command != null)&&(command.size() > 0))
			deleteCC.add(new ICommandProxy(command));
		return deleteCC;
	}	
	
	
	
	/**
	 * This is by purpose set to true since there is no need to go to editpart 
	 * and obtain commands.
	 * @@see org.eclipse.gef.ui.actions.DeleteAction#calculateEnabled()
	 * 
	 */
	protected boolean calculateEnabled() {		
		return true;
	}
	
	public void run() {
        TransactionalEditingDomain editingDomain = null;
        // try adapting the workbench part
        IWorkbenchPart part = getWorkbenchPart();
        if (part != null) {
        	IEditingDomainProvider edProvider = (IEditingDomainProvider) part
        	.getAdapter(IEditingDomainProvider.class);

        	if (edProvider != null) {
        		EditingDomain domain = edProvider.getEditingDomain();

        		if (domain instanceof TransactionalEditingDomain) {
        			editingDomain = (TransactionalEditingDomain) domain;
        		}
        	}
        }        
        if (editingDomain != null) {
        	final Command command[] = new Command[1];
        	AbstractEMFOperation operation = new AbstractEMFOperation(
        			editingDomain, DiagramUIMessages.DeleteCommand_Label) {

        		protected IStatus doExecute(IProgressMonitor monitor,
        				IAdaptable info)
        		throws ExecutionException {
        			command[0] = createCommand(getSelectedObjects());
        			return CommandResult.newOKCommandResult().getStatus();

        		}
        	};
        	try {
        		operation.execute(null, null);
        	} catch (ExecutionException e) {
        		// do nothing
        	}

        	if (command[0] != null)
        		execute(command[0]);
        }
    }


}
@


1.12
log
@[241321] gmf-head ahunter 080718 when multi-delete elements from diagram, "prompt delete" dialog shows up more than once
@
text
@a14 1
import java.util.Iterator;
d21 2
d140 35
a174 26
        for (Iterator iterator = getSelectedObjects().iterator(); iterator
            .hasNext();) {
            EditPart editPart = (EditPart) iterator.next();
            if (editPart instanceof IGraphicalEditPart) {
                editingDomain = ((IGraphicalEditPart) editPart)
                    .getEditingDomain();
                break;
            }
        }
        final Command command[] = new Command[1];
        AbstractEMFOperation operation = new AbstractEMFOperation(
            editingDomain, DiagramUIMessages.DeleteCommand_Label) {

            protected IStatus doExecute(IProgressMonitor monitor,
                    IAdaptable info)
                throws ExecutionException {
                command[0] = createCommand(getSelectedObjects());
                return CommandResult.newOKCommandResult().getStatus();

            }

        };
        try {
            operation.execute(null, null);
        } catch (ExecutionException e) {
            // do nothing
a175 3

        if (command[0] != null)
            execute(command[0]);
@


1.11
log
@[198444] gmf_head crevells 070731 Support delete prompting when connections are on a canonical diagram
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2007 IBM Corporation and others.
d111 3
@


1.11.2.1
log
@[241321] gmf-R2_1_maintenance ahunter 080718 when multi-delete elements from diagram, "prompt delete" dialog shows up more than once
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2008 IBM Corporation and others.
a110 3
					if ( containsSemanticElement ) {
						deleteReq.setShowInformationDialog(false);
					}
@


1.11.2.2
log
@[237316] gmf_R2_1_maintenance lgrahek 080910 Pressing Delete key on non IGraphicalEditPart causes NPE
@
text
@d15 1
a21 2
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.domain.IEditingDomainProvider;
d139 27
a165 32
        // try adapting the workbench part
        IWorkbenchPart part = getWorkbenchPart();
        if (part != null) {
        	IEditingDomainProvider edProvider = (IEditingDomainProvider) part
        	.getAdapter(IEditingDomainProvider.class);

        	if (edProvider != null) {
        		EditingDomain domain = edProvider.getEditingDomain();

        		if (domain instanceof TransactionalEditingDomain) {
        			editingDomain = (TransactionalEditingDomain) domain;
        		}
        	}
        }        
        if (editingDomain != null) {
        	final Command command[] = new Command[1];
        	AbstractEMFOperation operation = new AbstractEMFOperation(
        			editingDomain, DiagramUIMessages.DeleteCommand_Label) {

        		protected IStatus doExecute(IProgressMonitor monitor,
        				IAdaptable info)
        		throws ExecutionException {
        			command[0] = createCommand(getSelectedObjects());
        			return CommandResult.newOKCommandResult().getStatus();

        		}
        	};
        	try {
        		operation.execute(null, null);
        	} catch (ExecutionException e) {
        		// do nothing
        	}
d167 2
a168 3
        	if (command[0] != null)
        		execute(command[0]);
        }
@


1.10
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
d15 1
d18 4
d23 1
d29 1
d31 1
a32 1
import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
a133 4
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gef.ui.actions.DeleteAction#run()
	 */
d135 32
a166 4
		Command command = createCommand(getSelectedObjects());
		if (command != null)
			execute(command);
	}
@


1.10.4.1
log
@[198444] gmf_R2_0_maintenance crevells 070907 Support delete prompting when connections are on a canonical diagram
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2007 IBM Corporation and others.
a14 1
import java.util.Iterator;
a16 4
import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.IStatus;
a17 1
import org.eclipse.emf.workspace.AbstractEMFOperation;
a22 1
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
d24 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
d44 2
a45 2
    extends DeleteAction {
    
d47 36
a82 36
    /**
     * Constructs a <code>PromptingDeleteAction</code> using the specified part.
     * @@param part The part for this action
     */
    public PromptingDeleteAction(IWorkbenchPart part) {
        super(part);
    }

    
    
    /**
     * create a command for the passed list of objects
     * @@param objects objects to associate with the command
     * @@return <code>Command</code>
     */
    
    public Command createCommand(List objects) {
        
        if(objects.isEmpty()) return null;
        
        
        /* Create the delete request */
        GroupRequestViaKeyboard deleteReq =
            new GroupRequestViaKeyboard(RequestConstants.REQ_DELETE);
        
        deleteReq.setShowInformationDialog(DiagramUIPlugin.getInstance()
            .getPreferenceStore().getBoolean(
                IPreferenceConstants.PREF_PROMPT_ON_DEL_FROM_DIAGRAM));

        CompoundCommand deleteCC =
            new CompoundCommand(DiagramUIMessages.DeleteCommand_Label);


        deleteReq.setShowInformationDialog(false);
        boolean containsSemanticElement = false;
        CompositeTransactionalCommand command = null;
d84 5
a88 5
        for (int i = 0; i < objects.size(); i++) {          
            if(objects.get(i) instanceof EditPart){
                /* Get the next part */
                EditPart editPart = (EditPart) objects.get(i);
                if (editPart instanceof IGraphicalEditPart){
d92 44
a135 68
                    if (!containsSemanticElement&&
                        ViewUtil.resolveSemanticElement((View)editPart.getModel()) != null){
                        containsSemanticElement = true;
                        deleteReq.setShowInformationDialog(true);
                    }
                }

                /* Send the request to the edit part */
                Command command2 = editPart.getCommand(deleteReq);
                if (command2 != null && editingDomain != null) {
                    if (command == null)
                        command = new CompositeTransactionalCommand(editingDomain, command2.getLabel());
                    command.compose(new CommandProxy(command2));
                }
            }
        }       
        
        
        if ((command != null)&&(command.size() > 0))
            deleteCC.add(new ICommandProxy(command));
        return deleteCC;
    }   
    
    
    
    /**
     * This is by purpose set to true since there is no need to go to editpart 
     * and obtain commands.
     * @@see org.eclipse.gef.ui.actions.DeleteAction#calculateEnabled()
     * 
     */
    protected boolean calculateEnabled() {      
        return true;
    }
    
    public void run() {
        TransactionalEditingDomain editingDomain = null;
        for (Iterator iterator = getSelectedObjects().iterator(); iterator
            .hasNext();) {
            EditPart editPart = (EditPart) iterator.next();
            if (editPart instanceof IGraphicalEditPart) {
                editingDomain = ((IGraphicalEditPart) editPart)
                    .getEditingDomain();
                break;
            }
        }
        final Command command[] = new Command[1];
        AbstractEMFOperation operation = new AbstractEMFOperation(
            editingDomain, DiagramUIMessages.DeleteCommand_Label) {

            protected IStatus doExecute(IProgressMonitor monitor,
                    IAdaptable info)
                throws ExecutionException {
                command[0] = createCommand(getSelectedObjects());
                return CommandResult.newOKCommandResult().getStatus();

            }

        };
        try {
            operation.execute(null, null);
        } catch (ExecutionException e) {
            // do nothing
        }

        if (command[0] != null)
            execute(command[0]);
    }
@


1.9
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.9.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.8
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d24 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d111 1
a111 1
			deleteCC.add(new EtoolsProxyCommand(command));
@


1.7
log
@bugzilla 109923 gmf-head mmostafa 060201 Class names contain 'xtools'
@
text
@d17 1
d31 1
a31 1
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand;
d82 2
a83 1
		CompositeModelCommand command = null;
d89 3
d101 1
a101 1
				if (command2 != null) {
d103 1
a103 1
						command = new CompositeModelCommand(command2.getLabel());
d110 1
a110 1
		if ((command != null)&&(command.getCommands().size() > 0))
@


1.6
log
@Bugzilla#123313 gmf_head cmahoney 060120 Making DiagramUIPlugin, DiagramUIStatusCodes, and DiagramUIDebugOptions internal
@
text
@d24 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.commands.XtoolsProxyCommand;
d99 1
a99 1
					command.compose(new XtoolsProxyCommand(command2));
@


1.5
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@a22 1
import org.eclipse.gmf.runtime.diagram.ui.DiagramUIPlugin;
d26 1
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d22 1
a22 2
import org.eclipse.ui.IWorkbenchPart;

d27 1
a27 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
a29 1
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
d32 1
d76 1
a76 1
			new CompoundCommand(DiagramResourceManager.getI18NString("DeleteCommand.Label"));//$NON-NLS-1$
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a24 1
import org.eclipse.gmf.runtime.diagram.ui.IPreferenceConstants;
d28 2
a29 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d77 1
a77 1
			new CompoundCommand(PresentationResourceManager.getI18NString("DeleteCommand.Label"));//$NON-NLS-1$
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d31 1
a31 1
import com.ibm.xtools.notation.View;
@

