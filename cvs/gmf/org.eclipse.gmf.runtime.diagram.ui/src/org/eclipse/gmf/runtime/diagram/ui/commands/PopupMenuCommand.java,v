head	1.4;
access;
symbols
	v20081023-2107:1.4
	v20081022-1925:1.4
	v20081022-1005:1.4
	v20081020-0700:1.4
	v20080917-1925:1.4
	v20080916-2008:1.4
	v20080911-1728:1.4
	v20080911-1506:1.4
	v20080910-1520:1.4
	v20080910-1510:1.4
	v20080903-1520:1.4
	v20080903-1510:1.4
	v20080813-1510:1.4
	v20080811-1546:1.4
	v20080731-1520:1.4
	v20080725-1738:1.4
	v20080723-2246:1.4
	v20080723-2232:1.4
	v20080723-1700:1.4
	v20080722-1827:1.4
	v20080718-1700:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.6
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080527-1255:1.4
	v20080527-1151:1.4
	v20080516-1748:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080503-1740:1.4
	v20080501-2127:1.4
	v20080501-1739:1.4
	m20080429-1543:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080407-2250:1.4
	v20080407-0930:1.4
	v20080404-1111:1.4
	v20080328-1605:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080201-2010:1.4
	v20080201-0201:1.4
	v20080118-1129:1.4
	v20080114-2222:1.4
	v20080114-1111:1.4
	v20080107-1111:1.4
	v20071222-1111:1.4
	v20071214-1111:1.4
	v20071130-1111:1.4
	v20071124-0000:1.4
	v20071112-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.4
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070518-1300:1.4
	bugzilla111892_group_support:1.4.0.2
	Root_bugzilla111892_group_support:1.4
	v20070504-1000:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070202-0200:1.3.2.1
	v20070119-1200:1.3.2.1
	v20070111-0800:1.3.2.1
	v20070105-1200:1.3.2.1
	v20070103-0300:1.4
	M4_20:1.4
	v20061218-1500:1.3.2.1
	v20061218-1200:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061027-1200:1.3.2.1
	v20061013-1330:1.4
	v20061012-1100:1.3.2.1
	v20060925-1700:1.3.2.1
	v20060919-0800:1.3.2.1
	v20060907-1100:1.3
	M1_20:1.3
	v20060831-1500:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060810-1700:1.3
	v20060803-1200:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.4
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.29.09;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.46;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.09.13.16.43.41;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.commands;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.gmf.runtime.common.core.command.AbstractCommand;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.ui.dialogs.PopupDialog;
import org.eclipse.gmf.runtime.diagram.ui.menus.PopupMenu;
import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.swt.widgets.Shell;

/**
 * A command that pops up a <code>PopupMenu</code> or a
 * <code>PopupDialog</code> when it executes. The result from the
 * <code>PopupMenu</code> or <code>PopupDialog</code> is retrieved via
 * <code>getCommandResult().getReturnValue()</code>.
 * 
 * @@author cmahoney
 */
public class PopupMenuCommand
	extends AbstractCommand {
	/**
	 * The popup menu style for this command.
	 */
	public static final int POPUP_MENU = 1;
	
	/**
	 * The popup dialog style for this command.
	 */
	public static final int POPUP_DIALOG = 2;

	/** The parent shell for this menu. */
	private Shell parentShell;

	/**
	 * The popup menu to appear when this command is executed if the popup menu
	 * is not <code>null</code>.
	 */
	private PopupMenu popupMenu;
	
	/**
	 * The dialog to appear when this command is executed, if the dialog
	 * is not <code>null</code>.
	 */
	private PopupDialog popupDialog;

	/**
	 * Creates a new <code>PopupMenuCommand</code>.
	 * @@param label the command label
	 * @@param parentShell the parent shell
	 */
	public PopupMenuCommand(String label, Shell parentShell) {

		super(label, null);
		setParentShell(parentShell);
	}

	/**
	 * Creates a new <code>PopupMenuCommand</code>.
	 * @@param label the command label
	 * @@param parentShell the parent shell
	 * @@param popupMenu the popup menu
	 */
	public PopupMenuCommand(String label, Shell parentShell, PopupMenu popupMenu) {

		super(label, null);
		setParentShell(parentShell);
		setPopupMenu(popupMenu);
	}

	protected CommandResult doExecuteWithResult(
            IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {

		if (getPopupMenu() != null) {
			if (getPopupMenu().show(getParentShell()) == false) {
				// user cancelled gesture
				progressMonitor.setCanceled(true);
				return CommandResult.newCancelledCommandResult();
			}
			return CommandResult.newOKCommandResult(getPopupMenu().getResult());
			
		} else if (getPopupDialog() != null) {
			if (getPopupDialog().open() == Dialog.CANCEL
				|| getPopupDialog().getResult() == null
				|| getPopupDialog().getResult().length <= 0) {
				
				// user cancelled dialog
				progressMonitor.setCanceled(true);
				return CommandResult.newCancelledCommandResult();
			}
			return CommandResult.newOKCommandResult(getPopupDialog().getResult()[0]);
		}
		
		return CommandResult.newOKCommandResult();
	}

    
    protected CommandResult doRedoWithResult(IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {

		return CommandResult.newOKCommandResult();

	}

    
    protected CommandResult doUndoWithResult(IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {

		return CommandResult.newOKCommandResult();
	}

    public boolean canRedo() {
		return true;
	}
    
    public boolean canUndo() {
		return true;
	}

	/**
	 * Gets the parentShell.
	 * @@return Returns the parentShell.
	 */
	protected Shell getParentShell() {
		return parentShell;
	}

	/**
	 * Sets the parentShell.
	 * @@param parentShell The parentShell to set.
	 */
	public void setParentShell(Shell parentShell) {
		this.parentShell = parentShell;
	}

	/**
	 * Gets the popupMenu.
	 * @@return Returns the popupMenu.
	 */
	protected PopupMenu getPopupMenu() {
		return popupMenu;
	}

	/**
	 * Sets the popupMenu. Sets the popup dialog to null.
	 * @@param popupMenu The popupMenu to set.
	 */
	public void setPopupMenu(PopupMenu popupMenu) {
		this.popupMenu = popupMenu;
		this.popupDialog = null;
	}
	
	/**
	 * Gets the popupDialog.
	 * @@return Returns the popupDialog.
	 */
	protected PopupDialog getPopupDialog() {
		return popupDialog;
	}

	/**
	 * Sets the popupDialog. Sets the popup menu to null.
	 * @@param popupDialog The popupDialog to set.
	 */
	public void setPopupDialog(PopupDialog popupDialog) {
		this.popupDialog = popupDialog;
		this.popupMenu = null;
	}

}
@


1.3
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.3.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d14 2
a16 3
import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.swt.widgets.Shell;

d21 2
d66 1
a66 1
		super(label);
d78 1
a78 1
		super(label);
d83 3
a85 4
	/**
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d91 1
a91 1
				return newCancelledCommandResult();
d93 1
a93 1
			return newOKCommandResult(getPopupMenu().getResult());
d102 1
a102 1
				return newCancelledCommandResult();
d104 1
a104 1
			return newOKCommandResult(getPopupDialog().getResult()[0]);
d107 1
a107 1
		return newOKCommandResult();
d110 5
a114 5
	/**
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doRedo()
	 */
	protected CommandResult doRedo() {
		return newOKCommandResult();
d118 5
a122 5
	/**
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doUndo()
	 */
	protected CommandResult doUndo() {
		return newOKCommandResult();
d125 1
a125 4
	/**
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#isRedoable()
	 */
	public boolean isRedoable() {
d128 2
a129 5

	/**
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#isUndoable()
	 */
	public boolean isUndoable() {
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              	   |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

