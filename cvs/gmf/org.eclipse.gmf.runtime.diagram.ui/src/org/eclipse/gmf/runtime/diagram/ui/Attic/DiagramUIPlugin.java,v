head	1.10;
access;
symbols
	v20081022-1925:1.10
	v20080917-1925:1.10
	v20080911-1728:1.10
	v20080910-1520:1.10
	v20080903-1520:1.10
	v20080731-1520:1.10
	v20080723-2246:1.10
	R1_0_maintenance:1.10.0.2
	R1_0:1.10
	I20060424-0300:1.9
	M6_10:1.9
	I20060407-1200:1.9
	I20060331-1000:1.9
	I20060324-0300:1.9
	I20060317-1300:1.9
	I20060317-1200:1.9
	I20060316-1300:1.9
	I20060309-1300:1.9
	M5_10:1.9
	S20060303-1600:1.9
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.8
	I20060209-1815:1.8
	I20060203-0830:1.8
	I20060202-1415:1.8
	I20060129-1145:1.8
	I20060127-0900:1.8
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.5
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.10
date	2006.04.18.20.51.25;	author cmahoney;	state dead;
branches;
next	1.9;

1.9
date	2006.02.28.02.30.51;	author cmahoney;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.20.22.10.12;	author cmahoney;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.10.19.35.44;	author cmahoney;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.22.21.45.13;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.21.16.20.30;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.30.18;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.04.20.30.48;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.07;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.50;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Bugzilla#109422 gmf_head cmahoney 060418 Remove deprecated API
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui;

import org.eclipse.core.runtime.Plugin;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.ui.preferences.AppearancePreferencePage;
import org.eclipse.gmf.runtime.diagram.ui.preferences.ConnectionsPreferencePage;
import org.eclipse.gmf.runtime.diagram.ui.preferences.DiagramsPreferencePage;
import org.eclipse.gmf.runtime.diagram.ui.preferences.PrintingPreferencePage;
import org.eclipse.gmf.runtime.diagram.ui.preferences.RulerGridPreferencePage;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jface.preference.PreferenceStore;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.osgi.framework.BundleContext;

/**
 * The DiagramUI plugin defines all the artifacts needed for the visualization
 * of modelling diagrams
 * 
 * @@author melaasar
 * @@deprecated Made internal. Use your own plugin's class. See
 *             https://bugs.eclipse.org/bugs/show_bug.cgi?id=123313. If you are
 *             using this plugin to get the preference store, the diagram
 *             preferences are no longer stored in the diagram layer's
 *             preference store. They need to be stored in the client's
 *             preference store. See
 *             https://bugs.eclipse.org/bugs/show_bug.cgi?id=112864.
 */
public class DiagramUIPlugin
	extends AbstractUIPlugin {

	/**
	 * the plugin singleton
	 */
	private static Plugin singleton;

	/**
	 * gets the plugin singleton
	 * 
	 * @@return the plugin singleton
	 */
	public static DiagramUIPlugin getInstance() {
		return (DiagramUIPlugin) singleton;
	}

	/**
	 * Retrieves the unique identifier of this plug-in.
	 * 
	 * @@return A non-empty string and is unique within the plug-in registry.
	 */
	public static String getPluginId() {
		return getInstance().getBundle().getSymbolicName();
	}

	/**
	 * Creates the Diagram plugin instance
	 * 
	 * @@see org.eclipse.core.runtime.Plugin#Plugin()
	 */
	public DiagramUIPlugin() {
		super();
		if (singleton == null) {
			singleton = this;
		}
	}

	public void start(BundleContext context)
	throws Exception {
		super.start(context);
		
		initializeDefaultDiagramPreferenceStore();
	}

	/**
	 * Initializes the preference store to be used as default values when a
	 * diagram editor does not have any preferences hooked up. This is the
	 * preference store registered with {@@link PreferencesHint#USE_DEFAULTS}.
	 */
	private void initializeDefaultDiagramPreferenceStore() {
		IPreferenceStore defaultStore = new PreferenceStore();

		DiagramsPreferencePage.initDefaults(defaultStore);
		RulerGridPreferencePage.initDefaults(defaultStore);
		AppearancePreferencePage.initDefaults(defaultStore);
		ConnectionsPreferencePage.initDefaults(defaultStore);
		PrintingPreferencePage.initDefaults(defaultStore);

		PreferencesHint.registerPreferenceStore(
			PreferencesHint.USE_DEFAULTS, defaultStore);
	}
}@


1.9
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@@


1.8
log
@Bugzilla#123313 gmf_head cmahoney 060120 Making DiagramUIPlugin, DiagramUIStatusCodes, and DiagramUIDebugOptions internal
@
text
@a14 1
import org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker;
a79 2

		DiagramEventBroker.getInstance().startListening();
a83 6
	public void stop(BundleContext context)
		throws Exception {
		DiagramEventBroker.getInstance().stopListening();
		super.stop(context);
	}

@


1.7
log
@Bugzilla#109422 gmf_head cmahoney 060111 Removing deprecation warnings in diagram layer
@
text
@d28 2
a29 2
 * The DiagramUI  plugin defines all the artifacts needed for the
 * visualization of modelling diagrams
d32 7
@


1.6
log
@[109445] gmf_head ahunter 051222 New Eclipse Resources Bundles Should Be Used
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
a14 1
import org.eclipse.gmf.runtime.common.ui.plugin.XToolsUIPlugin;
a16 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
d24 2
d34 1
a34 1
	extends XToolsUIPlugin {
d46 2
a47 2
	public static XToolsUIPlugin getInstance() {
		return (XToolsUIPlugin) singleton;
d71 3
a73 5
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.plugin.XToolsUIPlugin#doStartup()
	 */
	protected void doStartup() {
		super.doStartup();
d80 2
a81 4
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.plugin.XToolsUIPlugin#doShutdown()
	 */
	protected void doShutdown() {
d83 1
a83 1
		super.doShutdown();
@


1.5
log
@Bugzilla#112864 gmf_head cmahoney 051121 Remove references to Modeling from diagram layer
@
text
@a14 1
import org.eclipse.gmf.runtime.common.core.l10n.AbstractResourceManager;
d18 1
a89 7
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.ui.plugin.XToolsUIPlugin#getResourceManager()
	 */
	public AbstractResourceManager getResourceManager() {
		return null; // TBD
	}

@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a79 4
		
		// TODO: Move to Modeler/Visualizer plug-in.
		PreferencesHint.registerPreferenceStore(
			PreferencesHint.MODELING, getPreferenceStore());
@


1.3
log
@Bugzilla 110635 gmf_head keithc 051004 Delay configuration of services
@
text
@d17 1
a17 1
import org.eclipse.gmf.runtime.diagram.core.listener.PresentationListener;
d20 1
a20 1
import org.eclipse.gmf.runtime.diagram.ui.preferences.ConnectorsPreferencePage;
d77 1
a77 1
		PresentationListener.getInstance().startListening();
d90 1
a90 1
		PresentationListener.getInstance().stopListening();
d112 1
a112 1
		ConnectorsPreferencePage.initDefaults(defaultStore);
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a13 1
import org.eclipse.core.runtime.Platform;
a14 3
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jface.preference.PreferenceStore;

a18 3
import org.eclipse.gmf.runtime.diagram.ui.internal.services.decorator.DecoratorService;
import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpolicy.EditPolicyService;
import org.eclipse.gmf.runtime.diagram.ui.internal.services.layout.LayoutService;
d24 2
a25 2
import org.eclipse.gmf.runtime.diagram.ui.services.editpart.EditPartService;
import org.eclipse.gmf.runtime.diagram.ui.services.palette.PaletteService;
a36 28
	 * The layout service extension point id
	 */
	private final static String LAYOUT_SERVICE_EXTENSION_POINT = "layoutProviders"; //$NON-NLS-1$ 

	/**
	 * The editpart service extension point id
	 */
	private final static String EDITPART_SERVICE_EXTENSION_POINT = "editpartProviders"; //$NON-NLS-1$ 

	 

	/**
	 * The palette service extension point id
	 */
	private final static String PALETTE_SERVICE_EXTENSION_POINT = "paletteProviders"; //$NON-NLS-1$ 

	
	/**
	 * The decoration service extension point id
	 */
	private final static String DECORATOR_SERVICE_EXTENSION_POINT = "decoratorProviders"; //$NON-NLS-1$ 

	/**
	 * The editpolicy service extension point id
	 */
	private final static String EDITPOLICY_SERVICE_EXTENSION_POINT = "editpolicyProviders"; //$NON-NLS-1$

	/**
a78 6
		configureEditPartProviders();
		configurePaletteProviders();
		configureDiagramLayoutProviders();
		configureDecorationProviders();
		configureEditPolicyProviders();		
		
a93 56
	/**
	 * Configures diagram layout providers for the presentation plug-in based on
	 * layout provider extension configurations.
	 */
	private void configureDiagramLayoutProviders() {
		LayoutService.getInstance().configureProviders(
			Platform.getExtensionRegistry().getExtensionPoint(
				getPluginId(), LAYOUT_SERVICE_EXTENSION_POINT)
				.getConfigurationElements());
	}

	/**
	 * Configures editpart providers for the presentation plug-in based on
	 * editpart provider extension configurations.
	 */
	private void configureEditPartProviders() {
		EditPartService.getInstance().configureProviders(
			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
				EDITPART_SERVICE_EXTENSION_POINT).getConfigurationElements());
	}

	

	/**
	 * Configures palette providers for the presentation plug-in based on
	 * palette provider extension configurations.
	 */
	private void configurePaletteProviders() {
		PaletteService.getInstance().configureProviders(
			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
				PALETTE_SERVICE_EXTENSION_POINT).getConfigurationElements());
	}

	

	/**
	 * Configures decoration providers for the presentation plug-in based on
	 * decoration provider extension configurations.
	 */
	private void configureDecorationProviders() {
		DecoratorService.getInstance().configureProviders(
			Platform.getExtensionRegistry().getExtensionPoint(
				getPluginId(), DECORATOR_SERVICE_EXTENSION_POINT)
				.getConfigurationElements());				
	}

	/**
	 * Configures editpolicy providers for the presentation plug-in based on
	 * editpolicy provider extension configurations.
	 */
	private void configureEditPolicyProviders() {
		EditPolicyService.getInstance().configureProviders(
			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
				EDITPOLICY_SERVICE_EXTENSION_POINT).getConfigurationElements());
	}

a99 1
	
a117 1

@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

