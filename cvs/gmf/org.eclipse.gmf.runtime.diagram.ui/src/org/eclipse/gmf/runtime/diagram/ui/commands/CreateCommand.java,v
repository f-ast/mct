head	1.8;
access;
symbols
	v20081023-2107:1.8
	v20081022-1925:1.8
	v20081022-1005:1.8
	v20081020-0700:1.8
	v20080917-1925:1.8
	v20080916-2008:1.8
	v20080911-1728:1.8
	v20080911-1506:1.8
	v20080910-1520:1.8
	v20080910-1510:1.8
	v20080903-1520:1.8
	v20080903-1510:1.8
	v20080813-1510:1.8
	v20080811-1546:1.8
	v20080731-1520:1.8
	v20080725-1738:1.8
	v20080723-2246:1.8
	v20080723-2232:1.8
	v20080723-1700:1.8
	v20080722-1827:1.8
	v20080718-1700:1.8
	v20080718-1731:1.8
	v20080716-1600:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080527-1255:1.8
	v20080527-1151:1.7
	v20080516-1748:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080503-1740:1.8
	v20080501-2127:1.7
	v20080501-1739:1.8
	m20080429-1543:1.7
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080407-2250:1.8
	v20080407-0930:1.7
	v20080404-1111:1.7
	v20080328-1605:1.7
	v20080322-0000:1.7
	v20080222-1200:1.7
	v20080201-2010:1.7
	v20080201-0201:1.7
	v20080118-1129:1.7
	v20080114-2222:1.7
	v20080114-1111:1.7
	v20080107-1111:1.7
	v20071222-1111:1.7
	v20071214-1111:1.7
	v20071130-1111:1.7
	v20071124-0000:1.7
	v20071112-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.7
	v20070915-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.6
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070518-1300:1.7
	bugzilla111892_group_support:1.7.0.4
	Root_bugzilla111892_group_support:1.7
	v20070504-1000:1.7
	v20070420-1000:1.7
	v20070413-1300:1.7
	v20070330-1300:1.7
	v20060330-1300:1.7
	v20070322-1100:1.7
	v20060316-0600:1.7
	v20070221-1500:1.7
	v20070208-1800:1.7
	v20070202-0200:1.7
	v20070119-1200:1.7
	v20070111-0800:1.7
	v20070105-1200:1.7
	v20070103-0300:1.7
	M4_20:1.7
	v20061218-1500:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061027-1200:1.7
	v20061013-1330:1.7
	v20061012-1100:1.7
	v20060925-1700:1.7
	v20060919-0800:1.7
	v20060907-1100:1.7
	M1_20:1.7
	v20060831-1500:1.7
	v20060824-1600:1.7
	v20060817-1500:1.7
	v20060810-1700:1.7
	v20060803-1200:1.7
	v20060728-0500:1.7
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1400:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.8
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.7;
commitid	4d0547fad5804567;

1.7
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.20.16.49.27;	author mmostafa;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.25.19.38.13;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.30.15;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.08;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.46;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.commands;

import java.util.Collections;
import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.Assert;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.diagram.core.services.ViewService;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.notation.View;

/**
 * A view creation command that creates a <code>View</code>.
 * After execution, the command result is a singleton list containing 
 * an <code>IAdatable</code> object that adapts to <code>View</code>.
 * Before execution, after undo or after redo, the returned <code>IAdaptable</code>
 * adapts to nothing (will return <code>null</code> when adapted to <code>View</code>)
 */
/*
 * @@canBeSeenBy %partners
 */
public class CreateCommand extends AbstractTransactionalCommand {
	
	/** the view descriptor */
	protected final CreateViewRequest.ViewDescriptor viewDescriptor;
	/** The container view */
	protected final View containerView;
	
	/**
	 * Creates a new CreateCommand
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param viewDescriptor the view descriptor associated with this command
	 * @@param containerView the view that will containe the new view
	 */
	public CreateCommand(TransactionalEditingDomain editingDomain, 
		CreateViewRequest.ViewDescriptor viewDescriptor,
		View containerView) {

		super(editingDomain, DiagramUIMessages.CreateCommand_Label, getWorkspaceFiles(containerView)); 

		Assert.isNotNull(viewDescriptor);
		Assert.isNotNull(containerView);
		
		this.viewDescriptor = viewDescriptor;
		this.containerView = containerView;
				
		// make sure the return object is available even before executing/undoing/redoing
		setResult(CommandResult.newOKCommandResult(viewDescriptor));
	}

	/**
     * Return the cached view descriprot.
     * 
     * @@return view descriprot
     */
	protected CreateViewRequest.ViewDescriptor getViewDescriptor() {
		return viewDescriptor;
	}


	/**
	 * give access to the view, where that will contain the created view
	 * @@return the conatiner view
	 */
	protected View getContainerView() {
		return containerView;
	}

    protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info)
        throws ExecutionException {

		View view =
			ViewService.getInstance().createView(
				viewDescriptor.getViewKind(),
				viewDescriptor.getElementAdapter(),
				containerView,
				viewDescriptor.getSemanticHint(),
				viewDescriptor.getIndex(),
				viewDescriptor.isPersisted(),
				viewDescriptor.getPreferencesHint());
		Assert.isNotNull(view, "failed to create a view"); //$NON-NLS-1$
		viewDescriptor.setView(view);
        
        return CommandResult.newOKCommandResult(viewDescriptor);
	}

    public boolean canExecute() {
		return ViewService.getInstance().provides(
			viewDescriptor.getViewKind(),
			viewDescriptor.getElementAdapter(),
			containerView,
			viewDescriptor.getSemanticHint(),
			viewDescriptor.getIndex(),
			viewDescriptor.isPersisted(),
			viewDescriptor.getPreferencesHint());
	}
	
	/**
	 * returns true if the view that will be created will be a transient view, transient views
	 * will not dirty the model and will never get serialized in the saved file
	 * @@return true if persisted false if transient
	 */
	public boolean isPersisted() {
	 	return getViewDescriptor().isPersisted(); 
	 }
    
    public List getAffectedFiles() {
        if (isPersisted())
            return super.getAffectedFiles();
        else
            return Collections.EMPTY_LIST;
    }
}
@


1.7
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d18 1
a27 1
import org.eclipse.jface.util.Assert;
@


1.6
log
@bugzilla 115826 gmf-head mmostafa 051220 ViewService should be public
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a13 1
import java.util.Collection;
d15 1
d17 2
d20 1
a20 1
import org.eclipse.gmf.runtime.common.core.command.CMValidator;
a21 1
import org.eclipse.gmf.runtime.common.core.command.ICommand;
d25 1
a25 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d39 1
a39 11
public class CreateCommand extends AbstractModelCommand {

	// Create a custom validator which considers persistance.
	private class CreateValidator extends CMValidator {
		public boolean okToEdit(ICommand command) {
			return ((CreateCommand) command).isPersisted() 
			? super.okToEdit(command)
				: true;

		}
	}
d48 2
d53 1
a53 1
	public CreateCommand(
d57 1
a57 1
		super(DiagramUIMessages.CreateCommand_Label,  containerView); 
d66 1
a66 1
		setResult(newOKCommandResult(viewDescriptor));
d70 4
a73 3
	 * Return the cached view descriprot.
	 * @@return view descriprot
	 */
d87 2
a89 4
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d101 2
a102 1
		return newOKCommandResult(viewDescriptor);
d105 1
a105 4
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#isExecutable()
	 */
	public boolean isExecutable() {
d124 7
a130 17
	 
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getValidator()
	 */
	public CMValidator getValidator() {
		return new CreateValidator();
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getAffectedObjects()
	 */
	public Collection getAffectedObjects() {
		if (isPersisted())
			return super.getAffectedObjects();
		else
			return Collections.EMPTY_LIST;
	}
@


1.5
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d21 1
a21 1
import org.eclipse.gmf.runtime.diagram.core.internal.services.view.ViewService;
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a17 2
import org.eclipse.jface.util.Assert;

d22 1
a22 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
d26 1
d64 1
a64 1
		super(DiagramResourceManager.getI18NString("CreateCommand.Label"),  containerView); //$NON-NLS-1$
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d24 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d65 1
a65 1
		super(PresentationResourceManager.getI18NString("CreateCommand.Label"),  containerView); //$NON-NLS-1$
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d25 1
a25 1
import com.ibm.xtools.notation.View;
@

