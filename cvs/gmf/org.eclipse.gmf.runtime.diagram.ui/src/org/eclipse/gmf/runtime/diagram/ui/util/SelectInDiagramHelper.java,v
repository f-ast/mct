head	1.4;
access;
symbols
	v20081023-2107:1.4
	v20081022-1925:1.4
	v20081022-1005:1.4
	v20081020-0700:1.4
	v20080917-1925:1.4
	v20080916-2008:1.4
	v20080911-1728:1.4
	v20080911-1506:1.4
	v20080910-1520:1.4
	v20080910-1510:1.4
	v20080903-1520:1.4
	v20080903-1510:1.4
	v20080813-1510:1.4
	v20080811-1546:1.4
	v20080731-1520:1.4
	v20080725-1738:1.4
	v20080723-2246:1.4
	v20080723-2232:1.4
	v20080723-1700:1.4
	v20080722-1827:1.4
	v20080718-1700:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080527-1255:1.4
	v20080527-1151:1.3
	v20080516-1748:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080503-1740:1.4
	v20080501-2127:1.3
	v20080501-1739:1.4
	m20080429-1543:1.3
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080407-2250:1.4
	v20080407-0930:1.4
	v20080404-1111:1.4
	v20080328-1605:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080201-2010:1.4
	v20080201-0201:1.3
	v20080118-1129:1.3
	v20080114-2222:1.3
	v20080114-1111:1.4
	v20080107-1111:1.4
	v20071222-1111:1.3
	v20071214-1111:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071112-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.6
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070518-1300:1.3
	bugzilla111892_group_support:1.3.0.4
	Root_bugzilla111892_group_support:1.3
	v20070504-1000:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070202-0200:1.3
	v20070119-1200:1.3
	v20070111-0800:1.3
	v20070105-1200:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061218-1500:1.3
	v20061218-1200:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.3
	v20061013-1330:1.3
	v20061012-1100:1.3
	v20060925-1700:1.3
	v20060919-0800:1.3
	v20060907-1100:1.3
	M1_20:1.3
	v20060831-1500:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060810-1700:1.3
	v20060803-1200:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.4
date	2008.01.03.19.18.50;	author aboyko;	state Exp;
branches;
next	1.3;
commitid	7cb0477d351a4567;

1.3
date	2005.09.12.21.29.10;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.22;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.43;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[214239] gmf_head aboyko 080103 [ElementSelection] SelectInDiagramHelper#exposeLocation() fails to work in some cases
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.util;

import java.util.Iterator;
import java.util.List;

import org.eclipse.core.runtime.Assert;
import org.eclipse.draw2d.FigureCanvas;
import org.eclipse.draw2d.RangeModel;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.gef.EditPart;
import org.eclipse.gmf.runtime.common.ui.services.editor.EditorService;
import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramGraphicalViewer;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.ui.IEditorPart;
import org.eclipse.ui.PlatformUI;

/**
 * Helper for selecting an element on a diagram.  Works for closed diagrams
 * when you open the diagram first.  You can use View's getDiagram()
 * to determine the diagram to open.  getDiagram() returns itself if the
 * View is a Diagram.
 *
 * @@author wdiu, Wayne Diu
 */
public class SelectInDiagramHelper {

	/**
	 * Do not instantiate this helper class
	 */
	private SelectInDiagramHelper() {
		//do not instantiate
	}

	/**
	 * Activate the diagram if it's already open.
	 * If not, return null.
	 * 
	 * @@param diagram Diagram to activate
	 * @@return DiagramEditor of the activated diagram.  null if it was not open
	 * and could not be activated.
	 */
	public static DiagramEditor activateDiagram(Diagram diagram) {

		List editors = EditorService.getInstance().getRegisteredEditorParts();
		Iterator it = editors.iterator();
		while (it.hasNext()) {
			Object obj = it.next();

			if (obj instanceof DiagramEditor) {
				DiagramEditor diagramEditor = ((DiagramEditor) obj);
				if (diagramEditor.getDiagram().equals(diagram)) {
					//it's already open, just activate
					PlatformUI.getWorkbench().getActiveWorkbenchWindow()
						.getActivePage().activate(diagramEditor);
					return diagramEditor;
				}
			}
		}

		return null;
	}

	/**
	 * Select the View element from the DiagramEditor.
	 * 
	 * The DiagramEditor for the view must be the active editor for this
	 * workbench, otherwise it does not make sense to call this method.
	 * 
	 * Call activateDiagram to set the active DiagramEditor or open it
	 * manually.
	 * 
	 * @@param view View to select
	 */
	public static void selectElement(View view) {
		IEditorPart editorPart = PlatformUI.getWorkbench()
			.getActiveWorkbenchWindow().getActivePage().getActiveEditor();

		//DiagramEditor should be activated
		Assert.isTrue(editorPart instanceof DiagramEditor);

		DiagramEditor diagramEditor = (DiagramEditor) editorPart;

		//activated DiagramEditor must be the one that corresponds to
		//this view's diagram
		Assert.isTrue(diagramEditor.getDiagram().equals(view.getDiagram()));

		//diagramEditor instanceof IDiagramWorkbenchPart
		IDiagramGraphicalViewer viewer = diagramEditor
			.getDiagramGraphicalViewer();
		Assert.isNotNull(viewer);

		//find the edit part
		Object obj = viewer.getEditPartRegistry().get(view);

		if (obj instanceof EditPart) {
			viewer.select((EditPart) obj);
		} else {
			//could not activate the edit part from the registry
			Assert.isTrue(false);
		}

	}

	/**
	 * This api will expose the diagram at the location given in absolute co-ordinates.
	 * @@param canvas
	 * @@param location
	 */
	public static void exposeLocation(FigureCanvas canvas,Point location){
		location = location.getCopy();
		int padding = 50;
		if (location.x >= 0){
			location.x += padding;  
		}else{
			location.x -= padding;
		}
		
		if (location.y >= 0){
			location.y += padding;  
		}else{
			location.y -= padding;
		}
		
		int viewPortXLocation = canvas.getBounds().x;
		int viewPortXExtent = canvas.getBounds().x+canvas.getBounds().width;
		
		int viewPortYLocation = canvas.getBounds().y;
		int viewPortYExtent = canvas.getBounds().y+canvas.getBounds().height;
		
		int deltaX = 0;
		int deltaY = 0;
		
		if (location.x < viewPortXLocation){
			deltaX = location.x - viewPortXLocation;
		}else if (location.x > viewPortXExtent){
			deltaX = location.x - viewPortXExtent;
		}
		
		if (location.y < viewPortYLocation){
			deltaY = location.y - viewPortYLocation;
		} else if (location.y > viewPortYExtent){
			deltaY = location.y - viewPortYExtent;
		}
		
		RangeModel hRange = canvas.getViewport().getHorizontalRangeModel();
		RangeModel vRange = canvas.getViewport().getVerticalRangeModel();
		if ((deltaX != 0) || (deltaY != 0)){
			canvas.getViewport().setIgnoreScroll(true);
			int x = hRange.getValue() + deltaX;
			int y = vRange.getValue() + deltaY;
			canvas.scrollSmoothTo(x,y);
			canvas.getViewport().setIgnoreScroll(false);
		}
	}
}@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d17 1
a21 4
import org.eclipse.jface.util.Assert;
import org.eclipse.ui.IEditorPart;
import org.eclipse.ui.PlatformUI;

d27 2
d137 2
a138 2
		int viewPortXLocation = canvas.getBounds().x;//getViewport().getHorizontalRangeModel().getValue();
		int viewPortXExtent = canvas.getBounds().x+canvas.getBounds().width;//getViewport().getHorizontalRangeModel().getExtent();
d140 2
a141 2
		int viewPortYLocation = canvas.getBounds().y;//getViewport().getVerticalRangeModel().getValue();
		int viewPortYExtent = canvas.getBounds().y+canvas.getBounds().height;//Viewport().getVerticalRangeModel().getExtent();
d154 1
a154 1
		}else if (location.y > viewPortYExtent){
d160 1
a160 1
		if ((deltaX != 0)|| (deltaY != 0)){
a163 6
			if (x < 0) {
				x = 0;
			}
			if (y < 0) {
				y = 0;
			}
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d26 2
a27 2
import com.ibm.xtools.notation.Diagram;
import com.ibm.xtools.notation.View;
@

