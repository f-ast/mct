head	1.7;
access;
symbols
	v20081023-2107:1.7
	v20081022-1925:1.7
	v20081022-1005:1.7
	v20081020-0700:1.7
	v20080917-1925:1.7
	v20080916-2008:1.7
	v20080911-1728:1.7
	v20080911-1506:1.7
	v20080910-1520:1.7
	v20080910-1510:1.7
	v20080903-1520:1.7
	v20080903-1510:1.7
	v20080813-1510:1.7
	v20080811-1546:1.7
	v20080731-1520:1.7
	v20080725-1738:1.7
	v20080723-2246:1.7
	v20080723-2232:1.7
	v20080723-1700:1.7
	v20080722-1827:1.7
	v20080718-1700:1.7
	v20080718-1731:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080610-1132:1.7
	v20080603-1553:1.7
	v20080527-1255:1.7
	v20080527-1151:1.6
	v20080516-1748:1.7
	v20080516-1143:1.7
	v20080512-1200:1.7
	v20080503-1740:1.7
	v20080501-2127:1.6
	v20080501-1739:1.7
	m20080429-1543:1.6
	v20080425-1959:1.7
	v20080417-1610:1.7
	v20080407-2250:1.7
	v20080407-0930:1.7
	v20080404-1111:1.7
	v20080328-1605:1.7
	v20080322-0000:1.7
	v20080222-1200:1.7
	v20080201-2010:1.7
	v20080201-0201:1.6
	v20080118-1129:1.6
	v20080114-2222:1.6
	v20080114-1111:1.7
	v20080107-1111:1.7
	v20071222-1111:1.7
	v20071214-1111:1.7
	v20071130-1111:1.7
	v20071124-0000:1.6
	v20071112-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.4
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070518-1300:1.6
	bugzilla111892_group_support:1.6.0.2
	Root_bugzilla111892_group_support:1.6
	v20070504-1000:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070202-0200:1.5.2.1
	v20070119-1200:1.5.2.1
	v20070111-0800:1.5.2.1
	v20070105-1200:1.5.2.1
	v20070103-0300:1.6
	M4_20:1.6
	v20061218-1500:1.5.2.1
	v20061218-1200:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.5.2.1
	v20061013-1330:1.6
	v20061012-1100:1.5.2.1
	v20060925-1700:1.5.2.1
	v20060919-0800:1.5.2.1
	v20060907-1100:1.5
	M1_20:1.5
	v20060831-1500:1.5
	v20060824-1600:1.5
	v20060817-1500:1.5
	v20060810-1700:1.5
	v20060803-1200:1.5
	v20060728-0500:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.7
date	2007.10.16.14.11.55;	author crevells;	state Exp;
branches;
next	1.6;
commitid	2b604714c6a84567;

1.6
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.28.02.31.21;	author cmahoney;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2006.01.20.22.10.12;	author cmahoney;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.07;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.52;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[162932] gmf_head crevells 071016 [NoteTextLabel] WrapLabel should use Gef's text layout
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.internal.editparts;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.draw2d.PositionConstants;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.transaction.RunnableWithResult;
import org.eclipse.gef.EditPolicy;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
import org.eclipse.gmf.runtime.common.ui.services.parser.ParserService;
import org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
import org.eclipse.gmf.runtime.diagram.ui.internal.editpolicies.DescriptionDirectEditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.label.ILabelDelegate;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.emf.ui.services.parser.ParserHintAdapter;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.jface.viewers.ICellEditorValidator;

/*
 * @@canBeSeenBy %level1
 */
public class DescriptionCompartmentEditPart extends TextCompartmentEditPart {

	public DescriptionCompartmentEditPart(View view) {
		super(view);
	}

	protected ILabelDelegate createLabelDelegate() {
        ILabelDelegate labelDelegate = super.createLabelDelegate();
        labelDelegate.setTextJustification(PositionConstants.LEFT);
        labelDelegate.setAlignment(PositionConstants.TOP);
        labelDelegate.setTextAlignment(PositionConstants.TOP);
        labelDelegate.setTextWrapOn(true);        
        return labelDelegate;
    }

    /**
	 * @@see org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart#isEditable()
	 */
	protected boolean isEditable() {
		return true;
	}

	/**
	 * @@see org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart#createDefaultEditPolicies()
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
		installEditPolicy(
			EditPolicy.DIRECT_EDIT_ROLE,
			new DescriptionDirectEditPolicy());
	}

	/**
	 * Method getParser.
	 * @@return IParser
	 */
	public IParser getParser() {
		if (parser == null) {
			View view = getNotationView();
			String parserHint = ""; //$NON-NLS-1$
			if (view!=null)
				parserHint = view.getType();
			EObject object = getPrimaryView();
			ParserHintAdapter hintAdapter =
				new ParserHintAdapter(object, parserHint);
			parser = ParserService.getInstance().getParser(hintAdapter);

		}
		return parser;
	}

	/**
	 * Returns a validator for the user's edit text
	 * @@return a validator
	 */
	public ICellEditorValidator getEditTextValidator() {
		return new ICellEditorValidator() {
			public String isValid(final Object value) {
				if (value instanceof String) {
					//final IElement element = resolveModelReference();

					final IParser descParser = getParser();
					try {
						IParserEditStatus isValid = (IParserEditStatus) getEditingDomain()
							.runExclusive(new RunnableWithResult.Impl() {

									public void run() {
										setResult(descParser.isValidEditString(
											null, (String) value));
									}
								});
						return isValid.getCode() == ParserEditStatus.EDITABLE ? null
							: isValid.getMessage();
					} catch (Exception e) {
						Log.error(DiagramUIPlugin.getInstance(), IStatus.ERROR,
							e.getMessage(), e);
					}
				}				
				return null;
			}
		};
	}

	/**
	 * @@see org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart#getLabelText()
	 */
	protected String getLabelText() {
		return getParser().getPrintString(new EObjectAdapter(getPrimaryView()),
			getParserOptions().intValue());
	}

	/**
	 * @@see org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart#getEditText()
	 */
	public String getEditText() {
		return getParser().getEditString(new EObjectAdapter(getPrimaryView()),
			getParserOptions().intValue());
	}
	
	protected void refreshLabel() {
		super.refreshLabel();
	}
}
@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
a14 1
import org.eclipse.draw2d.IFigure;
d27 1
a27 1
import org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel;
d42 8
a49 10
	/**
	 * @@see org.eclipse.gef.editparts.AbstractGraphicalEditPart#createFigure()
	 */
	protected IFigure createFigure() {
		WrapLabel label = new WrapLabel();
		label.setTextAlignment(PositionConstants.TOP);
		label.setLabelAlignment(PositionConstants.TOP);
		label.setTextWrap(true);
		return label;
	}
d51 1
a51 1
	/**
@


1.5
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
@


1.5.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.4
log
@Bugzilla#123313 gmf_head cmahoney 060120 Making DiagramUIPlugin, DiagramUIStatusCodes, and DiagramUIDebugOptions internal
@
text
@d18 1
a19 2
import org.eclipse.jface.viewers.ICellEditorValidator;

a24 1
import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
a28 1
import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
d32 1
a99 1
					final IParserEditStatus isValid[] = {null};
d102 2
a103 1
						MEditingDomainGetter.getMEditingDomain((View)getModel()).runAsRead(new MRunnable() {
d105 7
a111 6
							public Object run() {
								isValid[0] = descParser.isValidEditString(null,
									(String) value);
								return null;
							}
						});
a115 3

					return isValid[0].getCode() == ParserEditStatus.EDITABLE ? null
						: isValid[0].getMessage();
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a26 1
import org.eclipse.gmf.runtime.diagram.ui.DiagramUIPlugin;
d28 1
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d32 1
a32 1
import com.ibm.xtools.notation.View;
@

