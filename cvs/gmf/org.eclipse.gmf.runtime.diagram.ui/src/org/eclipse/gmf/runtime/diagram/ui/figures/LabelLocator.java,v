head	1.6;
access;
symbols
	v20081023-2107:1.6
	v20081022-1925:1.6
	v20081022-1005:1.6
	v20081020-0700:1.6
	v20080917-1925:1.6
	v20080916-2008:1.6
	v20080911-1728:1.6
	v20080911-1506:1.6
	v20080910-1520:1.6
	v20080910-1510:1.6
	v20080903-1520:1.6
	v20080903-1510:1.6
	v20080813-1510:1.6
	v20080811-1546:1.6
	v20080731-1520:1.6
	v20080725-1738:1.6
	v20080723-2246:1.6
	v20080723-2232:1.6
	v20080723-1700:1.6
	v20080722-1827:1.6
	v20080718-1700:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080527-1255:1.6
	v20080527-1151:1.5
	v20080516-1748:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080503-1740:1.6
	v20080501-2127:1.5
	v20080501-1739:1.6
	m20080429-1543:1.5
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080407-2250:1.6
	v20080407-0930:1.6
	v20080404-1111:1.6
	v20080328-1605:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20080201-2010:1.6
	v20080201-0201:1.5
	v20080118-1129:1.5
	v20080114-2222:1.5
	v20080114-1111:1.6
	v20080107-1111:1.6
	v20071222-1111:1.6
	v20071214-1111:1.6
	v20071130-1111:1.6
	v20071124-0000:1.5
	v20071112-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	bugzilla111892_group_support:1.5.0.2
	Root_bugzilla111892_group_support:1.5
	v20070504-1000:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4.2.1
	v20070119-1200:1.4.2.1
	v20070111-0800:1.4.2.1
	v20070105-1200:1.4.2.1
	v20070103-0300:1.5
	M4_20:1.5
	v20061218-1500:1.4.2.1
	v20061218-1200:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061027-1200:1.4.2.1
	v20061013-1330:1.5
	v20061012-1100:1.4.2.1
	v20060925-1700:1.4.2.1
	v20060919-0800:1.4.2.1
	v20060907-1100:1.4.2.1
	M1_20:1.4
	v20060831-1500:1.4.2.1
	v20060824-1600:1.4.2.1
	v20060817-1500:1.4.2.1
	v20060810-1700:1.4.2.1
	v20060803-1200:1.4.2.1
	v20060728-0500:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051208-2000:1.4
	I20051201-1800:1.4
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.6
date	2007.10.05.19.17.54;	author crevells;	state Exp;
branches;
next	1.5;
commitid	7c9e47068de24567;

1.5
date	2006.10.03.15.02.05;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.04.22.13.15;	author sshaw;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.09.12.21.29.09;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.08.18.58.41;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.46;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.08.02.17.08.01;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[205495] gmf_head crevells 071005 LabelLocator.relocate() calculates location based on incorrect size
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.figures;

import org.eclipse.draw2d.AbstractLocator;
import org.eclipse.draw2d.Connection;
import org.eclipse.draw2d.ConnectionLocator;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.geometry.Dimension;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.draw2d.geometry.PointList;
import org.eclipse.draw2d.geometry.Rectangle;

import org.eclipse.gmf.runtime.diagram.ui.internal.figures.LabelHelper;
import org.eclipse.gmf.runtime.diagram.ui.internal.util.LabelViewConstants;
import org.eclipse.gmf.runtime.draw2d.ui.geometry.PointListUtilities;

/**
 * Label locator that supports locating labels whose parent is either a Node or
 * and Edge.
 * 
 * @@author jcorchis
 */
public class LabelLocator extends AbstractLocator {


	/**
	 * the parent figure of this locator
	 */
	protected IFigure parent;
	private int alignment;
	private Point offSet;
	private Dimension extent;

	/**
	 * Constructor to create a an instance of <code>LabelLocator</code>
	 * which locates an IFigure offset relative to a calculated reference point.
	 * @@param parent the parent figure
	 * @@param offSet the relative location of the label
	 * @@param alignment the alignment hint in the case the parent is a <code>Connection</code>
	 */
	public LabelLocator(IFigure parent, Point offSet, int alignment) {
		this.parent = parent;
		this.offSet = offSet;
		this.alignment = alignment;

	}
	
	/**
	 * Constructor for figure who are located and sized.
	 * @@param parent
	 * @@param bounds
	 * @@param alignment
	 */
	public LabelLocator(IFigure parent, Rectangle bounds, int alignment) {
		this(parent, bounds.getLocation(), alignment);
		this.extent = bounds.getSize();
	}
	
	/**
	 * getter for the offset point
	 * @@return point
	 */
	public Point getOffset() {
		return this.offSet;
	}
	
	/**
	 * setter for the offset point
	 * @@param offset
	 */
	public void setOffset(Point offset) {
		this.offSet = offset;
	}

	/**
	 * Positions the lable relative to the reference point with the
	 * given offsets.
	 */
	public void relocate(IFigure target) {
	    
	    // The calculation of the location depends on the size of the shape so
        // the size must be set first.

       if (extent != null) {
            LabelLocator currentConstraint = (LabelLocator)target.getParent().getLayoutManager().getConstraint(target);
            Dimension currentExtent = currentConstraint.getSize();
            Dimension size = new Dimension(currentExtent);
            if (currentExtent.width == -1) size.width = target.getPreferredSize().width;
            if (currentExtent.height == -1) size.height = target.getPreferredSize().height;
            target.setSize(size);
        } else {
            target.setSize(new Dimension(target.getPreferredSize().width, target.getPreferredSize().height));           
        }
	       
		Point location = LabelHelper.relativeCoordinateFromOffset(target, getReferencePoint(), offSet);
		target.setLocation(location);
	}
	
	/**
	 * Returns the reference point for the locator.
	 * @@return the reference point
	 */
	protected Point getReferencePoint() {
		if (parent instanceof Connection) {
			PointList ptList = ((Connection) parent).getPoints();	
			return PointListUtilities.calculatePointRelativeToLine(ptList, 0, getLocation(), true);						
		} else {
			return parent.getBounds().getLocation();			
		}
	}

	/**
	 * Returns the 
	 */
	private int getLocation() {
		switch (getAlignment()) {
			case ConnectionLocator.SOURCE:
				return LabelViewConstants.TARGET_LOCATION;
			case ConnectionLocator.TARGET:
				return LabelViewConstants.SOURCE_LOCATION;
			case ConnectionLocator.MIDDLE:
				return LabelViewConstants.MIDDLE_LOCATION;
			default:
				return LabelViewConstants.MIDDLE_LOCATION;
		}
	}

	/**
	 * Returns the alignment of ConnectionLocator. 
	 * @@return The alignment
	 * 
	 */
	public int getAlignment() {
		return alignment;
	}
	
	/**
	 * Returns the current extent for this locator
	 * @@return the extent
	 */
	public Dimension getSize() {
		return extent.getCopy();
	}
	
	/**
	 * Returns the <code>PointList</code> describing the label's parent.
	 * 
	 * @@return pointList
	 */
	protected PointList getPointList() {
		if (parent instanceof Connection) {
			return ((Connection) parent).getPoints();
		} else {
			PointList ptList = new PointList();
			ptList.addPoint(parent.getBounds().getLocation());
			return ptList;
		}
	}


}@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d90 15
a106 11
				
		if (extent != null) {
			LabelLocator currentConstraint = (LabelLocator)target.getParent().getLayoutManager().getConstraint(target);
			Dimension currentExtent = currentConstraint.getSize();
			Dimension size = new Dimension(currentExtent);
			if (currentExtent.width == -1) size.width = target.getPreferredSize().width;
			if (currentExtent.height == -1) size.height = target.getPreferredSize().height;
			target.setSize(size);
		} else {
			target.setSize(new Dimension(target.getPreferredSize().width, target.getPreferredSize().height));			
		}
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051104 Updating tutorial guides and some comments with name changes
@
text
@d137 1
a137 1
	 * @@since 2.0
@


1.4.2.1
log
@[148078] gmf_R_1_0_maintenance aboyko 060802 @@since 3.0/3.1 tags in Javadocs in DiagramDocumentEditor class
@
text
@d137 1
a137 1
	 * 
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d135 1
a135 1
	 * Returns the alignment of ConnectorLocator. 
@


1.2
log
@Bugzilla 109092  : rumv_head mmostafa 050908 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d21 2
a22 1
import org.eclipse.gmf.runtime.diagram.ui.util.LabelViewConstants;
@

