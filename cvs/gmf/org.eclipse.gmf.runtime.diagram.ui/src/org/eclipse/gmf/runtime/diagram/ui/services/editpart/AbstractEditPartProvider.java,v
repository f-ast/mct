head	1.13;
access;
symbols
	v20081023-2107:1.13
	v20081022-1925:1.13
	v20081022-1005:1.13
	v20081020-0700:1.13
	v20080917-1925:1.13
	v20080916-2008:1.13
	v20080911-1728:1.13
	v20080911-1506:1.13
	v20080910-1520:1.13
	v20080910-1510:1.13
	v20080903-1520:1.13
	v20080903-1510:1.13
	v20080813-1510:1.13
	v20080811-1546:1.13
	v20080731-1520:1.13
	v20080725-1738:1.13
	v20080723-2246:1.13
	v20080723-2232:1.13
	v20080723-1700:1.13
	v20080722-1827:1.13
	v20080718-1700:1.13
	v20080718-1731:1.13
	v20080716-1600:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.2
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080610-1132:1.13
	v20080603-1553:1.13
	v20080527-1255:1.13
	v20080527-1151:1.12
	v20080516-1748:1.13
	v20080516-1143:1.13
	v20080512-1200:1.13
	v20080503-1740:1.13
	v20080501-2127:1.12
	v20080501-1739:1.13
	m20080429-1543:1.12
	v20080425-1959:1.13
	v20080417-1610:1.13
	v20080407-2250:1.13
	v20080407-0930:1.12
	v20080404-1111:1.12
	v20080328-1605:1.12
	v20080322-0000:1.12
	v20080222-1200:1.12
	v20080201-2010:1.12
	v20080201-0201:1.12
	v20080118-1129:1.12
	v20080114-2222:1.12
	v20080114-1111:1.12
	v20080107-1111:1.12
	v20071222-1111:1.12
	v20071214-1111:1.12
	v20071130-1111:1.12
	v20071124-0000:1.12
	v20071112-0000:1.12
	v20071108-0000:1.12
	v20071003-0000:1.12
	v20070915-0000:1.12
	v20070903-0000:1.12
	v20070809-0000:1.12
	R2_0_maintenance:1.12.0.6
	R2_0:1.12
	R4_20:1.12
	v20070621-0000:1.12
	RC3_20:1.12
	v20070614-1400:1.12
	v20070608-1300:1.12
	v20070605-1400:1.12
	v20070601-1400:1.12
	v20070525-1500:1.12
	v20070518-1300:1.12
	bugzilla111892_group_support:1.12.0.4
	Root_bugzilla111892_group_support:1.12
	v20070504-1000:1.12
	v20070420-1000:1.12
	v20070413-1300:1.12
	v20070330-1300:1.12
	v20060330-1300:1.12
	v20070322-1100:1.12
	v20060316-0600:1.12
	v20070221-1500:1.12
	v20070208-1800:1.12
	v20070202-0200:1.12
	v20070119-1200:1.12
	v20070111-0800:1.12
	v20070105-1200:1.12
	v20070103-0300:1.12
	M4_20:1.12
	v20061218-1500:1.12
	v20061218-1200:1.12
	v20061214-0000:1.12
	M3_20:1.12
	v20061117-0800:1.12
	v20061027-1200:1.12
	v20061013-1330:1.12
	v20061012-1100:1.12
	v20060925-1700:1.12
	v20060919-0800:1.12
	v20060907-1100:1.12
	M1_20:1.12
	v20060831-1500:1.12
	v20060824-1600:1.12
	v20060817-1500:1.12
	v20060810-1700:1.12
	v20060803-1200:1.12
	v20060728-0500:1.12
	v20060721-1130:1.12
	v20060713-1700:1.12
	R1_0_maintenance:1.12.0.2
	R1_0:1.12
	v20060627-1200:1.12
	v20060616-1400:1.12
	v20060616-1200:1.12
	v20060609-1400:1.12
	v20060531-1730:1.12
	v20060530-1930:1.12
	v20060526-1200:1.12
	v20060519-0800:1.12
	v20060512-1000:1.12
	I20060512-1000:1.12
	I20060505-1400:1.12
	I20060428-1300:1.12
	I20060424-0500:1.12
	I20060424-0300:1.11
	M6_10:1.11
	I20060407-1200:1.10
	I20060331-1000:1.10
	I20060324-0300:1.10
	I20060317-1300:1.10
	I20060317-1200:1.10
	I20060316-1300:1.10
	I20060309-1300:1.10
	M5_10:1.10
	S20060303-1600:1.10
	I20060227-1730:1.9
	I20060216-1945:1.9
	I20060210-1715:1.9
	I20060209-1815:1.9
	I20060203-0830:1.9
	I20060202-1415:1.9
	I20060129-1145:1.9
	I20060127-0900:1.9
	I20060120-1530:1.8
	I20060113-1700:1.8
	M4_10:1.8
	I20060107-1100:1.8
	I20060105-1630:1.8
	I20051230-1230:1.8
	I20051223-1100:1.8
	I20051217-0925:1.8
	I20051208-2000:1.8
	I20051201-1800:1.8
	I20051124-2000:1.7
	M3_10:1.7
	I20051118-1245:1.7
	I20051111-1800:1.7
	I20051106-0900:1.6
	v20051030:1.5;
locks; strict;
comment	@# @;


1.13
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.12;
commitid	4d0547fad5804567;

1.12
date	2006.04.18.20.51.25;	author cmahoney;	state Exp;
branches;
next	1.11;

1.11
date	2006.04.10.20.33.48;	author ldamus;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.28.02.31.20;	author cmahoney;	state Exp;
branches;
next	1.9;

1.9
date	2006.01.20.22.10.12;	author cmahoney;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.25.19.38.14;	author cmahoney;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.08.16.02.30;	author sshaw;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.02.23.30.18;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2005.09.22.15.42.19;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.15.14.59.19;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.11;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.44;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.13
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.services.editpart;

import java.lang.reflect.Constructor;

import org.eclipse.core.runtime.Assert;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.gef.RootEditPart;
import org.eclipse.gmf.runtime.common.core.service.AbstractProvider;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.IEditPartProvider;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.osgi.util.NLS;


/**
 * An AbstractFactory implementation of the <code>IEditPartProvider</code> interface.  
 * This implementations invokes the approrpiate factory method by inspecting the supplied
 * operation and provides the actual editpart creation functionality.
 * @@see #provides(IOperation)
 * 
 */
/*
 * @@canBeSeenBy %partners
 */
public abstract class AbstractEditPartProvider extends AbstractProvider
	implements IEditPartProvider, Properties {

	/**
	 * create an instance of <code>GraphicEditPaty</code>.   The instance is created
	 * via reflection and the supplied paramter is the editpart's constructor paramter.
	 * @@param view the view to be controlled by the created editpart.
	 */
	public IGraphicalEditPart createGraphicEditPart(View view) {
		Class editpartClass = getEditPartClass(view);
		IGraphicalEditPart graphicEditPart = createNewGraphicEditPart(editpartClass, new Object[] {view});
		Assert.isNotNull(graphicEditPart);
		return graphicEditPart;
	}
	
	/**
	 * Cycles through the various operations supported by this provider and  
	 * invokes the appropriate <code>setXXXEditPartClass</code> method.
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.service.IProvider#provides(IOperation)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.services.editpart.CreateGraphicEditPartOperation#getView()
	 * @@param operation an instance of a <code>CreateGraphicEditPartOperation</code>
	 * @@return <tt>true</tt> if an editpart class was set, otherwise <tt>false</tt>. (i.e., 
	 * <pre>return getEditPartClass() != null; </pre>
	 */
	public boolean provides(IOperation operation) {
		if ( operation instanceof CreateGraphicEditPartOperation ) {
			View view = (( IEditPartOperation)operation).getView();
			return getEditPartClass(view) != null;
		}
		return false;
	}

	/**
	 * Gets an editpart class for the given view
	 * @@param view
	 * @@return <code>Class</code>
	 */
	private Class getEditPartClass(View view) {
		if ( view instanceof Diagram)
			return getDiagramEditPartClass(view );
		else if ( view instanceof Edge )
			return getEdgeEditPartClass(view);
		else if (view instanceof Node)
			return getNodeEditPartClass(view);
		return null;
	}
	
	/** 
	 * Gets a connection's editpart class. 
	 * This method should be overridden by a provider if it wants to provide this service. 
	 * @@param view the view to be <i>controlled</code> by the created editpart
	 * @@return <code>Class</code>
	 */
	protected Class getEdgeEditPartClass(View view ) {
		return null;
	}

	/**
	 * Gets a diagram's editpart class.
	 * This method should be overridden by a provider if it wants to provide this service. 
	 * @@param view the view to be <i>controlled</code> by the created editpart
	 * @@return <code>Class</code> 
	 */
	protected Class getDiagramEditPartClass(View view ) {
		return null;
	}
	
	/**
	 * Gets a Node's editpart class.
	 * This method should be overridden by a provider if it wants to provide this service. 
	 * @@param view the view to be <i>controlled</code> by the created editpart
	 * @@return <code>Class</code>
	 */
	protected Class getNodeEditPartClass(View view ) {
		return null;
	}
	
	/**
	 * Creates an editpart via reflection.
	 * @@param constructorParams the editpart's constructor paramters.
	 */
	private IGraphicalEditPart createNewGraphicEditPart(Class editpartClass, Object[] constructorParams) {
		try {
			Constructor constructor = getCreationConstructor(editpartClass);
			Assert.isNotNull(constructor);

			return (constructor == null)? null : (IGraphicalEditPart) constructor.newInstance(constructorParams);
		} 
		catch (Throwable e) {
			String eMsg = NLS.bind(  
				DiagramUIMessages.AbstractEditPartProvider_new_graphicaleditpart_failed_ERROR_,
				editpartClass);
			Log.warning(DiagramUIPlugin.getInstance(), IStatus.WARNING, eMsg, e);
			return null;
		}
	}

	/** 
	 * Return the appropriate constuctor for the cached editpart class. 
	 * @@return a constructor (<tt>null</tt> if none could be found).
	 */
	private Constructor getCreationConstructor(Class editpartClass) {
		Assert.isNotNull(editpartClass);

		if (editpartClass != null) {
			Constructor[] consts = editpartClass.getConstructors();
			if (consts.length != 0)
				return consts[0];
		}
		return null;
	}
	
	/**
	 * gets the supplied view's underlying notation element's eClass
	 * @@param view 
	 * @@return the view's <code>EClass</code>
	 */
	protected static EClass getReferencedElementEClass(View view ) {
		return EMFCoreUtil.getProxyClass(view.getElement());
	}
	
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.IEditPartProvider#createRootEditPart(org.eclipse.gmf.runtime.notation.Diagram)
	 */
	public RootEditPart createRootEditPart(Diagram diagram) {
		return null;
	}
}

@


1.12
log
@Bugzilla#109422 gmf_head cmahoney 060418 Remove deprecated API
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003, 2006 IBM Corporation and others.
d16 1
a32 1
import org.eclipse.jface.util.Assert;
@


1.11
log
@[135584] gmf_head ldamus 060410 Classes and methods required by clients should be made public
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a166 8

	/**
	 * @@return the <code>RootEditPart</code>
	 * @@deprecated clients should override {@@link AbstractEditPartProvider#createRootEditPart(Diagram)} instead
	 */
	public RootEditPart createRootEditPart() {
		return null;
	}
@


1.10
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d73 1
a73 1
			View view = (( CreateGraphicEditPartOperation)operation).getView();
@


1.9
log
@Bugzilla#123313 gmf_head cmahoney 060120 Making DiagramUIPlugin, DiagramUIStatusCodes, and DiagramUIDebugOptions internal
@
text
@d27 1
a27 1
import org.eclipse.gmf.runtime.emf.core.util.ProxyUtil;
d165 1
a165 1
		return ProxyUtil.getProxyClass(view.getElement());
@


1.8
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@a21 1
import org.eclipse.gmf.runtime.diagram.ui.DiagramUIPlugin;
d23 1
@


1.7
log
@bugzilla 112788 gmf-head sshaw 051108 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@a14 1
import java.text.MessageFormat;
a18 2
import org.eclipse.jface.util.Assert;

d26 1
a26 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
d32 2
d136 3
a138 3
			String eMsg = MessageFormat.format(  
				DiagramResourceManager.getInstance().getString("AbstractEditPartProvider.new.graphicaleditpart.failed_ERROR_"),//$NON-NLS-1$
				new Object[] {editpartClass});
@


1.6
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a158 1

d169 3
a171 2
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.IEditPartProvider#createRootEditPart()
d176 8
@


1.5
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d29 1
a29 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d89 1
a89 1
			return getConnectorEditPartClass(view);
d96 1
a96 1
	 * Gets a connector's editpart class. 
d101 1
a101 1
	protected Class getConnectorEditPartClass(View view ) {
d138 1
a138 1
				PresentationResourceManager.getInstance().getString("AbstractEditPartProvider.new.graphicaleditpart.failed_ERROR_"),//$NON-NLS-1$
@


1.4
log
@Bugzilla 109618: gmf_head mmostafa 050915 :  Remove the deprecated view facade interfaces and classes
@
text
@d27 1
a29 1
import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a24 1
import org.eclipse.gmf.runtime.diagram.core.internal.view.IView;
a159 9
	/**
	 * gets the supplied view's underlying notation element's eClass
	 * @@param view 
	 * @@deprecated replaced by @@link #getReferencedElementEClass(View)
	 * @@return EClass
	 */
	protected static EClass getReferencedElementEClass( IView view ) {
		return ProxyUtil.getProxyClass(view.getSemanticElement());
	}
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d30 4
a33 4
import com.ibm.xtools.notation.Diagram;
import com.ibm.xtools.notation.Edge;
import com.ibm.xtools.notation.Node;
import com.ibm.xtools.notation.View;
@

