head	1.8;
access;
symbols
	v20081023-2107:1.8
	v20081022-1925:1.8
	v20081022-1005:1.8
	v20081020-0700:1.8
	v20080917-1925:1.8
	v20080916-2008:1.8
	v20080911-1728:1.8
	v20080911-1506:1.8
	v20080910-1520:1.8
	v20080910-1510:1.8
	v20080903-1520:1.8
	v20080903-1510:1.8
	v20080813-1510:1.8
	v20080811-1546:1.8
	v20080731-1520:1.8
	v20080725-1738:1.8
	v20080723-2246:1.8
	v20080723-2232:1.8
	v20080723-1700:1.8
	v20080722-1827:1.8
	v20080718-1700:1.8
	v20080718-1731:1.8
	v20080716-1600:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080527-1255:1.8
	v20080527-1151:1.7
	v20080516-1748:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080503-1740:1.8
	v20080501-2127:1.7
	v20080501-1739:1.8
	m20080429-1543:1.7
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080407-2250:1.8
	v20080407-0930:1.7
	v20080404-1111:1.7
	v20080328-1605:1.7
	v20080322-0000:1.7
	v20080222-1200:1.7
	v20080201-2010:1.7
	v20080201-0201:1.7
	v20080118-1129:1.7
	v20080114-2222:1.7
	v20080114-1111:1.7
	v20080107-1111:1.7
	v20071222-1111:1.7
	v20071214-1111:1.7
	v20071130-1111:1.7
	v20071124-0000:1.7
	v20071112-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.7
	v20070915-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.6
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070518-1300:1.7
	bugzilla111892_group_support:1.7.0.4
	Root_bugzilla111892_group_support:1.7
	v20070504-1000:1.7
	v20070420-1000:1.7
	v20070413-1300:1.7
	v20070330-1300:1.7
	v20060330-1300:1.7
	v20070322-1100:1.7
	v20060316-0600:1.7
	v20070221-1500:1.7
	v20070208-1800:1.7
	v20070202-0200:1.7
	v20070119-1200:1.7
	v20070111-0800:1.7
	v20070105-1200:1.7
	v20070103-0300:1.7
	M4_20:1.7
	v20061218-1500:1.7
	v20061218-1200:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061027-1200:1.7
	v20061013-1330:1.7
	v20061012-1100:1.7
	v20060925-1700:1.7
	v20060919-0800:1.7
	v20060907-1100:1.7
	M1_20:1.7
	v20060831-1500:1.7
	v20060824-1600:1.7
	v20060817-1500:1.7
	v20060810-1700:1.7
	v20060803-1200:1.7
	v20060728-0500:1.7
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1400:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.8
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.7;
commitid	4d0547fad5804567;

1.7
date	2006.04.06.20.30.28;	author ldamus;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.25.19.38.13;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.09.21.16.45;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.23.20.56.03;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.08;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.46;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.commands;

import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.Assert;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.core.util.ObjectAdapter;
import org.eclipse.gmf.runtime.common.ui.dialogs.PopupDialog;
import org.eclipse.gmf.runtime.diagram.ui.internal.commands.ElementTypeLabelProvider;
import org.eclipse.gmf.runtime.diagram.ui.internal.l10n.InternalDiagramUIMessages;
import org.eclipse.gmf.runtime.diagram.ui.menus.PopupMenu;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
import org.eclipse.gmf.runtime.emf.ui.dialogs.AbstractSelectElementDialog;
import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.jface.window.Window;
import org.eclipse.osgi.util.NLS;
import org.eclipse.swt.widgets.Shell;

/**
 * <p>
 * A command that pops up a menu which can allow the user to select whether they
 * want to create a new type, select an existing element, or leave it
 * unspecified.
 * </p>
 * 
 * <p>
 * The content can be customized, one or more of the above options are
 * permitted. The constants <code>UNSPECIFIED</code> and
 * <code>SELECT_EXISTING</code> can be used as the content of a menu item.
 * </p>
 * 
 * <p>
 * The displayed strings can be customized with a custom label provider.
 * </p>
 * 
 * <p>
 * The options are:
 * <li>Unspecified</li>
 * <li>Select Existing Element</li>
 * <li>Create New Type A</li>
 * <li>Create New Type B</li>
 * 
 * <p>
 * If a "Select Existing" menu item is chosen, an additional dialog appears
 * allowing the user to choose an element.
 * 
 * <p>
 * The <code>getResultAdapter()</code> method returns an adaptable to the
 * result.
 * </p>
 * 
 * @@author cmahoney
 */
public class CreateOrSelectElementCommand
	extends PopupMenuCommand {

	/**
	 * Add this to the content list of the popup menu to add an 'unspecified'
	 * option.
	 */
	public static final String UNSPECIFIED = InternalDiagramUIMessages.CreateOrSelectElementCommand_PopupMenu_UnspecifiedMenuItem_Text;

	/**
	 * Add this to the content list of the popup menu to add a 'select existing'
	 * option.
	 */
	public static final String SELECT_EXISTING = InternalDiagramUIMessages.CreateOrSelectElementCommand_PopupMenu_SelectExistingElementMenuItem_Text;

	/**
	 * Add this to the content list of the popup menu to add a 'create without
	 * binding' option.
	 */
	public static final String CREATE_WITHOUT_BINDING = InternalDiagramUIMessages.CreateOrSelectElementCommand_PopupMenu_CreateWithoutBindingMenuItem_Text;

	/**
	 * The default label provider for the the menu items used in this command.
	 * Adds the "Create new " text to the objects of type
	 * <code>IElementType</code>.
	 */
	static public class LabelProvider
		extends ElementTypeLabelProvider {

		/**
		 * @@see org.eclipse.jface.viewers.ILabelProvider#getText(java.lang.Object)
		 */
		public String getText(Object object) {
			String text = super.getText(object);
			if (object instanceof IElementType) {
				return NLS
					.bind(
						InternalDiagramUIMessages.CreateOrSelectElementCommand_PopupMenu_CreateMenuItem_Text,
						text);
			}
			return text;
		}
	}

	/**
	 * The result to be returned from which the new element or type info can be
	 * retrieved.
	 */
	private ObjectAdapter resultAdapter = new ObjectAdapter();

	/** The dialog to be used if "Select Existing Element" is chosen */
	private AbstractSelectElementDialog selectElementDialog;

	/**
	 * Creates a new <code>CreateOrSelectElementCommand</code> that uses a
	 * popup menu to prompt for the selection.
	 * 
	 * @@param parentShell
	 *            the parent shell
	 * @@param content
	 *            The list of items making up the content of the popup menu.
	 *            This can include element types (<code>IElementType</code>),
	 *            <code>UNSPECIFIED</code>, and <code>SELECT_EXISTING</code>.
	 */
	public CreateOrSelectElementCommand(Shell parentShell, List content) {
		this(parentShell, content, POPUP_MENU);
	}

	/**
	 * Creates a new <code>CreateOrSelectElementCommand</code>.
	 * 
	 * @@param parentShell
	 *            the parent shell
	 * @@param content
	 *            The list of items making up the content of the popup menu.
	 *            This can include element types (<code>IElementType</code>),
	 *            <code>UNSPECIFIED</code>, and <code>SELECT_EXISTING</code>.
	 * @@param style
	 *            The kind of prompt to use for the selection. One of
	 *            {@@link org.eclipse.gmf.runtime.diagram.ui.commands.PopupMenuCommand#POPUP_MENU}
	 *            or
	 *            {@@link org.eclipse.gmf.runtime.diagram.ui.commands.PopupMenuCommand#POPUP_DIALOG}
	 */
	public CreateOrSelectElementCommand(Shell parentShell, List content,
			int style) {
		this(InternalDiagramUIMessages.CreateOrSelectElementCommand_Label, parentShell,
			content, style);
	}

	/**
	 * Creates a new <code>CreateOrSelectElementCommand</code> that uses a
	 * popup menu to prompt for the selection.
	 * 
	 * @@param label
	 *            the command label
	 * @@param parentShell
	 *            the parent shell
	 * @@param content
	 *            The list of items making up the content of the popup menu.
	 *            This can include element types (<code>IElementType</code>),
	 *            <code>UNSPECIFIED</code>, and <code>SELECT_EXISTING</code>.
	 */
	public CreateOrSelectElementCommand(String label, Shell parentShell,
			List content) {
		this(label, parentShell, content, POPUP_MENU);
	}

	/**
	 * Creates a new <code>CreateOrSelectElementCommand</code>.
	 * 
	 * @@param label
	 *            the command label
	 * @@param parentShell
	 *            the parent shell
	 * @@param content
	 *            The list of items making up the content of the popup menu.
	 *            This can include element types (<code>IElementType</code>),
	 *            <code>UNSPECIFIED</code>, and <code>SELECT_EXISTING</code>.
	 * @@param style
	 *            The kind of prompt to use for the selection. One of
	 *            {@@link org.eclipse.gmf.runtime.diagram.ui.commands.PopupMenuCommand#POPUP_MENU}
	 *            or
	 *            {@@link org.eclipse.gmf.runtime.diagram.ui.commands.PopupMenuCommand#POPUP_DIALOG}
	 */
	public CreateOrSelectElementCommand(String label, Shell parentShell,
			List content, int style) {
		super(label, parentShell);

		if (style == POPUP_DIALOG) {
			setPopupDialog(new PopupDialog(parentShell, content,
				getLabelProvider()));
		} else {
			setPopupMenu(new PopupMenu(content, getLabelProvider()));
		}
	}

	/**
	 * Creates a new <code>CreateOrSelectElementCommand</code>.
	 * 
	 * @@param parentShell
	 *            the parent shell
	 * @@param popupMenu
	 *            the popup menu
	 */
	public CreateOrSelectElementCommand(Shell parentShell, PopupMenu popupMenu) {
		super(InternalDiagramUIMessages.CreateOrSelectElementCommand_Label, parentShell,
			popupMenu);
	}

	/**
	 * Pops up the dialog with the content provided. If the user selects 'select
	 * existing', then the select elements dialog also appears.
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.sandbox.AbstractCommand2#doExecute(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor,
            org.eclipse.core.runtime.IAdaptable info)
        throws ExecutionException {
        
		CommandResult cmdResult = super.doExecuteWithResult(progressMonitor, info);
		if (!cmdResult.getStatus().isOK()) {
			return cmdResult;
		}

		Object result = cmdResult.getReturnValue();
		if (result != null) {
			if (result.equals(SELECT_EXISTING)) {
				AbstractSelectElementDialog dialog = getSelectElementDialog();
				Assert.isNotNull(dialog);

				if (dialog.open() != Window.OK) {
					// user cancelled gesture
					return CommandResult.newCancelledCommandResult();
				}
				List selectedElements = dialog.getSelectedElements();
				if (selectedElements == null) {
					// user cancelled gesture
					progressMonitor.setCanceled(true);
					return CommandResult.newCancelledCommandResult();
				} else if (dialog.isMultiSelectable()) {
					resultAdapter.setObject(selectedElements);
					return CommandResult.newOKCommandResult(selectedElements);
				} else {
					resultAdapter.setObject(selectedElements.get(0));
					return CommandResult.newOKCommandResult(selectedElements.get(0));
				}
			} else {
				resultAdapter.setObject(result);
			}
		}
		return cmdResult;
	}

	/**
	 * Gets the selectElementDialog.
	 * 
	 * @@return Returns the selectElementDialog.
	 */
	protected AbstractSelectElementDialog getSelectElementDialog() {
		return selectElementDialog;
	}

	/**
	 * Sets the selectElementDialog.
	 * 
	 * @@param dialog
	 *            The dialog to set.
	 */
	public void setSelectElementDialog(AbstractSelectElementDialog dialog) {
		this.selectElementDialog = dialog;
	}

	/**
	 * Gets the resultAdapter.
	 * 
	 * @@return Returns the resultAdapter.
	 */
	public ObjectAdapter getResultAdapter() {
		return resultAdapter;
	}

	/**
	 * Gets the label provider that is to be used to display each item in the
	 * popup menu.
	 * 
	 * @@return the label provider
	 */
	protected ILabelProvider getLabelProvider() {
		return new LabelProvider();
	}
}@


1.7
log
@[135386] gmf_head ldamus 060406 Runtime plugin dependencies must specify required plugin versions
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
d17 1
a26 1
import org.eclipse.jface.util.Assert;
@


1.6
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d22 1
a25 1
import org.eclipse.gmf.runtime.emf.ui.internal.l10n.EMFUIMessages;
d74 1
a74 1
	public static final String UNSPECIFIED = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_UnspecifiedMenuItem_Text;
d80 1
a80 1
	public static final String SELECT_EXISTING = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_SelectExistingElementMenuItem_Text;
d86 1
a86 1
	public static final String CREATE_WITHOUT_BINDING = EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_CreateWithoutBindingMenuItem_Text;
d104 1
a104 1
						EMFUIMessages.CreateOrSelectElementCommand_PopupMenu_CreateMenuItem_Text,
d152 1
a152 1
		this(EMFUIMessages.CreateOrSelectElementCommand_Label, parentShell,
d212 1
a212 1
		super(EMFUIMessages.CreateOrSelectElementCommand_Label, parentShell,
@


1.5
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d16 1
d220 1
a220 1
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
d222 5
a226 2
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
		CommandResult cmdResult = super.doExecute(progressMonitor);
d239 1
a239 1
					return newCancelledCommandResult();
d245 1
a245 1
					return newCancelledCommandResult();
d248 1
a248 1
					return newOKCommandResult(selectedElements);
d251 1
a251 1
					return newOKCommandResult(selectedElements.get(0));
@


1.4
log
@Bugzilla Bug 109445 gmf_head etworkow 051109 New Eclipse Resources Bundles Should Be Used
@
text
@a13 1
import java.text.MessageFormat;
a16 5
import org.eclipse.jface.util.Assert;
import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.jface.window.Window;
import org.eclipse.swt.widgets.Shell;

d22 1
d25 5
a29 1
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
d101 2
a102 2
				return MessageFormat
					.format(
d104 1
a104 1
						new Object[] {text});
@


1.3
log
@Bugzilla 110480 gmf_head sshaw 050923 Modeling Assistant Service should have generic getTypes() operation to be used in commands with popups
Contributed by Cherie Mahoney
@
text
@d29 1
a29 1
import org.eclipse.gmf.runtime.emf.ui.internal.l10n.ResourceManager;
d74 1
a74 2
	public static final String UNSPECIFIED = ResourceManager
		.getI18NString("CreateOrSelectElementCommand.PopupMenu.UnspecifiedMenuItem.Text"); //$NON-NLS-1$
d80 1
a80 2
	public static final String SELECT_EXISTING = ResourceManager
		.getI18NString("CreateOrSelectElementCommand.PopupMenu.SelectExistingElementMenuItem.Text"); //$NON-NLS-1$
d83 2
a84 2
	 * Add this to the content list of the popup menu to add a 'create without binding'
	 * option.
d86 1
a86 2
	public static final String CREATE_WITHOUT_BINDING = ResourceManager
		.getI18NString("CreateOrSelectElementCommand.PopupMenu.CreateWithoutBindingMenuItem.Text"); //$NON-NLS-1$
d104 1
a104 2
						ResourceManager
							.getI18NString("CreateOrSelectElementCommand.PopupMenu.CreateMenuItem.Text"), //$NON-NLS-1$
d152 2
a153 3
		this(ResourceManager
			.getI18NString("CreateOrSelectElementCommand.Label"), //$NON-NLS-1$
			parentShell, content, style);
d212 2
a213 3
		super(ResourceManager
			.getI18NString("CreateOrSelectElementCommand.Label"), //$NON-NLS-1$
			parentShell, popupMenu);
d286 2
a287 1
	 * Gets the label provider that is to be used to display each item in the popup menu.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d19 1
d202 1
a202 1
				new LabelProvider()));
d204 1
a204 1
			setPopupMenu(new PopupMenu(content, new LabelProvider()));
d290 9
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              	   |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

