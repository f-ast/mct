head	1.6;
access;
symbols
	v20081023-2107:1.6
	v20081022-1925:1.6
	v20081022-1005:1.6
	v20081020-0700:1.6
	v20080917-1925:1.6
	v20080916-2008:1.6
	v20080911-1728:1.6
	v20080911-1506:1.6
	v20080910-1520:1.6
	v20080910-1510:1.6
	v20080903-1520:1.6
	v20080903-1510:1.6
	v20080813-1510:1.6
	v20080811-1546:1.6
	v20080731-1520:1.6
	v20080725-1738:1.6
	v20080723-2246:1.6
	v20080723-2232:1.6
	v20080723-1700:1.6
	v20080722-1827:1.6
	v20080718-1700:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080527-1255:1.6
	v20080527-1151:1.5
	v20080516-1748:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080503-1740:1.6
	v20080501-2127:1.5
	v20080501-1739:1.6
	m20080429-1543:1.5
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080407-2250:1.6
	v20080407-0930:1.6
	v20080404-1111:1.6
	v20080328-1605:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20080201-2010:1.6
	v20080201-0201:1.5
	v20080118-1129:1.5
	v20080114-2222:1.5
	v20080114-1111:1.6
	v20080107-1111:1.6
	v20071222-1111:1.6
	v20071214-1111:1.6
	v20071130-1111:1.6
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	bugzilla111892_group_support:1.5.0.2
	Root_bugzilla111892_group_support:1.5
	v20070504-1000:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4.2.1
	v20070119-1200:1.4.2.1
	v20070111-0800:1.4.2.1
	v20070105-1200:1.4.2.1
	v20070103-0300:1.5
	M4_20:1.5
	v20061218-1500:1.4.2.1
	v20061218-1200:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061027-1200:1.4.2.1
	v20061013-1330:1.5
	v20061012-1100:1.4.2.1
	v20060925-1700:1.4.2.1
	v20060919-0800:1.4.2.1
	v20060907-1100:1.4
	M1_20:1.4
	v20060831-1500:1.4
	v20060824-1600:1.4
	v20060817-1500:1.4
	v20060810-1700:1.4
	v20060803-1200:1.4
	v20060728-0500:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1400:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.6
date	2007.11.21.17.57.28;	author crevells;	state Exp;
branches;
next	1.5;
commitid	4a12474471874567;

1.5
date	2006.10.03.15.02.03;	author ahunter;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2006.05.15.20.41.32;	author sshaw;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.11.02.23.30.16;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.06;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.37;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.16.43.39;	author ahunter;	state Exp;
branches;
next	;

1.5.2.1
date	2007.05.18.17.36.43;	author crevells;	state Exp;
branches;
next	;
commitid	1899464de42a4567;


desc
@@


1.6
log
@[111892] gmf_head crevells 071121 Group/Ungroup support
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editpolicies;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gef.requests.ChangeBoundsRequest;

import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ListCompartmentEditPart;
import org.eclipse.gmf.runtime.diagram.ui.requests.ArrangeRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.RefreshConnectionsRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;

/**
 * @@author choang
 *
 * Default edit policy to handle request of type <code>org.eclipse.gmf.runtime.diagram.ui.internal.requests.DropElementsRequest;<code>.
 * The default behavior will to Create a CreateViewRequest.
 */
public class DiagramDragDropEditPolicy extends DragDropEditPolicy {

	/**
	 * getDropFileCommand
	 * Handler method for the dropRequest as a result of a file transfer drag / drop operation.
	 * @@param dropRequest DropObjectsRequest that contains a list of Strings in it's objects list.
	 * @@return Command that that create the resulting view of the file if any, null otherwise.
	 */
	protected Command getDropFileCommand(DropObjectsRequest dropRequest) {
		Iterator iter = dropRequest.getObjects().iterator();
		while (iter.hasNext()) {
			Object obj = iter.next();
			if (obj instanceof String) {
				//String filePath = (String)obj;
			}
		}
		
		return null;
	}
	
	/**
	 * @@see org.eclipse.gef.EditPolicy#getCommand(Request)
	 */
	public Command getDropObjectsCommand(DropObjectsRequest dropRequest) {
		// Create a view request from the drop request and then forward getting
		// the command for that.

		List viewDescriptors = new ArrayList();
		Iterator iter = dropRequest.getObjects().iterator();

		if (dropRequest.getObjects().size() > 0 &&
			dropRequest.getObjects().get(0) instanceof String) {
			return getDropFileCommand(dropRequest);
		}
		
		while (iter.hasNext())
			viewDescriptors.add(new CreateViewRequest.ViewDescriptor(
				new EObjectAdapter((EObject) iter.next()),
				((IGraphicalEditPart) getHost()).getDiagramPreferencesHint()));

		return createViewsAndArrangeCommand(dropRequest, viewDescriptors);
	}

	/**
	 * createViewsAndArrangeCommand
	 * Method to create all the view based on the viewDescriptors list and provide
	 * a default arrangement of them.
	 * 
	 * @@param dropRequest
	 * @@param viewDescriptors
	 * @@return command
	 */
	protected Command createViewsAndArrangeCommand(DropObjectsRequest dropRequest, List viewDescriptors) {
		CreateViewRequest createViewRequest =
			new CreateViewRequest(viewDescriptors);
		createViewRequest.setLocation(dropRequest.getLocation());
		Command createCommand = getHost().getCommand(createViewRequest);

		if (createCommand != null) {
			List result = (List)createViewRequest.getNewObject();
			dropRequest.setResult(result);

			RefreshConnectionsRequest refreshRequest =
				new RefreshConnectionsRequest(result);
			Command refreshCommand = getHost().getCommand(refreshRequest);

			ArrangeRequest arrangeRequest =
				new ArrangeRequest(RequestConstants.REQ_ARRANGE_DEFERRED);
			arrangeRequest.setViewAdaptersToArrange(result);
			Command arrangeCommand = getHost().getCommand(arrangeRequest);

			CompoundCommand cc = new CompoundCommand(createCommand.getLabel());
			cc.add(createCommand.chain(refreshCommand));
			cc.add(arrangeCommand);
			
			return cc;
		}
		return null;
	}

	/**
	 * @@see org.eclipse.gef.EditPolicy#showTargetFeedback(org.eclipse.gef.Request)
	 */
	public void showTargetFeedback(Request request) {
		// no feedback for the diagram
	}

	/**
	 * Handles dropping attributes from a class to the diagram to show as an
	 * association.
	 * @@see org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy#getDropCommand(org.eclipse.gef.requests.ChangeBoundsRequest)
	 */
	protected Command getDropCommand(ChangeBoundsRequest request) {
		if (request.getEditParts().size() > 0) {
			EditPart parentEP =
				((IGraphicalEditPart) request.getEditParts().get(0)).getParent();
			if (parentEP instanceof ListCompartmentEditPart) {
				Object originalType = request.getType();
				request.setType(RequestConstants.REQ_SHOW_AS_ALTERNATE_VIEW);
				Command cmd = parentEP.getCommand(request);
				request.setType(originalType);
				if (cmd != null) {
					return cmd;
				} 
			} else if (parentEP instanceof GroupEditPart) {
                // Dragging shapes outside the group will cause the group to
                // grow and thus should not reparent.
                return null;
            }
		}
		return super.getDropCommand(request);
	}

}
@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d25 1
d145 5
a149 1
			}
@


1.5.2.1
log
@[111892] gmf_head crevells 070518 First milestone of group/ungroup support (painting issues when grouping shapes with border items)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2007 IBM Corporation and others.
a24 1
import org.eclipse.gmf.runtime.diagram.ui.editparts.GroupEditPart;
d144 1
a144 5
			} else if (parentEP instanceof GroupEditPart) {
                // Dragging shapes outside the group will cause the group to
                // grow and thus should not reparent.
                return null;
            }
@


1.4
log
@bugzilla 141884 gmf-head 060515 sshaw IndexOutOfBoundsException when dragging label and connection together
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.4.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.3
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d133 12
a144 10
		EditPart parentEP =
			((IGraphicalEditPart) request.getEditParts().get(0)).getParent();
		if (parentEP instanceof ListCompartmentEditPart) {
			Object originalType = request.getType();
			request.setType(RequestConstants.REQ_SHOW_AS_ALTERNATE_VIEW);
			Command cmd = parentEP.getCommand(request);
			request.setType(originalType);
			if (cmd != null) {
				return cmd;
			} 
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d30 1
a30 1
import org.eclipse.gmf.runtime.diagram.ui.requests.RefreshConnectorsRequest;
d102 2
a103 2
			RefreshConnectorsRequest refreshRequest =
				new RefreshConnectorsRequest(result);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

