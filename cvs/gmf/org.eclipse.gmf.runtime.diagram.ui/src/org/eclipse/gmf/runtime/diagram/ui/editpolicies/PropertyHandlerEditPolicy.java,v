head	1.9;
access;
symbols
	v20081023-2107:1.9
	v20081022-1925:1.9
	v20081022-1005:1.9
	v20081020-0700:1.9
	v20080917-1925:1.9
	v20080916-2008:1.9
	v20080911-1728:1.9
	v20080911-1506:1.9
	v20080910-1520:1.9
	v20080910-1510:1.9
	v20080903-1520:1.9
	v20080903-1510:1.9
	v20080813-1510:1.9
	v20080811-1546:1.9
	v20080731-1520:1.9
	v20080725-1738:1.9
	v20080723-2246:1.9
	v20080723-2232:1.9
	v20080723-1700:1.9
	v20080722-1827:1.9
	v20080718-1700:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.6
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080527-1255:1.9
	v20080527-1151:1.9
	v20080516-1748:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080503-1740:1.9
	v20080501-2127:1.9
	v20080501-1739:1.9
	m20080429-1543:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080407-2250:1.9
	v20080407-0930:1.9
	v20080404-1111:1.9
	v20080328-1605:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20080201-2010:1.9
	v20080201-0201:1.9
	v20080118-1129:1.9
	v20080114-2222:1.9
	v20080114-1111:1.9
	v20080107-1111:1.9
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.4
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070518-1300:1.9
	bugzilla111892_group_support:1.9.0.2
	Root_bugzilla111892_group_support:1.9
	v20070504-1000:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070202-0200:1.8.2.1
	v20070119-1200:1.8.2.1
	v20070111-0800:1.8.2.1
	v20070105-1200:1.8.2.1
	v20070103-0300:1.9
	M4_20:1.9
	v20061218-1500:1.8.2.1
	v20061218-1200:1.9
	v20061214-0000:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061027-1200:1.8.2.1
	v20061013-1330:1.9
	v20061012-1100:1.8.2.1
	v20060925-1700:1.8.2.1
	v20060919-0800:1.8.2.1
	v20060907-1100:1.8
	M1_20:1.8
	v20060831-1500:1.8
	v20060824-1600:1.8
	v20060817-1500:1.8
	v20060810-1700:1.8
	v20060803-1200:1.8
	v20060728-0500:1.8
	v20060721-1130:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060616-1400:1.8
	v20060616-1200:1.8
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060526-1200:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060505-1400:1.7
	I20060428-1300:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051208-2000:1.5
	I20051201-1800:1.4
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.9
date	2006.10.03.15.02.03;	author ahunter;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.14.18.39.49;	author ahunter;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.14.19.18.37;	author mmostafa;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.07.19.46.08;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.15.02.54.44;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.07;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.37;	author sshaw;	state Exp;
branches;
next	;

1.8.2.1
date	2006.09.13.16.43.39;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.9
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editpolicies;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.editpolicies.AbstractEditPolicy;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
import org.eclipse.gmf.runtime.common.core.command.ICommand;
import org.eclipse.gmf.runtime.diagram.core.commands.SetPropertyCommand;
import org.eclipse.gmf.runtime.diagram.core.util.ViewRefactorHelper;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.TopGraphicEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.ApplyAppearancePropertiesRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.ChangeChildPropertyValueRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.ChangePropertyValueRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;

/**
 * @@author sshaw 
 *
 * Edit policy to handle any property change requests.  In the case of the change
 * request for ID_AUTOSIZE we will create a AUTO_SIZE request and return the command 
 * for that instead of a property change request.
 */
public class PropertyHandlerEditPolicy extends AbstractEditPolicy {

	static private final String APPLY_APPEARANCE_PROPERTIES_UNDO_COMMAND_NAME = "Apply appearance properties"; //$NON-NLS-1$
	
	/**
	 * @@see org.eclipse.gef.EditPolicy#getCommand(Request)
	 */
	public Command getCommand(Request request) {

		if (!understandsRequest(request)) {
			return null;
		}

		if (request.getType().equals(RequestConstants.REQ_PROPERTY_CHANGE) || 
			request.getType().equals(RequestConstants.REQ_CHILD_PROPERTY_CHANGE)) {
			EditPart ep = getHost();
			if (ep instanceof IGraphicalEditPart) {
				View view = ((IGraphicalEditPart) ep).getNotationView();
				ChangePropertyValueRequest cpvr =
					(ChangePropertyValueRequest) request;
				if (request.getType().equals(RequestConstants.REQ_CHILD_PROPERTY_CHANGE)){
					view = ViewUtil.getChildBySemanticHint(view,((ChangeChildPropertyValueRequest)cpvr).getNotationViewType());
				}
				if (view !=null){
					if (ViewUtil.isPropertySupported(view,cpvr.getPropertyID())) {
						return new ICommandProxy(
							new SetPropertyCommand(getEditingDomain(),
								new EObjectAdapter(view),
								cpvr.getPropertyID(),
								cpvr.getPropertyName(),
								((ChangePropertyValueRequest) request).getValue()));
					}
				}
			}
		} else if (request.getType().equals(RequestConstants.REQ_SHOW_ALL_COMPARTMENTS)){
			EditPart ep = getHost();
			if (ep instanceof TopGraphicEditPart) {
				TopGraphicEditPart topEP = (TopGraphicEditPart) ep;
				List resizableViews = topEP.getResizableNotationViews();
				if (resizableViews.isEmpty())
					return null;
				ChangePropertyValueRequest cpvr =
					(ChangePropertyValueRequest) request;
				CompositeCommand compositeCommand = 
					new CompositeCommand(cpvr.getPropertyName());
				for (Iterator iter = resizableViews.iterator(); iter.hasNext();) {
					View childView = (View) iter.next();
					if (ViewUtil.isPropertySupported(childView,cpvr.getPropertyID())) {
						compositeCommand.compose(new SetPropertyCommand(getEditingDomain(),
								new EObjectAdapter(childView),
								cpvr.getPropertyID(),
								cpvr.getPropertyName(),
								((ChangePropertyValueRequest) request).getValue()));
					}
				}
				return new ICommandProxy(compositeCommand);
			}
		}else if (
			request instanceof ApplyAppearancePropertiesRequest
				&& getHost() instanceof IGraphicalEditPart) {

			final ApplyAppearancePropertiesRequest aapr =
				(ApplyAppearancePropertiesRequest) request;

			final IGraphicalEditPart gep = (IGraphicalEditPart)getHost();
			final ViewRefactorHelper vrh = new ViewRefactorHelper(gep.getDiagramPreferencesHint());
			final List exclusions = getStyleExclusionsForCopyAppearance();
			
            ICommand viewStyleCommand = new AbstractTransactionalCommand(getEditingDomain(),
                APPLY_APPEARANCE_PROPERTIES_UNDO_COMMAND_NAME, null) {
				protected CommandResult doExecuteWithResult(
                        IProgressMonitor progressMonitor, IAdaptable info)
                    throws ExecutionException {
					
					vrh.copyViewAppearance(aapr.getViewToCopyFrom(), gep.getNotationView(), exclusions);
					return CommandResult.newOKCommandResult();
				}
			};
			
			return new ICommandProxy(viewStyleCommand);
		}

		return null;
	}

	/**
	 * @@return a <code>List</code> of <code>EClass</code> <code>Style</code> types that are
	 * to be excluded from the copy process.
	 */
	protected List getStyleExclusionsForCopyAppearance() {
		List exclusions = new ArrayList();
		exclusions.add(NotationPackage.eINSTANCE.getDescriptionStyle());
		exclusions.add(NotationPackage.eINSTANCE.getImageBufferStyle());
		return exclusions;
	}
	
	/**
	 * @@see org.eclipse.gef.EditPolicy#understandsRequest(Request)
	 */
	public boolean understandsRequest(Request request) {
		if (request.getType().equals(RequestConstants.REQ_PROPERTY_CHANGE)||
			request.getType().equals(RequestConstants.REQ_CHILD_PROPERTY_CHANGE)||
			request.getType().equals(RequestConstants.REQ_SHOW_ALL_COMPARTMENTS))
			return true;
		if (request instanceof ApplyAppearancePropertiesRequest
			&& getHost() instanceof IGraphicalEditPart)
			return true;
		return super.understandsRequest(request);
	}

	/**
	 * @@see org.eclipse.gef.EditPolicy#getTargetEditPart(org.eclipse.gef.Request)
	 */
	public EditPart getTargetEditPart(Request request) {
		if (!understandsRequest(request))
			return null;

		if (request.getType().equals(RequestConstants.REQ_PROPERTY_CHANGE) ||
			request.getType().equals(RequestConstants.REQ_CHILD_PROPERTY_CHANGE)||
			request.getType().equals(RequestConstants.REQ_SHOW_ALL_COMPARTMENTS)) {
			
			return getHost();
		} else if (request instanceof ApplyAppearancePropertiesRequest) {
			return getHost();
		}
		return super.getTargetEditPart(request);
	}
    
    protected TransactionalEditingDomain getEditingDomain() {
        return ((IGraphicalEditPart) getHost()).getEditingDomain();
    }

}
@


1.8
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.8.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.7
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d32 1
a32 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d76 1
a76 1
						return new EtoolsProxyCommand(
d106 1
a106 1
				return new EtoolsProxyCommand(compositeCommand);
d130 1
a130 1
			return new EtoolsProxyCommand(viewStyleCommand);
@


1.6
log
@111894  gmf-head mmostafa 051201 Improve memory consumption of opened notation diagram
@
text
@d18 2
d21 1
d39 1
a39 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d77 1
a77 1
							new SetPropertyCommand(
d99 1
a99 1
						compositeCommand.compose(new SetPropertyCommand(
d119 5
a123 2
			ICommand viewStyleCommand = new AbstractModelCommand(APPLY_APPEARANCE_PROPERTIES_UNDO_COMMAND_NAME, null) {
				protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d126 1
a126 1
					return newOKCommandResult();
d178 4
@


1.5
log
@bugzilla 118836 gmf-head sshaw 051207 CanonicalConnectionEditPolicy should delete orphans before creating new ones
@
text
@d15 1
d24 1
d31 1
d33 1
d61 2
a62 4
		if (request.getType().equals(RequestConstants.REQ_PROPERTY_CHANGE)) {

			ChangePropertyValueRequest cpvr =
				(ChangePropertyValueRequest) request;
a63 1

d65 37
a101 9
				View view = (View)((IGraphicalEditPart) ep).getModel();

				if (ViewUtil.isPropertySupported(view,cpvr.getPropertyID())) {
					return new EtoolsProxyCommand(
						new SetPropertyCommand(
							new EObjectAdapter(view),
							cpvr.getPropertyID(),
							cpvr.getPropertyName(),
							((ChangePropertyValueRequest) request).getValue()));
d103 1
d105 1
a105 1
		} else if (
d145 3
a147 1
		if (request.getType().equals(RequestConstants.REQ_PROPERTY_CHANGE))
a148 1

d162 4
a165 1
		if (request.getType().equals(RequestConstants.REQ_PROPERTY_CHANGE)) {
@


1.4
log
@bugzilla 112986 gmf-head sshaw 051114 Apply Appearance Properties messes up colors on a LED in a Logic Diagram
@
text
@d86 1
a86 1
			ICommand viewStyleCommand = new AbstractModelCommand(APPLY_APPEARANCE_PROPERTIES_UNDO_COMMAND_NAME, null) {//$NON-NLS-1$
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d14 2
a15 3
import java.util.Dictionary;
import java.util.Enumeration;
import java.util.Iterator;
d17 1
a20 1
import org.eclipse.gef.commands.CompoundCommand;
d22 2
a23 1

d25 2
d32 1
a32 1
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
d34 1
d79 1
a79 1
			ApplyAppearancePropertiesRequest aapr =
d82 3
a84 9
			CompoundCommand cc =
				new CompoundCommand(APPLY_APPEARANCE_PROPERTIES_UNDO_COMMAND_NAME);

			Iterator semanticHints = aapr.getSemanticHints().iterator();
			IGraphicalEditPart part = (IGraphicalEditPart) getHost();
			View view = part.getNotationView();
			String semanticHint = ""; //$NON-NLS-1$
			if (view!=null)
				semanticHint = view.getType();
d86 5
a90 28
			while (semanticHints.hasNext()) {
				// iterate through all factory hints
				String hint = (String) semanticHints.next();
				// find out the target of the future  request
				IGraphicalEditPart target =
					hint.equals(semanticHint)
						? part
						: part.getChildBySemanticHint(hint);

				if (target != null) {
					Dictionary properties = aapr.getPropertiesFor(hint);
					Enumeration propertyIDs = properties.keys();

					while (propertyIDs.hasMoreElements()) {
						// iterate through all the properties applicable to this target
						String propertyID = (String) propertyIDs.nextElement();

						// create a request											
						ChangePropertyValueRequest cpvr =
							new ChangePropertyValueRequest(
								APPLY_APPEARANCE_PROPERTIES_UNDO_COMMAND_NAME,
								propertyID,
								properties.get(propertyID));
						Command command = target.getCommand(cpvr);
						if (command != null)
							// double check if the property is supported
							cc.add(command);
					}
d92 3
a94 4
			}

			return cc;

d101 11
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d30 1
a30 1
import com.ibm.xtools.notation.View;
@

