head	1.2;
access;
symbols
	v20081023-2107:1.2
	v20081022-1925:1.2
	v20081022-1005:1.2
	v20081020-0700:1.2
	v20080917-1925:1.2
	v20080916-2008:1.2
	v20080911-1728:1.2
	v20080911-1506:1.2
	v20080910-1520:1.2
	v20080910-1510:1.2
	v20080903-1520:1.2
	v20080903-1510:1.2
	v20080813-1510:1.2
	v20080811-1546:1.2
	v20080731-1520:1.2
	v20080725-1738:1.2
	v20080723-2246:1.2
	v20080723-2232:1.2
	v20080723-1700:1.2
	v20080722-1827:1.2
	v20080718-1700:1.2
	v20080718-1731:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080610-1132:1.2
	v20080603-1553:1.2
	v20080527-1255:1.2
	v20080527-1151:1.2
	v20080516-1748:1.2
	v20080516-1143:1.2
	v20080512-1200:1.2
	v20080503-1740:1.2
	v20080501-2127:1.2
	v20080501-1739:1.2
	m20080429-1543:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080407-2250:1.2
	v20080407-0930:1.2
	v20080404-1111:1.2
	v20080328-1605:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080201-2010:1.2
	v20080201-0201:1.2
	v20080118-1129:1.2
	v20080114-2222:1.2
	v20080114-1111:1.2
	v20080107-1111:1.2
	v20071222-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071124-0000:1.2
	v20071112-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070614-1400:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070518-1300:1.2
	bugzilla111892_group_support:1.2.0.2
	Root_bugzilla111892_group_support:1.2
	v20070504-1000:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070202-0200:1.1.2.1
	v20070119-1200:1.1.2.1
	v20070111-0800:1.1.2.1
	v20070105-1200:1.1.2.1
	v20070103-0300:1.2
	M4_20:1.2
	v20061218-1500:1.1.2.1
	v20061218-1200:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061027-1200:1.1.2.1
	v20061013-1330:1.2
	v20061012-1100:1.1.2.1
	v20060925-1700:1.1.2.1
	v20060919-0800:1.1.2.1
	v20060907-1100:1.1
	M1_20:1.1
	v20060831-1500:1.1
	v20060824-1600:1.1
	v20060817-1500:1.1
	v20060810-1700:1.1
	v20060803-1200:1.1
	v20060728-0500:1.1
	v20060721-1130:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;


1.2
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.10.20.33.48;	author ldamus;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.requests;

import org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewRequest.ConnectionViewDescriptor;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewAndElementRequest.ViewAndElementDescriptor;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor;
import org.eclipse.gmf.runtime.diagram.ui.util.INotationType;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
import org.eclipse.gmf.runtime.emf.type.core.IHintedType;
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
import org.eclipse.gmf.runtime.notation.Node;

/**
 * Knows how to create a view and element (if applicable) request given an
 * IElementType.
 * 
 * @@author cmahoney
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 */
public class CreateViewRequestFactory {

	/**
	 * Creates a new <code>CreateViewRequest</code> or
	 * <code>CreateViewAndElementRequest</code> based on the
	 * <code>IElementType</code> passed in.
	 * 
	 * @@param type
	 *            the <code>IElementType</code>
	 * @@param preferencesHint
	 *            The preference hint that is to be used to find the appropriate
	 *            preference store from which to retrieve diagram preference
	 *            values. The preference hint is mapped to a preference store in
	 *            the preference registry <@@link DiagramPreferencesRegistry>.
	 * @@return the new request
	 */
	public static CreateViewRequest getCreateShapeRequest(IElementType type, PreferencesHint preferencesHint) {
		if (type instanceof INotationType) {
			ViewDescriptor viewDescriptor = new ViewDescriptor(null,
				Node.class, ((INotationType) type).getSemanticHint(), preferencesHint);
			return new CreateViewRequest(viewDescriptor);
		} else if (type instanceof IHintedType) {
			ViewAndElementDescriptor viewDescriptor = new ViewAndElementDescriptor(
				new CreateElementRequestAdapter(new CreateElementRequest(type)),
				Node.class, ((IHintedType) type).getSemanticHint(), preferencesHint);
			return new CreateViewAndElementRequest(viewDescriptor);
		} else {
			return new CreateViewAndElementRequest(type, preferencesHint);
		}
	}

	/**
	 * Creates a new <code>CreateConnectionViewRequest</code> or
	 * <code>CreateConnectionViewAndElementRequest</code> based on the
	 * <code>IElementType</code> passed in.
	 * 
	 * @@param type
	 *            the <code>IElementType</code>
	 * @@param preferencesHint
	 *            The preference hint that is to be used to find the appropriate
	 *            preference store from which to retrieve diagram preference
	 *            values. The preference hint is mapped to a preference store in
	 *            the preference registry <@@link DiagramPreferencesRegistry>.
	 * @@return the new request
	 */
	public static CreateConnectionViewRequest getCreateConnectionRequest(
			IElementType type, PreferencesHint preferencesHint) {
		if (type instanceof INotationType) {
			// Pass in the type as the element adapter so that it can be
			// retrieved in the cases where a popup menu is to appear with a
			// list of types.
			ConnectionViewDescriptor viewDescriptor = new ConnectionViewDescriptor(
				type, ((INotationType) type).getSemanticHint(), preferencesHint);
			return new CreateConnectionViewRequest(viewDescriptor);
		} else if (type instanceof IHintedType) {
			return new CreateConnectionViewAndElementRequest(type,
				((IHintedType) type).getSemanticHint(), preferencesHint);
		} else {
			return new CreateConnectionViewAndElementRequest(type, preferencesHint);
		}
	}
}@


1.1
log
@[135584] gmf_head ldamus 060410 Classes and methods required by clients should be made public
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.1.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@

