head	1.6;
access;
symbols
	v20081023-2107:1.6
	v20081022-1925:1.6
	v20081022-1005:1.6
	v20081020-0700:1.6
	v20080917-1925:1.6
	v20080916-2008:1.6
	v20080911-1728:1.6
	v20080911-1506:1.6
	v20080910-1520:1.6
	v20080910-1510:1.6
	v20080903-1520:1.6
	v20080903-1510:1.6
	v20080813-1510:1.6
	v20080811-1546:1.6
	v20080731-1520:1.6
	v20080725-1738:1.6
	v20080723-2246:1.6
	v20080723-2232:1.6
	v20080723-1700:1.6
	v20080722-1827:1.6
	v20080718-1700:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.6
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080527-1255:1.6
	v20080527-1151:1.6
	v20080516-1748:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080503-1740:1.6
	v20080501-2127:1.6
	v20080501-1739:1.6
	m20080429-1543:1.6
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080407-2250:1.6
	v20080407-0930:1.6
	v20080404-1111:1.6
	v20080328-1605:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20080201-2010:1.6
	v20080201-0201:1.6
	v20080118-1129:1.6
	v20080114-2222:1.6
	v20080114-1111:1.6
	v20080107-1111:1.6
	v20071222-1111:1.6
	v20071214-1111:1.6
	v20071130-1111:1.6
	v20071124-0000:1.6
	v20071112-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.4
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070518-1300:1.6
	bugzilla111892_group_support:1.6.0.2
	Root_bugzilla111892_group_support:1.6
	v20070504-1000:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070202-0200:1.5.2.1
	v20070119-1200:1.5.2.1
	v20070111-0800:1.5.2.1
	v20070105-1200:1.5.2.1
	v20070103-0300:1.6
	M4_20:1.6
	v20061218-1500:1.5.2.1
	v20061218-1200:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.5.2.1
	v20061013-1330:1.6
	v20061012-1100:1.5.2.1
	v20060925-1700:1.5.2.1
	v20060919-0800:1.5.2.1
	v20060907-1100:1.5.2.1
	M1_20:1.5
	v20060831-1500:1.5.2.1
	v20060824-1600:1.5.2.1
	v20060817-1500:1.5.2.1
	v20060810-1700:1.5.2.1
	v20060803-1200:1.5.2.1
	v20060728-0500:1.5.2.1
	v20060721-1130:1.5.2.1
	v20060713-1700:1.5.2.1
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060202-1415:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.5
	I20051201-1800:1.5
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.6
date	2006.10.03.15.02.05;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.25.19.38.13;	author cmahoney;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2005.11.02.23.30.17;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.28.18.02.44;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.12;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.53;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.07.11.19.44.18;	author cmahoney;	state Exp;
branches;
next	;


desc
@@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.preferences;


import org.eclipse.draw2d.ColorConstants;
import org.eclipse.gmf.runtime.common.ui.preferences.AbstractPreferencePage;
import org.eclipse.gmf.runtime.common.ui.preferences.FontFieldEditor;
import org.eclipse.gmf.runtime.diagram.ui.figures.DiagramColorConstants;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.jface.action.Action;
import org.eclipse.jface.preference.ColorFieldEditor;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jface.preference.PreferenceConverter;
import org.eclipse.jface.resource.JFaceResources;
import org.eclipse.swt.SWT;
import org.eclipse.swt.accessibility.AccessibleAdapter;
import org.eclipse.swt.accessibility.AccessibleEvent;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.graphics.FontData;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Group;

/**
 * Appearance General preference page.
 * 
 * @@author schafe
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 */
public class AppearancePreferencePage
    extends AbstractPreferencePage {

    //localized labels
	private String COLORANDFONT_GROUPBOX_LABEL = DiagramUIMessages.GeneralPreferencePage_colorAndFontGroupBox_label;
	private String DEFAULT_FONT_LABEL = DiagramUIMessages.GeneralPreferencePage_defaultFont_label;
    private String FONT_COLOR_LABEL = DiagramUIMessages.GeneralPreferencePage_fontColor_label;
    private String FILL_COLOR_LABEL = DiagramUIMessages.GeneralPreferencePage_fillColor_label;
    private String LINE_COLOR_LABEL = DiagramUIMessages.GeneralPreferencePage_lineColor_label;
    private String NOTE_FILL_COLOR_LABEL = DiagramUIMessages.GeneralPreferencePage_noteFillColor_label;
    private String NOTE_LINE_COLOR_LABEL = DiagramUIMessages.GeneralPreferencePage_noteLineColor_label;
				
    //preference page editor controls 
    private FontFieldEditor defaultFontEditor = null;
    private ColorFieldEditor fontColorEditor = null;
    private ColorFieldEditor fillColorEditor = null;
    private ColorFieldEditor lineColorEditor = null;
    private ColorFieldEditor noteFillColorEditor = null;
    private ColorFieldEditor noteLineColorEditor = null;

    /* (non-Javadoc)
     * @@see org.eclipse.gmf.runtime.common.ui.preferences.AbstractPreferencePage#addFields(org.eclipse.swt.widgets.Composite)
     */
    protected void addFields(Composite parent) {	  	
    	Composite main = createPageLayout(parent);
		createFontAndColorGroup(main); 
    }

	/**
	 * Creates a new composite for the entire page and sets up the layout.
	 * @@param parent the parent <code>Composite</code> that the field editors will be added
	 * to
	 * @@return the new <code>Composite</code>
	 */
	protected Composite createPageLayout(Composite parent) {
		Composite main = new Composite(parent, SWT.NULL);
		main.setLayout(new GridLayout());
		main.setLayoutData(
			new GridData(
				GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL));
		return main;
	}
        
	/**
	 * Create the font and colour group for the
	 * preference page
	 * @@param parent
	 * @@return composite fontAndColourGroup
	 */
	protected Composite createFontAndColorGroup(Composite parent) {
    	
    	Group group = new Group(parent, SWT.NONE);
    	group.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    	group.setLayout(new GridLayout(3, false));
    	Composite composite = new Composite(group, SWT.NONE);
    	GridLayout gridLayout = new GridLayout(3, false);
    	composite.setLayout(gridLayout);
		GridData gridData = new GridData(GridData.FILL_HORIZONTAL);
		gridData.grabExcessHorizontalSpace = true;
		gridData.horizontalSpan = 3;
		composite.setLayoutData(gridData);
		group.setText(COLORANDFONT_GROUPBOX_LABEL);
    	
 		addFontAndColorFields(composite);
		
		GridLayout layout = new GridLayout();
		layout.numColumns = 3;
		layout.marginWidth = 0;
		layout.marginHeight = 0;
		layout.horizontalSpacing = 8;
		composite.setLayout(layout);               
    	
		return group;
	}

/**
 * Adds the font and color fields to the <code>Composite</code> given.
 * @@param composite
 */
protected void addFontAndColorFields(Composite composite) {
	defaultFontEditor =
	    new FontFieldEditor(
	        IPreferenceConstants.PREF_DEFAULT_FONT,
	        DEFAULT_FONT_LABEL,
			composite);
	addField(defaultFontEditor);
	
	fontColorEditor =
	    new ColorFieldEditor(
	        IPreferenceConstants.PREF_FONT_COLOR,
	        FONT_COLOR_LABEL,
			composite);
	addField(fontColorEditor);		

	fillColorEditor =
	    new ColorFieldEditor(
	        IPreferenceConstants.PREF_FILL_COLOR,
	        FILL_COLOR_LABEL,
			composite);
	addField(fillColorEditor);

	lineColorEditor =
	    new ColorFieldEditor(
	        IPreferenceConstants.PREF_LINE_COLOR,
	        LINE_COLOR_LABEL,
			composite);
	addField(lineColorEditor);

	noteFillColorEditor =
	    new ColorFieldEditor(
	        IPreferenceConstants.PREF_NOTE_FILL_COLOR,
	        NOTE_FILL_COLOR_LABEL,
			composite);
	addField(noteFillColorEditor);

	noteLineColorEditor =
	    new ColorFieldEditor(
	        IPreferenceConstants.PREF_NOTE_LINE_COLOR,
	        NOTE_LINE_COLOR_LABEL,
			composite);
	addField(noteLineColorEditor);
    
    
    //Accessibility helpers...  See bugzilla#142826 ///////////////////////
    
    fontColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
            String labelText = fontColorEditor.getLabelText();
            labelText = Action.removeMnemonics(labelText);
            e.result = labelText;
        } 
    });
    
    fillColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = fillColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
    lineColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = lineColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
    noteFillColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = noteFillColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
    noteLineColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = noteLineColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
}

	/**
     * Initializes the default preference values 
     * for this preference store.
     * 
     * @@param store
     */
    public static void initDefaults(IPreferenceStore store) {

    	setDefaultFontPreference(store);

        Color fontColor = ColorConstants.black;
        PreferenceConverter.setDefault(
            store,
            IPreferenceConstants.PREF_FONT_COLOR,
            fontColor.getRGB());

        Color fillColor = DiagramColorConstants.white;
        PreferenceConverter.setDefault(
            store,
            IPreferenceConstants.PREF_FILL_COLOR,
            fillColor.getRGB());

        Color lineColor = DiagramColorConstants.diagramGray;
        PreferenceConverter.setDefault(
            store,
            IPreferenceConstants.PREF_LINE_COLOR,
            lineColor.getRGB());

        Color noteFillColor = DiagramColorConstants.diagramLightYellow;
        PreferenceConverter.setDefault(
            store,
            IPreferenceConstants.PREF_NOTE_FILL_COLOR,
			noteFillColor.getRGB());

        Color noteLineColor = DiagramColorConstants.diagramDarkYellow;
        PreferenceConverter.setDefault(
            store,
            IPreferenceConstants.PREF_NOTE_LINE_COLOR,
			noteLineColor.getRGB());
    }
    	
	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.preferences.AbstractPreferencePage#initHelp()
	 */
	protected void initHelp() {
		//do nothing, help not ready yet
		//setPageHelpContextId(IHelpContextIds.VZ_U_APPEAR_PAGE_PREF);
	}
	
	/**	
	 * The field editor preference page implementation of a <code>PreferencePage</code>
	 * method loads all the field editors with their default values.
	 * 
	 * Override so that the font field editor default is set.
	 * Note: loadDefault() does not work with FontFieldEditor
	 */
	protected void performDefaults() {		
		setDefaultFontPreference(getPreferenceStore());
        super.performDefaults();
	}
	
	/**
	 * Set the default font for this preference store.
	 * @@param store IPreferenceStore
	 */
	static protected void setDefaultFontPreference(IPreferenceStore store){
		FontData fontDataArray[] =
            JFaceResources.getDefaultFont().getFontData();
        FontData fontData = fontDataArray[0];
        fontData.setHeight(9);
        PreferenceConverter.setDefault(
            store,
            IPreferenceConstants.PREF_DEFAULT_FONT,
            fontData);		
	}

	/**
	 * Gets the field editor used for the default font.
	 * @@return the default font field editor
	 */
	protected FontFieldEditor getDefaultFontEditor() {
		return defaultFontEditor;
	}
	
	/**
	 * Gets the field editor used for the fill color.
	 * @@return the fill color field editor
	 */
	protected ColorFieldEditor getFillColorEditor() {
		return fillColorEditor;
	}

	/**
	 * Gets the field editor used for the line color.
	 * @@return the line color field editor
	 */
	protected ColorFieldEditor getLineColorEditor() {
		return lineColorEditor;
	}	
		
}

@


1.5
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d20 1
d26 2
d162 49
@


1.5.2.1
log
@Bugzilla#142231 gmf_R1_0_maintenance cmahoney 060711 Appearance page color buttons not accessible
Contributed by: Syed Atif Ali
@
text
@a19 1
import org.eclipse.jface.action.Action;
a24 2
import org.eclipse.swt.accessibility.AccessibleAdapter;
import org.eclipse.swt.accessibility.AccessibleEvent;
a158 49
    
    
    //Accessibility helpers...  See bugzilla#142826 ///////////////////////
    
    fontColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
            String labelText = fontColorEditor.getLabelText();
            labelText = Action.removeMnemonics(labelText);
            e.result = labelText;
        } 
    });
    
    fillColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = fillColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
    lineColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = lineColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
    noteFillColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = noteFillColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
    noteLineColorEditor.getColorSelector().getButton().
    getAccessible().addAccessibleListener(new AccessibleAdapter() {
       public void getName(AccessibleEvent e) {
           String labelText = noteLineColorEditor.getLabelText();
           labelText = Action.removeMnemonics(labelText);
           e.result = labelText;
        } 
    });
    
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d16 4
a31 5
import org.eclipse.gmf.runtime.common.ui.preferences.AbstractPreferencePage;
import org.eclipse.gmf.runtime.common.ui.preferences.FontFieldEditor;
import org.eclipse.gmf.runtime.diagram.ui.figures.DiagramColorConstants;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;

d42 7
a48 7
	private String COLORANDFONT_GROUPBOX_LABEL = DiagramResourceManager.getI18NString("GeneralPreferencePage.colorAndFontGroupBox.label");//$NON-NLS-1$
	private String DEFAULT_FONT_LABEL = DiagramResourceManager.getI18NString("GeneralPreferencePage.defaultFont.label"); //$NON-NLS-1$
    private String FONT_COLOR_LABEL = DiagramResourceManager.getI18NString("GeneralPreferencePage.fontColor.label"); //$NON-NLS-1$
    private String FILL_COLOR_LABEL = DiagramResourceManager.getI18NString("GeneralPreferencePage.fillColor.label"); //$NON-NLS-1$
    private String LINE_COLOR_LABEL = DiagramResourceManager.getI18NString("GeneralPreferencePage.lineColor.label"); //$NON-NLS-1$
    private String NOTE_FILL_COLOR_LABEL = DiagramResourceManager.getI18NString("GeneralPreferencePage.noteFillColor.label"); //$NON-NLS-1$
    private String NOTE_LINE_COLOR_LABEL = DiagramResourceManager.getI18NString("GeneralPreferencePage.noteLineColor.label"); //$NON-NLS-1$
@


1.3
log
@Bugzilla 112987 gmf_head tmacdoug 051028 - changing the Fill color and the Font on the LogicDiagram Preferences does not work
@
text
@a29 1
import org.eclipse.gmf.runtime.diagram.ui.IPreferenceConstants;
d31 1
a31 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d34 1
a34 1
 * Presentation Appearance General preference page.
d43 7
a49 7
	private String COLORANDFONT_GROUPBOX_LABEL = PresentationResourceManager.getI18NString("GeneralPreferencePage.colorAndFontGroupBox.label");//$NON-NLS-1$
	private String DEFAULT_FONT_LABEL = PresentationResourceManager.getI18NString("GeneralPreferencePage.defaultFont.label"); //$NON-NLS-1$
    private String FONT_COLOR_LABEL = PresentationResourceManager.getI18NString("GeneralPreferencePage.fontColor.label"); //$NON-NLS-1$
    private String FILL_COLOR_LABEL = PresentationResourceManager.getI18NString("GeneralPreferencePage.fillColor.label"); //$NON-NLS-1$
    private String LINE_COLOR_LABEL = PresentationResourceManager.getI18NString("GeneralPreferencePage.lineColor.label"); //$NON-NLS-1$
    private String NOTE_FILL_COLOR_LABEL = PresentationResourceManager.getI18NString("GeneralPreferencePage.noteFillColor.label"); //$NON-NLS-1$
    private String NOTE_LINE_COLOR_LABEL = PresentationResourceManager.getI18NString("GeneralPreferencePage.noteLineColor.label"); //$NON-NLS-1$
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d228 1
a228 1
	static private void setDefaultFontPreference(IPreferenceStore store){
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

