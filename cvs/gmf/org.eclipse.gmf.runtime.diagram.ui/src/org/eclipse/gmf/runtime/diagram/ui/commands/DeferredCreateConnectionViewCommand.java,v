head	1.4;
access;
symbols
	v20081023-2107:1.4
	v20081022-1925:1.4
	v20081022-1005:1.4
	v20081020-0700:1.4
	v20080917-1925:1.4
	v20080916-2008:1.4
	v20080911-1728:1.4
	v20080911-1506:1.4
	v20080910-1520:1.4
	v20080910-1510:1.4
	v20080903-1520:1.4
	v20080903-1510:1.4
	v20080813-1510:1.4
	v20080811-1546:1.4
	v20080731-1520:1.4
	v20080725-1738:1.4
	v20080723-2246:1.4
	v20080723-2232:1.4
	v20080723-1700:1.4
	v20080722-1827:1.4
	v20080718-1700:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080527-1255:1.4
	v20080527-1151:1.3
	v20080516-1748:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080503-1740:1.4
	v20080501-2127:1.3
	v20080501-1739:1.4
	m20080429-1543:1.3
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080407-2250:1.4
	v20080407-0930:1.3
	v20080404-1111:1.3
	v20080328-1605:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20080201-2010:1.3
	v20080201-0201:1.3
	v20080118-1129:1.3
	v20080114-2222:1.3
	v20080114-1111:1.3
	v20080107-1111:1.3
	v20071222-1111:1.3
	v20071214-1111:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071112-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.6
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070518-1300:1.3
	bugzilla111892_group_support:1.3.0.4
	Root_bugzilla111892_group_support:1.3
	v20070504-1000:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070202-0200:1.3
	v20070119-1200:1.3
	v20070111-0800:1.3
	v20070105-1200:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061218-1500:1.3
	v20061218-1200:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.3
	v20061013-1330:1.3
	v20061012-1100:1.3
	v20060925-1700:1.3
	v20060919-0800:1.3
	v20060907-1100:1.3
	M1_20:1.3
	v20060831-1500:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060810-1700:1.3
	v20060803-1200:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060202-1415:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.3;
commitid	4d0547fad5804567;

1.3
date	2006.02.28.02.30.51;	author cmahoney;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.02.23.30.15;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.commands;

import java.util.Collections;
import java.util.List;
import java.util.Map;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.Assert;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.EditPartViewer;
import org.eclipse.gef.commands.Command;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewRequest.ConnectionViewDescriptor;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.notation.View;

/**
 * This command is used to create a connection view between two editparts, when
 * only the view adapters are available at the time of creating the command. The
 * editparts are required to get the correct create connection command, so this
 * command defers getting the create connection command until execution time at
 * which point it can get the editparts from the editpart registry and the view
 * adapters.
 * 
 * @@author cmahoney
 */
public class DeferredCreateConnectionViewCommand
	extends AbstractTransactionalCommand {

	/** the element for the connection's semantic element */
	protected EObject element = null;

	/** the connection's semantic hint */
	protected String semanticHint = null;

	/** the source adapter from which a View can be retrieved */
	protected IAdaptable sourceViewAdapter;

	/**
	 * the target adapter from which a View can be retrieved
	 */
	protected IAdaptable targetViewAdapter;

	/** the graphical viewer used to get the editpart registry */
	protected EditPartViewer viewer;

	/** the command saved for undo and redo */
	private Command createConnectionCmd;

	/**
	 * The hint used to find the appropriate preference store from which general
	 * diagramming preference values for properties of shapes, connections, and
	 * diagrams can be retrieved. This hint is mapped to a preference store in
	 * the {@@link DiagramPreferencesRegistry}.
	 */
	protected PreferencesHint preferencesHint;

	/**
	 * Constructor for <code>DeferredCreateConnectionViewCommand</code>.
	 * 
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param element
	 *            the connection's semantic element
	 * @@param sourceViewAdapter
	 *            adapter from which the source view can be retrieved
	 * @@param targetViewAdapter
	 *            adapter from which the target view can be retrieved
	 * @@param viewer
	 *            the viewer used to get the editpart registry
	 */
	public DeferredCreateConnectionViewCommand(TransactionalEditingDomain editingDomain, EObject element,
			IAdaptable sourceViewAdapter, IAdaptable targetViewAdapter,
			EditPartViewer viewer, PreferencesHint preferencesHint) {

		super(editingDomain,
            "Deferred Create Connection View Command", null); //$NON-NLS-1$
		this.element = element;
		this.sourceViewAdapter = sourceViewAdapter;
		this.targetViewAdapter = targetViewAdapter;
		this.viewer = viewer;
		this.preferencesHint = preferencesHint;
	}

	/**
	 * Constructor for <code>DeferredCreateConnectionViewCommand</code>.
	 * Passing in the semanticHint allows for the creation of a connection view
	 * without a semantic element.
	 * 
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param semanticHint
	 *            the connection's semantic hint
	 * @@param sourceViewAdapter
	 *            adapter from which the source view can be retrieved
	 * @@param targetViewAdapter
	 *            adapter from which the target view can be retrieved
	 * @@param viewer
	 *            the viewer used to get the editpart registry
	 */
	public DeferredCreateConnectionViewCommand(TransactionalEditingDomain editingDomain, String semanticHint,
			IAdaptable sourceViewAdapter, IAdaptable targetViewAdapter,
			EditPartViewer viewer, PreferencesHint preferencesHint) {

		super(editingDomain,
            "Deferred Create Connection View Command", null); //$NON-NLS-1$
		this.semanticHint = semanticHint;
		this.sourceViewAdapter = sourceViewAdapter;
		this.targetViewAdapter = targetViewAdapter;
		this.viewer = viewer;
		this.preferencesHint = preferencesHint;
	}

	public List getAffectedFiles() {
		if (viewer != null) {
			EditPart editpart = viewer.getRootEditPart().getContents();
			if (editpart instanceof IGraphicalEditPart) {
				View view = (View) ((IGraphicalEditPart) editpart).getModel();
				if (view != null) {
					IFile f = WorkspaceSynchronizer.getFile(view.eResource());
					return f != null ? Collections.singletonList(f)
						: Collections.EMPTY_LIST;
				}
			}
		}
		return super.getAffectedFiles();
	}

	/**
	 * Finds the source and target editparts by extracting the views from the
	 * view adapaters and searching in the editpart viewer. Creates a connection
	 * view between the source and target.
	 * 
	 */
	protected CommandResult doExecuteWithResult(
            IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {
		Map epRegistry = viewer.getEditPartRegistry();
		IGraphicalEditPart sourceEP = (IGraphicalEditPart) epRegistry
			.get(sourceViewAdapter.getAdapter(View.class));
		IGraphicalEditPart targetEP = (IGraphicalEditPart) epRegistry
			.get(targetViewAdapter.getAdapter(View.class));

		// If these are null, then the diagram's editparts may not
		// have been refreshed yet.
		Assert.isNotNull(sourceEP);
		Assert.isNotNull(targetEP);

		// If an element exists, create the view using the given
		// semantic element.
		// Else if no semantic element is provided
		// , use the String semanticHint to create a view
		if (element != null) {
			createConnectionCmd = CreateConnectionViewRequest.getCreateCommand(
				this.element, sourceEP, targetEP, preferencesHint);
		} else {
			ConnectionViewDescriptor viewDescriptor = new ConnectionViewDescriptor(
				null, this.semanticHint, preferencesHint);
			CreateConnectionViewRequest createRequest = new CreateConnectionViewRequest(
				viewDescriptor);
			createConnectionCmd = CreateConnectionViewRequest.getCreateCommand(
				createRequest, sourceEP, targetEP);
		}

		if (createConnectionCmd.canExecute()) {
			createConnectionCmd.execute();
		}
		viewer = null;// for garbage collection
		return CommandResult.newOKCommandResult();
	}

}
@


1.3
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d20 1
a35 1
import org.eclipse.jface.util.Assert;
@


1.2
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d24 1
a33 1
import org.eclipse.gmf.runtime.emf.core.util.EObjectUtil;
d98 1
a98 1
        this.element = element;
d127 1
a127 1
        this.semanticHint = semanticHint;
d140 1
a140 1
					IFile f = EObjectUtil.getWorkspaceFile(view);
@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a13 1
import java.util.Collection;
d15 1
d18 1
d23 1
d32 1
a32 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d48 1
a48 1
	extends AbstractModelCommand {
d81 2
d92 1
a92 1
	public DeferredCreateConnectionViewCommand(EObject element,
d96 3
a98 2
		super("Deferred Create Connection View Command", null); //$NON-NLS-1$
		this.element = element;
d110 2
d121 1
a121 1
	public DeferredCreateConnectionViewCommand(String semanticHint,
d125 3
a127 2
		super("Deferred Create Connection View Command", null); //$NON-NLS-1$
		this.semanticHint = semanticHint;
d134 1
a134 4
	/**
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getAffectedObjects()
	 */
	public Collection getAffectedObjects() {
d146 1
a146 1
		return super.getAffectedObjects();
a153 1
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
d155 3
a157 1
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d189 1
a189 1
		return newOKCommandResult();
@

