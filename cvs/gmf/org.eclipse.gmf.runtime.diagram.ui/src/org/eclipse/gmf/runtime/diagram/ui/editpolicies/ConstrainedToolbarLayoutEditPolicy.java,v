head	1.10;
access;
symbols
	v20081023-2107:1.10
	v20081022-1925:1.10
	v20081022-1005:1.10
	v20081020-0700:1.10
	v20080917-1925:1.10
	v20080916-2008:1.10
	v20080911-1728:1.10
	v20080911-1506:1.10
	v20080910-1520:1.10
	v20080910-1510:1.10
	v20080903-1520:1.10
	v20080903-1510:1.10
	v20080813-1510:1.10
	v20080811-1546:1.10
	v20080731-1520:1.10
	v20080725-1738:1.10
	v20080723-2246:1.10
	v20080723-2232:1.10
	v20080723-1700:1.10
	v20080722-1827:1.10
	v20080718-1700:1.10
	v20080718-1731:1.10
	v20080716-1600:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.6
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080610-1132:1.10
	v20080603-1553:1.10
	v20080527-1255:1.10
	v20080527-1151:1.10
	v20080516-1748:1.10
	v20080516-1143:1.10
	v20080512-1200:1.10
	v20080503-1740:1.10
	v20080501-2127:1.10
	v20080501-1739:1.10
	m20080429-1543:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080407-2250:1.10
	v20080407-0930:1.10
	v20080404-1111:1.10
	v20080328-1605:1.10
	v20080322-0000:1.10
	v20080222-1200:1.10
	v20080201-2010:1.10
	v20080201-0201:1.10
	v20080118-1129:1.10
	v20080114-2222:1.10
	v20080114-1111:1.10
	v20080107-1111:1.10
	v20071222-1111:1.10
	v20071214-1111:1.10
	v20071130-1111:1.10
	v20071124-0000:1.10
	v20071112-0000:1.10
	v20071108-0000:1.10
	v20071003-0000:1.10
	v20070915-0000:1.10
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.4
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070608-1300:1.10
	v20070605-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.10
	v20070518-1300:1.10
	bugzilla111892_group_support:1.10.0.2
	Root_bugzilla111892_group_support:1.10
	v20070504-1000:1.10
	v20070420-1000:1.10
	v20070413-1300:1.10
	v20070330-1300:1.10
	v20060330-1300:1.10
	v20070322-1100:1.10
	v20060316-0600:1.10
	v20070221-1500:1.10
	v20070208-1800:1.10
	v20070202-0200:1.9.2.1
	v20070119-1200:1.9.2.1
	v20070111-0800:1.9.2.1
	v20070105-1200:1.9.2.1
	v20070103-0300:1.10
	M4_20:1.10
	v20061218-1500:1.9.2.1
	v20061218-1200:1.10
	v20061214-0000:1.10
	M3_20:1.10
	v20061117-0800:1.10
	v20061027-1200:1.9.2.1
	v20061013-1330:1.10
	v20061012-1100:1.9.2.1
	v20060925-1700:1.9.2.1
	v20060919-0800:1.9.2.1
	v20060907-1100:1.9
	M1_20:1.9
	v20060831-1500:1.9
	v20060824-1600:1.9
	v20060817-1500:1.9
	v20060810-1700:1.9
	v20060803-1200:1.9
	v20060728-0500:1.9
	v20060721-1130:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060616-1400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-0800:1.8
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.6
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.3;
locks; strict;
comment	@# @;


1.10
date	2006.10.03.15.02.03;	author ahunter;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.14.18.39.49;	author ahunter;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.04.19.15.37;	author cmahoney;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.25.19.38.12;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.04.21.27.49;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.30.16;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.06;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.37;	author sshaw;	state Exp;
branches;
next	;

1.9.2.1
date	2006.09.13.16.43.39;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.10
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editpolicies;

import java.util.Iterator;
import java.util.Map;

import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.draw2d.geometry.Transposer;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.EditPolicy;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.editpolicies.ConstrainedLayoutEditPolicy;
import org.eclipse.gef.requests.ChangeBoundsRequest;
import org.eclipse.gef.requests.CreateRequest;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IBorderItemEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ResizableCompartmentEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart;
import org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure;
import org.eclipse.gmf.runtime.diagram.ui.internal.commands.SetCompartmentRatioCommand;
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.FixedLocationResizableEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.editpolicies.TextSelectionEditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
import org.eclipse.gmf.runtime.notation.View;

/**
 * A layout editpolicy for containers with constrained toolbar layout manager
 * 
 * @@author melaasar
 */
public class ConstrainedToolbarLayoutEditPolicy
	extends ConstrainedLayoutEditPolicy {

	/**
	 * The null constraint
	 */
	private static final double NULL_CONSTRAINT = -1;

	/**
	 * Indicates whether the layout manager is horizontal (or vertical)
	 */
	private boolean horizontal;

	private Transposer transposer = new Transposer();

	/**
	 * Creates a new vertical ConstrainedFlowLayoutEditPolicy 
	 */
	public ConstrainedToolbarLayoutEditPolicy() {
		this(false);
	}

	/**
	 * Creates a new ConstrainedFlowLayoutEditPolicy with the given orientation
	 * @@param horizontal
	 */
	public ConstrainedToolbarLayoutEditPolicy(boolean horizontal) {
		this.horizontal = horizontal;
		transposer.setEnabled(horizontal);
	}

	/**
	 * @@return Whether the editpolicy is horizontal
	 */
	protected boolean isHorizontal() {
		return horizontal;
	}

	
	/**
	* @@see org.eclipse.gef.editpolicies.LayoutEditPolicy#createChildEditPolicy(org.eclipse.gef.EditPart)
	*/
	protected EditPolicy createChildEditPolicy(EditPart child) {
		if( child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE) == null )
		{
			if (child instanceof ResizableCompartmentEditPart)
				return new ResizableCompartmentEditPolicy(isHorizontal());
			else if (child instanceof TextCompartmentEditPart)
				return new TextSelectionEditPolicy();
			else if ( child instanceof IBorderItemEditPart)
				return new BorderItemSelectionEditPolicy();
			else if ( child instanceof FixedLocationResizableEditPart)
				return  child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
		}
		return child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
	}

	/**
	 * @@see org.eclipse.gef.EditPolicy#getCommand(org.eclipse.gef.Request)
	 */
	public Command getCommand(Request request) {
		if (RequestConstants.REQ_AUTOSIZE.equals(request.getType()))
			return getAutoSizeCommand(request);
		return super.getCommand(request);
	}

	/**
	 * @@see org.eclipse.gef.EditPolicy#getTargetEditPart(org.eclipse.gef.Request)
	 */
	public EditPart getTargetEditPart(Request request) {
		return understandsRequest(request) ? getHost() : null;
	}

	/**
	 * @@see org.eclipse.gef.EditPolicy#understandsRequest(org.eclipse.gef.Request)
	 */
	public boolean understandsRequest(Request req) {
		if (RequestConstants.REQ_AUTOSIZE.equals(req.getType()))
			return true;
		return super.understandsRequest(req);
	}

	/**
	 * Creates and returns an autosize command that reverts the layout constraints
	 * @@param request teh request
	 * @@return command
	 */
	protected Command getAutoSizeCommand(Request request) {
        TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
		CompositeTransactionalCommand cmc = new CompositeTransactionalCommand(editingDomain, DiagramUIMessages.Command_AdjustRatioCommand_Label);
		Iterator children = getHost().getChildren().iterator();
		while (children.hasNext()) {
			IGraphicalEditPart child = (IGraphicalEditPart) children.next();
			if (child instanceof ResizableCompartmentEditPart) {
				cmc.compose(new SetCompartmentRatioCommand(editingDomain, new EObjectAdapter((View)child.getModel()), NULL_CONSTRAINT));
			}
		}
		return cmc.isEmpty() ? null : new ICommandProxy(cmc.reduce());
	}

	/**
	 * @@see org.eclipse.gef.editpolicies.ConstrainedLayoutEditPolicy#getResizeChildrenCommand(org.eclipse.gef.requests.ChangeBoundsRequest)
	 */
	protected Command getResizeChildrenCommand(ChangeBoundsRequest req) {
        TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
        CompositeTransactionalCommand cmc = new CompositeTransactionalCommand(editingDomain, DiagramUIMessages.Command_AdjustRatioCommand_Label);
		
		boolean before = transposer.t(req.getMoveDelta()).y != 0;
		GraphicalEditPart c = (GraphicalEditPart) req.getEditParts().get(0);
		IFigure p = c.getFigure();
		if (!(p instanceof ResizableCompartmentFigure)) {
			return null;
		}
		IFigure a = ((ResizableCompartmentFigure) p).getAdjacentSibling(before);

		double parentHeight = transposer.t(p.getParent().getSize()).height;
		double heightDelta = MapModeUtil.getMapMode(p).DPtoLP(transposer.t(req.getSizeDelta()).height);

		Map registry = getHost().getViewer().getVisualPartMap();
		Iterator figures = p.getParent().getChildren().iterator();
		while (figures.hasNext()) {
			IFigure f = (IFigure) figures.next();
			IGraphicalEditPart part = (IGraphicalEditPart) registry.get(f);
			if (part instanceof ResizableCompartmentEditPart) {
				double r = NULL_CONSTRAINT;
				if (f.isVisible()) {
					int height = transposer.t(f.getSize()).height;
					if (f == p)
						r = (height + heightDelta) / parentHeight;
					else if (f == a)
						r = (height - heightDelta) / parentHeight;
					else
						r = height / parentHeight;
				}
				cmc.compose(new SetCompartmentRatioCommand(editingDomain, new EObjectAdapter((View)part.getModel()), r));
			}
		}
		return new ICommandProxy(cmc);
	}

	/**
	 * @@see org.eclipse.gef.editpolicies.ConstrainedLayoutEditPolicy#createAddCommand(org.eclipse.gef.EditPart, java.lang.Object)
	 */
	protected Command createAddCommand(EditPart child, Object constraint) {
		return null;
	}

	/**
	 * @@see org.eclipse.gef.editpolicies.ConstrainedLayoutEditPolicy#createChangeConstraintCommand(org.eclipse.gef.EditPart, java.lang.Object)
	 */
	protected Command createChangeConstraintCommand(
		EditPart child,
		Object constraint) {
		return null;
	}

	/**
	 * @@see org.eclipse.gef.editpolicies.ConstrainedLayoutEditPolicy#getConstraintFor(org.eclipse.draw2d.geometry.Point)
	 */
	protected Object getConstraintFor(Point point) {
		return null;
	}

	/**
	 * @@see org.eclipse.gef.editpolicies.ConstrainedLayoutEditPolicy#getConstraintFor(org.eclipse.draw2d.geometry.Rectangle)
	 */
	protected Object getConstraintFor(Rectangle rect) {
		return null;
	}

	/**
	 * @@see org.eclipse.gef.editpolicies.LayoutEditPolicy#getCreateCommand(org.eclipse.gef.requests.CreateRequest)
	 */
	protected Command getCreateCommand(CreateRequest request) {
		return null;
	}

	/**
	 * @@see org.eclipse.gef.editpolicies.LayoutEditPolicy#getDeleteDependantCommand(org.eclipse.gef.Request)
	 */
	protected Command getDeleteDependantCommand(Request request) {
		return null;
	}

}
@


1.9
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.9.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.8
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d30 1
a30 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d148 1
a148 1
		return cmc.isEmpty() ? null : new EtoolsProxyCommand(cmc.reduce());
d188 1
a188 1
		return new EtoolsProxyCommand(cmc);
@


1.7
log
@Bugzilla#111935 gmf_head cmahoney 060104 Border Item Infrastructure Consistency Issues
@
text
@d21 1
d42 1
a42 1
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand;
d139 2
a140 1
		CompositeModelCommand cmc = new CompositeModelCommand(DiagramUIMessages.Command_AdjustRatioCommand_Label);
d145 1
a145 1
				cmc.compose(new SetCompartmentRatioCommand(new EObjectAdapter((View)child.getModel()), NULL_CONSTRAINT));
d148 1
a148 1
		return cmc.isEmpty() ? null : new EtoolsProxyCommand(cmc.unwrap());
d155 2
a156 1
		CompositeModelCommand cmc = new CompositeModelCommand(DiagramUIMessages.Command_AdjustRatioCommand_Label);
d185 1
a185 1
				cmc.compose(new SetCompartmentRatioCommand(new EObjectAdapter((View)part.getModel()), r));
@


1.6
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d30 1
a30 1
import org.eclipse.gmf.runtime.diagram.ui.editparts.BorderItemEditPart;
d99 1
a99 1
			else if ( child instanceof BorderItemEditPart)
@


1.5
log
@bugzilla 112788 gmf-head sshaw 051104 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d38 1
a38 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
d138 1
a138 1
		CompositeModelCommand cmc = new CompositeModelCommand(DiagramResourceManager.getI18NString("Command.AdjustRatioCommand.Label")); //$NON-NLS-1$
d153 1
a153 1
		CompositeModelCommand cmc = new CompositeModelCommand(DiagramResourceManager.getI18NString("Command.AdjustRatioCommand.Label")); //$NON-NLS-1$
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a28 1

d40 1
a40 1
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;
d164 1
a164 1
		double heightDelta = MapMode.DPtoLP(transposer.t(req.getSizeDelta()).height);
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d31 1
a31 1
import org.eclipse.gmf.runtime.diagram.ui.editparts.GateEditPart;
d39 1
a39 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d100 2
a101 2
			else if ( child instanceof GateEditPart)
				return new GateNonResizableEditPolicy();
d139 1
a139 1
		CompositeModelCommand cmc = new CompositeModelCommand(PresentationResourceManager.getI18NString("Command.AdjustRatioCommand.Label")); //$NON-NLS-1$
d154 1
a154 1
		CompositeModelCommand cmc = new CompositeModelCommand(PresentationResourceManager.getI18NString("Command.AdjustRatioCommand.Label")); //$NON-NLS-1$
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d42 1
a42 1
import com.ibm.xtools.notation.View;
@

