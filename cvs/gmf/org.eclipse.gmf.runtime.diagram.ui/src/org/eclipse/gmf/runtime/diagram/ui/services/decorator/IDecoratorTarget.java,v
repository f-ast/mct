head	1.5;
access;
symbols
	v20081023-2107:1.5
	v20081022-1925:1.5
	v20081022-1005:1.5
	v20081020-0700:1.5
	v20080917-1925:1.5
	v20080916-2008:1.5
	v20080911-1728:1.5
	v20080911-1506:1.5
	v20080910-1520:1.5
	v20080910-1510:1.5
	v20080903-1520:1.5
	v20080903-1510:1.5
	v20080813-1510:1.5
	v20080811-1546:1.5
	v20080731-1520:1.5
	v20080725-1738:1.5
	v20080723-2246:1.5
	v20080723-2232:1.5
	v20080723-1700:1.5
	v20080722-1827:1.5
	v20080718-1700:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.8
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080527-1255:1.5
	v20080527-1151:1.5
	v20080516-1748:1.5
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080503-1740:1.5
	v20080501-2127:1.5
	v20080501-1739:1.5
	m20080429-1543:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080407-2250:1.5
	v20080407-0930:1.5
	v20080404-1111:1.5
	v20080328-1605:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080201-2010:1.5
	v20080201-0201:1.5
	v20080118-1129:1.5
	v20080114-2222:1.5
	v20080114-1111:1.5
	v20080107-1111:1.5
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.6
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	bugzilla111892_group_support:1.5.0.4
	Root_bugzilla111892_group_support:1.5
	v20070504-1000:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070221-1500:1.5
	v20070208-1800:1.5
	v20070202-0200:1.5
	v20070119-1200:1.5
	v20070111-0800:1.5
	v20070105-1200:1.5
	v20070103-0300:1.5
	M4_20:1.5
	v20061218-1500:1.5
	v20061218-1200:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061027-1200:1.5
	v20061013-1330:1.5
	v20061012-1100:1.5
	v20060925-1700:1.5
	v20060919-0800:1.5
	v20060907-1100:1.5
	M1_20:1.5
	v20060831-1500:1.5
	v20060824-1600:1.5
	v20060817-1500:1.5
	v20060810-1700:1.5
	v20060803-1200:1.5
	v20060728-0500:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2006.04.24.17.10.40;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.11.13.59.43;	author cmahoney;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.02.23.30.16;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.07;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.46;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bugzilla#117537 gmf_head cmahoney 060424 Mark our public interfaces as not meant to be implemented
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.services.decorator;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.Locator;
import org.eclipse.swt.graphics.Image;

/**
 * An object that can be decorated. The decorator target is an adaptable.
 * Minimally, it adapts to an <code>EditPart</code> and
 * <code>org.eclipse.uml2.Element</code> if the shape/connection has an
 * underlying element.
 * 
 * <p>
 * Here is an example:
 * 
 * <pre>
 * theDecoratorTarget.getAdapter(EditPart.class)
 * </pre>
 * 
 * </p>
 * <p>
 * This interface is <EM>not</EM> intended to be implemented by clients as new
 * methods may be added in the future. 
 * </p>
 * 
 * @@author cmahoney
 */
public interface IDecoratorTarget

	extends IAdaptable {
    
  /**
   * Enumeration of directions for the location of shape decorations.
   */
    public class Direction {

        private Direction() {
            super();
        }
        
        /** Center */
        public static final Direction CENTER = new Direction();

        /** North */
        public static final Direction NORTH = new Direction();

        /** South */
        public static final Direction SOUTH = new Direction();

        /** West */
        public static final Direction WEST = new Direction();

        /** East */
        public static final Direction EAST = new Direction();

        /** North-East */
        public static final Direction NORTH_EAST = new Direction();

        /** North-West */
        public static final Direction NORTH_WEST = new Direction();

        /** South-East */
        public static final Direction SOUTH_EAST = new Direction();

        /** South-West */
        public static final Direction SOUTH_WEST = new Direction();
    
    }
    
	/**
	 * Installs a decorator on this decorator target using a key (a String
	 * identifier). If another decorator is installed on the same target with
	 * the same key then it will override the previous one installed.
	 * 
	 * @@param key
	 *            the key for the decorator, used to override a decorator
	 *            previously installed on this decoratorTarget object
	 * @@param decorator
	 *            the decorator to install
	 */
	public void installDecorator(Object key, IDecorator decorator);

	/**
	 * Adds an image as a decoration on a shape.
	 * 
	 * @@param image
	 *            The image to be used as the decoration.
	 * @@param direction
	 *            The direction relative to the shape to place the decoration.
	 * @@param margin
	 *            The margin is the space, in himetric units, between the
	 *            shape's edge and the decoration. A positive margin will place
	 *            the figure outside the shape, a negative margin will place the
	 *            decoration inside the shape.
	 * @@param isVolatile
	 *            True if this decoration is volatile (i.e. not to be included
	 *            in the printed output of a diagram); false otherwise.
	 * @@return The decoration object, which will be needed to remove the
	 *         decoration from the shape.
	 */
	public IDecoration addShapeDecoration(Image image, Direction direction,
			int margin, boolean isVolatile);

	/**
	 * Adds an image as a decoration on a connection.
	 * 
	 * @@param image
	 *            The image to be used as the decoration.
	 * @@param percentageFromSource
	 *            The percentage of the connection length away from the source
	 *            end (range is from 0 to 100) where the decoration should be
	 *            positioned.
	 * @@param isVolatile
	 *            True if this decoration is volatile (i.e. not to be included
	 *            in the printed output of a diagram); false otherwise.
	 * @@return The decoration object, which will be needed to remove the
	 *         decoration from the connection.
	 */
	public IDecoration addConnectionDecoration(Image image,
			int percentageFromSource, boolean isVolatile);

	/**
	 * Removes the decoration from the shape or connection it has been added to.
	 * 
	 * @@param decoration
	 *            The decoration to be removed.
	 */
	public void removeDecoration(IDecoration decoration);
    
    /**
     * Adds a figure as a decoration on a shape.
     * 
     * @@param figure
     *            the figure to be used as the decoration
     * @@param direction
     *            The direction relative to the shape to place the
     *            decoration.
     * @@param margin
     *            The margin is the space, in himetric units, between the
     *            shape's edge and the decoration. A positive margin will
     *            place the figure outside the shape, a negative margin will
     *            place the decoration inside the shape.
     * @@param isVolatile
     *            True if this decoration is volatile (i.e. not to be
     *            included in the printed output of a diagram); false
     *            otherwise.
     * @@return The decoration object, which is needed to later remove the
     *         decoration.
     */
    public IDecoration addShapeDecoration(IFigure figure,
            Direction direction, int margin, boolean isVolatile);

    /**
     * Adds a figure as a decoration on a connection.
     * 
     * @@param figure
     *            the figure to be used as the decoration
     * @@param percentageFromSource
     *            The percentage of the connection length away from the
     *            source end (range is from 0 to 100) where the decoration
     *            should be positioned.
     * @@param isVolatile
     *            True if this decoration is volatile (i.e. not to be
     *            included in the printed output of a diagram); false
     *            otherwise.
     * @@return The decoration object, which is needed to later remove the
     *         decoration.
     */
    public IDecoration addConnectionDecoration(IFigure figure,
            int percentageFromSource, boolean isVolatile);
    /**
     * Adds a figure as a decoration on a shape or connection.
     * 
     * @@param figure
     *            the figure to be used as the decoration
     * @@param locator
     *            The locator to be used to position the decoration
     * @@param isVolatile
     *            True if this decoration is volatile (i.e. not to be
     *            included in the printed output of a diagram); false
     *            otherwise.
     * @@return The decoration object, which is needed to later remove the
     *         decoration.
     */
    public IDecoration addDecoration(IFigure figure, Locator locator,
            boolean isVolatile);
}@


1.4
log
@Bugzilla#135827 gmf_head cmahoney 060411 addShapeDecoration(IFigure figure, Direction direction, int margin, boolean isVolatile) must be in IDecoratorTarget
@
text
@d33 4
d41 1
@


1.3
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d14 3
a18 2
import org.eclipse.gmf.runtime.diagram.ui.internal.services.decorator.IDecoratorTargetBase;

d37 40
a76 1
	extends IDecoratorTargetBase {
d136 58
a193 1

@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d77 1
a77 1
	 *            The percentage of the connector length away from the source
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

