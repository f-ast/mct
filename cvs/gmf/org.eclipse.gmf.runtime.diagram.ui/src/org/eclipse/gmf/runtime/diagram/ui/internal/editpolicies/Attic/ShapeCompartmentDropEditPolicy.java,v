head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080731-1520:1.4
	v20080723-2246:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.4
date	2006.05.15.15.26.01;	author cmahoney;	state dead;
branches;
next	1.3;

1.3
date	2005.11.02.23.30.15;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.08;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.53;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Bugzilla#140166 gmf_head cmahoney 060515 Move necessary client accessed internal classes into public API
@
text
@/******************************************************************************
 * Copyright (c) 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
/*
 * Created on Aug 12, 2004
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package org.eclipse.gmf.runtime.diagram.ui.internal.editpolicies;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gef.requests.ChangeBoundsRequest;

import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.requests.ArrangeRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.DropObjectsRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.RefreshConnectionsRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;


/**
 * Supports droping model elements onto the shape compartment editpart.
 * @@author mhanner
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 */
public class ShapeCompartmentDropEditPolicy
	extends DragDropEditPolicy {

	/**
	 * Overriden to ensure that we don't drag the top level shape inside the shape compartment itself since this precipitates 
	 * difficult movement behavior of the top level shape.
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy#getDropCommand(org.eclipse.gef.requests.ChangeBoundsRequest)
	 */
	protected Command getDropCommand(ChangeBoundsRequest request) {
		List editparts = request.getEditParts();
		if (editparts.size() == 1) {
			Object obj = editparts.get(0);
			if (obj instanceof EditPart) {
				EditPart requestEP = (EditPart)obj;
				if (getHost() instanceof IGraphicalEditPart) {
					IGraphicalEditPart gep = (IGraphicalEditPart)getHost();
					if (gep.getTopGraphicEditPart().equals(requestEP)) {
						return null;
					}
				}
			}
		}
		
		return super.getDropCommand(request);
	}
	
	/**
	 * Returns a command to create a view for each of the elements defined
	 * in the supplied request.
	 */
	protected Command getDropObjectsCommand(DropObjectsRequest dropRequest) {
		List viewDescriptors = new ArrayList();
		Iterator iter = dropRequest.getObjects().iterator();

		while (iter.hasNext()) {
			Object obj = iter.next();
			if (obj instanceof EObject) {
				viewDescriptors.add(new CreateViewRequest.ViewDescriptor(
					new EObjectAdapter((EObject) obj),
					((IGraphicalEditPart) getHost())
						.getDiagramPreferencesHint()));
			}
		}
		
		CreateViewRequest createViewRequest =
			new CreateViewRequest(viewDescriptors);
		createViewRequest.setLocation(dropRequest.getLocation());
		Command createCommand = getHost().getCommand(createViewRequest);

		if (createCommand != null) {
			List result = (List)createViewRequest.getNewObject();
			dropRequest.setResult(result);

			RefreshConnectionsRequest refreshRequest =
				new RefreshConnectionsRequest(result);
			Command refreshCommand = getHost().getCommand(refreshRequest);

			ArrangeRequest arrangeRequest =
				new ArrangeRequest(RequestConstants.REQ_ARRANGE_DEFERRED);
			arrangeRequest.setViewAdaptersToArrange(result);
			Command arrangeCommand = getHost().getCommand(arrangeRequest);

			CompoundCommand cc = new CompoundCommand(createCommand.getLabel());
			cc.add(createCommand.chain(refreshCommand));
			cc.add(arrangeCommand);
			
			return cc;
		}
		return null;

	}
}
@


1.3
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d34 1
a34 1
import org.eclipse.gmf.runtime.diagram.ui.requests.RefreshConnectorsRequest;
d98 2
a99 2
			RefreshConnectorsRequest refreshRequest =
				new RefreshConnectorsRequest(result);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 10
@

