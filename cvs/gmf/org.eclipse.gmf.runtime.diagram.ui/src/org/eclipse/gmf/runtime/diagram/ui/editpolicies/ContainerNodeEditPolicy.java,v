head	1.8;
access;
symbols
	v20081023-2107:1.8
	v20081022-1925:1.8
	v20081022-1005:1.8
	v20081020-0700:1.8
	v20080917-1925:1.8
	v20080916-2008:1.8
	v20080911-1728:1.8
	v20080911-1506:1.8
	v20080910-1520:1.8
	v20080910-1510:1.8
	v20080903-1520:1.8
	v20080903-1510:1.8
	v20080813-1510:1.8
	v20080811-1546:1.8
	v20080731-1520:1.8
	v20080725-1738:1.8
	v20080723-2246:1.8
	v20080723-2232:1.8
	v20080723-1700:1.8
	v20080722-1827:1.8
	v20080718-1700:1.8
	v20080718-1731:1.8
	v20080716-1600:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.6
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080527-1255:1.8
	v20080527-1151:1.8
	v20080516-1748:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080503-1740:1.8
	v20080501-2127:1.8
	v20080501-1739:1.8
	m20080429-1543:1.8
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080407-2250:1.8
	v20080407-0930:1.8
	v20080404-1111:1.8
	v20080328-1605:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080201-2010:1.8
	v20080201-0201:1.8
	v20080118-1129:1.8
	v20080114-2222:1.8
	v20080114-1111:1.8
	v20080107-1111:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.4
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070518-1300:1.8
	bugzilla111892_group_support:1.8.0.2
	Root_bugzilla111892_group_support:1.8
	v20070504-1000:1.8
	v20070420-1000:1.8
	v20070413-1300:1.8
	v20070330-1300:1.8
	v20060330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070221-1500:1.8
	v20070208-1800:1.8
	v20070202-0200:1.7.2.1
	v20070119-1200:1.7.2.1
	v20070111-0800:1.7.2.1
	v20070105-1200:1.7.2.1
	v20070103-0300:1.8
	M4_20:1.8
	v20061218-1500:1.7.2.1
	v20061218-1200:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061117-0800:1.8
	v20061027-1200:1.7.2.1
	v20061013-1330:1.8
	v20061012-1100:1.7.2.1
	v20060925-1700:1.7.2.1
	v20060919-0800:1.7.2.1
	v20060907-1100:1.7
	M1_20:1.7
	v20060831-1500:1.7
	v20060824-1600:1.7
	v20060817-1500:1.7
	v20060810-1700:1.7
	v20060803-1200:1.7
	v20060728-0500:1.7
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1400:1.7
	v20060616-1200:1.7
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-0800:1.6
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.6
	I20060428-1300:1.6
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.6
	I20060216-1945:1.6
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.6
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.8
date	2006.10.03.15.02.03;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.14.18.39.49;	author ahunter;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2005.11.25.19.38.12;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.15.00.22.22;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.30.16;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.23.20.56.03;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.06;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.37;	author sshaw;	state Exp;
branches;
next	;

1.7.2.1
date	2006.09.13.16.43.39;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.8
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editpolicies;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.CompoundCommand;
import org.eclipse.gef.requests.CreateConnectionRequest;
import org.eclipse.gef.requests.CreateRequest;
import org.eclipse.gmf.runtime.common.core.command.ICommand;
import org.eclipse.gmf.runtime.diagram.ui.commands.CreateViewAndOptionallyElementCommand;
import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredCreateConnectionViewAndElementCommand;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.commands.PromptForConnectionAndEndCommand;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.diagram.ui.requests.CreateUnspecifiedTypeConnectionRequest;
import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;

/**
 * This is installed on a container editpart. It is responsible for creating
 * connections from a source shape to an unspecified target and a target shape to
 * an unspecified source. A popup will appear asking the user to select or
 * create a new source or target element. This will handle both single create
 * connection requests and multi connection requests (i.e. where the popup also
 * prompts the user for the type of relationship to created).
 * 
 * @@author cmahoney
 */
public class ContainerNodeEditPolicy
	extends GraphicalNodeEditPolicy {

	/**
	 * Only handles connection end requests. Cannot start a connection on a
	 * container.
	 */
	public Command getCommand(Request request) {
		if (RequestConstants.REQ_CONNECTION_END.equals(request.getType())
			&& request instanceof CreateConnectionRequest) {
			return getConnectionAndEndCommands((CreateConnectionRequest) request);
		}
		return null;
	}

	/**
	 * Creates the command to prompt the user for the relationship type
	 * (optionally) and the element to be used for the unspecified end, and the
	 * create commands necessary to create the views and elements.
	 * 
	 * @@param request
	 *            A single create connection request or unspecified connection
	 *            requests (i.e. where the popup also prompts the user for the
	 *            type of relationship to created).
	 * @@return the command
	 */
	protected Command getConnectionAndEndCommands(
			CreateConnectionRequest request) {

		CompoundCommand cc = new CompoundCommand(DiagramUIMessages.Command_CreateRelationship_Label);

		// Flags the case where the connection is to be created from a known
		// target
		// to unspecified source.
		boolean isDirectionReversed = request instanceof CreateUnspecifiedTypeConnectionRequest
			&& ((CreateUnspecifiedTypeConnectionRequest) request)
				.isDirectionReversed();

		// Adds the command for the popup menu to get the relationship type and
		// end element.
		PromptForConnectionAndEndCommand menuCmd = getPromptForConnectionAndEndCommand(
			request);
		cc.add(new ICommandProxy(menuCmd));

		// Adds the command to create a view (and optionally an element) for
		// the other end.
		CreateViewAndOptionallyElementCommand createOtherEndCmd = getCreateOtherEndCommand(
			menuCmd.getEndAdapter(), request.getLocation());
		cc.add(new ICommandProxy(createOtherEndCmd));
		
		// Adds the command to create the connection view and element.
		ICommand connectionCmd = isDirectionReversed 
			? getCreateConnectionCommand( 
				request,
				menuCmd.getConnectionAdapter(),
				createOtherEndCmd.getResult(), 
				request.getSourceEditPart())
			: getCreateConnectionCommand(
				request,
				menuCmd.getConnectionAdapter(), 
				request.getSourceEditPart(),
				createOtherEndCmd.getResult());	
			
		cc.add(new ICommandProxy(connectionCmd));

		return cc;
	}
	
	/**
	 * Gets a command that pops up a menu which can allow the user to select the
	 * type of connector to be created and whether they want to create a new
	 * type or select an existing element for the other end of the connector.
	 * 
	 * @@param request
	 *            A single create connection request or unspecified connection
	 *            requests (i.e. where the popup also prompts the user for the
	 *            type of relationship to created).
	 * @@return the command to popup up the menu
	 */
	protected PromptForConnectionAndEndCommand getPromptForConnectionAndEndCommand(
			CreateConnectionRequest request) {
		return new PromptForConnectionAndEndCommand(request,
			(IGraphicalEditPart) getHost());
	}

	/**
	 * Called by {@@link #getConnectionAndEndCommands}.
	 * @@param endAdapter the end adapter 
	 * @@param location the location
	 * @@return command
	 */
	protected CreateViewAndOptionallyElementCommand getCreateOtherEndCommand(
			IAdaptable endAdapter, Point location ) {
		return new CreateViewAndOptionallyElementCommand(endAdapter,
			(IGraphicalEditPart) getHost(), location,
			((IGraphicalEditPart) getHost()).getDiagramPreferencesHint());
	}
	
	/**
	 * Called by {@@link #getConnectionAndEndCommands} .
	 * @@param request the create connection request
	 * @@param typeInfoAdapter
	 * @@param sourceViewAdapter
	 * @@param targetViewAdapter
	 * @@return a <code>DeferredCreateConnectionViewAndElementCommand</code>
	 */
	protected ICommand getCreateConnectionCommand(
			CreateRequest request,
			IAdaptable typeInfoAdapter,
			IAdaptable sourceViewAdapter,
			IAdaptable targetViewAdapter) {
		return new DeferredCreateConnectionViewAndElementCommand(request,
			typeInfoAdapter, sourceViewAdapter, targetViewAdapter, getHost()
				.getViewer());
	}

}@


1.7
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.7.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.6
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d24 1
a24 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d83 1
a83 1
		cc.add(new EtoolsProxyCommand(menuCmd));
d89 1
a89 1
		cc.add(new EtoolsProxyCommand(createOtherEndCmd));
d104 1
a104 1
		cc.add(new EtoolsProxyCommand(connectionCmd));
@


1.5
log
@Bugzilla#110796 gmf_head cmahoney 051114 GraphicalNodeEditpolicy should be extensible so that non-IElementTypes can be listed in the popups
@
text
@d27 1
a27 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
d70 1
a70 2
		CompoundCommand cc = new CompoundCommand(DiagramResourceManager
			.getI18NString("Command.CreateRelationship.Label")); //$NON-NLS-1$
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d111 4
d119 1
a119 2
	 * @@param part
	 * @@return
@


1.3
log
@Bugzilla 110480 gmf_head sshaw 050923 Modeling Assistant Service should have generic getTypes() operation to be used in commands with popups
Contributed by Cherie Mahoney
@
text
@d23 1
a23 1
import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredCreateConnectorViewAndElementCommand;
d25 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.commands.GetConnectorTypeAndEndCommand;
d27 1
a27 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d33 1
a33 1
 * connectors from a source shape to an unspecified target and a target shape to
d45 1
a45 1
	 * Only handles connection end requests. Cannot start a connector on a
d70 1
a70 1
		CompoundCommand cc = new CompoundCommand(PresentationResourceManager
d82 1
a82 1
		GetConnectorTypeAndEndCommand menuCmd = getConnectorTypeAndEndPopupCommand(
d92 3
a94 3
		// Adds the command to create the connector view and element.
		ICommand connectorCmd = isDirectionReversed 
			? getCreateConnectorCommand( 
d96 1
a96 1
				menuCmd.getConnectorAdapter(),
d99 1
a99 1
			: getCreateConnectorCommand(
d101 1
a101 1
				menuCmd.getConnectorAdapter(), 
d105 1
a105 1
		cc.add(new EtoolsProxyCommand(connectorCmd));
d118 1
a118 1
	protected GetConnectorTypeAndEndCommand getConnectorTypeAndEndPopupCommand(
d120 1
a120 1
		return new GetConnectorTypeAndEndCommand(request,
d139 1
a139 1
	 * @@param request the create connector request
d143 1
a143 1
	 * @@return a <code>DeferredCreateConnectorViewAndElementCommand</code>
d145 1
a145 1
	protected ICommand getCreateConnectorCommand(
d150 1
a150 1
		return new DeferredCreateConnectorViewAndElementCommand(request,
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a20 1

a21 1
import org.eclipse.gmf.runtime.common.core.util.ObjectAdapter;
d25 1
a26 1
import org.eclipse.gmf.runtime.diagram.ui.internal.commands.GetConnectorTypeAndEndCommand;
a46 2
	 * 
	 * @@see org.eclipse.gef.EditPolicy#getCommand(org.eclipse.gef.Request)
d82 2
a83 2
		GetConnectorTypeAndEndCommand menuCmd = new GetConnectorTypeAndEndCommand(
			request, (IGraphicalEditPart) getHost());
d88 1
a88 1
		CreateViewAndOptionallyElementCommand createOtherEndCmd = getCreateViewAndOptionallyElementCommand(
d94 1
a94 1
			? getDeferredCreateConnectorViewAndElementCommand( 
d96 1
a96 1
				menuCmd.getConnectorTypeAdapter(),
d99 1
a99 1
			: getDeferredCreateConnectorViewAndElementCommand(
d101 1
a101 1
				menuCmd.getConnectorTypeAdapter(), 
d110 7
a116 3
	/** 
	 
	 * @@return a <code>CreateViewAndOptionallyElementCommand</code>
d118 6
d130 2
a131 2
	protected CreateViewAndOptionallyElementCommand getCreateViewAndOptionallyElementCommand(
			ObjectAdapter endAdapter, Point location ) {
d145 1
a145 1
	protected DeferredCreateConnectorViewAndElementCommand getDeferredCreateConnectorViewAndElementCommand(
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              	   |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

