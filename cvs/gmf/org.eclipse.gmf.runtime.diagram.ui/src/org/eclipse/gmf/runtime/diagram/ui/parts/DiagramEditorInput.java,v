head	1.8;
access;
symbols
	v20081023-2107:1.8
	v20081022-1925:1.8
	v20081022-1005:1.8
	v20081020-0700:1.8
	v20080917-1925:1.8
	v20080916-2008:1.8
	v20080911-1728:1.8
	v20080911-1506:1.8
	v20080910-1520:1.8
	v20080910-1510:1.8
	v20080903-1520:1.8
	v20080903-1510:1.8
	v20080813-1510:1.8
	v20080811-1546:1.8
	v20080731-1520:1.8
	v20080725-1738:1.8
	v20080723-2246:1.8
	v20080723-2232:1.8
	v20080723-1700:1.8
	v20080722-1827:1.8
	v20080718-1700:1.8
	v20080718-1731:1.8
	v20080716-1600:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080527-1255:1.8
	v20080527-1151:1.7
	v20080516-1748:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080503-1740:1.8
	v20080501-2127:1.7
	v20080501-1739:1.8
	m20080429-1543:1.7
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080407-2250:1.8
	v20080407-0930:1.7
	v20080404-1111:1.7
	v20080328-1605:1.7
	v20080322-0000:1.7
	v20080222-1200:1.7
	v20080201-2010:1.7
	v20080201-0201:1.7
	v20080118-1129:1.7
	v20080114-2222:1.7
	v20080114-1111:1.7
	v20080107-1111:1.7
	v20071222-1111:1.7
	v20071214-1111:1.7
	v20071130-1111:1.7
	v20071124-0000:1.7
	v20071112-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.7
	v20070915-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070518-1300:1.6
	bugzilla111892_group_support:1.6.0.2
	Root_bugzilla111892_group_support:1.6
	v20070504-1000:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070202-0200:1.5.2.1
	v20070119-1200:1.5.2.1
	v20070111-0800:1.5.2.1
	v20070105-1200:1.5.2.1
	v20070103-0300:1.6
	M4_20:1.6
	v20061218-1500:1.5.2.1
	v20061218-1200:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.5.2.1
	v20061013-1330:1.6
	v20061012-1100:1.5.2.1
	v20060925-1700:1.5.2.1
	v20060919-0800:1.5.2.1
	v20060907-1100:1.5
	M1_20:1.5
	v20060831-1500:1.5
	v20060824-1600:1.5
	v20060817-1500:1.5
	v20060810-1700:1.5
	v20060803-1200:1.5
	v20060728-0500:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.8
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.7;
commitid	4d0547fad5804567;

1.7
date	2007.05.24.18.36.20;	author ahunter;	state Exp;
branches;
next	1.6;
commitid	c514655db244567;

1.6
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.28.02.31.21;	author cmahoney;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2006.01.20.22.10.12;	author cmahoney;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.05;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.45;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.parts;

import java.lang.ref.WeakReference;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.Assert;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.transaction.RunnableWithResult;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;
import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.ui.IPersistableElement;

/**
 * @@author melaasar
 * @@author mgoyal
 *
 * Basic implementation of the IDiagramEditorInput interface
 * based on the <code>FileEditorInput<code> implementation
 * 
 * This Editor input can be used only for diagrams that are 
 * managed by MSL. If the Diagram is floating without a resource
 * then DiagramEditorInput won't work properly.
 */
public class DiagramEditorInput implements IDiagramEditorInput {

	/** The editor's diagram */
	private WeakReference diagram;

	/**
	 * Method DiagramEditorInput.
	 * @@param diagram
	 */
	public DiagramEditorInput( Diagram diagram ) {
		Assert.isNotNull(diagram);
		setDiagram(diagram);
	}

	public Diagram getDiagram() {
		return (Diagram)diagram.get();
	}

	/**
	 * @@see org.eclipse.ui.IEditorInput#exists()
	 */
	public boolean exists() {
		return false;
	}

	/**
	 * @@see org.eclipse.ui.IEditorInput#getImageDescriptor()
	 */
	public ImageDescriptor getImageDescriptor() {
		return null;
	}

	/**
	 * gets fully qualified name
	 * @@return <code>String</code>
	 */
	public String getQName() {
		try {
			return (String) TransactionUtil.getEditingDomain(getDiagram())
				.runExclusive(new RunnableWithResult.Impl() {

					public void run() {
						setResult(EMFCoreUtil.getQualifiedName(getDiagram(), false));
					}
				});
		} catch (Exception e) {
			Trace.catching(
				DiagramUIPlugin.getInstance(),
				DiagramUIDebugOptions.EXCEPTIONS_CATCHING,
				getClass(),
				e.getMessage(),
				e);
			return null;
		}
	}
	
	
	/**
	 * @@see org.eclipse.ui.IEditorInput#getName()
	 */
	public String getName() {
		try {
			return (String) TransactionUtil.getEditingDomain(getDiagram())
				.runExclusive(new RunnableWithResult.Impl() {

					public void run() {
						setResult(EMFCoreUtil.getName(getDiagram()));
					}				
			});
		} catch (Exception e) {
			Trace.catching(
				DiagramUIPlugin.getInstance(),
				DiagramUIDebugOptions.EXCEPTIONS_CATCHING,
				getClass(),
				e.getMessage(),
				e);
			return null;
		}
	}

	/**
	 * @@see org.eclipse.ui.IEditorInput#getPersistable()
	 */
	public IPersistableElement getPersistable() {
		return null;
	}

	/**
	 * @@see org.eclipse.ui.IEditorInput#getToolTipText()
	 */
	public String getToolTipText() {
		return getQName();
	}

	/**
	 * @@see org.eclipse.core.runtime.IAdaptable#getAdapter(Class)
	 */
	public Object getAdapter(Class adapter) {
		if (adapter == Diagram.class)
			return getDiagram();
		if (adapter == IFile.class)
			return getStorageUnitFile();
		return null;
	}

	/**
	 * @@see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!(obj instanceof DiagramEditorInput))
			return false;
		DiagramEditorInput other = (DiagramEditorInput) obj;
		if(getDiagram() != null)
			return getDiagram().equals(other.getDiagram());
		else
			return getDiagram() == other.getDiagram();
	}

	/**
	 * @@see java.lang.Object#hashCode()
	 */
	public int hashCode() {
		if(getDiagram() != null)
			return getDiagram().hashCode();
		else
			return super.hashCode();
	}

	/**
	 * Sets the diagram.
	 * @@param diagram The diagram to set
	 */
	protected void setDiagram(Diagram diagram) {
		this.diagram = new WeakReference(diagram);
	}

	/**
	  * gets the corresponding file resource in the workspace for the diagram. 
	  * Returns null if the element is not a storage unit.
	  * @@return File The file resource in the workspace
	  */
	private IFile getStorageUnitFile() {
		try {
			final TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(getDiagram());
			if (editingDomain == null) {
			    return null;
			}
			return (IFile) editingDomain.runExclusive(new RunnableWithResult.Impl() {

				public void run() {
					Resource model = getDiagram().eResource();
						setResult(model != null ? WorkspaceSynchronizer
							.getFile(model)
							: null);
				}
			});
		} catch (Exception e) {
			Trace.catching(DiagramUIPlugin.getInstance(),
				DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass(), e
					.getMessage(), e);
			return null;
		}
	}

}
@


1.7
log
@[188962] gmf-head ahunter 070524 NPE in DiagramEditorInput
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2007 IBM Corporation and others.
d17 1
a28 1
import org.eclipse.jface.util.Assert;
@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d188 3
@


1.5
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
@


1.5.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.4
log
@Bugzilla#123313 gmf_head cmahoney 060120 Making DiagramUIPlugin, DiagramUIStatusCodes, and DiagramUIDebugOptions internal
@
text
@a16 2
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.Path;
d18 4
a21 4
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.jface.util.Assert;
import org.eclipse.ui.IPersistableElement;

a22 1
import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
d25 1
a25 3
import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;
import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
import org.eclipse.gmf.runtime.emf.core.util.EObjectUtil;
d27 3
a78 1
		final String[] name = new String[1];
d80 7
a86 6
			MEditingDomainGetter.getMEditingDomain(getDiagram()).runAsRead(new MRunnable() {
				public Object run() {
					name[0] = EObjectUtil.getQName(getDiagram(), false);
					return null;
				}
			});
d94 1
a94 1
			name[0] = null;
a95 1
		return name[0];
a102 1
		final String[] name = new String[1];
d104 6
a109 5
			MEditingDomainGetter.getMEditingDomain(getDiagram()).runAsRead(new MRunnable() {
				public Object run() {
					name[0] = EObjectUtil.getName(getDiagram()); //((IElement) getDiagram()).getFullyQualifiedName(false);
					return null;
				}				
d118 1
a118 1
			name[0] = null;
a119 1
		return name[0];
a185 1
		final IFile[] file = new IFile[1];
d187 2
a188 2
			final MEditingDomain editingDomain = MEditingDomainGetter.getMEditingDomain(getDiagram());
			editingDomain.runAsRead(new MRunnable() {
d190 1
a190 1
				public Object run() {
d192 3
a194 8
					String path = editingDomain.getResourceFileName(model);
					file[0] = model != null && path != null
						&& path.length() != 0 ? ResourcesPlugin.getWorkspace()
						.getRoot().getFileForLocation(
							new Path(path))
						: null;

					return null;
d201 1
a201 1
			file[0] = null;
a202 1
		return file[0];
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d26 2
a27 2
import org.eclipse.gmf.runtime.diagram.ui.DiagramUIDebugOptions;
import org.eclipse.gmf.runtime.diagram.ui.DiagramUIPlugin;
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d29 1
a29 1
import com.ibm.xtools.notation.Diagram;
@

