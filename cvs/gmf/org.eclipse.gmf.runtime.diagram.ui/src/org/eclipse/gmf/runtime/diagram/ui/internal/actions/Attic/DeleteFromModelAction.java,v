head	1.12;
access;
symbols
	v20081022-1925:1.12
	v20080917-1925:1.12
	v20080911-1728:1.12
	v20080910-1520:1.12
	v20080903-1520:1.12
	v20080731-1520:1.12
	v20080723-2246:1.12
	v20070504-1000:1.11
	v20070420-1000:1.11
	v20070413-1300:1.11
	v20070330-1300:1.11
	v20060330-1300:1.11
	v20070322-1100:1.11
	v20060316-0600:1.11
	v20070221-1500:1.11
	v20070208-1800:1.11
	v20070202-0200:1.9.2.2
	v20070119-1200:1.9.2.2
	v20070111-0800:1.9.2.2
	v20070105-1200:1.9.2.2
	v20070103-0300:1.11
	M4_20:1.11
	v20061218-1500:1.9.2.2
	v20061218-1200:1.11
	v20061214-0000:1.11
	M3_20:1.10
	v20061117-0800:1.10
	v20061027-1200:1.9.2.2
	v20061013-1330:1.10
	v20061012-1100:1.9.2.2
	v20060925-1700:1.9.2.2
	v20060919-0800:1.9.2.2
	v20060907-1100:1.9.2.1
	M1_20:1.9
	v20060831-1500:1.9.2.1
	v20060824-1600:1.9
	v20060817-1500:1.9
	v20060810-1700:1.9
	v20060803-1200:1.9
	v20060728-0500:1.9
	v20060721-1130:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060616-1400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-0800:1.8
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060202-1415:1.7
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.6
	I20051124-2000:1.5
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.12
date	2007.05.16.20.13.13;	author crevells;	state dead;
branches;
next	1.11;
commitid	2fe6464b65d94567;

1.11
date	2006.11.29.19.20.10;	author crevells;	state Exp;
branches;
next	1.10;
commitid	4d7f456ddd6a4567;

1.10
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.14.18.39.49;	author ahunter;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.01.20.17.40;	author mmostafa;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.25.19.38.13;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.21.16.00.39;	author cmahoney;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.23.30.18;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.29.11;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.22;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.47;	author sshaw;	state Exp;
branches;
next	;

1.9.2.1
date	2006.08.25.19.43.59;	author mmostafa;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.12
log
@[187378] gmf_head crevells 070516 Make DeleteFromModelAction public
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.internal.actions;

import java.util.Iterator;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.Request;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.commands.UnexecutableCommand;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.diagram.ui.actions.AbstractDeleteFromAction;
import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.ui.ISharedImages;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.PlatformUI;

/**
 * This Action is used to send a request that will destroy a semantic element
 * from the model.
 * 
 * @@author melaasar
 * @@canBeSeenBy %level1
 * @@author choang 
 */
public class DeleteFromModelAction
	extends AbstractDeleteFromAction {
    
    
	/**
	 * Creates a <code>DeleteFromModelAction</code> with a default label.
	 *
	 * @@param part The part this action will be associated with.
	 */
	public DeleteFromModelAction(IWorkbenchPart part) {
		super(part);
		
		
	}
 
	/**
	 * Constructor
	 * @@param workbenchPage
	 */
	public DeleteFromModelAction(IWorkbenchPage workbenchPage) {
		super(workbenchPage);
		
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#calculateEnabled()
	 */
	protected boolean calculateEnabled() {
		List operationSet = getOperationSet();
		if (operationSet.isEmpty()) {
			return false;
		}
		Request request = getTargetRequest();
		Iterator editParts = operationSet.iterator();
		while (editParts.hasNext()) {
			EditPart editPart = (EditPart) editParts.next();
			// disable on diagram links 
			if (editPart instanceof IGraphicalEditPart) {
				IGraphicalEditPart gEditPart = (IGraphicalEditPart) editPart;
				View view = (View) gEditPart.getModel();
				// Disallow diagram deletion from model only if it is the top most diagram
				EObject container = view.eContainer();
				EObject element = ViewUtil.resolveSemanticElement(view);
				if ((element == null) || (element.eIsProxy())
						|| (element instanceof Diagram)
						|| (view instanceof Diagram && (container == null || !(container instanceof View)))) {
					return false;
				}
			} else {
				Command curCommand = editPart.getCommand(request);
				if (curCommand == null || (curCommand.canExecute() == false)) {
					return false;
				}
			}
		}
		return true;
	}

	/**
	 * Initializes this action's text and images.
	 */
	public void init() {
		super.init();
		setId(ActionIds.ACTION_DELETE_FROM_MODEL);
		setText(DiagramUIMessages.DiagramEditor_Delete_from_Model);
		setToolTipText(DiagramUIMessages.DiagramEditor_Delete_from_ModelToolTip);
		ISharedImages workbenchImages = PlatformUI.getWorkbench().getSharedImages();
		setHoverImageDescriptor(
			workbenchImages.getImageDescriptor(
				ISharedImages.IMG_TOOL_DELETE));
		setImageDescriptor(
			workbenchImages.getImageDescriptor(ISharedImages.IMG_TOOL_DELETE));
		setDisabledImageDescriptor(
			workbenchImages.getImageDescriptor(
				ISharedImages.IMG_TOOL_DELETE_DISABLED));
		
	}
	
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#getCommand(org.eclipse.gef.Request)
	 */
	protected Command getCommand(Request request) {	
		List operationSet = getOperationSet();
		Iterator editParts = operationSet.iterator();
		CompositeTransactionalCommand command =
			new CompositeTransactionalCommand(getEditingDomain(), getCommandLabel());
		while (editParts.hasNext()) {
			EditPart editPart = (EditPart) editParts.next();
			// disable on diagram links 
			if (editPart instanceof IGraphicalEditPart){
				IGraphicalEditPart gEditPart = 
					(IGraphicalEditPart) editPart;
				View view = (View)gEditPart.getModel();
				// Don't delete diagram from model only if it is the top most diagram
				EObject container = view.eContainer();
				EObject element = ViewUtil.resolveSemanticElement(view);
				if ((element instanceof Diagram)
						|| (view instanceof Diagram && (container == null || !(container instanceof View)))) {
					return null;
				}
			}
			Command curCommand = editPart.getCommand(request);
			if (curCommand != null) {
				command.compose(new CommandProxy(curCommand));				
			}
		}
		
		if ((command.isEmpty())
			|| (command.size() != operationSet.size())){
			return UnexecutableCommand.INSTANCE;
		}
		return new ICommandProxy(command);
	}
    
    protected String getCommandLabel() {
        return DiagramUIMessages.DiagramEditor_Delete_from_Model;
    };
}
@


1.11
log
@[152706] gmf_head crevells 061129 "Ctrl+D" key stroke should be prohibited in outline view
Contributed by: Alex Boyko
@
text
@@


1.10
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d25 1
a26 1
import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
d85 2
d89 2
a90 1
					|| (element instanceof Diagram)) {
d139 2
d142 2
a143 1
				if(element instanceof Diagram)
d145 1
@


1.9
log
@[139856] gmf_head anthonyh 060614 EtoolsProxyCommand should be renamed to ICommandProxy
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
d68 31
@


1.9.2.1
log
@[141075] gmf_R1_0_maintenance ylulu 060825  Performance DeleteFromModelAction is too slow calculating its enablement
@
text
@a67 31
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#calculateEnabled()
	 */
	protected boolean calculateEnabled() {
		List operationSet = getOperationSet();
		if (operationSet.isEmpty()) {
			return false;
		}
		Request request = getTargetRequest();
		Iterator editParts = operationSet.iterator();
		while (editParts.hasNext()) {
			EditPart editPart = (EditPart) editParts.next();
			// disable on diagram links 
			if (editPart instanceof IGraphicalEditPart) {
				IGraphicalEditPart gEditPart = (IGraphicalEditPart) editPart;
				View view = (View) gEditPart.getModel();
				EObject element = ViewUtil.resolveSemanticElement(view);
				if ((element == null) || (element.eIsProxy())
					|| (element instanceof Diagram)) {
					return false;
				}
			} else {
				Command curCommand = editPart.getCommand(request);
				if (curCommand == null || (curCommand.canExecute() == false)) {
					return false;
				}
			}
		}
		return true;
	}
@


1.9.2.2
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.8
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d25 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand;
d119 1
a119 1
		return new EtoolsProxyCommand(command);
@


1.7
log
@bugzilla 109923 gmf-head mmostafa 060201 Class names contain 'xtools'
@
text
@d29 1
a29 1
import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand;
d47 2
a48 2
	
	
d96 2
a97 2
		CompositeModelCommand command =
			new CompositeModelCommand(getCommandLabel());
d116 1
a116 1
			|| (command.getCommands().size() != operationSet.size())){
d121 4
@


1.6
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d26 1
a26 1
import org.eclipse.gmf.runtime.diagram.ui.commands.XtoolsProxyCommand;
d111 1
a111 1
				command.compose(new XtoolsProxyCommand(curCommand));				
@


1.5
log
@Bugzilla#116030 gmf_head cmahoney 051121 Diagram ActionIds should be public
@
text
@d22 1
a22 5
import org.eclipse.ui.ISharedImages;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.PlatformUI;

d28 1
a28 2
import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
d32 4
d75 2
a76 2
		setText(DiagramResourceManager.getI18NString("DiagramEditor.Delete_from_Model"));//$NON-NLS-1$
		setToolTipText(DiagramResourceManager.getI18NString("DiagramEditor.Delete_from_ModelToolTip"));//$NON-NLS-1$
@


1.4
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d28 1
a31 1
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.ActionIds;
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d32 1
a32 1
import org.eclipse.gmf.runtime.diagram.ui.l10n.PresentationResourceManager;
d76 2
a77 2
		setText(PresentationResourceManager.getI18NString("DiagramEditor.Delete_from_Model"));//$NON-NLS-1$
		setToolTipText(PresentationResourceManager.getI18NString("DiagramEditor.Delete_from_ModelToolTip"));//$NON-NLS-1$
d92 1
a92 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.actions.PresentationAction#getCommand(org.eclipse.gef.Request)
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d33 2
a34 2
import com.ibm.xtools.notation.Diagram;
import com.ibm.xtools.notation.View;
@

