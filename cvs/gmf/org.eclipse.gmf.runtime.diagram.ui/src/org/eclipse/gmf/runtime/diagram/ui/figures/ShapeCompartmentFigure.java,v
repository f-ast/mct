head	1.8;
access;
symbols
	v20081023-2107:1.8
	v20081022-1925:1.8
	v20081022-1005:1.8
	v20081020-0700:1.8
	v20080917-1925:1.8
	v20080916-2008:1.8
	v20080911-1728:1.8
	v20080911-1506:1.8
	v20080910-1520:1.8
	v20080910-1510:1.8
	v20080903-1520:1.8
	v20080903-1510:1.8
	v20080813-1510:1.8
	v20080811-1546:1.8
	v20080731-1520:1.8
	v20080725-1738:1.8
	v20080723-2246:1.8
	v20080723-2232:1.8
	v20080723-1700:1.8
	v20080722-1827:1.8
	v20080718-1700:1.8
	v20080718-1731:1.8
	v20080716-1600:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.6
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080527-1255:1.8
	v20080527-1151:1.8
	v20080516-1748:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080503-1740:1.8
	v20080501-2127:1.8
	v20080501-1739:1.8
	m20080429-1543:1.8
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080407-2250:1.8
	v20080407-0930:1.8
	v20080404-1111:1.8
	v20080328-1605:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080201-2010:1.8
	v20080201-0201:1.8
	v20080118-1129:1.8
	v20080114-2222:1.8
	v20080114-1111:1.8
	v20080107-1111:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.4
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070518-1300:1.8
	bugzilla111892_group_support:1.8.0.2
	Root_bugzilla111892_group_support:1.8
	v20070504-1000:1.8
	v20070420-1000:1.8
	v20070413-1300:1.8
	v20070330-1300:1.8
	v20060330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070221-1500:1.8
	v20070208-1800:1.8
	v20070202-0200:1.5.2.5
	v20070119-1200:1.5.2.5
	v20070111-0800:1.5.2.5
	v20070105-1200:1.5.2.5
	v20070103-0300:1.8
	M4_20:1.8
	v20061218-1500:1.5.2.5
	v20061218-1200:1.8
	v20061214-0000:1.8
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.5.2.3
	v20061013-1330:1.6
	v20061012-1100:1.5.2.3
	v20060925-1700:1.5.2.3
	v20060919-0800:1.5.2.3
	v20060907-1100:1.5.2.2
	M1_20:1.5
	v20060831-1500:1.5.2.2
	v20060824-1600:1.5.2.2
	v20060817-1500:1.5.2.2
	v20060810-1700:1.5.2.2
	v20060803-1200:1.5.2.2
	v20060728-0500:1.5.2.1
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.8
date	2006.12.13.19.39.47;	author mmostafa;	state Exp;
branches;
next	1.7;
commitid	1efd458056fd4567;

1.7
date	2006.11.23.21.11.33;	author mmostafa;	state Exp;
branches;
next	1.6;
commitid	291545660e854567;

1.6
date	2006.10.03.15.02.05;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.09.19.45.24;	author cmahoney;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2006.03.30.21.14.57;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.04.21.27.48;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.09;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.46;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.07.26.16.04.05;	author mmostafa;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2006.08.03.14.54.47;	author mmostafa;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2006.09.13.16.43.40;	author ahunter;	state Exp;
branches;
next	1.5.2.4;

1.5.2.4
date	2006.11.23.21.10.10;	author mmostafa;	state Exp;
branches;
next	1.5.2.5;
commitid	1e3d45660e324567;

1.5.2.5
date	2006.12.13.19.41.00;	author mmostafa;	state Exp;
branches;
next	;
commitid	6b67458057304567;


desc
@@


1.8
log
@[167878]  gmf_head mmostafa 061213 Users can resize Figures to be smaller than the min size
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.figures;

import java.beans.PropertyChangeListener;

import org.eclipse.draw2d.FreeformLayer;
import org.eclipse.draw2d.FreeformLayout;
import org.eclipse.draw2d.FreeformViewport;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.MarginBorder;
import org.eclipse.draw2d.ScrollPane;
import org.eclipse.draw2d.geometry.Dimension;
import org.eclipse.gmf.runtime.diagram.ui.layout.FreeFormLayoutEx;
import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.AnimatableScrollPane;
import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.OverlayScrollPaneLayout;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Font;
import org.eclipse.swt.graphics.FontData;

/**
 * A specialized implementation of <code>ResizableCompartmentFigure</code>, this
 * class configures the scrollpane to use a {@@link org.eclipse.draw2d.FreeformLayer}
 * with a {@@link org.eclipse.draw2d.FreeformLayout} as its contents.  
 * 
 * @@author mhanner
 */
public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
	
	
	/**
	 * constant defines the font title 
	 */
	public static final Font FONT_TITLE = new Font(null, new FontData("Helvetica", 9, SWT.BOLD));//$NON-NLS-1$
	   
    /**
     * Create an instance.  Calls {@@link #configureFigure()} to reconfigure
     * the scrollpane.
     * 
     * @@param title figure's title.
     * @@param mm the <code>IMapMode</code> that is used to initialize the
     * default values of of the scrollpane contained inside the figure.  This is
     * necessary since the figure is not attached at construction time and consequently
     * can't get access to the owned IMapMode in the parent containment hierarchy.
     */
    public ShapeCompartmentFigure(String title, IMapMode mm) {
        super(title, mm);
    }
    

    protected AnimatableScrollPane createScrollpane(IMapMode mm) {
        configureFigure(mm);
        return (AnimatableScrollPane)getScrollPane();
    }
	/**
	 * The scrollpane is configured to use a {@@link FreeformLayer} with a
	 * {@@link FreeformLayout} as its contents.
     * @@deprecated use {@@link ShapeCompartmentFigure#configureFigure(IMapMode)} instead
	 */
	protected void configureFigure() {
		configureFigure(MapModeUtil.getMapMode(this));        
	}
    
    /**
     * The scrollpane is configured to use a {@@link FreeformLayer} with a
     * {@@link FreeformLayout} as its contents.
     * 
     * @@param mm the <code>IMapMode</code> that is used to initialize the
     * default values of of the scrollpane contained inside the figure.  This is
     * necessary since the figure is not attached at construction time and consequently
     * can't get access to the owned IMapMode in the parent containment hierarchy.
     */
    protected void configureFigure(IMapMode mm) {
        ScrollPane scrollpane = getScrollPane();
        if(scrollpane==null){
            scrollpane = scrollPane = new AnimatableScrollPane();
        }
        scrollpane.setViewport(new FreeformViewport());
        scrollPane.setScrollBarVisibility(ScrollPane.AUTOMATIC);
        scrollpane.setLayoutManager(new OverlayScrollPaneLayout() );

        IFigure contents = new BorderItemsAwareFreeFormLayer();
        contents.setLayoutManager(new FreeFormLayoutEx());
        scrollpane.setContents(contents);
        
        int MB = mm.DPtoLP(5);
        scrollpane.setBorder(new MarginBorder(MB, MB, MB, MB));
        int SZ = mm.DPtoLP(10);
        scrollpane.setMinimumSize(new Dimension(SZ, SZ));
    
        this.setFont(FONT_TITLE);
    }    
   
  
	/**
	 * Convenience method to registers the supplied listener to the scrollpane's 
	 * vertical and horizonatl range models. 
	 * 
	 * @@param listener The listener to add
	 */
	public void addPropertyChangeListener(PropertyChangeListener listener) {
		getScrollPane().getViewport()
			.getVerticalRangeModel()
			.addPropertyChangeListener(
			listener);
		getScrollPane()
			.getViewport()
			.getHorizontalRangeModel()
			.addPropertyChangeListener(
			listener);
	}

	/**
	 * Convenience method to removes the supplied listener from the scrollpane's 
	 * RangeModel's list of PropertyChangeListeners.
	 * @@param listener The listener to remove
	 */
	public void removePropertyChangeListener(PropertyChangeListener listener) {
		getScrollPane()
			.getViewport()
			.getVerticalRangeModel()
			.removePropertyChangeListener(
			listener);
		getScrollPane()
			.getViewport()
			.getHorizontalRangeModel()
			.removePropertyChangeListener(listener);
	}
}@


1.7
log
@ [161215]   gmf_head mmostafa 061123 Scrollpanes do not consider space occupied by border items
@
text
@d23 1
d94 1
a94 1
        contents.setLayoutManager(new FreeformLayout());
@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d92 1
a92 1
        IFigure contents = new FreeformLayer();
@


1.5
log
@Bugzilla#109422 gmf_head cmahoney 060509 Removing deprecated classes from GMF diagram components
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a20 1
import org.eclipse.draw2d.Orientable;
d23 1
a23 2
import org.eclipse.draw2d.geometry.Insets;
import org.eclipse.gmf.runtime.draw2d.ui.figures.ListScrollBar;
d58 4
d63 1
a64 1

d71 1
a71 1
		configureFigure(MapModeUtil.getMapMode(this));
d85 3
d89 1
a89 12
        
        Insets insets = new Insets(mm.DPtoLP(1), mm.DPtoLP(2),
            mm.DPtoLP(1), mm.DPtoLP(0));
        Dimension size = new Dimension(mm.DPtoLP(15), mm.DPtoLP(15));
        
        scrollpane.setHorizontalScrollBar(
            new ListScrollBar(Orientable.HORIZONTAL, insets, size, 
            mm.DPtoLP(10), mm.DPtoLP(50)));
        scrollpane.setVerticalScrollBar(new ListScrollBar(Orientable.VERTICAL, insets, size, 
            mm.DPtoLP(10), mm.DPtoLP(50)));

        scrollpane.setScrollBarVisibility(ScrollPane.AUTOMATIC);
d102 3
a104 2
    }

@


1.5.2.1
log
@[150403] gmf_R1_0_maintenace ylulu 060726  Scrollbar figures are created pre-maturely
@
text
@d21 1
d24 2
a25 1
import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.AnimatableScrollPane;
d60 1
a61 1
    
a62 4
    protected AnimatableScrollPane createScrollpane(IMapMode mm) {
        configureFigure(mm);
        return (AnimatableScrollPane)getScrollPane();
    }
d69 1
a69 1
		configureFigure(MapModeUtil.getMapMode(this));        
a82 3
        if(scrollpane==null){
            scrollpane = scrollPane = new AnimatableScrollPane();
        }
d84 12
a95 2
        scrollPane.setVerticalScrollBarVisibility(ScrollPane.AUTOMATIC);
        scrollPane.setHorizontalScrollBarVisibility(ScrollPane.NEVER);
d108 2
a109 3
    }    
   
  
@


1.5.2.2
log
@[152723] gmf_R1_0_maintenance mmostafa  060803 Horizontal scrollbar is never shown for shape compartments
@
text
@d89 2
a90 1
        scrollPane.setScrollBarVisibility(ScrollPane.AUTOMATIC);
@


1.5.2.3
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.5.2.4
log
@ [161215]   gmf_R1_0_maintenace mmostafa 061123 Scrollpanes do not consider space occupied by border items
@
text
@d92 1
a92 1
        IFigure contents = new BorderItemsAwareFreeFormLayer();
@


1.5.2.5
log
@[167878]  gmf_R1_0_maintenace mmostafa 061213 Users can resize Figures to be smaller than the min size
@
text
@a22 1
import org.eclipse.gmf.runtime.diagram.ui.layout.FreeFormLayoutEx;
d93 1
a93 1
        contents.setLayoutManager(new FreeFormLayoutEx());
@


1.4
log
@bugzilla 132219 gmf-head sshaw 030630 Use diagram editor mapmode in ShapeCompartmentFigure and ResizableCompartmentFigure
@
text
@d47 1
a47 39
	
	/**
	 * Create an instance.  Calls {@@link #configureFigure()} to reconfigure
	 * the scrollpane.
	 * 
	 * @@deprecated use @@link(ResizableCompartment(String compartmentTitle, int minClientSize)} instead.
	 * Clients must specify the minClientSize in their own logical coordinate system instead of the
	 * figure assuming a default.  @@link{ ResizableCompartmentFigure.MIN_CLIENT_DP } is provided as a default
	 * value for convenience in device coordinates.
	 */
	public ShapeCompartmentFigure() {
		this(null, MapModeUtil.getMapMode().DPtoLP(ResizableCompartmentFigure.MIN_CLIENT_DP));
	}
	
	/**
	 * Create an instance.  Calls {@@link #configureFigure()} to reconfigure
	 * the scrollpane.
	 * 
	 * @@param title figure's title.
	 * @@deprecated use @@link(ResizableCompartment(String compartmentTitle, IMapMode mm)} instead.
	 */
	public ShapeCompartmentFigure(String title) {
		this(title, MapModeUtil.getMapMode().DPtoLP(ResizableCompartmentFigure.MIN_CLIENT_DP));
	}
	
	/**
	 * Create an instance.  Calls {@@link #configureFigure()} to reconfigure
	 * the scrollpane.
	 * 
	 * @@param title figure's title.
	 * @@param minClientSize <code>int</code> that is the minimum size the client area can occupy in 
	 * logical coordinates.
     * @@deprecated use @@link(ResizableCompartment(String compartmentTitle, IMapMode mm)} instead.
	 */
	public ShapeCompartmentFigure(String title, int minClientSize) {
		super(title, minClientSize);
		configureFigure();
	}
    
@


1.3
log
@bugzilla 112788 gmf-head sshaw 051104 API: Encapsulate MapMode / HiMetric coordinate system from clients
@
text
@d66 1
a66 4
	 * @@deprecated use @@link(ResizableCompartment(String compartmentTitle, int minClientSize)} instead.
	 * Clients must specify the minClientSize in their own logical coordinate system instead of the
	 * figure assuming a default.  @@link{ ResizableCompartmentFigure.MIN_CLIENT_DP } is provided as a default
	 * value for convenience in device coordinates.
d79 1
d85 15
d104 1
d107 25
a131 13
		ScrollPane scrollpane = getScrollPane();
		scrollpane.setViewport(new FreeformViewport());
		
		IMapMode mm = MapModeUtil.getMapMode(this);
		Insets insets = new Insets(mm.DPtoLP(1), mm.DPtoLP(2),
			mm.DPtoLP(1), mm.DPtoLP(0));
		Dimension size = new Dimension(mm.DPtoLP(15), mm.DPtoLP(15));
		
		scrollpane.setHorizontalScrollBar(
			new ListScrollBar(Orientable.HORIZONTAL, insets, size, 
			mm.DPtoLP(10), mm.DPtoLP(50)));
		scrollpane.setVerticalScrollBar(new ListScrollBar(Orientable.VERTICAL, insets, size, 
			mm.DPtoLP(10), mm.DPtoLP(50)));
d133 2
a134 2
		scrollpane.setScrollBarVisibility(ScrollPane.AUTOMATIC);
		scrollpane.setLayoutManager(new OverlayScrollPaneLayout() );
d136 11
a146 11
		IFigure contents = new FreeformLayer();
		contents.setLayoutManager(new FreeformLayout());
		scrollpane.setContents(contents);
		
		int MB = MapModeUtil.getMapMode(this).DPtoLP(5);
		scrollpane.setBorder(new MarginBorder(MB, MB, MB, MB));
		int SZ = MapModeUtil.getMapMode(this).DPtoLP(10);
		scrollpane.setMinimumSize(new Dimension(SZ, SZ));
	
		this.setFont(FONT_TITLE);
	}
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d24 5
a32 4
import org.eclipse.gmf.runtime.draw2d.ui.figures.ListScrollBar;
import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.OverlayScrollPaneLayout;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;

d52 13
d66 4
d72 13
a84 1
		super(title);
a85 6

	}

	/** Creates an instance.  */
	public ShapeCompartmentFigure() {
		this(null);
d96 5
d102 4
a105 2
			new ListScrollBar(Orientable.HORIZONTAL));
		scrollpane.setVerticalScrollBar(new ListScrollBar(Orientable.VERTICAL));
d113 2
a114 1
		int MB = MapMode.DPtoLP(5);
d116 1
a116 1
		int SZ = MapMode.DPtoLP(10);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

