head	1.4;
access;
symbols
	v20081023-2107:1.4
	v20081022-1925:1.4
	v20081022-1005:1.4
	v20081020-0700:1.4
	v20080917-1925:1.4
	v20080916-2008:1.4
	v20080911-1728:1.4
	v20080911-1506:1.4
	v20080910-1520:1.4
	v20080910-1510:1.4
	v20080903-1520:1.4
	v20080903-1510:1.4
	v20080813-1510:1.4
	v20080811-1546:1.4
	v20080731-1520:1.4
	v20080725-1738:1.4
	v20080723-2246:1.4
	v20080723-2232:1.4
	v20080723-1700:1.4
	v20080722-1827:1.4
	v20080718-1700:1.4
	v20080718-1731:1.4
	v20080716-1600:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080610-1132:1.4
	v20080603-1553:1.4
	v20080527-1255:1.4
	v20080527-1151:1.3
	v20080516-1748:1.4
	v20080516-1143:1.4
	v20080512-1200:1.4
	v20080503-1740:1.4
	v20080501-2127:1.3
	v20080501-1739:1.4
	m20080429-1543:1.3
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080407-2250:1.4
	v20080407-0930:1.3
	v20080404-1111:1.3
	v20080328-1605:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20080201-2010:1.3
	v20080201-0201:1.3
	v20080118-1129:1.3
	v20080114-2222:1.3
	v20080114-1111:1.3
	v20080107-1111:1.3
	v20071222-1111:1.3
	v20071214-1111:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071112-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.6
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070518-1300:1.3
	bugzilla111892_group_support:1.3.0.4
	Root_bugzilla111892_group_support:1.3
	v20070504-1000:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070202-0200:1.3
	v20070119-1200:1.3
	v20070111-0800:1.3
	v20070105-1200:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061218-1500:1.3
	v20061218-1200:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.3
	v20061013-1330:1.3
	v20061012-1100:1.3
	v20060925-1700:1.3
	v20060919-0800:1.3
	v20060907-1100:1.3
	M1_20:1.3
	v20060831-1500:1.3
	v20060824-1600:1.3
	v20060817-1500:1.3
	v20060810-1700:1.3
	v20060803-1200:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-0800:1.3
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060202-1415:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2008.04.08.02.16.38;	author ahunter;	state Exp;
branches;
next	1.3;
commitid	4d0547fad5804567;

1.3
date	2006.05.17.14.00.26;	author ldamus;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.20.18.40.48;	author ldamus;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.02.23.30.15;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[226065] gmf-head ahunter 080407 Fix warning: The type Assert is deprecated
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.requests;

import java.util.Map;

import org.eclipse.core.runtime.Assert;
import org.eclipse.gef.EditPart;
import org.eclipse.gef.commands.Command;
import org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.SuppressibleUIRequest;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;

/**
 * @@author melaasar
 * 
 * A request to create a relationship element and its connection view
 */
public class CreateConnectionViewAndElementRequest
	extends CreateConnectionViewRequest
	implements SuppressibleUIRequest {

	private boolean suppressUI = false;

	/**
	 * @@return true if the command will suppress all ui prompting and just use
	 *         default data
	 */
	public boolean isUISupressed() {

		return suppressUI;
	}

	/**
	 * @@param suppressUI
	 *            true if you do not wish the command to prompt with UI but
	 *            instead take the default value that it would have prompt for.
	 */
	public void setSuppressibleUI(boolean suppressUI) {
		this.suppressUI = suppressUI;

	}

	/**
	 * An extended view descriptor that takes an <code>ElementDescriptor</code>
	 * instead of <code>IAdaptable</code> as the element adapter
	 */
	public static class ConnectionViewAndElementDescriptor
		extends ConnectionViewDescriptor {

		/**
		 * Constructor.
		 * 
		 * @@param requestAdapter
		 * @@param preferencesHint
		 *            The preference hint that is to be used to find the
		 *            appropriate preference store from which to retrieve
		 *            diagram preference values. The preference hint is mapped
		 *            to a preference store in the preference registry <@@link
		 *            DiagramPreferencesRegistry>.
		 */
		public ConnectionViewAndElementDescriptor(
				CreateElementRequestAdapter requestAdapter,
				PreferencesHint preferencesHint) {
			super(requestAdapter, preferencesHint);
		}

		/**
		 * Constructor.
		 * 
		 * @@param requestAdapter
		 * @@param semanticHint
		 * @@param preferencesHint
		 *            The preference hint that is to be used to find the
		 *            appropriate preference store from which to retrieve
		 *            diagram preference values. The preference hint is mapped
		 *            to a preference store in the preference registry <@@link
		 *            DiagramPreferencesRegistry>.
		 */
		public ConnectionViewAndElementDescriptor(
				CreateElementRequestAdapter requestAdapter,
				String semanticHint, PreferencesHint preferencesHint) {
			super(requestAdapter, semanticHint, preferencesHint);
		}

		/**
		 * Constructor.
		 * 
		 * @@param requestAdapter
		 * @@param semanticHint
		 * @@param index
		 * @@param preferencesHint
		 *            The preference hint that is to be used to find the
		 *            appropriate preference store from which to retrieve
		 *            diagram preference values. The preference hint is mapped
		 *            to a preference store in the preference registry <@@link
		 *            DiagramPreferencesRegistry>.
		 */
		public ConnectionViewAndElementDescriptor(
				CreateElementRequestAdapter requestAdapter,
				String semanticHint, int index, PreferencesHint preferencesHint) {
			super(requestAdapter, semanticHint, index, preferencesHint);
		}

		/**
		 * Method getElementDescriptor.
		 * 
		 * @@return ElementDescriptor
		 */
		public CreateElementRequestAdapter getCreateElementRequestAdapter() {
			return (CreateElementRequestAdapter) getElementAdapter();
		}

	}

	/**
	 * Constructor.
	 * 
	 * @@param connectionViewAndElementDescriptor
	 */
	public CreateConnectionViewAndElementRequest(
			ConnectionViewAndElementDescriptor connectionViewAndElementDescriptor) {
		super(connectionViewAndElementDescriptor);
	}

	/**
	 * Constructor.
	 * 
	 * @@param type
	 * @@param semanticHint
	 * @@param preferencesHint
	 *            The preference hint that is to be used to find the appropriate
	 *            preference store from which to retrieve diagram preference
	 *            values. The preference hint is mapped to a preference store in
	 *            the preference registry <@@link DiagramPreferencesRegistry>.
	 */
	public CreateConnectionViewAndElementRequest(IElementType type,
			String semanticHint, PreferencesHint preferencesHint) {
		super(
			new ConnectionViewAndElementDescriptor(
				new CreateElementRequestAdapter(new CreateRelationshipRequest(
					type)), semanticHint, preferencesHint));
	}

	/**
	 * Constructor.
	 * 
	 * @@param type
	 * @@param preferencesHint
	 *            The preference hint that is to be used to find the appropriate
	 *            preference store from which to retrieve diagram preference
	 *            values. The preference hint is mapped to a preference store in
	 *            the preference registry <@@link DiagramPreferencesRegistry>.
	 */
	public CreateConnectionViewAndElementRequest(IElementType type,
			PreferencesHint preferencesHint) {
		super(
			new ConnectionViewAndElementDescriptor(
				new CreateElementRequestAdapter(new CreateRelationshipRequest(
					type)), preferencesHint));
	}

	/**
	 * Gets the descriptor for the connection view and element that is to be
	 * created.
	 * 
	 * @@return the descriptor
	 */
	public ConnectionViewAndElementDescriptor getConnectionViewAndElementDescriptor() {
		return (ConnectionViewAndElementDescriptor) getConnectionViewDescriptor();
	}

	/**
	 * Method getCreateCommand. TODO: remove after msl migration
	 * 
	 * @@param request
	 * @@param sourceEditPart
	 * @@param targetEditPart
	 * @@return Command
	 */
	public static Command getCreateCommand(
			CreateConnectionViewAndElementRequest request,
			EditPart sourceEditPart, EditPart targetEditPart) {

		Assert.isNotNull(request);
		Assert.isNotNull(sourceEditPart);
		Assert.isNotNull(targetEditPart);

		request.setSourceEditPart(sourceEditPart);
		request.setTargetEditPart(targetEditPart);
		request.setType(RequestConstants.REQ_CONNECTION_START);
		sourceEditPart.getCommand(request);
		request.setType(RequestConstants.REQ_CONNECTION_END);
		Command command = targetEditPart.getCommand(request);

		return command;
	}

	/**
	 * Method getCreateCommand.
	 * 
	 * @@param elementType
	 * @@param sourceEditPart
	 * @@param targetEditPart
	 * @@return Command
	 */
	public static Command getCreateCommand(IElementType elementType,
			EditPart sourceEditPart, EditPart targetEditPart,
			PreferencesHint preferencesHint) {
		return getCreateCommand(new CreateConnectionViewAndElementRequest(
			elementType, preferencesHint), sourceEditPart, targetEditPart);
	}

	/**
	 * Propagates setting the parameters to the <code>CreateElementRequest</code> in my 
	 * {@@link #getViewAndElementDescriptor()}.
	 */
	public void setExtendedData(Map map) {
		
		super.setExtendedData(map);
		
		ConnectionViewAndElementDescriptor descriptor = getConnectionViewAndElementDescriptor();
		
		if (descriptor != null) {
			CreateElementRequestAdapter adapter = descriptor
					.getCreateElementRequestAdapter();
			
			if (adapter != null) {
				CreateElementRequest request = (CreateElementRequest) adapter
						.getAdapter(CreateElementRequest.class);
		
				if (request != null) {
					request.getParameters().clear();
					request.addParameters(map);
				}
			}
		}
	}

}
@


1.3
log
@[137749] gmf_head ldamus 060517 Transfer GEF Request's extended data into IEditCommandRequest's parameters
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d16 1
a24 1
import org.eclipse.jface.util.Assert;
@


1.2
log
@[124928] gmf_head ldamus 060220 SemanticService should be deleted
@
text
@d14 2
d22 1
d226 26
@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a16 1
import org.eclipse.gmf.runtime.diagram.core.internal.services.semantic.SuppressibleUIRequest;
d18 1
@

