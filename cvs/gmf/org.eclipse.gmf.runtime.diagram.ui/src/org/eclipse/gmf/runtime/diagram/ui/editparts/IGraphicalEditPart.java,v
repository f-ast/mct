head	1.13;
access;
symbols
	v20081023-2107:1.13
	v20081022-1925:1.13
	v20081022-1005:1.13
	v20081020-0700:1.13
	v20080917-1925:1.13
	v20080916-2008:1.13
	v20080911-1728:1.13
	v20080911-1506:1.13
	v20080910-1520:1.13
	v20080910-1510:1.13
	v20080903-1520:1.13
	v20080903-1510:1.13
	v20080813-1510:1.13
	v20080811-1546:1.13
	v20080731-1520:1.13
	v20080725-1738:1.13
	v20080723-2246:1.13
	v20080723-2232:1.13
	v20080723-1700:1.13
	v20080722-1827:1.13
	v20080718-1700:1.13
	v20080718-1731:1.13
	v20080716-1600:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.6
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080610-1132:1.13
	v20080603-1553:1.13
	v20080527-1255:1.13
	v20080527-1151:1.13
	v20080516-1748:1.13
	v20080516-1143:1.13
	v20080512-1200:1.13
	v20080503-1740:1.13
	v20080501-2127:1.13
	v20080501-1739:1.13
	m20080429-1543:1.13
	v20080425-1959:1.13
	v20080417-1610:1.13
	v20080407-2250:1.13
	v20080407-0930:1.13
	v20080404-1111:1.13
	v20080328-1605:1.13
	v20080322-0000:1.13
	v20080222-1200:1.13
	v20080201-2010:1.13
	v20080201-0201:1.13
	v20080118-1129:1.13
	v20080114-2222:1.13
	v20080114-1111:1.13
	v20080107-1111:1.13
	v20071222-1111:1.13
	v20071214-1111:1.13
	v20071130-1111:1.13
	v20071124-0000:1.13
	v20071112-0000:1.13
	v20071108-0000:1.13
	v20071003-0000:1.13
	v20070915-0000:1.13
	v20070903-0000:1.13
	v20070809-0000:1.13
	R2_0_maintenance:1.13.0.4
	R2_0:1.13
	R4_20:1.13
	v20070621-0000:1.13
	RC3_20:1.13
	v20070614-1400:1.13
	v20070608-1300:1.13
	v20070605-1400:1.13
	v20070601-1400:1.13
	v20070525-1500:1.13
	v20070518-1300:1.13
	bugzilla111892_group_support:1.13.0.2
	Root_bugzilla111892_group_support:1.13
	v20070504-1000:1.13
	v20070420-1000:1.13
	v20070413-1300:1.13
	v20070330-1300:1.13
	v20060330-1300:1.13
	v20070322-1100:1.13
	v20060316-0600:1.13
	v20070221-1500:1.13
	v20070208-1800:1.13
	v20070202-0200:1.12.2.1
	v20070119-1200:1.12.2.1
	v20070111-0800:1.12.2.1
	v20070105-1200:1.12.2.1
	v20070103-0300:1.13
	M4_20:1.13
	v20061218-1500:1.12.2.1
	v20061218-1200:1.13
	v20061214-0000:1.13
	M3_20:1.13
	v20061117-0800:1.13
	v20061027-1200:1.12.2.1
	v20061013-1330:1.13
	v20061012-1100:1.12.2.1
	v20060925-1700:1.12.2.1
	v20060919-0800:1.12.2.1
	v20060907-1100:1.12.2.1
	M1_20:1.12
	v20060831-1500:1.12.2.1
	v20060824-1600:1.12.2.1
	v20060817-1500:1.12.2.1
	v20060810-1700:1.12.2.1
	v20060803-1200:1.12.2.1
	v20060728-0500:1.12.2.1
	v20060721-1130:1.12.2.1
	v20060713-1700:1.12.2.1
	R1_0_maintenance:1.12.0.2
	R1_0:1.12
	v20060627-1200:1.12
	v20060616-1400:1.12
	v20060616-1200:1.12
	v20060609-1400:1.12
	v20060531-1730:1.12
	v20060530-1930:1.12
	v20060526-1200:1.12
	v20060519-0800:1.12
	v20060512-1000:1.12
	I20060512-1000:1.12
	I20060505-1400:1.11
	I20060428-1300:1.11
	I20060424-0500:1.11
	I20060424-0300:1.11
	M6_10:1.11
	I20060407-1200:1.11
	I20060331-1000:1.11
	I20060324-0300:1.11
	I20060317-1300:1.11
	I20060317-1200:1.11
	I20060316-1300:1.11
	I20060309-1300:1.11
	M5_10:1.11
	S20060303-1600:1.11
	I20060227-1730:1.10
	I20060216-1945:1.10
	I20060210-1715:1.9
	I20060209-1815:1.9
	I20060203-0830:1.9
	I20060202-1415:1.9
	I20060129-1145:1.9
	I20060127-0900:1.9
	I20060120-1530:1.9
	I20060113-1700:1.9
	M4_10:1.9
	I20060107-1100:1.9
	I20060105-1630:1.9
	I20051230-1230:1.9
	I20051223-1100:1.9
	I20051217-0925:1.9
	I20051208-2000:1.8
	I20051201-1800:1.8
	I20051124-2000:1.8
	M3_10:1.8
	I20051118-1245:1.8
	I20051111-1800:1.7
	I20051106-0900:1.7
	v20051030:1.7;
locks; strict;
comment	@# @;


1.13
date	2006.10.03.15.02.04;	author ahunter;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.09.19.45.24;	author cmahoney;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2006.02.28.02.32.25;	author cmahoney;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.13.19.11.49;	author ldamus;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.14.19.18.25;	author mmostafa;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.15.02.54.44;	author sshaw;	state Exp;
branches;
next	1.7;

1.7
date	2005.09.23.18.37.25;	author sshaw;	state Exp;
branches;
next	1.6;

1.6
date	2005.09.22.15.42.19;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2005.09.15.14.59.19;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.12.21.29.05;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.15.48.52;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.49.21;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.36;	author sshaw;	state Exp;
branches;
next	;

1.12.2.1
date	2006.07.11.15.10.29;	author cmahoney;	state Exp;
branches;
next	;


desc
@@


1.13
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.editparts;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.EditPart;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.IEditableEditPart;
import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramEditDomain;
import org.eclipse.gmf.runtime.notation.View;

/**
 * @@author melaasar
 *
 * The interface of all editparts with <code>EObject</code> as a model
 * <B>Not indended to be implemented by clients</B>, Clients should extends GraphicalEditPart
 */
public interface IGraphicalEditPart
	extends org.eclipse.gef.GraphicalEditPart, IEditableEditPart {

	/**
	 * Return the editpart's associated Notation View.
	 * @@return <code>View</code>, the associated view or null if there is no associated Notation View
	 */
	public View getNotationView();

	/**
	 * Gets the associated DiagramEditDomain to the edit part
	 * @@return IDiagramEditDomain
	 */
	public IDiagramEditDomain getDiagramEditDomain();

	/**
	 * Returns the first child inside this edit part that owns a view
	 * with the same type as the passed hint
	 * @@param semanticHint
	 * @@return IGraphicalEditPart
	 */
	public IGraphicalEditPart getChildBySemanticHint(String semanticHint);

	/**
	 * Method getTopGraphicEditPart.
	 * @@return TopGraphicEditPart
	 */
	public TopGraphicEditPart getTopGraphicEditPart();
	
	/**
	 * Convenience method to retreive the value for the supplied feature
	 * from the editpart's associated view element.
	 * @@param feature the feature to use
	 * @@return Object the value
	 */
	public Object getStructuralFeatureValue(EStructuralFeature id);

	/**
	 * Convenience method to set a feature value.
	 * @@param feature
	 * @@param value
	 */
	public void setStructuralFeatureValue(EStructuralFeature feature, Object value);

	/**
	 * finds an editpart given a starting editpart and an EObject
	 * @@param epBegin starting edit part
	 * @@param theElement	eObject to use
	 * @@return the found edit part if there is any
	 */
	public EditPart findEditPart(EditPart epBegin, EObject theElement);
	
	/**
	 * Convenience method returns the editpart's primary view.
	 * @@return the primary view 
	 */
	public View getPrimaryView();
	
	/**
	 * this method will return the primary child view inside this edit part
	 * @@return the primary child view inside this edit part
	 */
	public EditPart getPrimaryChildEditPart();
	
	/**
	 * Gets the preferences hint that is to be used to find the appropriate
	 * preference store from which to retrieve diagram preference values. The
	 * preference hint is mapped to a preference store in the preference
	 * registry <@@link DiagramPreferencesRegistry>.
	 * 
	 * @@return the preferences hint
	 */
	public PreferencesHint getDiagramPreferencesHint();
	
	/**
	 * Gets the semantic element associated to this editpart's view.
	 * @@return the semantic element or <code>null</code> if the semantic element was
	 * <code>null</code> or unresolvable 
	 */
	public EObject resolveSemanticElement();
      
    /**
     * Gets my transactional EMF editing domain.
     * 
     * @@return my transactional EMF editing domain
     */
    public TransactionalEditingDomain getEditingDomain();
    
    /**
     * Retrieves the preferred value for the supplied feature. This value could
     * be the current value set in the preference store. Clients may override
     * this to supply their own preferred values. The type of the return value
     * will vary depending on the feature.
     * 
     * @@param feature
     *            the feature to use
     * @@return Object The preferred value for the supplied feature. The object
     *         is of the same type as if the value of the feature were retrieved
     *         directly from the view.
     */
    public Object getPreferredValue(EStructuralFeature feature);

}
@


1.12
log
@Bugzilla#109422 gmf_head cmahoney 060509 Removing deprecated classes from GMF diagram components
@
text
@d116 15
@


1.12.2.1
log
@Bugzilla#146690 gmf_R1_0_maintenance cmahoney 060711 Inconsistent default colours
@
text
@a115 15
    
    /**
     * Retrieves the preferred value for the supplied feature. This value could
     * be the current value set in the preference store. Clients may override
     * this to supply their own preferred values. The type of the return value
     * will vary depending on the feature.
     * 
     * @@param feature
     *            the feature to use
     * @@return Object The preferred value for the supplied feature. The object
     *         is of the same type as if the value of the feature were retrieved
     *         directly from the view.
     */
    public Object getPreferredValue(EStructuralFeature feature);

@


1.11
log
@Bugzilla#109422 gmf_head cmahoney 060227 Removing deprecated API
@
text
@a56 9

	/**
	 * Convenience method to retreive the value for the supplied poperty
	 * from the editpart's associated view element.
	 * @@param id the property id
	 * @@return Object the value
	 * @@deprecated use {@@link #getStructuralFeatureValue(EStructuralFeature)} instead
	 */
	public Object getPropertyValue(Object id);
a66 8
	 * Convenience method to set a property value.
	 * @@param id
	 * @@param value
	 * @@deprecated use {@@link #setStructuralFeatureValue(Object, Object)} instead
	 */
	public void setPropertyValue(Object id, Object value);
	
	/**
@


1.10
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@a13 2
import java.util.Map;

a58 7
	 * Method fillAppearancePropertiesMap.
	 * @@param properties
	 * @@deprecated this is no longer needed by the copy appearance action.
	 */
	public void fillAppearancePropertiesMap(Map properties);

	/**
a90 7
	 * Method getAppearancePropertiesMap.
	 * @@return Map
	 * @@deprecated this is no longer needed by the copy appearance action.
	 */
	public Map getAppearancePropertiesMap();
	
	/**
d126 1
a126 1
    
@


1.9
log
@111894  gmf-head mmostafa 051201 Improve memory consumption of opened notation diagram
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d18 1
d142 7
@


1.8
log
@bugzilla 112986 gmf-head sshaw 051114 Apply Appearance Properties messes up colors on a LED in a Logic Diagram
@
text
@d27 2
a28 1
 * The interface of all editparts with IView as a model
@


1.7
log
@Bugzilla 109092: gmf_head sshaw 050923 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d61 1
d100 1
@


1.6
log
@Bugzilla 109092: gmf_head sshaw 050922 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@d17 1
d65 1
a65 1
	 * Convenience method to retreive the value for the supplied value
d67 1
a67 1
	  * @@param id the property id
d69 1
d72 8
d85 1
d88 7
@


1.5
log
@Bugzilla 109618: gmf_head mmostafa 050915 :  Remove the deprecated view facade interfaces and classes
@
text
@a17 1
import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
a18 1
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
a20 1
import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
d44 2
a45 1
	 * Method getChildBySemanticHint.
@


1.4
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d18 1
a18 2

import org.eclipse.gmf.runtime.diagram.core.internal.view.IView;
d20 1
d23 1
a34 7
	 * Method getView.
	 * @@return IView
	 * @@deprecated use getNotationView instead
	 */
	public IView getView();
	
	/**
d115 7
@


1.3
log
@Bugzilla109092 : rmp_head mmostafa 050912 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d45 1
a45 1
	 * Method getDiagramEditDomain.
d78 1
a78 1
	 * Method setPropertyValue.
d99 1
a99 1
	 * Convenience method returns the editpart's parimary view.
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d21 1
a21 1
import com.ibm.xtools.notation.View;
@

