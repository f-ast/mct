head	1.11;
access;
symbols
	v20081020-0700:1.11
	v20081015-1925:1.11
	v20081015-1755:1.11
	v20081008-1925:1.11
	v20081008-1755:1.11
	v20080903-1520:1.11
	v20080903-1510:1.11
	v20080807-1333:1.11
	v20080807-1325:1.11
	v20080731-1520:1.11
	v20080725-1738:1.11
	v20080722-1827:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080425-1959:1.11
	v20080328-1605:1.10
	v20080222-1200:1.9
	v20080107-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070915-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.6
	R2_0:1.9
	R4_20:1.9
	RC3_20:1.9
	v20070601-1400:1.9
	v20070518-1300:1.9
	bugzilla111892_group_support:1.9.0.4
	Root_bugzilla111892_group_support:1.9
	v20070420-1000:1.9
	v20070405-2000:1.9
	v20070330-1300:1.9
	v20070208-1800:1.9
	M4_20:1.9
	v20061214-0000:1.9
	M3_20:1.9
	v20061027-1200:1.9
	v20061013-1330:1.9
	v20060919-0800:1.9
	v20060907-1100:1.9
	M1_20:1.9
	v20060831-1500:1.9
	v20060817-1500:1.9
	v20060810-1700:1.9
	v20060803-1200:1.9
	v20060728-0500:1.9
	v20060721-1130:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.9
	v20060519-0800:1.9
	v20060512-1000:1.9
	I20060512-1000:1.9
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051201-1800:1.6
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.4;
locks; strict;
comment	@# @;


1.11
date	2008.04.25.18.39.41;	author ahunter;	state Exp;
branches;
next	1.10;
commitid	26d74812256c4567;

1.10
date	2008.03.28.21.54.56;	author ahunter;	state Exp;
branches;
next	1.9;
commitid	714f47ed69304567;

1.9
date	2006.05.09.19.45.09;	author cmahoney;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.28.02.30.53;	author cmahoney;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.13.19.12.29;	author ldamus;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.25.19.37.54;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.02.23.29.21;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.14.20.58.54;	author mmostafa;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.24.26;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.50;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.47;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.11
log
@[228915] gmf-head ahunter 080425 Non-externalized string literal; it should be followed by //$NON-NLS-<n>
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.core.commands;


import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.ecore.ENamedElement;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.core.util.StringStatics;
import org.eclipse.gmf.runtime.diagram.core.internal.l10n.DiagramCoreMessages;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.emf.core.util.PackageUtil;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.osgi.util.NLS;

/**
 * A command to a set a property of a view
 *  
 * @@author melaasar
 */
public class SetPropertyCommand extends AbstractTransactionalCommand {

	static final private String CHANGE_PROPERTY_PATTERN = DiagramCoreMessages.Command_ChangeViewProperty_ChangePropertyPattern; 

	private IAdaptable viewAdapter;
	private String propertyName;
	private String propertyId;
	private Object newValue;

	/**
	 * Creates a set property command with a given label
     * @@param editingDomain the editing domain
	 * @@param label the command label
	 * @@param viewAdapter	the view adapter of the <code>View<code> that owns the property
	 * @@param propertyId	the property Id of the property to set
	 * @@param newValue		the new value of the property
	 */
	public SetPropertyCommand(TransactionalEditingDomain editingDomain, String label,
            IAdaptable viewAdapter, String propertyId, Object newValue) {
		super(editingDomain, label, null);
		this.viewAdapter = viewAdapter;
		this.propertyId = propertyId;
		this.newValue = newValue;
	}
	
	/**
	 * Creates a set property command with a default label based on property name
	 * @@param editingDomain the editing domain
	 * @@param viewAdapter	the view adapter of the <code>View<code> that owns the property
	 * @@param propertyId	the property Id of the property to set
	 * @@param propertyName  the property name 
	 * @@param newValue		the new value of the property
	 */
	public SetPropertyCommand(TransactionalEditingDomain editingDomain, IAdaptable viewAdapter, String propertyId, String propertyName, Object newValue) {
		this(editingDomain, StringStatics.BLANK, viewAdapter, propertyId, newValue);
		this.propertyName = propertyName;
	}

	public List getAffectedFiles() {

		if (viewAdapter != null) {
			View view = (View) viewAdapter.getAdapter(View.class);
			if (view != null)
				return getWorkspaceFiles(view);
		}
		return super.getAffectedFiles();
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getLabel()
	 */
	public String getLabel() {
		String label = super.getLabel();
		return (label != null) ? label
			: (NLS.bind(CHANGE_PROPERTY_PATTERN, propertyName));
	}

	protected CommandResult doExecuteWithResult(
            IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {
        
		View view = (View) viewAdapter.getAdapter(View.class);
		if (view != null){
			ENamedElement namedElement =  PackageUtil.getElement(propertyId);
			if (namedElement instanceof EStructuralFeature)
				ViewUtil.setStructuralFeatureValue(view,(EStructuralFeature)namedElement, newValue);
		}
		return CommandResult.newOKCommandResult();
	}

	/**
	 * Returns the new value of the property.
	 * @@return the new value
	 */
	protected Object getNewValue() {
		return newValue;
	}

	/**
	 * Returns the property Id.
	 * @@return property Id
	 */
	protected Object getPropertyId() {
		return propertyId;
	}

	/**
	 * Returns the view Adapter that owns the property.
	 * @@return the view adapter
	 */
	protected IAdaptable getViewAdapter() {
		return viewAdapter;
	}

	/**
	 * Gets the property name
	 * @@return the property name
	 */
	protected String getPropertyName() {
		return propertyName;
	}

	/**
	 * Sets the newValue that will be set for the property.
	 * @@param newValue The newValue to set
	 */
	protected void setNewValue(Object newValue) {
		this.newValue = newValue;
	}

	/**
	 * Sets the propertyId of the property.
	 * @@param propertyId The propertyId to set
	 */
	protected void setPropertyId(String propertyId) {
		this.propertyId = propertyId;
	}

	/**
	 * Sets the viewAdapter that owns the property.
	 * @@param viewAdapter The viewAdapter to set
	 */
	protected void setViewAdapter(IAdaptable viewAdapter) {
		this.viewAdapter = viewAdapter;
	}

	/**
	 * Sets the property name
	 * @@param string the property name
	 */
	protected void setPropertyName(String string) {
		propertyName = string;
	}
    
    /**
     * Returns the value of the feature of the property
     * @@param view the view to use to get the value
     * @@param feature the feature to use
     * @@return the value of the property, or <code>null</code>
     */
    protected EStructuralFeature getPropertyStructuralFeature() {
        if (getPropertyId() instanceof String) {
            ENamedElement namedElement = PackageUtil
                .getElement((String) getPropertyId());
            if (namedElement instanceof EStructuralFeature) {
                return (EStructuralFeature) namedElement;
            }
        }
        return null;
    }

}
@


1.10
log
@[224706] gmf-head ahunter 080328 IUndoableOperation changes in the platform cause AssertionFailedException
@
text
@d24 1
d71 1
a71 1
		this(editingDomain, "", viewAdapter, propertyId, newValue);
@


1.9
log
@Bugzilla#109422 gmf_head cmahoney 060509 Removing deprecated classes from GMF diagram components
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d70 1
a70 1
		this(editingDomain, null, viewAdapter, propertyId, newValue);
@


1.8
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d169 17
@


1.7
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d27 1
a27 1
import org.eclipse.gmf.runtime.emf.core.util.MetaModelUtil;
d64 1
a64 1
     * @@param viewAdapter	the view adapter of the <code>View<code> that owns the property
d99 1
a99 1
			ENamedElement namedElement =  MetaModelUtil.getElement(propertyId);
@


1.6
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a13 1
import java.util.Collection;
d15 3
d22 1
d26 1
a26 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d36 1
a36 1
public class SetPropertyCommand extends AbstractModelCommand {
d47 1
d53 3
a55 2
	public SetPropertyCommand(String label, IAdaptable viewAdapter, String propertyId, Object newValue) {
		super(label, null);
d63 2
a64 1
	 * @@param viewAdapter	the view adapter of the <code>View<code> that owns the property
d69 2
a70 2
	public SetPropertyCommand(IAdaptable viewAdapter, String propertyId, String propertyName, Object newValue) {
		this(null, viewAdapter, propertyId, newValue);
d74 2
a75 4
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getAffectedObjects()
	 */
	public Collection getAffectedObjects() {
d79 1
a79 1
				return getWorkspaceFilesFor(view);
d81 1
a81 1
		return super.getAffectedObjects();
d93 4
a96 4
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d103 1
a103 1
		return newOKCommandResult();
@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@a13 1
import java.text.MessageFormat;
d21 1
a21 1
import org.eclipse.gmf.runtime.diagram.core.internal.l10n.DiagramResourceManager;
d26 1
d35 1
a35 1
	static final private String CHANGE_PROPERTY_PATTERN = DiagramResourceManager.getI18NString("Command.ChangeViewProperty.ChangePropertyPattern"); //$NON-NLS-1$ 
d85 2
a86 4
		return (label != null)
			? label
			: (MessageFormat
				.format(CHANGE_PROPERTY_PATTERN, new Object[] { propertyName }));
@


1.4
log
@bugzilla 110316 gmf-head mmostafa 051014 Compiler warning count should be 0 - runtime diagram layer components
@
text
@a20 1

d22 1
a22 1
import org.eclipse.gmf.runtime.diagram.core.internal.l10n.Messages;
d35 1
a35 1
	static final private String CHANGE_PROPERTY_PATTERN = Messages.getString("Command.ChangeViewProperty.ChangePropertyPattern"); //$NON-NLS-1$ 
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d19 2
d26 1
d97 5
a101 2
		if (view != null)
			ViewUtil.setPropertyValue(view,propertyId, newValue);
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d22 1
a22 1
import com.ibm.xtools.notation.View;
@

