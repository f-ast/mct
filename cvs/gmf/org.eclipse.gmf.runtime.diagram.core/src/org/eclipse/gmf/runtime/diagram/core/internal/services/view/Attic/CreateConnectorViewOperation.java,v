head	1.6;
access;
symbols
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20080903-1520:1.6
	v20080731-1520:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20051030:1.5;
locks; strict;
comment	@# @;


1.6
date	2005.11.02.23.29.21;	author sshaw;	state dead;
branches;
next	1.5;

1.5
date	2005.09.12.21.24.26;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.12.15.48.40;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.08.18.58.50;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.50;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.37;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.core.internal.services.view;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.gmf.runtime.common.core.service.IProvider;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.core.providers.IViewProvider;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.View;

/**
 * 
 * Connector view creation operation
 * @@author melaasar
 */
public class CreateConnectorViewOperation extends CreateChildViewOperation {

	/**
	 * Creates a new instance.
	 * @@param semanticAdapter
	 * @@param containerView
	 * @@param semanticHint
	 * @@param index
	 * @@param persisted
	 * @@param preferencesHint
	 *            The preference hint that is to be used to find the appropriate
	 *            preference store from which to retrieve diagram preference
	 *            values. The preference hint is mapped to a preference store in
	 *            the preference registry <@@link DiagramPreferencesRegistry>.
	 */
	protected CreateConnectorViewOperation(
		IAdaptable semanticAdapter,
		View containerView,
		String semanticHint,
		int index,
		boolean persisted, PreferencesHint preferencesHint) {
		super(semanticAdapter, containerView, semanticHint, index, persisted, preferencesHint);
	}

	/**
	 * @@see org.eclipse.gmf.runtime.diagram.core.internal.services.view.CreateViewOperation#getViewKind()
	 */
	public Class getViewKind() {
		return Edge.class;
	}


	/**
	 * @@see com.ibm.xtools.common.service.IOperation#execute(IProvider)
	 */
	public Object execute(IProvider provider) {
		return ((IViewProvider) provider).createEdge(
			getSemanticAdapter(),
			getContainerView(),
			getSemanticHint(),
			getIndex(),
			getPersisted(), getPreferencesHint());
	}

}
@


1.5
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@@


1.4
log
@Bugzilla109092 : rmp_head mmostafa 050912 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.3
log
@Bugzilla 109092  : rumv_head mmostafa 050908 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
@
text
@d61 1
a61 1
		return ((IViewProvider) provider).createConnectorView(
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d16 1
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d16 2
a17 2
import com.ibm.xtools.notation.Edge;
import com.ibm.xtools.notation.View;
@

