head	1.1;
access;
symbols
	v20081020-0700:1.1
	v20081015-1925:1.1
	v20081015-1755:1.1
	v20081008-1925:1.1
	v20081008-1755:1.1
	v20080903-1520:1.1
	v20080903-1510:1.1
	v20080807-1333:1.1
	v20080807-1325:1.1
	v20080731-1520:1.1
	v20080725-1738:1.1
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.8
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20080328-1605:1.1
	v20080222-1200:1.1
	v20080107-1111:1.1
	v20071214-1111:1.1
	v20071130-1111:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070915-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.6
	R2_0:1.1
	R4_20:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070518-1300:1.1
	bugzilla111892_group_support:1.1.0.4
	Root_bugzilla111892_group_support:1.1
	v20070420-1000:1.1
	v20070405-2000:1.1
	v20070330-1300:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061027-1200:1.1
	v20061013-1330:1.1
	v20060919-0800:1.1
	v20060907-1100:1.1
	M1_20:1.1
	v20060831-1500:1.1
	v20060817-1500:1.1
	v20060810-1700:1.1
	v20060803-1200:1.1
	v20060728-0500:1.1
	v20060721-1130:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060519-0800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2006.05.15.15.26.04;	author cmahoney;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Bugzilla#140166 gmf_head cmahoney 060515 Move necessary client accessed internal classes into public API
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2003, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.core.services.view;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.common.core.service.IProvider;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.core.providers.IViewProvider;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.View;

/**
 * 
 * Edge view creation operation
 * @@author melaasar
 */
public final class CreateEdgeViewOperation extends CreateChildViewOperation {

	/**
	 * Creates a new instance.
	 * @@param semanticAdapter
	 * @@param containerView
	 * @@param semanticHint
	 * @@param index
	 * @@param persisted
	 * @@param preferencesHint
	 *            The preference hint that is to be used to find the appropriate
	 *            preference store from which to retrieve diagram preference
	 *            values. The preference hint is mapped to a preference store in
	 *            the preference registry <@@link DiagramPreferencesRegistry>.
	 */
	public CreateEdgeViewOperation(
		IAdaptable semanticAdapter,
		View containerView,
		String semanticHint,
		int index,
		boolean persisted, PreferencesHint preferencesHint) {
		super(semanticAdapter, containerView, semanticHint, index, persisted, preferencesHint);
	}

	/**
	 * @@see org.eclipse.gmf.runtime.diagram.core.services.view.CreateViewOperation#getViewKind()
	 */
	public final Class getViewKind() {
		return Edge.class;
	}


	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.service.IOperation#execute(org.eclipse.gmf.runtime.common.core.service.IProvider)
	 */
	public Object execute(IProvider provider) {
		return ((IViewProvider) provider).createEdge(
			getSemanticAdapter(),
			getContainerView(),
			getSemanticHint(),
			getIndex(),
			getPersisted(), getPreferencesHint());
	}

}
@
