head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20081015-1925:1.5
	v20081015-1755:1.5
	v20081008-1925:1.5
	v20081008-1755:1.5
	v20080903-1520:1.5
	v20080903-1510:1.5
	v20080807-1333:1.5
	v20080807-1325:1.5
	v20080731-1520:1.5
	v20080725-1738:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.6
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080425-1959:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080107-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070915-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070518-1300:1.5
	bugzilla111892_group_support:1.5.0.2
	Root_bugzilla111892_group_support:1.5
	v20070420-1000:1.5
	v20070405-2000:1.5
	v20070330-1300:1.5
	v20070208-1800:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061027-1200:1.4.2.1
	v20061013-1330:1.5
	v20060919-0800:1.4.2.1
	v20060907-1100:1.4
	M1_20:1.4
	v20060831-1500:1.4
	v20060817-1500:1.4
	v20060810-1700:1.4
	v20060803-1200:1.4
	v20060728-0500:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2006.10.03.15.01.45;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.26.22.27.14;	author cmahoney;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.11.21.16.20.32;	author cmahoney;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.24.26;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.56;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.16.43.28;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.diagram.core.preferences;

import java.util.HashMap;
import java.util.Map;

/**
 * This specifies the hint with which a preference store containing the diagram
 * preferences will be registered against in the preferences registry. This hint
 * will be passed around and when a view is created it will use this hint to
 * initialize its properties based on the values in the preference store
 * registered against this hint in the preferences registry.
 * 
 * @@author cmahoney
 */
public class PreferencesHint {

	/**
	 * The hint that indicates there are no preferences to be used for the
	 * generic diagram preferences, instead use the default values.
	 */
	public static PreferencesHint USE_DEFAULTS = new PreferencesHint(
		"UseDefaults"); //$NON-NLS-1$

	/**
	 * A map of preference hints to preference stores
	 * {@@link org.eclipse.jface.preference.IPreferenceStore}.
	 */
	private static Map preferenceStores = new HashMap();

	/**
	 * The unique id string of this hint.
	 */
	private String id;

	/**
	 * Creates a new instance.
	 * 
	 * @@param id
	 *            the unique id string of this hint
	 */
	public PreferencesHint(String id) {
		this.id = id;
	}

	/**
	 * Gets the unique id string of this hint
	 * 
	 * @@return the id
	 */
	private String getId() {
		return id;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see java.lang.Object#equals(java.lang.Object)
	 */
	public boolean equals(Object arg0) {
		return arg0 instanceof PreferencesHint ? getId().equals(
			((PreferencesHint) arg0).getId())
			: false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see java.lang.Object#hashCode()
	 */
	public int hashCode() {
		return getId().hashCode();
	}

	/**
	 * Registers a preference store containing some or all of the generic
	 * diagram preferences (those preferences defined in the diagram layer) to a
	 * preference hint. When a diagram preference is needed, it will be
	 * retrieved from the preference store using the hint specified in the root
	 * editpart. This allows each diagram editor to have its own diagram
	 * preferences. The preference store is only registered against the hint
	 * given if there is not already a preference store registered with that
	 * same preference hint.
	 * 
	 * @@param preferencesHint
	 *            the preference hint for which the preferences store is to be
	 *            associated
	 * @@param preferenceStore
	 *            the preference store initialized with the diagram preferences
	 *            (an instance of
	 *            {@@link org.eclipse.jface.preference.IPreferenceStore})
	 * @@return true if the preference store was successfully registered; false
	 *         otherwise
	 */
	public static boolean registerPreferenceStore(PreferencesHint preferencesHint,
			Object preferenceStore) {
		if (preferenceStores.containsKey(preferencesHint)) {
			return false;
		}
		preferenceStores.put(preferencesHint, preferenceStore);
		return true;
	}

	/**
	 * Gets the preference store registered with the preference hint given.
	 * 
	 * @@param preferenceHint
	 *            the preference hint
	 * @@return the preference store (an instance of
	 *         {@@link org.eclipse.jface.preference.IPreferenceStore})
	 *         registered with the preferences hint given; if no preference
	 *         store has been registered with this hint the preference store
	 *         with the default values is returned.
	 */
	public Object getPreferenceStore() {
		Object store = preferenceStores.get(this);
		if (store == null) {
			store = preferenceStores.get(PreferencesHint.USE_DEFAULTS);
		}
		return store;
	}

}
@


1.4
log
@Bugzilla#109422 gmf_head cmahoney 060126 Deleting deprecated classes
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.4.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.3
log
@Bugzilla#112864 gmf_head cmahoney 051121 Remove references to Modeling from diagram layer
@
text
@a36 9
	 * The hint that indicates that the preferences under the "Modeling"
	 * category should be used for the diagramming preferences. 
	 * @@deprecated If you were using this and need assistance ask Cherie (cmahoney@@ca.ibm.com).
     * To be deleted after Dec 21, 2005.
	 */
	public static final PreferencesHint MODELING = new PreferencesHint(
		"MODELING"); //$NON-NLS-1$

	/**
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d38 3
a40 2
	 * category should be used for the diagramming preferences. TODO: Move to
	 * Modeler / Visualizer common plugin.
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

