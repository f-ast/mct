head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20081015-1925:1.2
	v20081015-1755:1.2
	v20081008-1925:1.2
	v20081008-1755:1.2
	v20080903-1520:1.2
	v20080903-1510:1.2
	v20080807-1333:1.2
	v20080807-1325:1.2
	v20080731-1520:1.2
	v20080725-1738:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20080328-1605:1.2
	v20080222-1200:1.2
	v20080107-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070915-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	bugzilla111892_group_support:1.2.0.2
	Root_bugzilla111892_group_support:1.2
	v20070420-1000:1.2
	v20070405-2000:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061027-1200:1.1.2.1
	v20061013-1330:1.2
	v20060919-0800:1.1.2.1
	v20060907-1100:1.1.2.1
	v20060831-1500:1.1.2.1
	v20060817-1500:1.1.2.1
	R1_0_maintenance:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2006.10.03.15.01.44;	author ahunter;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.11.18.39.07;	author ldamus;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.08.11.18.39.07;	author ldamus;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
package org.eclipse.gmf.runtime.diagram.core.commands;

import java.util.Iterator;
import java.util.Set;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.resources.IMarker;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.eclipse.gmf.runtime.diagram.core.internal.DiagramDebugOptions;
import org.eclipse.gmf.runtime.diagram.core.internal.DiagramPlugin;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

/**
 * Removes all bookmark(s) of a supplied object.
 * 
 * @@author satif
 */
public class RemoveBookmarkCommand extends AbstractTransactionalCommand {
	
	private Set bookmarks;
	
	/**
	 * constructor
	 * 
     * @@param editingDomain 	the editing domain
	 * @@param label 			the command label
	 * @@param bookmarks			the <code>Set</code> of <code>IMarker</code>s to delete
	 */
	public RemoveBookmarkCommand(TransactionalEditingDomain editingDomain, String label, Set bookmarks) {
		super(editingDomain, label, null);
		this.bookmarks = bookmarks;	
	}

	/**
	 * Deletes the <code>Set</code> of bookmarks 
	 */
	protected void deleteBookmarks() {
		if (getBookmarkedObjects() == null) 
			return;
		
		Iterator iterBookmarks = getBookmarkedObjects().iterator();
		
		while (iterBookmarks.hasNext()) {
			Object oBookmark = iterBookmarks.next();
			
			if (oBookmark instanceof IMarker) {
				try {
					((IMarker)oBookmark).delete();
				} catch (CoreException e) {
					Trace.catching(DiagramPlugin.getInstance(), DiagramDebugOptions.EXCEPTIONS_CATCHING, 
							getClass(), "deleteBookmarks", e); //$NON-NLS-1$
					Log.error(DiagramPlugin.getInstance(), IStatus.ERROR, "deleteBookmarks"); //$NON-NLS-1$
				}
			}
		}
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand#doExecuteWithResult(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.core.runtime.IAdaptable)
	 */
	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) 
		throws ExecutionException {
		
		deleteBookmarks();
		
		return CommandResult.newOKCommandResult();
	}

	/**
	 * @@return <code>Set</code> of bookmarks to be deleted.
	 */
	public Set getBookmarkedObjects() {
		return bookmarks;
	}

	/**
	 * @@param bookmarks set the <code>Set</code> of bookmarks to be deleted.
	 */
	public void setBookmarkedObjects(Set bookmarks) {
		this.bookmarks = bookmarks;
	}
}
@


1.1
log
@file RemoveBookmarkCommand.java was initially added on branch R1_0_maintenance.
@
text
@d1 99
@


1.1.2.1
log
@[150982] gmf_R1_0_maintenance syedatif 060811 Bookmark view not sync with diagram eidtor
@
text
@a0 99
/******************************************************************************
 * Copyright (c) 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
package org.eclipse.gmf.runtime.diagram.core.commands;

import java.util.Iterator;
import java.util.Set;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.resources.IMarker;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.eclipse.gmf.runtime.diagram.core.internal.DiagramDebugOptions;
import org.eclipse.gmf.runtime.diagram.core.internal.DiagramPlugin;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

/**
 * Removes all bookmark(s) of a supplied object.
 * 
 * @@author satif
 */
public class RemoveBookmarkCommand extends AbstractTransactionalCommand {
	
	private Set bookmarks;
	
	/**
	 * constructor
	 * 
     * @@param editingDomain 	the editing domain
	 * @@param label 			the command label
	 * @@param bookmarks			the <code>Set</code> of <code>IMarker</code>s to delete
	 */
	public RemoveBookmarkCommand(TransactionalEditingDomain editingDomain, String label, Set bookmarks) {
		super(editingDomain, label, null);
		this.bookmarks = bookmarks;	
	}

	/**
	 * Deletes the <code>Set</code> of bookmarks 
	 */
	protected void deleteBookmarks() {
		if (getBookmarkedObjects() == null) 
			return;
		
		Iterator iterBookmarks = getBookmarkedObjects().iterator();
		
		while (iterBookmarks.hasNext()) {
			Object oBookmark = iterBookmarks.next();
			
			if (oBookmark instanceof IMarker) {
				try {
					((IMarker)oBookmark).delete();
				} catch (CoreException e) {
					Trace.catching(DiagramPlugin.getInstance(), DiagramDebugOptions.EXCEPTIONS_CATCHING, 
							getClass(), "deleteBookmarks", e); //$NON-NLS-1$
					Log.error(DiagramPlugin.getInstance(), IStatus.ERROR, "deleteBookmarks"); //$NON-NLS-1$
				}
			}
		}
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand#doExecuteWithResult(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.core.runtime.IAdaptable)
	 */
	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) 
		throws ExecutionException {
		
		deleteBookmarks();
		
		return CommandResult.newOKCommandResult();
	}

	/**
	 * @@return <code>Set</code> of bookmarks to be deleted.
	 */
	public Set getBookmarkedObjects() {
		return bookmarks;
	}

	/**
	 * @@param bookmarks set the <code>Set</code> of bookmarks to be deleted.
	 */
	public void setBookmarkedObjects(Set bookmarks) {
		this.bookmarks = bookmarks;
	}
}
@

