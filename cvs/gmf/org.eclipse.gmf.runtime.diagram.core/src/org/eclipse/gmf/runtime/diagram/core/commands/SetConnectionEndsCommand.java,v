head	1.4;
access;
symbols
	v20081020-0700:1.4
	v20081015-1925:1.4
	v20081015-1755:1.2.8.2
	v20081008-1925:1.3
	v20081008-1755:1.2.8.1
	v20080903-1520:1.2
	v20080903-1510:1.2
	v20080807-1333:1.2
	v20080807-1325:1.2
	v20080731-1520:1.2
	v20080725-1738:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.8
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20080328-1605:1.2
	v20080222-1200:1.2
	v20080107-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070915-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.6
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	bugzilla111892_group_support:1.2.0.4
	Root_bugzilla111892_group_support:1.2
	v20070420-1000:1.2
	v20070405-2000:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061027-1200:1.2
	v20061013-1330:1.2
	v20060919-0800:1.2
	v20060907-1100:1.2
	M1_20:1.2
	v20060831-1500:1.2
	v20060817-1500:1.2
	v20060810-1700:1.2
	v20060803-1200:1.2
	v20060728-0500:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2008.10.09.20.07.09;	author aboyko;	state Exp;
branches;
next	1.3;
commitid	1b2e448ee646c4567;

1.3
date	2008.10.04.01.27.18;	author ahunter;	state Exp;
branches;
next	1.2;
commitid	2a7df48e6c6764567;

1.2
date	2006.02.13.19.12.29;	author ldamus;	state Exp;
branches
	1.2.8.1;
next	1.1;

1.1
date	2005.11.02.23.29.21;	author sshaw;	state Exp;
branches;
next	;

1.2.8.1
date	2008.10.04.01.14.00;	author ahunter;	state Exp;
branches;
next	1.2.8.2;
commitid	3738a48e6c3584567;

1.2.8.2
date	2008.10.09.20.05.37;	author aboyko;	state Exp;
branches;
next	;
commitid	1b16d48ee64104567;


desc
@@


1.4
log
@[250338] gmf_head aboyko 081009 [Commands] NPE in SetConnectionEndsCommand#getAffectedFiles()
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.core.commands;

import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.View;

/**
 * Command that sets a connections end points.
 * 
 * @@author melaasar
 * 
 */
public class SetConnectionEndsCommand
	extends AbstractTransactionalCommand {

	private IAdaptable edgeAdaptor;

	private IAdaptable newSourceAdaptor;

	private IAdaptable newTargetAdaptor;
	
	private List affectedFiles;

	/**
	 * constructor
	 * 
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param label
	 *            the command label
	 */
	public SetConnectionEndsCommand(TransactionalEditingDomain editingDomain, String label) {
		super(editingDomain, label, null);
	}

	public List getAffectedFiles() {
		if (affectedFiles == null) {
			View view = (View) edgeAdaptor.getAdapter(View.class);
			if (view != null) {
				affectedFiles = getWorkspaceFiles(view);
			} else {
				affectedFiles = super.getAffectedFiles();
			}			
		}
		return affectedFiles;
	}
	
	/**
	 * gets the edge adaptor.
	 * 
	 * @@return the edge adapter
	 */
	public IAdaptable getEdgeAdaptor() {
		return edgeAdaptor;
	}

	/**
	 * gets the new source adaptor.
	 * 
	 * @@return new source adaptor.
	 */
	public IAdaptable getNewSourceAdaptor() {
		return newSourceAdaptor;
	}

	/**
	 * gets the new target adaptor.
	 * 
	 * @@return the new target adaptor.
	 */
	public IAdaptable getNewTargetAdaptor() {
		return newTargetAdaptor;
	}

	/**
	 * Sets the edge adaptor.
	 * 
	 * @@param edgeAdaptor
	 *            the edgeAdaptor to set
	 */
	public void setEdgeAdaptor(IAdaptable edgeAdaptor) {
		this.edgeAdaptor = edgeAdaptor;
	}

	/**
	 * Sets the new source adaptor.
	 * 
	 * @@param newSourceAdaptor
	 *            The newSourceAdaptor to set
	 */
	public void setNewSourceAdaptor(IAdaptable newSourceAdaptor) {
		this.newSourceAdaptor = newSourceAdaptor;
	}

	/**
	 * Sets the new target adaptor.
	 * 
	 * @@param newTargetAdaptor
	 *            The newTargetAdaptor to set
	 */
	public void setNewTargetAdaptor(IAdaptable newTargetAdaptor) {
		this.newTargetAdaptor = newTargetAdaptor;
	}

	protected CommandResult doExecuteWithResult(
            IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {
        
		assert null != edgeAdaptor : "Null child in SetConnectionEndsCommand";//$NON-NLS-1$

		Edge edge = (Edge) getEdgeAdaptor().getAdapter(Edge.class);
		assert null != edge : "Null edge in SetConnectionEndsCommand";//$NON-NLS-1$

		if (getNewSourceAdaptor() != null) {
			View newSourceView = (View) getNewSourceAdaptor().getAdapter(
				View.class);
			edge.setSource(newSourceView);
		}
		if (getNewTargetAdaptor() != null) {
			View newTargetView = (View) getNewTargetAdaptor().getAdapter(
				View.class);
			edge.setTarget(newTargetView);
		}

		setEdgeAdaptor(null);
		setNewSourceAdaptor(null);
		setNewTargetAdaptor(null);

		return CommandResult.newOKCommandResult();
	}

}
@


1.3
log
@[248026] gmf-head wdiu 081003 Memory leak in SetConnectionEndsCommand
@
text
@d39 2
d55 9
a63 4
		View view = (View) edgeAdaptor.getAdapter(View.class);
		if (view != null)
			return getWorkspaceFiles(view);
		return super.getAffectedFiles();
d65 1
a65 1

@


1.2
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d135 5
@


1.2.8.1
log
@[248026] gmf_R2_1_maintenance wdiu 081003 Memory leak in SetConnectionEndsCommand
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2008 IBM Corporation and others.
a134 5

		setEdgeAdaptor(null);
		setNewSourceAdaptor(null);
		setNewTargetAdaptor(null);

@


1.2.8.2
log
@[250338] gmf_R2_1_maintenance aboyko 081009 [Commands] NPE in SetConnectionEndsCommand#getAffectedFiles()
@
text
@a38 2
	
	private List affectedFiles;
d53 4
a56 9
		if (affectedFiles == null) {
			View view = (View) edgeAdaptor.getAdapter(View.class);
			if (view != null) {
				affectedFiles = getWorkspaceFiles(view);
			} else {
				affectedFiles = super.getAffectedFiles();
			}			
		}
		return affectedFiles;
d58 1
a58 1
	
@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d14 1
a14 1
import java.util.Collection;
d16 1
d19 1
d21 1
a21 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d32 1
a32 1
	extends AbstractModelCommand {
d43 2
d48 2
a49 2
	public SetConnectionEndsCommand(String label) {
		super(label, null);
d52 1
a52 6
	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getAffectedObjects()
	 */
	public Collection getAffectedObjects() {
d55 2
a56 2
			return getWorkspaceFilesFor(view);
		return super.getAffectedObjects();
d116 4
a119 6
	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d135 1
a135 1
		return newOKCommandResult();
@

