head	1.8;
access;
symbols
	v20081020-0700:1.8
	v20081015-1925:1.8
	v20081015-1755:1.8
	v20081008-1925:1.8
	v20081008-1755:1.8
	v20080903-1520:1.8
	v20080903-1510:1.8
	v20080807-1333:1.8
	v20080807-1325:1.8
	v20080731-1520:1.8
	v20080725-1738:1.8
	v20080722-1827:1.8
	R2_1_maintenance:1.8.0.8
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080425-1959:1.8
	v20080328-1605:1.8
	v20080222-1200:1.8
	v20080107-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070915-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.6
	R2_0:1.8
	R4_20:1.8
	RC3_20:1.8
	v20070601-1400:1.8
	v20070518-1300:1.8
	bugzilla111892_group_support:1.8.0.4
	Root_bugzilla111892_group_support:1.8
	v20070420-1000:1.8
	v20070405-2000:1.8
	v20070330-1300:1.8
	v20070208-1800:1.8
	M4_20:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061027-1200:1.8
	v20061013-1330:1.8
	v20060919-0800:1.8
	v20060907-1100:1.8
	M1_20:1.8
	v20060831-1500:1.8
	v20060817-1500:1.8
	v20060810-1700:1.8
	v20060803-1200:1.8
	v20060728-0500:1.8
	v20060721-1130:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060519-0800:1.8
	v20060512-1000:1.8
	I20060512-1000:1.8
	I20060505-1400:1.8
	I20060428-1300:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.6
	I20060209-1815:1.6
	I20060203-0830:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051201-1800:1.6
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.4;
locks; strict;
comment	@# @;


1.8
date	2006.03.01.22.49.10;	author cmahoney;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.13.19.12.29;	author ldamus;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.25.19.37.54;	author cmahoney;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.02.23.29.21;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.12.21.24.26;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.15.48.40;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.50;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.47;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Bugzilla#129803 gmf_head cmahoney 060301 Deleting node leaves connection connected to space
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.core.commands;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.diagram.core.internal.l10n.DiagramCoreMessages;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.notation.View;

/**
 * A command to add a view to a another view at a given index
 * 
 * @@author melaasar
 */
public class AddCommand extends AbstractTransactionalCommand {

	private IAdaptable parent;
	private IAdaptable child;
	private int index;

	/**
     * Creates a new <code>AddCommand</code>
     * 
     * @@param editingDomain
     *            the editing domain through which model changes are made
     * @@param parent
     *            The parent view adapter
     * @@param child
     *            The child view adapter
     */
	public AddCommand(TransactionalEditingDomain editingDomain, IAdaptable parent, IAdaptable child) {
		this(editingDomain, parent, child, ViewUtil.APPEND);
	}
	
	/**
	 * Creates a new <code>AddCommand</code>
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param parent The parent view adapter
	 * @@param child The child view adapter
	 * @@param index the child insertion index
	 */
	public AddCommand(TransactionalEditingDomain editingDomain, IAdaptable parent, IAdaptable child, int index) {
		super(editingDomain,
            DiagramCoreMessages.AddCommand_Label, null);
        assert null != parent : "Null parent in AddCommand";//$NON-NLS-1$
		assert null != child : "Null child in AddCommand";//$NON-NLS-1$		
		this.parent = parent;
		this.child = child;
		this.index = index;
	}
    
    public List getAffectedFiles() {
        View view = (View) parent.getAdapter(View.class);
        
        if (view != null) {
            List result = new ArrayList();
            IFile file = WorkspaceSynchronizer.getFile(view.eResource());
            
            if (file != null) {
                result.add(file);
            }
            return result;
        }
        
        return super.getAffectedFiles();
    }

	/** 
	 * executes the command; which will get the child and the containaer from
	 * the <code>IAdaptable<code> and then insert the child at the given index
	 * in the containers child list.
	 */
	protected CommandResult doExecuteWithResult(IProgressMonitor monitor,
            IAdaptable info)
        throws ExecutionException {
        
		View childView = (View) child.getAdapter(View.class);
		View parentView = (View) parent.getAdapter(View.class);
		if (index==ViewUtil.APPEND)
			parentView.insertChild(childView);
		else
			parentView.insertChildAt(childView, index);
		return CommandResult.newOKCommandResult();
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getLabel()
	 */
	public String getLabel() {
		return DiagramCoreMessages.AddCommand_Label;
	}

}
@


1.7
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d22 1
a26 1
import org.eclipse.gmf.runtime.emf.core.util.EObjectUtil;
d77 1
a77 1
            IFile file = EObjectUtil.getWorkspaceFile(view);
@


1.6
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d14 2
a15 1
import java.util.Collection;
d17 2
d21 1
d25 2
a26 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d34 1
a34 1
public class AddCommand extends AbstractModelCommand{
d41 11
a51 6
	 * Creates a new <code>AddCommand</code>
	 * @@param parent The parent view adapter
	 * @@param child The child view adapter
	 */
	public AddCommand(IAdaptable parent, IAdaptable child) {
		this(parent, child, ViewUtil.APPEND);
d56 2
d62 4
a65 3
	public AddCommand(IAdaptable parent, IAdaptable child, int index) {
		super(DiagramCoreMessages.AddCommand_Label, null);
		assert null != parent : "Null parent in AddCommand";//$NON-NLS-1$
d71 16
a86 10
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getAffectedObjects()
	 */
	public Collection getAffectedObjects() {
		View view = (View) parent.getAdapter(View.class);
		if (view != null)
			return getWorkspaceFilesFor(view);
		return super.getAffectedObjects();
	}
a91 1
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
d93 4
a96 1
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d103 1
a103 1
		return newOKCommandResult();
@


1.5
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d19 1
a19 1
import org.eclipse.gmf.runtime.diagram.core.internal.l10n.DiagramResourceManager;
d51 1
a51 1
		super(DiagramResourceManager.getI18NString("AddCommand.Label"), null); //$NON-NLS-1$
d89 1
a89 1
		return DiagramResourceManager.getI18NString("AddCommand.Label"); //$NON-NLS-1$
@


1.4
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a17 1

d19 1
a19 1
import org.eclipse.gmf.runtime.diagram.core.internal.l10n.Messages;
d51 1
a51 1
		super(Messages.getString("AddCommand.Label"), null); //$NON-NLS-1$
d89 1
a89 1
		return Messages.getString("AddCommand.Label"); //$NON-NLS-1$
@


1.3
log
@Bugzilla109092 : rmp_head mmostafa 050912 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d24 1
a24 1
 * A command to add a view to a parent view at a given index
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d21 1
a21 1
import com.ibm.xtools.notation.View;
@

