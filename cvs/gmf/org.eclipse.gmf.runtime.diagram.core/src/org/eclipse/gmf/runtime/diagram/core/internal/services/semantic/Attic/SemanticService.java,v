head	1.6;
access;
symbols
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20080903-1520:1.6
	v20080731-1520:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051201-1800:1.4
	I20051124-2000:1.4
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.6
date	2006.02.20.18.40.41;	author ldamus;	state dead;
branches;
next	1.5;

1.5
date	2005.12.12.16.49.32;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.21.18.25.41;	author mmostafa;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.04.20.30.46;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.24.26;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.49;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[124928] gmf_head ldamus 060220 SemanticService should be deleted
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.core.internal.services.semantic;

import java.util.List;

import org.eclipse.core.runtime.IConfigurationElement;
import org.eclipse.gmf.runtime.common.core.command.ICommand;
import org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.core.service.Service;
import org.eclipse.gmf.runtime.diagram.core.internal.DiagramPlugin;

/**
 * A service for manipulating the semantic model by returning commands
 * 
 * @@author melaasar
 * 
 * @@deprecated Use the Element Type API
 *             {@@link org.eclipse.gmf.runtime.emf.type.core.IElementType#getEditCommand(IEditCommandRequest)}
 *             to get semantic commands.
 */
public class SemanticService extends Service implements ISemanticProvider {

	/**
	 * A descriptor for <code>ISemanticProvider</code> defined
	 * by a configuration element.
	 */
	protected static class ProviderDescriptor
		extends Service.ProviderDescriptor {

		/** the provider configuration parsed from XML */
		private SemanticProviderConfiguration providerConfiguration;

		/**
		 * Constructs a <code>ISemanticProvider</code> descriptor for
		 * the specified configuration element.
		 * 
		 * @@param element The configuration element describing the provider.
		 */
		public ProviderDescriptor(IConfigurationElement element) {
			super(element);

			this.providerConfiguration =
				SemanticProviderConfiguration.parse(element);
			assert null != providerConfiguration : "Null providerConfiguration in ProviderDescriptor";//$NON-NLS-1$			
		}

		/**
		 * @@see org.eclipse.gmf.runtime.common.core.service.IProvider#provides(org.eclipse.gmf.runtime.common.core.service.IOperation)
		 */
		public boolean provides(IOperation operation) {
			if (!policyInitialized){
				policy = getPolicy();
				policyInitialized = true;
			}
			if (policy != null)
				return policy.provides(operation);
			if (provider == null) {
				if (isSupportedInExtention(operation)) {
					providerConfiguration = null;
					return getProvider().provides(operation);
				}
				return false;
			}
			return getProvider().provides(operation);
		}

		/**
		 * Cheks if the operation is supported by the XML extension
		 * @@param operation
		 * @@return
		 */
		private boolean isSupportedInExtention(IOperation operation) {
			if (operation instanceof GetCommandOperation) {
				GetCommandOperation o = (GetCommandOperation) operation;
				SemanticRequest request = o.getSemanticRequest();

				return providerConfiguration.supports(request);
			}
			return false;
		}

	}

	/**
	 * The singleton instance of the semantic service.
	 */
	private final static SemanticService instance = new SemanticService();

	static {
		instance.configureProviders(DiagramPlugin.getPluginId(), "semanticProviders"); //$NON-NLS-1$
	}

	/**
	 * Retrieves the singleton instance of the semantic service.
	 * 
	 * @@return The semantic service singleton.
	 */
	public static SemanticService getInstance() {
		return instance;
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.core.service.Service#newProviderDescriptor(org.eclipse.core.runtime.IConfigurationElement)
	 */
	protected Service.ProviderDescriptor newProviderDescriptor(
		IConfigurationElement element) {
		return new ProviderDescriptor(element);
	}

	/**
	 * Executes the specified operation using the FIRST execution
	 * strategy.
	 * @@return The result of executing the model operation.
	 * @@param operation The model operation to be executed.
	 */
	private Object execute(IOperation operation) {
		List results = execute(ExecutionStrategy.FIRST, operation);
		return results.isEmpty() ? null : results.get(0);
	}
	
	/**
	 * @@see org.eclipse.gmf.runtime.diagram.core.internal.services.semantic.ISemanticProvider#getCommand(SemanticRequest, ModelOperationContext)
	 */
	public ICommand getCommand(
		SemanticRequest semanticRequest) {
		return (ICommand) execute(
			new GetCommandOperation(semanticRequest));
	}
	
}
@


1.5
log
@bugzilla 110316 gmf-head 051212 Compiler warning count should be 0 - runtime diagram layer
@
text
@@


1.4
log
@bugzilla 117343 gmf-head  mmostafa 051121 getPolicy on the Service class get called more than 500,000 times
@
text
@a21 1
import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;
@


1.3
log
@Bugzilla 110635 gmf_head keithc 051004 Delay configuration of services
@
text
@d63 6
a68 2
			if (getPolicy() != null)
				return getPolicy().provides(operation);
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a16 1

d21 1
d97 4
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

