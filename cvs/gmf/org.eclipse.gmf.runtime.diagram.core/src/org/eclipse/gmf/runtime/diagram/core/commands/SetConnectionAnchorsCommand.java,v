head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20081015-1925:1.2
	v20081015-1755:1.2
	v20081008-1925:1.2
	v20081008-1755:1.2
	v20080903-1520:1.2
	v20080903-1510:1.2
	v20080807-1333:1.2
	v20080807-1325:1.2
	v20080731-1520:1.2
	v20080725-1738:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.8
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20080328-1605:1.2
	v20080222-1200:1.2
	v20080107-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070915-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.6
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	bugzilla111892_group_support:1.2.0.4
	Root_bugzilla111892_group_support:1.2
	v20070420-1000:1.2
	v20070405-2000:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061027-1200:1.2
	v20061013-1330:1.2
	v20060919-0800:1.2
	v20060907-1100:1.2
	M1_20:1.2
	v20060831-1500:1.2
	v20060817-1500:1.2
	v20060810-1700:1.2
	v20060803-1200:1.2
	v20060728-0500:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.02.13.19.12.29;	author ldamus;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.02.23.29.21;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.core.commands;

import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.IdentityAnchor;
import org.eclipse.gmf.runtime.notation.NotationFactory;
import org.eclipse.gmf.runtime.notation.View;

/**
 * Sets a connections end points.
 * 
 * @@author melaasar
 * 
 */
public class SetConnectionAnchorsCommand
	extends AbstractTransactionalCommand {

	private IAdaptable edgeAdaptor;

	private String newSourceTerminal;

	private String newTargetTerminal;

	/**
	 * constructor
	 * 
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param label
	 *            the command label
	 */
	public SetConnectionAnchorsCommand(TransactionalEditingDomain editingDomain, String label) {
		super(editingDomain, label, null);
	}

	public List getAffectedFiles() {
		View view = (View) edgeAdaptor.getAdapter(View.class);
		if (view != null)
			return getWorkspaceFiles(view);
		return super.getAffectedFiles();
	}

	/**
	 * gets the edge adaptor.
	 * 
	 * @@return IAdaptable the edge adapter
	 */
	public IAdaptable getEdgeAdaptor() {
		return edgeAdaptor;
	}

	/**
	 * gets for the new source terminal.
	 * 
	 * @@return String the newSourceTerminal.
	 */
	public String getNewSourceTerminal() {
		return newSourceTerminal;
	}

	/**
	 * gets for the new target terminal.
	 * 
	 * @@return String the newTargetTerminal
	 */
	public String getNewTargetTerminal() {
		return newTargetTerminal;
	}

	/**
	 * Sets the edge adaptor.
	 * 
	 * @@param edgeAdaptor
	 *            The edgeAdaptor to set
	 */
	public void setEdgeAdaptor(IAdaptable edgeAdaptor) {
		this.edgeAdaptor = edgeAdaptor;
	}

	/**
	 * Sets the new source terminal.
	 * 
	 * @@param newSourceTerminal
	 *            The new source terminal to set
	 */
	public void setNewSourceTerminal(String newSourceTerminal) {
		this.newSourceTerminal = newSourceTerminal;
	}

	/**
	 * Sets the new target terminal.
	 * 
	 * @@param newTargetTerminal
	 *            The new target terminal to set
	 */
	public void setNewTargetTerminal(String newTargetTerminal) {
		this.newTargetTerminal = newTargetTerminal;
	}

	protected CommandResult doExecuteWithResult(
            IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {
        
		assert null != edgeAdaptor : "Null child in SetConnectionAnchorsCommand";//$NON-NLS-1$		

		Edge edge = (Edge) getEdgeAdaptor().getAdapter(Edge.class);
		assert null != edge : "Null edge in SetConnectionAnchorsCommand";//$NON-NLS-1$		

		if (getNewSourceTerminal() != null) {
			if (getNewSourceTerminal().length() == 0)
				edge.setSourceAnchor(null);
			else {
				IdentityAnchor a = (IdentityAnchor) edge.getSourceAnchor();
				if (a == null)
					a = NotationFactory.eINSTANCE.createIdentityAnchor();
				a.setId(getNewSourceTerminal());
				edge.setSourceAnchor(a);
			}
		}
		if (getNewTargetTerminal() != null) {
			if (getNewTargetTerminal().length() == 0)
				edge.setTargetAnchor(null);
			else {
				IdentityAnchor a = (IdentityAnchor) edge.getTargetAnchor();
				if (a == null)
					a = NotationFactory.eINSTANCE.createIdentityAnchor();
				a.setId(getNewTargetTerminal());
				edge.setTargetAnchor(a);
			}

		}
		return CommandResult.newOKCommandResult();
	}

}
@


1.1
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
d14 1
a14 1
import java.util.Collection;
d16 1
d19 1
d21 1
a21 1
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
d34 1
a34 1
	extends AbstractModelCommand {
d45 2
d50 2
a51 2
	public SetConnectionAnchorsCommand(String label) {
		super(label, null);
d54 1
a54 6
	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.command.ICommand#getAffectedObjects()
	 */
	public Collection getAffectedObjects() {
d57 2
a58 2
			return getWorkspaceFilesFor(view);
		return super.getAffectedObjects();
d118 4
a121 6
	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
	 */
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d150 1
a150 1
		return newOKCommandResult();
@

