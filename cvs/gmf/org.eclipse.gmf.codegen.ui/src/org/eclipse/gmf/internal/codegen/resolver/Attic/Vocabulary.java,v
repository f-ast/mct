head	1.2;
access;
symbols
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.03.01.12.46.04;	author dstadnik;	state dead;
branches;
next	1.1;

1.1
date	2006.01.13.13.26.42;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.2
log
@#129892 Move graphdef and tooldef wizards from codegen.ui to bridge.ui plugin
@
text
@/*
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    dstadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.codegen.resolver;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class Vocabulary {

	private Set words = new HashSet();

	public void add(String[] words) {
		for (int i = 0; i < words.length; i++) {
			if (words[i] != null) {
				this.words.add(words[i].toLowerCase());
			}
		}
	}

	public void add(String word) {
		if (word != null) {
			words.add(word.toLowerCase());
		}
	}

	public boolean containsWords(String s) {
		s = s.toLowerCase();
		for (Iterator it = words.iterator(); it.hasNext();) {
			String word = (String) it.next();
			if (s.indexOf(word) >= 0) {
				return true;
			}
		}
		return false;
	}
}
@


1.1
log
@#112297 add structure resolver
@
text
@@

