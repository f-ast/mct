head	1.1;
access;
symbols
	v20080722-1827:1.1
	v20080716-1642:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080512-1200:1.1
	v20080417-1610:1.1
	v20080322-0000:1.1
	v20080222-1200:1.1
	v20071108-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070605-1400:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070520-1200:1.1
	v20070420-1000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2007.04.18.13.13.10;	author atikhomirov;	state Exp;
branches;
next	;
commitid	253a462619664567;


desc
@@


1.1
log
@[181187] akarjakina - Need a method to add extension models to gmfgen model
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.internal.codegen.popup.actions;

import org.eclipse.jface.action.IAction;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.wizard.WizardDialog;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.IObjectActionDelegate;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.IWorkbenchWizard;

public class AddExtensionModelAction implements IObjectActionDelegate {

	private IStructuredSelection mySelection;

	private IWorkbenchPart myPart;

	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
		myPart = targetPart;
	}

	public void selectionChanged(IAction action, ISelection selection) {
		mySelection = (IStructuredSelection) selection;
	}

	public void run(IAction action) {
		// Create the wizard
		IWorkbenchWizard wizard = createWizard();
		wizard.init(getWorkbench(), getSelection());
		
		// Create the wizard dialog
		WizardDialog dialog = new WizardDialog(getShell(), wizard);
		// Open the wizard dialog
		dialog.open();
	}
	
	protected IWorkbenchWizard createWizard() {
		return new GMFGenExtensionModelWizard();
	}

	private Shell getShell() {
		return myPart.getSite().getShell();
	}
	
	private IWorkbench getWorkbench() {
		return myPart.getSite().getWorkbenchWindow().getWorkbench();
	}

	private IStructuredSelection getSelection() {
		return mySelection;
	}
}
@
