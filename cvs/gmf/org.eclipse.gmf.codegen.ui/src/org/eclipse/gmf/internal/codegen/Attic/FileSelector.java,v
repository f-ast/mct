head	1.4;
access;
symbols
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.03.01.14.20.27;	author dstadnik;	state dead;
branches;
next	1.3;

1.3
date	2006.01.18.19.05.30;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.18.17.47.08;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.17.17.41.46;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.4
log
@#129930 move dashboard in separate plugin
@
text
@/*
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    dstadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.codegen;

import org.eclipse.core.resources.IContainer;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.jface.window.Window;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.dialogs.ResourceListSelectionDialog;

/**
 * File selection utility methods.
 * 
 * @@author dstadnik
 */
public class FileSelector {

	public static IFile selectFile(Shell shell, String description, IContainer rootElement, IFile selected) {
		return selectFile(shell, description, rootElement, selected, null);
	}

	public static IFile selectFile(Shell shell, String description, IContainer rootElement, IFile selected, final String fileExtension) {
		if (rootElement == null) {
			rootElement = ResourcesPlugin.getWorkspace().getRoot();
		}
		// final String fileName = selected == null || !selected.exists() ? "" : selected.getName();
		// ResourceSelectionDialog fsd = new ResourceSelectionDialog(shell, rootElement, description);
		ResourceListSelectionDialog fsd = new ResourceListSelectionDialog(shell, rootElement, IResource.FILE) {

			protected String adjustPattern() {
				String s = super.adjustPattern();
				if (s.equals("") && fileExtension != null) {
					s = "*." + fileExtension;
				}
				return s;
			}

			public void create() {
				super.create();
				refresh(true);
			}

			protected void updateOKState(boolean state) {
				super.updateOKState(true); // allow to select nothing
			}
		};
		fsd.setTitle(description);
		fsd.setAllowUserToToggleDerived(true);
		if (fsd.open() == Window.OK) {
			Object[] result = fsd.getResult();
			if (result != null && result.length > 0 && result[0] instanceof IFile) {
				selected = (IFile) result[0];
			} else {
				selected = null;
			}
		}
		return selected;
	}
}
@


1.3
log
@use advanced resource selection dialog
@
text
@@


1.2
log
@set created file names in dashboard
@
text
@d14 1
a14 2
import java.util.Collections;

d16 1
a17 1
import org.eclipse.core.runtime.IAdaptable;
d20 1
a20 1
import org.eclipse.ui.dialogs.ResourceSelectionDialog;
d29 5
a33 1
	public static IFile selectFile(Shell shell, String description, IAdaptable rootElement, IFile selected) {
d37 23
a59 4
		ResourceSelectionDialog fsd = new ResourceSelectionDialog(shell, rootElement, description);
		if (selected != null && selected.exists()) {
			fsd.setInitialElementSelections(Collections.singletonList(selected));
		}
d62 1
a62 1
			if (result.length > 0 && result[0] instanceof IFile) {
@


1.1
log
@#124173 provide gmf dashboard
@
text
@d18 1
d30 6
a35 3
	public static IFile selectFile(Shell shell, String description, IFile selected) {
		ResourceSelectionDialog fsd = new ResourceSelectionDialog(shell, ResourcesPlugin.getWorkspace().getRoot(), description);
		if (selected != null) {
@

