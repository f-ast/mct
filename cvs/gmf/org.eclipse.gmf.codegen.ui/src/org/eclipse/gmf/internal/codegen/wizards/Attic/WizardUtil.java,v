head	1.3;
access;
symbols
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	I20060227-1730:1.2
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.02.28.19.07.38;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.02.23.15.46.48;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.13.10.12.48;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Introduced separate plugin for Tooling UI, moved mapping wizard of #114186 to this plugin.
Wizard got some NLS, respect selection, open-created-model-in-editor improvements as well as aligned with recent gmfmap changes.
Plus, some refactorings to address user-prioritized strategies to select nodes/links doubled number of classes we had.
@
text
@/*
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.codegen.wizards;

import org.eclipse.core.resources.IFile;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EStructuralFeature;

/**
 * @@author dstadnik
 */
public class WizardUtil {

	private WizardUtil() {
	}

	public static String getDefaultFileName(IFile file, String extension) {
		String fileNameBase = file.getName();
		if (file.getFileExtension() != null) {
			fileNameBase = fileNameBase.substring(0, fileNameBase.length() - (file.getFileExtension().length() + 1));
		}
		String modelFilename = fileNameBase + "." + extension;
		for (int i = 1; file.getParent().findMember(modelFilename) != null; ++i) {
			modelFilename = fileNameBase + i + "." + extension;
		}
		return modelFilename;
	}

	public static String getCapName(EStructuralFeature feature) {
		EClass type = feature.getEContainingClass();
		String name = type.getName();
		if (feature.getName().length() > 0) {
			name += Character.toUpperCase(feature.getName().charAt(0));
		}
		if (feature.getName().length() > 1) {
			name += feature.getName().substring(1);
		}
		return name;
	}
}
@


1.2
log
@#126532 Allow to manually resolve domain entity into node or link in wizards that infer tooling and graph definitions from domain model
@
text
@@


1.1
log
@#123587 wizard for tooling definition
@
text
@d10 1
a10 1
 *    dstadnik - initial API and implementation
d15 2
d18 3
d37 12
@

