head	1.12;
access;
symbols
	v20080722-1827:1.12
	v20080716-1642:1.12
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080512-1200:1.11
	v20080417-1610:1.11
	v20080322-0000:1.10
	v20080222-1200:1.10
	v20071108-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070420-1000:1.9
	v20070405-2000:1.9
	v20070330-1300:1.8
	v20070228-2000:1.8
	v20070208-1800:1.8
	M4_20:1.8
	v20061222-1800:1.8
	v20061214-0000:1.8
	M3_20:1.7
	v20061117-0800:1.7
	v20061013-1330:1.7
	v20060919-0800:1.6
	M1_20:1.6
	v20060904-1500:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-1300:1.5
	v20060519-0800:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051201-1800:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.5
	v20051030:1.5
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.07.10.12.29.50;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	7c57487600bd4567;

1.11
date	2008.04.14.14.20.34;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	29fb480368324567;

1.10
date	2007.06.21.14.06.07;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	14b5467a85ce4567;

1.9
date	2007.04.05.20.56.27;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	46274615627a4567;

1.8
date	2006.11.22.17.35.57;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	124a45648a7d4567;

1.7
date	2006.09.06.18.22.33;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.26.14.05.01;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.06.18.58.20;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.06.15.56.17;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.06.13.47.27;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.04.18.28.24;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.29.07;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.12
log
@[217307] - "Add extension model" action: impossible use for additing nondeployed models
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Borland Software Corporation - initial API and implementation
 */
package org.eclipse.gmf.internal.codegen.popup.actions;

import java.io.IOException;
import java.util.Collections;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.IPath;
import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.ContentHandler;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.gmf.internal.bridge.genmodel.DiagramRunTimeModelTransformer;
import org.eclipse.gmf.internal.bridge.genmodel.DummyGenModel;
import org.eclipse.gmf.internal.bridge.genmodel.RuntimeGenModelAccess;
import org.eclipse.gmf.mappings.Mapping;
import org.eclipse.jface.action.IAction;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.IObjectActionDelegate;
import org.eclipse.ui.IWorkbenchPart;

public class CreateSpecificDiagramRunTimeModelAction implements IObjectActionDelegate {

	private IFile myMapFile;

	private IWorkbenchPart myPart;

	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
		myPart = targetPart;
	}

	public void run(IAction action) {
		final ResourceSetImpl resSet = new ResourceSetImpl();
		final Mapping m = (Mapping) resSet.getResource(getMapModelURI(), true).getContents().get(0);
		final String packName = myMapFile.getLocation().removeFileExtension().lastSegment();
		DiagramRunTimeModelTransformer t = new DiagramRunTimeModelTransformer(packName, getMapModelURI().appendSegment("diagramrt").toString());
		t.transform(m);
		EPackage drtModel = t.getResult();
		Resource drtEcoreModelRes = resSet.createResource(getDestEcoreURI(), ContentHandler.UNSPECIFIED_CONTENT_TYPE);
		URI genModelURI = getDestGenModelURI();
		Resource drtGenModelRes = Resource.Factory.Registry.INSTANCE.getFactory(genModelURI, ContentHandler.UNSPECIFIED_CONTENT_TYPE).createResource(genModelURI);
		resSet.getResources().add(drtGenModelRes);
		// Resource drtGenModelRes =
		// resSet.createResource(getDestGenModelURI());
		drtEcoreModelRes.getContents().add(drtModel);
		drtGenModelRes.getContents().add(createGenModel(drtModel));
		try {
			drtEcoreModelRes.save(Collections.EMPTY_MAP);
			drtGenModelRes.save(Collections.EMPTY_MAP);
		} catch (IOException ex) {
			ex.printStackTrace();
		}

	}

	private URI getDestEcoreURI() {
		IPath p = myMapFile.getFullPath();
		return URI.createPlatformResourceURI(p.removeLastSegments(1).append(p.removeFileExtension().lastSegment() + "-drt").addFileExtension("ecore").toString(), true);
	}

	private URI getDestGenModelURI() {
		IPath p = myMapFile.getFullPath();
		return URI.createPlatformResourceURI(p.removeLastSegments(1).append(p.removeFileExtension().lastSegment() + "-drt").addFileExtension("genmodel").toString(), true);
	}

	public void selectionChanged(IAction action, ISelection selection) {
		myMapFile = (IFile) ((IStructuredSelection) selection).getFirstElement();
	}

	private URI getMapModelURI() {
		return URI.createPlatformResourceURI(myMapFile.getFullPath().toString(), true);
	}

	protected Shell getShell() {
		return myPart.getSite().getShell();
	}

	private GenModel createGenModel(EPackage model) {
		GenModel genModel = new DummyGenModel(model, null).create();
		genModel.getForeignModel().add(model.eResource().getURI().toString());
		genModel.getUsedGenPackages().add(getDiagramRunTimeGenPackage());

		GenPackage genPackage = genModel.getGenPackages().get(0);
		genPackage.setPrefix(model.getName() + "DRT");
		return genModel;
	}

	private GenPackage getDiagramRunTimeGenPackage() {
		RuntimeGenModelAccess runtimeAccess = new RuntimeGenModelAccess();
		runtimeAccess.ensure();
		return runtimeAccess.genPackage();
	}
}@


1.11
log
@unused SupressWarnings
@
text
@d22 1
d53 1
a53 1
		Resource drtEcoreModelRes = resSet.createResource(getDestEcoreURI());
d55 1
a55 1
		Resource drtGenModelRes = Resource.Factory.Registry.INSTANCE.getFactory(genModelURI).createResource(genModelURI);
@


1.10
log
@fix copyright years
@
text
@a90 1
	@@SuppressWarnings("unchecked")
@


1.9
log
@deprecated map->genmodel transformation action removed
@
text
@d1 10
@


1.8
log
@Removing warnings
@
text
@a34 1
	@@SuppressWarnings("unchecked")
d87 1
a87 1
		GenPackage genPackage = (GenPackage)genModel.getGenPackages().get(0);
@


1.7
log
@refactor Create GenModel action, added support for automated .genmodel creation and alternative to launch EMF wizard to do the same
@
text
@d62 1
a62 1
		return URI.createPlatformResourceURI(p.removeLastSegments(1).append(p.removeFileExtension().lastSegment() + "-drt").addFileExtension("ecore").toString());
d67 1
a67 1
		return URI.createPlatformResourceURI(p.removeLastSegments(1).append(p.removeFileExtension().lastSegment() + "-drt").addFileExtension("genmodel").toString());
d75 1
a75 1
		return URI.createPlatformResourceURI(myMapFile.getFullPath().toString());
@


1.6
log
@no api packages, classes are for internal use only
@
text
@a8 1
import org.eclipse.emf.codegen.ecore.genmodel.GenModelFactory;
d15 1
d28 1
d35 1
d45 4
a48 3
        Resource drtGenModelRes = Resource.Factory.Registry.INSTANCE.getFactory(genModelURI).createResource(genModelURI);
        resSet.getResources().add(drtGenModelRes);
//		Resource drtGenModelRes = resSet.createResource(getDestGenModelURI());
d82 1
a82 3
	/**
	 * @@see org.eclipse.emf.codegen.ecore.Generator#run(java.lang.Object) (-ecore2GenModel key)
	 */
d84 7
a90 12
          GenModel genModel = GenModelFactory.eINSTANCE.createGenModel();
          genModel.getForeignModel().add(model.eResource().getURI().toString());
          genModel.initialize(Collections.singleton(model));
          GenPackage genPackage = (GenPackage)genModel.getGenPackages().get(0);
          genModel.setModelName(model.eResource().getURI().lastSegment());
          genModel.setModelPluginID(model.eResource().getURI().lastSegment());
          genModel.setModelDirectory("/" + model.eResource().getURI().lastSegment() + "/src/");

          genModel.getUsedGenPackages().add(getDiagramRunTimeGenPackage());
          // need different prefix to avoid name collisions with code generated for domain model
          genPackage.setPrefix(model.getName() + "DRT");
          return genModel;
@


1.5
log
@refactor GenModel access with dedicated hack to get Notation/Runtime GenModel
@
text
@d15 2
a16 2
import org.eclipse.gmf.bridge.genmodel.DiagramRunTimeModelTransformer;
import org.eclipse.gmf.bridge.genmodel.RuntimeGenModelAccess;
@


1.4
log
@correct URI for runtime/notation model
@
text
@a12 1
import org.eclipse.emf.ecore.plugin.EcorePlugin;
d16 1
a17 1
import org.eclipse.gmf.runtime.notation.NotationPackage;
d98 3
a100 4
		URI diagramRTGenModelURI = (URI) EcorePlugin.getEPackageNsURIToGenModelLocationMap().get(NotationPackage.eNS_URI);
		Resource r = new ResourceSetImpl().getResource(diagramRTGenModelURI, true);
		GenModel drtModel = (GenModel) r.getContents().get(0);
		return drtModel.findGenPackage(NotationPackage.eINSTANCE);
@


1.3
log
@correct URI for runtime/notation model
@
text
@d99 1
a99 1
		URI diagramRTGenModelURI = (URI) EcorePlugin.getEPackageNsURIToGenModelLocationMap().get(DIAGRAM_RT_URI);
a103 2

	private static final String DIAGRAM_RT_URI = "http://www.eclipse.org/gmf/1.5.1/Notation";
@


1.2
log
@get rid of old diagramrt, use o.e.gmf.diagram.notation instead
@
text
@d105 1
a105 1
	private static final String DIAGRAM_RT_URI = "http://www.eclipse.org/gmf/2005/diagramrt";
@


1.1
log
@*** empty log message ***
@
text
@a16 1
import org.eclipse.gmf.diagramrt.DiagramRTPackage;
d18 1
d102 1
a102 1
		return drtModel.findGenPackage(DiagramRTPackage.eINSTANCE);
@

