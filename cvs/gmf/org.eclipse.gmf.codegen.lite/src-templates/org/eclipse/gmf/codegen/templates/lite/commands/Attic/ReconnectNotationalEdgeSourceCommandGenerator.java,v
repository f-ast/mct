head	1.2;
access;
symbols
	v20080910-1520:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.09.01.16.14.08;	author atikhomirov;	state dead;
branches;
next	1.1;

1.1
date	2006.07.03.17.42.27;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[155040] bblajer - Common Lite runtime functionality moved to dedicated plugin
@
text
@package org.eclipse.gmf.codegen.templates.lite.commands;

import org.eclipse.gmf.common.codegen.*;

public class ReconnectNotationalEdgeSourceCommandGenerator
{
  protected static String nl;
  public static synchronized ReconnectNotationalEdgeSourceCommandGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    ReconnectNotationalEdgeSourceCommandGenerator result = new ReconnectNotationalEdgeSourceCommandGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL;
  protected final String TEXT_3 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ReconnectNotationalEdgeSourceCommand extends ";
  protected final String TEXT_4 = " {" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate final ";
  protected final String TEXT_5 = " edge;" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate final ";
  protected final String TEXT_6 = " newSource;" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_7 = " oldSource;" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ReconnectNotationalEdgeSourceCommand(";
  protected final String TEXT_8 = " edge, ";
  protected final String TEXT_9 = " newSource) {" + NL + "\t\tthis.edge = edge;" + NL + "\t\tthis.newSource = newSource;" + NL + "\t}" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean canExecute() {" + NL + "\t\treturn newSource != null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean canUndo() {" + NL + "\t\treturn oldSource != null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void execute() {" + NL + "\t\toldSource = edge.getSource();" + NL + "\t\tedge.setSource(newSource);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void redo() {" + NL + "\t\texecute();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void undo() {" + NL + "\t\tedge.setSource(oldSource);" + NL + "\t\toldSource = null;" + NL + "\t}" + NL + "}";
  protected final String TEXT_10 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];

    stringBuffer.append(TEXT_2);
    
importManager.emitPackageStatement(stringBuffer);
importManager.markImportLocation(stringBuffer);

    stringBuffer.append(TEXT_3);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.command.AbstractCommand"));
    stringBuffer.append(TEXT_4);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Edge"));
    stringBuffer.append(TEXT_5);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
    stringBuffer.append(TEXT_7);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Edge"));
    stringBuffer.append(TEXT_8);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
    stringBuffer.append(TEXT_9);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_10);
    return stringBuffer.toString();
  }
}
@


1.1
log
@#149298 Lite Generator: Make it possible to reroute links
@
text
@@

