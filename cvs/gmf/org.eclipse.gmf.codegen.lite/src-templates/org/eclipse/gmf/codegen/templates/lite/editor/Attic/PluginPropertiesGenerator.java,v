head	1.7;
access;
symbols
	v20080910-1520:1.7
	v20070103-0300:1.6
	M4_20:1.6
	v20061222-1800:1.5
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061013-1330:1.4
	v20061005-1700:1.2
	M1_20:1.3
	v20060904-1500:1.3
	v20060824-1600:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060620-0400:1.2
	v20060616-1400:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-1300:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2007.02.02.17.14.32;	author bblajer;	state dead;
branches;
next	1.6;
commitid	78d445c371764567;

1.6
date	2006.12.25.12.00.12;	author bblajer;	state Exp;
branches;
next	1.5;
commitid	430d458fbd4b4567;

1.5
date	2006.12.21.20.35.34;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	bee458af0104567;

1.4
date	2006.09.21.10.12.02;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.22.17.08.48;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.20.18.27.23;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.21.20.16;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[172664]: Provide audits and metrics for Lite diagrams (including view-based and RCP) + validation decorators + validation markers (for non-RCP case);
Several templates are rewritten with xpand;
lite-specific TextEmitter is back (otherwise importManager is sometimes passed to xpand templates)
@
text
@package org.eclipse.gmf.codegen.templates.lite.editor;

import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.emf.codegen.ecore.genmodel.*;
import java.util.*;

public class PluginPropertiesGenerator
{
  protected static String nl;
  public static synchronized PluginPropertiesGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    PluginPropertiesGenerator result = new PluginPropertiesGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "pluginName=";
  protected final String TEXT_2 = NL + "providerName=";
  protected final String TEXT_3 = NL + NL + "# gmf generator persistent region begin" + NL + "# gmf generator persistent region end" + NL;
  protected final String TEXT_4 = NL + "_UI_Menu_OpenURI_label=Open ";
  protected final String TEXT_5 = " Diagram &URI..." + NL + "_UI_Menu_OpenURI_description=Opens a ";
  protected final String TEXT_6 = " diagram loading it from a URI" + NL + "_UI_Menu_Open_label=&Open ";
  protected final String TEXT_7 = " Diagram..." + NL + "_UI_Menu_Open_description=Opens a ";
  protected final String TEXT_8 = " diagram" + NL + "" + NL + "_UI_";
  protected final String TEXT_9 = "_ActionSet_label=";
  protected final String TEXT_10 = " Diagram Action Set " + NL + "_UI_";
  protected final String TEXT_11 = "NewDiagramCommand=";
  protected final String TEXT_12 = " diagram" + NL;
  protected final String TEXT_13 = NL + "_UI_Perspective_label = ";
  protected final String TEXT_14 = " Diagram" + NL + "_UI_Application_title=";
  protected final String TEXT_15 = " Diagram Application " + NL + "_UI_Menu_File_label=&File" + NL + "_UI_Menu_New_label=&New" + NL + "_UI_Menu_Edit_label=&Edit" + NL + "_UI_Menu_Window_label=&Window" + NL + "_UI_Menu_Help_label=&Help" + NL + "_UI_Menu_About_label=";
  protected final String TEXT_16 = " Diagram &About..." + NL + "_UI_About_title = ";
  protected final String TEXT_17 = " Diagram Application" + NL + "_UI_About_text = ";
  protected final String TEXT_18 = " Diagram Application about box goes here.";
  protected final String TEXT_19 = NL + "###" + NL + "# Property Sheet";
  protected final String TEXT_20 = NL;
  protected final String TEXT_21 = NL + "tab.";
  protected final String TEXT_22 = "=";
  protected final String TEXT_23 = NL + "###";
  protected final String TEXT_24 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
GenPlugin genPlugin = (GenPlugin) argument;
final GenDiagram genDiagram = genPlugin.getEditorGen().getDiagram();
final GenModel genModel = genPlugin.getEditorGen().getDomainGenModel();
final boolean isRichClientPlatform = genPlugin.getEditorGen().getApplication() != null;

    stringBuffer.append(TEXT_1);
    stringBuffer.append(genPlugin.getName());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(genPlugin.getProvider());
    stringBuffer.append(TEXT_3);
    if (isRichClientPlatform) {
    stringBuffer.append(TEXT_4);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(genDiagram.getDiagramEditorUtilQualifiedClassName());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_10);
    stringBuffer.append(genDiagram.getDiagramEditorUtilQualifiedClassName());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_12);
    
	boolean shouldGenerateApplication = true;	/*XXX: option in gmfgen*/
	if (shouldGenerateApplication) {

    stringBuffer.append(TEXT_13);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_14);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_15);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_17);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_18);
    
	}
}

    if (genPlugin.getEditorGen().getPropertySheet() != null) {
	final GenPropertySheet propertySheet = genPlugin.getEditorGen().getPropertySheet();
    stringBuffer.append(TEXT_19);
    stringBuffer.append(TEXT_20);
    for (Iterator it = propertySheet.getTabs().iterator(); it.hasNext(); ) {
	final GenPropertyTab tab = (GenPropertyTab) it.next();
    stringBuffer.append(TEXT_21);
    stringBuffer.append(tab.getID());
    stringBuffer.append(TEXT_22);
    stringBuffer.append(tab.getLabel());
    }
    stringBuffer.append(TEXT_23);
    }
    stringBuffer.append(TEXT_24);
    return stringBuffer.toString();
  }
}
@


1.6
log
@[159567]: Use GenApplication element from gmfgen model to generate RCP code
Use as much of the runtime templates as possible (changes are isolated as aspects)
@
text
@@


1.5
log
@Tabbed property sheet provided for the lite runtime (if GenPropertySheet is not null);
IllegalStateException when closing editor fixed.
@
text
@d51 1
a51 1
final boolean isRichClientPlatform = genModel.isRichClientPlatform();
@


1.4
log
@[157859] bblajer - Diagram initialization from pre-existing domain models
@
text
@d5 1
d37 6
a42 1
  protected final String TEXT_19 = NL;
d95 2
d98 11
@


1.3
log
@[154689] bblajer - support merging of generated non-java files
@
text
@d21 16
a36 14
  protected final String TEXT_4 = NL + "_UI_Menu_OpenURI_label=Open Diagram &URI..." + NL + "_UI_Menu_OpenURI_description=Opens a ";
  protected final String TEXT_5 = " diagram loading it from a URI" + NL + "_UI_Menu_Open_label=&Open Diagram..." + NL + "_UI_Menu_Open_description=Opens a ";
  protected final String TEXT_6 = " diagram" + NL + "" + NL + "_UI_";
  protected final String TEXT_7 = "_ActionSet_label=";
  protected final String TEXT_8 = " Diagram Action Set " + NL + "_UI_";
  protected final String TEXT_9 = "NewDiagramCommand=";
  protected final String TEXT_10 = " diagram" + NL;
  protected final String TEXT_11 = NL + "_UI_Perspective_label = ";
  protected final String TEXT_12 = " Diagram" + NL + "_UI_Application_title=";
  protected final String TEXT_13 = " Diagram Application " + NL + "_UI_Menu_File_label=&File" + NL + "_UI_Menu_New_label=&New" + NL + "_UI_Menu_Edit_label=&Edit" + NL + "_UI_Menu_Window_label=&Window" + NL + "_UI_Menu_Help_label=&Help" + NL + "_UI_Menu_About_label=";
  protected final String TEXT_14 = " Diagram &About..." + NL + "_UI_About_title = ";
  protected final String TEXT_15 = " Diagram Application" + NL + "_UI_About_text = ";
  protected final String TEXT_16 = " Diagram Application about box goes here.";
  protected final String TEXT_17 = NL;
d58 1
a58 1
    stringBuffer.append(genDiagram.getDiagramEditorUtilQualifiedClassName());
d66 4
a73 4
    stringBuffer.append(TEXT_11);
    stringBuffer.append(genModel.getModelName());
    stringBuffer.append(TEXT_12);
    stringBuffer.append(genModel.getModelName());
d81 4
d89 1
a89 1
    stringBuffer.append(TEXT_17);
@


1.2
log
@[bblajer] #114200 Provide an option to generate RCP application - added RCP support for pure-GEF (lite) generator
@
text
@d20 1
a20 1
  protected final String TEXT_3 = NL;
@


1.1
log
@[bblajer] #136702 Code generation targeting pure-GEF runtime
@
text
@d4 1
d21 14
d39 6
a44 1
    GenPlugin genPlugin = (GenPlugin) argument;
d50 34
@

