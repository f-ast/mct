head	1.13;
access;
symbols
	v20080910-1520:1.13
	RC3_20:1.12
	v20070614-1400:1.12
	v20070608-1300:1.12
	v20070601-1400:1.11
	v20070525-1500:1.11
	v20070520-1200:1.11
	v20070518-1300:1.10
	v20070504-1000:1.10
	v20070427-0600:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070405-1100:1.9
	v20070403-1500:1.9
	v20070330-1300:1.9
	v20060330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070307-0700:1.9
	v20070228-2000:1.9
	v20070221-1500:1.9
	v20070208-1800:1.9
	v20070103-0300:1.8
	M4_20:1.8
	v20061222-1800:1.8
	v20061214-0000:1.8
	v20061120-1300:1.8
	M3_20:1.8
	v20061117-0800:1.8
	v20061013-1330:1.8
	v20061005-1700:1.5.2.1
	M1_20:1.6
	v20060904-1500:1.6
	v20060824-1600:1.5.2.1
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060620-0400:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.3
	v20060531-1730:1.2
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.13
date	2007.06.15.09.53.04;	author bblajer;	state dead;
branches;
next	1.12;
commitid	2a0c4672617d4567;

1.12
date	2007.06.04.16.20.30;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	17cf46643bca4567;

1.11
date	2007.05.20.12.55.36;	author mfeldman;	state Exp;
branches;
next	1.10;
commitid	7d1d465045114567;

1.10
date	2007.05.03.14.45.19;	author bblajer;	state Exp;
branches;
next	1.9;
commitid	510b4639f57c4567;

1.9
date	2007.01.25.16.57.56;	author ashatalin;	state Exp;
branches;
next	1.8;
commitid	274845b8e1934567;

1.8
date	2006.10.12.10.23.44;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.05.12.26.14;	author radvorak;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.09.14.34.54;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.14.13.56.41;	author radvorak;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2006.06.13.12.53.40;	author radvorak;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.05.21.08.32;	author radvorak;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.31.15.54.57;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.21.20.15;	author atikhomirov;	state Exp;
branches;
next	;

1.5.2.1
date	2006.08.24.12.09.01;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.13
log
@[192168]: Convert /providers/DomainElementInitializer.javajet lite template to Xpand
@
text
@package org.eclipse.gmf.codegen.templates.lite.providers;

import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.gmf.common.codegen.*;
import java.util.*;
import org.eclipse.emf.codegen.ecore.genmodel.*;

public class DomainElementInitializerGenerator
{
  protected static String nl;
  public static synchronized DomainElementInitializerGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    DomainElementInitializerGenerator result = new DomainElementInitializerGenerator();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * ";
  protected final String TEXT_2 = NL + " */";
  protected final String TEXT_3 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class DomainElementInitializer ";
  protected final String TEXT_4 = "{" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static interface IElementInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_5 = " instance);" + NL + "\t}" + NL;
  protected final String TEXT_6 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static IElementInitializer NULL_INITIALIZER = new IElementInitializer() {" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_7 = " instance) {" + NL + "\t\t}" + NL + "\t};" + NL;
  protected final String TEXT_8 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static IElementInitializer ";
  protected final String TEXT_9 = " = NULL_INITIALIZER;";
  protected final String TEXT_10 = NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic static final IElementInitializer ";
  protected final String TEXT_11 = " = new ObjectInitializer(";
  protected final String TEXT_12 = ") {";
  protected final String TEXT_13 = NL + "\t\tObjectInitializer ";
  protected final String TEXT_14 = "() {" + NL + "\t\t\treturn new ObjectInitializer(";
  protected final String TEXT_15 = ") {";
  protected final String TEXT_16 = NL + "\t\t \tprotected void init() {\t\t\t\t";
  protected final String TEXT_17 = "\t\t\t" + NL + "\t\t\t\tadd(createNewElementFeatureInitializer(";
  protected final String TEXT_18 = ", new ObjectInitializer[] {";
  protected final String TEXT_19 = NL + "\t\t\t\t\t";
  protected final String TEXT_20 = "(), ";
  protected final String TEXT_21 = NL + "\t\t\t\t}));";
  protected final String TEXT_22 = "\t\t\t" + NL + "\t\t\t\tadd(createExpressionFeatureInitializer(";
  protected final String TEXT_23 = ", ";
  protected final String TEXT_24 = "null";
  protected final String TEXT_25 = ".";
  protected final String TEXT_26 = "(";
  protected final String TEXT_27 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_28 = ", ";
  protected final String TEXT_29 = ")";
  protected final String TEXT_30 = ".";
  protected final String TEXT_31 = "(";
  protected final String TEXT_32 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_33 = ")";
  protected final String TEXT_34 = "new ";
  protected final String TEXT_35 = "(";
  protected final String TEXT_36 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_37 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_38 = " self = (";
  protected final String TEXT_39 = ")context;";
  protected final String TEXT_40 = "\t" + NL + "\t\t";
  protected final String TEXT_41 = " ";
  protected final String TEXT_42 = " = (";
  protected final String TEXT_43 = ")env.get(\"";
  protected final String TEXT_44 = "\"); //$NON-NLS-1$";
  protected final String TEXT_45 = NL + "\t\treturn ";
  protected final String TEXT_46 = ".";
  protected final String TEXT_47 = "(self";
  protected final String TEXT_48 = ", ";
  protected final String TEXT_49 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_50 = NL + "));";
  protected final String TEXT_51 = "\t\t\t}";
  protected final String TEXT_52 = NL + "\t\t\t\t}; // ";
  protected final String TEXT_53 = " ObjectInitializer" + NL + "\t\t\t}";
  protected final String TEXT_54 = NL + "\t\t}; // ";
  protected final String TEXT_55 = " ObjectInitializer";
  protected final String TEXT_56 = NL + "\t/** " + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic static abstract class ObjectInitializer implements IElementInitializer {" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */\t\t" + NL + "\t\tfinal ";
  protected final String TEXT_57 = " element;\t\t" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */\t\t" + NL + "\t\tprivate ";
  protected final String TEXT_58 = " featureInitializers = new ";
  protected final String TEXT_59 = "();" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tObjectInitializer(";
  protected final String TEXT_60 = " element) {" + NL + "\t\t\tthis.element = element;" + NL + "\t\t\tinit();" + NL + "\t\t}" + NL + "\t\t/**" + NL + "\t \t * @@generated" + NL + "\t \t */" + NL + "\t \tprotected abstract void init();\t\t\t\t\t\t\t" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprotected final FeatureInitializer add(FeatureInitializer initializer) {" + NL + "\t\t\tfeatureInitializers.add(initializer);" + NL + "\t\t\treturn initializer;" + NL + "\t\t}" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */\t\t" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_61 = " instance) {" + NL + "\t\t\tfor (";
  protected final String TEXT_62 = " it = featureInitializers.iterator(); it.hasNext();) {" + NL + "\t\t\t\tFeatureInitializer nextExpr = (FeatureInitializer)it.next();" + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\tnextExpr.init(instance);" + NL + "\t\t\t\t} catch(RuntimeException e) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_63 = ".getInstance().logError(\"Feature initialization failed\", e);\t//$NON-NLS-1$" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t} // end of ObjectInitializer" + NL + "\t" + NL + "\t/** " + NL + "\t * @@generated" + NL + "\t */" + NL + "\tinterface FeatureInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tvoid init(";
  protected final String TEXT_64 = " contextInstance);" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t\t" + NL + "\tstatic FeatureInitializer createNewElementFeatureInitializer(";
  protected final String TEXT_65 = " initFeature, ObjectInitializer[] newObjectInitializers) {" + NL + "\t\tfinal ";
  protected final String TEXT_66 = " feature = initFeature;" + NL + "\t\tfinal ObjectInitializer[] initializers = newObjectInitializers;" + NL + "\t\treturn new FeatureInitializer() {" + NL + "\t\t\tpublic void init(";
  protected final String TEXT_67 = " contextInstance) {" + NL + "\t\t\t\tfor (int i = 0; i < initializers.length; i++) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_68 = " newInstance = initializers[i].element.getEPackage().getEFactoryInstance().create(initializers[i].element);" + NL + "\t\t\t\t\tif(feature.isMany()) {" + NL + "\t\t\t\t\t\t((";
  protected final String TEXT_69 = ")contextInstance.eGet(feature)).add(newInstance);" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\tcontextInstance.eSet(feature, newInstance);" + NL + "\t\t\t\t\t}\t\t\t\t\t\t" + NL + "\t\t\t\t\tinitializers[i].initializeElement(newInstance);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t\t" + NL + "\tstatic FeatureInitializer createExpressionFeatureInitializer(";
  protected final String TEXT_70 = " initFeature, ";
  protected final String TEXT_71 = " valueExpression) {" + NL + "\t\tfinal ";
  protected final String TEXT_72 = " feature = initFeature;" + NL + "\t\tfinal ";
  protected final String TEXT_73 = " expression = valueExpression;" + NL + "\t\treturn new FeatureInitializer() {\t\t\t\t" + NL + "\t\t\tpublic void init(";
  protected final String TEXT_74 = " contextInstance) {" + NL + "\t\t\t\texpression.assignTo(feature, contextInstance);" + NL + "\t\t\t}" + NL + "\t\t};\t\t\t" + NL + "\t}";
  protected final String TEXT_75 = NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tstatic class ";
  protected final String TEXT_76 = " {";
  protected final String TEXT_77 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_78 = " ";
  protected final String TEXT_79 = "(";
  protected final String TEXT_80 = " self";
  protected final String TEXT_81 = ", ";
  protected final String TEXT_82 = " ";
  protected final String TEXT_83 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_84 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_85 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_86 = NL + "\t\t} //";
  protected final String TEXT_87 = NL;
  protected final String TEXT_88 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static class ";
  protected final String TEXT_89 = " {";
  protected final String TEXT_90 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tpublic static final ";
  protected final String TEXT_91 = " ";
  protected final String TEXT_92 = " = create";
  protected final String TEXT_93 = "();";
  protected final String TEXT_94 = NL;
  protected final String TEXT_95 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static ";
  protected final String TEXT_96 = " create";
  protected final String TEXT_97 = "() {";
  protected final String TEXT_98 = NL;
  protected final String TEXT_99 = " ";
  protected final String TEXT_100 = " = new ";
  protected final String TEXT_101 = "(3);";
  protected final String TEXT_102 = ".put(\"";
  protected final String TEXT_103 = "\", ";
  protected final String TEXT_104 = "); //$NON-NLS-1$";
  protected final String TEXT_105 = NL + "\t\t\t";
  protected final String TEXT_106 = " sourceExpression = ";
  protected final String TEXT_107 = "null";
  protected final String TEXT_108 = ".";
  protected final String TEXT_109 = "(";
  protected final String TEXT_110 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_111 = ", ";
  protected final String TEXT_112 = ")";
  protected final String TEXT_113 = ".";
  protected final String TEXT_114 = "(";
  protected final String TEXT_115 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_116 = ")";
  protected final String TEXT_117 = "new ";
  protected final String TEXT_118 = "(";
  protected final String TEXT_119 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_120 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_121 = " self = (";
  protected final String TEXT_122 = ")context;";
  protected final String TEXT_123 = "\t" + NL + "\t\t";
  protected final String TEXT_124 = " ";
  protected final String TEXT_125 = " = (";
  protected final String TEXT_126 = ")env.get(\"";
  protected final String TEXT_127 = "\"); //$NON-NLS-1$";
  protected final String TEXT_128 = NL + "\t\treturn ";
  protected final String TEXT_129 = ".";
  protected final String TEXT_130 = "(self";
  protected final String TEXT_131 = ", ";
  protected final String TEXT_132 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_133 = "null";
  protected final String TEXT_134 = ";";
  protected final String TEXT_135 = NL;
  protected final String TEXT_136 = " ";
  protected final String TEXT_137 = " = new ";
  protected final String TEXT_138 = "(3);";
  protected final String TEXT_139 = ".put(\"";
  protected final String TEXT_140 = "\", ";
  protected final String TEXT_141 = "); //$NON-NLS-1$";
  protected final String TEXT_142 = NL + "\t\t\t";
  protected final String TEXT_143 = " targetExpression = ";
  protected final String TEXT_144 = "null";
  protected final String TEXT_145 = ".";
  protected final String TEXT_146 = "(";
  protected final String TEXT_147 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_148 = ", ";
  protected final String TEXT_149 = ")";
  protected final String TEXT_150 = ".";
  protected final String TEXT_151 = "(";
  protected final String TEXT_152 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_153 = ")";
  protected final String TEXT_154 = "new ";
  protected final String TEXT_155 = "(";
  protected final String TEXT_156 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_157 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_158 = " self = (";
  protected final String TEXT_159 = ")context;";
  protected final String TEXT_160 = "\t" + NL + "\t\t";
  protected final String TEXT_161 = " ";
  protected final String TEXT_162 = " = (";
  protected final String TEXT_163 = ")env.get(\"";
  protected final String TEXT_164 = "\"); //$NON-NLS-1$";
  protected final String TEXT_165 = NL + "\t\treturn ";
  protected final String TEXT_166 = ".";
  protected final String TEXT_167 = "(self";
  protected final String TEXT_168 = ", ";
  protected final String TEXT_169 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_170 = "null";
  protected final String TEXT_171 = ";" + NL + "\t\t\treturn new ";
  protected final String TEXT_172 = "(sourceExpression, targetExpression);" + NL + "\t\t}";
  protected final String TEXT_173 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate static final String OPPOSITE_END_VAR = \"oppositeEnd\"; //$NON-NLS-1$" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_174 = " srcEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_175 = " targetEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t\t" + NL + "\t\tpublic ";
  protected final String TEXT_176 = "(";
  protected final String TEXT_177 = " sourceEnd, ";
  protected final String TEXT_178 = " targetEnd) {" + NL + "\t\t\tthis.srcEndInv = sourceEnd;\t\t\t" + NL + "\t\t\tthis.targetEndInv = targetEnd;\t\t\t" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tpublic boolean canCreateLink(Object source, Object target, boolean isBackDirected) {" + NL + "\t\t\tif (source != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_179 = " sourceConstraint = isBackDirected ? targetEndInv : srcEndInv;" + NL + "\t\t\t\tif (sourceConstraint != null && !evaluate(sourceConstraint, source, target, false)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (target != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_180 = " targetConstraint = isBackDirected ? srcEndInv : targetEndInv;" + NL + "\t\t\t\tif (targetConstraint != null && !evaluate(targetConstraint, target, source, true)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\treturn true;" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static boolean evaluate(";
  protected final String TEXT_181 = " constraint, Object sourceEnd, Object oppositeEnd, boolean clearEnv) {" + NL + "\t\t\t";
  protected final String TEXT_182 = " evalEnv = ";
  protected final String TEXT_183 = ".singletonMap(OPPOSITE_END_VAR, oppositeEnd);\t\t\t" + NL + "\t\t\ttry {" + NL + "\t\t\t\tObject val = constraint.evaluate(sourceEnd, evalEnv);" + NL + "\t\t\t\treturn (val instanceof Boolean) ? ((Boolean) val).booleanValue() : false;" + NL + "\t\t\t} catch(Exception e) {\t" + NL + "\t\t\t\t";
  protected final String TEXT_184 = ".getInstance().logError(\"Link constraint evaluation error\", e); //$NON-NLS-1$" + NL + "\t\t\t\treturn false;" + NL + "\t\t\t}" + NL + "\t\t}";
  protected final String TEXT_185 = "\t\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class ";
  protected final String TEXT_186 = " {";
  protected final String TEXT_187 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_188 = " ";
  protected final String TEXT_189 = "(";
  protected final String TEXT_190 = " self";
  protected final String TEXT_191 = ", ";
  protected final String TEXT_192 = " ";
  protected final String TEXT_193 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_194 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_195 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_196 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_197 = " ";
  protected final String TEXT_198 = "(";
  protected final String TEXT_199 = " self";
  protected final String TEXT_200 = ", ";
  protected final String TEXT_201 = " ";
  protected final String TEXT_202 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_203 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_204 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_205 = NL + "\t} // ";
  protected final String TEXT_206 = "\t\t" + NL + "\t}";
  protected final String TEXT_207 = "\t" + NL + "}";
  protected final String TEXT_208 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];

    
String copyrightText = genDiagram.getEditorGen().getCopyrightText();
if (copyrightText != null && copyrightText.trim().length() > 0) {

    stringBuffer.append(TEXT_1);
    stringBuffer.append(copyrightText.replaceAll("\n", "\n * "));
    stringBuffer.append(TEXT_2);
    }
    
final String javaExprContainer = "JavaInitializers";
importManager.registerInnerClass(javaExprContainer);
final String javaConstraintsContainer = "JavaConstraints";
importManager.registerInnerClass(javaExprContainer);
importManager.registerInnerClass(genDiagram.getLinkCreationConstraintsClassName());

importManager.emitPackageStatement(stringBuffer);

importManager.markImportLocation(stringBuffer);

    stringBuffer.append(TEXT_3);
    /*XXX: class name should be customizable!*/
    stringBuffer.append(TEXT_4);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_5);
    
{	//start local block that separates initializers and constraints
boolean needsNullInitializer = false;
boolean needsObjectInitializer = false;
final GenExpressionProviderContainer expressionProviders = genDiagram.getEditorGen().getExpressionProviders();
final LinkedHashSet<GenFeatureValueSpec> javaInitializers = new LinkedHashSet<GenFeatureValueSpec>();
final Map __exprEnvVariables = Collections.EMPTY_MAP;
final String __javaOperationContainer = javaExprContainer; // place java expression methods here
for (Map.Entry<TypeModelFacet, GenCommonBase> next : genDiagram.getTypeModelFacet2GenBaseMap().entrySet()) {
	String id = next.getValue().getUniqueIdentifier();
	TypeModelFacet modelFacet = next.getKey();

	GenElementInitializer elementInitializer = modelFacet.getModelElementInitializer();
	if (elementInitializer instanceof GenFeatureSeqInitializer == false || expressionProviders == null) {
		if (!needsNullInitializer) {
			needsNullInitializer = true;

    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_7);
    
		}

    stringBuffer.append(TEXT_8);
    stringBuffer.append(id);
    stringBuffer.append(TEXT_9);
    
		continue;
	}
	needsObjectInitializer = true;
	GenFeatureSeqInitializer rootFtSeqInitializer = (GenFeatureSeqInitializer)modelFacet.getModelElementInitializer();
	javaInitializers.addAll(rootFtSeqInitializer.getJavaExpressionFeatureInitializers(expressionProviders));
	for(GenFeatureSeqInitializer nextFtSeqInitializer : rootFtSeqInitializer.getAllFeatureSeqInitializers()) {
		boolean isTopLevelObjInit = nextFtSeqInitializer == rootFtSeqInitializer;
		if(isTopLevelObjInit){

    stringBuffer.append(TEXT_10);
    stringBuffer.append(nextFtSeqInitializer.getInitializerFieldName(id));
    stringBuffer.append(TEXT_11);
    stringBuffer.append(nextFtSeqInitializer.getElementClassAccessor(importManager));
    stringBuffer.append(TEXT_12);
    		} else {
    stringBuffer.append(TEXT_13);
    stringBuffer.append(nextFtSeqInitializer.getInitializerFieldName(id));
    stringBuffer.append(TEXT_14);
    stringBuffer.append(nextFtSeqInitializer.getElementClassAccessor(importManager));
    stringBuffer.append(TEXT_15);
    		} 
    stringBuffer.append(TEXT_16);
    		for(GenFeatureInitializer nextFtInitializer : (List<GenFeatureInitializer>)nextFtSeqInitializer.getInitializers()) {
			String metaFeatureAccessor = nextFtSeqInitializer.getFeatureAccessor(nextFtInitializer, importManager);
			if(nextFtInitializer instanceof GenReferenceNewElementSpec) {
				GenReferenceNewElementSpec newElementSpec = (GenReferenceNewElementSpec)nextFtInitializer;

    stringBuffer.append(TEXT_17);
    stringBuffer.append(metaFeatureAccessor);
    stringBuffer.append(TEXT_18);
    				for(GenFeatureSeqInitializer newElemInit : (List<GenFeatureSeqInitializer>)newElementSpec.getNewElementInitializers()) { 
    stringBuffer.append(TEXT_19);
    stringBuffer.append(newElemInit.getInitializerFieldName(id));
    stringBuffer.append(TEXT_20);
    				} // end of newElementInitializers 
    stringBuffer.append(TEXT_21);
    			} // end of GenReferenceNewElementSpec
			else if(nextFtInitializer instanceof GenFeatureValueSpec) {
				String __outEnvVarName = ""; // no env to setup;
				GenClassifier __genExprContext = nextFtSeqInitializer.getElementClass();
				GenFeatureValueSpec __genValueExpression = (GenFeatureValueSpec)nextFtInitializer;

    stringBuffer.append(TEXT_22);
    stringBuffer.append(metaFeatureAccessor);
    stringBuffer.append(TEXT_23);
    
{ /*begin the scope*/
/*
ValueExpression __genValueExpression;
GenClassifier __genExprContext
java.util.Map __exprEnvVariables
String __outEnvVarName;
String __javaOperationContainer;
*/
	org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase __genExprProvider = (genDiagram.getEditorGen().getExpressionProviders() != null) ? genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) : null;
	String __ctxEClassifierAccess = importManager.getImportedName(__genExprContext.getGenPackage().getQualifiedPackageInterfaceName()) + ".eINSTANCE.get" + __genExprContext.getClassifierAccessorName()+"()";
	String __importedAbstractClass = __genExprProvider != null ? importManager.getImportedName(__genExprProvider.getContainer().getAbstractExpressionQualifiedClassName()) : null;

	if(__genExprProvider == null || __importedAbstractClass == null) {

    stringBuffer.append(TEXT_24);
    
	} else if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter) {
		org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter interpreter = (org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter)__genExprProvider;
		String __expressionAccessor = interpreter.getExpressionAccessor(__genValueExpression);
		String providerImportedClass = importManager.getImportedName(interpreter.getQualifiedClassName());
		if(!__exprEnvVariables.isEmpty()) {			

    stringBuffer.append(providerImportedClass);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(__expressionAccessor);
    stringBuffer.append(TEXT_26);
    stringBuffer.append(__genValueExpression.getBodyString());
    stringBuffer.append(TEXT_27);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_28);
    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_29);
    
		} else { 		

    stringBuffer.append(providerImportedClass);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(__expressionAccessor);
    stringBuffer.append(TEXT_31);
    stringBuffer.append(__genValueExpression.getBodyString());
    stringBuffer.append(TEXT_32);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_33);
    
		}
	} else if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider) { /*inlined java expression adapter*/
		String evalCtxQualifiedName = __genExprProvider.getQualifiedInstanceClassName(__genExprContext);
		String __exprJavaOperName = ((org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider)__genExprProvider).getOperationName(__genValueExpression);	


    stringBuffer.append(TEXT_34);
    stringBuffer.append(__importedAbstractClass);
    stringBuffer.append(TEXT_35);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_36);
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
    stringBuffer.append(TEXT_37);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_38);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_39);
    	
		for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
			String nextVariableName = (String)envVarIt.next();
			org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(nextVariableName);
			String qualifiedTypeName = __genExprProvider.getQualifiedInstanceClassName(nextVariableType);

    stringBuffer.append(TEXT_40);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_41);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_42);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_43);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_44);
    		} 
    stringBuffer.append(TEXT_45);
    
		if(__javaOperationContainer != null && __javaOperationContainer.length() > 0) { 
    stringBuffer.append(__javaOperationContainer);
    stringBuffer.append(TEXT_46);
    
		} 
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_47);
    
		for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();){
    stringBuffer.append(TEXT_48);
    stringBuffer.append((String)envVarIt.next());
    }
    stringBuffer.append(TEXT_49);
    }
    } /*end of scope*/
    stringBuffer.append(TEXT_50);
    
			} // end of GenFeatureValueSpec
		} // end of GenFeatureInitializer iteration

    stringBuffer.append(TEXT_51);
    		if(!isTopLevelObjInit) { 
    stringBuffer.append(TEXT_52);
    stringBuffer.append(nextFtSeqInitializer.getInitializerFieldName(id));
    stringBuffer.append(TEXT_53);
    		} // GenFeatureInitializer iteration
	} // All GenFeatureSeqInitializer iteration

    stringBuffer.append(TEXT_54);
    stringBuffer.append(rootFtSeqInitializer.getInitializerFieldName(id));
    stringBuffer.append(TEXT_55);
    
}
if (needsObjectInitializer) {

    stringBuffer.append(TEXT_56);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EClass"));
    stringBuffer.append(TEXT_57);
    stringBuffer.append(importManager.getImportedName("java.util.List"));
    stringBuffer.append(TEXT_58);
    stringBuffer.append(importManager.getImportedName("java.util.ArrayList"));
    stringBuffer.append(TEXT_59);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EClass"));
    stringBuffer.append(TEXT_60);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_61);
    stringBuffer.append(importManager.getImportedName("java.util.Iterator"));
    stringBuffer.append(TEXT_62);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_63);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_64);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
    stringBuffer.append(TEXT_65);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
    stringBuffer.append(TEXT_66);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_67);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_68);
    stringBuffer.append(importManager.getImportedName("java.util.Collection"));
    stringBuffer.append(TEXT_69);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
    stringBuffer.append(TEXT_70);
    stringBuffer.append(importManager.getImportedName(expressionProviders.getAbstractExpressionQualifiedClassName()));
    stringBuffer.append(TEXT_71);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
    stringBuffer.append(TEXT_72);
    stringBuffer.append(importManager.getImportedName(expressionProviders.getAbstractExpressionQualifiedClassName()));
    stringBuffer.append(TEXT_73);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_74);
    
	if(!javaInitializers.isEmpty()) {

    stringBuffer.append(TEXT_75);
    stringBuffer.append(javaExprContainer);
    stringBuffer.append(TEXT_76);
    
		for(GenFeatureValueSpec __genValueExpression : javaInitializers) {
			GenClassifier __genExprContext = __genValueExpression.getFeatureSeqInitializer().getElementClass();
			GenExpressionProviderBase provider = expressionProviders.getProvider(__genValueExpression);
			if(!(provider instanceof GenJavaExpressionProvider)) continue;
			String __genExprResultType = provider.getQualifiedTypeInstanceClassName(__genValueExpression.getFeature());

    
/* 
ValueExpression __genValueExpression
java.util.Map __exprEnvVariables
GenClassifier __genExprContext
GenClassifier || String/qualifiedClassName/__genExprResultType
*/
org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase __genExprProvider = (genDiagram.getEditorGen().getExpressionProviders() != null) ? genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) : null;
if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider) {
	String __importedAbstractExpr = importManager.getImportedName(__genExprProvider.getContainer().getAbstractExpressionQualifiedClassName());
	String evalCtxQualifiedName = __genExprProvider.getQualifiedInstanceClassName(__genExprContext);
	// support GenClassifier and also String based qualified java class name
	Object __genExprResultTypeObj = __genExprResultType;
	String __exprResultTypeQualifiedName = null;
	if(__genExprResultTypeObj instanceof String) 
		__exprResultTypeQualifiedName = (String)__genExprResultTypeObj;
	else if(__genExprResultTypeObj instanceof org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)
		__exprResultTypeQualifiedName = __genExprProvider.getQualifiedInstanceClassName((org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__genExprResultTypeObj);
	String __exprJavaOperName = ((org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider)__genExprProvider).getOperationName(__genValueExpression);

    stringBuffer.append(TEXT_77);
    stringBuffer.append(importManager.getImportedName(__exprResultTypeQualifiedName));
    stringBuffer.append(TEXT_78);
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_79);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_80);
    
	for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
		String __nextVarName = (String)envVarIt.next();
		org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(__nextVarName);
		String qualifiedTypeName = __genExprProvider.getQualifiedInstanceClassName(nextVariableType);

	
    stringBuffer.append(TEXT_81);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_82);
    stringBuffer.append(__nextVarName);
    	} 

    stringBuffer.append(TEXT_83);
    stringBuffer.append(__importedAbstractExpr);
    stringBuffer.append(TEXT_84);
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_85);
    
} /* end of GenJavaExpressionProvider */

    
		}

    stringBuffer.append(TEXT_86);
    stringBuffer.append(javaExprContainer);
    	} /* end of javaInitializers */ 
    
}
}	//end local block that separates initializers and constraints

    stringBuffer.append(TEXT_87);
    
final GenExpressionProviderContainer expressionProviders = genDiagram.getEditorGen().getExpressionProviders();
if (genDiagram.hasLinkCreationConstraints() && expressionProviders != null) {
	String pluginActivatorClass = importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName());
	String importedAbstractExprCls = importManager.getImportedName(expressionProviders.getAbstractExpressionQualifiedClassName());
	boolean hasJavaConstraints = false;

    stringBuffer.append(TEXT_88);
    stringBuffer.append(genDiagram.getLinkCreationConstraintsClassName());
    stringBuffer.append(TEXT_89);
    
	for (Iterator it = genDiagram.getLinks().iterator(); it.hasNext();) {
		GenLinkConstraints linkConstraints = ((GenLink)it.next()).getCreationConstraints();
		if(linkConstraints == null) continue;
		if(linkConstraints.getSourceEndContextClass() == null || linkConstraints.getTargetEndContextClass() == null) continue;
		hasJavaConstraints |= (linkConstraints.getSourceEnd() != null && expressionProviders.getProvider(linkConstraints.getSourceEnd()) instanceof GenJavaExpressionProvider) ||
							(linkConstraints.getTargetEnd() != null && expressionProviders.getProvider(linkConstraints.getTargetEnd()) instanceof GenJavaExpressionProvider);

    stringBuffer.append(TEXT_90);
    stringBuffer.append(genDiagram.getLinkCreationConstraintsClassName());
    stringBuffer.append(TEXT_91);
    stringBuffer.append(linkConstraints.getConstraintsInstanceFieldName());
    stringBuffer.append(TEXT_92);
    stringBuffer.append(linkConstraints.getConstraintsInstanceFieldName());
    stringBuffer.append(TEXT_93);
    
	} // end of link iteration

    stringBuffer.append(TEXT_94);
    
	final String oppositeEndVarName = "oppositeEnd";
	for (Iterator it = genDiagram.getLinks().iterator(); it.hasNext();) {
		GenLinkConstraints linkConstraints = ((GenLink)it.next()).getCreationConstraints();
		if(linkConstraints == null) continue;
		GenClass srcContext = linkConstraints.getSourceEndContextClass();
		GenClass targetContext = linkConstraints.getTargetEndContextClass();
		if(srcContext == null || targetContext == null) continue;

    stringBuffer.append(TEXT_95);
    stringBuffer.append(genDiagram.getLinkCreationConstraintsClassName());
    stringBuffer.append(TEXT_96);
    stringBuffer.append(linkConstraints.getConstraintsInstanceFieldName());
    stringBuffer.append(TEXT_97);
    
		String __javaOperationContainer = javaConstraintsContainer;
		Map __exprEnvVariables = new java.util.HashMap();
		String __outEnvVarName = "sourceEnv";
		GenClassifier __genExprContext = srcContext;
		ValueExpression __genValueExpression = linkConstraints.getSourceEnd();
		__exprEnvVariables.put(oppositeEndVarName, targetContext); //$NON-NLS-1$


    
{ /*begin the scope*/
/*
java.util.Map __exprEnvVariables;
String __outEnvVarName;
ValueExpression __genValueExpression;
*/
if(!__exprEnvVariables.isEmpty() && genDiagram.getEditorGen().getExpressionProviders() != null && 
	genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) 
	instanceof org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter) {	

    stringBuffer.append(TEXT_98);
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
    stringBuffer.append(TEXT_99);
    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_100);
    stringBuffer.append(importManager.getImportedName("java.util.HashMap"));
    stringBuffer.append(TEXT_101);
    
	for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
		String nextVariableName = (String)envVarIt.next();
		org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(nextVariableName);
		String varTypeEClassifierAccess = nextVariableType.getGenPackage().getQualifiedPackageInterfaceName() + ".eINSTANCE.get" + nextVariableType.getClassifierAccessorName()+"()";			


    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_102);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_103);
    stringBuffer.append(varTypeEClassifierAccess);
    stringBuffer.append(TEXT_104);
    	
	} 
}

    
} /*end the scope*/

    stringBuffer.append(TEXT_105);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_106);
    
		if(linkConstraints.getSourceEnd() != null) {

    
{ /*begin the scope*/
/*
ValueExpression __genValueExpression;
GenClassifier __genExprContext
java.util.Map __exprEnvVariables
String __outEnvVarName;
String __javaOperationContainer;
*/
	org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase __genExprProvider = (genDiagram.getEditorGen().getExpressionProviders() != null) ? genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) : null;
	String __ctxEClassifierAccess = importManager.getImportedName(__genExprContext.getGenPackage().getQualifiedPackageInterfaceName()) + ".eINSTANCE.get" + __genExprContext.getClassifierAccessorName()+"()";
	String __importedAbstractClass = __genExprProvider != null ? importManager.getImportedName(__genExprProvider.getContainer().getAbstractExpressionQualifiedClassName()) : null;

	if(__genExprProvider == null || __importedAbstractClass == null) {

    stringBuffer.append(TEXT_107);
    
	} else if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter) {
		org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter interpreter = (org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter)__genExprProvider;
		String __expressionAccessor = interpreter.getExpressionAccessor(__genValueExpression);
		String providerImportedClass = importManager.getImportedName(interpreter.getQualifiedClassName());
		if(!__exprEnvVariables.isEmpty()) {			

    stringBuffer.append(providerImportedClass);
    stringBuffer.append(TEXT_108);
    stringBuffer.append(__expressionAccessor);
    stringBuffer.append(TEXT_109);
    stringBuffer.append(__genValueExpression.getBodyString());
    stringBuffer.append(TEXT_110);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_111);
    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_112);
    
		} else { 		

    stringBuffer.append(providerImportedClass);
    stringBuffer.append(TEXT_113);
    stringBuffer.append(__expressionAccessor);
    stringBuffer.append(TEXT_114);
    stringBuffer.append(__genValueExpression.getBodyString());
    stringBuffer.append(TEXT_115);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_116);
    
		}
	} else if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider) { /*inlined java expression adapter*/
		String evalCtxQualifiedName = __genExprProvider.getQualifiedInstanceClassName(__genExprContext);
		String __exprJavaOperName = ((org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider)__genExprProvider).getOperationName(__genValueExpression);	


    stringBuffer.append(TEXT_117);
    stringBuffer.append(__importedAbstractClass);
    stringBuffer.append(TEXT_118);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_119);
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
    stringBuffer.append(TEXT_120);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_121);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_122);
    	
		for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
			String nextVariableName = (String)envVarIt.next();
			org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(nextVariableName);
			String qualifiedTypeName = __genExprProvider.getQualifiedInstanceClassName(nextVariableType);

    stringBuffer.append(TEXT_123);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_124);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_125);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_126);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_127);
    		} 
    stringBuffer.append(TEXT_128);
    
		if(__javaOperationContainer != null && __javaOperationContainer.length() > 0) { 
    stringBuffer.append(__javaOperationContainer);
    stringBuffer.append(TEXT_129);
    
		} 
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_130);
    
		for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();){
    stringBuffer.append(TEXT_131);
    stringBuffer.append((String)envVarIt.next());
    }
    stringBuffer.append(TEXT_132);
    }
    } /*end of scope*/
    
		} else 
    stringBuffer.append(TEXT_133);
    ;
    stringBuffer.append(TEXT_134);
    
		__outEnvVarName = "targetEnv";
		__genExprContext = targetContext;
		__genValueExpression = linkConstraints.getTargetEnd();			
		__exprEnvVariables.put(oppositeEndVarName, srcContext); //$NON-NLS-1$

    
{ /*begin the scope*/
/*
java.util.Map __exprEnvVariables;
String __outEnvVarName;
ValueExpression __genValueExpression;
*/
if(!__exprEnvVariables.isEmpty() && genDiagram.getEditorGen().getExpressionProviders() != null && 
	genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) 
	instanceof org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter) {	

    stringBuffer.append(TEXT_135);
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
    stringBuffer.append(TEXT_136);
    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_137);
    stringBuffer.append(importManager.getImportedName("java.util.HashMap"));
    stringBuffer.append(TEXT_138);
    
	for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
		String nextVariableName = (String)envVarIt.next();
		org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(nextVariableName);
		String varTypeEClassifierAccess = nextVariableType.getGenPackage().getQualifiedPackageInterfaceName() + ".eINSTANCE.get" + nextVariableType.getClassifierAccessorName()+"()";			


    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_139);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_140);
    stringBuffer.append(varTypeEClassifierAccess);
    stringBuffer.append(TEXT_141);
    	
	} 
}

    
} /*end the scope*/

    stringBuffer.append(TEXT_142);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_143);
    
		if(linkConstraints.getTargetEnd() != null) {

    
{ /*begin the scope*/
/*
ValueExpression __genValueExpression;
GenClassifier __genExprContext
java.util.Map __exprEnvVariables
String __outEnvVarName;
String __javaOperationContainer;
*/
	org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase __genExprProvider = (genDiagram.getEditorGen().getExpressionProviders() != null) ? genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) : null;
	String __ctxEClassifierAccess = importManager.getImportedName(__genExprContext.getGenPackage().getQualifiedPackageInterfaceName()) + ".eINSTANCE.get" + __genExprContext.getClassifierAccessorName()+"()";
	String __importedAbstractClass = __genExprProvider != null ? importManager.getImportedName(__genExprProvider.getContainer().getAbstractExpressionQualifiedClassName()) : null;

	if(__genExprProvider == null || __importedAbstractClass == null) {

    stringBuffer.append(TEXT_144);
    
	} else if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter) {
		org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter interpreter = (org.eclipse.gmf.codegen.gmfgen.GenExpressionInterpreter)__genExprProvider;
		String __expressionAccessor = interpreter.getExpressionAccessor(__genValueExpression);
		String providerImportedClass = importManager.getImportedName(interpreter.getQualifiedClassName());
		if(!__exprEnvVariables.isEmpty()) {			

    stringBuffer.append(providerImportedClass);
    stringBuffer.append(TEXT_145);
    stringBuffer.append(__expressionAccessor);
    stringBuffer.append(TEXT_146);
    stringBuffer.append(__genValueExpression.getBodyString());
    stringBuffer.append(TEXT_147);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_148);
    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_149);
    
		} else { 		

    stringBuffer.append(providerImportedClass);
    stringBuffer.append(TEXT_150);
    stringBuffer.append(__expressionAccessor);
    stringBuffer.append(TEXT_151);
    stringBuffer.append(__genValueExpression.getBodyString());
    stringBuffer.append(TEXT_152);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_153);
    
		}
	} else if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider) { /*inlined java expression adapter*/
		String evalCtxQualifiedName = __genExprProvider.getQualifiedInstanceClassName(__genExprContext);
		String __exprJavaOperName = ((org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider)__genExprProvider).getOperationName(__genValueExpression);	


    stringBuffer.append(TEXT_154);
    stringBuffer.append(__importedAbstractClass);
    stringBuffer.append(TEXT_155);
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_156);
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
    stringBuffer.append(TEXT_157);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_158);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_159);
    	
		for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
			String nextVariableName = (String)envVarIt.next();
			org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(nextVariableName);
			String qualifiedTypeName = __genExprProvider.getQualifiedInstanceClassName(nextVariableType);

    stringBuffer.append(TEXT_160);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_161);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_162);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_163);
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_164);
    		} 
    stringBuffer.append(TEXT_165);
    
		if(__javaOperationContainer != null && __javaOperationContainer.length() > 0) { 
    stringBuffer.append(__javaOperationContainer);
    stringBuffer.append(TEXT_166);
    
		} 
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_167);
    
		for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();){
    stringBuffer.append(TEXT_168);
    stringBuffer.append((String)envVarIt.next());
    }
    stringBuffer.append(TEXT_169);
    }
    } /*end of scope*/
    
		} else 
    stringBuffer.append(TEXT_170);
    ;
    stringBuffer.append(TEXT_171);
    stringBuffer.append(genDiagram.getLinkCreationConstraintsClassName());
    stringBuffer.append(TEXT_172);
    
	} // end of link iteration

    stringBuffer.append(TEXT_173);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_174);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_175);
    stringBuffer.append(genDiagram.getLinkCreationConstraintsClassName());
    stringBuffer.append(TEXT_176);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_177);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_178);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_179);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_180);
    stringBuffer.append(importedAbstractExprCls);
    stringBuffer.append(TEXT_181);
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
    stringBuffer.append(TEXT_182);
    stringBuffer.append(importManager.getImportedName("java.util.Collections"));
    stringBuffer.append(TEXT_183);
    stringBuffer.append(pluginActivatorClass);
    stringBuffer.append(TEXT_184);
    
if(hasJavaConstraints) {

    stringBuffer.append(TEXT_185);
    stringBuffer.append(javaConstraintsContainer);
    stringBuffer.append(TEXT_186);
    
	for (Iterator it = genDiagram.getLinks().iterator(); it.hasNext();) {
		GenLinkConstraints linkConstraints = ((GenLink)it.next()).getCreationConstraints();
		if(linkConstraints == null) continue;
		GenClass srcContext = linkConstraints.getSourceEndContextClass();
		GenClass targetContext = linkConstraints.getTargetEndContextClass();
		if(srcContext == null || targetContext == null) continue;
		String __genExprResultType = "java.lang.Boolean";
		Map __exprEnvVariables = new java.util.HashMap();
		GenClassifier __genExprContext = srcContext;
		ValueExpression __genValueExpression = linkConstraints.getSourceEnd();
		if(expressionProviders.getProvider(__genValueExpression) instanceof GenJavaExpressionProvider) {				
			__exprEnvVariables.put(oppositeEndVarName, targetContext);

    
/* 
ValueExpression __genValueExpression
java.util.Map __exprEnvVariables
GenClassifier __genExprContext
GenClassifier || String/qualifiedClassName/__genExprResultType
*/
org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase __genExprProvider = (genDiagram.getEditorGen().getExpressionProviders() != null) ? genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) : null;
if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider) {
	String __importedAbstractExpr = importManager.getImportedName(__genExprProvider.getContainer().getAbstractExpressionQualifiedClassName());
	String evalCtxQualifiedName = __genExprProvider.getQualifiedInstanceClassName(__genExprContext);
	// support GenClassifier and also String based qualified java class name
	Object __genExprResultTypeObj = __genExprResultType;
	String __exprResultTypeQualifiedName = null;
	if(__genExprResultTypeObj instanceof String) 
		__exprResultTypeQualifiedName = (String)__genExprResultTypeObj;
	else if(__genExprResultTypeObj instanceof org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)
		__exprResultTypeQualifiedName = __genExprProvider.getQualifiedInstanceClassName((org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__genExprResultTypeObj);
	String __exprJavaOperName = ((org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider)__genExprProvider).getOperationName(__genValueExpression);

    stringBuffer.append(TEXT_187);
    stringBuffer.append(importManager.getImportedName(__exprResultTypeQualifiedName));
    stringBuffer.append(TEXT_188);
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_189);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_190);
    
	for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
		String __nextVarName = (String)envVarIt.next();
		org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(__nextVarName);
		String qualifiedTypeName = __genExprProvider.getQualifiedInstanceClassName(nextVariableType);

	
    stringBuffer.append(TEXT_191);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_192);
    stringBuffer.append(__nextVarName);
    	} 

    stringBuffer.append(TEXT_193);
    stringBuffer.append(__importedAbstractExpr);
    stringBuffer.append(TEXT_194);
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_195);
    
} /* end of GenJavaExpressionProvider */

    
		}
		__genValueExpression = linkConstraints.getTargetEnd();
		if(expressionProviders.getProvider(__genValueExpression) instanceof GenJavaExpressionProvider) {		
			__genExprContext = targetContext;
			__exprEnvVariables.put(oppositeEndVarName, srcContext);

    
/* 
ValueExpression __genValueExpression
java.util.Map __exprEnvVariables
GenClassifier __genExprContext
GenClassifier || String/qualifiedClassName/__genExprResultType
*/
org.eclipse.gmf.codegen.gmfgen.GenExpressionProviderBase __genExprProvider = (genDiagram.getEditorGen().getExpressionProviders() != null) ? genDiagram.getEditorGen().getExpressionProviders().getProvider(__genValueExpression) : null;
if(__genExprProvider instanceof org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider) {
	String __importedAbstractExpr = importManager.getImportedName(__genExprProvider.getContainer().getAbstractExpressionQualifiedClassName());
	String evalCtxQualifiedName = __genExprProvider.getQualifiedInstanceClassName(__genExprContext);
	// support GenClassifier and also String based qualified java class name
	Object __genExprResultTypeObj = __genExprResultType;
	String __exprResultTypeQualifiedName = null;
	if(__genExprResultTypeObj instanceof String) 
		__exprResultTypeQualifiedName = (String)__genExprResultTypeObj;
	else if(__genExprResultTypeObj instanceof org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)
		__exprResultTypeQualifiedName = __genExprProvider.getQualifiedInstanceClassName((org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__genExprResultTypeObj);
	String __exprJavaOperName = ((org.eclipse.gmf.codegen.gmfgen.GenJavaExpressionProvider)__genExprProvider).getOperationName(__genValueExpression);

    stringBuffer.append(TEXT_196);
    stringBuffer.append(importManager.getImportedName(__exprResultTypeQualifiedName));
    stringBuffer.append(TEXT_197);
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_198);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_199);
    
	for(java.util.Iterator envVarIt = __exprEnvVariables.keySet().iterator(); envVarIt.hasNext();) {
		String __nextVarName = (String)envVarIt.next();
		org.eclipse.emf.codegen.ecore.genmodel.GenClassifier nextVariableType = (org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)__exprEnvVariables.get(__nextVarName);
		String qualifiedTypeName = __genExprProvider.getQualifiedInstanceClassName(nextVariableType);

	
    stringBuffer.append(TEXT_200);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
    stringBuffer.append(TEXT_201);
    stringBuffer.append(__nextVarName);
    	} 

    stringBuffer.append(TEXT_202);
    stringBuffer.append(__importedAbstractExpr);
    stringBuffer.append(TEXT_203);
    stringBuffer.append(__exprJavaOperName);
    stringBuffer.append(TEXT_204);
    
} /* end of GenJavaExpressionProvider */

    
		}
	} /*java constraints iteration*/

    stringBuffer.append(TEXT_205);
    stringBuffer.append(javaConstraintsContainer);
    
} /* end of hasJavaConstraints */

    stringBuffer.append(TEXT_206);
    } /*end of hasLinkCreationConstraints()*/ 
    stringBuffer.append(TEXT_207);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_208);
    return stringBuffer.toString();
  }
}
@


1.12
log
@regenerated jet emitters with EMF 2.3 RC2
@
text
@@


1.11
log
@Anna Karyakina's migration fix
@
text
@d19 1
a19 1
  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
@


1.10
log
@eliminate compilation problems in tests
@
text
@d20 200
a219 200
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "/*" + NL + " * ";
  protected final String TEXT_3 = NL + " */";
  protected final String TEXT_4 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class DomainElementInitializer ";
  protected final String TEXT_5 = "{" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static interface IElementInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_6 = " instance);" + NL + "\t}" + NL;
  protected final String TEXT_7 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static IElementInitializer NULL_INITIALIZER = new IElementInitializer() {" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_8 = " instance) {" + NL + "\t\t}" + NL + "\t};" + NL;
  protected final String TEXT_9 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static IElementInitializer ";
  protected final String TEXT_10 = " = NULL_INITIALIZER;";
  protected final String TEXT_11 = NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic static final IElementInitializer ";
  protected final String TEXT_12 = " = new ObjectInitializer(";
  protected final String TEXT_13 = ") {";
  protected final String TEXT_14 = NL + "\t\tObjectInitializer ";
  protected final String TEXT_15 = "() {" + NL + "\t\t\treturn new ObjectInitializer(";
  protected final String TEXT_16 = ") {";
  protected final String TEXT_17 = NL + "\t\t \tprotected void init() {\t\t\t\t";
  protected final String TEXT_18 = "\t\t\t" + NL + "\t\t\t\tadd(createNewElementFeatureInitializer(";
  protected final String TEXT_19 = ", new ObjectInitializer[] {";
  protected final String TEXT_20 = NL + "\t\t\t\t\t";
  protected final String TEXT_21 = "(), ";
  protected final String TEXT_22 = NL + "\t\t\t\t}));";
  protected final String TEXT_23 = "\t\t\t" + NL + "\t\t\t\tadd(createExpressionFeatureInitializer(";
  protected final String TEXT_24 = ", ";
  protected final String TEXT_25 = "null";
  protected final String TEXT_26 = ".";
  protected final String TEXT_27 = "(";
  protected final String TEXT_28 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_29 = ", ";
  protected final String TEXT_30 = ")";
  protected final String TEXT_31 = ".";
  protected final String TEXT_32 = "(";
  protected final String TEXT_33 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_34 = ")";
  protected final String TEXT_35 = "new ";
  protected final String TEXT_36 = "(";
  protected final String TEXT_37 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_38 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_39 = " self = (";
  protected final String TEXT_40 = ")context;";
  protected final String TEXT_41 = "\t" + NL + "\t\t";
  protected final String TEXT_42 = " ";
  protected final String TEXT_43 = " = (";
  protected final String TEXT_44 = ")env.get(\"";
  protected final String TEXT_45 = "\"); //$NON-NLS-1$";
  protected final String TEXT_46 = NL + "\t\treturn ";
  protected final String TEXT_47 = ".";
  protected final String TEXT_48 = "(self";
  protected final String TEXT_49 = ", ";
  protected final String TEXT_50 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_51 = NL + "));";
  protected final String TEXT_52 = "\t\t\t}";
  protected final String TEXT_53 = NL + "\t\t\t\t}; // ";
  protected final String TEXT_54 = " ObjectInitializer" + NL + "\t\t\t}";
  protected final String TEXT_55 = NL + "\t\t}; // ";
  protected final String TEXT_56 = " ObjectInitializer";
  protected final String TEXT_57 = NL + "\t/** " + NL + "\t * @@generated" + NL + "\t */\t" + NL + "\tpublic static abstract class ObjectInitializer implements IElementInitializer {" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */\t\t" + NL + "\t\tfinal ";
  protected final String TEXT_58 = " element;\t\t" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */\t\t" + NL + "\t\tprivate ";
  protected final String TEXT_59 = " featureInitializers = new ";
  protected final String TEXT_60 = "();" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tObjectInitializer(";
  protected final String TEXT_61 = " element) {" + NL + "\t\t\tthis.element = element;" + NL + "\t\t\tinit();" + NL + "\t\t}" + NL + "\t\t/**" + NL + "\t \t * @@generated" + NL + "\t \t */" + NL + "\t \tprotected abstract void init();\t\t\t\t\t\t\t" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprotected final FeatureInitializer add(FeatureInitializer initializer) {" + NL + "\t\t\tfeatureInitializers.add(initializer);" + NL + "\t\t\treturn initializer;" + NL + "\t\t}" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */\t\t" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_62 = " instance) {" + NL + "\t\t\tfor (";
  protected final String TEXT_63 = " it = featureInitializers.iterator(); it.hasNext();) {" + NL + "\t\t\t\tFeatureInitializer nextExpr = (FeatureInitializer)it.next();" + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\tnextExpr.init(instance);" + NL + "\t\t\t\t} catch(RuntimeException e) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_64 = ".getInstance().logError(\"Feature initialization failed\", e);\t//$NON-NLS-1$" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t} // end of ObjectInitializer" + NL + "\t" + NL + "\t/** " + NL + "\t * @@generated" + NL + "\t */" + NL + "\tinterface FeatureInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tvoid init(";
  protected final String TEXT_65 = " contextInstance);" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t\t" + NL + "\tstatic FeatureInitializer createNewElementFeatureInitializer(";
  protected final String TEXT_66 = " initFeature, ObjectInitializer[] newObjectInitializers) {" + NL + "\t\tfinal ";
  protected final String TEXT_67 = " feature = initFeature;" + NL + "\t\tfinal ObjectInitializer[] initializers = newObjectInitializers;" + NL + "\t\treturn new FeatureInitializer() {" + NL + "\t\t\tpublic void init(";
  protected final String TEXT_68 = " contextInstance) {" + NL + "\t\t\t\tfor (int i = 0; i < initializers.length; i++) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_69 = " newInstance = initializers[i].element.getEPackage().getEFactoryInstance().create(initializers[i].element);" + NL + "\t\t\t\t\tif(feature.isMany()) {" + NL + "\t\t\t\t\t\t((";
  protected final String TEXT_70 = ")contextInstance.eGet(feature)).add(newInstance);" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\tcontextInstance.eSet(feature, newInstance);" + NL + "\t\t\t\t\t}\t\t\t\t\t\t" + NL + "\t\t\t\t\tinitializers[i].initializeElement(newInstance);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */\t\t" + NL + "\tstatic FeatureInitializer createExpressionFeatureInitializer(";
  protected final String TEXT_71 = " initFeature, ";
  protected final String TEXT_72 = " valueExpression) {" + NL + "\t\tfinal ";
  protected final String TEXT_73 = " feature = initFeature;" + NL + "\t\tfinal ";
  protected final String TEXT_74 = " expression = valueExpression;" + NL + "\t\treturn new FeatureInitializer() {\t\t\t\t" + NL + "\t\t\tpublic void init(";
  protected final String TEXT_75 = " contextInstance) {" + NL + "\t\t\t\texpression.assignTo(feature, contextInstance);" + NL + "\t\t\t}" + NL + "\t\t};\t\t\t" + NL + "\t}";
  protected final String TEXT_76 = NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tstatic class ";
  protected final String TEXT_77 = " {";
  protected final String TEXT_78 = NL;
  protected final String TEXT_79 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_80 = " ";
  protected final String TEXT_81 = "(";
  protected final String TEXT_82 = " self";
  protected final String TEXT_83 = ", ";
  protected final String TEXT_84 = " ";
  protected final String TEXT_85 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_86 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_87 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_88 = NL + "\t\t} //";
  protected final String TEXT_89 = NL;
  protected final String TEXT_90 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static class ";
  protected final String TEXT_91 = " {";
  protected final String TEXT_92 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tpublic static final ";
  protected final String TEXT_93 = " ";
  protected final String TEXT_94 = " = create";
  protected final String TEXT_95 = "();";
  protected final String TEXT_96 = NL;
  protected final String TEXT_97 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static ";
  protected final String TEXT_98 = " create";
  protected final String TEXT_99 = "() {";
  protected final String TEXT_100 = NL;
  protected final String TEXT_101 = " ";
  protected final String TEXT_102 = " = new ";
  protected final String TEXT_103 = "(3);";
  protected final String TEXT_104 = ".put(\"";
  protected final String TEXT_105 = "\", ";
  protected final String TEXT_106 = "); //$NON-NLS-1$";
  protected final String TEXT_107 = NL + "\t\t\t";
  protected final String TEXT_108 = " sourceExpression = ";
  protected final String TEXT_109 = "null";
  protected final String TEXT_110 = ".";
  protected final String TEXT_111 = "(";
  protected final String TEXT_112 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_113 = ", ";
  protected final String TEXT_114 = ")";
  protected final String TEXT_115 = ".";
  protected final String TEXT_116 = "(";
  protected final String TEXT_117 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_118 = ")";
  protected final String TEXT_119 = "new ";
  protected final String TEXT_120 = "(";
  protected final String TEXT_121 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_122 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_123 = " self = (";
  protected final String TEXT_124 = ")context;";
  protected final String TEXT_125 = "\t" + NL + "\t\t";
  protected final String TEXT_126 = " ";
  protected final String TEXT_127 = " = (";
  protected final String TEXT_128 = ")env.get(\"";
  protected final String TEXT_129 = "\"); //$NON-NLS-1$";
  protected final String TEXT_130 = NL + "\t\treturn ";
  protected final String TEXT_131 = ".";
  protected final String TEXT_132 = "(self";
  protected final String TEXT_133 = ", ";
  protected final String TEXT_134 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_135 = "null";
  protected final String TEXT_136 = ";";
  protected final String TEXT_137 = NL;
  protected final String TEXT_138 = " ";
  protected final String TEXT_139 = " = new ";
  protected final String TEXT_140 = "(3);";
  protected final String TEXT_141 = ".put(\"";
  protected final String TEXT_142 = "\", ";
  protected final String TEXT_143 = "); //$NON-NLS-1$";
  protected final String TEXT_144 = NL + "\t\t\t";
  protected final String TEXT_145 = " targetExpression = ";
  protected final String TEXT_146 = "null";
  protected final String TEXT_147 = ".";
  protected final String TEXT_148 = "(";
  protected final String TEXT_149 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_150 = ", ";
  protected final String TEXT_151 = ")";
  protected final String TEXT_152 = ".";
  protected final String TEXT_153 = "(";
  protected final String TEXT_154 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_155 = ")";
  protected final String TEXT_156 = "new ";
  protected final String TEXT_157 = "(";
  protected final String TEXT_158 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_159 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_160 = " self = (";
  protected final String TEXT_161 = ")context;";
  protected final String TEXT_162 = "\t" + NL + "\t\t";
  protected final String TEXT_163 = " ";
  protected final String TEXT_164 = " = (";
  protected final String TEXT_165 = ")env.get(\"";
  protected final String TEXT_166 = "\"); //$NON-NLS-1$";
  protected final String TEXT_167 = NL + "\t\treturn ";
  protected final String TEXT_168 = ".";
  protected final String TEXT_169 = "(self";
  protected final String TEXT_170 = ", ";
  protected final String TEXT_171 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_172 = "null";
  protected final String TEXT_173 = ";" + NL + "\t\t\treturn new ";
  protected final String TEXT_174 = "(sourceExpression, targetExpression);" + NL + "\t\t}";
  protected final String TEXT_175 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate static final String OPPOSITE_END_VAR = \"oppositeEnd\"; //$NON-NLS-1$" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_176 = " srcEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_177 = " targetEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t\t" + NL + "\t\tpublic ";
  protected final String TEXT_178 = "(";
  protected final String TEXT_179 = " sourceEnd, ";
  protected final String TEXT_180 = " targetEnd) {" + NL + "\t\t\tthis.srcEndInv = sourceEnd;\t\t\t" + NL + "\t\t\tthis.targetEndInv = targetEnd;\t\t\t" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tpublic boolean canCreateLink(Object source, Object target, boolean isBackDirected) {" + NL + "\t\t\tif (source != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_181 = " sourceConstraint = isBackDirected ? targetEndInv : srcEndInv;" + NL + "\t\t\t\tif (sourceConstraint != null && !evaluate(sourceConstraint, source, target, false)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (target != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_182 = " targetConstraint = isBackDirected ? srcEndInv : targetEndInv;" + NL + "\t\t\t\tif (targetConstraint != null && !evaluate(targetConstraint, target, source, true)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\treturn true;" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static boolean evaluate(";
  protected final String TEXT_183 = " constraint, Object sourceEnd, Object oppositeEnd, boolean clearEnv) {" + NL + "\t\t\t";
  protected final String TEXT_184 = " evalEnv = ";
  protected final String TEXT_185 = ".singletonMap(OPPOSITE_END_VAR, oppositeEnd);\t\t\t" + NL + "\t\t\ttry {" + NL + "\t\t\t\tObject val = constraint.evaluate(sourceEnd, evalEnv);" + NL + "\t\t\t\treturn (val instanceof Boolean) ? ((Boolean) val).booleanValue() : false;" + NL + "\t\t\t} catch(Exception e) {\t" + NL + "\t\t\t\t";
  protected final String TEXT_186 = ".getInstance().logError(\"Link constraint evaluation error\", e); //$NON-NLS-1$" + NL + "\t\t\t\treturn false;" + NL + "\t\t\t}" + NL + "\t\t}";
  protected final String TEXT_187 = "\t\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class ";
  protected final String TEXT_188 = " {";
  protected final String TEXT_189 = NL;
  protected final String TEXT_190 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_191 = " ";
  protected final String TEXT_192 = "(";
  protected final String TEXT_193 = " self";
  protected final String TEXT_194 = ", ";
  protected final String TEXT_195 = " ";
  protected final String TEXT_196 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_197 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_198 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_199 = NL;
  protected final String TEXT_200 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
d221 7
a227 11
  protected final String TEXT_202 = "(";
  protected final String TEXT_203 = " self";
  protected final String TEXT_204 = ", ";
  protected final String TEXT_205 = " ";
  protected final String TEXT_206 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_207 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_208 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_209 = NL + "\t} // ";
  protected final String TEXT_210 = "\t\t" + NL + "\t}";
  protected final String TEXT_211 = "\t" + NL + "}";
  protected final String TEXT_212 = NL;
a235 1
    stringBuffer.append(TEXT_1);
d240 2
a242 2
    stringBuffer.append(copyrightText.replaceAll("\n", "\n * "));
    stringBuffer.append(TEXT_3);
d255 2
d258 1
a258 1
    /*XXX: class name should be customizable!*/
a259 2
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_6);
d277 2
a279 2
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_8);
d283 2
a285 2
    stringBuffer.append(id);
    stringBuffer.append(TEXT_10);
d296 2
d299 1
a299 1
    stringBuffer.append(nextFtSeqInitializer.getInitializerFieldName(id));
d301 1
a301 1
    stringBuffer.append(nextFtSeqInitializer.getElementClassAccessor(importManager));
d303 1
a303 1
    		} else {
d305 1
a305 1
    stringBuffer.append(nextFtSeqInitializer.getInitializerFieldName(id));
d307 1
a307 1
    stringBuffer.append(nextFtSeqInitializer.getElementClassAccessor(importManager));
a308 2
    		} 
    stringBuffer.append(TEXT_17);
d314 2
d317 1
a317 1
    stringBuffer.append(metaFeatureAccessor);
d319 1
a319 1
    				for(GenFeatureSeqInitializer newElemInit : (List<GenFeatureSeqInitializer>)newElementSpec.getNewElementInitializers()) { 
d321 1
a321 1
    stringBuffer.append(newElemInit.getInitializerFieldName(id));
a322 2
    				} // end of newElementInitializers 
    stringBuffer.append(TEXT_22);
d329 2
a331 2
    stringBuffer.append(metaFeatureAccessor);
    stringBuffer.append(TEXT_24);
d347 1
a347 1
    stringBuffer.append(TEXT_25);
d356 2
d359 1
a359 1
    stringBuffer.append(__expressionAccessor);
d361 1
a361 1
    stringBuffer.append(__genValueExpression.getBodyString());
d363 1
a363 1
    stringBuffer.append(__ctxEClassifierAccess);
a364 2
    stringBuffer.append(__outEnvVarName);
    stringBuffer.append(TEXT_30);
d369 2
d372 1
a372 1
    stringBuffer.append(__expressionAccessor);
d374 1
a374 1
    stringBuffer.append(__genValueExpression.getBodyString());
a375 2
    stringBuffer.append(__ctxEClassifierAccess);
    stringBuffer.append(TEXT_34);
d383 2
d386 1
a386 1
    stringBuffer.append(__importedAbstractClass);
d388 1
a388 1
    stringBuffer.append(__ctxEClassifierAccess);
d390 1
a390 1
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
a393 2
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
    stringBuffer.append(TEXT_40);
d400 2
d403 2
d406 1
a406 1
    stringBuffer.append(TEXT_42);
a407 2
    stringBuffer.append(TEXT_43);
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
d409 1
a409 1
    stringBuffer.append(nextVariableName);
a410 2
    		} 
    stringBuffer.append(TEXT_46);
d414 1
a414 1
    stringBuffer.append(TEXT_47);
d418 1
a418 1
    stringBuffer.append(TEXT_48);
d421 1
a421 1
    stringBuffer.append(TEXT_49);
d424 1
a424 1
    stringBuffer.append(TEXT_50);
d427 1
a427 1
    stringBuffer.append(TEXT_51);
d432 2
d435 1
a435 1
    		if(!isTopLevelObjInit) { 
a436 2
    stringBuffer.append(nextFtSeqInitializer.getInitializerFieldName(id));
    stringBuffer.append(TEXT_54);
d440 2
a442 2
    stringBuffer.append(rootFtSeqInitializer.getInitializerFieldName(id));
    stringBuffer.append(TEXT_56);
d447 2
d450 1
a450 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EClass"));
d452 1
a452 1
    stringBuffer.append(importManager.getImportedName("java.util.List"));
d454 1
a454 1
    stringBuffer.append(importManager.getImportedName("java.util.ArrayList"));
d456 1
a456 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EClass"));
d458 1
a458 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
d460 1
a460 1
    stringBuffer.append(importManager.getImportedName("java.util.Iterator"));
d462 1
a462 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
d464 1
a464 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
d468 1
a468 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
d472 1
a472 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
d474 1
a474 1
    stringBuffer.append(importManager.getImportedName("java.util.Collection"));
d476 2
d479 1
a479 1
    stringBuffer.append(TEXT_71);
a480 2
    stringBuffer.append(TEXT_72);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
d482 1
a482 1
    stringBuffer.append(importManager.getImportedName(expressionProviders.getAbstractExpressionQualifiedClassName()));
a483 2
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_75);
d487 2
a489 2
    stringBuffer.append(javaExprContainer);
    stringBuffer.append(TEXT_77);
a496 1
    stringBuffer.append(TEXT_78);
d517 1
a517 1
    stringBuffer.append(TEXT_79);
d519 1
a519 1
    stringBuffer.append(TEXT_80);
d521 1
a521 1
    stringBuffer.append(TEXT_81);
d523 1
a523 1
    stringBuffer.append(TEXT_82);
d531 1
a531 1
    stringBuffer.append(TEXT_83);
d533 1
a533 1
    stringBuffer.append(TEXT_84);
d537 1
a537 1
    stringBuffer.append(TEXT_85);
d539 1
a539 1
    stringBuffer.append(TEXT_86);
d541 1
a541 1
    stringBuffer.append(TEXT_87);
d548 1
a548 1
    stringBuffer.append(TEXT_88);
d555 1
a555 1
    stringBuffer.append(TEXT_89);
d563 1
a563 1
    stringBuffer.append(TEXT_90);
d565 1
a565 1
    stringBuffer.append(TEXT_91);
d574 1
a574 1
    stringBuffer.append(TEXT_92);
d576 1
a576 1
    stringBuffer.append(TEXT_93);
d578 1
a578 1
    stringBuffer.append(TEXT_94);
d580 1
a580 1
    stringBuffer.append(TEXT_95);
d584 1
a584 1
    stringBuffer.append(TEXT_96);
d594 1
a594 1
    stringBuffer.append(TEXT_97);
d596 1
a596 1
    stringBuffer.append(TEXT_98);
d598 1
a598 1
    stringBuffer.append(TEXT_99);
d619 1
a619 1
    stringBuffer.append(TEXT_100);
d621 1
a621 1
    stringBuffer.append(TEXT_101);
d623 1
a623 1
    stringBuffer.append(TEXT_102);
d625 1
a625 1
    stringBuffer.append(TEXT_103);
d634 1
a634 1
    stringBuffer.append(TEXT_104);
d636 1
a636 1
    stringBuffer.append(TEXT_105);
d638 1
a638 1
    stringBuffer.append(TEXT_106);
d646 1
a646 1
    stringBuffer.append(TEXT_107);
d648 1
a648 1
    stringBuffer.append(TEXT_108);
d667 1
a667 1
    stringBuffer.append(TEXT_109);
d676 1
a676 1
    stringBuffer.append(TEXT_110);
d678 1
a678 1
    stringBuffer.append(TEXT_111);
d680 1
a680 1
    stringBuffer.append(TEXT_112);
d682 1
a682 1
    stringBuffer.append(TEXT_113);
d684 1
a684 1
    stringBuffer.append(TEXT_114);
d689 1
a689 1
    stringBuffer.append(TEXT_115);
d691 1
a691 1
    stringBuffer.append(TEXT_116);
d693 1
a693 1
    stringBuffer.append(TEXT_117);
d695 1
a695 1
    stringBuffer.append(TEXT_118);
d703 1
a703 1
    stringBuffer.append(TEXT_119);
d705 1
a705 1
    stringBuffer.append(TEXT_120);
d707 1
a707 1
    stringBuffer.append(TEXT_121);
d709 1
a709 1
    stringBuffer.append(TEXT_122);
d711 1
a711 1
    stringBuffer.append(TEXT_123);
d713 1
a713 1
    stringBuffer.append(TEXT_124);
d720 4
d729 1
a729 1
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
a730 4
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_129);
    		} 
    stringBuffer.append(TEXT_130);
d734 1
a734 1
    stringBuffer.append(TEXT_131);
d738 1
a738 1
    stringBuffer.append(TEXT_132);
d741 1
a741 1
    stringBuffer.append(TEXT_133);
d744 1
a744 1
    stringBuffer.append(TEXT_134);
d749 1
a749 1
    stringBuffer.append(TEXT_135);
d751 1
a751 1
    stringBuffer.append(TEXT_136);
d769 1
a769 1
    stringBuffer.append(TEXT_137);
d771 1
a771 1
    stringBuffer.append(TEXT_138);
d773 1
a773 1
    stringBuffer.append(TEXT_139);
d775 1
a775 1
    stringBuffer.append(TEXT_140);
d784 1
a784 1
    stringBuffer.append(TEXT_141);
d786 1
a786 1
    stringBuffer.append(TEXT_142);
d788 1
a788 1
    stringBuffer.append(TEXT_143);
d796 1
a796 1
    stringBuffer.append(TEXT_144);
d798 1
a798 1
    stringBuffer.append(TEXT_145);
d817 1
a817 1
    stringBuffer.append(TEXT_146);
d826 1
a826 1
    stringBuffer.append(TEXT_147);
d828 1
a828 1
    stringBuffer.append(TEXT_148);
d830 1
a830 1
    stringBuffer.append(TEXT_149);
d832 1
a832 1
    stringBuffer.append(TEXT_150);
d834 1
a834 1
    stringBuffer.append(TEXT_151);
d839 1
a839 1
    stringBuffer.append(TEXT_152);
d841 1
a841 1
    stringBuffer.append(TEXT_153);
d843 1
a843 1
    stringBuffer.append(TEXT_154);
d845 1
a845 1
    stringBuffer.append(TEXT_155);
d853 1
a853 1
    stringBuffer.append(TEXT_156);
d855 1
a855 1
    stringBuffer.append(TEXT_157);
d857 1
a857 1
    stringBuffer.append(TEXT_158);
d859 1
a859 1
    stringBuffer.append(TEXT_159);
d861 1
a861 1
    stringBuffer.append(TEXT_160);
d863 1
a863 1
    stringBuffer.append(TEXT_161);
d870 4
d879 1
a879 1
    stringBuffer.append(importManager.getImportedName(qualifiedTypeName));
a880 4
    stringBuffer.append(nextVariableName);
    stringBuffer.append(TEXT_166);
    		} 
    stringBuffer.append(TEXT_167);
d884 1
a884 1
    stringBuffer.append(TEXT_168);
d888 1
a888 1
    stringBuffer.append(TEXT_169);
d891 1
a891 1
    stringBuffer.append(TEXT_170);
d894 1
a894 1
    stringBuffer.append(TEXT_171);
d899 1
a899 1
    stringBuffer.append(TEXT_172);
d901 1
a901 1
    stringBuffer.append(TEXT_173);
d903 1
a903 1
    stringBuffer.append(TEXT_174);
d907 4
d912 1
a912 1
    stringBuffer.append(importedAbstractExprCls);
d916 1
a916 1
    stringBuffer.append(genDiagram.getLinkCreationConstraintsClassName());
d924 1
a924 1
    stringBuffer.append(importedAbstractExprCls);
d926 1
a926 1
    stringBuffer.append(importedAbstractExprCls);
d928 1
a928 1
    stringBuffer.append(importManager.getImportedName("java.util.Map"));
a929 4
    stringBuffer.append(importManager.getImportedName("java.util.Collections"));
    stringBuffer.append(TEXT_185);
    stringBuffer.append(pluginActivatorClass);
    stringBuffer.append(TEXT_186);
d933 1
a933 1
    stringBuffer.append(TEXT_187);
d935 1
a935 1
    stringBuffer.append(TEXT_188);
a949 1
    stringBuffer.append(TEXT_189);
d970 1
a970 1
    stringBuffer.append(TEXT_190);
d972 1
a972 1
    stringBuffer.append(TEXT_191);
d974 1
a974 1
    stringBuffer.append(TEXT_192);
d976 1
a976 1
    stringBuffer.append(TEXT_193);
d984 1
a984 1
    stringBuffer.append(TEXT_194);
d986 1
a986 1
    stringBuffer.append(TEXT_195);
d990 1
a990 1
    stringBuffer.append(TEXT_196);
d992 1
a992 1
    stringBuffer.append(TEXT_197);
d994 1
a994 1
    stringBuffer.append(TEXT_198);
a1004 1
    stringBuffer.append(TEXT_199);
d1025 1
a1025 1
    stringBuffer.append(TEXT_200);
d1027 1
a1027 1
    stringBuffer.append(TEXT_201);
d1029 1
a1029 1
    stringBuffer.append(TEXT_202);
d1031 1
a1031 1
    stringBuffer.append(TEXT_203);
d1039 1
a1039 1
    stringBuffer.append(TEXT_204);
d1041 1
a1041 1
    stringBuffer.append(TEXT_205);
d1045 1
a1045 1
    stringBuffer.append(TEXT_206);
d1047 1
a1047 1
    stringBuffer.append(TEXT_207);
d1049 1
a1049 1
    stringBuffer.append(TEXT_208);
d1057 1
a1057 1
    stringBuffer.append(TEXT_209);
d1062 1
a1062 1
    stringBuffer.append(TEXT_210);
d1064 1
a1064 1
    stringBuffer.append(TEXT_211);
d1066 1
a1066 1
    stringBuffer.append(TEXT_212);
@


1.9
log
@Revriting BaseItemSemanticEditPolicy to xpand
@
text
@a354 1
		String __bodyLiteral = org.eclipse.gmf.internal.common.codegen.Conversions.toStringLiteral(__genValueExpression.getBody());
d364 1
a364 1
    stringBuffer.append(__bodyLiteral);
d377 1
a377 1
    stringBuffer.append(__bodyLiteral);
d617 1
a617 1
java.util.Map __exprEnvVariables
d619 1
a675 1
		String __bodyLiteral = org.eclipse.gmf.internal.common.codegen.Conversions.toStringLiteral(__genValueExpression.getBody());
d685 1
a685 1
    stringBuffer.append(__bodyLiteral);
d698 1
a698 1
    stringBuffer.append(__bodyLiteral);
d767 1
a767 1
java.util.Map __exprEnvVariables
d769 1
a825 1
		String __bodyLiteral = org.eclipse.gmf.internal.common.codegen.Conversions.toStringLiteral(__genValueExpression.getBody());
d835 1
a835 1
    stringBuffer.append(__bodyLiteral);
d848 1
a848 1
    stringBuffer.append(__bodyLiteral);
@


1.8
log
@[160225] bblajer - Respect EStructuralFeature cardinality in commands that create/move/clone elements
@
text
@d501 1
a501 1
			String __genExprResultType = provider.getQualifiedInstanceClassName(__genValueExpression.getFeature());
@


1.7
log
@#159256 Adapt ElementTypes.javajet with FeatureSeqInitializer complex structure support
@
text
@d201 1
a201 1
  protected final String TEXT_182 = " targetConstraint = isBackDirected ? srcEndInv : targetEndInv;" + NL + "\t\t\t\tif (targetConstraint != null && !evaluate(targetConstraint, source, target, true)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\treturn true;" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static boolean evaluate(";
@


1.6
log
@[152859] bblajer - add missing @@generated tags
@
text
@d30 90
a119 90
  protected final String TEXT_11 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static IElementInitializer ";
  protected final String TEXT_12 = " = new ObjectInitializer(new FeatureInitializer[] {";
  protected final String TEXT_13 = NL + "\t\t\tnew FeatureInitializer(" + NL + "\t\t\t\t";
  protected final String TEXT_14 = "null";
  protected final String TEXT_15 = ".";
  protected final String TEXT_16 = "(";
  protected final String TEXT_17 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_18 = ", ";
  protected final String TEXT_19 = ")";
  protected final String TEXT_20 = ".";
  protected final String TEXT_21 = "(";
  protected final String TEXT_22 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_23 = ")";
  protected final String TEXT_24 = "new ";
  protected final String TEXT_25 = "(";
  protected final String TEXT_26 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_27 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_28 = " self = (";
  protected final String TEXT_29 = ")context;";
  protected final String TEXT_30 = "\t" + NL + "\t\t";
  protected final String TEXT_31 = " ";
  protected final String TEXT_32 = " = (";
  protected final String TEXT_33 = ")env.get(\"";
  protected final String TEXT_34 = "\"); //$NON-NLS-1$";
  protected final String TEXT_35 = NL + "\t\treturn ";
  protected final String TEXT_36 = ".";
  protected final String TEXT_37 = "(self";
  protected final String TEXT_38 = ", ";
  protected final String TEXT_39 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_40 = NL + "," + NL + "\t\t\t\t";
  protected final String TEXT_41 = ")";
  protected final String TEXT_42 = NL + "\t\t});";
  protected final String TEXT_43 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class ObjectInitializer implements IElementInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate FeatureInitializer[] initExpressions;" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tObjectInitializer(FeatureInitializer[] initExpressions) {" + NL + "\t\t\tthis.initExpressions = initExpressions;" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_44 = " instance) {" + NL + "\t\t\tfor (int i = 0; i < initExpressions.length; i++) {" + NL + "\t\t\t\tFeatureInitializer nextExpr = initExpressions[i];" + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\tnextExpr.init(instance);" + NL + "\t\t\t\t} catch (RuntimeException e) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_45 = ".getInstance().logError(\"Feature initialization failed\", e);\t//$NON-NLS-1$" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tstatic class FeatureInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_46 = " sFeature;" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_47 = " expression;\t\t" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tFeatureInitializer(";
  protected final String TEXT_48 = " expression, " + NL + "\t\t\t";
  protected final String TEXT_49 = " sFeature) {" + NL + "\t\t\tthis.sFeature = sFeature;" + NL + "\t\t\tthis.expression = expression;" + NL + "\t\t}" + NL + "" + NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tvoid init(";
  protected final String TEXT_50 = " contextInstance) {" + NL + "\t\t\texpression.assignTo(sFeature, contextInstance);" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_51 = NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tstatic class ";
  protected final String TEXT_52 = " {";
  protected final String TEXT_53 = NL;
  protected final String TEXT_54 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_55 = " ";
  protected final String TEXT_56 = "(";
  protected final String TEXT_57 = " self";
  protected final String TEXT_58 = ", ";
  protected final String TEXT_59 = " ";
  protected final String TEXT_60 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_61 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_62 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_63 = NL + "\t\t} //";
  protected final String TEXT_64 = NL;
  protected final String TEXT_65 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static class ";
  protected final String TEXT_66 = " {";
  protected final String TEXT_67 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tpublic static final ";
  protected final String TEXT_68 = " ";
  protected final String TEXT_69 = " = create";
  protected final String TEXT_70 = "();";
  protected final String TEXT_71 = NL;
  protected final String TEXT_72 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static ";
  protected final String TEXT_73 = " create";
  protected final String TEXT_74 = "() {";
  protected final String TEXT_75 = NL;
  protected final String TEXT_76 = " ";
  protected final String TEXT_77 = " = new ";
  protected final String TEXT_78 = "(3);";
  protected final String TEXT_79 = ".put(\"";
  protected final String TEXT_80 = "\", ";
  protected final String TEXT_81 = "); //$NON-NLS-1$";
  protected final String TEXT_82 = NL + "\t\t\t";
  protected final String TEXT_83 = " sourceExpression = ";
  protected final String TEXT_84 = "null";
  protected final String TEXT_85 = ".";
  protected final String TEXT_86 = "(";
  protected final String TEXT_87 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_88 = ", ";
  protected final String TEXT_89 = ")";
  protected final String TEXT_90 = ".";
  protected final String TEXT_91 = "(";
  protected final String TEXT_92 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_93 = ")";
  protected final String TEXT_94 = "new ";
  protected final String TEXT_95 = "(";
  protected final String TEXT_96 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_97 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_98 = " self = (";
  protected final String TEXT_99 = ")context;";
  protected final String TEXT_100 = "\t" + NL + "\t\t";
d121 36
a156 36
  protected final String TEXT_102 = " = (";
  protected final String TEXT_103 = ")env.get(\"";
  protected final String TEXT_104 = "\"); //$NON-NLS-1$";
  protected final String TEXT_105 = NL + "\t\treturn ";
  protected final String TEXT_106 = ".";
  protected final String TEXT_107 = "(self";
  protected final String TEXT_108 = ", ";
  protected final String TEXT_109 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_110 = "null";
  protected final String TEXT_111 = ";";
  protected final String TEXT_112 = NL;
  protected final String TEXT_113 = " ";
  protected final String TEXT_114 = " = new ";
  protected final String TEXT_115 = "(3);";
  protected final String TEXT_116 = ".put(\"";
  protected final String TEXT_117 = "\", ";
  protected final String TEXT_118 = "); //$NON-NLS-1$";
  protected final String TEXT_119 = NL + "\t\t\t";
  protected final String TEXT_120 = " targetExpression = ";
  protected final String TEXT_121 = "null";
  protected final String TEXT_122 = ".";
  protected final String TEXT_123 = "(";
  protected final String TEXT_124 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_125 = ", ";
  protected final String TEXT_126 = ")";
  protected final String TEXT_127 = ".";
  protected final String TEXT_128 = "(";
  protected final String TEXT_129 = ", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_130 = ")";
  protected final String TEXT_131 = "new ";
  protected final String TEXT_132 = "(";
  protected final String TEXT_133 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_134 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_135 = " self = (";
  protected final String TEXT_136 = ")context;";
  protected final String TEXT_137 = "\t" + NL + "\t\t";
d158 14
a171 14
  protected final String TEXT_139 = " = (";
  protected final String TEXT_140 = ")env.get(\"";
  protected final String TEXT_141 = "\"); //$NON-NLS-1$";
  protected final String TEXT_142 = NL + "\t\treturn ";
  protected final String TEXT_143 = ".";
  protected final String TEXT_144 = "(self";
  protected final String TEXT_145 = ", ";
  protected final String TEXT_146 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_147 = "null";
  protected final String TEXT_148 = ";" + NL + "\t\t\treturn new ";
  protected final String TEXT_149 = "(sourceExpression, targetExpression);" + NL + "\t\t}";
  protected final String TEXT_150 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate static final String OPPOSITE_END_VAR = \"oppositeEnd\"; //$NON-NLS-1$" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_151 = " srcEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_152 = " targetEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t\t" + NL + "\t\tpublic ";
d173 59
a231 34
  protected final String TEXT_154 = " sourceEnd, ";
  protected final String TEXT_155 = " targetEnd) {" + NL + "\t\t\tthis.srcEndInv = sourceEnd;\t\t\t" + NL + "\t\t\tthis.targetEndInv = targetEnd;\t\t\t" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tpublic boolean canCreateLink(Object source, Object target, boolean isBackDirected) {" + NL + "\t\t\tif (source != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_156 = " sourceConstraint = isBackDirected ? targetEndInv : srcEndInv;" + NL + "\t\t\t\tif (sourceConstraint != null && !evaluate(sourceConstraint, source, target, false)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (target != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_157 = " targetConstraint = isBackDirected ? srcEndInv : targetEndInv;" + NL + "\t\t\t\tif (targetConstraint != null && !evaluate(targetConstraint, source, target, true)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\treturn true;" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static boolean evaluate(";
  protected final String TEXT_158 = " constraint, Object sourceEnd, Object oppositeEnd, boolean clearEnv) {" + NL + "\t\t\t";
  protected final String TEXT_159 = " evalEnv = ";
  protected final String TEXT_160 = ".singletonMap(OPPOSITE_END_VAR, oppositeEnd);\t\t\t" + NL + "\t\t\ttry {" + NL + "\t\t\t\tObject val = constraint.evaluate(sourceEnd, evalEnv);" + NL + "\t\t\t\treturn (val instanceof Boolean) ? ((Boolean) val).booleanValue() : false;" + NL + "\t\t\t} catch(Exception e) {\t" + NL + "\t\t\t\t";
  protected final String TEXT_161 = ".getInstance().logError(\"Link constraint evaluation error\", e); //$NON-NLS-1$" + NL + "\t\t\t\treturn false;" + NL + "\t\t\t}" + NL + "\t\t}";
  protected final String TEXT_162 = "\t\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class ";
  protected final String TEXT_163 = " {";
  protected final String TEXT_164 = NL;
  protected final String TEXT_165 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_166 = " ";
  protected final String TEXT_167 = "(";
  protected final String TEXT_168 = " self";
  protected final String TEXT_169 = ", ";
  protected final String TEXT_170 = " ";
  protected final String TEXT_171 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_172 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_173 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_174 = NL;
  protected final String TEXT_175 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_176 = " ";
  protected final String TEXT_177 = "(";
  protected final String TEXT_178 = " self";
  protected final String TEXT_179 = ", ";
  protected final String TEXT_180 = " ";
  protected final String TEXT_181 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new ";
  protected final String TEXT_182 = ".NoImplException(\"No user java implementation provided in '";
  protected final String TEXT_183 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_184 = NL + "\t} // ";
  protected final String TEXT_185 = "\t\t" + NL + "\t}";
  protected final String TEXT_186 = "\t" + NL + "}";
  protected final String TEXT_187 = NL;
d270 1
a270 1
final Map javaInitializers = new HashMap();
a271 1
final String __outEnvVarName = ""; // no env to setup;
d273 4
a276 14
for (Iterator it = genDiagram.eAllContents(); it.hasNext(); ) {
	Object next = it.next();
	String id = null;
	TypeModelFacet modelFacet = null;
	if (next instanceof GenNode) {
		id = ((GenNode) next).getUniqueIdentifier();
		modelFacet = ((GenNode) next).getModelFacet();
	} else if (next instanceof GenLink && ((GenLink) next).getModelFacet() instanceof TypeLinkModelFacet) {
		id = ((GenLink) next).getUniqueIdentifier();
		modelFacet = (TypeLinkModelFacet) ((GenLink) next).getModelFacet();
	}
	if (modelFacet == null) {
		continue;
	}
d295 5
a299 1
	GenFeatureSeqInitializer ftInitializer = (GenFeatureSeqInitializer) elementInitializer;
d302 1
a302 1
    stringBuffer.append(id);
d304 29
a332 5
    
		GenClassifier __genExprContext = ftInitializer.getTypeModelFacet().getMetaClass();
		for(Iterator featInitIt = ftInitializer.getInitializers().iterator(); featInitIt.hasNext();) {		 
			GenFeatureValueSpec __genValueExpression = (GenFeatureValueSpec)featInitIt.next();
			String metaFeatureAccess = importManager.getImportedName(__genValueExpression.getFeatureQualifiedPackageInterfaceName())+".eINSTANCE.get"+__genValueExpression.getFeature().getFeatureAccessorName()+"()"; 
d334 3
a336 1
    stringBuffer.append(TEXT_13);
d352 1
a352 1
    stringBuffer.append(TEXT_14);
d362 1
a362 1
    stringBuffer.append(TEXT_15);
d364 1
a364 1
    stringBuffer.append(TEXT_16);
d366 1
a366 1
    stringBuffer.append(TEXT_17);
d368 1
a368 1
    stringBuffer.append(TEXT_18);
d370 1
a370 1
    stringBuffer.append(TEXT_19);
d375 1
a375 1
    stringBuffer.append(TEXT_20);
d377 1
a377 1
    stringBuffer.append(TEXT_21);
d379 1
a379 1
    stringBuffer.append(TEXT_22);
d381 1
a381 1
    stringBuffer.append(TEXT_23);
d389 1
a389 1
    stringBuffer.append(TEXT_24);
d391 1
a391 1
    stringBuffer.append(TEXT_25);
d393 1
a393 1
    stringBuffer.append(TEXT_26);
d395 1
a395 1
    stringBuffer.append(TEXT_27);
d397 1
a397 1
    stringBuffer.append(TEXT_28);
d399 1
a399 1
    stringBuffer.append(TEXT_29);
d406 1
a406 1
    stringBuffer.append(TEXT_30);
d408 1
a408 1
    stringBuffer.append(TEXT_31);
d410 1
a410 1
    stringBuffer.append(TEXT_32);
d412 1
a412 1
    stringBuffer.append(TEXT_33);
d414 1
a414 1
    stringBuffer.append(TEXT_34);
d416 1
a416 1
    stringBuffer.append(TEXT_35);
d420 1
a420 1
    stringBuffer.append(TEXT_36);
d424 1
a424 1
    stringBuffer.append(TEXT_37);
d427 1
a427 1
    stringBuffer.append(TEXT_38);
d430 1
a430 1
    stringBuffer.append(TEXT_39);
d433 1
a433 4
    stringBuffer.append(TEXT_40);
    stringBuffer.append(metaFeatureAccess);
    stringBuffer.append(TEXT_41);
    stringBuffer.append(featInitIt.hasNext() ? "," : "");
d435 10
a444 4
			if(expressionProviders.getProvider(__genValueExpression) instanceof GenJavaExpressionProvider && !expressionProviders.isCopy(__genValueExpression)) {
				javaInitializers.put(__genValueExpression, __genExprContext);
			}
		} // end of GenFeatureValueSpec iteration
d446 3
a448 1
    stringBuffer.append(TEXT_42);
d453 9
a461 1
    stringBuffer.append(TEXT_43);
d463 3
a465 1
    stringBuffer.append(TEXT_44);
d467 13
a479 1
    stringBuffer.append(TEXT_45);
d481 1
a481 1
    stringBuffer.append(TEXT_46);
d483 3
a485 1
    stringBuffer.append(TEXT_47);
d487 1
a487 3
    stringBuffer.append(TEXT_48);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
    stringBuffer.append(TEXT_49);
d489 1
a489 1
    stringBuffer.append(TEXT_50);
d493 1
a493 1
    stringBuffer.append(TEXT_51);
d495 1
a495 1
    stringBuffer.append(TEXT_52);
d497 2
a498 3
		for(Iterator javaExprIt = javaInitializers.keySet().iterator(); javaExprIt.hasNext();) {
			GenFeatureValueSpec __genValueExpression = (GenFeatureValueSpec)javaExprIt.next();
			GenClassifier __genExprContext = (GenClassifier)javaInitializers.get(__genValueExpression);
d503 1
a503 1
    stringBuffer.append(TEXT_53);
d524 1
a524 1
    stringBuffer.append(TEXT_54);
d526 1
a526 1
    stringBuffer.append(TEXT_55);
d528 1
a528 1
    stringBuffer.append(TEXT_56);
d530 1
a530 1
    stringBuffer.append(TEXT_57);
d538 1
a538 1
    stringBuffer.append(TEXT_58);
d540 1
a540 1
    stringBuffer.append(TEXT_59);
d544 1
a544 1
    stringBuffer.append(TEXT_60);
d546 1
a546 1
    stringBuffer.append(TEXT_61);
d548 1
a548 1
    stringBuffer.append(TEXT_62);
d555 1
a555 1
    stringBuffer.append(TEXT_63);
d562 1
a562 1
    stringBuffer.append(TEXT_64);
d570 1
a570 1
    stringBuffer.append(TEXT_65);
d572 1
a572 1
    stringBuffer.append(TEXT_66);
d581 1
a581 1
    stringBuffer.append(TEXT_67);
d583 1
a583 1
    stringBuffer.append(TEXT_68);
d585 1
a585 1
    stringBuffer.append(TEXT_69);
d587 1
a587 1
    stringBuffer.append(TEXT_70);
d591 1
a591 1
    stringBuffer.append(TEXT_71);
d601 1
a601 1
    stringBuffer.append(TEXT_72);
d603 1
a603 1
    stringBuffer.append(TEXT_73);
d605 1
a605 1
    stringBuffer.append(TEXT_74);
d625 1
a625 1
    stringBuffer.append(TEXT_75);
d627 1
a627 1
    stringBuffer.append(TEXT_76);
d629 1
a629 1
    stringBuffer.append(TEXT_77);
d631 1
a631 1
    stringBuffer.append(TEXT_78);
d640 1
a640 1
    stringBuffer.append(TEXT_79);
d642 1
a642 1
    stringBuffer.append(TEXT_80);
d644 1
a644 1
    stringBuffer.append(TEXT_81);
d652 1
a652 1
    stringBuffer.append(TEXT_82);
d654 1
a654 1
    stringBuffer.append(TEXT_83);
d673 1
a673 1
    stringBuffer.append(TEXT_84);
d683 1
a683 1
    stringBuffer.append(TEXT_85);
d685 1
a685 1
    stringBuffer.append(TEXT_86);
d687 1
a687 1
    stringBuffer.append(TEXT_87);
d689 1
a689 1
    stringBuffer.append(TEXT_88);
d691 1
a691 1
    stringBuffer.append(TEXT_89);
d696 1
a696 1
    stringBuffer.append(TEXT_90);
d698 1
a698 1
    stringBuffer.append(TEXT_91);
d700 1
a700 1
    stringBuffer.append(TEXT_92);
d702 1
a702 1
    stringBuffer.append(TEXT_93);
d710 1
a710 1
    stringBuffer.append(TEXT_94);
d712 1
a712 1
    stringBuffer.append(TEXT_95);
d714 1
a714 1
    stringBuffer.append(TEXT_96);
d716 1
a716 1
    stringBuffer.append(TEXT_97);
d718 1
a718 1
    stringBuffer.append(TEXT_98);
d720 1
a720 1
    stringBuffer.append(TEXT_99);
d727 1
a727 1
    stringBuffer.append(TEXT_100);
d729 1
a729 1
    stringBuffer.append(TEXT_101);
d731 1
a731 1
    stringBuffer.append(TEXT_102);
d733 1
a733 1
    stringBuffer.append(TEXT_103);
d735 1
a735 1
    stringBuffer.append(TEXT_104);
d737 1
a737 1
    stringBuffer.append(TEXT_105);
d741 1
a741 1
    stringBuffer.append(TEXT_106);
d745 1
a745 1
    stringBuffer.append(TEXT_107);
d748 1
a748 1
    stringBuffer.append(TEXT_108);
d751 1
a751 1
    stringBuffer.append(TEXT_109);
d756 1
a756 1
    stringBuffer.append(TEXT_110);
d758 1
a758 1
    stringBuffer.append(TEXT_111);
d775 1
a775 1
    stringBuffer.append(TEXT_112);
d777 1
a777 1
    stringBuffer.append(TEXT_113);
d779 1
a779 1
    stringBuffer.append(TEXT_114);
d781 1
a781 1
    stringBuffer.append(TEXT_115);
d790 1
a790 1
    stringBuffer.append(TEXT_116);
d792 1
a792 1
    stringBuffer.append(TEXT_117);
d794 1
a794 1
    stringBuffer.append(TEXT_118);
d802 1
a802 1
    stringBuffer.append(TEXT_119);
d804 1
a804 1
    stringBuffer.append(TEXT_120);
d823 1
a823 1
    stringBuffer.append(TEXT_121);
d833 1
a833 1
    stringBuffer.append(TEXT_122);
d835 1
a835 1
    stringBuffer.append(TEXT_123);
d837 1
a837 1
    stringBuffer.append(TEXT_124);
d839 1
a839 1
    stringBuffer.append(TEXT_125);
d841 1
a841 1
    stringBuffer.append(TEXT_126);
d846 1
a846 1
    stringBuffer.append(TEXT_127);
d848 1
a848 1
    stringBuffer.append(TEXT_128);
d850 1
a850 1
    stringBuffer.append(TEXT_129);
d852 1
a852 1
    stringBuffer.append(TEXT_130);
d860 1
a860 1
    stringBuffer.append(TEXT_131);
d862 1
a862 1
    stringBuffer.append(TEXT_132);
d864 1
a864 1
    stringBuffer.append(TEXT_133);
d866 1
a866 1
    stringBuffer.append(TEXT_134);
d868 1
a868 1
    stringBuffer.append(TEXT_135);
d870 1
a870 1
    stringBuffer.append(TEXT_136);
d877 1
a877 1
    stringBuffer.append(TEXT_137);
d879 1
a879 1
    stringBuffer.append(TEXT_138);
d881 1
a881 1
    stringBuffer.append(TEXT_139);
d883 1
a883 1
    stringBuffer.append(TEXT_140);
d885 1
a885 1
    stringBuffer.append(TEXT_141);
d887 1
a887 1
    stringBuffer.append(TEXT_142);
d891 1
a891 1
    stringBuffer.append(TEXT_143);
d895 1
a895 1
    stringBuffer.append(TEXT_144);
d898 1
a898 1
    stringBuffer.append(TEXT_145);
d901 1
a901 1
    stringBuffer.append(TEXT_146);
d906 1
a906 1
    stringBuffer.append(TEXT_147);
d908 1
a908 1
    stringBuffer.append(TEXT_148);
d910 1
a910 1
    stringBuffer.append(TEXT_149);
d914 1
a914 1
    stringBuffer.append(TEXT_150);
d916 1
a916 1
    stringBuffer.append(TEXT_151);
d918 1
a918 1
    stringBuffer.append(TEXT_152);
d920 1
a920 1
    stringBuffer.append(TEXT_153);
d922 1
a922 1
    stringBuffer.append(TEXT_154);
d924 1
a924 1
    stringBuffer.append(TEXT_155);
d926 1
a926 1
    stringBuffer.append(TEXT_156);
d928 1
a928 1
    stringBuffer.append(TEXT_157);
d930 1
a930 1
    stringBuffer.append(TEXT_158);
d932 1
a932 1
    stringBuffer.append(TEXT_159);
d934 1
a934 1
    stringBuffer.append(TEXT_160);
d936 1
a936 1
    stringBuffer.append(TEXT_161);
d940 1
a940 1
    stringBuffer.append(TEXT_162);
d942 1
a942 1
    stringBuffer.append(TEXT_163);
d957 1
a957 1
    stringBuffer.append(TEXT_164);
d978 1
a978 1
    stringBuffer.append(TEXT_165);
d980 1
a980 1
    stringBuffer.append(TEXT_166);
d982 1
a982 1
    stringBuffer.append(TEXT_167);
d984 1
a984 1
    stringBuffer.append(TEXT_168);
d992 1
a992 1
    stringBuffer.append(TEXT_169);
d994 1
a994 1
    stringBuffer.append(TEXT_170);
d998 1
a998 1
    stringBuffer.append(TEXT_171);
d1000 1
a1000 1
    stringBuffer.append(TEXT_172);
d1002 1
a1002 1
    stringBuffer.append(TEXT_173);
d1013 1
a1013 1
    stringBuffer.append(TEXT_174);
d1034 1
a1034 1
    stringBuffer.append(TEXT_175);
d1036 1
a1036 1
    stringBuffer.append(TEXT_176);
d1038 1
a1038 1
    stringBuffer.append(TEXT_177);
d1040 1
a1040 1
    stringBuffer.append(TEXT_178);
d1048 1
a1048 1
    stringBuffer.append(TEXT_179);
d1050 1
a1050 1
    stringBuffer.append(TEXT_180);
d1054 1
a1054 1
    stringBuffer.append(TEXT_181);
d1056 1
a1056 1
    stringBuffer.append(TEXT_182);
d1058 1
a1058 1
    stringBuffer.append(TEXT_183);
d1066 1
a1066 1
    stringBuffer.append(TEXT_184);
d1071 1
a1071 1
    stringBuffer.append(TEXT_185);
d1073 1
a1073 1
    stringBuffer.append(TEXT_186);
d1075 1
a1075 1
    stringBuffer.append(TEXT_187);
@


1.5
log
@#140401 Escape all String literals in the generated code according to java rules, escape strings used  in plugins.xml
@
text
@d24 1
a24 1
  protected final String TEXT_5 = "{" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static interface IElementInitializer {" + NL + "\t\tpublic void initializeElement(";
@


1.5.2.1
log
@[152859] bblajer - Lite Generator: All generated methods should be marked as @@generated
[152854] bblajer - Lite Generator: Allow shape nodes to be placed inside list-layout compartments
@
text
@d24 1
a24 1
  protected final String TEXT_5 = "{" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static interface IElementInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void initializeElement(";
@


1.4
log
@#145753 Suppress exceptions logged from unimplemented methods of JavaAudits during tests execution
@
text
@d35 2
a36 2
  protected final String TEXT_16 = "(\"";
  protected final String TEXT_17 = "\", //$NON-NLS-1$" + NL + "\t";
d40 2
a41 2
  protected final String TEXT_21 = "(\"";
  protected final String TEXT_22 = "\", //$NON-NLS-1$" + NL + "\t";
d105 2
a106 2
  protected final String TEXT_86 = "(\"";
  protected final String TEXT_87 = "\", //$NON-NLS-1$" + NL + "\t";
d110 2
a111 2
  protected final String TEXT_91 = "(\"";
  protected final String TEXT_92 = "\", //$NON-NLS-1$" + NL + "\t";
d142 2
a143 2
  protected final String TEXT_123 = "(\"";
  protected final String TEXT_124 = "\", //$NON-NLS-1$" + NL + "\t";
d147 2
a148 2
  protected final String TEXT_128 = "(\"";
  protected final String TEXT_129 = "\", //$NON-NLS-1$" + NL + "\t";
d311 1
d321 1
a321 1
    stringBuffer.append(__genValueExpression.getBody());
d334 1
a334 1
    stringBuffer.append(__genValueExpression.getBody());
d606 1
d616 1
a616 1
    stringBuffer.append(__genValueExpression.getBody());
d629 1
a629 1
    stringBuffer.append(__genValueExpression.getBody());
d756 1
d766 1
a766 1
    stringBuffer.append(__genValueExpression.getBody());
d779 1
a779 1
    stringBuffer.append(__genValueExpression.getBody());
@


1.3
log
@#145337 Move element initializer's assignment of expressions to features into expression templates
@
text
@d79 128
a206 125
  protected final String TEXT_60 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new UnsupportedOperationException(\"No user implementation provided in '";
  protected final String TEXT_61 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_62 = NL + "\t\t} //";
  protected final String TEXT_63 = NL;
  protected final String TEXT_64 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static class ";
  protected final String TEXT_65 = " {";
  protected final String TEXT_66 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tpublic static final ";
  protected final String TEXT_67 = " ";
  protected final String TEXT_68 = " = create";
  protected final String TEXT_69 = "();";
  protected final String TEXT_70 = NL;
  protected final String TEXT_71 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static ";
  protected final String TEXT_72 = " create";
  protected final String TEXT_73 = "() {";
  protected final String TEXT_74 = NL;
  protected final String TEXT_75 = " ";
  protected final String TEXT_76 = " = new ";
  protected final String TEXT_77 = "(3);";
  protected final String TEXT_78 = ".put(\"";
  protected final String TEXT_79 = "\", ";
  protected final String TEXT_80 = "); //$NON-NLS-1$";
  protected final String TEXT_81 = NL + "\t\t\t";
  protected final String TEXT_82 = " sourceExpression = ";
  protected final String TEXT_83 = "null";
  protected final String TEXT_84 = ".";
  protected final String TEXT_85 = "(\"";
  protected final String TEXT_86 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_87 = ", ";
  protected final String TEXT_88 = ")";
  protected final String TEXT_89 = ".";
  protected final String TEXT_90 = "(\"";
  protected final String TEXT_91 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_92 = ")";
  protected final String TEXT_93 = "new ";
  protected final String TEXT_94 = "(";
  protected final String TEXT_95 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_96 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_97 = " self = (";
  protected final String TEXT_98 = ")context;";
  protected final String TEXT_99 = "\t" + NL + "\t\t";
  protected final String TEXT_100 = " ";
  protected final String TEXT_101 = " = (";
  protected final String TEXT_102 = ")env.get(\"";
  protected final String TEXT_103 = "\"); //$NON-NLS-1$";
  protected final String TEXT_104 = NL + "\t\treturn ";
  protected final String TEXT_105 = ".";
  protected final String TEXT_106 = "(self";
  protected final String TEXT_107 = ", ";
  protected final String TEXT_108 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_109 = "null";
  protected final String TEXT_110 = ";";
  protected final String TEXT_111 = NL;
  protected final String TEXT_112 = " ";
  protected final String TEXT_113 = " = new ";
  protected final String TEXT_114 = "(3);";
  protected final String TEXT_115 = ".put(\"";
  protected final String TEXT_116 = "\", ";
  protected final String TEXT_117 = "); //$NON-NLS-1$";
  protected final String TEXT_118 = NL + "\t\t\t";
  protected final String TEXT_119 = " targetExpression = ";
  protected final String TEXT_120 = "null";
  protected final String TEXT_121 = ".";
  protected final String TEXT_122 = "(\"";
  protected final String TEXT_123 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_124 = ", ";
  protected final String TEXT_125 = ")";
  protected final String TEXT_126 = ".";
  protected final String TEXT_127 = "(\"";
  protected final String TEXT_128 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_129 = ")";
  protected final String TEXT_130 = "new ";
  protected final String TEXT_131 = "(";
  protected final String TEXT_132 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_133 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_134 = " self = (";
  protected final String TEXT_135 = ")context;";
  protected final String TEXT_136 = "\t" + NL + "\t\t";
  protected final String TEXT_137 = " ";
  protected final String TEXT_138 = " = (";
  protected final String TEXT_139 = ")env.get(\"";
  protected final String TEXT_140 = "\"); //$NON-NLS-1$";
  protected final String TEXT_141 = NL + "\t\treturn ";
  protected final String TEXT_142 = ".";
  protected final String TEXT_143 = "(self";
  protected final String TEXT_144 = ", ";
  protected final String TEXT_145 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_146 = "null";
  protected final String TEXT_147 = ";" + NL + "\t\t\treturn new ";
  protected final String TEXT_148 = "(sourceExpression, targetExpression);" + NL + "\t\t}";
  protected final String TEXT_149 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate static final String OPPOSITE_END_VAR = \"oppositeEnd\"; //$NON-NLS-1$" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_150 = " srcEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_151 = " targetEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t\t" + NL + "\t\tpublic ";
  protected final String TEXT_152 = "(";
  protected final String TEXT_153 = " sourceEnd, ";
  protected final String TEXT_154 = " targetEnd) {" + NL + "\t\t\tthis.srcEndInv = sourceEnd;\t\t\t" + NL + "\t\t\tthis.targetEndInv = targetEnd;\t\t\t" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tpublic boolean canCreateLink(Object source, Object target, boolean isBackDirected) {" + NL + "\t\t\tif (source != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_155 = " sourceConstraint = isBackDirected ? targetEndInv : srcEndInv;" + NL + "\t\t\t\tif (sourceConstraint != null && !evaluate(sourceConstraint, source, target, false)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (target != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_156 = " targetConstraint = isBackDirected ? srcEndInv : targetEndInv;" + NL + "\t\t\t\tif (targetConstraint != null && !evaluate(targetConstraint, source, target, true)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\treturn true;" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static boolean evaluate(";
  protected final String TEXT_157 = " constraint, Object sourceEnd, Object oppositeEnd, boolean clearEnv) {" + NL + "\t\t\t";
  protected final String TEXT_158 = " evalEnv = ";
  protected final String TEXT_159 = ".singletonMap(OPPOSITE_END_VAR, oppositeEnd);\t\t\t" + NL + "\t\t\ttry {" + NL + "\t\t\t\tObject val = constraint.evaluate(sourceEnd, evalEnv);" + NL + "\t\t\t\treturn (val instanceof Boolean) ? ((Boolean) val).booleanValue() : false;" + NL + "\t\t\t} catch(Exception e) {\t" + NL + "\t\t\t\t";
  protected final String TEXT_160 = ".getInstance().logError(\"Link constraint evaluation error\", e); //$NON-NLS-1$" + NL + "\t\t\t\treturn false;" + NL + "\t\t\t}" + NL + "\t\t}";
  protected final String TEXT_161 = "\t\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class ";
  protected final String TEXT_162 = " {";
  protected final String TEXT_163 = NL;
  protected final String TEXT_164 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_165 = " ";
  protected final String TEXT_166 = "(";
  protected final String TEXT_167 = " self";
  protected final String TEXT_168 = ", ";
  protected final String TEXT_169 = " ";
  protected final String TEXT_170 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new UnsupportedOperationException(\"No user implementation provided in '";
  protected final String TEXT_171 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_172 = NL;
  protected final String TEXT_173 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_174 = " ";
  protected final String TEXT_175 = "(";
  protected final String TEXT_176 = " self";
  protected final String TEXT_177 = ", ";
  protected final String TEXT_178 = " ";
  protected final String TEXT_179 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new UnsupportedOperationException(\"No user implementation provided in '";
  protected final String TEXT_180 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_181 = NL + "\t} // ";
  protected final String TEXT_182 = "\t\t" + NL + "\t}";
  protected final String TEXT_183 = "\t" + NL + "}";
  protected final String TEXT_184 = NL;
d442 1
d474 2
d477 1
a477 1
    stringBuffer.append(TEXT_61);
d479 1
a479 1
}
d484 1
a484 1
    stringBuffer.append(TEXT_62);
d491 1
a491 1
    stringBuffer.append(TEXT_63);
d499 1
a499 1
    stringBuffer.append(TEXT_64);
d501 1
a501 1
    stringBuffer.append(TEXT_65);
d510 1
a510 1
    stringBuffer.append(TEXT_66);
a511 2
    stringBuffer.append(TEXT_67);
    stringBuffer.append(linkConstraints.getConstraintsInstanceFieldName());
d515 2
d520 1
a520 1
    stringBuffer.append(TEXT_70);
d530 1
a530 1
    stringBuffer.append(TEXT_71);
d532 1
a532 1
    stringBuffer.append(TEXT_72);
d534 1
a534 1
    stringBuffer.append(TEXT_73);
d554 1
a554 1
    stringBuffer.append(TEXT_74);
d556 1
a556 1
    stringBuffer.append(TEXT_75);
d558 1
a558 1
    stringBuffer.append(TEXT_76);
d560 1
a560 1
    stringBuffer.append(TEXT_77);
d569 1
a569 1
    stringBuffer.append(TEXT_78);
d571 1
a571 1
    stringBuffer.append(TEXT_79);
d573 1
a573 1
    stringBuffer.append(TEXT_80);
d581 1
a581 1
    stringBuffer.append(TEXT_81);
d583 1
a583 1
    stringBuffer.append(TEXT_82);
d602 1
a602 1
    stringBuffer.append(TEXT_83);
d611 1
a611 1
    stringBuffer.append(TEXT_84);
d613 1
a613 1
    stringBuffer.append(TEXT_85);
d615 1
a615 1
    stringBuffer.append(TEXT_86);
d617 1
a617 1
    stringBuffer.append(TEXT_87);
d619 1
a619 1
    stringBuffer.append(TEXT_88);
d624 1
a624 1
    stringBuffer.append(TEXT_89);
d626 1
a626 1
    stringBuffer.append(TEXT_90);
d628 1
a628 1
    stringBuffer.append(TEXT_91);
d630 1
a630 1
    stringBuffer.append(TEXT_92);
d638 1
a638 1
    stringBuffer.append(TEXT_93);
d640 1
a640 1
    stringBuffer.append(TEXT_94);
d642 1
a642 1
    stringBuffer.append(TEXT_95);
a643 2
    stringBuffer.append(TEXT_96);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
d647 2
d655 1
a655 1
    stringBuffer.append(TEXT_99);
d657 1
a657 1
    stringBuffer.append(TEXT_100);
d659 1
a659 1
    stringBuffer.append(TEXT_101);
d661 1
a661 1
    stringBuffer.append(TEXT_102);
d663 1
a663 1
    stringBuffer.append(TEXT_103);
d665 1
a665 1
    stringBuffer.append(TEXT_104);
d669 1
a669 1
    stringBuffer.append(TEXT_105);
d673 1
a673 1
    stringBuffer.append(TEXT_106);
d676 1
a676 1
    stringBuffer.append(TEXT_107);
d679 1
a679 1
    stringBuffer.append(TEXT_108);
d684 1
a684 1
    stringBuffer.append(TEXT_109);
d686 1
a686 1
    stringBuffer.append(TEXT_110);
d703 1
a703 1
    stringBuffer.append(TEXT_111);
d705 1
a705 1
    stringBuffer.append(TEXT_112);
d707 1
a707 1
    stringBuffer.append(TEXT_113);
d709 1
a709 1
    stringBuffer.append(TEXT_114);
d718 1
a718 1
    stringBuffer.append(TEXT_115);
d720 1
a720 1
    stringBuffer.append(TEXT_116);
d722 1
a722 1
    stringBuffer.append(TEXT_117);
d730 1
a730 1
    stringBuffer.append(TEXT_118);
d732 1
a732 1
    stringBuffer.append(TEXT_119);
d751 1
a751 1
    stringBuffer.append(TEXT_120);
d760 1
a760 1
    stringBuffer.append(TEXT_121);
d762 1
a762 1
    stringBuffer.append(TEXT_122);
d764 1
a764 1
    stringBuffer.append(TEXT_123);
d766 1
a766 1
    stringBuffer.append(TEXT_124);
d768 1
a768 1
    stringBuffer.append(TEXT_125);
d773 1
a773 1
    stringBuffer.append(TEXT_126);
d775 1
a775 1
    stringBuffer.append(TEXT_127);
d777 1
a777 1
    stringBuffer.append(TEXT_128);
d779 1
a779 1
    stringBuffer.append(TEXT_129);
d787 1
a787 1
    stringBuffer.append(TEXT_130);
d789 1
a789 1
    stringBuffer.append(TEXT_131);
d791 1
a791 1
    stringBuffer.append(TEXT_132);
a792 2
    stringBuffer.append(TEXT_133);
    stringBuffer.append(importManager.getImportedName(evalCtxQualifiedName));
d796 2
d804 1
a804 1
    stringBuffer.append(TEXT_136);
d806 1
a806 1
    stringBuffer.append(TEXT_137);
d808 1
a808 1
    stringBuffer.append(TEXT_138);
d810 1
a810 1
    stringBuffer.append(TEXT_139);
d812 1
a812 1
    stringBuffer.append(TEXT_140);
d814 1
a814 1
    stringBuffer.append(TEXT_141);
d818 1
a818 1
    stringBuffer.append(TEXT_142);
d822 1
a822 1
    stringBuffer.append(TEXT_143);
d825 1
a825 1
    stringBuffer.append(TEXT_144);
d828 1
a828 1
    stringBuffer.append(TEXT_145);
d833 1
a833 1
    stringBuffer.append(TEXT_146);
d835 1
a835 1
    stringBuffer.append(TEXT_147);
d837 1
a837 1
    stringBuffer.append(TEXT_148);
a840 2
    stringBuffer.append(TEXT_149);
    stringBuffer.append(importedAbstractExprCls);
d844 2
a846 2
    stringBuffer.append(TEXT_152);
    stringBuffer.append(importedAbstractExprCls);
d856 2
d859 1
a859 1
    stringBuffer.append(TEXT_158);
d861 1
a861 1
    stringBuffer.append(TEXT_159);
d863 1
a863 1
    stringBuffer.append(TEXT_160);
d867 1
a867 1
    stringBuffer.append(TEXT_161);
d869 1
a869 1
    stringBuffer.append(TEXT_162);
d884 1
a884 1
    stringBuffer.append(TEXT_163);
d894 1
d905 1
a905 1
    stringBuffer.append(TEXT_164);
d907 1
a907 1
    stringBuffer.append(TEXT_165);
d909 1
a909 1
    stringBuffer.append(TEXT_166);
d911 1
a911 1
    stringBuffer.append(TEXT_167);
d919 1
a919 1
    stringBuffer.append(TEXT_168);
d921 1
a921 1
    stringBuffer.append(TEXT_169);
d925 3
a927 1
    stringBuffer.append(TEXT_170);
d929 1
a929 1
    stringBuffer.append(TEXT_171);
d931 1
a931 1
}
d940 1
a940 1
    stringBuffer.append(TEXT_172);
d950 1
d961 1
a961 1
    stringBuffer.append(TEXT_173);
d963 1
a963 1
    stringBuffer.append(TEXT_174);
d965 1
a965 1
    stringBuffer.append(TEXT_175);
d967 1
a967 1
    stringBuffer.append(TEXT_176);
d975 1
a975 1
    stringBuffer.append(TEXT_177);
d977 1
a977 1
    stringBuffer.append(TEXT_178);
d981 3
a983 1
    stringBuffer.append(TEXT_179);
d985 1
a985 1
    stringBuffer.append(TEXT_180);
d987 1
a987 1
}
d993 1
a993 1
    stringBuffer.append(TEXT_181);
d998 1
a998 1
    stringBuffer.append(TEXT_182);
d1000 1
a1000 1
    stringBuffer.append(TEXT_183);
d1002 1
a1002 1
    stringBuffer.append(TEXT_184);
@


1.2
log
@[bblajer] #144412 Allow non-OCL-based FeatureSeqInitializers, constraints and selectors
@
text
@d69 122
a190 122
  protected final String TEXT_50 = " contextInstance) {" + NL + "\t\t\tObject value = expression.evaluate(contextInstance);" + NL + "\t\t\tif (sFeature.getEType() instanceof ";
  protected final String TEXT_51 = " && " + NL + "\t\t\t\tvalue instanceof ";
  protected final String TEXT_52 = ") {" + NL + "\t\t\t\tvalue = ((";
  protected final String TEXT_53 = ")value).getInstance();" + NL + "\t\t\t} else if(sFeature.isMany() && value instanceof ";
  protected final String TEXT_54 = ") {" + NL + "\t\t\t\t";
  protected final String TEXT_55 = " destCollection = (";
  protected final String TEXT_56 = ") contextInstance.eGet(sFeature);" + NL + "\t\t\t\tdestCollection.clear();" + NL + "\t\t\t\t";
  protected final String TEXT_57 = " valueCollection = (";
  protected final String TEXT_58 = ") value;" + NL + "\t\t\t\tfor (";
  protected final String TEXT_59 = " it = valueCollection.iterator(); it.hasNext();) {" + NL + "\t\t\t\t\tdestCollection.add(it.next());" + NL + "\t\t\t\t}  " + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t\tcontextInstance.eSet(sFeature, value);" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_60 = NL + "\t\t/** " + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tstatic class ";
  protected final String TEXT_61 = " {";
  protected final String TEXT_62 = NL;
  protected final String TEXT_63 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_64 = " ";
  protected final String TEXT_65 = "(";
  protected final String TEXT_66 = " self";
  protected final String TEXT_67 = ", ";
  protected final String TEXT_68 = " ";
  protected final String TEXT_69 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new UnsupportedOperationException(\"No user implementation provided in '";
  protected final String TEXT_70 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_71 = NL + "\t\t} //";
  protected final String TEXT_72 = NL;
  protected final String TEXT_73 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static class ";
  protected final String TEXT_74 = " {";
  protected final String TEXT_75 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tpublic static final ";
  protected final String TEXT_76 = " ";
  protected final String TEXT_77 = " = create";
  protected final String TEXT_78 = "();";
  protected final String TEXT_79 = NL;
  protected final String TEXT_80 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static ";
  protected final String TEXT_81 = " create";
  protected final String TEXT_82 = "() {";
  protected final String TEXT_83 = NL;
  protected final String TEXT_84 = " ";
  protected final String TEXT_85 = " = new ";
  protected final String TEXT_86 = "(3);";
  protected final String TEXT_87 = ".put(\"";
  protected final String TEXT_88 = "\", ";
  protected final String TEXT_89 = "); //$NON-NLS-1$";
  protected final String TEXT_90 = NL + "\t\t\t";
  protected final String TEXT_91 = " sourceExpression = ";
  protected final String TEXT_92 = "null";
  protected final String TEXT_93 = ".";
  protected final String TEXT_94 = "(\"";
  protected final String TEXT_95 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_96 = ", ";
  protected final String TEXT_97 = ")";
  protected final String TEXT_98 = ".";
  protected final String TEXT_99 = "(\"";
  protected final String TEXT_100 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_101 = ")";
  protected final String TEXT_102 = "new ";
  protected final String TEXT_103 = "(";
  protected final String TEXT_104 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_105 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_106 = " self = (";
  protected final String TEXT_107 = ")context;";
  protected final String TEXT_108 = "\t" + NL + "\t\t";
  protected final String TEXT_109 = " ";
  protected final String TEXT_110 = " = (";
  protected final String TEXT_111 = ")env.get(\"";
  protected final String TEXT_112 = "\"); //$NON-NLS-1$";
  protected final String TEXT_113 = NL + "\t\treturn ";
  protected final String TEXT_114 = ".";
  protected final String TEXT_115 = "(self";
  protected final String TEXT_116 = ", ";
  protected final String TEXT_117 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_118 = "null";
  protected final String TEXT_119 = ";";
  protected final String TEXT_120 = NL;
  protected final String TEXT_121 = " ";
  protected final String TEXT_122 = " = new ";
  protected final String TEXT_123 = "(3);";
  protected final String TEXT_124 = ".put(\"";
  protected final String TEXT_125 = "\", ";
  protected final String TEXT_126 = "); //$NON-NLS-1$";
  protected final String TEXT_127 = NL + "\t\t\t";
  protected final String TEXT_128 = " targetExpression = ";
  protected final String TEXT_129 = "null";
  protected final String TEXT_130 = ".";
  protected final String TEXT_131 = "(\"";
  protected final String TEXT_132 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_133 = ", ";
  protected final String TEXT_134 = ")";
  protected final String TEXT_135 = ".";
  protected final String TEXT_136 = "(\"";
  protected final String TEXT_137 = "\", //$NON-NLS-1$" + NL + "\t";
  protected final String TEXT_138 = ")";
  protected final String TEXT_139 = "new ";
  protected final String TEXT_140 = "(";
  protected final String TEXT_141 = ") {" + NL + "\tprotected Object doEvaluate(Object context, ";
  protected final String TEXT_142 = " env) {\t" + NL + "\t\t";
  protected final String TEXT_143 = " self = (";
  protected final String TEXT_144 = ")context;";
  protected final String TEXT_145 = "\t" + NL + "\t\t";
  protected final String TEXT_146 = " ";
  protected final String TEXT_147 = " = (";
  protected final String TEXT_148 = ")env.get(\"";
  protected final String TEXT_149 = "\"); //$NON-NLS-1$";
  protected final String TEXT_150 = NL + "\t\treturn ";
  protected final String TEXT_151 = ".";
  protected final String TEXT_152 = "(self";
  protected final String TEXT_153 = ", ";
  protected final String TEXT_154 = ");" + NL + "\t}" + NL + "}";
  protected final String TEXT_155 = "null";
  protected final String TEXT_156 = ";" + NL + "\t\t\treturn new ";
  protected final String TEXT_157 = "(sourceExpression, targetExpression);" + NL + "\t\t}";
  protected final String TEXT_158 = NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate static final String OPPOSITE_END_VAR = \"oppositeEnd\"; //$NON-NLS-1$" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_159 = " srcEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tprivate ";
  protected final String TEXT_160 = " targetEndInv;" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t\t" + NL + "\t\tpublic ";
  protected final String TEXT_161 = "(";
  protected final String TEXT_162 = " sourceEnd, ";
  protected final String TEXT_163 = " targetEnd) {" + NL + "\t\t\tthis.srcEndInv = sourceEnd;\t\t\t" + NL + "\t\t\tthis.targetEndInv = targetEnd;\t\t\t" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */\t" + NL + "\t\tpublic boolean canCreateLink(Object source, Object target, boolean isBackDirected) {" + NL + "\t\t\tif (source != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_164 = " sourceConstraint = isBackDirected ? targetEndInv : srcEndInv;" + NL + "\t\t\t\tif (sourceConstraint != null && !evaluate(sourceConstraint, source, target, false)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (target != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_165 = " targetConstraint = isBackDirected ? srcEndInv : targetEndInv;" + NL + "\t\t\t\tif (targetConstraint != null && !evaluate(targetConstraint, source, target, true)) {" + NL + "\t\t\t\t\treturn false;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\treturn true;" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated " + NL + "\t\t */" + NL + "\t\tprivate static boolean evaluate(";
  protected final String TEXT_166 = " constraint, Object sourceEnd, Object oppositeEnd, boolean clearEnv) {" + NL + "\t\t\t";
  protected final String TEXT_167 = " evalEnv = ";
  protected final String TEXT_168 = ".singletonMap(OPPOSITE_END_VAR, oppositeEnd);\t\t\t" + NL + "\t\t\ttry {" + NL + "\t\t\t\tObject val = constraint.evaluate(sourceEnd, evalEnv);" + NL + "\t\t\t\treturn (val instanceof Boolean) ? ((Boolean) val).booleanValue() : false;" + NL + "\t\t\t} catch(Exception e) {\t" + NL + "\t\t\t\t";
  protected final String TEXT_169 = ".getInstance().logError(\"Link constraint evaluation error\", e); //$NON-NLS-1$" + NL + "\t\t\t\treturn false;" + NL + "\t\t\t}" + NL + "\t\t}";
  protected final String TEXT_170 = "\t\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class ";
  protected final String TEXT_171 = " {";
d200 4
a203 13
  protected final String TEXT_181 = NL;
  protected final String TEXT_182 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "private static ";
  protected final String TEXT_183 = " ";
  protected final String TEXT_184 = "(";
  protected final String TEXT_185 = " self";
  protected final String TEXT_186 = ", ";
  protected final String TEXT_187 = " ";
  protected final String TEXT_188 = ") {" + NL + "\t// TODO: implement this method" + NL + "\t// Ensure that you remove @@generated or mark it @@generated NOT" + NL + "\t" + NL + "\tthrow new UnsupportedOperationException(\"No user implementation provided in '";
  protected final String TEXT_189 = "' operation\"); //$NON-NLS-1$" + NL + "}";
  protected final String TEXT_190 = NL + "\t} // ";
  protected final String TEXT_191 = "\t\t" + NL + "\t}";
  protected final String TEXT_192 = "\t" + NL + "}";
  protected final String TEXT_193 = NL;
a414 18
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EEnum"));
    stringBuffer.append(TEXT_51);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EEnumLiteral"));
    stringBuffer.append(TEXT_52);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EEnumLiteral"));
    stringBuffer.append(TEXT_53);
    stringBuffer.append(importManager.getImportedName("java.util.Collection"));
    stringBuffer.append(TEXT_54);
    stringBuffer.append(importManager.getImportedName("java.util.Collection"));
    stringBuffer.append(TEXT_55);
    stringBuffer.append(importManager.getImportedName("java.util.Collection"));
    stringBuffer.append(TEXT_56);
    stringBuffer.append(importManager.getImportedName("java.util.Collection"));
    stringBuffer.append(TEXT_57);
    stringBuffer.append(importManager.getImportedName("java.util.Collection"));
    stringBuffer.append(TEXT_58);
    stringBuffer.append(importManager.getImportedName("java.util.Iterator"));
    stringBuffer.append(TEXT_59);
d418 1
a418 1
    stringBuffer.append(TEXT_60);
d420 1
a420 1
    stringBuffer.append(TEXT_61);
d429 1
a429 1
    stringBuffer.append(TEXT_62);
d449 1
a449 1
    stringBuffer.append(TEXT_63);
d451 1
a451 1
    stringBuffer.append(TEXT_64);
d453 1
a453 1
    stringBuffer.append(TEXT_65);
d455 1
a455 1
    stringBuffer.append(TEXT_66);
d463 1
a463 1
    stringBuffer.append(TEXT_67);
d465 1
a465 1
    stringBuffer.append(TEXT_68);
d469 1
a469 1
    stringBuffer.append(TEXT_69);
d471 1
a471 1
    stringBuffer.append(TEXT_70);
d478 1
a478 1
    stringBuffer.append(TEXT_71);
d485 1
a485 1
    stringBuffer.append(TEXT_72);
d493 1
a493 1
    stringBuffer.append(TEXT_73);
d495 1
a495 1
    stringBuffer.append(TEXT_74);
d504 1
a504 1
    stringBuffer.append(TEXT_75);
d506 1
a506 1
    stringBuffer.append(TEXT_76);
d508 1
a508 1
    stringBuffer.append(TEXT_77);
d510 1
a510 1
    stringBuffer.append(TEXT_78);
d514 1
a514 1
    stringBuffer.append(TEXT_79);
d524 1
a524 1
    stringBuffer.append(TEXT_80);
d526 1
a526 1
    stringBuffer.append(TEXT_81);
d528 1
a528 1
    stringBuffer.append(TEXT_82);
d548 1
a548 1
    stringBuffer.append(TEXT_83);
d550 1
a550 1
    stringBuffer.append(TEXT_84);
d552 1
a552 1
    stringBuffer.append(TEXT_85);
d554 1
a554 1
    stringBuffer.append(TEXT_86);
d563 1
a563 1
    stringBuffer.append(TEXT_87);
d565 1
a565 1
    stringBuffer.append(TEXT_88);
d567 1
a567 1
    stringBuffer.append(TEXT_89);
d575 1
a575 1
    stringBuffer.append(TEXT_90);
d577 1
a577 1
    stringBuffer.append(TEXT_91);
d596 1
a596 1
    stringBuffer.append(TEXT_92);
d605 1
a605 1
    stringBuffer.append(TEXT_93);
d607 1
a607 1
    stringBuffer.append(TEXT_94);
d609 1
a609 1
    stringBuffer.append(TEXT_95);
d611 1
a611 1
    stringBuffer.append(TEXT_96);
d613 1
a613 1
    stringBuffer.append(TEXT_97);
d618 1
a618 1
    stringBuffer.append(TEXT_98);
d620 1
a620 1
    stringBuffer.append(TEXT_99);
d622 1
a622 1
    stringBuffer.append(TEXT_100);
d624 1
a624 1
    stringBuffer.append(TEXT_101);
d632 1
a632 1
    stringBuffer.append(TEXT_102);
d634 1
a634 1
    stringBuffer.append(TEXT_103);
d636 1
a636 1
    stringBuffer.append(TEXT_104);
d638 1
a638 1
    stringBuffer.append(TEXT_105);
d640 1
a640 1
    stringBuffer.append(TEXT_106);
d642 1
a642 1
    stringBuffer.append(TEXT_107);
d649 1
a649 1
    stringBuffer.append(TEXT_108);
d651 1
a651 1
    stringBuffer.append(TEXT_109);
d653 1
a653 1
    stringBuffer.append(TEXT_110);
d655 1
a655 1
    stringBuffer.append(TEXT_111);
d657 1
a657 1
    stringBuffer.append(TEXT_112);
d659 1
a659 1
    stringBuffer.append(TEXT_113);
d663 1
a663 1
    stringBuffer.append(TEXT_114);
d667 1
a667 1
    stringBuffer.append(TEXT_115);
d670 1
a670 1
    stringBuffer.append(TEXT_116);
d673 1
a673 1
    stringBuffer.append(TEXT_117);
d678 1
a678 1
    stringBuffer.append(TEXT_118);
d680 1
a680 1
    stringBuffer.append(TEXT_119);
d697 1
a697 1
    stringBuffer.append(TEXT_120);
d699 1
a699 1
    stringBuffer.append(TEXT_121);
d701 1
a701 1
    stringBuffer.append(TEXT_122);
d703 1
a703 1
    stringBuffer.append(TEXT_123);
d712 1
a712 1
    stringBuffer.append(TEXT_124);
d714 1
a714 1
    stringBuffer.append(TEXT_125);
d716 1
a716 1
    stringBuffer.append(TEXT_126);
d724 1
a724 1
    stringBuffer.append(TEXT_127);
d726 1
a726 1
    stringBuffer.append(TEXT_128);
d745 1
a745 1
    stringBuffer.append(TEXT_129);
d754 1
a754 1
    stringBuffer.append(TEXT_130);
d756 1
a756 1
    stringBuffer.append(TEXT_131);
d758 1
a758 1
    stringBuffer.append(TEXT_132);
d760 1
a760 1
    stringBuffer.append(TEXT_133);
d762 1
a762 1
    stringBuffer.append(TEXT_134);
d767 1
a767 1
    stringBuffer.append(TEXT_135);
d769 1
a769 1
    stringBuffer.append(TEXT_136);
d771 1
a771 1
    stringBuffer.append(TEXT_137);
d773 1
a773 1
    stringBuffer.append(TEXT_138);
d781 1
a781 1
    stringBuffer.append(TEXT_139);
d783 1
a783 1
    stringBuffer.append(TEXT_140);
d785 1
a785 1
    stringBuffer.append(TEXT_141);
d787 1
a787 1
    stringBuffer.append(TEXT_142);
d789 1
a789 1
    stringBuffer.append(TEXT_143);
d791 1
a791 1
    stringBuffer.append(TEXT_144);
d798 1
a798 1
    stringBuffer.append(TEXT_145);
d800 1
a800 1
    stringBuffer.append(TEXT_146);
d802 1
a802 1
    stringBuffer.append(TEXT_147);
d804 1
a804 1
    stringBuffer.append(TEXT_148);
d806 1
a806 1
    stringBuffer.append(TEXT_149);
d808 1
a808 1
    stringBuffer.append(TEXT_150);
d812 1
a812 1
    stringBuffer.append(TEXT_151);
d816 1
a816 1
    stringBuffer.append(TEXT_152);
d819 1
a819 1
    stringBuffer.append(TEXT_153);
d822 1
a822 1
    stringBuffer.append(TEXT_154);
d827 1
a827 1
    stringBuffer.append(TEXT_155);
d829 1
a829 1
    stringBuffer.append(TEXT_156);
d831 1
a831 1
    stringBuffer.append(TEXT_157);
d835 1
a835 1
    stringBuffer.append(TEXT_158);
d837 1
a837 1
    stringBuffer.append(TEXT_159);
d839 1
a839 1
    stringBuffer.append(TEXT_160);
d841 1
a841 1
    stringBuffer.append(TEXT_161);
d843 1
a843 1
    stringBuffer.append(TEXT_162);
d845 1
a845 1
    stringBuffer.append(TEXT_163);
d847 1
a847 1
    stringBuffer.append(TEXT_164);
d849 1
a849 1
    stringBuffer.append(TEXT_165);
d851 1
a851 1
    stringBuffer.append(TEXT_166);
d853 1
a853 1
    stringBuffer.append(TEXT_167);
d855 1
a855 1
    stringBuffer.append(TEXT_168);
d857 1
a857 1
    stringBuffer.append(TEXT_169);
d861 1
a861 1
    stringBuffer.append(TEXT_170);
d863 1
a863 1
    stringBuffer.append(TEXT_171);
d878 1
a878 1
    stringBuffer.append(TEXT_172);
d898 1
a898 1
    stringBuffer.append(TEXT_173);
d900 1
a900 1
    stringBuffer.append(TEXT_174);
d902 1
a902 1
    stringBuffer.append(TEXT_175);
d904 1
a904 1
    stringBuffer.append(TEXT_176);
d912 1
a912 1
    stringBuffer.append(TEXT_177);
d914 1
a914 1
    stringBuffer.append(TEXT_178);
d918 1
a918 1
    stringBuffer.append(TEXT_179);
d920 1
a920 1
    stringBuffer.append(TEXT_180);
d931 1
a931 1
    stringBuffer.append(TEXT_181);
d951 1
a951 1
    stringBuffer.append(TEXT_182);
d953 1
a953 1
    stringBuffer.append(TEXT_183);
d955 1
a955 1
    stringBuffer.append(TEXT_184);
d957 1
a957 1
    stringBuffer.append(TEXT_185);
d965 1
a965 1
    stringBuffer.append(TEXT_186);
d967 1
a967 1
    stringBuffer.append(TEXT_187);
d971 1
a971 1
    stringBuffer.append(TEXT_188);
d973 1
a973 1
    stringBuffer.append(TEXT_189);
d981 1
a981 1
    stringBuffer.append(TEXT_190);
d986 1
a986 1
    stringBuffer.append(TEXT_191);
d988 1
a988 1
    stringBuffer.append(TEXT_192);
d990 1
a990 1
    stringBuffer.append(TEXT_193);
@


1.1
log
@[bblajer] #136702 Code generation targeting pure-GEF runtime
@
text
@d6 1
d32 181
a212 27
  protected final String TEXT_13 = NL + "\t\t\tnew FeatureInitializer(\"";
  protected final String TEXT_14 = "\", //$NON-NLS-1$" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_15 = ".eINSTANCE.get";
  protected final String TEXT_16 = "()," + NL + "\t\t\t\t\t\t";
  protected final String TEXT_17 = ".eINSTANCE.get";
  protected final String TEXT_18 = "())";
  protected final String TEXT_19 = ", ";
  protected final String TEXT_20 = NL;
  protected final String TEXT_21 = NL + "\t});";
  protected final String TEXT_22 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class ObjectInitializer implements IElementInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate FeatureInitializer[] initExpressions;" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tObjectInitializer(FeatureInitializer[] initExpressions) {" + NL + "\t\t\tthis.initExpressions = initExpressions;" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void initializeElement(";
  protected final String TEXT_23 = " instance) {" + NL + "\t\t\tfor (int i = 0; i < initExpressions.length; i++) {" + NL + "\t\t\t\tFeatureInitializer nextExpr = initExpressions[i];" + NL + "\t\t\t\tnextExpr.init(instance);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tstatic class FeatureInitializer {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_24 = " contextClass;" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_25 = " sFeature;" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_26 = " expressionBody;" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_27 = " query;" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tFeatureInitializer(";
  protected final String TEXT_28 = " expression, " + NL + "\t\t\t";
  protected final String TEXT_29 = " context, " + NL + "\t\t\t";
  protected final String TEXT_30 = " sFeature) {" + NL + "\t\t\tthis.sFeature = sFeature;" + NL + "\t\t\tthis.expressionBody = expression;" + NL + "\t\t\tthis.contextClass\t= context;" + NL + "\t\t}" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tvoid init(";
  protected final String TEXT_31 = " contextInstance) {" + NL + "\t\t\tif(this.query == null) {" + NL + "\t\t\t\tthis.query = ";
  protected final String TEXT_32 = ".eINSTANCE.createQuery(expressionBody, contextClass);" + NL + "\t\t\t}" + NL + "\t\t\tObject value = query.evaluate(contextInstance);" + NL + "\t\t\tif(sFeature.getEType() instanceof ";
  protected final String TEXT_33 = " && " + NL + "\t\t\t\tvalue instanceof ";
  protected final String TEXT_34 = ") {" + NL + "\t\t\t\tvalue = ((";
  protected final String TEXT_35 = ")value).getInstance();" + NL + "\t\t\t} else if(value != null && sFeature.isMany()) {" + NL + "\t\t\t\tvalue = new ";
  protected final String TEXT_36 = "((";
  protected final String TEXT_37 = ")value);" + NL + "\t\t\t}" + NL + "\t\t\tcontextInstance.eSet(sFeature, value);" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_38 = NL + "}";
  protected final String TEXT_39 = NL;
d231 6
d247 1
d249 6
a254 1
boolean needsOCLInitializer = false;
d270 1
a270 1
	if (elementInitializer instanceof GenFeatureSeqInitializer == false) {
d286 1
a286 1
	needsOCLInitializer = true;
d293 5
a297 2
		for(Iterator featInitIt = ftInitializer.getInitializers().iterator(); featInitIt.hasNext();) { 
			GenFeatureValueSpec featureValSpec = (GenFeatureValueSpec)featInitIt.next();
d299 15
a313 1
    stringBuffer.append(featureValSpec.getBody());
d315 8
a322 1
    stringBuffer.append(importManager.getImportedName(ftInitializer.getElementQualifiedPackageInterfaceName()));
d324 1
a324 1
    stringBuffer.append(ftInitializer.getElementClassAccessorName());
d326 1
a326 1
    stringBuffer.append(importManager.getImportedName(featureValSpec.getFeatureQualifiedPackageInterfaceName()));
d328 1
a328 2
    stringBuffer.append(featureValSpec.getFeature().getFeatureAccessorName()
						);
d330 1
a330 1
    if (featInitIt.hasNext()) {
a331 2
    }
    stringBuffer.append(TEXT_20);
d333 1
a333 1
		} // end of GenFeatureValueSpec iteration
d335 3
d339 4
d344 5
a348 2
}
if (needsOCLInitializer) {
a349 4
    stringBuffer.append(TEXT_22);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_23);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EClass"));
d351 1
a351 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
d353 1
a353 1
    stringBuffer.append(importManager.getImportedName("java.lang.String"));
d355 1
a355 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ocl.query.Query"));
d357 1
a357 1
    stringBuffer.append(importManager.getImportedName("java.lang.String"));
d359 1
a359 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EClass"));
d361 6
a366 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature"));
d368 1
a368 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
d370 1
a370 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ocl.query.QueryFactory"));
d372 1
a372 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EEnum"));
d374 1
a374 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EEnumLiteral"));
d376 1
a376 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EEnumLiteral"));
d378 3
a380 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.BasicEList"));
d382 48
d431 570
a1000 1
    stringBuffer.append(TEXT_37);
d1004 12
a1015 1
    stringBuffer.append(TEXT_38);
d1017 1
a1017 1
    stringBuffer.append(TEXT_39);
@

