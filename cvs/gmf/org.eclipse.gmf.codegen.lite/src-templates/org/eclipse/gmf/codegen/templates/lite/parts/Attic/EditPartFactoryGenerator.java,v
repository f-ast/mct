head	1.5;
access;
symbols
	v20080910-1520:1.5
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.3
	v20070228-2000:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3
	v20061005-1700:1.3
	M1_20:1.3
	v20060904-1500:1.3
	v20060824-1600:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060626-1420:1.3
	v20060620-0400:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.06.01.09.49.13;	author bblajer;	state dead;
branches;
next	1.4;
commitid	7e07465feb984567;

1.4
date	2007.05.20.12.55.36;	author mfeldman;	state Exp;
branches;
next	1.3;
commitid	7d1d465045114567;

1.3
date	2006.05.10.12.04.25;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.26.11.58.49;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.21.20.15;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.5
log
@rewrite EditPartFactory in XPand
@
text
@package org.eclipse.gmf.codegen.templates.lite.parts;

import java.util.*;
import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.gmf.common.codegen.*;

public class EditPartFactoryGenerator
{
  protected static String nl;
  public static synchronized EditPartFactoryGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    EditPartFactoryGenerator result = new EditPartFactoryGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * ";
  protected final String TEXT_2 = NL + " */";
  protected final String TEXT_3 = NL;
  protected final String TEXT_4 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_5 = " implements EditPartFactory {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static final String EXTERNAL_NODE_LABELS_LAYER = \"External Node Labels\";" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic EditPart createEditPart(EditPart context, Object model) {" + NL + "\t\tif (model instanceof View) {" + NL + "\t\t\tView view = (View) model;" + NL + "\t\t\tif (!";
  protected final String TEXT_6 = ".MODEL_ID.equals(";
  protected final String TEXT_7 = ".getModelID(view))) {" + NL + "\t\t\t\treturn null;" + NL + "\t\t\t}" + NL + "\t\t\t" + NL + "\t\t\tint viewVisualID = ";
  protected final String TEXT_8 = ".getVisualID(view);" + NL + "\t\t\tswitch (viewVisualID) {";
  protected final String TEXT_9 = NL + "\t\t\tcase ";
  protected final String TEXT_10 = ".VISUAL_ID:" + NL + "\t\t\t\t return new ";
  protected final String TEXT_11 = "(";
  protected final String TEXT_12 = "(";
  protected final String TEXT_13 = ")";
  protected final String TEXT_14 = "view);";
  protected final String TEXT_15 = NL + "\t\t\tcase ";
  protected final String TEXT_16 = ".VISUAL_ID:" + NL + "\t\t\t\treturn new ";
  protected final String TEXT_17 = "(view);";
  protected final String TEXT_18 = "\t\t" + NL + "\t\t\tcase ";
  protected final String TEXT_19 = ".VISUAL_ID:" + NL + "\t\t\t\treturn new ";
  protected final String TEXT_20 = "(view);";
  protected final String TEXT_21 = NL + "\t\t\tcase ";
  protected final String TEXT_22 = ".VISUAL_ID:" + NL + "\t\t\t\t\treturn new ";
  protected final String TEXT_23 = "(view);";
  protected final String TEXT_24 = NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn createUnrecognizedEditPart(context, model);" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\t private EditPart createUnrecognizedEditPart(EditPart context, Object model) {" + NL + "\t \t// Handle creation of unrecognized child node EditParts here" + NL + "\t \treturn null;" + NL + "\t }" + NL + "" + NL + "}";
  protected final String TEXT_25 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];

    
String copyrightText = genDiagram.getEditorGen().getCopyrightText();
if (copyrightText != null && copyrightText.trim().length() > 0) {

    stringBuffer.append(TEXT_1);
    stringBuffer.append(copyrightText.replaceAll("\n", "\n * "));
    stringBuffer.append(TEXT_2);
    }
    importManager.emitPackageStatement(stringBuffer);
    stringBuffer.append(TEXT_3);
    
importManager.addImport("org.eclipse.gef.EditPart");
importManager.addImport("org.eclipse.gef.EditPartFactory");
importManager.addImport("org.eclipse.gmf.runtime.notation.View");
importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(genDiagram.getEditPartFactoryClassName());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartQualifiedClassName()));
    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName()));
    stringBuffer.append(TEXT_7);
    stringBuffer.append(importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName()));
    stringBuffer.append(TEXT_8);
    
for (Iterator containers = genDiagram.getAllContainers().iterator(); containers.hasNext();) {
	GenContainerBase container = (GenContainerBase) containers.next();

    stringBuffer.append(TEXT_9);
    stringBuffer.append(importManager.getImportedName(container.getEditPartQualifiedClassName()));
    stringBuffer.append(TEXT_10);
    stringBuffer.append(container.getEditPartClassName());
    stringBuffer.append(TEXT_11);
    if(container instanceof GenDiagram) {
    stringBuffer.append(TEXT_12);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_13);
    }
    stringBuffer.append(TEXT_14);
    
	if (container instanceof GenNode) {
		GenNode node = (GenNode) container;
		for (Iterator labels = node.getLabels().iterator(); labels.hasNext();) {
			GenNodeLabel label = (GenNodeLabel) labels.next();

    stringBuffer.append(TEXT_15);
    stringBuffer.append(importManager.getImportedName(label.getEditPartQualifiedClassName()));
    stringBuffer.append(TEXT_16);
    stringBuffer.append(label.getEditPartClassName());
    stringBuffer.append(TEXT_17);
    
		}
	}
}
for (Iterator links = genDiagram.getLinks().iterator(); links.hasNext();) {
	GenLink link = (GenLink) links.next();

    stringBuffer.append(TEXT_18);
    stringBuffer.append(importManager.getImportedName(link.getEditPartQualifiedClassName()));
    stringBuffer.append(TEXT_19);
    stringBuffer.append(link.getEditPartClassName());
    stringBuffer.append(TEXT_20);
    
	for (Iterator linkLabels = link.getLabels().iterator(); linkLabels.hasNext();) {
		GenLinkLabel linkLabel = (GenLinkLabel) linkLabels.next();

    stringBuffer.append(TEXT_21);
    stringBuffer.append(importManager.getImportedName(linkLabel.getEditPartQualifiedClassName()));
    stringBuffer.append(TEXT_22);
    stringBuffer.append(linkLabel.getEditPartClassName());
    stringBuffer.append(TEXT_23);
    
	}
}

    stringBuffer.append(TEXT_24);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_25);
    return stringBuffer.toString();
  }
}
@


1.4
log
@Anna Karyakina's migration fix
@
text
@@


1.3
log
@sync with changes in gmfgen
@
text
@d19 11
a29 11
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "/*" + NL + " * ";
  protected final String TEXT_3 = NL + " */";
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_6 = " implements EditPartFactory {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static final String EXTERNAL_NODE_LABELS_LAYER = \"External Node Labels\";" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic EditPart createEditPart(EditPart context, Object model) {" + NL + "\t\tif (model instanceof View) {" + NL + "\t\t\tView view = (View) model;" + NL + "\t\t\tif (!";
  protected final String TEXT_7 = ".MODEL_ID.equals(";
  protected final String TEXT_8 = ".getModelID(view))) {" + NL + "\t\t\t\treturn null;" + NL + "\t\t\t}" + NL + "\t\t\t" + NL + "\t\t\tint viewVisualID = ";
  protected final String TEXT_9 = ".getVisualID(view);" + NL + "\t\t\tswitch (viewVisualID) {";
  protected final String TEXT_10 = NL + "\t\t\tcase ";
  protected final String TEXT_11 = ".VISUAL_ID:" + NL + "\t\t\t\t return new ";
d31 13
a43 14
  protected final String TEXT_13 = "(";
  protected final String TEXT_14 = ")";
  protected final String TEXT_15 = "view);";
  protected final String TEXT_16 = NL + "\t\t\tcase ";
  protected final String TEXT_17 = ".VISUAL_ID:" + NL + "\t\t\t\treturn new ";
  protected final String TEXT_18 = "(view);";
  protected final String TEXT_19 = "\t\t" + NL + "\t\t\tcase ";
  protected final String TEXT_20 = ".VISUAL_ID:" + NL + "\t\t\t\treturn new ";
  protected final String TEXT_21 = "(view);";
  protected final String TEXT_22 = NL + "\t\t\tcase ";
  protected final String TEXT_23 = ".VISUAL_ID:" + NL + "\t\t\t\t\treturn new ";
  protected final String TEXT_24 = "(view);";
  protected final String TEXT_25 = NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn createUnrecognizedEditPart(context, model);" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\t private EditPart createUnrecognizedEditPart(EditPart context, Object model) {" + NL + "\t \t// Handle creation of unrecognized child node EditParts here" + NL + "\t \treturn null;" + NL + "\t }" + NL + "" + NL + "}";
  protected final String TEXT_26 = NL;
a51 1
    stringBuffer.append(TEXT_1);
d56 2
a58 2
    stringBuffer.append(copyrightText.replaceAll("\n", "\n * "));
    stringBuffer.append(TEXT_3);
d61 1
a61 1
    stringBuffer.append(TEXT_4);
d67 2
d70 1
a70 1
    stringBuffer.append(genDiagram.getEditPartFactoryClassName());
d72 1
a72 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartQualifiedClassName()));
a75 2
    stringBuffer.append(importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName()));
    stringBuffer.append(TEXT_9);
d80 2
d83 1
a83 1
    stringBuffer.append(importManager.getImportedName(container.getEditPartQualifiedClassName()));
d85 1
a85 1
    stringBuffer.append(container.getEditPartClassName());
d87 1
a87 1
    if(container instanceof GenDiagram) {
d89 1
a89 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
a90 2
    }
    stringBuffer.append(TEXT_15);
d97 2
d100 1
a100 1
    stringBuffer.append(importManager.getImportedName(label.getEditPartQualifiedClassName()));
a101 2
    stringBuffer.append(label.getEditPartClassName());
    stringBuffer.append(TEXT_18);
d109 2
d112 1
a112 1
    stringBuffer.append(importManager.getImportedName(link.getEditPartQualifiedClassName()));
a113 2
    stringBuffer.append(link.getEditPartClassName());
    stringBuffer.append(TEXT_21);
d118 2
d121 1
a121 1
    stringBuffer.append(importManager.getImportedName(linkLabel.getEditPartQualifiedClassName()));
a122 2
    stringBuffer.append(linkLabel.getEditPartClassName());
    stringBuffer.append(TEXT_24);
d127 2
a129 2
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_26);
@


1.2
log
@[bblajer] #138415 Update Lite generator to use VISUAL_ID as view type scheme instead of annotations
@
text
@d94 1
a94 1
	if (container instanceof GenNode && !((GenNode) container).isListContainerEntry()) {
@


1.1
log
@[bblajer] #136702 Code generation targeting pure-GEF runtime
@
text
@d24 21
a44 28
  protected final String TEXT_6 = " implements EditPartFactory {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static final String EXTERNAL_NODE_LABELS_LAYER = \"External Node Labels\";" + NL;
  protected final String TEXT_7 = NL;
  protected final String TEXT_8 = "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate String getModelID(";
  protected final String TEXT_9 = " containerView) {" + NL + "\t\t";
  protected final String TEXT_10 = " annotation = containerView.getEAnnotation(\"ViewIdentifier\"); //$NON-NLS-1$" + NL + "\t\tif (annotation == null) {" + NL + "\t\t\treturn null;" + NL + "\t\t}" + NL + "\t\treturn (String) annotation.getDetails().get(\"modelID\"); //$NON-NLS-1$" + NL + "\t}" + NL;
  protected final String TEXT_11 = NL;
  protected final String TEXT_12 = "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static int getVisualID(";
  protected final String TEXT_13 = " containerView) {" + NL + "\t\t";
  protected final String TEXT_14 = " annotation = containerView.getEAnnotation(\"ViewIdentifier\"); //$NON-NLS-1$" + NL + "\t\tif (annotation == null) {" + NL + "\t\t\treturn -1;" + NL + "\t\t}" + NL + "\t\tString visualID = (String) annotation.getDetails().get(\"visualID\"); //$NON-NLS-1$" + NL + "\t\tif (visualID == null) {" + NL + "\t\t\treturn -1;" + NL + "\t\t}" + NL + "\t\ttry {" + NL + "\t\t\treturn Integer.parseInt(visualID);" + NL + "\t\t} catch (NumberFormatException e) {" + NL + "\t\t\t";
  protected final String TEXT_15 = ".getInstance().logError(\"Unable to parse \\\"visualID\\\" annotation: \" + visualID, e);" + NL + "\t\t}" + NL + "\t\treturn -1;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic EditPart createEditPart(EditPart context, Object model) {" + NL + "\t\tif (model instanceof View) {" + NL + "\t\t\tView view = (View) model;" + NL + "\t\t\tif (!\"";
  protected final String TEXT_16 = "\".equals(getModelID(view))) {" + NL + "\t\t\t\treturn null;" + NL + "\t\t\t}" + NL + "\t\t\t" + NL + "\t\t\tint viewVisualID = getVisualID(view);" + NL + "\t\t\tswitch (viewVisualID) {";
  protected final String TEXT_17 = NL + "\t\t\tcase ";
  protected final String TEXT_18 = ":" + NL + "\t\t\t\t return new ";
  protected final String TEXT_19 = "(";
  protected final String TEXT_20 = "(";
  protected final String TEXT_21 = ")";
  protected final String TEXT_22 = "view);";
  protected final String TEXT_23 = NL + "\t\t\tcase ";
  protected final String TEXT_24 = ":" + NL + "\t\t\t\treturn new ";
  protected final String TEXT_25 = "(view);";
  protected final String TEXT_26 = "\t\t" + NL + "\t\t\tcase ";
  protected final String TEXT_27 = ":" + NL + "\t\t\t\treturn new ";
  protected final String TEXT_28 = "(view);";
  protected final String TEXT_29 = NL + "\t\t\tcase ";
  protected final String TEXT_30 = ":" + NL + "\t\t\t\t\treturn new ";
  protected final String TEXT_31 = "(view);";
  protected final String TEXT_32 = NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn createUnrecognizedEditPart(context, model);" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\t private EditPart createUnrecognizedEditPart(EditPart context, Object model) {" + NL + "\t \t// Handle creation of unrecognized child node EditParts here" + NL + "\t \treturn null;" + NL + "\t }" + NL + "" + NL + "}";
  protected final String TEXT_33 = NL;
a50 1
final String modelID = genDiagram.getEditorGen().getModelID();
d72 1
d74 1
d76 1
a76 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
a77 12
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EAnnotation"));
    stringBuffer.append(TEXT_10);
    stringBuffer.append(TEXT_11);
    stringBuffer.append(TEXT_12);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.View"));
    stringBuffer.append(TEXT_13);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EAnnotation"));
    stringBuffer.append(TEXT_14);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_15);
    stringBuffer.append(modelID);
    stringBuffer.append(TEXT_16);
d82 3
a84 3
    stringBuffer.append(TEXT_17);
    stringBuffer.append(container.getVisualID());
    stringBuffer.append(TEXT_18);
d86 1
a86 1
    stringBuffer.append(TEXT_19);
d88 1
a88 1
    stringBuffer.append(TEXT_20);
d90 1
a90 1
    stringBuffer.append(TEXT_21);
d92 1
a92 1
    stringBuffer.append(TEXT_22);
d99 3
a101 3
    stringBuffer.append(TEXT_23);
    stringBuffer.append(label.getVisualID());
    stringBuffer.append(TEXT_24);
d103 1
a103 1
    stringBuffer.append(TEXT_25);
d111 3
a113 3
    stringBuffer.append(TEXT_26);
    stringBuffer.append(link.getVisualID());
    stringBuffer.append(TEXT_27);
d115 1
a115 1
    stringBuffer.append(TEXT_28);
d120 3
a122 3
    stringBuffer.append(TEXT_29);
    stringBuffer.append(linkLabel.getVisualID());
    stringBuffer.append(TEXT_30);
d124 1
a124 1
    stringBuffer.append(TEXT_31);
d129 1
a129 1
    stringBuffer.append(TEXT_32);
d131 1
a131 1
    stringBuffer.append(TEXT_33);
@

