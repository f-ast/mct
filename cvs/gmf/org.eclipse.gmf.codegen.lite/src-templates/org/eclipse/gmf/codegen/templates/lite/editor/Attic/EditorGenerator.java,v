head	1.21;
access;
symbols
	v20080910-1520:1.21
	v20070103-0300:1.20
	M4_20:1.20
	v20061222-1800:1.19
	v20061214-0000:1.17
	v20061120-1300:1.15
	M3_20:1.13
	v20061117-0800:1.13
	v20061013-1330:1.11
	v20061005-1700:1.6
	M1_20:1.8
	v20060904-1500:1.8
	v20060824-1600:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060620-0400:1.6
	v20060616-1400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-1300:1.4
	v20060519-0800:1.4
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.21
date	2007.02.02.17.14.32;	author bblajer;	state dead;
branches;
next	1.20;
commitid	78d445c371764567;

1.20
date	2006.12.25.12.00.12;	author bblajer;	state Exp;
branches;
next	1.19;
commitid	430d458fbd4b4567;

1.19
date	2006.12.21.20.35.33;	author bblajer;	state Exp;
branches;
next	1.18;
commitid	bee458af0104567;

1.18
date	2006.12.19.19.09.57;	author bblajer;	state Exp;
branches;
next	1.17;
commitid	9c1458839044567;

1.17
date	2006.11.29.13.51.55;	author bblajer;	state Exp;
branches;
next	1.16;
commitid	50c1456d907a4567;

1.16
date	2006.11.23.18.57.15;	author bblajer;	state Exp;
branches;
next	1.15;
commitid	66934565ef0a4567;

1.15
date	2006.11.20.16.03.11;	author bblajer;	state Exp;
branches;
next	1.14;
commitid	253a4561d1be4567;

1.14
date	2006.11.20.12.37.40;	author bblajer;	state Exp;
branches;
next	1.13;
commitid	71004561a1934567;

1.13
date	2006.11.16.18.31.56;	author bblajer;	state Exp;
branches;
next	1.12;
commitid	4bc7455cae9b4567;

1.12
date	2006.11.09.18.15.42;	author bblajer;	state Exp;
branches;
next	1.11;

1.11
date	2006.10.09.17.03.14;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.10.02.12.29.34;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.09.11.15.45.01;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.09.01.16.14.08;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.04.17.05.48;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.25.14.19.01;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.22.18.22.10;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.15.15.54.30;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.01.09.57.20;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.20.18.27.23;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.21.20.16;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.21
log
@[172664]: Provide audits and metrics for Lite diagrams (including view-based and RCP) + validation decorators + validation markers (for non-RCP case);
Several templates are rewritten with xpand;
lite-specific TextEmitter is back (otherwise importManager is sometimes passed to xpand templates)
@
text
@package org.eclipse.gmf.codegen.templates.lite.editor;

import org.eclipse.emf.common.util.*;
import org.eclipse.gmf.codegen.gmfgen.*;
import org.eclipse.emf.codegen.ecore.genmodel.*;
import org.eclipse.gmf.common.codegen.*;

public class EditorGenerator
{
  protected static String nl;
  public static synchronized EditorGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    EditorGenerator result = new EditorGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_3 = " extends ";
  protected final String TEXT_4 = " {" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic static final String ID = \"";
  protected final String TEXT_5 = "\"; //$NON-NLS-1$" + NL;
  protected final String TEXT_6 = NL + "\t/**" + NL + "\t * This class listens to changes to the file system in the workspace, and" + NL + "\t * makes the following changes: " + NL + "\t * <ul><li>If an open, saved file gets deleted, the editor is closed.</li>" + NL + "\t * <li>If an open file gets renamed or moved, the editor's" + NL + "\t * input is changed accordingly.</li></ul>" + NL + "\t *" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ResourceTracker implements ";
  protected final String TEXT_7 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void resourceChanged(";
  protected final String TEXT_8 = " event) {" + NL + "\t\t\t";
  protected final String TEXT_9 = " delta = event.getDelta();" + NL + "\t\t\tif (delta != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_10 = " file = getFileFromInput(getEditorInput());" + NL + "\t\t\t\tif (file != null) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_11 = " fileDelta = delta.findMember(file.getFullPath());" + NL + "\t\t\t\t\tif (fileDelta != null) {" + NL + "\t\t\t\t\t\tprocessFileDelta(fileDelta);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void processFileDelta(";
  protected final String TEXT_12 = " delta) {" + NL + "\t\t\tassert (delta != null && delta.getResource().equals(getFileFromInput(getEditorInput())));" + NL + "\t\t\tif (delta.getKind() == ";
  protected final String TEXT_13 = ".REMOVED) {" + NL + "\t\t\t\tif ((";
  protected final String TEXT_14 = ".MOVED_TO & delta.getFlags()) == 0) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_15 = NL + "\t\t\t\t\tif (!isDirty()) {" + NL + "\t\t\t\t\t\tcloseEditor();" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\t// else if it was moved or renamed" + NL + "\t\t\t\t\tfinal ";
  protected final String TEXT_16 = " newFile = ";
  protected final String TEXT_17 = ".getWorkspace().getRoot().getFile(delta.getMovedToPath());" + NL + "\t\t\t\t\tfinal ";
  protected final String TEXT_18 = " newEditorInput;" + NL + "\t\t\t\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_19 = ") {" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_20 = " newFileURI = ";
  protected final String TEXT_21 = ".createPlatformResourceURI(newFile.getFullPath().toString(), true);" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_22 = " oldFileURI = ((";
  protected final String TEXT_23 = ") getEditorInput()).getURI();" + NL + "\t\t\t\t\t\tif (oldFileURI.fragment() != null) {" + NL + "\t\t\t\t\t\t\tnewFileURI = newFileURI.appendFragment(oldFileURI.fragment());" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t\tnewEditorInput = new ";
  protected final String TEXT_24 = "(newFileURI);" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\tnewEditorInput = new ";
  protected final String TEXT_25 = "(newFile);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\t";
  protected final String TEXT_26 = " display = getSite().getShell().getDisplay();" + NL + "\t\t\t\t\tdisplay.asyncExec(new Runnable() {" + NL + "\t\t\t\t\t\tpublic void run() {" + NL + "\t\t\t\t\t\t\tsetInput(newEditorInput);" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t});" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ResourceTracker resourceTracker;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ResourceTracker getResourceTracker() {" + NL + "\t\tif (resourceTracker == null) {" + NL + "\t\t\tresourceTracker = new ResourceTracker();" + NL + "\t\t}" + NL + "\t\treturn resourceTracker;" + NL + "\t}" + NL;
  protected final String TEXT_27 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_28 = " myActionBarContributor;";
  protected final String TEXT_29 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_30 = " diagramRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_31 = " diagram;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_32 = " domainAdapterFactory;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createActions() {" + NL + "\t\taddStackAction(new ";
  protected final String TEXT_33 = "(this));" + NL + "\t\taddStackAction(new ";
  protected final String TEXT_34 = "(this));" + NL + "" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_35 = "((";
  protected final String TEXT_36 = ") this));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_37 = "((";
  protected final String TEXT_38 = ") this));" + NL + "" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_39 = "((";
  protected final String TEXT_40 = ") this, ";
  protected final String TEXT_41 = ".LEFT));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_42 = "((";
  protected final String TEXT_43 = ") this, ";
  protected final String TEXT_44 = ".RIGHT));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_45 = "((";
  protected final String TEXT_46 = ") this, ";
  protected final String TEXT_47 = ".TOP));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_48 = "((";
  protected final String TEXT_49 = ") this, ";
  protected final String TEXT_50 = ".BOTTOM));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_51 = "((";
  protected final String TEXT_52 = ") this, ";
  protected final String TEXT_53 = ".CENTER));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_54 = "((";
  protected final String TEXT_55 = ") this, ";
  protected final String TEXT_56 = ".MIDDLE));" + NL;
  protected final String TEXT_57 = NL + "\t\taddEditorAction(new ";
  protected final String TEXT_58 = "(this));";
  protected final String TEXT_59 = NL + "\t\taddEditorAction(new ";
  protected final String TEXT_60 = "(this));" + NL + "\t\taddEditorAction(new ";
  protected final String TEXT_61 = "(this));" + NL + "" + NL + "\t\t";
  protected final String TEXT_62 = " zoomIn = new ";
  protected final String TEXT_63 = "(getZoomManager());" + NL + "\t\t";
  protected final String TEXT_64 = " zoomOut = new ";
  protected final String TEXT_65 = "(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t\t";
  protected final String TEXT_66 = " keyHandler = getGraphicalViewer().getKeyHandler();" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_67 = ".getPressed(";
  protected final String TEXT_68 = ".DEL, 127, 0), getActionRegistry().getAction(";
  protected final String TEXT_69 = ".DELETE.getId()));" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_70 = ".getPressed(";
  protected final String TEXT_71 = ".F2, 0), getActionRegistry().getAction(";
  protected final String TEXT_72 = ".DIRECT_EDIT));" + NL + "\t}" + NL;
  protected final String TEXT_73 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_74 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_75 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void updateActionBars() {" + NL + "\t\tif (myActionBarContributor != null) {" + NL + "\t\t\tmyActionBarContributor.updateGlobalActions(this);" + NL + "\t\t}" + NL + "\t}" + NL;
  protected final String TEXT_76 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {";
  protected final String TEXT_77 = NL + "\t\t";
  protected final String TEXT_78 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_79 = NL + "\t\tmyActionBarContributor.dispose();" + NL + "\t\tmyActionBarContributor = null;";
  protected final String TEXT_80 = NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL;
  protected final String TEXT_81 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(";
  protected final String TEXT_82 = " monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (";
  protected final String TEXT_83 = " e) {" + NL + "\t\t\t";
  protected final String TEXT_84 = ".openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_85 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL;
  protected final String TEXT_86 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configurePalette(";
  protected final String TEXT_87 = " paletteRoot) {";
  protected final String TEXT_88 = NL + "\t\tnew ";
  protected final String TEXT_89 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_90 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_91 = " getDiagramRoot() {" + NL + "\t\treturn diagramRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_92 = " getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL;
  protected final String TEXT_93 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_94 = " getPropertySheetPage() {" + NL + "\t\tif (myPropertySheetPage == null) {" + NL + "\t\t\tmyPropertySheetPage = new ";
  protected final String TEXT_95 = "(new ";
  protected final String TEXT_96 = "() {" + NL + "\t\t\t\tpublic String getContributorId() {" + NL + "\t\t\t\t\treturn ";
  protected final String TEXT_97 = ".ID;" + NL + "\t\t\t\t}" + NL + "\t\t\t});" + NL + "\t\t}" + NL + "\t\treturn myPropertySheetPage;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate org.eclipse.ui.views.properties.IPropertySheetPage myPropertySheetPage;";
  protected final String TEXT_98 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_99 = " site, ";
  protected final String TEXT_100 = " input) throws ";
  protected final String TEXT_101 = " {" + NL + "\t\t";
  protected final String TEXT_102 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_103 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_104 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_105 = " input) {";
  protected final String TEXT_106 = NL + "\t\t";
  protected final String TEXT_107 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_108 = NL + "\t\t";
  protected final String TEXT_109 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_110 = NL + "\t\t";
  protected final String TEXT_111 = " newResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (newResource != null) {" + NL + "\t\t\tnewResource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_112 = NL + "\t}" + NL;
  protected final String TEXT_113 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_114 = " getFileFromInput(";
  protected final String TEXT_115 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_116 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_117 = ") input).getFile();" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_118 = " uri = getURIFromInput(input);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\tif (\"platform\".equals(uri.scheme()) && (uri.segmentCount() > 2)) { //$NON-NLS-1$" + NL + "\t\t\t\tif (\"resource\".equals(uri.segment(0))) { //$NON-NLS-1$" + NL + "\t\t\t\t\t";
  protected final String TEXT_119 = " path = new ";
  protected final String TEXT_120 = "(";
  protected final String TEXT_121 = ".decode(uri.path())).removeFirstSegments(1);" + NL + "\t\t\t\t\treturn ";
  protected final String TEXT_122 = ".getWorkspace().getRoot().getFile(path);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_123 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_124 = " getURIFromInput(";
  protected final String TEXT_125 = " input) {" + NL + "\t\tif (input == null) {" + NL + "\t\t\treturn null;" + NL + "\t\t}";
  protected final String TEXT_126 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_127 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_128 = ".createPlatformResourceURI(((";
  protected final String TEXT_129 = ")input).getFile().getFullPath().toString(), true);" + NL + "\t\t}";
  protected final String TEXT_130 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_131 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_132 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_133 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_134 = ".createFileURI(((";
  protected final String TEXT_135 = ")input).getPath().toOSString());" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_136 = " uri = (";
  protected final String TEXT_137 = ") input.getAdapter(";
  protected final String TEXT_138 = ".class);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\treturn uri;" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_139 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_140 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_141 = " factories = new ";
  protected final String TEXT_142 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_143 = "());";
  protected final String TEXT_144 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_145 = "());";
  protected final String TEXT_146 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_147 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_148 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_149 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL;
  protected final String TEXT_150 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void createPartControl(";
  protected final String TEXT_151 = " parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t";
  protected final String TEXT_152 = " bars = getViewSite().getActionBars();" + NL + "\t\tmyActionBarContributor = new ";
  protected final String TEXT_153 = "();" + NL + "\t\tmyActionBarContributor.init(bars, getSite().getPage());" + NL + "\t\tbars.updateActionBars();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_154 = " diagramURI) throws ";
  protected final String TEXT_155 = " {" + NL + "\t\tload(diagramURI);" + NL + "\t\tif (diagram == null || diagramRoot == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_156 = "(new ";
  protected final String TEXT_157 = "(";
  protected final String TEXT_158 = ".ERROR," + NL + "\t\t\t\t";
  protected final String TEXT_159 = ".ID, 0, \"Failed to load diagram\", null));" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_160 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_161 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tfinal ";
  protected final String TEXT_162 = " diagramFileURI = diagramFile;" + NL + "\t\t";
  protected final String TEXT_163 = " editingDomain = getEditingDomain();" + NL + "\t\tfinal ";
  protected final String TEXT_164 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\tfinal ";
  protected final String TEXT_165 = " diagramResource = resourceSet.getResource(diagramFile.trimFragment(), true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_166 = " operation = new ";
  protected final String TEXT_167 = "(editingDomain, \"Load diagram\", null) {" + NL + "\t\t\tprotected ";
  protected final String TEXT_168 = " doExecute(";
  protected final String TEXT_169 = " monitor, ";
  protected final String TEXT_170 = " info) throws ";
  protected final String TEXT_171 = " {" + NL + "\t\t\t\tif (diagramFileURI.fragment() != null) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_172 = " possibleDiagram = diagramResource.getEObject(diagramFileURI.fragment());" + NL + "\t\t\t\t\tif (possibleDiagram instanceof ";
  protected final String TEXT_173 = ") {" + NL + "\t\t\t\t\t\tdiagram = (";
  protected final String TEXT_174 = ") possibleDiagram;" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_175 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\tdiagram = (";
  protected final String TEXT_176 = ") findInResource(diagramResource, ";
  protected final String TEXT_177 = ".class);" + NL + "\t\t\t\t\tif (diagram == null) {" + NL + "\t\t\t\t\t\tdiagram = ";
  protected final String TEXT_178 = ".eINSTANCE.createDiagram();" + NL + "\t\t\t\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_179 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_180 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_181 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tdiagramRoot = (";
  protected final String TEXT_182 = ") diagram.getElement();" + NL + "\t\t\t\tif (diagramRoot == null) {";
  protected final String TEXT_183 = NL + "\t\t\t\t\t";
  protected final String TEXT_184 = " modelFile = ";
  protected final String TEXT_185 = ".getModelFileURI(diagramFileURI);" + NL + "\t\t\t\t\t";
  protected final String TEXT_186 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\t\t\tif (modelResource == null) {" + NL + "\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_187 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}";
  protected final String TEXT_188 = NL + "\t\t\t\t\tdiagramRoot = (";
  protected final String TEXT_189 = ") findInResource(";
  protected final String TEXT_190 = ", ";
  protected final String TEXT_191 = ".class);" + NL + "\t\t\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\t\t\tdiagramRoot = ";
  protected final String TEXT_192 = ".eINSTANCE.create";
  protected final String TEXT_193 = "();" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_194 = ".getContents().add(0, ";
  protected final String TEXT_195 = "(";
  protected final String TEXT_196 = ") ";
  protected final String TEXT_197 = "diagramRoot);" + NL + "\t\t\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_198 = ".save(";
  protected final String TEXT_199 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_200 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_201 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\tif (!diagramRoot.equals(diagram.getElement())) {" + NL + "\t\t\t\t\t\tdiagram.setElement(";
  protected final String TEXT_202 = "(";
  protected final String TEXT_203 = ") ";
  protected final String TEXT_204 = "diagramRoot);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (!diagram.eIsSet(";
  protected final String TEXT_205 = ".eINSTANCE.getView_Type())) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_206 = ".INSTANCE.decorateView(diagram);";
  protected final String TEXT_207 = NL + "\t\t\t\t\tdoSave(new ";
  protected final String TEXT_208 = "());";
  protected final String TEXT_209 = NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_210 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_211 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_212 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}";
  protected final String TEXT_213 = NL + "\t\t\t\t}" + NL + "\t\t\t\treturn ";
  protected final String TEXT_214 = ".OK_STATUS;" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\ttry {" + NL + "\t\t\toperation.execute(new ";
  protected final String TEXT_215 = "(), null);" + NL + "\t\t} catch (";
  protected final String TEXT_216 = " e) {" + NL + "\t\t\tdiagram = null;" + NL + "\t\t\tdiagramRoot = null;" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_217 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_218 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_219 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void initializeGraphicalViewer() {" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_220 = " root = new ";
  protected final String TEXT_221 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_222 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_223 = " printableLayers = (";
  protected final String TEXT_224 = ") root.getLayer(";
  protected final String TEXT_225 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_226 = " extLabelsLayer = new ";
  protected final String TEXT_227 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_228 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_229 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_230 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_231 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_232 = " provider = new ";
  protected final String TEXT_233 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_234 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_235 = " keyHandler = new ";
  protected final String TEXT_236 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_237 = ".KeyGenerator.getKey(";
  protected final String TEXT_238 = ".CTRL), ";
  protected final String TEXT_239 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isFlyoutPalette() {" + NL + "\t\treturn ";
  protected final String TEXT_240 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_241 = "ContextMenuProvider extends ";
  protected final String TEXT_242 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_243 = "ContextMenuProvider(";
  protected final String TEXT_244 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_245 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_246 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_247 = ".UNDO.getId(), ";
  protected final String TEXT_248 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_249 = ".REDO.getId(), ";
  protected final String TEXT_250 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_251 = ".COPY.getId(), ";
  protected final String TEXT_252 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_253 = ".PASTE.getId(), ";
  protected final String TEXT_254 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_255 = ".DELETE.getId(), ";
  protected final String TEXT_256 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_257 = ".DIRECT_EDIT, ";
  protected final String TEXT_258 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_259 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_260 = ".GROUP_REST);" + NL;
  protected final String TEXT_261 = NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_262 = ".SAVE.getId(), ";
  protected final String TEXT_263 = ".GROUP_SAVE);";
  protected final String TEXT_264 = NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_265 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_266 = " submenu = new ";
  protected final String TEXT_267 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_268 = "(";
  protected final String TEXT_269 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_270 = ".ALIGN_LEFT, ";
  protected final String TEXT_271 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_272 = ".ALIGN_CENTER, ";
  protected final String TEXT_273 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_274 = ".ALIGN_RIGHT, ";
  protected final String TEXT_275 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_276 = ".ALIGN_TOP, ";
  protected final String TEXT_277 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_278 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_279 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_280 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_281 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_282 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_283 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_284 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_285 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
final GenEditorView genEditor = (GenEditorView) ((Object[]) argument)[0];
final GenDiagram genDiagram = genEditor.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
final boolean isRichClientPlatform = genDiagram.getEditorGen().getApplication() != null;
final boolean isEclipseEditor = genEditor.isEclipseEditor();

importManager.emitPackageStatement(stringBuffer);
importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_1);
    
importManager.registerInnerClass(genEditor.getClassName() + "ContextMenuProvider");
if (!isRichClientPlatform) {
	importManager.registerInnerClass("ResourceTracker");
}

    stringBuffer.append(TEXT_2);
    stringBuffer.append(genEditor.getClassName());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(importManager.getImportedName(isEclipseEditor ? "org.eclipse.gmf.runtime.lite.parts.DiagramEditor" : "org.eclipse.gmf.runtime.lite.parts.DiagramViewPart"));
    stringBuffer.append(TEXT_4);
    stringBuffer.append(genEditor.getID());
    stringBuffer.append(TEXT_5);
    
if (!isRichClientPlatform && isEclipseEditor) {

    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceChangeListener"));
    stringBuffer.append(TEXT_7);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceChangeEvent"));
    stringBuffer.append(TEXT_8);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
    stringBuffer.append(TEXT_9);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IFile"));
    stringBuffer.append(TEXT_10);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
    stringBuffer.append(TEXT_11);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
    stringBuffer.append(TEXT_12);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
    stringBuffer.append(TEXT_13);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
    stringBuffer.append(TEXT_14);
    /*XXX: make sure unsaved deleted file is handled correctly*/
    stringBuffer.append(TEXT_15);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IFile"));
    stringBuffer.append(TEXT_16);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.ResourcesPlugin"));
    stringBuffer.append(TEXT_17);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_18);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_19);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_20);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_21);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_22);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_23);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_24);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.part.FileEditorInput"));
    stringBuffer.append(TEXT_25);
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.widgets.Display"));
    stringBuffer.append(TEXT_26);
    
}
if (!isEclipseEditor) {

    stringBuffer.append(TEXT_27);
    stringBuffer.append(importManager.getImportedName(genEditor.getActionBarContributorQualifiedClassName()));
    stringBuffer.append(TEXT_28);
    
}

    stringBuffer.append(TEXT_29);
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
    stringBuffer.append(TEXT_30);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_31);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.ComposedAdapterFactory"));
    stringBuffer.append(TEXT_32);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.UndoAction"));
    stringBuffer.append(TEXT_33);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.RedoAction"));
    stringBuffer.append(TEXT_34);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.DeleteAction"));
    stringBuffer.append(TEXT_35);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_36);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.DirectEditAction"));
    stringBuffer.append(TEXT_37);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_38);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.AlignmentAction"));
    stringBuffer.append(TEXT_39);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_40);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.PositionConstants"));
    stringBuffer.append(TEXT_41);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.AlignmentAction"));
    stringBuffer.append(TEXT_42);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_43);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.PositionConstants"));
    stringBuffer.append(TEXT_44);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.AlignmentAction"));
    stringBuffer.append(TEXT_45);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_46);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.PositionConstants"));
    stringBuffer.append(TEXT_47);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.AlignmentAction"));
    stringBuffer.append(TEXT_48);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_49);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.PositionConstants"));
    stringBuffer.append(TEXT_50);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.AlignmentAction"));
    stringBuffer.append(TEXT_51);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_52);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.PositionConstants"));
    stringBuffer.append(TEXT_53);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.AlignmentAction"));
    stringBuffer.append(TEXT_54);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
    stringBuffer.append(TEXT_55);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.PositionConstants"));
    stringBuffer.append(TEXT_56);
    
if (isEclipseEditor) {

    stringBuffer.append(TEXT_57);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.SaveAction"));
    stringBuffer.append(TEXT_58);
    
}

    stringBuffer.append(TEXT_59);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.PrintAction"));
    stringBuffer.append(TEXT_60);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.ui.actions.LayoutDiagramAction"));
    stringBuffer.append(TEXT_61);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IAction"));
    stringBuffer.append(TEXT_62);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.ZoomInAction"));
    stringBuffer.append(TEXT_63);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IAction"));
    stringBuffer.append(TEXT_64);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.ZoomOutAction"));
    stringBuffer.append(TEXT_65);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyHandler"));
    stringBuffer.append(TEXT_66);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyStroke"));
    stringBuffer.append(TEXT_67);
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.SWT"));
    stringBuffer.append(TEXT_68);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_69);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyStroke"));
    stringBuffer.append(TEXT_70);
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.SWT"));
    stringBuffer.append(TEXT_71);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_72);
    
if (!isRichClientPlatform && isEclipseEditor) {

    stringBuffer.append(TEXT_73);
    stringBuffer.append(genEditor.getClassName());
    stringBuffer.append(TEXT_74);
    
}
if (!isEclipseEditor) {

    stringBuffer.append(TEXT_75);
    
}

    stringBuffer.append(TEXT_76);
    
if (!isRichClientPlatform && isEclipseEditor) {

    stringBuffer.append(TEXT_77);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IFile"));
    stringBuffer.append(TEXT_78);
    
}
if (!isEclipseEditor) {

    stringBuffer.append(TEXT_79);
    
}

    stringBuffer.append(TEXT_80);
    
if (isEclipseEditor) {

    stringBuffer.append(TEXT_81);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IProgressMonitor"));
    stringBuffer.append(TEXT_82);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.CoreException"));
    stringBuffer.append(TEXT_83);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.dialogs.ErrorDialog"));
    stringBuffer.append(TEXT_84);
    stringBuffer.append(genDiagram.getEditorGen().getDomainGenModel().getModelName());
    stringBuffer.append(TEXT_85);
    
}

    stringBuffer.append(TEXT_86);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.palette.PaletteRoot"));
    stringBuffer.append(TEXT_87);
    
{
	final Palette palette = genDiagram.getPalette();
	if (palette != null) {

    stringBuffer.append(TEXT_88);
    stringBuffer.append(importManager.getImportedName(palette.getFactoryQualifiedClassName()));
    stringBuffer.append(TEXT_89);
    
	}
}

    stringBuffer.append(TEXT_90);
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
    stringBuffer.append(TEXT_91);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_92);
    
if (genEditor.getEditorGen().getPropertySheet() != null) {

    stringBuffer.append(TEXT_93);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySheetPage"));
    stringBuffer.append(TEXT_94);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.tabbed.TabbedPropertySheetPage"));
    stringBuffer.append(TEXT_95);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.tabbed.ITabbedPropertySheetPageContributor"));
    stringBuffer.append(TEXT_96);
    stringBuffer.append(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName());
    stringBuffer.append(TEXT_97);
    
}
if (isEclipseEditor) {

    stringBuffer.append(TEXT_98);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorSite"));
    stringBuffer.append(TEXT_99);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_100);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_101);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_102);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_103);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_104);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_105);
    
	if (!isRichClientPlatform) {

    stringBuffer.append(TEXT_106);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IFile"));
    stringBuffer.append(TEXT_107);
    
	}

    stringBuffer.append(TEXT_108);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_109);
    
	if (!isRichClientPlatform) {

    stringBuffer.append(TEXT_110);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IFile"));
    stringBuffer.append(TEXT_111);
    
	}

    stringBuffer.append(TEXT_112);
    
	if (!isRichClientPlatform) {

    stringBuffer.append(TEXT_113);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IFile"));
    stringBuffer.append(TEXT_114);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_115);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_116);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_117);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_118);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IPath"));
    stringBuffer.append(TEXT_119);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Path"));
    stringBuffer.append(TEXT_120);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_121);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.ResourcesPlugin"));
    stringBuffer.append(TEXT_122);
    
	}

    stringBuffer.append(TEXT_123);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_124);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_125);
    
	if (!isRichClientPlatform) {

    stringBuffer.append(TEXT_126);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_127);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_128);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_129);
    
	}

    stringBuffer.append(TEXT_130);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_131);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_132);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IPathEditorInput"));
    stringBuffer.append(TEXT_133);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_134);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IPathEditorInput"));
    stringBuffer.append(TEXT_135);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_136);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_137);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_138);
    
}	//editor-specific code

    stringBuffer.append(TEXT_139);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.notify.AdapterFactory"));
    stringBuffer.append(TEXT_140);
    stringBuffer.append(importManager.getImportedName("java.util.List"));
    stringBuffer.append(TEXT_141);
    stringBuffer.append(importManager.getImportedName("java.util.ArrayList"));
    stringBuffer.append(TEXT_142);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.resource.ResourceItemProviderAdapterFactory"));
    stringBuffer.append(TEXT_143);
    
final EList genPackages = genDiagram.getEditorGen().getAllDomainGenPackages(true);
for (int i = 0; i < genPackages.size(); i++) {
	GenPackage genPackage = (GenPackage) genPackages.get(i);

    stringBuffer.append(TEXT_144);
    stringBuffer.append(importManager.getImportedName(genPackage.getQualifiedItemProviderAdapterFactoryClassName()));
    stringBuffer.append(TEXT_145);
    }
    stringBuffer.append(TEXT_146);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.ReflectiveItemProviderAdapterFactory"));
    stringBuffer.append(TEXT_147);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.provider.NotationItemProviderAdapterFactory"));
    stringBuffer.append(TEXT_148);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.ComposedAdapterFactory"));
    stringBuffer.append(TEXT_149);
    
if (!isEclipseEditor) {

    stringBuffer.append(TEXT_150);
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.widgets.Composite"));
    stringBuffer.append(TEXT_151);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IActionBars"));
    stringBuffer.append(TEXT_152);
    stringBuffer.append(importManager.getImportedName(genEditor.getActionBarContributorQualifiedClassName()));
    stringBuffer.append(TEXT_153);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_154);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.CoreException"));
    stringBuffer.append(TEXT_155);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.CoreException"));
    stringBuffer.append(TEXT_156);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Status"));
    stringBuffer.append(TEXT_157);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IStatus"));
    stringBuffer.append(TEXT_158);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_159);
    
}

    stringBuffer.append(TEXT_160);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_161);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_162);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.transaction.TransactionalEditingDomain"));
    stringBuffer.append(TEXT_163);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.ResourceSet"));
    stringBuffer.append(TEXT_164);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
    stringBuffer.append(TEXT_165);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.workspace.AbstractEMFOperation"));
    stringBuffer.append(TEXT_166);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.workspace.AbstractEMFOperation"));
    stringBuffer.append(TEXT_167);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IStatus"));
    stringBuffer.append(TEXT_168);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IProgressMonitor"));
    stringBuffer.append(TEXT_169);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IAdaptable"));
    stringBuffer.append(TEXT_170);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.commands.ExecutionException"));
    stringBuffer.append(TEXT_171);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_172);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_173);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_174);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Status"));
    stringBuffer.append(TEXT_175);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_176);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_177);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory"));
    stringBuffer.append(TEXT_178);
    stringBuffer.append(importManager.getImportedName("java.util.Collections"));
    stringBuffer.append(TEXT_179);
    stringBuffer.append(importManager.getImportedName("java.io.IOException"));
    stringBuffer.append(TEXT_180);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Status"));
    stringBuffer.append(TEXT_181);
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
    stringBuffer.append(TEXT_182);
    
{

    
	boolean sameFile = genDiagram.getEditorGen().isSameFileForDiagramAndModel();
	String resourceToUse;
	if (!sameFile) {

    stringBuffer.append(TEXT_183);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_184);
    stringBuffer.append(genDiagram.getDiagramEditorUtilClassName());
    stringBuffer.append(TEXT_185);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
    stringBuffer.append(TEXT_186);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Status"));
    stringBuffer.append(TEXT_187);
    
		resourceToUse = "modelResource";
	} else {
		resourceToUse = "diagramResource";
	}

    stringBuffer.append(TEXT_188);
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
    stringBuffer.append(TEXT_189);
    stringBuffer.append(resourceToUse);
    stringBuffer.append(TEXT_190);
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
    stringBuffer.append(TEXT_191);
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getGenPackage().getQualifiedFactoryInterfaceName()));
    stringBuffer.append(TEXT_192);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getClassifierAccessorName());
    stringBuffer.append(TEXT_193);
    stringBuffer.append(resourceToUse);
    stringBuffer.append(TEXT_194);
    if (genDiagram.getDomainDiagramElement().isExternalInterface()) {
    stringBuffer.append(TEXT_195);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_196);
    }
    stringBuffer.append(TEXT_197);
    stringBuffer.append(resourceToUse);
    stringBuffer.append(TEXT_198);
    stringBuffer.append(importManager.getImportedName("java.util.Collections"));
    stringBuffer.append(TEXT_199);
    stringBuffer.append(importManager.getImportedName("java.io.IOException"));
    stringBuffer.append(TEXT_200);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Status"));
    stringBuffer.append(TEXT_201);
    if (genDiagram.getDomainDiagramElement().isExternalInterface()) {
    stringBuffer.append(TEXT_202);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.EObject"));
    stringBuffer.append(TEXT_203);
    }
    stringBuffer.append(TEXT_204);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationPackage"));
    stringBuffer.append(TEXT_205);
    stringBuffer.append(importManager.getImportedName(genDiagram.getNotationViewFactoryQualifiedClassName()));
    stringBuffer.append(TEXT_206);
    
	if (isEclipseEditor) {

    stringBuffer.append(TEXT_207);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.NullProgressMonitor"));
    stringBuffer.append(TEXT_208);
    
	} else {

    stringBuffer.append(TEXT_209);
    stringBuffer.append(importManager.getImportedName("java.util.Collections"));
    stringBuffer.append(TEXT_210);
    stringBuffer.append(importManager.getImportedName("java.io.IOException"));
    stringBuffer.append(TEXT_211);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Status"));
    stringBuffer.append(TEXT_212);
    
	}

    stringBuffer.append(TEXT_213);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Status"));
    stringBuffer.append(TEXT_214);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.NullProgressMonitor"));
    stringBuffer.append(TEXT_215);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.commands.ExecutionException"));
    stringBuffer.append(TEXT_216);
    
}//local declarations

    stringBuffer.append(TEXT_217);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource"));
    stringBuffer.append(TEXT_218);
    stringBuffer.append(importManager.getImportedName("java.util.Iterator"));
    stringBuffer.append(TEXT_219);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.editparts.ScalableFreeformRootEditPart"));
    stringBuffer.append(TEXT_220);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.editparts.ScalableFreeformRootEditPart"));
    stringBuffer.append(TEXT_221);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartFactoryQualifiedClassName()));
    stringBuffer.append(TEXT_222);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
    stringBuffer.append(TEXT_223);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
    stringBuffer.append(TEXT_224);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.LayerConstants"));
    stringBuffer.append(TEXT_225);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
    stringBuffer.append(TEXT_226);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
    stringBuffer.append(TEXT_227);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.DelegatingLayout"));
    stringBuffer.append(TEXT_228);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartFactoryQualifiedClassName()));
    stringBuffer.append(TEXT_229);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.LayerConstants"));
    stringBuffer.append(TEXT_230);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.GraphicalViewer"));
    stringBuffer.append(TEXT_231);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ContextMenuProvider"));
    stringBuffer.append(TEXT_232);
    stringBuffer.append(genEditor.getClassName());
    stringBuffer.append(TEXT_233);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_234);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyHandler"));
    stringBuffer.append(TEXT_235);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.parts.GraphicalViewerKeyHandler"));
    stringBuffer.append(TEXT_236);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.MouseWheelHandler"));
    stringBuffer.append(TEXT_237);
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.SWT"));
    stringBuffer.append(TEXT_238);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.MouseWheelZoomHandler"));
    stringBuffer.append(TEXT_239);
    stringBuffer.append(genDiagram.getPalette() != null && genDiagram.getPalette().isFlyout());
    stringBuffer.append(TEXT_240);
    stringBuffer.append(genEditor.getClassName());
    stringBuffer.append(TEXT_241);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ContextMenuProvider"));
    stringBuffer.append(TEXT_242);
    stringBuffer.append(genEditor.getClassName());
    stringBuffer.append(TEXT_243);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.EditPartViewer"));
    stringBuffer.append(TEXT_244);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
    stringBuffer.append(TEXT_245);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_246);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_247);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_248);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_249);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_250);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_251);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_252);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_253);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_254);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_255);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_256);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_257);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_258);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.ui.actions.ActionIds"));
    stringBuffer.append(TEXT_259);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_260);
    
if (isEclipseEditor) {

    stringBuffer.append(TEXT_261);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_262);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_263);
    
}

    stringBuffer.append(TEXT_264);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
    stringBuffer.append(TEXT_265);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
    stringBuffer.append(TEXT_266);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
    stringBuffer.append(TEXT_267);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Separator"));
    stringBuffer.append(TEXT_268);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_269);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_270);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_271);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_272);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_273);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_274);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_275);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_276);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_277);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_278);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_279);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_280);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_281);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_282);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
    stringBuffer.append(TEXT_283);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IAction"));
    stringBuffer.append(TEXT_284);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_285);
    return stringBuffer.toString();
  }
}
@


1.20
log
@[159567]: Use GenApplication element from gmfgen model to generate RCP code
Use as much of the runtime templates as possible (changes are isolated as aspects)
@
text
@@


1.19
log
@Tabbed property sheet provided for the lite runtime (if GenPropertySheet is not null);
IllegalStateException when closing editor fixed.
@
text
@d313 1
a313 1
final boolean isRichClientPlatform = genDiagram.getEditorGen().getDomainGenModel().isRichClientPlatform();
@


1.18
log
@Make tests pass: Resource.getContents() is now parametrized
@
text
@d112 193
a304 188
  protected final String TEXT_93 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_94 = " site, ";
  protected final String TEXT_95 = " input) throws ";
  protected final String TEXT_96 = " {" + NL + "\t\t";
  protected final String TEXT_97 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_98 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_99 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_100 = " input) {";
  protected final String TEXT_101 = NL + "\t\t";
  protected final String TEXT_102 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_103 = NL + "\t\t";
  protected final String TEXT_104 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_105 = NL + "\t\t";
  protected final String TEXT_106 = " newResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (newResource != null) {" + NL + "\t\t\tnewResource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_107 = NL + "\t}" + NL;
  protected final String TEXT_108 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_109 = " getFileFromInput(";
  protected final String TEXT_110 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_111 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_112 = ") input).getFile();" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_113 = " uri = getURIFromInput(input);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\tif (\"platform\".equals(uri.scheme()) && (uri.segmentCount() > 2)) { //$NON-NLS-1$" + NL + "\t\t\t\tif (\"resource\".equals(uri.segment(0))) { //$NON-NLS-1$" + NL + "\t\t\t\t\t";
  protected final String TEXT_114 = " path = new ";
  protected final String TEXT_115 = "(";
  protected final String TEXT_116 = ".decode(uri.path())).removeFirstSegments(1);" + NL + "\t\t\t\t\treturn ";
  protected final String TEXT_117 = ".getWorkspace().getRoot().getFile(path);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_118 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_119 = " getURIFromInput(";
  protected final String TEXT_120 = " input) {" + NL + "\t\tif (input == null) {" + NL + "\t\t\treturn null;" + NL + "\t\t}";
  protected final String TEXT_121 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_122 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_123 = ".createPlatformResourceURI(((";
  protected final String TEXT_124 = ")input).getFile().getFullPath().toString(), true);" + NL + "\t\t}";
  protected final String TEXT_125 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_126 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_127 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_128 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_129 = ".createFileURI(((";
  protected final String TEXT_130 = ")input).getPath().toOSString());" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_131 = " uri = (";
  protected final String TEXT_132 = ") input.getAdapter(";
  protected final String TEXT_133 = ".class);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\treturn uri;" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_134 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_135 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_136 = " factories = new ";
  protected final String TEXT_137 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_138 = "());";
  protected final String TEXT_139 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_140 = "());";
  protected final String TEXT_141 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_142 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_143 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_144 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL;
  protected final String TEXT_145 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void createPartControl(";
  protected final String TEXT_146 = " parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t";
  protected final String TEXT_147 = " bars = getViewSite().getActionBars();" + NL + "\t\tmyActionBarContributor = new ";
  protected final String TEXT_148 = "();" + NL + "\t\tmyActionBarContributor.init(bars, getSite().getPage());" + NL + "\t\tbars.updateActionBars();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_149 = " diagramURI) throws ";
  protected final String TEXT_150 = " {" + NL + "\t\tload(diagramURI);" + NL + "\t\tif (diagram == null || diagramRoot == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_151 = "(new ";
  protected final String TEXT_152 = "(";
  protected final String TEXT_153 = ".ERROR," + NL + "\t\t\t\t";
  protected final String TEXT_154 = ".ID, 0, \"Failed to load diagram\", null));" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_155 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_156 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tfinal ";
  protected final String TEXT_157 = " diagramFileURI = diagramFile;" + NL + "\t\t";
  protected final String TEXT_158 = " editingDomain = getEditingDomain();" + NL + "\t\tfinal ";
  protected final String TEXT_159 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\tfinal ";
  protected final String TEXT_160 = " diagramResource = resourceSet.getResource(diagramFile.trimFragment(), true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_161 = " operation = new ";
  protected final String TEXT_162 = "(editingDomain, \"Load diagram\", null) {" + NL + "\t\t\tprotected ";
  protected final String TEXT_163 = " doExecute(";
  protected final String TEXT_164 = " monitor, ";
  protected final String TEXT_165 = " info) throws ";
  protected final String TEXT_166 = " {" + NL + "\t\t\t\tif (diagramFileURI.fragment() != null) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_167 = " possibleDiagram = diagramResource.getEObject(diagramFileURI.fragment());" + NL + "\t\t\t\t\tif (possibleDiagram instanceof ";
  protected final String TEXT_168 = ") {" + NL + "\t\t\t\t\t\tdiagram = (";
  protected final String TEXT_169 = ") possibleDiagram;" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_170 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\tdiagram = (";
  protected final String TEXT_171 = ") findInResource(diagramResource, ";
  protected final String TEXT_172 = ".class);" + NL + "\t\t\t\t\tif (diagram == null) {" + NL + "\t\t\t\t\t\tdiagram = ";
  protected final String TEXT_173 = ".eINSTANCE.createDiagram();" + NL + "\t\t\t\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_174 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_175 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_176 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tdiagramRoot = (";
  protected final String TEXT_177 = ") diagram.getElement();" + NL + "\t\t\t\tif (diagramRoot == null) {";
  protected final String TEXT_178 = NL + "\t\t\t\t\t";
  protected final String TEXT_179 = " modelFile = ";
  protected final String TEXT_180 = ".getModelFileURI(diagramFileURI);" + NL + "\t\t\t\t\t";
  protected final String TEXT_181 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\t\t\tif (modelResource == null) {" + NL + "\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_182 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}";
  protected final String TEXT_183 = NL + "\t\t\t\t\tdiagramRoot = (";
  protected final String TEXT_184 = ") findInResource(";
  protected final String TEXT_185 = ", ";
  protected final String TEXT_186 = ".class);" + NL + "\t\t\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\t\t\tdiagramRoot = ";
  protected final String TEXT_187 = ".eINSTANCE.create";
  protected final String TEXT_188 = "();" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_189 = ".getContents().add(0, ";
  protected final String TEXT_190 = "(";
  protected final String TEXT_191 = ") ";
  protected final String TEXT_192 = "diagramRoot);" + NL + "\t\t\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_193 = ".save(";
  protected final String TEXT_194 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_195 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_196 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\tif (!diagramRoot.equals(diagram.getElement())) {" + NL + "\t\t\t\t\t\tdiagram.setElement(";
  protected final String TEXT_197 = "(";
  protected final String TEXT_198 = ") ";
  protected final String TEXT_199 = "diagramRoot);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (!diagram.eIsSet(";
  protected final String TEXT_200 = ".eINSTANCE.getView_Type())) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_201 = ".INSTANCE.decorateView(diagram);";
  protected final String TEXT_202 = NL + "\t\t\t\t\tdoSave(new ";
  protected final String TEXT_203 = "());";
  protected final String TEXT_204 = NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_205 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_206 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_207 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}";
  protected final String TEXT_208 = NL + "\t\t\t\t}" + NL + "\t\t\t\treturn ";
  protected final String TEXT_209 = ".OK_STATUS;" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\ttry {" + NL + "\t\t\toperation.execute(new ";
  protected final String TEXT_210 = "(), null);" + NL + "\t\t} catch (";
  protected final String TEXT_211 = " e) {" + NL + "\t\t\tdiagram = null;" + NL + "\t\t\tdiagramRoot = null;" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_212 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_213 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_214 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void initializeGraphicalViewer() {" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_215 = " root = new ";
  protected final String TEXT_216 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_217 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_218 = " printableLayers = (";
  protected final String TEXT_219 = ") root.getLayer(";
  protected final String TEXT_220 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_221 = " extLabelsLayer = new ";
  protected final String TEXT_222 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_223 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_224 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_225 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_226 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_227 = " provider = new ";
  protected final String TEXT_228 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_229 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_230 = " keyHandler = new ";
  protected final String TEXT_231 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_232 = ".KeyGenerator.getKey(";
  protected final String TEXT_233 = ".CTRL), ";
  protected final String TEXT_234 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isFlyoutPalette() {" + NL + "\t\treturn ";
  protected final String TEXT_235 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_236 = "ContextMenuProvider extends ";
  protected final String TEXT_237 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_238 = "ContextMenuProvider(";
  protected final String TEXT_239 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_240 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_241 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_242 = ".UNDO.getId(), ";
  protected final String TEXT_243 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_244 = ".REDO.getId(), ";
  protected final String TEXT_245 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_246 = ".COPY.getId(), ";
  protected final String TEXT_247 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_248 = ".PASTE.getId(), ";
  protected final String TEXT_249 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_250 = ".DELETE.getId(), ";
  protected final String TEXT_251 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_252 = ".DIRECT_EDIT, ";
  protected final String TEXT_253 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_254 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_255 = ".GROUP_REST);" + NL;
  protected final String TEXT_256 = NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_257 = ".SAVE.getId(), ";
  protected final String TEXT_258 = ".GROUP_SAVE);";
  protected final String TEXT_259 = NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_260 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_261 = " submenu = new ";
  protected final String TEXT_262 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_263 = "(";
  protected final String TEXT_264 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_265 = ".ALIGN_LEFT, ";
  protected final String TEXT_266 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_267 = ".ALIGN_CENTER, ";
  protected final String TEXT_268 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_269 = ".ALIGN_RIGHT, ";
  protected final String TEXT_270 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_271 = ".ALIGN_TOP, ";
  protected final String TEXT_272 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_273 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_274 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_275 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_276 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_277 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_278 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_279 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_280 = NL;
d543 1
a543 1
if (isEclipseEditor) {
d546 1
a546 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorSite"));
d548 1
a548 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
d550 1
a550 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d552 1
a552 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d554 4
a557 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d559 1
a559 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d563 10
d576 1
a576 1
    stringBuffer.append(TEXT_101);
d578 1
a578 1
    stringBuffer.append(TEXT_102);
d582 1
a582 1
    stringBuffer.append(TEXT_103);
d584 1
a584 1
    stringBuffer.append(TEXT_104);
d588 1
a588 1
    stringBuffer.append(TEXT_105);
d590 1
a590 1
    stringBuffer.append(TEXT_106);
d594 1
a594 1
    stringBuffer.append(TEXT_107);
d598 1
a598 1
    stringBuffer.append(TEXT_108);
d600 1
a600 1
    stringBuffer.append(TEXT_109);
d602 1
a602 1
    stringBuffer.append(TEXT_110);
d604 1
a604 1
    stringBuffer.append(TEXT_111);
d606 1
a606 1
    stringBuffer.append(TEXT_112);
d608 1
a608 1
    stringBuffer.append(TEXT_113);
d610 1
a610 1
    stringBuffer.append(TEXT_114);
d612 1
a612 1
    stringBuffer.append(TEXT_115);
d614 1
a614 1
    stringBuffer.append(TEXT_116);
d616 1
a616 1
    stringBuffer.append(TEXT_117);
d620 1
a620 1
    stringBuffer.append(TEXT_118);
d622 1
a622 1
    stringBuffer.append(TEXT_119);
d624 1
a624 1
    stringBuffer.append(TEXT_120);
d628 1
a628 1
    stringBuffer.append(TEXT_121);
d630 1
a630 1
    stringBuffer.append(TEXT_122);
d632 1
a632 1
    stringBuffer.append(TEXT_123);
d634 1
a634 1
    stringBuffer.append(TEXT_124);
d638 1
a638 1
    stringBuffer.append(TEXT_125);
d640 1
a640 1
    stringBuffer.append(TEXT_126);
d642 1
a642 1
    stringBuffer.append(TEXT_127);
d644 1
a644 1
    stringBuffer.append(TEXT_128);
d646 1
a646 1
    stringBuffer.append(TEXT_129);
d648 1
a648 1
    stringBuffer.append(TEXT_130);
d650 1
a650 1
    stringBuffer.append(TEXT_131);
d652 1
a652 1
    stringBuffer.append(TEXT_132);
d654 1
a654 1
    stringBuffer.append(TEXT_133);
d658 1
a658 1
    stringBuffer.append(TEXT_134);
d660 1
a660 1
    stringBuffer.append(TEXT_135);
d662 1
a662 1
    stringBuffer.append(TEXT_136);
d664 1
a664 1
    stringBuffer.append(TEXT_137);
d666 1
a666 1
    stringBuffer.append(TEXT_138);
d672 1
a672 1
    stringBuffer.append(TEXT_139);
d674 1
a674 1
    stringBuffer.append(TEXT_140);
d676 1
a676 1
    stringBuffer.append(TEXT_141);
d678 1
a678 1
    stringBuffer.append(TEXT_142);
d680 1
a680 1
    stringBuffer.append(TEXT_143);
d682 1
a682 1
    stringBuffer.append(TEXT_144);
d686 1
a686 1
    stringBuffer.append(TEXT_145);
d688 1
a688 1
    stringBuffer.append(TEXT_146);
d690 1
a690 1
    stringBuffer.append(TEXT_147);
d692 1
a692 1
    stringBuffer.append(TEXT_148);
d694 1
a694 1
    stringBuffer.append(TEXT_149);
d696 1
a696 1
    stringBuffer.append(TEXT_150);
d698 1
a698 1
    stringBuffer.append(TEXT_151);
d700 1
a700 1
    stringBuffer.append(TEXT_152);
d702 1
a702 1
    stringBuffer.append(TEXT_153);
d704 1
a704 1
    stringBuffer.append(TEXT_154);
d708 1
a708 1
    stringBuffer.append(TEXT_155);
d710 1
a710 1
    stringBuffer.append(TEXT_156);
d712 1
a712 1
    stringBuffer.append(TEXT_157);
d714 1
a714 1
    stringBuffer.append(TEXT_158);
d716 1
a716 1
    stringBuffer.append(TEXT_159);
d718 1
a718 1
    stringBuffer.append(TEXT_160);
d720 1
a720 1
    stringBuffer.append(TEXT_161);
d722 1
a722 1
    stringBuffer.append(TEXT_162);
d724 1
a724 1
    stringBuffer.append(TEXT_163);
d726 1
a726 1
    stringBuffer.append(TEXT_164);
d728 1
a728 1
    stringBuffer.append(TEXT_165);
d730 1
a730 1
    stringBuffer.append(TEXT_166);
d732 1
a732 1
    stringBuffer.append(TEXT_167);
d734 1
a734 1
    stringBuffer.append(TEXT_168);
d736 1
a736 1
    stringBuffer.append(TEXT_169);
d738 1
a738 1
    stringBuffer.append(TEXT_170);
d740 1
a740 1
    stringBuffer.append(TEXT_171);
d742 1
a742 1
    stringBuffer.append(TEXT_172);
d744 1
a744 1
    stringBuffer.append(TEXT_173);
d746 1
a746 1
    stringBuffer.append(TEXT_174);
d748 1
a748 1
    stringBuffer.append(TEXT_175);
d750 1
a750 1
    stringBuffer.append(TEXT_176);
d752 1
a752 1
    stringBuffer.append(TEXT_177);
d761 1
a761 1
    stringBuffer.append(TEXT_178);
d763 1
a763 1
    stringBuffer.append(TEXT_179);
d765 1
a765 1
    stringBuffer.append(TEXT_180);
d767 1
a767 1
    stringBuffer.append(TEXT_181);
d769 1
a769 1
    stringBuffer.append(TEXT_182);
d776 1
a776 1
    stringBuffer.append(TEXT_183);
d778 1
a778 1
    stringBuffer.append(TEXT_184);
d780 1
a780 1
    stringBuffer.append(TEXT_185);
d782 1
a782 1
    stringBuffer.append(TEXT_186);
d784 1
a784 1
    stringBuffer.append(TEXT_187);
d786 1
a786 1
    stringBuffer.append(TEXT_188);
d788 1
a788 1
    stringBuffer.append(TEXT_189);
d790 1
a790 1
    stringBuffer.append(TEXT_190);
d792 1
a792 1
    stringBuffer.append(TEXT_191);
d794 1
a794 1
    stringBuffer.append(TEXT_192);
d796 1
a796 1
    stringBuffer.append(TEXT_193);
d798 1
a798 1
    stringBuffer.append(TEXT_194);
d800 1
a800 1
    stringBuffer.append(TEXT_195);
d802 1
a802 1
    stringBuffer.append(TEXT_196);
d804 1
a804 1
    stringBuffer.append(TEXT_197);
d806 1
a806 1
    stringBuffer.append(TEXT_198);
d808 1
a808 1
    stringBuffer.append(TEXT_199);
d810 1
a810 1
    stringBuffer.append(TEXT_200);
d812 1
a812 1
    stringBuffer.append(TEXT_201);
d816 1
a816 1
    stringBuffer.append(TEXT_202);
d818 1
a818 1
    stringBuffer.append(TEXT_203);
d822 1
a822 1
    stringBuffer.append(TEXT_204);
d824 1
a824 1
    stringBuffer.append(TEXT_205);
d826 1
a826 1
    stringBuffer.append(TEXT_206);
d828 1
a828 1
    stringBuffer.append(TEXT_207);
d832 1
a832 1
    stringBuffer.append(TEXT_208);
d834 1
a834 1
    stringBuffer.append(TEXT_209);
d836 1
a836 1
    stringBuffer.append(TEXT_210);
d838 1
a838 1
    stringBuffer.append(TEXT_211);
d842 1
a842 1
    stringBuffer.append(TEXT_212);
d844 1
a844 1
    stringBuffer.append(TEXT_213);
d846 1
a846 1
    stringBuffer.append(TEXT_214);
d848 1
a848 1
    stringBuffer.append(TEXT_215);
d850 1
a850 1
    stringBuffer.append(TEXT_216);
d852 1
a852 1
    stringBuffer.append(TEXT_217);
d854 1
a854 1
    stringBuffer.append(TEXT_218);
d856 1
a856 1
    stringBuffer.append(TEXT_219);
d858 1
a858 1
    stringBuffer.append(TEXT_220);
d860 1
a860 1
    stringBuffer.append(TEXT_221);
d862 1
a862 1
    stringBuffer.append(TEXT_222);
d864 1
a864 1
    stringBuffer.append(TEXT_223);
d866 1
a866 1
    stringBuffer.append(TEXT_224);
d868 1
a868 1
    stringBuffer.append(TEXT_225);
d870 1
a870 1
    stringBuffer.append(TEXT_226);
d872 1
a872 1
    stringBuffer.append(TEXT_227);
d874 1
a874 1
    stringBuffer.append(TEXT_228);
d876 1
a876 1
    stringBuffer.append(TEXT_229);
d878 1
a878 1
    stringBuffer.append(TEXT_230);
d880 1
a880 1
    stringBuffer.append(TEXT_231);
d882 1
a882 1
    stringBuffer.append(TEXT_232);
d884 1
a884 1
    stringBuffer.append(TEXT_233);
d886 1
a886 1
    stringBuffer.append(TEXT_234);
d888 1
a888 1
    stringBuffer.append(TEXT_235);
d890 1
a890 1
    stringBuffer.append(TEXT_236);
d892 1
a892 1
    stringBuffer.append(TEXT_237);
d894 1
a894 1
    stringBuffer.append(TEXT_238);
d896 1
a896 1
    stringBuffer.append(TEXT_239);
d898 1
a898 1
    stringBuffer.append(TEXT_240);
d900 1
a900 1
    stringBuffer.append(TEXT_241);
d902 1
a902 1
    stringBuffer.append(TEXT_242);
d904 1
a904 1
    stringBuffer.append(TEXT_243);
d906 1
a906 1
    stringBuffer.append(TEXT_244);
d908 1
a908 1
    stringBuffer.append(TEXT_245);
d910 1
a910 1
    stringBuffer.append(TEXT_246);
d912 1
a912 1
    stringBuffer.append(TEXT_247);
d914 1
a914 1
    stringBuffer.append(TEXT_248);
d916 1
a916 1
    stringBuffer.append(TEXT_249);
d918 1
a918 1
    stringBuffer.append(TEXT_250);
d920 1
a920 1
    stringBuffer.append(TEXT_251);
d922 1
a922 1
    stringBuffer.append(TEXT_252);
d924 1
a924 1
    stringBuffer.append(TEXT_253);
d926 1
a926 1
    stringBuffer.append(TEXT_254);
d928 1
a928 1
    stringBuffer.append(TEXT_255);
d932 1
a932 1
    stringBuffer.append(TEXT_256);
d934 1
a934 1
    stringBuffer.append(TEXT_257);
d936 1
a936 1
    stringBuffer.append(TEXT_258);
d940 1
a940 1
    stringBuffer.append(TEXT_259);
d942 1
a942 1
    stringBuffer.append(TEXT_260);
d944 1
a944 1
    stringBuffer.append(TEXT_261);
d946 1
a946 1
    stringBuffer.append(TEXT_262);
a947 10
    stringBuffer.append(TEXT_263);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_264);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_265);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_266);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_267);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d967 10
d978 1
a978 1
    stringBuffer.append(TEXT_278);
d980 1
a980 1
    stringBuffer.append(TEXT_279);
d982 1
a982 1
    stringBuffer.append(TEXT_280);
@


1.17
log
@[165791]: Diagrams that share EMF EditingDomain should share GEF CommandStacks
@
text
@d208 92
a299 89
  protected final String TEXT_189 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_190 = ".save(";
  protected final String TEXT_191 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_192 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_193 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\tif (!diagramRoot.equals(diagram.getElement())) {" + NL + "\t\t\t\t\t\tdiagram.setElement(";
  protected final String TEXT_194 = "(";
  protected final String TEXT_195 = ") ";
  protected final String TEXT_196 = "diagramRoot);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (!diagram.eIsSet(";
  protected final String TEXT_197 = ".eINSTANCE.getView_Type())) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_198 = ".INSTANCE.decorateView(diagram);";
  protected final String TEXT_199 = NL + "\t\t\t\t\tdoSave(new ";
  protected final String TEXT_200 = "());";
  protected final String TEXT_201 = NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_202 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_203 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_204 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}";
  protected final String TEXT_205 = NL + "\t\t\t\t}" + NL + "\t\t\t\treturn ";
  protected final String TEXT_206 = ".OK_STATUS;" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\ttry {" + NL + "\t\t\toperation.execute(new ";
  protected final String TEXT_207 = "(), null);" + NL + "\t\t} catch (";
  protected final String TEXT_208 = " e) {" + NL + "\t\t\tdiagram = null;" + NL + "\t\t\tdiagramRoot = null;" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_209 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_210 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_211 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void initializeGraphicalViewer() {" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_212 = " root = new ";
  protected final String TEXT_213 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_214 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_215 = " printableLayers = (";
  protected final String TEXT_216 = ") root.getLayer(";
  protected final String TEXT_217 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_218 = " extLabelsLayer = new ";
  protected final String TEXT_219 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_220 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_221 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_222 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_223 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_224 = " provider = new ";
  protected final String TEXT_225 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_226 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_227 = " keyHandler = new ";
  protected final String TEXT_228 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_229 = ".KeyGenerator.getKey(";
  protected final String TEXT_230 = ".CTRL), ";
  protected final String TEXT_231 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isFlyoutPalette() {" + NL + "\t\treturn ";
  protected final String TEXT_232 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_233 = "ContextMenuProvider extends ";
  protected final String TEXT_234 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_235 = "ContextMenuProvider(";
  protected final String TEXT_236 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_237 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_238 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_239 = ".UNDO.getId(), ";
  protected final String TEXT_240 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_241 = ".REDO.getId(), ";
  protected final String TEXT_242 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_243 = ".COPY.getId(), ";
  protected final String TEXT_244 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_245 = ".PASTE.getId(), ";
  protected final String TEXT_246 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_247 = ".DELETE.getId(), ";
  protected final String TEXT_248 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_249 = ".DIRECT_EDIT, ";
  protected final String TEXT_250 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_251 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_252 = ".GROUP_REST);" + NL;
  protected final String TEXT_253 = NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_254 = ".SAVE.getId(), ";
  protected final String TEXT_255 = ".GROUP_SAVE);";
  protected final String TEXT_256 = NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_257 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_258 = " submenu = new ";
  protected final String TEXT_259 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_260 = "(";
  protected final String TEXT_261 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_262 = ".ALIGN_LEFT, ";
  protected final String TEXT_263 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_264 = ".ALIGN_CENTER, ";
  protected final String TEXT_265 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_266 = ".ALIGN_RIGHT, ";
  protected final String TEXT_267 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_268 = ".ALIGN_TOP, ";
  protected final String TEXT_269 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_270 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_271 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_272 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_273 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_274 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_275 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_276 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_277 = NL;
d771 6
d778 1
a778 1
    stringBuffer.append(TEXT_190);
d780 1
a780 1
    stringBuffer.append(TEXT_191);
d782 1
a782 1
    stringBuffer.append(TEXT_192);
d784 1
a784 1
    stringBuffer.append(TEXT_193);
d786 1
a786 1
    stringBuffer.append(TEXT_194);
d788 1
a788 1
    stringBuffer.append(TEXT_195);
d790 1
a790 1
    stringBuffer.append(TEXT_196);
d792 1
a792 1
    stringBuffer.append(TEXT_197);
d794 1
a794 1
    stringBuffer.append(TEXT_198);
d798 1
a798 1
    stringBuffer.append(TEXT_199);
d800 1
a800 1
    stringBuffer.append(TEXT_200);
d804 1
a804 1
    stringBuffer.append(TEXT_201);
d806 1
a806 1
    stringBuffer.append(TEXT_202);
d808 1
a808 1
    stringBuffer.append(TEXT_203);
d810 1
a810 1
    stringBuffer.append(TEXT_204);
d814 1
a814 1
    stringBuffer.append(TEXT_205);
d816 1
a816 1
    stringBuffer.append(TEXT_206);
d818 1
a818 1
    stringBuffer.append(TEXT_207);
d820 1
a820 1
    stringBuffer.append(TEXT_208);
d824 1
a824 1
    stringBuffer.append(TEXT_209);
d826 1
a826 1
    stringBuffer.append(TEXT_210);
d828 1
a828 1
    stringBuffer.append(TEXT_211);
d830 1
a830 1
    stringBuffer.append(TEXT_212);
d832 1
a832 1
    stringBuffer.append(TEXT_213);
d834 1
a834 1
    stringBuffer.append(TEXT_214);
d836 1
a836 1
    stringBuffer.append(TEXT_215);
d838 1
a838 1
    stringBuffer.append(TEXT_216);
d840 1
a840 1
    stringBuffer.append(TEXT_217);
d842 1
a842 1
    stringBuffer.append(TEXT_218);
d844 1
a844 1
    stringBuffer.append(TEXT_219);
d846 1
a846 1
    stringBuffer.append(TEXT_220);
d848 1
a848 1
    stringBuffer.append(TEXT_221);
d850 1
a850 1
    stringBuffer.append(TEXT_222);
d852 1
a852 1
    stringBuffer.append(TEXT_223);
d854 1
a854 1
    stringBuffer.append(TEXT_224);
d856 1
a856 1
    stringBuffer.append(TEXT_225);
d858 1
a858 1
    stringBuffer.append(TEXT_226);
d860 1
a860 1
    stringBuffer.append(TEXT_227);
d862 1
a862 1
    stringBuffer.append(TEXT_228);
d864 1
a864 1
    stringBuffer.append(TEXT_229);
d866 1
a866 1
    stringBuffer.append(TEXT_230);
d868 1
a868 1
    stringBuffer.append(TEXT_231);
d870 1
a870 1
    stringBuffer.append(TEXT_232);
d872 1
a872 1
    stringBuffer.append(TEXT_233);
d874 1
a874 1
    stringBuffer.append(TEXT_234);
d876 1
a876 1
    stringBuffer.append(TEXT_235);
d878 1
a878 1
    stringBuffer.append(TEXT_236);
d880 1
a880 1
    stringBuffer.append(TEXT_237);
d882 1
a882 1
    stringBuffer.append(TEXT_238);
d884 1
a884 1
    stringBuffer.append(TEXT_239);
d886 1
a886 1
    stringBuffer.append(TEXT_240);
d888 1
a888 1
    stringBuffer.append(TEXT_241);
d890 1
a890 1
    stringBuffer.append(TEXT_242);
d892 1
a892 1
    stringBuffer.append(TEXT_243);
d894 1
a894 5
    stringBuffer.append(TEXT_244);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_245);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_246);
a895 2
    stringBuffer.append(TEXT_247);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d899 2
a901 2
    stringBuffer.append(TEXT_250);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.ui.actions.ActionIds"));
d905 1
a905 3
    
if (isEclipseEditor) {

d907 1
a907 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d912 1
a912 1
}
d915 1
a915 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
d917 1
a917 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d919 3
a921 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d923 1
a923 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Separator"));
d925 1
a925 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d927 1
a927 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d929 1
a929 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d953 6
d960 1
a960 1
    stringBuffer.append(TEXT_275);
d962 1
a962 1
    stringBuffer.append(TEXT_276);
d964 1
a964 1
    stringBuffer.append(TEXT_277);
@


1.16
log
@[163214]: Lite runtime should support generation to a View
[164843]: Make it possible to specify the editing domain with which the editor/viewer should operate
@
text
@d112 185
a296 190
  protected final String TEXT_93 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_94 = " getEditingDomain(";
  protected final String TEXT_95 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_96 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_97 = ".getEditingDomain(((";
  protected final String TEXT_98 = ") input).getDiagram());" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_99 = " site, ";
  protected final String TEXT_100 = " input) throws ";
  protected final String TEXT_101 = " {" + NL + "\t\t";
  protected final String TEXT_102 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_103 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_104 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_105 = " input) {";
  protected final String TEXT_106 = NL + "\t\t";
  protected final String TEXT_107 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_108 = NL + "\t\t";
  protected final String TEXT_109 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_110 = NL + "\t\t";
  protected final String TEXT_111 = " newResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (newResource != null) {" + NL + "\t\t\tnewResource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_112 = NL + "\t}" + NL;
  protected final String TEXT_113 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_114 = " getFileFromInput(";
  protected final String TEXT_115 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_116 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_117 = ") input).getFile();" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_118 = " uri = getURIFromInput(input);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\tif (\"platform\".equals(uri.scheme()) && (uri.segmentCount() > 2)) { //$NON-NLS-1$" + NL + "\t\t\t\tif (\"resource\".equals(uri.segment(0))) { //$NON-NLS-1$" + NL + "\t\t\t\t\t";
  protected final String TEXT_119 = " path = new ";
  protected final String TEXT_120 = "(";
  protected final String TEXT_121 = ".decode(uri.path())).removeFirstSegments(1);" + NL + "\t\t\t\t\treturn ";
  protected final String TEXT_122 = ".getWorkspace().getRoot().getFile(path);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_123 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_124 = " getURIFromInput(";
  protected final String TEXT_125 = " input) {" + NL + "\t\tif (input == null) {" + NL + "\t\t\treturn null;" + NL + "\t\t}";
  protected final String TEXT_126 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_127 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_128 = ".createPlatformResourceURI(((";
  protected final String TEXT_129 = ")input).getFile().getFullPath().toString(), true);" + NL + "\t\t}";
  protected final String TEXT_130 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_131 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_132 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_133 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_134 = ".createFileURI(((";
  protected final String TEXT_135 = ")input).getPath().toOSString());" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_136 = " uri = (";
  protected final String TEXT_137 = ") input.getAdapter(";
  protected final String TEXT_138 = ".class);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\treturn uri;" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_139 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_140 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_141 = " factories = new ";
  protected final String TEXT_142 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_143 = "());";
  protected final String TEXT_144 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_145 = "());";
  protected final String TEXT_146 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_147 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_148 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_149 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL;
  protected final String TEXT_150 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void createPartControl(";
  protected final String TEXT_151 = " parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t";
  protected final String TEXT_152 = " bars = getViewSite().getActionBars();" + NL + "\t\tmyActionBarContributor = new ";
  protected final String TEXT_153 = "();" + NL + "\t\tmyActionBarContributor.init(bars, getSite().getPage());" + NL + "\t\tbars.updateActionBars();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_154 = " diagramURI) throws ";
  protected final String TEXT_155 = " {" + NL + "\t\tload(diagramURI);" + NL + "\t\tif (diagram == null || diagramRoot == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_156 = "(new ";
  protected final String TEXT_157 = "(";
  protected final String TEXT_158 = ".ERROR," + NL + "\t\t\t\t";
  protected final String TEXT_159 = ".ID, 0, \"Failed to load diagram\", null));" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_160 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_161 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tfinal ";
  protected final String TEXT_162 = " diagramFileURI = diagramFile;" + NL + "\t\t";
  protected final String TEXT_163 = " editingDomain = getEditingDomain();" + NL + "\t\tfinal ";
  protected final String TEXT_164 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\tfinal ";
  protected final String TEXT_165 = " diagramResource = resourceSet.getResource(diagramFile.trimFragment(), true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_166 = " operation = new ";
  protected final String TEXT_167 = "(editingDomain, \"Load diagram\", null) {" + NL + "\t\t\tprotected ";
  protected final String TEXT_168 = " doExecute(";
  protected final String TEXT_169 = " monitor, ";
  protected final String TEXT_170 = " info) throws ";
  protected final String TEXT_171 = " {" + NL + "\t\t\t\tif (diagramFileURI.fragment() != null) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_172 = " possibleDiagram = diagramResource.getEObject(diagramFileURI.fragment());" + NL + "\t\t\t\t\tif (possibleDiagram instanceof ";
  protected final String TEXT_173 = ") {" + NL + "\t\t\t\t\t\tdiagram = (";
  protected final String TEXT_174 = ") possibleDiagram;" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_175 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\tdiagram = (";
  protected final String TEXT_176 = ") findInResource(diagramResource, ";
  protected final String TEXT_177 = ".class);" + NL + "\t\t\t\t\tif (diagram == null) {" + NL + "\t\t\t\t\t\tdiagram = ";
  protected final String TEXT_178 = ".eINSTANCE.createDiagram();" + NL + "\t\t\t\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_179 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_180 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_181 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tdiagramRoot = (";
  protected final String TEXT_182 = ") diagram.getElement();" + NL + "\t\t\t\tif (diagramRoot == null) {";
  protected final String TEXT_183 = NL + "\t\t\t\t\t";
  protected final String TEXT_184 = " modelFile = ";
  protected final String TEXT_185 = ".getModelFileURI(diagramFileURI);" + NL + "\t\t\t\t\t";
  protected final String TEXT_186 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\t\t\tif (modelResource == null) {" + NL + "\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_187 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}";
  protected final String TEXT_188 = NL + "\t\t\t\t\tdiagramRoot = (";
  protected final String TEXT_189 = ") findInResource(";
  protected final String TEXT_190 = ", ";
  protected final String TEXT_191 = ".class);" + NL + "\t\t\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\t\t\tdiagramRoot = ";
  protected final String TEXT_192 = ".eINSTANCE.create";
  protected final String TEXT_193 = "();" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_194 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_195 = ".save(";
  protected final String TEXT_196 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_197 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_198 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\tif (!diagramRoot.equals(diagram.getElement())) {" + NL + "\t\t\t\t\t\tdiagram.setElement(";
  protected final String TEXT_199 = "(";
  protected final String TEXT_200 = ") ";
  protected final String TEXT_201 = "diagramRoot);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (!diagram.eIsSet(";
  protected final String TEXT_202 = ".eINSTANCE.getView_Type())) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_203 = ".INSTANCE.decorateView(diagram);";
  protected final String TEXT_204 = NL + "\t\t\t\t\tdoSave(new ";
  protected final String TEXT_205 = "());";
  protected final String TEXT_206 = NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_207 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_208 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn ";
  protected final String TEXT_209 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}";
  protected final String TEXT_210 = NL + "\t\t\t\t}" + NL + "\t\t\t\treturn ";
  protected final String TEXT_211 = ".OK_STATUS;" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\ttry {" + NL + "\t\t\toperation.execute(new ";
  protected final String TEXT_212 = "(), null);" + NL + "\t\t} catch (";
  protected final String TEXT_213 = " e) {" + NL + "\t\t\tdiagram = null;" + NL + "\t\t\tdiagramRoot = null;" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_214 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_215 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_216 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void initializeGraphicalViewer() {" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_217 = " root = new ";
  protected final String TEXT_218 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_219 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_220 = " printableLayers = (";
  protected final String TEXT_221 = ") root.getLayer(";
  protected final String TEXT_222 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_223 = " extLabelsLayer = new ";
  protected final String TEXT_224 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_225 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_226 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_227 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_228 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_229 = " provider = new ";
  protected final String TEXT_230 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_231 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_232 = " keyHandler = new ";
  protected final String TEXT_233 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_234 = ".KeyGenerator.getKey(";
  protected final String TEXT_235 = ".CTRL), ";
  protected final String TEXT_236 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isFlyoutPalette() {" + NL + "\t\treturn ";
  protected final String TEXT_237 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_238 = "ContextMenuProvider extends ";
  protected final String TEXT_239 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_240 = "ContextMenuProvider(";
  protected final String TEXT_241 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_242 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_243 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_244 = ".UNDO.getId(), ";
  protected final String TEXT_245 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_246 = ".REDO.getId(), ";
  protected final String TEXT_247 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_248 = ".COPY.getId(), ";
  protected final String TEXT_249 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_250 = ".PASTE.getId(), ";
  protected final String TEXT_251 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_252 = ".DELETE.getId(), ";
  protected final String TEXT_253 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_254 = ".DIRECT_EDIT, ";
  protected final String TEXT_255 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_256 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_257 = ".GROUP_REST);" + NL;
  protected final String TEXT_258 = NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_259 = ".SAVE.getId(), ";
  protected final String TEXT_260 = ".GROUP_SAVE);";
  protected final String TEXT_261 = NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_262 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_263 = " submenu = new ";
  protected final String TEXT_264 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_265 = "(";
  protected final String TEXT_266 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_267 = ".ALIGN_LEFT, ";
  protected final String TEXT_268 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_269 = ".ALIGN_CENTER, ";
  protected final String TEXT_270 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_271 = ".ALIGN_RIGHT, ";
  protected final String TEXT_272 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_273 = ".ALIGN_TOP, ";
  protected final String TEXT_274 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_275 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_276 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_277 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_278 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_279 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_280 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_281 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_282 = NL;
d538 1
a538 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.transaction.TransactionalEditingDomain"));
d542 1
a542 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditorInput"));
d544 1
a544 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.transaction.util.TransactionUtil"));
d546 1
a546 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditorInput"));
d548 1
a548 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorSite"));
a551 10
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_101);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_102);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_103);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
    stringBuffer.append(TEXT_104);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_105);
d555 1
a555 1
    stringBuffer.append(TEXT_106);
d557 1
a557 1
    stringBuffer.append(TEXT_107);
d561 1
a561 1
    stringBuffer.append(TEXT_108);
d563 1
a563 1
    stringBuffer.append(TEXT_109);
d567 1
a567 1
    stringBuffer.append(TEXT_110);
d569 1
a569 1
    stringBuffer.append(TEXT_111);
d573 1
a573 1
    stringBuffer.append(TEXT_112);
d577 1
a577 1
    stringBuffer.append(TEXT_113);
d579 1
a579 1
    stringBuffer.append(TEXT_114);
d581 1
a581 1
    stringBuffer.append(TEXT_115);
d583 1
a583 1
    stringBuffer.append(TEXT_116);
d585 1
a585 1
    stringBuffer.append(TEXT_117);
d587 1
a587 1
    stringBuffer.append(TEXT_118);
d589 1
a589 1
    stringBuffer.append(TEXT_119);
d591 1
a591 1
    stringBuffer.append(TEXT_120);
d593 1
a593 1
    stringBuffer.append(TEXT_121);
d595 1
a595 1
    stringBuffer.append(TEXT_122);
d599 1
a599 1
    stringBuffer.append(TEXT_123);
d601 1
a601 1
    stringBuffer.append(TEXT_124);
d603 1
a603 1
    stringBuffer.append(TEXT_125);
d607 1
a607 1
    stringBuffer.append(TEXT_126);
d609 1
a609 1
    stringBuffer.append(TEXT_127);
d611 1
a611 1
    stringBuffer.append(TEXT_128);
d613 1
a613 1
    stringBuffer.append(TEXT_129);
d617 1
a617 1
    stringBuffer.append(TEXT_130);
d619 1
a619 1
    stringBuffer.append(TEXT_131);
d621 1
a621 1
    stringBuffer.append(TEXT_132);
d623 1
a623 1
    stringBuffer.append(TEXT_133);
d625 1
a625 1
    stringBuffer.append(TEXT_134);
d627 1
a627 1
    stringBuffer.append(TEXT_135);
d629 1
a629 1
    stringBuffer.append(TEXT_136);
d631 1
a631 1
    stringBuffer.append(TEXT_137);
d633 1
a633 1
    stringBuffer.append(TEXT_138);
d637 1
a637 1
    stringBuffer.append(TEXT_139);
d639 1
a639 1
    stringBuffer.append(TEXT_140);
d641 1
a641 1
    stringBuffer.append(TEXT_141);
d643 1
a643 1
    stringBuffer.append(TEXT_142);
d645 1
a645 1
    stringBuffer.append(TEXT_143);
d651 1
a651 1
    stringBuffer.append(TEXT_144);
d653 1
a653 1
    stringBuffer.append(TEXT_145);
d655 1
a655 1
    stringBuffer.append(TEXT_146);
d657 1
a657 1
    stringBuffer.append(TEXT_147);
d659 1
a659 1
    stringBuffer.append(TEXT_148);
d661 1
a661 1
    stringBuffer.append(TEXT_149);
d665 1
a665 1
    stringBuffer.append(TEXT_150);
d667 1
a667 1
    stringBuffer.append(TEXT_151);
d669 1
a669 1
    stringBuffer.append(TEXT_152);
d671 1
a671 1
    stringBuffer.append(TEXT_153);
d673 1
a673 1
    stringBuffer.append(TEXT_154);
d675 1
a675 1
    stringBuffer.append(TEXT_155);
d677 1
a677 1
    stringBuffer.append(TEXT_156);
d679 1
a679 1
    stringBuffer.append(TEXT_157);
d681 1
a681 1
    stringBuffer.append(TEXT_158);
d683 1
a683 1
    stringBuffer.append(TEXT_159);
d687 1
a687 1
    stringBuffer.append(TEXT_160);
d689 1
a689 1
    stringBuffer.append(TEXT_161);
d691 1
a691 1
    stringBuffer.append(TEXT_162);
d693 1
a693 1
    stringBuffer.append(TEXT_163);
d695 1
a695 1
    stringBuffer.append(TEXT_164);
d697 1
a697 1
    stringBuffer.append(TEXT_165);
d699 1
a699 1
    stringBuffer.append(TEXT_166);
d701 1
a701 1
    stringBuffer.append(TEXT_167);
d703 1
a703 1
    stringBuffer.append(TEXT_168);
d705 1
a705 1
    stringBuffer.append(TEXT_169);
d707 1
a707 1
    stringBuffer.append(TEXT_170);
d709 1
a709 1
    stringBuffer.append(TEXT_171);
d711 1
a711 1
    stringBuffer.append(TEXT_172);
d713 1
a713 1
    stringBuffer.append(TEXT_173);
d715 1
a715 1
    stringBuffer.append(TEXT_174);
d717 1
a717 1
    stringBuffer.append(TEXT_175);
d719 1
a719 1
    stringBuffer.append(TEXT_176);
d721 1
a721 1
    stringBuffer.append(TEXT_177);
d723 1
a723 1
    stringBuffer.append(TEXT_178);
d725 1
a725 1
    stringBuffer.append(TEXT_179);
d727 1
a727 1
    stringBuffer.append(TEXT_180);
d729 1
a729 1
    stringBuffer.append(TEXT_181);
d731 1
a731 1
    stringBuffer.append(TEXT_182);
d740 1
a740 1
    stringBuffer.append(TEXT_183);
d742 1
a742 1
    stringBuffer.append(TEXT_184);
d744 1
a744 1
    stringBuffer.append(TEXT_185);
d746 1
a746 1
    stringBuffer.append(TEXT_186);
d748 1
a748 1
    stringBuffer.append(TEXT_187);
d755 1
a755 1
    stringBuffer.append(TEXT_188);
d757 1
a757 1
    stringBuffer.append(TEXT_189);
d759 1
a759 1
    stringBuffer.append(TEXT_190);
d761 1
a761 1
    stringBuffer.append(TEXT_191);
d763 1
a763 1
    stringBuffer.append(TEXT_192);
d765 1
a765 1
    stringBuffer.append(TEXT_193);
d767 1
a767 1
    stringBuffer.append(TEXT_194);
d769 1
a769 1
    stringBuffer.append(TEXT_195);
d771 1
a771 1
    stringBuffer.append(TEXT_196);
d773 1
a773 1
    stringBuffer.append(TEXT_197);
d775 1
a775 1
    stringBuffer.append(TEXT_198);
d777 1
a777 1
    stringBuffer.append(TEXT_199);
d779 1
a779 1
    stringBuffer.append(TEXT_200);
d781 1
a781 1
    stringBuffer.append(TEXT_201);
d783 1
a783 1
    stringBuffer.append(TEXT_202);
d785 1
a785 1
    stringBuffer.append(TEXT_203);
d789 1
a789 1
    stringBuffer.append(TEXT_204);
d791 1
a791 1
    stringBuffer.append(TEXT_205);
d795 1
a795 1
    stringBuffer.append(TEXT_206);
d797 1
a797 1
    stringBuffer.append(TEXT_207);
d799 1
a799 1
    stringBuffer.append(TEXT_208);
d801 1
a801 1
    stringBuffer.append(TEXT_209);
d805 1
a805 1
    stringBuffer.append(TEXT_210);
d807 1
a807 1
    stringBuffer.append(TEXT_211);
d809 1
a809 1
    stringBuffer.append(TEXT_212);
d811 1
a811 1
    stringBuffer.append(TEXT_213);
d815 1
a815 1
    stringBuffer.append(TEXT_214);
d817 1
a817 1
    stringBuffer.append(TEXT_215);
d819 1
a819 1
    stringBuffer.append(TEXT_216);
d821 1
a821 1
    stringBuffer.append(TEXT_217);
d823 1
a823 1
    stringBuffer.append(TEXT_218);
d825 1
a825 1
    stringBuffer.append(TEXT_219);
d827 1
a827 1
    stringBuffer.append(TEXT_220);
d829 1
a829 1
    stringBuffer.append(TEXT_221);
d831 1
a831 1
    stringBuffer.append(TEXT_222);
d833 1
a833 1
    stringBuffer.append(TEXT_223);
d835 1
a835 1
    stringBuffer.append(TEXT_224);
d837 1
a837 1
    stringBuffer.append(TEXT_225);
d839 1
a839 1
    stringBuffer.append(TEXT_226);
d841 1
a841 1
    stringBuffer.append(TEXT_227);
d843 1
a843 1
    stringBuffer.append(TEXT_228);
d845 1
a845 1
    stringBuffer.append(TEXT_229);
d847 1
a847 1
    stringBuffer.append(TEXT_230);
d849 1
a849 1
    stringBuffer.append(TEXT_231);
d851 1
a851 1
    stringBuffer.append(TEXT_232);
d853 1
a853 1
    stringBuffer.append(TEXT_233);
d855 1
a855 1
    stringBuffer.append(TEXT_234);
d857 1
a857 1
    stringBuffer.append(TEXT_235);
d859 1
a859 1
    stringBuffer.append(TEXT_236);
d861 1
a861 1
    stringBuffer.append(TEXT_237);
d863 1
a863 1
    stringBuffer.append(TEXT_238);
d865 1
a865 1
    stringBuffer.append(TEXT_239);
d867 1
a867 1
    stringBuffer.append(TEXT_240);
d869 1
a869 1
    stringBuffer.append(TEXT_241);
d871 1
a871 1
    stringBuffer.append(TEXT_242);
d873 1
a873 1
    stringBuffer.append(TEXT_243);
d875 1
a875 1
    stringBuffer.append(TEXT_244);
d877 1
a877 1
    stringBuffer.append(TEXT_245);
d879 1
a879 1
    stringBuffer.append(TEXT_246);
d881 1
a881 1
    stringBuffer.append(TEXT_247);
d883 1
a883 1
    stringBuffer.append(TEXT_248);
d885 1
a885 1
    stringBuffer.append(TEXT_249);
d887 1
a887 1
    stringBuffer.append(TEXT_250);
d889 1
a889 1
    stringBuffer.append(TEXT_251);
d891 1
a891 1
    stringBuffer.append(TEXT_252);
d893 1
a893 1
    stringBuffer.append(TEXT_253);
d895 1
a895 1
    stringBuffer.append(TEXT_254);
d897 1
a897 1
    stringBuffer.append(TEXT_255);
d899 1
a899 1
    stringBuffer.append(TEXT_256);
d901 1
a901 1
    stringBuffer.append(TEXT_257);
d905 1
a905 1
    stringBuffer.append(TEXT_258);
d907 1
a907 1
    stringBuffer.append(TEXT_259);
d909 1
a909 1
    stringBuffer.append(TEXT_260);
d913 10
d924 1
a924 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
d926 1
a926 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d928 1
a928 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d930 1
a930 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Separator"));
d950 1
a950 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d952 1
a952 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d954 1
a954 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
a955 10
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_278);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_279);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
    stringBuffer.append(TEXT_280);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IAction"));
    stringBuffer.append(TEXT_281);
    importManager.emitSortedImports();
    stringBuffer.append(TEXT_282);
@


1.15
log
@[165167]: Unregister listeners when editor is closed
@
text
@d40 1
a40 1
  protected final String TEXT_21 = ".createPlatformResourceURI(newFile.getFullPath().toString());" + NL + "\t\t\t\t\t\t";
d46 8
a53 8
  protected final String TEXT_27 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_28 = " diagramRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_29 = " diagram;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_30 = " domainAdapterFactory;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createActions() {" + NL + "\t\taddStackAction(new ";
  protected final String TEXT_31 = "(this));" + NL + "\t\taddStackAction(new ";
  protected final String TEXT_32 = "(this));" + NL + "" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_33 = "((";
  protected final String TEXT_34 = ") this));" + NL + "\t\taddEditPartAction(new ";
d55 1
a55 1
  protected final String TEXT_36 = ") this));" + NL + "" + NL + "\t\taddEditPartAction(new ";
d57 245
a301 211
  protected final String TEXT_38 = ") this, ";
  protected final String TEXT_39 = ".LEFT));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_40 = "((";
  protected final String TEXT_41 = ") this, ";
  protected final String TEXT_42 = ".RIGHT));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_43 = "((";
  protected final String TEXT_44 = ") this, ";
  protected final String TEXT_45 = ".TOP));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_46 = "((";
  protected final String TEXT_47 = ") this, ";
  protected final String TEXT_48 = ".BOTTOM));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_49 = "((";
  protected final String TEXT_50 = ") this, ";
  protected final String TEXT_51 = ".CENTER));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_52 = "((";
  protected final String TEXT_53 = ") this, ";
  protected final String TEXT_54 = ".MIDDLE));" + NL + "" + NL + "\t\taddEditorAction(new ";
  protected final String TEXT_55 = "(this));" + NL + "\t\taddEditorAction(new ";
  protected final String TEXT_56 = "(this));" + NL + "\t\taddEditorAction(new ";
  protected final String TEXT_57 = "(this));" + NL + "" + NL + "\t\t";
  protected final String TEXT_58 = " zoomIn = new ";
  protected final String TEXT_59 = "(getZoomManager());" + NL + "\t\t";
  protected final String TEXT_60 = " zoomOut = new ";
  protected final String TEXT_61 = "(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t\t";
  protected final String TEXT_62 = " keyHandler = getGraphicalViewer().getKeyHandler();" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_63 = ".getPressed(";
  protected final String TEXT_64 = ".DEL, 127, 0), getActionRegistry().getAction(";
  protected final String TEXT_65 = ".DELETE.getId()));" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_66 = ".getPressed(";
  protected final String TEXT_67 = ".F2, 0), getActionRegistry().getAction(";
  protected final String TEXT_68 = ".DIRECT_EDIT));" + NL + "\t}" + NL;
  protected final String TEXT_69 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_70 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_71 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {";
  protected final String TEXT_72 = NL + "\t\t";
  protected final String TEXT_73 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_74 = NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(";
  protected final String TEXT_75 = " monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (";
  protected final String TEXT_76 = " e) {" + NL + "\t\t\t";
  protected final String TEXT_77 = ".openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_78 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configurePalette(";
  protected final String TEXT_79 = " paletteRoot) {";
  protected final String TEXT_80 = NL + "\t\tnew ";
  protected final String TEXT_81 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_82 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_83 = " getDiagramRoot() {" + NL + "\t\treturn diagramRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_84 = " getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_85 = " getEditingDomain(";
  protected final String TEXT_86 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_87 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_88 = ".getEditingDomain(((";
  protected final String TEXT_89 = ") input).getDiagram());" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_90 = " site, ";
  protected final String TEXT_91 = " input) throws ";
  protected final String TEXT_92 = " {" + NL + "\t\t";
  protected final String TEXT_93 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_94 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_95 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_96 = " input) {";
  protected final String TEXT_97 = NL + "\t\t";
  protected final String TEXT_98 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_99 = NL + "\t\t";
  protected final String TEXT_100 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_101 = NL + "\t\t";
  protected final String TEXT_102 = " newResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (newResource != null) {" + NL + "\t\t\tnewResource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_103 = NL + "\t}" + NL;
  protected final String TEXT_104 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_105 = " getFileFromInput(";
  protected final String TEXT_106 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_107 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_108 = ") input).getFile();" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_109 = " uri = getURIFromInput(input);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\tif (\"platform\".equals(uri.scheme()) && (uri.segmentCount() > 2)) { //$NON-NLS-1$" + NL + "\t\t\t\tif (\"resource\".equals(uri.segment(0))) { //$NON-NLS-1$" + NL + "\t\t\t\t\t";
  protected final String TEXT_110 = " path = new ";
  protected final String TEXT_111 = "(";
  protected final String TEXT_112 = ".decode(uri.path())).removeFirstSegments(1);" + NL + "\t\t\t\t\treturn ";
  protected final String TEXT_113 = ".getWorkspace().getRoot().getFile(path);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_114 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_115 = " getURIFromInput(";
  protected final String TEXT_116 = " input) {" + NL + "\t\tif (input == null) {" + NL + "\t\t\treturn null;" + NL + "\t\t}";
  protected final String TEXT_117 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_118 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_119 = ".createPlatformResourceURI(((";
  protected final String TEXT_120 = ")input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_121 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_122 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_123 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_124 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_125 = ".createFileURI(((";
  protected final String TEXT_126 = ")input).getPath().toOSString());" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_127 = " uri = (";
  protected final String TEXT_128 = ") input.getAdapter(";
  protected final String TEXT_129 = ".class);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\treturn uri;" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_130 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_131 = " factories = new ";
  protected final String TEXT_132 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_133 = "());";
  protected final String TEXT_134 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_135 = "());";
  protected final String TEXT_136 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_137 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_138 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_139 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_140 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tfinal ";
  protected final String TEXT_141 = " diagramFileURI = diagramFile;" + NL + "\t\t";
  protected final String TEXT_142 = " editingDomain = getEditingDomain();" + NL + "\t\tfinal ";
  protected final String TEXT_143 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\tfinal ";
  protected final String TEXT_144 = " diagramResource = resourceSet.getResource(diagramFile.trimFragment(), true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_145 = " operation = new ";
  protected final String TEXT_146 = "(editingDomain, \"Load diagram\", null) {" + NL + "\t\t\tprotected ";
  protected final String TEXT_147 = " doExecute(";
  protected final String TEXT_148 = " monitor, ";
  protected final String TEXT_149 = " info) throws ";
  protected final String TEXT_150 = " {" + NL + "\t\t\t\tif (diagramFileURI.fragment() != null) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_151 = " possibleDiagram = diagramResource.getEObject(diagramFileURI.fragment());" + NL + "\t\t\t\t\tif (possibleDiagram instanceof ";
  protected final String TEXT_152 = ") {" + NL + "\t\t\t\t\t\tdiagram = (";
  protected final String TEXT_153 = ") possibleDiagram;" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_154 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\tdiagram = (";
  protected final String TEXT_155 = ") findInResource(diagramResource, ";
  protected final String TEXT_156 = ".class);" + NL + "\t\t\t\t\tif (diagram == null) {" + NL + "\t\t\t\t\t\tdiagram = ";
  protected final String TEXT_157 = ".eINSTANCE.createDiagram();" + NL + "\t\t\t\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_158 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_159 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tdiagramRoot = (";
  protected final String TEXT_160 = ") diagram.getElement();" + NL + "\t\t\t\tif (diagramRoot == null) {";
  protected final String TEXT_161 = NL + "\t\t\t\t\t";
  protected final String TEXT_162 = " modelFile = ";
  protected final String TEXT_163 = ".getModelFileURI(diagramFileURI);" + NL + "\t\t\t\t\t";
  protected final String TEXT_164 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\t\t\tif (modelResource == null) {" + NL + "\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t}";
  protected final String TEXT_165 = NL + "\t\t\t\t\tdiagramRoot = (";
  protected final String TEXT_166 = ") findInResource(";
  protected final String TEXT_167 = ", ";
  protected final String TEXT_168 = ".class);" + NL + "\t\t\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\t\t\tdiagramRoot = ";
  protected final String TEXT_169 = ".eINSTANCE.create";
  protected final String TEXT_170 = "();" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_171 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_172 = ".save(";
  protected final String TEXT_173 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_174 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\tif (!diagramRoot.equals(diagram.getElement())) {" + NL + "\t\t\t\t\t\tdiagram.setElement(";
  protected final String TEXT_175 = "(";
  protected final String TEXT_176 = ") ";
  protected final String TEXT_177 = "diagramRoot);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (!diagram.eIsSet(";
  protected final String TEXT_178 = ".eINSTANCE.getView_Type())) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_179 = ".INSTANCE.decorateView(diagram);" + NL + "\t\t\t\t\tdoSave(new NullProgressMonitor());" + NL + "\t\t\t\t}" + NL + "\t\t\t\treturn Status.OK_STATUS;" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\ttry {" + NL + "\t\t\toperation.execute(new ";
  protected final String TEXT_180 = "(), null);" + NL + "\t\t} catch (";
  protected final String TEXT_181 = " e) {" + NL + "\t\t\tdiagram = null;" + NL + "\t\t\tdiagramRoot = null;" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_182 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_183 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_184 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void initializeGraphicalViewer() {" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_185 = " root = new ";
  protected final String TEXT_186 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_187 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_188 = " printableLayers = (";
  protected final String TEXT_189 = ") root.getLayer(";
  protected final String TEXT_190 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_191 = " extLabelsLayer = new ";
  protected final String TEXT_192 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_193 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_194 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_195 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_196 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_197 = " provider = new ";
  protected final String TEXT_198 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_199 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_200 = " keyHandler = new ";
  protected final String TEXT_201 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_202 = ".KeyGenerator.getKey(";
  protected final String TEXT_203 = ".CTRL), ";
  protected final String TEXT_204 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isFlyoutPalette() {" + NL + "\t\treturn ";
  protected final String TEXT_205 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_206 = "ContextMenuProvider extends ";
  protected final String TEXT_207 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_208 = "ContextMenuProvider(";
  protected final String TEXT_209 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_210 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_211 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_212 = ".UNDO.getId(), ";
  protected final String TEXT_213 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_214 = ".REDO.getId(), ";
  protected final String TEXT_215 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_216 = ".COPY.getId(), ";
  protected final String TEXT_217 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_218 = ".PASTE.getId(), ";
  protected final String TEXT_219 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_220 = ".DELETE.getId(), ";
  protected final String TEXT_221 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_222 = ".DIRECT_EDIT, ";
  protected final String TEXT_223 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_224 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_225 = ".GROUP_REST);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_226 = ".SAVE.getId(), ";
  protected final String TEXT_227 = ".GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_228 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_229 = " submenu = new ";
  protected final String TEXT_230 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_231 = "(";
  protected final String TEXT_232 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_233 = ".ALIGN_LEFT, ";
  protected final String TEXT_234 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_235 = ".ALIGN_CENTER, ";
  protected final String TEXT_236 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_237 = ".ALIGN_RIGHT, ";
  protected final String TEXT_238 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_239 = ".ALIGN_TOP, ";
  protected final String TEXT_240 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_241 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_242 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_243 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_244 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_245 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_246 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_247 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_248 = NL;
d311 1
d325 1
a325 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditor"));
d330 1
a330 1
if (!isRichClientPlatform) {
d375 1
d378 1
a378 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
d380 3
a382 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d384 1
a384 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.ComposedAdapterFactory"));
d386 1
a386 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.UndoAction"));
d388 1
a388 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.RedoAction"));
d390 1
a390 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.DeleteAction"));
d392 1
a392 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IWorkbenchPart"));
d394 1
a394 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.DirectEditAction"));
d398 1
a398 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.AlignmentAction"));
d402 4
d407 1
a407 1
    stringBuffer.append(TEXT_39);
d409 1
a409 1
    stringBuffer.append(TEXT_40);
d411 1
a411 1
    stringBuffer.append(TEXT_41);
d413 1
a413 1
    stringBuffer.append(TEXT_42);
d415 1
a415 1
    stringBuffer.append(TEXT_43);
d417 1
a417 1
    stringBuffer.append(TEXT_44);
d419 1
a419 1
    stringBuffer.append(TEXT_45);
d421 1
a421 1
    stringBuffer.append(TEXT_46);
d423 1
a423 1
    stringBuffer.append(TEXT_47);
d425 1
a425 1
    stringBuffer.append(TEXT_48);
d427 1
a427 1
    stringBuffer.append(TEXT_49);
d429 1
a429 1
    stringBuffer.append(TEXT_50);
d431 1
a431 1
    stringBuffer.append(TEXT_51);
d433 1
a433 1
    stringBuffer.append(TEXT_52);
d435 1
a435 1
    stringBuffer.append(TEXT_53);
d437 5
a441 1
    stringBuffer.append(TEXT_54);
d443 5
a447 1
    stringBuffer.append(TEXT_55);
d449 1
a449 1
    stringBuffer.append(TEXT_56);
d451 1
a451 1
    stringBuffer.append(TEXT_57);
d453 1
a453 1
    stringBuffer.append(TEXT_58);
d455 1
a455 1
    stringBuffer.append(TEXT_59);
d457 1
a457 1
    stringBuffer.append(TEXT_60);
d459 1
a459 1
    stringBuffer.append(TEXT_61);
d461 1
a461 1
    stringBuffer.append(TEXT_62);
d463 1
a463 1
    stringBuffer.append(TEXT_63);
d465 1
a465 1
    stringBuffer.append(TEXT_64);
d467 1
a467 1
    stringBuffer.append(TEXT_65);
d469 1
a469 1
    stringBuffer.append(TEXT_66);
d471 1
a471 1
    stringBuffer.append(TEXT_67);
d473 1
a473 1
    stringBuffer.append(TEXT_68);
d475 1
a475 1
if (!isRichClientPlatform) {
d477 1
a477 1
    stringBuffer.append(TEXT_69);
d479 6
a484 1
    stringBuffer.append(TEXT_70);
d488 1
a488 1
    stringBuffer.append(TEXT_71);
d490 1
a490 1
if (!isRichClientPlatform) {
d492 1
a492 1
    stringBuffer.append(TEXT_72);
d494 6
a499 1
    stringBuffer.append(TEXT_73);
d503 5
a507 1
    stringBuffer.append(TEXT_74);
d509 1
a509 1
    stringBuffer.append(TEXT_75);
d511 1
a511 1
    stringBuffer.append(TEXT_76);
d513 1
a513 1
    stringBuffer.append(TEXT_77);
d515 5
a519 1
    stringBuffer.append(TEXT_78);
d521 1
a521 1
    stringBuffer.append(TEXT_79);
d527 1
a527 1
    stringBuffer.append(TEXT_80);
d529 1
a529 1
    stringBuffer.append(TEXT_81);
d534 1
a534 1
    stringBuffer.append(TEXT_82);
d536 1
a536 1
    stringBuffer.append(TEXT_83);
d538 5
a542 1
    stringBuffer.append(TEXT_84);
d544 1
a544 1
    stringBuffer.append(TEXT_85);
d546 1
a546 1
    stringBuffer.append(TEXT_86);
d548 1
a548 1
    stringBuffer.append(TEXT_87);
d550 1
a550 1
    stringBuffer.append(TEXT_88);
d552 1
a552 1
    stringBuffer.append(TEXT_89);
d554 1
a554 1
    stringBuffer.append(TEXT_90);
d556 1
a556 1
    stringBuffer.append(TEXT_91);
d558 1
a558 1
    stringBuffer.append(TEXT_92);
d560 1
a560 1
    stringBuffer.append(TEXT_93);
d562 1
a562 1
    stringBuffer.append(TEXT_94);
d564 1
a564 1
    stringBuffer.append(TEXT_95);
d566 1
a566 1
    stringBuffer.append(TEXT_96);
d568 1
a568 1
if (!isRichClientPlatform) {
d570 1
a570 1
    stringBuffer.append(TEXT_97);
d572 1
a572 1
    stringBuffer.append(TEXT_98);
d574 1
a574 1
}
d576 1
a576 1
    stringBuffer.append(TEXT_99);
d578 1
a578 1
    stringBuffer.append(TEXT_100);
d580 1
a580 1
if (!isRichClientPlatform) {
d582 1
a582 1
    stringBuffer.append(TEXT_101);
d584 1
a584 1
    stringBuffer.append(TEXT_102);
d586 1
a586 1
}
a587 18
    stringBuffer.append(TEXT_103);
    if (!isRichClientPlatform) {
    stringBuffer.append(TEXT_104);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IFile"));
    stringBuffer.append(TEXT_105);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_106);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_107);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_108);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_109);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IPath"));
    stringBuffer.append(TEXT_110);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Path"));
    stringBuffer.append(TEXT_111);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d589 3
a591 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.ResourcesPlugin"));
d593 1
a593 1
    }
d595 1
a595 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d597 1
a597 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
d599 1
a599 1
    if (!isRichClientPlatform) {
d601 1
a601 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
d603 1
a603 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d605 1
a605 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
d607 1
a607 1
    }
d609 1
a609 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
d611 3
a613 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
d615 1
a615 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IPathEditorInput"));
d617 1
a617 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d619 3
a621 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IPathEditorInput"));
d623 1
a623 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d627 1
a627 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d629 3
a631 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.notify.AdapterFactory"));
d633 1
a633 1
    stringBuffer.append(importManager.getImportedName("java.util.List"));
d635 1
a635 1
    stringBuffer.append(importManager.getImportedName("java.util.ArrayList"));
d637 1
a637 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.resource.ResourceItemProviderAdapterFactory"));
d639 1
a639 5
    
final EList genPackages = genDiagram.getEditorGen().getAllDomainGenPackages(true);
for (int i = 0; i < genPackages.size(); i++) {
	GenPackage genPackage = (GenPackage) genPackages.get(i);

d641 1
a641 1
    stringBuffer.append(importManager.getImportedName(genPackage.getQualifiedItemProviderAdapterFactoryClassName()));
d643 26
d670 1
a670 1
    stringBuffer.append(TEXT_136);
d672 1
a672 1
    stringBuffer.append(TEXT_137);
d674 1
a674 1
    stringBuffer.append(TEXT_138);
d676 27
a702 1
    stringBuffer.append(TEXT_139);
d704 1
a704 1
    stringBuffer.append(TEXT_140);
d706 1
a706 1
    stringBuffer.append(TEXT_141);
d708 1
a708 1
    stringBuffer.append(TEXT_142);
d710 1
a710 1
    stringBuffer.append(TEXT_143);
d712 1
a712 1
    stringBuffer.append(TEXT_144);
d714 1
a714 1
    stringBuffer.append(TEXT_145);
d716 1
a716 1
    stringBuffer.append(TEXT_146);
d718 1
a718 1
    stringBuffer.append(TEXT_147);
d720 1
a720 1
    stringBuffer.append(TEXT_148);
d722 1
a722 1
    stringBuffer.append(TEXT_149);
d724 1
a724 1
    stringBuffer.append(TEXT_150);
d726 1
a726 1
    stringBuffer.append(TEXT_151);
d728 1
a728 1
    stringBuffer.append(TEXT_152);
d730 1
a730 1
    stringBuffer.append(TEXT_153);
d732 1
a732 1
    stringBuffer.append(TEXT_154);
d734 1
a734 1
    stringBuffer.append(TEXT_155);
d736 1
a736 1
    stringBuffer.append(TEXT_156);
d738 1
a738 1
    stringBuffer.append(TEXT_157);
d740 1
a740 1
    stringBuffer.append(TEXT_158);
d742 3
a744 1
    stringBuffer.append(TEXT_159);
d746 1
a746 1
    stringBuffer.append(TEXT_160);
d755 1
a755 1
    stringBuffer.append(TEXT_161);
d757 1
a757 1
    stringBuffer.append(TEXT_162);
d759 1
a759 1
    stringBuffer.append(TEXT_163);
d761 3
a763 1
    stringBuffer.append(TEXT_164);
d770 1
a770 1
    stringBuffer.append(TEXT_165);
d772 1
a772 1
    stringBuffer.append(TEXT_166);
d774 1
a774 1
    stringBuffer.append(TEXT_167);
d776 1
a776 1
    stringBuffer.append(TEXT_168);
d778 1
a778 1
    stringBuffer.append(TEXT_169);
d780 1
a780 1
    stringBuffer.append(TEXT_170);
d782 1
a782 1
    stringBuffer.append(TEXT_171);
d784 1
a784 1
    stringBuffer.append(TEXT_172);
d786 1
a786 1
    stringBuffer.append(TEXT_173);
d788 3
a790 1
    stringBuffer.append(TEXT_174);
d792 1
a792 1
    stringBuffer.append(TEXT_175);
d794 1
a794 1
    stringBuffer.append(TEXT_176);
d796 1
a796 1
    stringBuffer.append(TEXT_177);
d798 1
a798 1
    stringBuffer.append(TEXT_178);
d800 23
a822 1
    stringBuffer.append(TEXT_179);
d824 1
a824 1
    stringBuffer.append(TEXT_180);
d826 1
a826 1
    stringBuffer.append(TEXT_181);
d828 1
a828 1
}
d830 1
a830 1
    stringBuffer.append(TEXT_182);
d832 1
a832 1
    stringBuffer.append(TEXT_183);
d834 1
a834 1
    stringBuffer.append(TEXT_184);
d836 1
a836 1
    stringBuffer.append(TEXT_185);
d838 1
a838 1
    stringBuffer.append(TEXT_186);
d840 1
a840 1
    stringBuffer.append(TEXT_187);
d842 1
a842 1
    stringBuffer.append(TEXT_188);
d844 1
a844 1
    stringBuffer.append(TEXT_189);
d846 1
a846 1
    stringBuffer.append(TEXT_190);
d848 1
a848 1
    stringBuffer.append(TEXT_191);
d850 1
a850 1
    stringBuffer.append(TEXT_192);
d852 1
a852 1
    stringBuffer.append(TEXT_193);
d854 1
a854 1
    stringBuffer.append(TEXT_194);
d856 1
a856 1
    stringBuffer.append(TEXT_195);
d858 1
a858 1
    stringBuffer.append(TEXT_196);
d860 1
a860 1
    stringBuffer.append(TEXT_197);
d862 1
a862 1
    stringBuffer.append(TEXT_198);
d864 1
a864 1
    stringBuffer.append(TEXT_199);
d866 1
a866 1
    stringBuffer.append(TEXT_200);
d868 1
a868 1
    stringBuffer.append(TEXT_201);
d870 1
a870 1
    stringBuffer.append(TEXT_202);
d872 1
a872 1
    stringBuffer.append(TEXT_203);
d874 1
a874 1
    stringBuffer.append(TEXT_204);
d876 1
a876 1
    stringBuffer.append(TEXT_205);
d878 1
a878 1
    stringBuffer.append(TEXT_206);
d880 1
a880 1
    stringBuffer.append(TEXT_207);
d882 1
a882 1
    stringBuffer.append(TEXT_208);
d884 1
a884 1
    stringBuffer.append(TEXT_209);
d886 1
a886 1
    stringBuffer.append(TEXT_210);
d888 1
a888 1
    stringBuffer.append(TEXT_211);
d890 1
a890 1
    stringBuffer.append(TEXT_212);
d892 1
a892 1
    stringBuffer.append(TEXT_213);
d894 1
a894 1
    stringBuffer.append(TEXT_214);
d896 1
a896 1
    stringBuffer.append(TEXT_215);
d898 1
a898 1
    stringBuffer.append(TEXT_216);
d900 1
a900 1
    stringBuffer.append(TEXT_217);
d902 1
a902 1
    stringBuffer.append(TEXT_218);
d904 1
a904 1
    stringBuffer.append(TEXT_219);
d906 1
a906 1
    stringBuffer.append(TEXT_220);
d908 1
a908 1
    stringBuffer.append(TEXT_221);
d910 1
a910 1
    stringBuffer.append(TEXT_222);
d912 1
a912 1
    stringBuffer.append(TEXT_223);
d914 1
a914 1
    stringBuffer.append(TEXT_224);
d916 5
a920 1
    stringBuffer.append(TEXT_225);
d922 1
a922 1
    stringBuffer.append(TEXT_226);
d924 5
a928 1
    stringBuffer.append(TEXT_227);
d930 1
a930 1
    stringBuffer.append(TEXT_228);
d932 1
a932 1
    stringBuffer.append(TEXT_229);
d934 1
a934 1
    stringBuffer.append(TEXT_230);
d936 1
a936 1
    stringBuffer.append(TEXT_231);
d938 1
a938 1
    stringBuffer.append(TEXT_232);
d940 1
a940 1
    stringBuffer.append(TEXT_233);
d942 1
a942 1
    stringBuffer.append(TEXT_234);
d944 1
a944 1
    stringBuffer.append(TEXT_235);
d946 1
a946 1
    stringBuffer.append(TEXT_236);
d948 1
a948 1
    stringBuffer.append(TEXT_237);
d950 1
a950 1
    stringBuffer.append(TEXT_238);
d952 1
a952 1
    stringBuffer.append(TEXT_239);
d954 1
a954 1
    stringBuffer.append(TEXT_240);
d956 1
a956 1
    stringBuffer.append(TEXT_241);
d958 1
a958 1
    stringBuffer.append(TEXT_242);
d960 1
a960 1
    stringBuffer.append(TEXT_243);
d962 1
a962 1
    stringBuffer.append(TEXT_244);
d964 1
a964 1
    stringBuffer.append(TEXT_245);
d966 1
a966 1
    stringBuffer.append(TEXT_246);
d968 1
a968 1
    stringBuffer.append(TEXT_247);
d970 1
a970 1
    stringBuffer.append(TEXT_248);
@


1.14
log
@NPE when opening editor for the first time
@
text
@d90 178
a267 175
  protected final String TEXT_71 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(";
  protected final String TEXT_72 = " monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (";
  protected final String TEXT_73 = " e) {" + NL + "\t\t\t";
  protected final String TEXT_74 = ".openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_75 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configurePalette(";
  protected final String TEXT_76 = " paletteRoot) {";
  protected final String TEXT_77 = NL + "\t\tnew ";
  protected final String TEXT_78 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_79 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_80 = " getDiagramRoot() {" + NL + "\t\treturn diagramRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_81 = " getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_82 = " getEditingDomain(";
  protected final String TEXT_83 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_84 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_85 = ".getEditingDomain(((";
  protected final String TEXT_86 = ") input).getDiagram());" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_87 = " site, ";
  protected final String TEXT_88 = " input) throws ";
  protected final String TEXT_89 = " {" + NL + "\t\t";
  protected final String TEXT_90 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_91 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_92 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_93 = " input) {";
  protected final String TEXT_94 = NL + "\t\t";
  protected final String TEXT_95 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_96 = NL + "\t\t";
  protected final String TEXT_97 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_98 = NL + "\t\t";
  protected final String TEXT_99 = " newResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (newResource != null) {" + NL + "\t\t\tnewResource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_100 = NL + "\t}" + NL;
  protected final String TEXT_101 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_102 = " getFileFromInput(";
  protected final String TEXT_103 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_104 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_105 = ") input).getFile();" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_106 = " uri = getURIFromInput(input);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\tif (\"platform\".equals(uri.scheme()) && (uri.segmentCount() > 2)) { //$NON-NLS-1$" + NL + "\t\t\t\tif (\"resource\".equals(uri.segment(0))) { //$NON-NLS-1$" + NL + "\t\t\t\t\t";
  protected final String TEXT_107 = " path = new ";
  protected final String TEXT_108 = "(";
  protected final String TEXT_109 = ".decode(uri.path())).removeFirstSegments(1);" + NL + "\t\t\t\t\treturn ";
  protected final String TEXT_110 = ".getWorkspace().getRoot().getFile(path);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_111 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_112 = " getURIFromInput(";
  protected final String TEXT_113 = " input) {" + NL + "\t\tif (input == null) {" + NL + "\t\t\treturn null;" + NL + "\t\t}";
  protected final String TEXT_114 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_115 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_116 = ".createPlatformResourceURI(((";
  protected final String TEXT_117 = ")input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_118 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_119 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_120 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_121 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_122 = ".createFileURI(((";
  protected final String TEXT_123 = ")input).getPath().toOSString());" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_124 = " uri = (";
  protected final String TEXT_125 = ") input.getAdapter(";
  protected final String TEXT_126 = ".class);" + NL + "\t\tif (uri != null) {" + NL + "\t\t\treturn uri;" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_127 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_128 = " factories = new ";
  protected final String TEXT_129 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_130 = "());";
  protected final String TEXT_131 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_132 = "());";
  protected final String TEXT_133 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_134 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_135 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_136 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_137 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tfinal ";
  protected final String TEXT_138 = " diagramFileURI = diagramFile;" + NL + "\t\t";
  protected final String TEXT_139 = " editingDomain = getEditingDomain();" + NL + "\t\tfinal ";
  protected final String TEXT_140 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\tfinal ";
  protected final String TEXT_141 = " diagramResource = resourceSet.getResource(diagramFile.trimFragment(), true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_142 = " operation = new ";
  protected final String TEXT_143 = "(editingDomain, \"Load diagram\", null) {" + NL + "\t\t\tprotected ";
  protected final String TEXT_144 = " doExecute(";
  protected final String TEXT_145 = " monitor, ";
  protected final String TEXT_146 = " info) throws ";
  protected final String TEXT_147 = " {" + NL + "\t\t\t\tif (diagramFileURI.fragment() != null) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_148 = " possibleDiagram = diagramResource.getEObject(diagramFileURI.fragment());" + NL + "\t\t\t\t\tif (possibleDiagram instanceof ";
  protected final String TEXT_149 = ") {" + NL + "\t\t\t\t\t\tdiagram = (";
  protected final String TEXT_150 = ") possibleDiagram;" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_151 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\tdiagram = (";
  protected final String TEXT_152 = ") findInResource(diagramResource, ";
  protected final String TEXT_153 = ".class);" + NL + "\t\t\t\t\tif (diagram == null) {" + NL + "\t\t\t\t\t\tdiagram = ";
  protected final String TEXT_154 = ".eINSTANCE.createDiagram();" + NL + "\t\t\t\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_155 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_156 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tdiagramRoot = (";
  protected final String TEXT_157 = ") diagram.getElement();" + NL + "\t\t\t\tif (diagramRoot == null) {";
  protected final String TEXT_158 = NL + "\t\t\t\t\t";
  protected final String TEXT_159 = " modelFile = ";
  protected final String TEXT_160 = ".getModelFileURI(diagramFileURI);" + NL + "\t\t\t\t\t";
  protected final String TEXT_161 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\t\t\tif (modelResource == null) {" + NL + "\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t}";
  protected final String TEXT_162 = NL + "\t\t\t\t\tdiagramRoot = (";
  protected final String TEXT_163 = ") findInResource(";
  protected final String TEXT_164 = ", ";
  protected final String TEXT_165 = ".class);" + NL + "\t\t\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\t\t\tdiagramRoot = ";
  protected final String TEXT_166 = ".eINSTANCE.create";
  protected final String TEXT_167 = "();" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_168 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_169 = ".save(";
  protected final String TEXT_170 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_171 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\tif (!diagramRoot.equals(diagram.getElement())) {" + NL + "\t\t\t\t\t\tdiagram.setElement(";
  protected final String TEXT_172 = "(";
  protected final String TEXT_173 = ") ";
  protected final String TEXT_174 = "diagramRoot);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (!diagram.eIsSet(";
  protected final String TEXT_175 = ".eINSTANCE.getView_Type())) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_176 = ".INSTANCE.decorateView(diagram);" + NL + "\t\t\t\t\tdoSave(new NullProgressMonitor());" + NL + "\t\t\t\t}" + NL + "\t\t\t\treturn Status.OK_STATUS;" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\ttry {" + NL + "\t\t\toperation.execute(new ";
  protected final String TEXT_177 = "(), null);" + NL + "\t\t} catch (";
  protected final String TEXT_178 = " e) {" + NL + "\t\t\tdiagram = null;" + NL + "\t\t\tdiagramRoot = null;" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_179 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_180 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_181 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void initializeGraphicalViewer() {" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_182 = " root = new ";
  protected final String TEXT_183 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_184 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_185 = " printableLayers = (";
  protected final String TEXT_186 = ") root.getLayer(";
  protected final String TEXT_187 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_188 = " extLabelsLayer = new ";
  protected final String TEXT_189 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_190 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_191 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_192 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_193 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_194 = " provider = new ";
  protected final String TEXT_195 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_196 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_197 = " keyHandler = new ";
  protected final String TEXT_198 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_199 = ".KeyGenerator.getKey(";
  protected final String TEXT_200 = ".CTRL), ";
  protected final String TEXT_201 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isFlyoutPalette() {" + NL + "\t\treturn ";
  protected final String TEXT_202 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_203 = "ContextMenuProvider extends ";
  protected final String TEXT_204 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_205 = "ContextMenuProvider(";
  protected final String TEXT_206 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_207 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_208 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_209 = ".UNDO.getId(), ";
  protected final String TEXT_210 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_211 = ".REDO.getId(), ";
  protected final String TEXT_212 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_213 = ".COPY.getId(), ";
  protected final String TEXT_214 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_215 = ".PASTE.getId(), ";
  protected final String TEXT_216 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_217 = ".DELETE.getId(), ";
  protected final String TEXT_218 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_219 = ".DIRECT_EDIT, ";
  protected final String TEXT_220 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_221 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_222 = ".GROUP_REST);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_223 = ".SAVE.getId(), ";
  protected final String TEXT_224 = ".GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_225 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_226 = " submenu = new ";
  protected final String TEXT_227 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_228 = "(";
  protected final String TEXT_229 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_230 = ".ALIGN_LEFT, ";
  protected final String TEXT_231 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_232 = ".ALIGN_CENTER, ";
  protected final String TEXT_233 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_234 = ".ALIGN_RIGHT, ";
  protected final String TEXT_235 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_236 = ".ALIGN_TOP, ";
  protected final String TEXT_237 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_238 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_239 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_240 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_241 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_242 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_243 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_244 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_245 = NL;
d434 10
d445 1
a445 1
    stringBuffer.append(TEXT_72);
d447 1
a447 1
    stringBuffer.append(TEXT_73);
d449 1
a449 1
    stringBuffer.append(TEXT_74);
d451 1
a451 1
    stringBuffer.append(TEXT_75);
d453 1
a453 1
    stringBuffer.append(TEXT_76);
d459 1
a459 1
    stringBuffer.append(TEXT_77);
d461 1
a461 1
    stringBuffer.append(TEXT_78);
d466 1
a466 1
    stringBuffer.append(TEXT_79);
d468 1
a468 1
    stringBuffer.append(TEXT_80);
d470 1
a470 1
    stringBuffer.append(TEXT_81);
d472 1
a472 1
    stringBuffer.append(TEXT_82);
d474 1
a474 1
    stringBuffer.append(TEXT_83);
d476 1
a476 1
    stringBuffer.append(TEXT_84);
d478 1
a478 1
    stringBuffer.append(TEXT_85);
d480 1
a480 1
    stringBuffer.append(TEXT_86);
d482 1
a482 1
    stringBuffer.append(TEXT_87);
d484 1
a484 1
    stringBuffer.append(TEXT_88);
d486 1
a486 1
    stringBuffer.append(TEXT_89);
d488 1
a488 1
    stringBuffer.append(TEXT_90);
d490 1
a490 1
    stringBuffer.append(TEXT_91);
d492 1
a492 1
    stringBuffer.append(TEXT_92);
d494 1
a494 1
    stringBuffer.append(TEXT_93);
d498 1
a498 1
    stringBuffer.append(TEXT_94);
d500 1
a500 1
    stringBuffer.append(TEXT_95);
d504 1
a504 1
    stringBuffer.append(TEXT_96);
d506 1
a506 1
    stringBuffer.append(TEXT_97);
d510 1
a510 1
    stringBuffer.append(TEXT_98);
d512 1
a512 1
    stringBuffer.append(TEXT_99);
d516 1
a516 1
    stringBuffer.append(TEXT_100);
d518 1
a518 1
    stringBuffer.append(TEXT_101);
d520 1
a520 1
    stringBuffer.append(TEXT_102);
d522 1
a522 1
    stringBuffer.append(TEXT_103);
d524 1
a524 1
    stringBuffer.append(TEXT_104);
a525 6
    stringBuffer.append(TEXT_105);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_106);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.IPath"));
    stringBuffer.append(TEXT_107);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.runtime.Path"));
d529 1
a529 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.ResourcesPlugin"));
d531 1
a531 1
    }
d535 1
a535 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
d537 1
a537 1
    if (!isRichClientPlatform) {
d539 1
a539 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
d541 1
a541 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d543 2
a545 2
    stringBuffer.append(TEXT_117);
    }
d547 1
a547 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
d549 1
a549 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
d551 1
a551 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IPathEditorInput"));
d553 1
a553 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d555 2
a557 2
    stringBuffer.append(TEXT_123);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d561 2
d564 5
a568 1
    stringBuffer.append(TEXT_126);
d570 1
a570 1
    stringBuffer.append(TEXT_127);
d572 1
a572 1
    stringBuffer.append(TEXT_128);
d574 1
a574 1
    stringBuffer.append(TEXT_129);
d576 1
a576 1
    stringBuffer.append(TEXT_130);
d582 1
a582 1
    stringBuffer.append(TEXT_131);
d584 1
a584 1
    stringBuffer.append(TEXT_132);
d586 1
a586 1
    stringBuffer.append(TEXT_133);
d588 1
a588 1
    stringBuffer.append(TEXT_134);
d590 1
a590 1
    stringBuffer.append(TEXT_135);
d592 1
a592 1
    stringBuffer.append(TEXT_136);
d594 1
a594 1
    stringBuffer.append(TEXT_137);
d596 1
a596 1
    stringBuffer.append(TEXT_138);
d598 1
a598 1
    stringBuffer.append(TEXT_139);
d600 1
a600 1
    stringBuffer.append(TEXT_140);
d602 1
a602 1
    stringBuffer.append(TEXT_141);
d604 1
a604 1
    stringBuffer.append(TEXT_142);
d606 1
a606 1
    stringBuffer.append(TEXT_143);
d608 1
a608 1
    stringBuffer.append(TEXT_144);
d610 1
a610 1
    stringBuffer.append(TEXT_145);
d612 1
a612 1
    stringBuffer.append(TEXT_146);
d614 1
a614 1
    stringBuffer.append(TEXT_147);
d616 1
a616 1
    stringBuffer.append(TEXT_148);
d618 1
a618 1
    stringBuffer.append(TEXT_149);
d620 1
a620 1
    stringBuffer.append(TEXT_150);
d622 1
a622 1
    stringBuffer.append(TEXT_151);
d624 1
a624 1
    stringBuffer.append(TEXT_152);
d626 1
a626 1
    stringBuffer.append(TEXT_153);
d628 1
a628 1
    stringBuffer.append(TEXT_154);
d630 1
a630 1
    stringBuffer.append(TEXT_155);
d632 1
a632 1
    stringBuffer.append(TEXT_156);
d634 1
a634 1
    stringBuffer.append(TEXT_157);
d643 1
a643 1
    stringBuffer.append(TEXT_158);
d645 1
a645 1
    stringBuffer.append(TEXT_159);
d647 1
a647 1
    stringBuffer.append(TEXT_160);
d649 1
a649 1
    stringBuffer.append(TEXT_161);
d656 1
a656 1
    stringBuffer.append(TEXT_162);
d658 1
a658 1
    stringBuffer.append(TEXT_163);
d660 1
a660 1
    stringBuffer.append(TEXT_164);
d662 1
a662 1
    stringBuffer.append(TEXT_165);
d664 1
a664 1
    stringBuffer.append(TEXT_166);
d666 1
a666 1
    stringBuffer.append(TEXT_167);
d668 1
a668 1
    stringBuffer.append(TEXT_168);
d670 1
a670 1
    stringBuffer.append(TEXT_169);
d672 1
a672 1
    stringBuffer.append(TEXT_170);
d674 1
a674 1
    stringBuffer.append(TEXT_171);
d676 1
a676 1
    stringBuffer.append(TEXT_172);
d678 1
a678 1
    stringBuffer.append(TEXT_173);
d680 1
a680 1
    stringBuffer.append(TEXT_174);
d682 1
a682 1
    stringBuffer.append(TEXT_175);
d684 1
a684 1
    stringBuffer.append(TEXT_176);
d686 1
a686 1
    stringBuffer.append(TEXT_177);
d688 1
a688 1
    stringBuffer.append(TEXT_178);
d692 1
a692 1
    stringBuffer.append(TEXT_179);
d694 1
a694 1
    stringBuffer.append(TEXT_180);
d696 1
a696 1
    stringBuffer.append(TEXT_181);
d698 1
a698 1
    stringBuffer.append(TEXT_182);
d700 1
a700 1
    stringBuffer.append(TEXT_183);
d702 1
a702 1
    stringBuffer.append(TEXT_184);
d704 1
a704 1
    stringBuffer.append(TEXT_185);
d706 1
a706 1
    stringBuffer.append(TEXT_186);
d708 1
a708 1
    stringBuffer.append(TEXT_187);
d710 1
a710 1
    stringBuffer.append(TEXT_188);
d712 1
a712 1
    stringBuffer.append(TEXT_189);
d714 1
a714 1
    stringBuffer.append(TEXT_190);
d716 1
a716 1
    stringBuffer.append(TEXT_191);
d718 1
a718 1
    stringBuffer.append(TEXT_192);
d720 1
a720 1
    stringBuffer.append(TEXT_193);
d722 1
a722 1
    stringBuffer.append(TEXT_194);
d724 1
a724 1
    stringBuffer.append(TEXT_195);
d726 1
a726 1
    stringBuffer.append(TEXT_196);
d728 1
a728 1
    stringBuffer.append(TEXT_197);
d730 1
a730 1
    stringBuffer.append(TEXT_198);
d732 1
a732 1
    stringBuffer.append(TEXT_199);
d734 1
a734 1
    stringBuffer.append(TEXT_200);
d736 1
a736 1
    stringBuffer.append(TEXT_201);
d738 1
a738 1
    stringBuffer.append(TEXT_202);
d740 1
a740 1
    stringBuffer.append(TEXT_203);
d742 1
a742 1
    stringBuffer.append(TEXT_204);
d744 1
a744 1
    stringBuffer.append(TEXT_205);
d746 1
a746 1
    stringBuffer.append(TEXT_206);
d748 1
a748 1
    stringBuffer.append(TEXT_207);
d750 1
a750 1
    stringBuffer.append(TEXT_208);
d752 1
a752 1
    stringBuffer.append(TEXT_209);
d754 1
a754 1
    stringBuffer.append(TEXT_210);
d756 1
a756 1
    stringBuffer.append(TEXT_211);
d758 1
a758 1
    stringBuffer.append(TEXT_212);
d760 1
a760 1
    stringBuffer.append(TEXT_213);
d762 1
a762 1
    stringBuffer.append(TEXT_214);
a763 6
    stringBuffer.append(TEXT_215);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
    stringBuffer.append(TEXT_216);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
    stringBuffer.append(TEXT_217);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d767 2
a769 2
    stringBuffer.append(TEXT_220);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.ui.actions.ActionIds"));
d773 1
a773 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d775 2
a777 2
    stringBuffer.append(TEXT_224);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
d779 1
a779 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d781 1
a781 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d783 1
a783 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Separator"));
d785 1
a785 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d787 1
a787 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d789 1
a789 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d813 6
d820 1
a820 1
    stringBuffer.append(TEXT_243);
d822 1
a822 1
    stringBuffer.append(TEXT_244);
d824 1
a824 1
    stringBuffer.append(TEXT_245);
@


1.13
log
@[164843]: Make it possible to specify the editing domain with which the editor/viewer should operate;
Refactoring to use as much common code as possible for diagram editors and viewers (for #163214);
Manifest.mf specifies J2SE1.5 as required execution environment.
@
text
@d132 1
a132 1
  protected final String TEXT_113 = " input) {";
@


1.12
log
@[162579] Support diagram partitioning
+
1. CustomBehaviours;
2. LayoutDiagramAction: execute the command through the command stack;
3. WrappingCommand: Workaround for a problem with StrictCompoundCommand.canExecute() in transactional editing domains
@
text
@d94 1
a94 1
  protected final String TEXT_75 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configurePalette(";
d100 33
a132 33
  protected final String TEXT_81 = " getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_82 = " site, ";
  protected final String TEXT_83 = " input) throws ";
  protected final String TEXT_84 = " {" + NL + "\t\t";
  protected final String TEXT_85 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_86 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_87 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_88 = " input) {";
  protected final String TEXT_89 = NL + "\t\t";
  protected final String TEXT_90 = " oldResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (oldResource != null) {" + NL + "\t\t\toldResource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_91 = NL + "\t\t";
  protected final String TEXT_92 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_93 = NL + "\t\t";
  protected final String TEXT_94 = " newResource = getFileFromInput(getEditorInput());" + NL + "\t\tif (newResource != null) {" + NL + "\t\t\tnewResource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_95 = NL + "\t}" + NL;
  protected final String TEXT_96 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_97 = " getFileFromInput(";
  protected final String TEXT_98 = " input) {" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_99 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_100 = ") input).getFile();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_101 = ") {" + NL + "\t\t\t";
  protected final String TEXT_102 = " uri = ((";
  protected final String TEXT_103 = ") input).getURI();" + NL + "\t\t\tif (uri != null) {" + NL + "\t\t\t\tif (\"platform\".equals(uri.scheme()) && (uri.segmentCount() > 2)) { //$NON-NLS-1$" + NL + "\t\t\t\t\tif (\"resource\".equals(uri.segment(0))) { //$NON-NLS-1$" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_104 = " path = new ";
  protected final String TEXT_105 = "(";
  protected final String TEXT_106 = ".decode(uri.path())).removeFirstSegments(1);" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_107 = ".getWorkspace().getRoot().getFile(path);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL;
  protected final String TEXT_108 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_109 = " getURIFromInput(";
  protected final String TEXT_110 = " input) {";
  protected final String TEXT_111 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_112 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_113 = ".createPlatformResourceURI(((IFileEditorInput)input).getFile().getFullPath().toString());" + NL + "\t\t}";
d134 116
a249 116
  protected final String TEXT_115 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_116 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_117 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_118 = ".createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_119 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_120 = " factories = new ";
  protected final String TEXT_121 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_122 = "());";
  protected final String TEXT_123 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_124 = "());";
  protected final String TEXT_125 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_126 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_127 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_128 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_129 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tfinal ";
  protected final String TEXT_130 = " diagramFileURI = diagramFile;" + NL + "\t\t";
  protected final String TEXT_131 = " editingDomain = getEditingDomain();" + NL + "\t\tfinal ";
  protected final String TEXT_132 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\tfinal ";
  protected final String TEXT_133 = " diagramResource = resourceSet.getResource(diagramFile.trimFragment(), true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_134 = " operation = new ";
  protected final String TEXT_135 = "(editingDomain, \"Load diagram\", null) {" + NL + "\t\t\tprotected ";
  protected final String TEXT_136 = " doExecute(";
  protected final String TEXT_137 = " monitor, ";
  protected final String TEXT_138 = " info) throws ";
  protected final String TEXT_139 = " {" + NL + "\t\t\t\tif (diagramFileURI.fragment() != null) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_140 = " possibleDiagram = diagramResource.getEObject(diagramFileURI.fragment());" + NL + "\t\t\t\t\tif (possibleDiagram instanceof ";
  protected final String TEXT_141 = ") {" + NL + "\t\t\t\t\t\tdiagram = (";
  protected final String TEXT_142 = ") possibleDiagram;" + NL + "\t\t\t\t\t} else {" + NL + "\t\t\t\t\t\treturn ";
  protected final String TEXT_143 = ".CANCEL_STATUS;" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\tdiagram = (";
  protected final String TEXT_144 = ") findInResource(diagramResource, ";
  protected final String TEXT_145 = ".class);" + NL + "\t\t\t\t\tif (diagram == null) {" + NL + "\t\t\t\t\t\tdiagram = ";
  protected final String TEXT_146 = ".eINSTANCE.createDiagram();" + NL + "\t\t\t\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\tdiagramResource.save(";
  protected final String TEXT_147 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_148 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tdiagramRoot = (";
  protected final String TEXT_149 = ") diagram.getElement();" + NL + "\t\t\t\tif (diagramRoot == null) {";
  protected final String TEXT_150 = NL + "\t\t\t\t\t";
  protected final String TEXT_151 = " modelFile = ";
  protected final String TEXT_152 = ".getModelFileURI(diagramFileURI);" + NL + "\t\t\t\t\t";
  protected final String TEXT_153 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\t\t\tif (modelResource == null) {" + NL + "\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t}";
  protected final String TEXT_154 = NL + "\t\t\t\t\tdiagramRoot = (";
  protected final String TEXT_155 = ") findInResource(";
  protected final String TEXT_156 = ", ";
  protected final String TEXT_157 = ".class);" + NL + "\t\t\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\t\t\tdiagramRoot = ";
  protected final String TEXT_158 = ".eINSTANCE.create";
  protected final String TEXT_159 = "();" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_160 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\t\t\ttry {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_161 = ".save(";
  protected final String TEXT_162 = ".EMPTY_MAP);" + NL + "\t\t\t\t\t\t} catch (";
  protected final String TEXT_163 = " e) {" + NL + "\t\t\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\t\t\treturn Status.CANCEL_STATUS;" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t\tif (!diagramRoot.equals(diagram.getElement())) {" + NL + "\t\t\t\t\t\tdiagram.setElement(";
  protected final String TEXT_164 = "(";
  protected final String TEXT_165 = ") ";
  protected final String TEXT_166 = "diagramRoot);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (!diagram.eIsSet(";
  protected final String TEXT_167 = ".eINSTANCE.getView_Type())) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_168 = ".INSTANCE.decorateView(diagram);" + NL + "\t\t\t\t\tdoSave(new NullProgressMonitor());" + NL + "\t\t\t\t}" + NL + "\t\t\t\treturn Status.OK_STATUS;" + NL + "\t\t\t}" + NL + "\t\t};" + NL + "\t\ttry {" + NL + "\t\t\toperation.execute(new ";
  protected final String TEXT_169 = "(), null);" + NL + "\t\t} catch (";
  protected final String TEXT_170 = " e) {" + NL + "\t\t\tdiagram = null;" + NL + "\t\t\tdiagramRoot = null;" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_171 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_172 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_173 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(";
  protected final String TEXT_174 = " parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_175 = " root = new ";
  protected final String TEXT_176 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_177 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_178 = " printableLayers = (";
  protected final String TEXT_179 = ") root.getLayer(";
  protected final String TEXT_180 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_181 = " extLabelsLayer = new ";
  protected final String TEXT_182 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_183 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_184 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_185 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_186 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_187 = " provider = new ";
  protected final String TEXT_188 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_189 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_190 = " keyHandler = new ";
  protected final String TEXT_191 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_192 = ".KeyGenerator.getKey(";
  protected final String TEXT_193 = ".CTRL), ";
  protected final String TEXT_194 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_195 = "ContextMenuProvider extends ";
  protected final String TEXT_196 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_197 = "ContextMenuProvider(";
  protected final String TEXT_198 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_199 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_200 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_201 = ".UNDO.getId(), ";
  protected final String TEXT_202 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_203 = ".REDO.getId(), ";
  protected final String TEXT_204 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_205 = ".COPY.getId(), ";
  protected final String TEXT_206 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_207 = ".PASTE.getId(), ";
  protected final String TEXT_208 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_209 = ".DELETE.getId(), ";
  protected final String TEXT_210 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_211 = ".DIRECT_EDIT, ";
  protected final String TEXT_212 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_213 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_214 = ".GROUP_REST);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_215 = ".SAVE.getId(), ";
  protected final String TEXT_216 = ".GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_217 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_218 = " submenu = new ";
  protected final String TEXT_219 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_220 = "(";
  protected final String TEXT_221 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_222 = ".ALIGN_LEFT, ";
  protected final String TEXT_223 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_224 = ".ALIGN_CENTER, ";
  protected final String TEXT_225 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_226 = ".ALIGN_RIGHT, ";
  protected final String TEXT_227 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_228 = ".ALIGN_TOP, ";
  protected final String TEXT_229 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_230 = ".ALIGN_MIDDLE, ";
d251 14
a264 6
  protected final String TEXT_232 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_233 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_234 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_235 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_236 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_237 = NL;
d458 1
a458 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorSite"));
d462 1
a462 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d464 1
a464 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d466 1
a466 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d468 1
a468 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d472 10
d485 1
a485 1
    stringBuffer.append(TEXT_89);
d487 1
a487 1
    stringBuffer.append(TEXT_90);
d491 1
a491 1
    stringBuffer.append(TEXT_91);
d493 1
a493 1
    stringBuffer.append(TEXT_92);
d497 1
a497 1
    stringBuffer.append(TEXT_93);
d499 1
a499 1
    stringBuffer.append(TEXT_94);
d503 1
a503 1
    stringBuffer.append(TEXT_95);
d505 1
a505 1
    stringBuffer.append(TEXT_96);
d507 1
a507 1
    stringBuffer.append(TEXT_97);
d509 1
a509 1
    stringBuffer.append(TEXT_98);
d511 1
a511 1
    stringBuffer.append(TEXT_99);
d513 1
a513 3
    stringBuffer.append(TEXT_100);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_101);
d515 1
a515 3
    stringBuffer.append(TEXT_102);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
    stringBuffer.append(TEXT_103);
d517 1
a517 1
    stringBuffer.append(TEXT_104);
d519 1
a519 1
    stringBuffer.append(TEXT_105);
d521 1
a521 1
    stringBuffer.append(TEXT_106);
d523 1
a523 1
    stringBuffer.append(TEXT_107);
d525 1
a525 1
    stringBuffer.append(TEXT_108);
d527 1
a527 1
    stringBuffer.append(TEXT_109);
d529 1
a529 1
    stringBuffer.append(TEXT_110);
d531 1
a531 1
    stringBuffer.append(TEXT_111);
d533 1
a533 1
    stringBuffer.append(TEXT_112);
d535 3
a537 1
    stringBuffer.append(TEXT_113);
d539 1
a539 1
    stringBuffer.append(TEXT_114);
d541 1
a541 1
    stringBuffer.append(TEXT_115);
d543 5
a547 1
    stringBuffer.append(TEXT_116);
d549 5
a553 1
    stringBuffer.append(TEXT_117);
d555 1
a555 1
    stringBuffer.append(TEXT_118);
d557 1
a557 1
    stringBuffer.append(TEXT_119);
d559 1
a559 1
    stringBuffer.append(TEXT_120);
d561 1
a561 1
    stringBuffer.append(TEXT_121);
d563 1
a563 1
    stringBuffer.append(TEXT_122);
d569 1
a569 1
    stringBuffer.append(TEXT_123);
d571 1
a571 1
    stringBuffer.append(TEXT_124);
d573 1
a573 1
    stringBuffer.append(TEXT_125);
d575 1
a575 1
    stringBuffer.append(TEXT_126);
d577 1
a577 1
    stringBuffer.append(TEXT_127);
d579 1
a579 1
    stringBuffer.append(TEXT_128);
d581 1
a581 1
    stringBuffer.append(TEXT_129);
d583 1
a583 1
    stringBuffer.append(TEXT_130);
d585 1
a585 1
    stringBuffer.append(TEXT_131);
d587 1
a587 1
    stringBuffer.append(TEXT_132);
d589 1
a589 1
    stringBuffer.append(TEXT_133);
d591 1
a591 1
    stringBuffer.append(TEXT_134);
d593 1
a593 1
    stringBuffer.append(TEXT_135);
d595 1
a595 1
    stringBuffer.append(TEXT_136);
d597 1
a597 1
    stringBuffer.append(TEXT_137);
d599 1
a599 1
    stringBuffer.append(TEXT_138);
d601 1
a601 1
    stringBuffer.append(TEXT_139);
d603 1
a603 1
    stringBuffer.append(TEXT_140);
d605 1
a605 1
    stringBuffer.append(TEXT_141);
d607 1
a607 1
    stringBuffer.append(TEXT_142);
d609 1
a609 1
    stringBuffer.append(TEXT_143);
d611 1
a611 1
    stringBuffer.append(TEXT_144);
d613 1
a613 1
    stringBuffer.append(TEXT_145);
d615 1
a615 1
    stringBuffer.append(TEXT_146);
d617 1
a617 1
    stringBuffer.append(TEXT_147);
d619 1
a619 1
    stringBuffer.append(TEXT_148);
d621 1
a621 1
    stringBuffer.append(TEXT_149);
d630 1
a630 1
    stringBuffer.append(TEXT_150);
d632 1
a632 1
    stringBuffer.append(TEXT_151);
d634 1
a634 1
    stringBuffer.append(TEXT_152);
d636 1
a636 1
    stringBuffer.append(TEXT_153);
d643 1
a643 1
    stringBuffer.append(TEXT_154);
d645 1
a645 1
    stringBuffer.append(TEXT_155);
d647 1
a647 1
    stringBuffer.append(TEXT_156);
d649 1
a649 1
    stringBuffer.append(TEXT_157);
d651 1
a651 1
    stringBuffer.append(TEXT_158);
d653 1
a653 1
    stringBuffer.append(TEXT_159);
d655 1
a655 1
    stringBuffer.append(TEXT_160);
d657 1
a657 1
    stringBuffer.append(TEXT_161);
d659 1
a659 1
    stringBuffer.append(TEXT_162);
d661 1
a661 1
    stringBuffer.append(TEXT_163);
d663 1
a663 1
    stringBuffer.append(TEXT_164);
d665 1
a665 1
    stringBuffer.append(TEXT_165);
d667 1
a667 1
    stringBuffer.append(TEXT_166);
d669 1
a669 1
    stringBuffer.append(TEXT_167);
d671 1
a671 1
    stringBuffer.append(TEXT_168);
d673 1
a673 1
    stringBuffer.append(TEXT_169);
d675 1
a675 1
    stringBuffer.append(TEXT_170);
d679 1
a679 1
    stringBuffer.append(TEXT_171);
d681 1
a681 1
    stringBuffer.append(TEXT_172);
d683 1
a683 3
    stringBuffer.append(TEXT_173);
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.widgets.Composite"));
    stringBuffer.append(TEXT_174);
d685 1
a685 1
    stringBuffer.append(TEXT_175);
a686 14
    stringBuffer.append(TEXT_176);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartFactoryQualifiedClassName()));
    stringBuffer.append(TEXT_177);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
    stringBuffer.append(TEXT_178);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
    stringBuffer.append(TEXT_179);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.LayerConstants"));
    stringBuffer.append(TEXT_180);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
    stringBuffer.append(TEXT_181);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
    stringBuffer.append(TEXT_182);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.DelegatingLayout"));
d690 1
a690 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.LayerConstants"));
d692 1
a692 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.GraphicalViewer"));
d694 1
a694 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ContextMenuProvider"));
d696 1
a696 1
    stringBuffer.append(genEditor.getClassName());
d698 1
a698 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
d700 1
a700 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyHandler"));
d702 1
a702 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.parts.GraphicalViewerKeyHandler"));
d704 1
a704 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.MouseWheelHandler"));
d706 1
a706 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.SWT"));
d708 1
a708 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.MouseWheelZoomHandler"));
d712 1
a712 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ContextMenuProvider"));
d714 1
a714 1
    stringBuffer.append(genEditor.getClassName());
d716 1
a716 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.EditPartViewer"));
d718 1
a718 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
d720 1
a720 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d722 1
a722 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d724 1
a724 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d726 1
a726 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d728 1
a728 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d730 1
a730 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d732 1
a732 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d734 1
a734 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d742 1
a742 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d746 1
a746 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.lite.ui.actions.ActionIds"));
d754 1
a754 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
d756 1
a756 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d758 1
a758 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d760 1
a760 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Separator"));
d762 1
a762 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d766 1
a766 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d770 1
a770 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d772 1
a772 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d774 1
a774 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d776 1
a776 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d790 16
d807 1
a807 1
    stringBuffer.append(TEXT_235);
d809 1
a809 1
    stringBuffer.append(TEXT_236);
d811 1
a811 1
    stringBuffer.append(TEXT_237);
@


1.11
log
@[160205] bblajer - move and clone elements on diagram
@
text
@d23 9
a31 9
  protected final String TEXT_4 = " {";
  protected final String TEXT_5 = NL + "\t/**" + NL + "\t * This class listens to changes to the file system in the workspace, and" + NL + "\t * makes the following changes: " + NL + "\t * <ul><li>If an open, saved file gets deleted, the editor is closed.</li>" + NL + "\t * <li>If an open file gets renamed or moved, the editor's" + NL + "\t * input is changed accordingly.</li></ul>" + NL + "\t *" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ResourceTracker implements ";
  protected final String TEXT_6 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void resourceChanged(";
  protected final String TEXT_7 = " event) {" + NL + "\t\t\t";
  protected final String TEXT_8 = " delta = event.getDelta();" + NL + "\t\t\tif (delta != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_9 = " fileDelta = delta.findMember(((";
  protected final String TEXT_10 = ") getEditorInput()).getFile().getFullPath());" + NL + "\t\t\t\tif (fileDelta != null) {" + NL + "\t\t\t\t\tprocessFileDelta(fileDelta);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void processFileDelta(";
  protected final String TEXT_11 = " delta) {" + NL + "\t\t\tassert (delta != null && delta.getResource().equals(((";
  protected final String TEXT_12 = ") getEditorInput()).getFile()));" + NL + "\t\t\tif (delta.getKind() == ";
d36 16
a51 16
  protected final String TEXT_17 = ".getWorkspace().getRoot().getFile(delta.getMovedToPath());" + NL + "\t\t\t\t\t";
  protected final String TEXT_18 = " display = getSite().getShell().getDisplay();" + NL + "\t\t\t\t\tdisplay.asyncExec(new Runnable() {" + NL + "\t\t\t\t\t\tpublic void run() {" + NL + "\t\t\t\t\t\t\tsetInput(new ";
  protected final String TEXT_19 = "(newFile));" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t});" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ResourceTracker resourceTracker;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ResourceTracker getResourceTracker() {" + NL + "\t\tif (resourceTracker == null) {" + NL + "\t\t\tresourceTracker = new ResourceTracker();" + NL + "\t\t}" + NL + "\t\treturn resourceTracker;" + NL + "\t}" + NL;
  protected final String TEXT_20 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_21 = " diagramRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_22 = " diagram;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_23 = " domainAdapterFactory;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createActions() {" + NL + "\t\taddStackAction(new ";
  protected final String TEXT_24 = "(this));" + NL + "\t\taddStackAction(new ";
  protected final String TEXT_25 = "(this));" + NL + "" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_26 = "((";
  protected final String TEXT_27 = ") this));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_28 = "((";
  protected final String TEXT_29 = ") this));" + NL + "" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_30 = "((";
  protected final String TEXT_31 = ") this, ";
  protected final String TEXT_32 = ".LEFT));" + NL + "\t\taddEditPartAction(new ";
d53 204
a256 174
  protected final String TEXT_34 = ") this, ";
  protected final String TEXT_35 = ".RIGHT));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_36 = "((";
  protected final String TEXT_37 = ") this, ";
  protected final String TEXT_38 = ".TOP));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_39 = "((";
  protected final String TEXT_40 = ") this, ";
  protected final String TEXT_41 = ".BOTTOM));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_42 = "((";
  protected final String TEXT_43 = ") this, ";
  protected final String TEXT_44 = ".CENTER));" + NL + "\t\taddEditPartAction(new ";
  protected final String TEXT_45 = "((";
  protected final String TEXT_46 = ") this, ";
  protected final String TEXT_47 = ".MIDDLE));" + NL + "" + NL + "\t\taddEditorAction(new ";
  protected final String TEXT_48 = "(this));" + NL + "\t\taddEditorAction(new ";
  protected final String TEXT_49 = "(this));" + NL + "\t\taddEditorAction(new ";
  protected final String TEXT_50 = "(this));" + NL + "" + NL + "\t\t";
  protected final String TEXT_51 = " zoomIn = new ";
  protected final String TEXT_52 = "(getZoomManager());" + NL + "\t\t";
  protected final String TEXT_53 = " zoomOut = new ";
  protected final String TEXT_54 = "(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t\t";
  protected final String TEXT_55 = " keyHandler = getGraphicalViewer().getKeyHandler();" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_56 = ".getPressed(";
  protected final String TEXT_57 = ".DEL, 127, 0), getActionRegistry().getAction(";
  protected final String TEXT_58 = ".DELETE.getId()));" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_59 = ".getPressed(";
  protected final String TEXT_60 = ".F2, 0), getActionRegistry().getAction(";
  protected final String TEXT_61 = ".DIRECT_EDIT));" + NL + "\t}" + NL;
  protected final String TEXT_62 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_63 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_64 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(";
  protected final String TEXT_65 = " monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (";
  protected final String TEXT_66 = " e) {" + NL + "\t\t\t";
  protected final String TEXT_67 = ".openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_68 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configurePalette(";
  protected final String TEXT_69 = " paletteRoot) {";
  protected final String TEXT_70 = NL + "\t\tnew ";
  protected final String TEXT_71 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_72 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_73 = " getDiagramRoot() {" + NL + "\t\treturn diagramRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_74 = " getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_75 = " site, ";
  protected final String TEXT_76 = " input) throws ";
  protected final String TEXT_77 = " {" + NL + "\t\t";
  protected final String TEXT_78 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_79 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_80 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_81 = " input)  {";
  protected final String TEXT_82 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_83 = ") {" + NL + "\t\t\t";
  protected final String TEXT_84 = " resource = ((";
  protected final String TEXT_85 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_86 = NL + "\t\t";
  protected final String TEXT_87 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_88 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_89 = ") {" + NL + "\t\t\t";
  protected final String TEXT_90 = " resource = ((";
  protected final String TEXT_91 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_92 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_93 = " getURIFromInput(";
  protected final String TEXT_94 = " input) {";
  protected final String TEXT_95 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_96 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_97 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_98 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_99 = ".createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}";
  protected final String TEXT_100 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_101 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_102 = ".createPlatformResourceURI(((IFileEditorInput)input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_103 = NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_104 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_105 = " factories = new ";
  protected final String TEXT_106 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_107 = "());";
  protected final String TEXT_108 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_109 = "());";
  protected final String TEXT_110 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_111 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_112 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_113 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_114 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_115 = " editingDomain = getEditingDomain();" + NL + "\t\t";
  protected final String TEXT_116 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\t";
  protected final String TEXT_117 = " diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (";
  protected final String TEXT_118 = ") findInResource(diagramResource, ";
  protected final String TEXT_119 = ".class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = ";
  protected final String TEXT_120 = ".eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(";
  protected final String TEXT_121 = ".EMPTY_MAP);" + NL + "\t\t\t} catch (";
  protected final String TEXT_122 = " e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\tdiagramRoot = (";
  protected final String TEXT_123 = ") diagram.getElement();" + NL + "\t\tif (diagramRoot == null) {";
  protected final String TEXT_124 = NL + "\t\t\t";
  protected final String TEXT_125 = " modelFile = ";
  protected final String TEXT_126 = ".getModelFileURI(diagramFile);" + NL + "\t\t\t";
  protected final String TEXT_127 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\tif (modelResource == null) {" + NL + "\t\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t\t}";
  protected final String TEXT_128 = NL + "\t\t\tdiagramRoot = (";
  protected final String TEXT_129 = ") findInResource(";
  protected final String TEXT_130 = ", ";
  protected final String TEXT_131 = ".class);" + NL + "\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\tdiagramRoot = ";
  protected final String TEXT_132 = ".eINSTANCE.create";
  protected final String TEXT_133 = "();" + NL + "\t\t\t\t";
  protected final String TEXT_134 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\t";
  protected final String TEXT_135 = ".save(";
  protected final String TEXT_136 = ".EMPTY_MAP);" + NL + "\t\t\t\t} catch (";
  protected final String TEXT_137 = " e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(";
  protected final String TEXT_138 = "(";
  protected final String TEXT_139 = ") ";
  protected final String TEXT_140 = "diagramRoot);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_141 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_142 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_143 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(";
  protected final String TEXT_144 = " parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_145 = " root = new ";
  protected final String TEXT_146 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_147 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_148 = " printableLayers = (";
  protected final String TEXT_149 = ") root.getLayer(";
  protected final String TEXT_150 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_151 = " extLabelsLayer = new ";
  protected final String TEXT_152 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_153 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_154 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_155 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_156 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_157 = " provider = new ";
  protected final String TEXT_158 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_159 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_160 = " keyHandler = new ";
  protected final String TEXT_161 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_162 = ".KeyGenerator.getKey(";
  protected final String TEXT_163 = ".CTRL), ";
  protected final String TEXT_164 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_165 = "ContextMenuProvider extends ";
  protected final String TEXT_166 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_167 = "ContextMenuProvider(";
  protected final String TEXT_168 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_169 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_170 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_171 = ".UNDO.getId(), ";
  protected final String TEXT_172 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_173 = ".REDO.getId(), ";
  protected final String TEXT_174 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_175 = ".COPY.getId(), ";
  protected final String TEXT_176 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_177 = ".PASTE.getId(), ";
  protected final String TEXT_178 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_179 = ".DELETE.getId(), ";
  protected final String TEXT_180 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_181 = ".DIRECT_EDIT, ";
  protected final String TEXT_182 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_183 = ".LAYOUT_ALL_ACTION, ";
  protected final String TEXT_184 = ".GROUP_REST);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_185 = ".SAVE.getId(), ";
  protected final String TEXT_186 = ".GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_187 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_188 = " submenu = new ";
  protected final String TEXT_189 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_190 = "(";
  protected final String TEXT_191 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_192 = ".ALIGN_LEFT, ";
  protected final String TEXT_193 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_194 = ".ALIGN_CENTER, ";
  protected final String TEXT_195 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_196 = ".ALIGN_RIGHT, ";
  protected final String TEXT_197 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_198 = ".ALIGN_TOP, ";
  protected final String TEXT_199 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_200 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_201 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_202 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_203 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_204 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_205 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_206 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_207 = NL;
d281 2
d286 1
a286 1
    stringBuffer.append(TEXT_5);
d288 1
a288 1
    stringBuffer.append(TEXT_6);
a289 2
    stringBuffer.append(TEXT_7);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
d293 1
a293 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
d297 1
a297 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
d309 1
a309 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.widgets.Display"));
d311 12
d324 3
a326 1
    stringBuffer.append(TEXT_19);
d330 1
a330 1
    stringBuffer.append(TEXT_20);
d332 1
a332 1
    stringBuffer.append(TEXT_21);
d334 1
a334 1
    stringBuffer.append(TEXT_22);
d336 1
a336 1
    stringBuffer.append(TEXT_23);
d338 1
a338 1
    stringBuffer.append(TEXT_24);
d340 1
a340 1
    stringBuffer.append(TEXT_25);
d342 1
a342 1
    stringBuffer.append(TEXT_26);
d344 1
a344 1
    stringBuffer.append(TEXT_27);
d346 1
a346 1
    stringBuffer.append(TEXT_28);
d348 1
a348 1
    stringBuffer.append(TEXT_29);
d350 1
a350 1
    stringBuffer.append(TEXT_30);
d352 1
a352 1
    stringBuffer.append(TEXT_31);
d354 1
a354 1
    stringBuffer.append(TEXT_32);
d356 1
a356 1
    stringBuffer.append(TEXT_33);
d358 1
a358 1
    stringBuffer.append(TEXT_34);
d360 1
a360 1
    stringBuffer.append(TEXT_35);
d362 1
a362 1
    stringBuffer.append(TEXT_36);
d364 1
a364 1
    stringBuffer.append(TEXT_37);
d366 1
a366 1
    stringBuffer.append(TEXT_38);
d368 1
a368 1
    stringBuffer.append(TEXT_39);
d370 1
a370 1
    stringBuffer.append(TEXT_40);
d372 1
a372 1
    stringBuffer.append(TEXT_41);
d374 1
a374 1
    stringBuffer.append(TEXT_42);
d376 1
a376 1
    stringBuffer.append(TEXT_43);
d378 1
a378 1
    stringBuffer.append(TEXT_44);
d380 1
a380 1
    stringBuffer.append(TEXT_45);
d382 1
a382 1
    stringBuffer.append(TEXT_46);
d384 1
a384 1
    stringBuffer.append(TEXT_47);
d386 1
a386 1
    stringBuffer.append(TEXT_48);
d388 1
a388 1
    stringBuffer.append(TEXT_49);
d390 1
a390 1
    stringBuffer.append(TEXT_50);
d392 1
a392 1
    stringBuffer.append(TEXT_51);
d394 1
a394 1
    stringBuffer.append(TEXT_52);
d396 1
a396 1
    stringBuffer.append(TEXT_53);
d398 1
a398 1
    stringBuffer.append(TEXT_54);
d400 1
a400 1
    stringBuffer.append(TEXT_55);
d402 1
a402 1
    stringBuffer.append(TEXT_56);
d404 1
a404 1
    stringBuffer.append(TEXT_57);
d406 1
a406 1
    stringBuffer.append(TEXT_58);
d408 1
a408 1
    stringBuffer.append(TEXT_59);
d410 1
a410 1
    stringBuffer.append(TEXT_60);
d412 1
a412 1
    stringBuffer.append(TEXT_61);
d416 1
a416 1
    stringBuffer.append(TEXT_62);
d418 1
a418 1
    stringBuffer.append(TEXT_63);
d422 1
a422 1
    stringBuffer.append(TEXT_64);
d424 1
a424 1
    stringBuffer.append(TEXT_65);
d426 1
a426 1
    stringBuffer.append(TEXT_66);
d428 1
a428 1
    stringBuffer.append(TEXT_67);
d430 1
a430 1
    stringBuffer.append(TEXT_68);
d432 1
a432 1
    stringBuffer.append(TEXT_69);
d438 1
a438 1
    stringBuffer.append(TEXT_70);
d440 1
a440 1
    stringBuffer.append(TEXT_71);
d445 1
a445 1
    stringBuffer.append(TEXT_72);
d447 1
a447 1
    stringBuffer.append(TEXT_73);
d449 1
a449 1
    stringBuffer.append(TEXT_74);
d451 1
a451 1
    stringBuffer.append(TEXT_75);
d453 1
a453 1
    stringBuffer.append(TEXT_76);
d455 1
a455 1
    stringBuffer.append(TEXT_77);
d457 1
a457 1
    stringBuffer.append(TEXT_78);
d459 1
a459 1
    stringBuffer.append(TEXT_79);
d461 1
a461 1
    stringBuffer.append(TEXT_80);
d463 1
a463 1
    stringBuffer.append(TEXT_81);
d467 1
a467 3
    stringBuffer.append(TEXT_82);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_83);
d469 1
a469 3
    stringBuffer.append(TEXT_84);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_85);
d473 1
a473 1
    stringBuffer.append(TEXT_86);
d475 1
a475 1
    stringBuffer.append(TEXT_87);
d479 1
a479 3
    stringBuffer.append(TEXT_88);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_89);
d481 1
a481 3
    stringBuffer.append(TEXT_90);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
    stringBuffer.append(TEXT_91);
a484 6
    stringBuffer.append(TEXT_92);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
    stringBuffer.append(TEXT_93);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IEditorInput"));
    stringBuffer.append(TEXT_94);
    if (isRichClientPlatform) {
d486 1
a486 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
d488 1
a488 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
d490 1
a490 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IPathEditorInput"));
d492 1
a492 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.util.URI"));
d494 1
a494 1
    } else {
d496 1
a496 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.IFileEditorInput"));
d500 10
d511 21
a531 1
    stringBuffer.append(TEXT_103);
d533 1
a533 1
    stringBuffer.append(TEXT_104);
d535 1
a535 1
    stringBuffer.append(TEXT_105);
d537 1
a537 1
    stringBuffer.append(TEXT_106);
d539 1
a539 1
    stringBuffer.append(TEXT_107);
d545 1
a545 1
    stringBuffer.append(TEXT_108);
d547 1
a547 1
    stringBuffer.append(TEXT_109);
d549 1
a549 1
    stringBuffer.append(TEXT_110);
d551 1
a551 1
    stringBuffer.append(TEXT_111);
d553 1
a553 1
    stringBuffer.append(TEXT_112);
d555 3
a557 1
    stringBuffer.append(TEXT_113);
d559 1
a559 1
    stringBuffer.append(TEXT_114);
d561 1
a561 1
    stringBuffer.append(TEXT_115);
d563 1
a563 1
    stringBuffer.append(TEXT_116);
d565 21
a585 1
    stringBuffer.append(TEXT_117);
d587 1
a587 1
    stringBuffer.append(TEXT_118);
d589 1
a589 1
    stringBuffer.append(TEXT_119);
d591 1
a591 1
    stringBuffer.append(TEXT_120);
d593 1
a593 1
    stringBuffer.append(TEXT_121);
d595 1
a595 1
    stringBuffer.append(TEXT_122);
d597 1
a597 1
    stringBuffer.append(TEXT_123);
d606 1
a606 1
    stringBuffer.append(TEXT_124);
d608 1
a608 1
    stringBuffer.append(TEXT_125);
d610 1
a610 1
    stringBuffer.append(TEXT_126);
d612 1
a612 1
    stringBuffer.append(TEXT_127);
d619 1
a619 1
    stringBuffer.append(TEXT_128);
d621 1
a621 1
    stringBuffer.append(TEXT_129);
d623 1
a623 1
    stringBuffer.append(TEXT_130);
d625 1
a625 1
    stringBuffer.append(TEXT_131);
d627 1
a627 1
    stringBuffer.append(TEXT_132);
d629 1
a629 1
    stringBuffer.append(TEXT_133);
d631 1
a631 1
    stringBuffer.append(TEXT_134);
d633 1
a633 1
    stringBuffer.append(TEXT_135);
d635 1
a635 1
    stringBuffer.append(TEXT_136);
d637 1
a637 1
    stringBuffer.append(TEXT_137);
d639 1
a639 1
    stringBuffer.append(TEXT_138);
d641 1
a641 1
    stringBuffer.append(TEXT_139);
d643 9
a651 1
    stringBuffer.append(TEXT_140);
d655 1
a655 1
    stringBuffer.append(TEXT_141);
d657 1
a657 1
    stringBuffer.append(TEXT_142);
d659 1
a659 1
    stringBuffer.append(TEXT_143);
d661 1
a661 1
    stringBuffer.append(TEXT_144);
d663 1
a663 1
    stringBuffer.append(TEXT_145);
d665 1
a665 1
    stringBuffer.append(TEXT_146);
d667 1
a667 1
    stringBuffer.append(TEXT_147);
d669 1
a669 1
    stringBuffer.append(TEXT_148);
d671 1
a671 1
    stringBuffer.append(TEXT_149);
d673 1
a673 1
    stringBuffer.append(TEXT_150);
d675 1
a675 1
    stringBuffer.append(TEXT_151);
d677 1
a677 1
    stringBuffer.append(TEXT_152);
d679 1
a679 1
    stringBuffer.append(TEXT_153);
d681 1
a681 1
    stringBuffer.append(TEXT_154);
d683 1
a683 1
    stringBuffer.append(TEXT_155);
d685 1
a685 1
    stringBuffer.append(TEXT_156);
d687 1
a687 1
    stringBuffer.append(TEXT_157);
d689 1
a689 1
    stringBuffer.append(TEXT_158);
d691 1
a691 1
    stringBuffer.append(TEXT_159);
d693 1
a693 1
    stringBuffer.append(TEXT_160);
d695 1
a695 1
    stringBuffer.append(TEXT_161);
d697 1
a697 1
    stringBuffer.append(TEXT_162);
d699 1
a699 1
    stringBuffer.append(TEXT_163);
d701 1
a701 1
    stringBuffer.append(TEXT_164);
d703 1
a703 1
    stringBuffer.append(TEXT_165);
d705 1
a705 1
    stringBuffer.append(TEXT_166);
d707 1
a707 1
    stringBuffer.append(TEXT_167);
d709 1
a709 1
    stringBuffer.append(TEXT_168);
d711 1
a711 1
    stringBuffer.append(TEXT_169);
d713 1
a713 1
    stringBuffer.append(TEXT_170);
d715 1
a715 1
    stringBuffer.append(TEXT_171);
d717 1
a717 1
    stringBuffer.append(TEXT_172);
d719 1
a719 1
    stringBuffer.append(TEXT_173);
d721 1
a721 1
    stringBuffer.append(TEXT_174);
d723 1
a723 1
    stringBuffer.append(TEXT_175);
d725 1
a725 1
    stringBuffer.append(TEXT_176);
d727 1
a727 1
    stringBuffer.append(TEXT_177);
d729 1
a729 1
    stringBuffer.append(TEXT_178);
d731 1
a731 1
    stringBuffer.append(TEXT_179);
d733 1
a733 1
    stringBuffer.append(TEXT_180);
d735 1
a735 1
    stringBuffer.append(TEXT_181);
d737 1
a737 1
    stringBuffer.append(TEXT_182);
d739 1
a739 1
    stringBuffer.append(TEXT_183);
d741 1
a741 1
    stringBuffer.append(TEXT_184);
d743 1
a743 1
    stringBuffer.append(TEXT_185);
d745 1
a745 1
    stringBuffer.append(TEXT_186);
d747 1
a747 1
    stringBuffer.append(TEXT_187);
d749 1
a749 1
    stringBuffer.append(TEXT_188);
d751 1
a751 1
    stringBuffer.append(TEXT_189);
d753 1
a753 1
    stringBuffer.append(TEXT_190);
d755 1
a755 1
    stringBuffer.append(TEXT_191);
d757 1
a757 1
    stringBuffer.append(TEXT_192);
d759 1
a759 1
    stringBuffer.append(TEXT_193);
d761 1
a761 1
    stringBuffer.append(TEXT_194);
d763 1
a763 1
    stringBuffer.append(TEXT_195);
d765 1
a765 1
    stringBuffer.append(TEXT_196);
d767 1
a767 1
    stringBuffer.append(TEXT_197);
d769 1
a769 1
    stringBuffer.append(TEXT_198);
d771 1
a771 1
    stringBuffer.append(TEXT_199);
d773 1
a773 1
    stringBuffer.append(TEXT_200);
d775 1
a775 1
    stringBuffer.append(TEXT_201);
d777 1
a777 1
    stringBuffer.append(TEXT_202);
d779 1
a779 1
    stringBuffer.append(TEXT_203);
d781 1
a781 1
    stringBuffer.append(TEXT_204);
d783 1
a783 1
    stringBuffer.append(TEXT_205);
d785 1
a785 1
    stringBuffer.append(TEXT_206);
d787 1
a787 1
    stringBuffer.append(TEXT_207);
@


1.10
log
@[158023] bblajer - Diagram Layout
@
text
@d544 1
a544 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getGenPackage().getQualifiedFactoryClassName()));
@


1.9
log
@[156358] bblajer - Diagram overview with Lite runtime
@
text
@d68 159
a226 156
  protected final String TEXT_49 = "(this));" + NL + "" + NL + "\t\t";
  protected final String TEXT_50 = " zoomIn = new ";
  protected final String TEXT_51 = "(getZoomManager());" + NL + "\t\t";
  protected final String TEXT_52 = " zoomOut = new ";
  protected final String TEXT_53 = "(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t\t";
  protected final String TEXT_54 = " keyHandler = getGraphicalViewer().getKeyHandler();" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_55 = ".getPressed(";
  protected final String TEXT_56 = ".DEL, 127, 0), getActionRegistry().getAction(";
  protected final String TEXT_57 = ".DELETE.getId()));" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_58 = ".getPressed(";
  protected final String TEXT_59 = ".F2, 0), getActionRegistry().getAction(";
  protected final String TEXT_60 = ".DIRECT_EDIT));" + NL + "\t}" + NL;
  protected final String TEXT_61 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_62 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_63 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(";
  protected final String TEXT_64 = " monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (";
  protected final String TEXT_65 = " e) {" + NL + "\t\t\t";
  protected final String TEXT_66 = ".openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_67 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configurePalette(";
  protected final String TEXT_68 = " paletteRoot) {";
  protected final String TEXT_69 = NL + "\t\tnew ";
  protected final String TEXT_70 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_71 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_72 = " getDiagramRoot() {" + NL + "\t\treturn diagramRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_73 = " getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_74 = " site, ";
  protected final String TEXT_75 = " input) throws ";
  protected final String TEXT_76 = " {" + NL + "\t\t";
  protected final String TEXT_77 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_78 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_79 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_80 = " input)  {";
  protected final String TEXT_81 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_82 = ") {" + NL + "\t\t\t";
  protected final String TEXT_83 = " resource = ((";
  protected final String TEXT_84 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_85 = NL + "\t\t";
  protected final String TEXT_86 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_87 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_88 = ") {" + NL + "\t\t\t";
  protected final String TEXT_89 = " resource = ((";
  protected final String TEXT_90 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_91 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_92 = " getURIFromInput(";
  protected final String TEXT_93 = " input) {";
  protected final String TEXT_94 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_95 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_96 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_97 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_98 = ".createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}";
  protected final String TEXT_99 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_100 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_101 = ".createPlatformResourceURI(((IFileEditorInput)input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_102 = NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_103 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_104 = " factories = new ";
  protected final String TEXT_105 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_106 = "());";
  protected final String TEXT_107 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_108 = "());";
  protected final String TEXT_109 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_110 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_111 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_112 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_113 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_114 = " editingDomain = getEditingDomain();" + NL + "\t\t";
  protected final String TEXT_115 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\t";
  protected final String TEXT_116 = " diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (";
  protected final String TEXT_117 = ") findInResource(diagramResource, ";
  protected final String TEXT_118 = ".class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = ";
  protected final String TEXT_119 = ".eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(";
  protected final String TEXT_120 = ".EMPTY_MAP);" + NL + "\t\t\t} catch (";
  protected final String TEXT_121 = " e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\tdiagramRoot = (";
  protected final String TEXT_122 = ") diagram.getElement();" + NL + "\t\tif (diagramRoot == null) {";
  protected final String TEXT_123 = NL + "\t\t\t";
  protected final String TEXT_124 = " modelFile = ";
  protected final String TEXT_125 = ".getModelFileURI(diagramFile);" + NL + "\t\t\t";
  protected final String TEXT_126 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\tif (modelResource == null) {" + NL + "\t\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t\t}";
  protected final String TEXT_127 = NL + "\t\t\tdiagramRoot = (";
  protected final String TEXT_128 = ") findInResource(";
  protected final String TEXT_129 = ", ";
  protected final String TEXT_130 = ".class);" + NL + "\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\tdiagramRoot = ";
  protected final String TEXT_131 = ".eINSTANCE.create";
  protected final String TEXT_132 = "();" + NL + "\t\t\t\t";
  protected final String TEXT_133 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\t";
  protected final String TEXT_134 = ".save(";
  protected final String TEXT_135 = ".EMPTY_MAP);" + NL + "\t\t\t\t} catch (";
  protected final String TEXT_136 = " e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(";
  protected final String TEXT_137 = "(";
  protected final String TEXT_138 = ") ";
  protected final String TEXT_139 = "diagramRoot);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_140 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_141 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_142 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(";
  protected final String TEXT_143 = " parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_144 = " root = new ";
  protected final String TEXT_145 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_146 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_147 = " printableLayers = (";
  protected final String TEXT_148 = ") root.getLayer(";
  protected final String TEXT_149 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_150 = " extLabelsLayer = new ";
  protected final String TEXT_151 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_152 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_153 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_154 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_155 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_156 = " provider = new ";
  protected final String TEXT_157 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_158 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_159 = " keyHandler = new ";
  protected final String TEXT_160 = "(viewer);" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_161 = ".KeyGenerator.getKey(";
  protected final String TEXT_162 = ".CTRL), ";
  protected final String TEXT_163 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_164 = "ContextMenuProvider extends ";
  protected final String TEXT_165 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_166 = "ContextMenuProvider(";
  protected final String TEXT_167 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_168 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_169 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_170 = ".UNDO.getId(), ";
  protected final String TEXT_171 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_172 = ".REDO.getId(), ";
  protected final String TEXT_173 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_174 = ".COPY.getId(), ";
  protected final String TEXT_175 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_176 = ".PASTE.getId(), ";
  protected final String TEXT_177 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_178 = ".DELETE.getId(), ";
  protected final String TEXT_179 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_180 = ".DIRECT_EDIT, ";
  protected final String TEXT_181 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_182 = ".SAVE.getId(), ";
  protected final String TEXT_183 = ".GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_184 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_185 = " submenu = new ";
  protected final String TEXT_186 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_187 = "(";
  protected final String TEXT_188 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_189 = ".ALIGN_LEFT, ";
  protected final String TEXT_190 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_191 = ".ALIGN_CENTER, ";
  protected final String TEXT_192 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_193 = ".ALIGN_RIGHT, ";
  protected final String TEXT_194 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_195 = ".ALIGN_TOP, ";
  protected final String TEXT_196 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_197 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_198 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_199 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_200 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_201 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_202 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_203 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_204 = NL;
d345 2
d348 1
a348 1
    stringBuffer.append(TEXT_50);
d350 1
a350 1
    stringBuffer.append(TEXT_51);
d352 1
a352 1
    stringBuffer.append(TEXT_52);
d354 1
a354 1
    stringBuffer.append(TEXT_53);
d356 1
a356 1
    stringBuffer.append(TEXT_54);
d358 1
a358 1
    stringBuffer.append(TEXT_55);
d360 1
a360 1
    stringBuffer.append(TEXT_56);
d362 1
a362 1
    stringBuffer.append(TEXT_57);
d364 1
a364 1
    stringBuffer.append(TEXT_58);
d366 1
a366 1
    stringBuffer.append(TEXT_59);
d368 1
a368 1
    stringBuffer.append(TEXT_60);
d372 1
a372 1
    stringBuffer.append(TEXT_61);
d374 1
a374 1
    stringBuffer.append(TEXT_62);
d378 1
a378 1
    stringBuffer.append(TEXT_63);
d380 1
a380 1
    stringBuffer.append(TEXT_64);
d382 1
a382 1
    stringBuffer.append(TEXT_65);
d384 1
a384 1
    stringBuffer.append(TEXT_66);
d386 1
a386 1
    stringBuffer.append(TEXT_67);
d388 1
a388 1
    stringBuffer.append(TEXT_68);
d394 1
a394 1
    stringBuffer.append(TEXT_69);
d396 1
a396 1
    stringBuffer.append(TEXT_70);
d401 1
a401 1
    stringBuffer.append(TEXT_71);
d403 1
a403 1
    stringBuffer.append(TEXT_72);
d405 1
a405 1
    stringBuffer.append(TEXT_73);
d407 1
a407 1
    stringBuffer.append(TEXT_74);
d409 1
a409 1
    stringBuffer.append(TEXT_75);
d411 1
a411 1
    stringBuffer.append(TEXT_76);
a412 2
    stringBuffer.append(TEXT_77);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.PartInitException"));
d416 2
d419 1
a419 1
    stringBuffer.append(TEXT_80);
d423 1
a423 1
    stringBuffer.append(TEXT_81);
d425 1
a425 1
    stringBuffer.append(TEXT_82);
d427 1
a427 1
    stringBuffer.append(TEXT_83);
d429 1
a429 1
    stringBuffer.append(TEXT_84);
d433 1
a433 1
    stringBuffer.append(TEXT_85);
d435 1
a435 1
    stringBuffer.append(TEXT_86);
d439 1
a439 1
    stringBuffer.append(TEXT_87);
d441 1
a441 1
    stringBuffer.append(TEXT_88);
d443 1
a443 1
    stringBuffer.append(TEXT_89);
d445 1
a445 1
    stringBuffer.append(TEXT_90);
d449 1
a449 1
    stringBuffer.append(TEXT_91);
d451 1
a451 1
    stringBuffer.append(TEXT_92);
d453 1
a453 1
    stringBuffer.append(TEXT_93);
a454 2
    stringBuffer.append(TEXT_94);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput"));
d458 2
d461 1
a461 1
    stringBuffer.append(TEXT_97);
d463 1
a463 1
    stringBuffer.append(TEXT_98);
d465 1
a465 1
    stringBuffer.append(TEXT_99);
d467 1
a467 1
    stringBuffer.append(TEXT_100);
d469 1
a469 1
    stringBuffer.append(TEXT_101);
d471 1
a471 1
    stringBuffer.append(TEXT_102);
d473 1
a473 1
    stringBuffer.append(TEXT_103);
d475 1
a475 1
    stringBuffer.append(TEXT_104);
d477 1
a477 1
    stringBuffer.append(TEXT_105);
d479 1
a479 1
    stringBuffer.append(TEXT_106);
d485 1
a485 1
    stringBuffer.append(TEXT_107);
d487 1
a487 1
    stringBuffer.append(TEXT_108);
d489 1
a489 1
    stringBuffer.append(TEXT_109);
d491 1
a491 1
    stringBuffer.append(TEXT_110);
d493 1
a493 1
    stringBuffer.append(TEXT_111);
d495 1
a495 1
    stringBuffer.append(TEXT_112);
d497 1
a497 1
    stringBuffer.append(TEXT_113);
d499 1
a499 1
    stringBuffer.append(TEXT_114);
d501 1
a501 1
    stringBuffer.append(TEXT_115);
a502 2
    stringBuffer.append(TEXT_116);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d506 2
d509 1
a509 1
    stringBuffer.append(TEXT_119);
d511 1
a511 1
    stringBuffer.append(TEXT_120);
d513 1
a513 1
    stringBuffer.append(TEXT_121);
d515 1
a515 1
    stringBuffer.append(TEXT_122);
d524 1
a524 1
    stringBuffer.append(TEXT_123);
d526 1
a526 1
    stringBuffer.append(TEXT_124);
d528 1
a528 1
    stringBuffer.append(TEXT_125);
d530 1
a530 1
    stringBuffer.append(TEXT_126);
d537 1
a537 1
    stringBuffer.append(TEXT_127);
d539 1
a539 1
    stringBuffer.append(TEXT_128);
d541 1
a541 1
    stringBuffer.append(TEXT_129);
d543 1
a543 1
    stringBuffer.append(TEXT_130);
d545 1
a545 1
    stringBuffer.append(TEXT_131);
a546 2
    stringBuffer.append(TEXT_132);
    stringBuffer.append(resourceToUse);
d550 2
d553 1
a553 1
    stringBuffer.append(TEXT_135);
d555 1
a555 1
    stringBuffer.append(TEXT_136);
d557 1
a557 1
    stringBuffer.append(TEXT_137);
d559 1
a559 1
    stringBuffer.append(TEXT_138);
d561 1
a561 1
    stringBuffer.append(TEXT_139);
d565 1
a565 1
    stringBuffer.append(TEXT_140);
d567 1
a567 1
    stringBuffer.append(TEXT_141);
d569 1
a569 1
    stringBuffer.append(TEXT_142);
a570 2
    stringBuffer.append(TEXT_143);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.editparts.ScalableFreeformRootEditPart"));
d574 2
a576 2
    stringBuffer.append(TEXT_146);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
d580 2
a582 2
    stringBuffer.append(TEXT_149);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
d586 2
d589 1
a589 1
    stringBuffer.append(TEXT_152);
d591 1
a591 1
    stringBuffer.append(TEXT_153);
d593 1
a593 1
    stringBuffer.append(TEXT_154);
d595 1
a595 1
    stringBuffer.append(TEXT_155);
d597 1
a597 1
    stringBuffer.append(TEXT_156);
d599 1
a599 1
    stringBuffer.append(TEXT_157);
d601 1
a601 1
    stringBuffer.append(TEXT_158);
d603 1
a603 1
    stringBuffer.append(TEXT_159);
d605 1
a605 1
    stringBuffer.append(TEXT_160);
d607 1
a607 1
    stringBuffer.append(TEXT_161);
d609 1
a609 1
    stringBuffer.append(TEXT_162);
d611 1
a611 1
    stringBuffer.append(TEXT_163);
d613 1
a613 1
    stringBuffer.append(TEXT_164);
d615 1
a615 1
    stringBuffer.append(TEXT_165);
d617 1
a617 1
    stringBuffer.append(TEXT_166);
d619 1
a619 1
    stringBuffer.append(TEXT_167);
d621 1
a621 1
    stringBuffer.append(TEXT_168);
d623 1
a623 1
    stringBuffer.append(TEXT_169);
d625 1
a625 1
    stringBuffer.append(TEXT_170);
d627 1
a627 1
    stringBuffer.append(TEXT_171);
d629 1
a629 1
    stringBuffer.append(TEXT_172);
d631 1
a631 1
    stringBuffer.append(TEXT_173);
d633 1
a633 1
    stringBuffer.append(TEXT_174);
d635 1
a635 1
    stringBuffer.append(TEXT_175);
d637 1
a637 1
    stringBuffer.append(TEXT_176);
d639 1
a639 1
    stringBuffer.append(TEXT_177);
a640 2
    stringBuffer.append(TEXT_178);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d646 1
a646 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d648 2
a650 2
    stringBuffer.append(TEXT_183);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.IMenuManager"));
d652 1
a652 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d654 1
a654 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d656 1
a656 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.Separator"));
d658 1
a658 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d660 1
a660 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d662 1
a662 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d686 6
d693 1
a693 1
    stringBuffer.append(TEXT_202);
d695 1
a695 1
    stringBuffer.append(TEXT_203);
d697 1
a697 1
    stringBuffer.append(TEXT_204);
@


1.8
log
@[155040] bblajer - Common Lite runtime functionality moved to dedicated plugin
@
text
@d72 152
a223 151
  protected final String TEXT_53 = "(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t}" + NL;
  protected final String TEXT_54 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_55 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_56 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(";
  protected final String TEXT_57 = " monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (";
  protected final String TEXT_58 = " e) {" + NL + "\t\t\t";
  protected final String TEXT_59 = ".openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_60 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configurePalette(";
  protected final String TEXT_61 = " paletteRoot) {";
  protected final String TEXT_62 = NL + "\t\tnew ";
  protected final String TEXT_63 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_64 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_65 = " getDiagramRoot() {" + NL + "\t\treturn diagramRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_66 = " getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(";
  protected final String TEXT_67 = " site, ";
  protected final String TEXT_68 = " input) throws ";
  protected final String TEXT_69 = " {" + NL + "\t\t";
  protected final String TEXT_70 = " file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_71 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsuper.init(site, input);" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new ";
  protected final String TEXT_72 = "(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(";
  protected final String TEXT_73 = " input)  {";
  protected final String TEXT_74 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_75 = ") {" + NL + "\t\t\t";
  protected final String TEXT_76 = " resource = ((";
  protected final String TEXT_77 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_78 = NL + "\t\t";
  protected final String TEXT_79 = " file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_80 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_81 = ") {" + NL + "\t\t\t";
  protected final String TEXT_82 = " resource = ((";
  protected final String TEXT_83 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_84 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_85 = " getURIFromInput(";
  protected final String TEXT_86 = " input) {";
  protected final String TEXT_87 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_88 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_89 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_90 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_91 = ".createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}";
  protected final String TEXT_92 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_93 = ") {" + NL + "\t\t\treturn ";
  protected final String TEXT_94 = ".createPlatformResourceURI(((IFileEditorInput)input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_95 = NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ";
  protected final String TEXT_96 = " getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\t";
  protected final String TEXT_97 = " factories = new ";
  protected final String TEXT_98 = "();" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_99 = "());";
  protected final String TEXT_100 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_101 = "());";
  protected final String TEXT_102 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_103 = "());" + NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_104 = "());" + NL + "\t\t\tdomainAdapterFactory = new ";
  protected final String TEXT_105 = "(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(";
  protected final String TEXT_106 = " diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_107 = " editingDomain = getEditingDomain();" + NL + "\t\t";
  protected final String TEXT_108 = " resourceSet = editingDomain.getResourceSet();" + NL + "\t\t";
  protected final String TEXT_109 = " diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (";
  protected final String TEXT_110 = ") findInResource(diagramResource, ";
  protected final String TEXT_111 = ".class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = ";
  protected final String TEXT_112 = ".eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(";
  protected final String TEXT_113 = ".EMPTY_MAP);" + NL + "\t\t\t} catch (";
  protected final String TEXT_114 = " e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\tdiagramRoot = (";
  protected final String TEXT_115 = ") diagram.getElement();" + NL + "\t\tif (diagramRoot == null) {";
  protected final String TEXT_116 = NL + "\t\t\t";
  protected final String TEXT_117 = " modelFile = ";
  protected final String TEXT_118 = ".getModelFileURI(diagramFile);" + NL + "\t\t\t";
  protected final String TEXT_119 = " modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\tif (modelResource == null) {" + NL + "\t\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t\t}";
  protected final String TEXT_120 = NL + "\t\t\tdiagramRoot = (";
  protected final String TEXT_121 = ") findInResource(";
  protected final String TEXT_122 = ", ";
  protected final String TEXT_123 = ".class);" + NL + "\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\tdiagramRoot = ";
  protected final String TEXT_124 = ".eINSTANCE.create";
  protected final String TEXT_125 = "();" + NL + "\t\t\t\t";
  protected final String TEXT_126 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\t";
  protected final String TEXT_127 = ".save(";
  protected final String TEXT_128 = ".EMPTY_MAP);" + NL + "\t\t\t\t} catch (";
  protected final String TEXT_129 = " e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(";
  protected final String TEXT_130 = "(";
  protected final String TEXT_131 = ") ";
  protected final String TEXT_132 = "diagramRoot);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_133 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(";
  protected final String TEXT_134 = " resource, Class expectedClass) {" + NL + "\t\tfor(";
  protected final String TEXT_135 = " it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(";
  protected final String TEXT_136 = " parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\t";
  protected final String TEXT_137 = " root = new ";
  protected final String TEXT_138 = "();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_139 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_140 = " printableLayers = (";
  protected final String TEXT_141 = ") root.getLayer(";
  protected final String TEXT_142 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_143 = " extLabelsLayer = new ";
  protected final String TEXT_144 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_145 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_146 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_147 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\t";
  protected final String TEXT_148 = " viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\t";
  protected final String TEXT_149 = " provider = new ";
  protected final String TEXT_150 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_151 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\t";
  protected final String TEXT_152 = " keyHandler = new ";
  protected final String TEXT_153 = "(viewer);" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_154 = ".getPressed(";
  protected final String TEXT_155 = ".DEL, 127, 0), getActionRegistry().getAction(";
  protected final String TEXT_156 = ".DELETE.getId()));" + NL + "\t\tkeyHandler.put(";
  protected final String TEXT_157 = ".getPressed(";
  protected final String TEXT_158 = ".F2, 0), getActionRegistry().getAction(";
  protected final String TEXT_159 = ".DIRECT_EDIT));" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(";
  protected final String TEXT_160 = ".KeyGenerator.getKey(";
  protected final String TEXT_161 = ".CTRL), ";
  protected final String TEXT_162 = ".SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_163 = "ContextMenuProvider extends ";
  protected final String TEXT_164 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_165 = "ContextMenuProvider(";
  protected final String TEXT_166 = " viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(";
  protected final String TEXT_167 = " menuManager) {" + NL + "\t        ";
  protected final String TEXT_168 = ".addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_169 = ".UNDO.getId(), ";
  protected final String TEXT_170 = ".GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_171 = ".REDO.getId(), ";
  protected final String TEXT_172 = ".GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_173 = ".COPY.getId(), ";
  protected final String TEXT_174 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_175 = ".PASTE.getId(), ";
  protected final String TEXT_176 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_177 = ".DELETE.getId(), ";
  protected final String TEXT_178 = ".GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_179 = ".DIRECT_EDIT, ";
  protected final String TEXT_180 = ".GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ";
  protected final String TEXT_181 = ".SAVE.getId(), ";
  protected final String TEXT_182 = ".GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(";
  protected final String TEXT_183 = " menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\t";
  protected final String TEXT_184 = " submenu = new ";
  protected final String TEXT_185 = "(\"Align\");" + NL + "\t\t\tsubmenu.add(new ";
  protected final String TEXT_186 = "(";
  protected final String TEXT_187 = ".MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_188 = ".ALIGN_LEFT, ";
  protected final String TEXT_189 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_190 = ".ALIGN_CENTER, ";
  protected final String TEXT_191 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_192 = ".ALIGN_RIGHT, ";
  protected final String TEXT_193 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_194 = ".ALIGN_TOP, ";
  protected final String TEXT_195 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_196 = ".ALIGN_MIDDLE, ";
  protected final String TEXT_197 = ".MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, ";
  protected final String TEXT_198 = ".ALIGN_BOTTOM, ";
  protected final String TEXT_199 = ".MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(";
  protected final String TEXT_200 = ".GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(";
  protected final String TEXT_201 = " menu, String actionId, String menuGroup) {" + NL + "\t\t\t";
  protected final String TEXT_202 = " action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_203 = NL;
d350 14
d367 1
a367 1
    stringBuffer.append(TEXT_54);
d369 1
a369 1
    stringBuffer.append(TEXT_55);
d373 1
a373 1
    stringBuffer.append(TEXT_56);
d375 1
a375 1
    stringBuffer.append(TEXT_57);
d377 1
a377 1
    stringBuffer.append(TEXT_58);
d379 1
a379 1
    stringBuffer.append(TEXT_59);
d381 1
a381 1
    stringBuffer.append(TEXT_60);
d383 1
a383 1
    stringBuffer.append(TEXT_61);
d389 1
a389 1
    stringBuffer.append(TEXT_62);
d391 1
a391 1
    stringBuffer.append(TEXT_63);
d396 1
a396 1
    stringBuffer.append(TEXT_64);
d398 1
a398 1
    stringBuffer.append(TEXT_65);
d400 1
a400 1
    stringBuffer.append(TEXT_66);
d402 1
a402 1
    stringBuffer.append(TEXT_67);
d404 1
a404 1
    stringBuffer.append(TEXT_68);
d406 1
a406 1
    stringBuffer.append(TEXT_69);
d408 1
a408 1
    stringBuffer.append(TEXT_70);
d410 1
a410 1
    stringBuffer.append(TEXT_71);
d412 1
a412 1
    stringBuffer.append(TEXT_72);
d414 1
a414 1
    stringBuffer.append(TEXT_73);
d418 1
a418 1
    stringBuffer.append(TEXT_74);
d420 1
a420 1
    stringBuffer.append(TEXT_75);
d422 1
a422 1
    stringBuffer.append(TEXT_76);
d424 1
a424 1
    stringBuffer.append(TEXT_77);
d428 1
a428 1
    stringBuffer.append(TEXT_78);
d430 1
a430 1
    stringBuffer.append(TEXT_79);
d434 1
a434 1
    stringBuffer.append(TEXT_80);
d436 1
a436 1
    stringBuffer.append(TEXT_81);
d438 1
a438 1
    stringBuffer.append(TEXT_82);
d440 1
a440 1
    stringBuffer.append(TEXT_83);
d444 1
a444 1
    stringBuffer.append(TEXT_84);
d446 1
a446 1
    stringBuffer.append(TEXT_85);
d448 1
a448 1
    stringBuffer.append(TEXT_86);
d450 1
a450 1
    stringBuffer.append(TEXT_87);
d452 1
a452 1
    stringBuffer.append(TEXT_88);
d454 1
a454 1
    stringBuffer.append(TEXT_89);
d456 1
a456 1
    stringBuffer.append(TEXT_90);
d458 1
a458 1
    stringBuffer.append(TEXT_91);
d460 1
a460 1
    stringBuffer.append(TEXT_92);
d462 1
a462 1
    stringBuffer.append(TEXT_93);
d464 1
a464 1
    stringBuffer.append(TEXT_94);
d466 1
a466 1
    stringBuffer.append(TEXT_95);
d468 1
a468 1
    stringBuffer.append(TEXT_96);
d470 1
a470 1
    stringBuffer.append(TEXT_97);
d472 1
a472 1
    stringBuffer.append(TEXT_98);
d474 1
a474 1
    stringBuffer.append(TEXT_99);
d480 1
a480 1
    stringBuffer.append(TEXT_100);
d482 1
a482 1
    stringBuffer.append(TEXT_101);
d484 1
a484 1
    stringBuffer.append(TEXT_102);
d486 1
a486 1
    stringBuffer.append(TEXT_103);
d488 1
a488 1
    stringBuffer.append(TEXT_104);
d490 1
a490 1
    stringBuffer.append(TEXT_105);
d492 1
a492 1
    stringBuffer.append(TEXT_106);
d494 1
a494 1
    stringBuffer.append(TEXT_107);
d496 1
a496 1
    stringBuffer.append(TEXT_108);
d498 1
a498 1
    stringBuffer.append(TEXT_109);
d500 1
a500 1
    stringBuffer.append(TEXT_110);
d502 1
a502 1
    stringBuffer.append(TEXT_111);
d504 1
a504 1
    stringBuffer.append(TEXT_112);
d506 1
a506 1
    stringBuffer.append(TEXT_113);
d508 1
a508 1
    stringBuffer.append(TEXT_114);
d510 1
a510 1
    stringBuffer.append(TEXT_115);
d519 1
a519 1
    stringBuffer.append(TEXT_116);
d521 1
a521 1
    stringBuffer.append(TEXT_117);
d523 1
a523 1
    stringBuffer.append(TEXT_118);
d525 1
a525 1
    stringBuffer.append(TEXT_119);
d532 1
a532 1
    stringBuffer.append(TEXT_120);
d534 1
a534 1
    stringBuffer.append(TEXT_121);
d536 1
a536 1
    stringBuffer.append(TEXT_122);
d538 1
a538 1
    stringBuffer.append(TEXT_123);
d540 1
a540 1
    stringBuffer.append(TEXT_124);
d542 1
a542 1
    stringBuffer.append(TEXT_125);
d544 1
a544 1
    stringBuffer.append(TEXT_126);
d546 1
a546 1
    stringBuffer.append(TEXT_127);
d548 1
a548 1
    stringBuffer.append(TEXT_128);
d550 1
a550 1
    stringBuffer.append(TEXT_129);
d552 1
a552 1
    stringBuffer.append(TEXT_130);
d554 1
a554 1
    stringBuffer.append(TEXT_131);
d556 1
a556 1
    stringBuffer.append(TEXT_132);
d560 1
a560 1
    stringBuffer.append(TEXT_133);
d562 1
a562 1
    stringBuffer.append(TEXT_134);
d564 1
a564 1
    stringBuffer.append(TEXT_135);
d566 1
a566 1
    stringBuffer.append(TEXT_136);
d568 1
a568 1
    stringBuffer.append(TEXT_137);
a569 14
    stringBuffer.append(TEXT_138);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditPartFactoryQualifiedClassName()));
    stringBuffer.append(TEXT_139);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
    stringBuffer.append(TEXT_140);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
    stringBuffer.append(TEXT_141);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.LayerConstants"));
    stringBuffer.append(TEXT_142);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
    stringBuffer.append(TEXT_143);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
    stringBuffer.append(TEXT_144);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.DelegatingLayout"));
d573 1
a573 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.LayerConstants"));
d575 1
a575 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.GraphicalViewer"));
d577 1
a577 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ContextMenuProvider"));
d579 1
a579 1
    stringBuffer.append(genEditor.getClassName());
d581 1
a581 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
d583 1
a583 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyHandler"));
d585 1
a585 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.parts.GraphicalViewerKeyHandler"));
d587 1
a587 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyStroke"));
d589 1
a589 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.SWT"));
d591 1
a591 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.actions.ActionFactory"));
d593 1
a593 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.KeyStroke"));
d595 1
a595 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.swt.SWT"));
d597 1
a597 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d599 2
d602 1
a602 1
    stringBuffer.append(TEXT_160);
d604 1
a604 1
    stringBuffer.append(TEXT_161);
d606 1
a606 1
    stringBuffer.append(TEXT_162);
d608 1
a608 1
    stringBuffer.append(TEXT_163);
d610 1
a610 1
    stringBuffer.append(TEXT_164);
d612 1
a612 1
    stringBuffer.append(TEXT_165);
d614 1
a614 1
    stringBuffer.append(TEXT_166);
d616 1
a616 1
    stringBuffer.append(TEXT_167);
d618 1
a618 1
    stringBuffer.append(TEXT_168);
d620 1
a620 1
    stringBuffer.append(TEXT_169);
d622 1
a622 1
    stringBuffer.append(TEXT_170);
d624 1
a624 1
    stringBuffer.append(TEXT_171);
d626 1
a626 1
    stringBuffer.append(TEXT_172);
d628 1
a628 1
    stringBuffer.append(TEXT_173);
d630 1
a630 1
    stringBuffer.append(TEXT_174);
d632 1
a632 1
    stringBuffer.append(TEXT_175);
d634 1
a634 1
    stringBuffer.append(TEXT_176);
a635 2
    stringBuffer.append(TEXT_177);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d641 2
d644 1
a644 1
    stringBuffer.append(TEXT_181);
d646 1
a646 1
    stringBuffer.append(TEXT_182);
a647 2
    stringBuffer.append(TEXT_183);
    stringBuffer.append(importManager.getImportedName("org.eclipse.jface.action.MenuManager"));
d651 2
a653 2
    stringBuffer.append(TEXT_186);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.actions.GEFActionConstants"));
d681 2
d684 1
a684 1
    stringBuffer.append(TEXT_201);
d686 1
a686 1
    stringBuffer.append(TEXT_202);
d688 1
a688 1
    stringBuffer.append(TEXT_203);
@


1.7
log
@[bblajer] #152774 Compilable code when EClass has instance class attribute set
@
text
@d22 201
a222 118
  protected final String TEXT_3 = " extends GraphicalEditorWithFlyoutPalette {";
  protected final String TEXT_4 = NL + "\t/**" + NL + "\t * This class listens to changes to the file system in the workspace, and" + NL + "\t * makes the following changes: " + NL + "\t * <ul><li>If an open, saved file gets deleted, the editor is closed.</li>" + NL + "\t * <li>If an open file gets renamed or moved, the editor's" + NL + "\t * input is changed accordingly.</li></ul>" + NL + "\t *" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ResourceTracker implements ";
  protected final String TEXT_5 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void resourceChanged(";
  protected final String TEXT_6 = " event) {" + NL + "\t\t\t";
  protected final String TEXT_7 = " delta = event.getDelta();" + NL + "\t\t\tif (delta != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_8 = " fileDelta = delta.findMember(((";
  protected final String TEXT_9 = ") getEditorInput()).getFile().getFullPath());" + NL + "\t\t\t\tif (fileDelta != null) {" + NL + "\t\t\t\t\tprocessFileDelta(fileDelta);" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void processFileDelta(";
  protected final String TEXT_10 = " delta) {" + NL + "\t\t\tassert (delta != null && delta.getResource().equals(((";
  protected final String TEXT_11 = ") getEditorInput()).getFile()));" + NL + "\t\t\tif (delta.getKind() == ";
  protected final String TEXT_12 = ".REMOVED) {" + NL + "\t\t\t\tif ((";
  protected final String TEXT_13 = ".MOVED_TO & delta.getFlags()) == 0) {" + NL + "\t\t\t\t\t";
  protected final String TEXT_14 = NL + "\t\t\t\t\tif (!isDirty()) {" + NL + "\t\t\t\t\t\tcloseEditor();" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t} else {" + NL + "\t\t\t\t\t// else if it was moved or renamed" + NL + "\t\t\t\t\tfinal ";
  protected final String TEXT_15 = " newFile = ";
  protected final String TEXT_16 = ".getWorkspace().getRoot().getFile(delta.getMovedToPath());" + NL + "\t\t\t\t\t";
  protected final String TEXT_17 = " display = getSite().getShell().getDisplay();" + NL + "\t\t\t\t\tdisplay.asyncExec(new Runnable() {" + NL + "\t\t\t\t\t\tpublic void run() {" + NL + "\t\t\t\t\t\t\tsetInput(new ";
  protected final String TEXT_18 = "(newFile));" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t});" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ResourceTracker resourceTracker;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ResourceTracker getResourceTracker() {" + NL + "\t\tif (resourceTracker == null) {" + NL + "\t\t\tresourceTracker = new ResourceTracker();" + NL + "\t\t}" + NL + "\t\treturn resourceTracker;" + NL + "\t}" + NL;
  protected final String TEXT_19 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class UpdatableActionGroup {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void addAction(UpdateAction action) {" + NL + "\t\t\tassert action != null;" + NL + "\t\t\tmyActions.add(action);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void removeAction(UpdateAction action) {" + NL + "\t\t\tmyActions.remove(action);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void update() {" + NL + "\t\t\tfor (Iterator it = myActions.iterator(); it.hasNext();) {" + NL + "\t\t\t\tUpdateAction next = (UpdateAction) it.next();" + NL + "\t\t\t\tnext.update();" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ArrayList myActions = new ArrayList();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Copied from <code>org.eclipse.gef.ui.properties.UndoablePropertySheetEntry</code> to provide EMF compatibility." + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static final class UndoablePropertySheetEntry extends ";
  protected final String TEXT_20 = " {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate static class SetValueCommand extends ";
  protected final String TEXT_21 = " {" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected Object propertyValue;" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected Object propertyName;" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected Object undoValue;" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected boolean resetOnUndo;" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected ";
  protected final String TEXT_22 = " target;" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic SetValueCommand() {" + NL + "\t\t\t\tsuper(\"\"); //$NON-NLS-1$" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic SetValueCommand(String propLabel) {" + NL + "\t\t\t\tsuper(";
  protected final String TEXT_23 = ".format(\"Set {0} property\", new Object[]{propLabel}).trim());" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic boolean canExecute() {" + NL + "\t\t\t\treturn true;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void execute() {" + NL + "\t\t\t\t/*" + NL + "\t\t\t\t * Fix for Bug# 54250" + NL + "\t\t\t\t * IPropertySource.isPropertySet(String) returns false both when there is no default " + NL + "\t\t\t\t * value, and when there is a default value and the property is set to that value." + NL + "\t\t\t\t * To correctly determine if a reset should be done during undo, we compare the" + NL + "\t\t\t\t * return value of isPropertySet(String) before and after setPropertyValue(...) is" + NL + "\t\t\t\t * invoked.  If they are different (it must have been false before and true after --" + NL + "\t\t\t\t * it cannot be the other way around), then that means we need to reset." + NL + "\t\t\t\t */" + NL + "\t\t\t\tboolean wasPropertySet = getTarget().isPropertySet(propertyName);" + NL + "\t\t\t\tundoValue = getTarget().getPropertyValue(propertyName);" + NL + "\t\t\t\tif (undoValue instanceof ";
  protected final String TEXT_24 = ") {" + NL + "\t\t\t\t\tundoValue = ((";
  protected final String TEXT_25 = ")undoValue).getEditableValue();" + NL + "\t\t\t\t} else if (undoValue instanceof ";
  protected final String TEXT_26 = ") {" + NL + "\t\t\t\t\tundoValue = ((";
  protected final String TEXT_27 = ")undoValue).getEditableValue(propertyName);" + NL + "\t\t\t\t}" + NL + "\t\t\t\tif (propertyValue instanceof ";
  protected final String TEXT_28 = ")" + NL + "\t\t\t\t\tpropertyValue = ((";
  protected final String TEXT_29 = ")propertyValue).getEditableValue();" + NL + "\t\t\t\tgetTarget().setPropertyValue(propertyName, propertyValue);" + NL + "\t\t\t\tif (getTarget() instanceof ";
  protected final String TEXT_30 = ")" + NL + "\t\t\t\t\tresetOnUndo = !wasPropertySet" + NL + "\t\t\t\t\t\t\t&& ((";
  protected final String TEXT_31 = ")getTarget()).isPropertyResettable(propertyName);" + NL + "\t\t\t\telse" + NL + "\t\t\t\t\tresetOnUndo = !wasPropertySet && getTarget().isPropertySet(propertyName);" + NL + "\t\t\t\tif (resetOnUndo)" + NL + "\t\t\t\t\tundoValue = null;" + NL + "\t\t\t}" + NL + "" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic ";
  protected final String TEXT_32 = " getTarget() {" + NL + "\t\t\t\treturn target;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void setTarget(";
  protected final String TEXT_33 = " aTarget) {" + NL + "\t\t\t\ttarget = aTarget;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void redo() {" + NL + "\t\t\t\texecute();" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void setPropertyId(Object pName) {" + NL + "\t\t\t\tpropertyName = pName;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void setPropertyValue(Object val) {" + NL + "\t\t\t\tpropertyValue = val;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void undo() {" + NL + "\t\t\t\tif (resetOnUndo)" + NL + "\t\t\t\t\tgetTarget().resetPropertyValue(propertyName);" + NL + "\t\t\t\telse" + NL + "\t\t\t\t\tgetTarget().setPropertyValue(propertyName, undoValue);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate static class ResetValueCommand extends ";
  protected final String TEXT_34 = " {" + NL + "\t\t\t/** " + NL + "\t\t\t * the property that has to be reset " + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected Object propertyName;" + NL + "\t\t\t/** " + NL + "\t\t\t * the current non-default value of the property " + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected Object undoValue;" + NL + "\t\t\t/**" + NL + "\t\t\t * the property source whose property has to be reset " + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tprotected ";
  protected final String TEXT_35 = " target;" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * Default Constructor: Sets the label for the Command" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic ResetValueCommand() {" + NL + "\t\t\t\tsuper(\"Restore Default Value\");" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * Returns <code>true</code> IFF:<br>" + NL + "\t\t\t * 1) the target and property have been specified<br>" + NL + "\t\t\t * 2) the property has a default value<br>" + NL + "\t\t\t * 3) the value set for that property is not the default" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic boolean canExecute() {" + NL + "\t\t\t\tboolean answer = false;" + NL + "\t\t\t\tif (target != null && propertyName != null) {" + NL + "\t\t\t\t\tanswer = target.isPropertySet(propertyName);" + NL + "\t\t\t\t\tif (target instanceof ";
  protected final String TEXT_36 = ")" + NL + "\t\t\t\t\t\tanswer = answer " + NL + "\t\t\t\t\t\t\t\t&& (((";
  protected final String TEXT_37 = ")target).isPropertyResettable(propertyName));" + NL + "\t\t\t\t}" + NL + "\t\t\t\treturn answer;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * Caches the undo value and invokes redo()" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void execute() {" + NL + "\t\t\t\tundoValue = target.getPropertyValue(propertyName);" + NL + "\t\t\t\tif (undoValue instanceof ";
  protected final String TEXT_38 = ") {" + NL + "\t\t\t\t\tundoValue = ((";
  protected final String TEXT_39 = ")undoValue).getEditableValue();" + NL + "\t\t\t\t} else if (undoValue instanceof ";
  protected final String TEXT_40 = ") {" + NL + "\t\t\t\t\tundoValue = ((";
  protected final String TEXT_41 = ")undoValue).getEditableValue(propertyName);" + NL + "\t\t\t\t}" + NL + "\t\t\t\tredo();" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * Sets the IPropertySource." + NL + "\t\t\t * @@param propSource the IPropertySource whose property has to be reset" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void setTarget(";
  protected final String TEXT_42 = " propSource) {" + NL + "\t\t\t\ttarget = propSource;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * Resets the specified property on the specified IPropertySource" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void redo() {" + NL + "\t\t\t\ttarget.resetPropertyValue(propertyName);" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * Sets the property that is to be reset." + NL + "\t\t\t * @@param pName the property to be reset" + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void setPropertyId(Object pName) {" + NL + "\t\t\t\tpropertyName = pName;" + NL + "\t\t\t}" + NL + "\t\t" + NL + "\t\t\t/**" + NL + "\t\t\t * Restores the non-default value that was reset. " + NL + "\t\t\t * @@generated" + NL + "\t\t\t */" + NL + "\t\t\tpublic void undo() {" + NL + "\t\t\t\ttarget.setPropertyValue(propertyName, undoValue);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_43 = " commandStackListener;" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ";
  protected final String TEXT_44 = " stack;" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate UndoablePropertySheetEntry() { }" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * Constructs the root entry using the given command stack." + NL + "\t\t * @@param stack the command stack" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic UndoablePropertySheetEntry(";
  protected final String TEXT_45 = " stack) {" + NL + "\t\t\tsetCommandStack(stack);" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprotected ";
  protected final String TEXT_46 = " createChildEntry() {" + NL + "\t\t\treturn new UndoablePropertySheetEntry();" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void dispose() {" + NL + "\t\t\tif (stack != null)" + NL + "\t\t\t\tstack.removeCommandStackListener(commandStackListener);" + NL + "\t\t\tsuper.dispose();" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\t";
  protected final String TEXT_47 = " getCommandStack() {" + NL + "\t\t\t//only the root has, and is listening to the command stack" + NL + "\t\t\tif (getParent() != null)" + NL + "\t\t\t\treturn ((UndoablePropertySheetEntry)getParent()).getCommandStack();" + NL + "\t\t\treturn stack;" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void resetPropertyValue() {" + NL + "\t\t\t";
  protected final String TEXT_48 = " cc = new ";
  protected final String TEXT_49 = "();" + NL + "\t\t\tResetValueCommand restoreCmd;" + NL + "\t" + NL + "\t\t\tif (getParent() == null)" + NL + "\t\t\t\t// root does not have a default value" + NL + "\t\t\t\treturn;" + NL + "\t" + NL + "\t\t\t//\tUse our parent's values to reset our values." + NL + "\t\t\tboolean change = false;" + NL + "\t\t\tObject[] objects = getParent().getValues();" + NL + "\t\t\tfor (int i = 0; i < objects.length; i++) {" + NL + "\t\t\t\t";
  protected final String TEXT_50 = " source = getPropertySource(objects[i]);" + NL + "\t\t\t\tif (source.isPropertySet(getDescriptor().getId())) {" + NL + "\t\t\t\t\t//source.resetPropertyValue(getDescriptor()getId());" + NL + "\t\t\t\t\trestoreCmd = new ResetValueCommand();" + NL + "\t\t\t\t\trestoreCmd.setTarget(source);" + NL + "\t\t\t\t\trestoreCmd.setPropertyId(getDescriptor().getId());" + NL + "\t\t\t\t\tcc.add(restoreCmd);\t\t\t" + NL + "\t\t\t\t\tchange = true;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (change) {" + NL + "\t\t\t\tgetCommandStack().execute(cc);" + NL + "\t\t\t\trefreshFromRoot();" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tvoid setCommandStack(";
  protected final String TEXT_51 = " stack) {" + NL + "\t\t\tthis.stack = stack;" + NL + "\t\t\tcommandStackListener = new ";
  protected final String TEXT_52 = "() {" + NL + "\t\t\t\tpublic void commandStackChanged(";
  protected final String TEXT_53 = " e) {" + NL + "\t\t\t\t\trefreshFromRoot();" + NL + "\t\t\t\t}" + NL + "\t\t\t};" + NL + "\t\t\tstack.addCommandStackListener(commandStackListener);" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprotected void valueChanged(";
  protected final String TEXT_54 = " child) {" + NL + "\t\t\tvalueChanged((UndoablePropertySheetEntry)child," + NL + "\t\t\t\t\tnew ";
  protected final String TEXT_55 = "());" + NL + "\t\t}" + NL + "\t" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tvoid valueChanged(UndoablePropertySheetEntry child, ";
  protected final String TEXT_56 = " command) {" + NL + "\t\t\t";
  protected final String TEXT_57 = " cc = new ";
  protected final String TEXT_58 = "();" + NL + "\t\t\tcommand.add(cc);" + NL + "\t" + NL + "\t\t\tSetValueCommand setCommand;" + NL + "\t\t\tfor (int i = 0; i < getValues().length; i++) {" + NL + "\t\t\t\tsetCommand = new SetValueCommand(child.getDisplayName());" + NL + "\t\t\t\tsetCommand.setTarget(getPropertySource(getValues()[i]));" + NL + "\t\t\t\tsetCommand.setPropertyId(child.getDescriptor().getId());" + NL + "\t\t\t\tsetCommand.setPropertyValue(child.getValues()[i]);" + NL + "\t\t\t\tcc.add(setCommand);" + NL + "\t\t\t}" + NL + "\t" + NL + "\t\t\t// inform our parent" + NL + "\t\t\tif (getParent() != null)" + NL + "\t\t\t\t((UndoablePropertySheetEntry)getParent()).valueChanged(this, command);" + NL + "\t\t\telse {" + NL + "\t\t\t\t//I am the root entry" + NL + "\t\t\t\tstack.execute(command);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate TransactionalEditingDomain editingDomain;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_59 = " diagramRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_60 = " diagram;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean isDirty = false;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PaletteRoot paletteRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PropertySheetPage undoablePropertySheetPage;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup stackActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener commandStackListener = new CommandStackListener() {" + NL + "" + NL + "\t\tpublic void commandStackChanged(EventObject event) {" + NL + "\t\t\tstackActions.update();" + NL + "\t\t\tsetDirty(((CommandStack) event.getSource()).isDirty());" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editPartActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener selectionListener = new ISelectionListener() {" + NL + "" + NL + "\t\tpublic void selectionChanged(IWorkbenchPart part, ISelection selection) {" + NL + "\t\t\teditPartActions.update();" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editorActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ComposedAdapterFactory domainAdapterFactory;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void firePropertyChange(int propertyId) {" + NL + "\t\tsuper.firePropertyChange(propertyId);" + NL + "\t\teditorActions.update();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an action to this editor's <code>ActionRegistry</code>. (This is" + NL + "\t * a helper method.)" + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the action to add." + NL + "\t */" + NL + "\tprotected void addAction(IAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an editor action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * Editor actions are actions that depend and work on the editor." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the editor action" + NL + "\t */" + NL + "\tprotected void addEditorAction(WorkbenchPartAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditorActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>EditPart</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>EditPart</code> actions are actions that depend and work on the" + NL + "\t * selected <code>EditPart</code>s." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>EditPart</code> action" + NL + "\t */" + NL + "\tprotected void addEditPartAction(SelectionAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditPartActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>CommandStack</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>CommandStack</code> actions are actions that depend and work on" + NL + "\t * the <code>CommandStack</code>." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>CommandStack</code> action" + NL + "\t */" + NL + "\tprotected void addStackAction(StackAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\tstackActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createActions() {" + NL + "\t\taddStackAction(new UndoAction(this));" + NL + "\t\taddStackAction(new RedoAction(this));" + NL + "" + NL + "\t\taddEditPartAction(new DeleteAction((IWorkbenchPart) this));" + NL + "\t\taddEditPartAction(new DirectEditAction((IWorkbenchPart) this));" + NL + "" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.LEFT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.RIGHT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.TOP));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.BOTTOM));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.CENTER));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.MIDDLE));" + NL + "" + NL + "\t\taddEditorAction(new SaveAction(this));" + NL + "\t\taddEditorAction(new PrintAction(this));" + NL + "" + NL + "\t\tIAction zoomIn = new ZoomInAction(getZoomManager());" + NL + "\t\tIAction zoomOut = new ZoomOutAction(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t}" + NL;
  protected final String TEXT_61 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_62 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_63 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// remove CommandStackListener" + NL + "\t\tgetCommandStack().removeCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// remove selection listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().removeSelectionListener(getSelectionListener());" + NL + "" + NL + "\t\t// dispose the ActionRegistry (will dispose all actions)" + NL + "\t\tgetActionRegistry().dispose();" + NL + "" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(IProgressMonitor monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (CoreException e) {" + NL + "\t\t\tErrorDialog.openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_64 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void save(IProgressMonitor progressMonitor) throws CoreException {" + NL + "\t\tif (progressMonitor == null) {" + NL + "\t\t\tprogressMonitor = new NullProgressMonitor();" + NL + "\t\t}" + NL + "\t\tprogressMonitor.beginTask(\"Saving\", getEditingDomain().getResourceSet().getResources().size());" + NL + "\t\ttry {" + NL + "\t\t\tfor(Iterator it = getEditingDomain().getResourceSet().getResources().iterator(); it.hasNext(); ) {" + NL + "\t\t\t\tResource next = (Resource)it.next();" + NL + "\t\t\t\tnext.save(Collections.EMPTY_MAP);" + NL + "\t\t\t\tprogressMonitor.worked(1);" + NL + "\t\t\t}" + NL + "\t\t} catch (IOException e) {" + NL + "\t\t\tIStatus status = new Status(IStatus.ERROR, ";
  protected final String TEXT_65 = ".ID, 0, \"Error writing file.\", e);" + NL + "\t\t\tthrow new CoreException(status);" + NL + "\t\t} finally {" + NL + "\t\t\tprogressMonitor.done();" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isSaveAsAllowed() {" + NL + "\t\t// TODO: should be allowed." + NL + "\t\treturn false;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSaveAs() {" + NL + "\t\t// TODO: Implement." + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Object getAdapter(Class type) {" + NL + "\t\tif (type == IPropertySheetPage.class) {" + NL + "\t\t\treturn getPropertySheetPage();" + NL + "\t\t} else if (type == IContentOutlinePage.class) {" + NL + "\t\t\treturn getOutlinePage();" + NL + "\t\t} else if (type == ZoomManager.class) {" + NL + "\t\t\treturn getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn super.getAdapter(type);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ZoomManager getZoomManager() {" + NL + "\t\treturn getZoomManager(getGraphicalViewer());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ZoomManager getZoomManager(GraphicalViewer viewer) {" + NL + "\t\t// get zoom manager from root edit part" + NL + "\t\tRootEditPart rootEditPart = viewer.getRootEditPart();" + NL + "\t\tZoomManager zoomManager = null;" + NL + "\t\tif (rootEditPart instanceof ScalableFreeformRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableFreeformRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t} else if (rootEditPart instanceof ScalableRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn zoomManager;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener getStackActionsListener() {" + NL + "\t\treturn commandStackListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected IContentOutlinePage getOutlinePage() {" + NL + "\t\t//TODO: outline page missing" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PaletteRoot getPaletteRoot() {" + NL + "\t\tif (paletteRoot == null) {" + NL + "\t\t\tpaletteRoot = new PaletteRoot();";
  protected final String TEXT_66 = NL + "\t\t\tnew ";
  protected final String TEXT_67 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_68 = NL + "\t\t}" + NL + "\t\treturn paletteRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PropertySheetPage getPropertySheetPage() {" + NL + "\t\tif (undoablePropertySheetPage == null) {" + NL + "\t\t\tundoablePropertySheetPage = new PropertySheetPage();" + NL + "\t\t\tUndoablePropertySheetEntry rootEntry = new UndoablePropertySheetEntry(getCommandStack());" + NL + "\t\t\trootEntry.setPropertySourceProvider(new ";
  protected final String TEXT_69 = "(getDomainAdapterFactory()));" + NL + "\t\t\tundoablePropertySheetPage.setRootEntry(rootEntry);" + NL + "\t\t}" + NL + "" + NL + "\t\treturn undoablePropertySheetPage;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener getSelectionListener() {" + NL + "\t\treturn selectionListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_70 = " getDiagramRoot() {" + NL + "\t\treturn diagramRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Diagram getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(IEditorSite site, IEditorInput input) throws PartInitException {" + NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsetSite(site);" + NL + "\t\tsetInput(input);" + NL + "\t\tsetEditDomain(new DefaultEditDomain(this));" + NL + "" + NL + "\t\t// validate" + NL + "\t\tif (getDiagramRoot() == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "" + NL + "\t\t// add CommandStackListener" + NL + "\t\tgetCommandStack().addCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// add selection change listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().addSelectionListener(getSelectionListener());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(IEditorInput input)  {";
  protected final String TEXT_71 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_72 = ") {" + NL + "\t\t\t";
  protected final String TEXT_73 = " resource = ((";
  protected final String TEXT_74 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_75 = NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_76 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_77 = ") {" + NL + "\t\t\t";
  protected final String TEXT_78 = " resource = ((";
  protected final String TEXT_79 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_80 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate URI getURIFromInput(IEditorInput input) {";
  protected final String TEXT_81 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_82 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_83 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_84 = ") {" + NL + "\t\t\treturn URI.createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}";
  protected final String TEXT_85 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_86 = ") {" + NL + "\t\t\treturn URI.createPlatformResourceURI(((IFileEditorInput)input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_87 = NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isDirty() {" + NL + "\t\treturn isDirty;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void setDirty(boolean dirty) {" + NL + "\t\tif (isDirty != dirty) {" + NL + "\t\t\tisDirty = dirty;" + NL + "\t\t\tfirePropertyChange(IEditorPart.PROP_DIRTY);" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected TransactionalEditingDomain getEditingDomain() {" + NL + "\t\tif (editingDomain == null) {" + NL + "\t\t\teditingDomain = ";
  protected final String TEXT_88 = ".INSTANCE.createEditingDomain();" + NL + "\t\t\t//editingDomain.setAdapterFactory(getDomainAdapterFactory());" + NL + "\t\t\teditingDomain.getResourceSet().eAdapters().add(new AdapterFactoryEditingDomain.EditingDomainProvider(editingDomain));" + NL + "\t\t}" + NL + "\t\treturn editingDomain;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate AdapterFactory getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\tList factories = new ArrayList();" + NL + "\t\t\tfactories.add(new ResourceItemProviderAdapterFactory());";
  protected final String TEXT_89 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_90 = "());";
  protected final String TEXT_91 = NL + "\t\t\tfactories.add(new ReflectiveItemProviderAdapterFactory());" + NL + "\t\t\tfactories.add(new NotationItemProviderAdapterFactory());" + NL + "\t\t\tdomainAdapterFactory = new ComposedAdapterFactory(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(URI diagramFile) {" + NL + "\t\tdiagramRoot = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tTransactionalEditingDomain editingDomain = getEditingDomain();" + NL + "\t\tResourceSet resourceSet = editingDomain.getResourceSet();" + NL + "\t\tResource diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (Diagram) findInResource(diagramResource, Diagram.class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = NotationFactory.eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(Collections.EMPTY_MAP);" + NL + "\t\t\t} catch (IOException e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\tdiagramRoot = (";
  protected final String TEXT_92 = ") diagram.getElement();" + NL + "\t\tif (diagramRoot == null) {";
  protected final String TEXT_93 = NL + "\t\t\tURI modelFile = ";
  protected final String TEXT_94 = ".getModelFileURI(diagramFile);" + NL + "\t\t\tResource modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\tif (modelResource == null) {" + NL + "\t\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t\t}";
  protected final String TEXT_95 = NL + "\t\t\tdiagramRoot = (";
  protected final String TEXT_96 = ") findInResource(";
  protected final String TEXT_97 = ", ";
  protected final String TEXT_98 = ".class);" + NL + "\t\t\tif (diagramRoot == null) {" + NL + "\t\t\t\tdiagramRoot = ";
  protected final String TEXT_99 = ".eINSTANCE.create";
  protected final String TEXT_100 = "();" + NL + "\t\t\t\t";
  protected final String TEXT_101 = ".getContents().add(0, diagramRoot);" + NL + "\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\t";
  protected final String TEXT_102 = ".save(Collections.EMPTY_MAP);" + NL + "\t\t\t\t} catch (IOException e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(";
  protected final String TEXT_103 = "(";
  protected final String TEXT_104 = ") ";
  protected final String TEXT_105 = "diagramRoot);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_106 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(Resource resource, Class expectedClass) {" + NL + "\t\tfor(Iterator it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void setFocus() {" + NL + "\t\tgetGraphicalViewer().getControl().setFocus();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic final void createPartControl(Composite parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t// initialize actions" + NL + "\t\tcreateActions();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(Composite parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\tScalableFreeformRootEditPart root = new ScalableFreeformRootEditPart();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_107 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_108 = " printableLayers = (";
  protected final String TEXT_109 = ") root.getLayer(";
  protected final String TEXT_110 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_111 = " extLabelsLayer = new ";
  protected final String TEXT_112 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_113 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_114 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_115 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\tGraphicalViewer viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\tContextMenuProvider provider = new ";
  protected final String TEXT_116 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_117 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\tKeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer);" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), getActionRegistry().getAction(ActionFactory.DELETE.getId()));" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(MouseWheelHandler.KeyGenerator.getKey(SWT.CTRL), MouseWheelZoomHandler.SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_118 = "ContextMenuProvider extends ContextMenuProvider {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_119 = "ContextMenuProvider(EditPartViewer viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(IMenuManager menuManager) {" + NL + "\t        GEFActionConstants.addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.UNDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.REDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.COPY.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.PASTE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.DELETE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, GEFActionConstants.DIRECT_EDIT, GEFActionConstants.GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.SAVE.getId(), GEFActionConstants.GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(IMenuManager menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\tMenuManager submenu = new MenuManager(\"Align\");" + NL + "\t\t\tsubmenu.add(new Separator(GEFActionConstants.MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_LEFT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_CENTER, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_RIGHT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_TOP, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_MIDDLE, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_BOTTOM, GEFActionConstants.MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(GEFActionConstants.GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(IMenuManager menu, String actionId, String menuGroup) {" + NL + "\t\t\tIAction action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_120 = NL;
a236 4
importManager.registerInnerClass("UndoablePropertySheetEntry");
importManager.registerInnerClass("SetValueCommand");
importManager.registerInnerClass("ResetValueCommand");
importManager.registerInnerClass("UpdatableActionGroup");
a241 76
importManager.addImport("java.io.IOException");
importManager.addImport("java.util.ArrayList");
importManager.addImport("java.util.Collections");
importManager.addImport("java.util.EventObject");
importManager.addImport("java.util.HashMap");
importManager.addImport("java.util.Iterator");
importManager.addImport("java.util.List");

importManager.addImport("org.eclipse.core.runtime.CoreException");
importManager.addImport("org.eclipse.core.runtime.IProgressMonitor");
importManager.addImport("org.eclipse.core.runtime.IStatus");
importManager.addImport("org.eclipse.core.runtime.NullProgressMonitor");
importManager.addImport("org.eclipse.core.runtime.Status");
importManager.addImport("org.eclipse.draw2d.PositionConstants");
importManager.addImport("org.eclipse.emf.common.util.URI");
importManager.addImport("org.eclipse.emf.ecore.resource.Resource");
importManager.addImport("org.eclipse.emf.ecore.resource.ResourceSet");
importManager.addImport("org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain");
importManager.addImport("org.eclipse.emf.transaction.TransactionalEditingDomain");
importManager.addImport("org.eclipse.emf.edit.provider.ComposedAdapterFactory");
importManager.addImport("org.eclipse.emf.edit.provider.ReflectiveItemProviderAdapterFactory");
importManager.addImport("org.eclipse.emf.edit.provider.resource.ResourceItemProviderAdapterFactory");
importManager.addImport("org.eclipse.gef.ContextMenuProvider");
importManager.addImport("org.eclipse.gef.EditPartViewer");
importManager.addImport("org.eclipse.gef.GraphicalViewer");
importManager.addImport("org.eclipse.gef.KeyHandler");
importManager.addImport("org.eclipse.gef.KeyStroke");
importManager.addImport("org.eclipse.gef.RootEditPart");
importManager.addImport("org.eclipse.gef.MouseWheelHandler");
importManager.addImport("org.eclipse.gef.MouseWheelZoomHandler");
importManager.addImport("org.eclipse.gef.commands.CommandStack");
importManager.addImport("org.eclipse.gef.commands.CommandStackListener");
importManager.addImport("org.eclipse.gef.editparts.ScalableFreeformRootEditPart");
importManager.addImport("org.eclipse.gef.editparts.ScalableRootEditPart");
importManager.addImport("org.eclipse.gef.editparts.ZoomManager");
importManager.addImport("org.eclipse.gef.palette.PaletteRoot");
importManager.addImport("org.eclipse.gef.ui.actions.AlignmentAction");
importManager.addImport("org.eclipse.gef.ui.actions.DeleteAction");
importManager.addImport("org.eclipse.gef.ui.actions.DirectEditAction");
importManager.addImport("org.eclipse.gef.ui.actions.GEFActionConstants");
importManager.addImport("org.eclipse.gef.ui.actions.PrintAction");
importManager.addImport("org.eclipse.gef.ui.actions.RedoAction");
importManager.addImport("org.eclipse.gef.ui.actions.SaveAction");
importManager.addImport("org.eclipse.gef.ui.actions.SelectionAction");
importManager.addImport("org.eclipse.gef.ui.actions.StackAction");
importManager.addImport("org.eclipse.gef.ui.actions.UndoAction");
importManager.addImport("org.eclipse.gef.ui.actions.UpdateAction");
importManager.addImport("org.eclipse.gef.ui.actions.WorkbenchPartAction");
importManager.addImport("org.eclipse.gef.ui.actions.ZoomInAction");
importManager.addImport("org.eclipse.gef.ui.actions.ZoomOutAction");
importManager.addImport("org.eclipse.gef.ui.parts.GraphicalViewerKeyHandler");
importManager.addImport("org.eclipse.gmf.runtime.notation.Diagram");
importManager.addImport("org.eclipse.gmf.runtime.notation.NotationFactory");
importManager.addImport("org.eclipse.gmf.runtime.notation.provider.NotationItemProviderAdapterFactory");
importManager.addImport("org.eclipse.jface.action.IAction");
importManager.addImport("org.eclipse.jface.action.IMenuManager");
importManager.addImport("org.eclipse.jface.action.MenuManager");
importManager.addImport("org.eclipse.jface.action.Separator");
importManager.addImport("org.eclipse.jface.dialogs.ErrorDialog");
importManager.addImport("org.eclipse.jface.viewers.ISelection");
importManager.addImport("org.eclipse.swt.SWT");
importManager.addImport("org.eclipse.swt.widgets.Composite");
importManager.addImport("org.eclipse.ui.IEditorPart");
importManager.addImport("org.eclipse.ui.IEditorInput");
importManager.addImport("org.eclipse.ui.IEditorSite");
importManager.addImport("org.eclipse.ui.ISelectionListener");
importManager.addImport("org.eclipse.ui.IWorkbenchPart");
importManager.addImport("org.eclipse.ui.PartInitException");
importManager.addImport("org.eclipse.ui.actions.ActionFactory");
importManager.addImport("org.eclipse.ui.views.contentoutline.IContentOutlinePage");
importManager.addImport("org.eclipse.ui.views.properties.IPropertySheetPage");
importManager.addImport("org.eclipse.ui.views.properties.PropertySheetPage");
importManager.addImport("org.eclipse.emf.common.notify.AdapterFactory");
importManager.addImport("org.eclipse.gef.ui.parts.GraphicalEditorWithFlyoutPalette");
importManager.addImport("org.eclipse.gef.DefaultEditDomain");

d245 2
d250 1
a250 1
    stringBuffer.append(TEXT_4);
d252 1
a252 1
    stringBuffer.append(TEXT_5);
a253 2
    stringBuffer.append(TEXT_6);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
d257 2
d260 1
a260 1
    stringBuffer.append(TEXT_9);
d262 1
a262 1
    stringBuffer.append(TEXT_10);
a263 2
    stringBuffer.append(TEXT_11);
    stringBuffer.append(importManager.getImportedName("org.eclipse.core.resources.IResourceDelta"));
d267 2
d270 1
a270 1
    stringBuffer.append(TEXT_14);
d272 1
a272 1
    stringBuffer.append(TEXT_15);
d274 1
a274 1
    stringBuffer.append(TEXT_16);
d276 1
a276 1
    stringBuffer.append(TEXT_17);
d278 1
a278 1
    stringBuffer.append(TEXT_18);
a281 2
    stringBuffer.append(TEXT_19);
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.PropertySheetEntry"));
d283 1
a283 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.Command"));
d285 1
a285 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d287 1
a287 1
    stringBuffer.append(importManager.getImportedName("java.text.MessageFormat"));
d289 1
a289 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d291 1
a291 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d293 1
a293 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertySource"));
d295 1
a295 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertySource"));
d297 1
a297 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d299 1
a299 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d301 1
a301 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource2"));
d303 1
a303 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource2"));
d305 1
a305 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d307 1
a307 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d309 1
a309 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.Command"));
d311 1
a311 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d313 1
a313 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource2"));
d315 1
a315 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource2"));
d317 1
a317 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d319 1
a319 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d321 1
a321 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertySource"));
d323 1
a323 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertySource"));
d325 1
a325 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d327 1
a327 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CommandStackListener"));
d329 1
a329 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CommandStack"));
d331 1
a331 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CommandStack"));
d333 1
a333 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.PropertySheetEntry"));
d335 1
a335 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CommandStack"));
d337 1
a337 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CompoundCommand"));
d339 1
a339 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CompoundCommand"));
d341 1
a341 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource"));
d343 1
a343 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CommandStack"));
d345 1
a345 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CommandStackListener"));
d347 1
a347 1
    stringBuffer.append(importManager.getImportedName("java.util.EventObject"));
d349 3
a351 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.ui.views.properties.PropertySheetEntry"));
d353 1
a353 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.ForwardUndoCompoundCommand"));
d355 3
a357 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CompoundCommand"));
d359 1
a359 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CompoundCommand"));
d361 1
a361 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.commands.CompoundCommand"));
d363 1
a363 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
d365 1
a365 1
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
d367 1
a367 3
    
if (!isRichClientPlatform) {

a368 10
    stringBuffer.append(genEditor.getClassName());
    stringBuffer.append(TEXT_62);
    
}

    stringBuffer.append(TEXT_63);
    stringBuffer.append(genDiagram.getEditorGen().getDomainGenModel().getModelName());
    stringBuffer.append(TEXT_64);
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_65);
d374 1
a374 1
    stringBuffer.append(TEXT_66);
d376 1
a376 1
    stringBuffer.append(TEXT_67);
d381 8
d390 1
a390 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getPropertyProviderQualifiedClassName()));
d392 1
a392 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
d394 6
d403 1
a403 1
    stringBuffer.append(TEXT_71);
d405 1
a405 1
    stringBuffer.append(TEXT_72);
d407 1
a407 1
    stringBuffer.append(TEXT_73);
d409 1
a409 1
    stringBuffer.append(TEXT_74);
d413 3
a415 1
    stringBuffer.append(TEXT_75);
d419 1
a419 1
    stringBuffer.append(TEXT_76);
d421 1
a421 1
    stringBuffer.append(TEXT_77);
d423 1
a423 1
    stringBuffer.append(TEXT_78);
d425 1
a425 1
    stringBuffer.append(TEXT_79);
d429 5
a433 1
    stringBuffer.append(TEXT_80);
d435 1
a435 1
    stringBuffer.append(TEXT_81);
d437 1
a437 1
    stringBuffer.append(TEXT_82);
d439 1
a439 1
    stringBuffer.append(TEXT_83);
d441 3
a443 1
    stringBuffer.append(TEXT_84);
d445 1
a445 1
    stringBuffer.append(TEXT_85);
d447 3
a449 1
    stringBuffer.append(TEXT_86);
d451 9
a459 3
    stringBuffer.append(TEXT_87);
    stringBuffer.append(importManager.getImportedName("org.eclipse.emf.workspace.WorkspaceEditingDomainFactory"));
    stringBuffer.append(TEXT_88);
d465 1
a465 1
    stringBuffer.append(TEXT_89);
d467 1
a467 1
    stringBuffer.append(TEXT_90);
d469 25
a493 1
    stringBuffer.append(TEXT_91);
d495 1
a495 1
    stringBuffer.append(TEXT_92);
d504 3
a506 1
    stringBuffer.append(TEXT_93);
d508 3
a510 1
    stringBuffer.append(TEXT_94);
d517 1
a517 1
    stringBuffer.append(TEXT_95);
d519 1
a519 1
    stringBuffer.append(TEXT_96);
d521 1
a521 1
    stringBuffer.append(TEXT_97);
d523 1
a523 1
    stringBuffer.append(TEXT_98);
d525 1
a525 1
    stringBuffer.append(TEXT_99);
d527 1
a527 1
    stringBuffer.append(TEXT_100);
d529 1
a529 1
    stringBuffer.append(TEXT_101);
d531 5
a535 1
    stringBuffer.append(TEXT_102);
d537 1
a537 1
    stringBuffer.append(TEXT_103);
d539 1
a539 1
    stringBuffer.append(TEXT_104);
d541 1
a541 1
    stringBuffer.append(TEXT_105);
d545 11
a555 1
    stringBuffer.append(TEXT_106);
d557 1
a557 1
    stringBuffer.append(TEXT_107);
d559 1
a559 1
    stringBuffer.append(TEXT_108);
d561 1
a561 1
    stringBuffer.append(TEXT_109);
d563 1
a563 1
    stringBuffer.append(TEXT_110);
d565 1
a565 1
    stringBuffer.append(TEXT_111);
d567 1
a567 1
    stringBuffer.append(TEXT_112);
d569 1
a569 1
    stringBuffer.append(TEXT_113);
d571 1
a571 1
    stringBuffer.append(TEXT_114);
d573 5
a577 1
    stringBuffer.append(TEXT_115);
d579 1
a579 1
    stringBuffer.append(TEXT_116);
d581 23
a603 1
    stringBuffer.append(TEXT_117);
d605 3
a607 1
    stringBuffer.append(TEXT_118);
d609 75
a683 1
    stringBuffer.append(TEXT_119);
d685 1
a685 1
    stringBuffer.append(TEXT_120);
@


1.6
log
@[bblajer] #143455 make LiteCompilationTest pass
@
text
@d121 19
a139 16
  protected final String TEXT_102 = ".save(Collections.EMPTY_MAP);" + NL + "\t\t\t\t} catch (IOException e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\tdiagramRoot = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(diagramRoot);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_103 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(Resource resource, Class expectedClass) {" + NL + "\t\tfor(Iterator it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void setFocus() {" + NL + "\t\tgetGraphicalViewer().getControl().setFocus();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic final void createPartControl(Composite parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t// initialize actions" + NL + "\t\tcreateActions();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(Composite parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\tScalableFreeformRootEditPart root = new ScalableFreeformRootEditPart();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_104 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_105 = " printableLayers = (";
  protected final String TEXT_106 = ") root.getLayer(";
  protected final String TEXT_107 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_108 = " extLabelsLayer = new ";
  protected final String TEXT_109 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_110 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_111 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_112 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\tGraphicalViewer viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\tContextMenuProvider provider = new ";
  protected final String TEXT_113 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_114 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\tKeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer);" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), getActionRegistry().getAction(ActionFactory.DELETE.getId()));" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(MouseWheelHandler.KeyGenerator.getKey(SWT.CTRL), MouseWheelZoomHandler.SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_115 = "ContextMenuProvider extends ContextMenuProvider {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_116 = "ContextMenuProvider(EditPartViewer viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(IMenuManager menuManager) {" + NL + "\t        GEFActionConstants.addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.UNDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.REDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.COPY.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.PASTE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.DELETE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, GEFActionConstants.DIRECT_EDIT, GEFActionConstants.GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.SAVE.getId(), GEFActionConstants.GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(IMenuManager menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\tMenuManager submenu = new MenuManager(\"Align\");" + NL + "\t\t\tsubmenu.add(new Separator(GEFActionConstants.MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_LEFT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_CENTER, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_RIGHT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_TOP, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_MIDDLE, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_BOTTOM, GEFActionConstants.MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(GEFActionConstants.GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(IMenuManager menu, String actionId, String menuGroup) {" + NL + "\t\t\tIAction action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_117 = NL;
d479 6
d488 1
a488 1
    stringBuffer.append(TEXT_103);
d490 1
a490 1
    stringBuffer.append(TEXT_104);
d492 1
a492 1
    stringBuffer.append(TEXT_105);
d494 1
a494 1
    stringBuffer.append(TEXT_106);
d496 1
a496 1
    stringBuffer.append(TEXT_107);
d498 1
a498 1
    stringBuffer.append(TEXT_108);
d500 1
a500 1
    stringBuffer.append(TEXT_109);
d502 1
a502 1
    stringBuffer.append(TEXT_110);
d504 1
a504 1
    stringBuffer.append(TEXT_111);
d506 1
a506 1
    stringBuffer.append(TEXT_112);
d508 1
a508 1
    stringBuffer.append(TEXT_113);
d510 1
a510 1
    stringBuffer.append(TEXT_114);
d512 1
a512 1
    stringBuffer.append(TEXT_115);
d514 1
a514 1
    stringBuffer.append(TEXT_116);
d516 1
a516 1
    stringBuffer.append(TEXT_117);
@


1.5
log
@[bblajer] #138430 Lite Generator: Generated code should make use of emf.transaction API
@
text
@d78 26
a103 26
  protected final String TEXT_59 = " ";
  protected final String TEXT_60 = ";" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_61 = " diagram;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean isDirty = false;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PaletteRoot paletteRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PropertySheetPage undoablePropertySheetPage;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup stackActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener commandStackListener = new CommandStackListener() {" + NL + "" + NL + "\t\tpublic void commandStackChanged(EventObject event) {" + NL + "\t\t\tstackActions.update();" + NL + "\t\t\tsetDirty(((CommandStack) event.getSource()).isDirty());" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editPartActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener selectionListener = new ISelectionListener() {" + NL + "" + NL + "\t\tpublic void selectionChanged(IWorkbenchPart part, ISelection selection) {" + NL + "\t\t\teditPartActions.update();" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editorActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ComposedAdapterFactory domainAdapterFactory;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void firePropertyChange(int propertyId) {" + NL + "\t\tsuper.firePropertyChange(propertyId);" + NL + "\t\teditorActions.update();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an action to this editor's <code>ActionRegistry</code>. (This is" + NL + "\t * a helper method.)" + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the action to add." + NL + "\t */" + NL + "\tprotected void addAction(IAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an editor action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * Editor actions are actions that depend and work on the editor." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the editor action" + NL + "\t */" + NL + "\tprotected void addEditorAction(WorkbenchPartAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditorActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>EditPart</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>EditPart</code> actions are actions that depend and work on the" + NL + "\t * selected <code>EditPart</code>s." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>EditPart</code> action" + NL + "\t */" + NL + "\tprotected void addEditPartAction(SelectionAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditPartActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>CommandStack</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>CommandStack</code> actions are actions that depend and work on" + NL + "\t * the <code>CommandStack</code>." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>CommandStack</code> action" + NL + "\t */" + NL + "\tprotected void addStackAction(StackAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\tstackActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createActions() {" + NL + "\t\taddStackAction(new UndoAction(this));" + NL + "\t\taddStackAction(new RedoAction(this));" + NL + "" + NL + "\t\taddEditPartAction(new DeleteAction((IWorkbenchPart) this));" + NL + "\t\taddEditPartAction(new DirectEditAction((IWorkbenchPart) this));" + NL + "" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.LEFT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.RIGHT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.TOP));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.BOTTOM));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.CENTER));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.MIDDLE));" + NL + "" + NL + "\t\taddEditorAction(new SaveAction(this));" + NL + "\t\taddEditorAction(new PrintAction(this));" + NL + "" + NL + "\t\tIAction zoomIn = new ZoomInAction(getZoomManager());" + NL + "\t\tIAction zoomOut = new ZoomOutAction(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t}" + NL;
  protected final String TEXT_62 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_63 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_64 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// remove CommandStackListener" + NL + "\t\tgetCommandStack().removeCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// remove selection listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().removeSelectionListener(getSelectionListener());" + NL + "" + NL + "\t\t// dispose the ActionRegistry (will dispose all actions)" + NL + "\t\tgetActionRegistry().dispose();" + NL + "" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(IProgressMonitor monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (CoreException e) {" + NL + "\t\t\tErrorDialog.openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_65 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void save(IProgressMonitor progressMonitor) throws CoreException {" + NL + "\t\tif (progressMonitor == null) {" + NL + "\t\t\tprogressMonitor = new NullProgressMonitor();" + NL + "\t\t}" + NL + "\t\tprogressMonitor.beginTask(\"Saving\", getEditingDomain().getResourceSet().getResources().size());" + NL + "\t\ttry {" + NL + "\t\t\tfor(Iterator it = getEditingDomain().getResourceSet().getResources().iterator(); it.hasNext(); ) {" + NL + "\t\t\t\tResource next = (Resource)it.next();" + NL + "\t\t\t\tnext.save(Collections.EMPTY_MAP);" + NL + "\t\t\t\tprogressMonitor.worked(1);" + NL + "\t\t\t}" + NL + "\t\t} catch (IOException e) {" + NL + "\t\t\tIStatus status = new Status(IStatus.ERROR, ";
  protected final String TEXT_66 = ".ID, 0, \"Error writing file.\", e);" + NL + "\t\t\tthrow new CoreException(status);" + NL + "\t\t} finally {" + NL + "\t\t\tprogressMonitor.done();" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isSaveAsAllowed() {" + NL + "\t\t// TODO: should be allowed." + NL + "\t\treturn false;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSaveAs() {" + NL + "\t\t// TODO: Implement." + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Object getAdapter(Class type) {" + NL + "\t\tif (type == IPropertySheetPage.class) {" + NL + "\t\t\treturn getPropertySheetPage();" + NL + "\t\t} else if (type == IContentOutlinePage.class) {" + NL + "\t\t\treturn getOutlinePage();" + NL + "\t\t} else if (type == ZoomManager.class) {" + NL + "\t\t\treturn getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn super.getAdapter(type);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ZoomManager getZoomManager() {" + NL + "\t\treturn getZoomManager(getGraphicalViewer());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ZoomManager getZoomManager(GraphicalViewer viewer) {" + NL + "\t\t// get zoom manager from root edit part" + NL + "\t\tRootEditPart rootEditPart = viewer.getRootEditPart();" + NL + "\t\tZoomManager zoomManager = null;" + NL + "\t\tif (rootEditPart instanceof ScalableFreeformRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableFreeformRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t} else if (rootEditPart instanceof ScalableRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn zoomManager;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener getStackActionsListener() {" + NL + "\t\treturn commandStackListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected IContentOutlinePage getOutlinePage() {" + NL + "\t\t//TODO: outline page missing" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PaletteRoot getPaletteRoot() {" + NL + "\t\tif (paletteRoot == null) {" + NL + "\t\t\tpaletteRoot = new PaletteRoot();";
  protected final String TEXT_67 = NL + "\t\t\tnew ";
  protected final String TEXT_68 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_69 = NL + "\t\t}" + NL + "\t\treturn paletteRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PropertySheetPage getPropertySheetPage() {" + NL + "\t\tif (undoablePropertySheetPage == null) {" + NL + "\t\t\tundoablePropertySheetPage = new PropertySheetPage();" + NL + "\t\t\tUndoablePropertySheetEntry rootEntry = new UndoablePropertySheetEntry(getCommandStack());" + NL + "\t\t\trootEntry.setPropertySourceProvider(new ";
  protected final String TEXT_70 = "(getDomainAdapterFactory()));" + NL + "\t\t\tundoablePropertySheetPage.setRootEntry(rootEntry);" + NL + "\t\t}" + NL + "" + NL + "\t\treturn undoablePropertySheetPage;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener getSelectionListener() {" + NL + "\t\treturn selectionListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_71 = " get";
  protected final String TEXT_72 = "() {" + NL + "\t\treturn ";
  protected final String TEXT_73 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Diagram getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(IEditorSite site, IEditorInput input) throws PartInitException {" + NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsetSite(site);" + NL + "\t\tsetInput(input);" + NL + "\t\tsetEditDomain(new DefaultEditDomain(this));" + NL + "" + NL + "\t\t// validate" + NL + "\t\tif (get";
  protected final String TEXT_74 = "() == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "" + NL + "\t\t// add CommandStackListener" + NL + "\t\tgetCommandStack().addCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// add selection change listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().addSelectionListener(getSelectionListener());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(IEditorInput input)  {";
  protected final String TEXT_75 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_76 = ") {" + NL + "\t\t\t";
  protected final String TEXT_77 = " resource = ((";
  protected final String TEXT_78 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_79 = NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_80 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_81 = ") {" + NL + "\t\t\t";
  protected final String TEXT_82 = " resource = ((";
  protected final String TEXT_83 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_84 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate URI getURIFromInput(IEditorInput input) {";
d105 32
a136 46
  protected final String TEXT_86 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_87 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_88 = ") {" + NL + "\t\t\treturn URI.createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}";
  protected final String TEXT_89 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_90 = ") {" + NL + "\t\t\treturn URI.createPlatformResourceURI(((IFileEditorInput)input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_91 = NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isDirty() {" + NL + "\t\treturn isDirty;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void setDirty(boolean dirty) {" + NL + "\t\tif (isDirty != dirty) {" + NL + "\t\t\tisDirty = dirty;" + NL + "\t\t\tfirePropertyChange(IEditorPart.PROP_DIRTY);" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected TransactionalEditingDomain getEditingDomain() {" + NL + "\t\tif (editingDomain == null) {" + NL + "\t\t\teditingDomain = ";
  protected final String TEXT_92 = ".INSTANCE.createEditingDomain();" + NL + "\t\t\t//editingDomain.setAdapterFactory(getDomainAdapterFactory());" + NL + "\t\t\teditingDomain.getResourceSet().eAdapters().add(new AdapterFactoryEditingDomain.EditingDomainProvider(editingDomain));" + NL + "\t\t}" + NL + "\t\treturn editingDomain;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate AdapterFactory getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\tList factories = new ArrayList();" + NL + "\t\t\tfactories.add(new ResourceItemProviderAdapterFactory());";
  protected final String TEXT_93 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_94 = "());";
  protected final String TEXT_95 = NL + "\t\t\tfactories.add(new ReflectiveItemProviderAdapterFactory());" + NL + "\t\t\tfactories.add(new NotationItemProviderAdapterFactory());" + NL + "\t\t\tdomainAdapterFactory = new ComposedAdapterFactory(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(URI diagramFile) {" + NL + "\t\t";
  protected final String TEXT_96 = " = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tTransactionalEditingDomain editingDomain = getEditingDomain();" + NL + "\t\tResourceSet resourceSet = editingDomain.getResourceSet();" + NL + "\t\tResource diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (Diagram) findInResource(diagramResource, Diagram.class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = NotationFactory.eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(Collections.EMPTY_MAP);" + NL + "\t\t\t} catch (IOException e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\t";
  protected final String TEXT_97 = " = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_98 = " = (";
  protected final String TEXT_99 = ") diagram.getElement();" + NL + "\t\tif (";
  protected final String TEXT_100 = " == null) {";
  protected final String TEXT_101 = NL + "\t\t\tURI modelFile = ";
  protected final String TEXT_102 = ".getModelFileURI(diagramFile);" + NL + "\t\t\tResource modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\tif (modelResource == null) {" + NL + "\t\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t\t}";
  protected final String TEXT_103 = NL + "\t\t\t";
  protected final String TEXT_104 = " = (";
  protected final String TEXT_105 = ") findInResource(";
  protected final String TEXT_106 = ", ";
  protected final String TEXT_107 = ".class);" + NL + "\t\t\tif (";
  protected final String TEXT_108 = " == null) {" + NL + "\t\t\t\t";
  protected final String TEXT_109 = " = ";
  protected final String TEXT_110 = ".eINSTANCE.create";
  protected final String TEXT_111 = "();" + NL + "\t\t\t\t";
  protected final String TEXT_112 = ".getContents().add(0, ";
  protected final String TEXT_113 = ");" + NL + "\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\t";
  protected final String TEXT_114 = ".save(Collections.EMPTY_MAP);" + NL + "\t\t\t\t} catch (IOException e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t";
  protected final String TEXT_115 = " = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(";
  protected final String TEXT_116 = ");" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_117 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(Resource resource, Class expectedClass) {" + NL + "\t\tfor(Iterator it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void setFocus() {" + NL + "\t\tgetGraphicalViewer().getControl().setFocus();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic final void createPartControl(Composite parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t// initialize actions" + NL + "\t\tcreateActions();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(Composite parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\tScalableFreeformRootEditPart root = new ScalableFreeformRootEditPart();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_118 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_119 = " printableLayers = (";
  protected final String TEXT_120 = ") root.getLayer(";
  protected final String TEXT_121 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_122 = " extLabelsLayer = new ";
  protected final String TEXT_123 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_124 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_125 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_126 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\tGraphicalViewer viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\tContextMenuProvider provider = new ";
  protected final String TEXT_127 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_128 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\tKeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer);" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), getActionRegistry().getAction(ActionFactory.DELETE.getId()));" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(MouseWheelHandler.KeyGenerator.getKey(SWT.CTRL), MouseWheelZoomHandler.SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_129 = "ContextMenuProvider extends ContextMenuProvider {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_130 = "ContextMenuProvider(EditPartViewer viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(IMenuManager menuManager) {" + NL + "\t        GEFActionConstants.addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.UNDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.REDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.COPY.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.PASTE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.DELETE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, GEFActionConstants.DIRECT_EDIT, GEFActionConstants.GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.SAVE.getId(), GEFActionConstants.GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(IMenuManager menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\tMenuManager submenu = new MenuManager(\"Align\");" + NL + "\t\t\tsubmenu.add(new Separator(GEFActionConstants.MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_LEFT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_CENTER, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_RIGHT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_TOP, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_MIDDLE, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_BOTTOM, GEFActionConstants.MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(GEFActionConstants.GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(IMenuManager menu, String actionId, String menuGroup) {" + NL + "\t\t\tIAction action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_131 = NL;
d355 1
a355 1
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
a356 2
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram"));
    stringBuffer.append(TEXT_61);
d360 2
a362 2
    stringBuffer.append(genEditor.getClassName());
    stringBuffer.append(TEXT_63);
d366 2
d369 1
a369 1
    stringBuffer.append(genDiagram.getEditorGen().getDomainGenModel().getModelName());
a370 2
    stringBuffer.append(importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()));
    stringBuffer.append(TEXT_66);
d376 2
a378 2
    stringBuffer.append(importManager.getImportedName(palette.getFactoryQualifiedClassName()));
    stringBuffer.append(TEXT_68);
d383 2
d386 1
a386 1
    stringBuffer.append(importManager.getImportedName(genDiagram.getPropertyProviderQualifiedClassName()));
a387 8
    stringBuffer.append(importManager.getImportedName(genDiagram.getDomainDiagramElement().getQualifiedInterfaceName()));
    stringBuffer.append(TEXT_71);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getClassifierAccessorName());
    stringBuffer.append(TEXT_72);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_73);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getClassifierAccessorName());
    stringBuffer.append(TEXT_74);
d391 1
a391 1
    stringBuffer.append(TEXT_75);
d393 1
a393 1
    stringBuffer.append(TEXT_76);
d395 1
a395 1
    stringBuffer.append(TEXT_77);
d397 1
a397 1
    stringBuffer.append(TEXT_78);
d401 1
a401 1
    stringBuffer.append(TEXT_79);
d405 1
a405 1
    stringBuffer.append(TEXT_80);
d407 1
a407 1
    stringBuffer.append(TEXT_81);
d409 1
a409 1
    stringBuffer.append(TEXT_82);
d411 1
a411 1
    stringBuffer.append(TEXT_83);
d415 1
a415 1
    stringBuffer.append(TEXT_84);
d417 1
a417 1
    stringBuffer.append(TEXT_85);
d419 1
a419 1
    stringBuffer.append(TEXT_86);
d421 1
a421 1
    stringBuffer.append(TEXT_87);
d423 1
a423 1
    stringBuffer.append(TEXT_88);
d425 1
a425 1
    stringBuffer.append(TEXT_89);
d427 1
a427 1
    stringBuffer.append(TEXT_90);
d429 1
a429 1
    stringBuffer.append(TEXT_91);
d431 1
a431 1
    stringBuffer.append(TEXT_92);
d437 1
a437 1
    stringBuffer.append(TEXT_93);
d439 1
a439 1
    stringBuffer.append(TEXT_94);
d441 1
a441 7
    stringBuffer.append(TEXT_95);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_96);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_97);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_98);
d443 1
a443 3
    stringBuffer.append(TEXT_99);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_100);
d452 1
a452 1
    stringBuffer.append(TEXT_101);
d454 1
a454 1
    stringBuffer.append(TEXT_102);
d461 1
a461 3
    stringBuffer.append(TEXT_103);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_104);
d463 1
a463 1
    stringBuffer.append(TEXT_105);
d465 1
a465 1
    stringBuffer.append(TEXT_106);
d467 1
a467 5
    stringBuffer.append(TEXT_107);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_108);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_109);
d469 1
a469 1
    stringBuffer.append(TEXT_110);
d471 1
a471 1
    stringBuffer.append(TEXT_111);
d473 1
a473 3
    stringBuffer.append(TEXT_112);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_113);
d475 1
a475 5
    stringBuffer.append(TEXT_114);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_115);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
    stringBuffer.append(TEXT_116);
d479 1
a479 1
    stringBuffer.append(TEXT_117);
d481 1
a481 1
    stringBuffer.append(TEXT_118);
d483 1
a483 1
    stringBuffer.append(TEXT_119);
d485 1
a485 1
    stringBuffer.append(TEXT_120);
d487 1
a487 1
    stringBuffer.append(TEXT_121);
d489 1
a489 1
    stringBuffer.append(TEXT_122);
d491 1
a491 1
    stringBuffer.append(TEXT_123);
d493 1
a493 1
    stringBuffer.append(TEXT_124);
d495 1
a495 1
    stringBuffer.append(TEXT_125);
d497 1
a497 1
    stringBuffer.append(TEXT_126);
d499 1
a499 1
    stringBuffer.append(TEXT_127);
d501 1
a501 1
    stringBuffer.append(TEXT_128);
d503 1
a503 1
    stringBuffer.append(TEXT_129);
d505 1
a505 1
    stringBuffer.append(TEXT_130);
d507 1
a507 1
    stringBuffer.append(TEXT_131);
@


1.4
log
@[bblajer] #141743 ClassCastException while executing undo after setting property/restoring default value in the property sheet
@
text
@d77 1
a77 1
  protected final String TEXT_58 = "();" + NL + "\t\t\tcommand.add(cc);" + NL + "\t" + NL + "\t\t\tSetValueCommand setCommand;" + NL + "\t\t\tfor (int i = 0; i < getValues().length; i++) {" + NL + "\t\t\t\tsetCommand = new SetValueCommand(child.getDisplayName());" + NL + "\t\t\t\tsetCommand.setTarget(getPropertySource(getValues()[i]));" + NL + "\t\t\t\tsetCommand.setPropertyId(child.getDescriptor().getId());" + NL + "\t\t\t\tsetCommand.setPropertyValue(child.getValues()[i]);" + NL + "\t\t\t\tcc.add(setCommand);" + NL + "\t\t\t}" + NL + "\t" + NL + "\t\t\t// inform our parent" + NL + "\t\t\tif (getParent() != null)" + NL + "\t\t\t\t((UndoablePropertySheetEntry)getParent()).valueChanged(this, command);" + NL + "\t\t\telse {" + NL + "\t\t\t\t//I am the root entry" + NL + "\t\t\t\tstack.execute(command);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate EditingDomain editingDomain;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
d110 41
a150 40
  protected final String TEXT_91 = NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isDirty() {" + NL + "\t\treturn isDirty;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void setDirty(boolean dirty) {" + NL + "\t\tif (isDirty != dirty) {" + NL + "\t\t\tisDirty = dirty;" + NL + "\t\t\tfirePropertyChange(IEditorPart.PROP_DIRTY);" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected EditingDomain getEditingDomain() {" + NL + "\t\tif (editingDomain == null) {" + NL + "\t\t\tBasicCommandStack commandStack = new BasicCommandStack();" + NL + "\t\t\teditingDomain = new AdapterFactoryEditingDomain(getDomainAdapterFactory(), commandStack, new HashMap());" + NL + "\t\t\teditingDomain.getResourceSet().eAdapters().add(new AdapterFactoryEditingDomain.EditingDomainProvider(editingDomain));" + NL + "\t\t}" + NL + "\t\treturn editingDomain;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate AdapterFactory getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\tList factories = new ArrayList();" + NL + "\t\t\tfactories.add(new ResourceItemProviderAdapterFactory());";
  protected final String TEXT_92 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_93 = "());";
  protected final String TEXT_94 = NL + "\t\t\tfactories.add(new ReflectiveItemProviderAdapterFactory());" + NL + "\t\t\tfactories.add(new NotationItemProviderAdapterFactory());" + NL + "\t\t\tdomainAdapterFactory = new ComposedAdapterFactory(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(URI diagramFile) {" + NL + "\t\t";
  protected final String TEXT_95 = " = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tEditingDomain editingDomain = getEditingDomain();" + NL + "\t\tResourceSet resourceSet = editingDomain.getResourceSet();" + NL + "\t\tResource diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (Diagram) findInResource(diagramResource, Diagram.class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = NotationFactory.eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(Collections.EMPTY_MAP);" + NL + "\t\t\t} catch (IOException e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\t";
  protected final String TEXT_96 = " = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_97 = " = (";
  protected final String TEXT_98 = ") diagram.getElement();" + NL + "\t\tif (";
  protected final String TEXT_99 = " == null) {";
  protected final String TEXT_100 = NL + "\t\t\tURI modelFile = ";
  protected final String TEXT_101 = ".getModelFileURI(diagramFile);" + NL + "\t\t\tResource modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\tif (modelResource == null) {" + NL + "\t\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t\t}";
  protected final String TEXT_102 = NL + "\t\t\t";
  protected final String TEXT_103 = " = (";
  protected final String TEXT_104 = ") findInResource(";
  protected final String TEXT_105 = ", ";
  protected final String TEXT_106 = ".class);" + NL + "\t\t\tif (";
  protected final String TEXT_107 = " == null) {" + NL + "\t\t\t\t";
  protected final String TEXT_108 = " = ";
  protected final String TEXT_109 = ".eINSTANCE.create";
  protected final String TEXT_110 = "();" + NL + "\t\t\t\t";
  protected final String TEXT_111 = ".getContents().add(0, ";
  protected final String TEXT_112 = ");" + NL + "\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\t";
  protected final String TEXT_113 = ".save(Collections.EMPTY_MAP);" + NL + "\t\t\t\t} catch (IOException e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t";
  protected final String TEXT_114 = " = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(";
  protected final String TEXT_115 = ");" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_116 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(Resource resource, Class expectedClass) {" + NL + "\t\tfor(Iterator it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void setFocus() {" + NL + "\t\tgetGraphicalViewer().getControl().setFocus();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic final void createPartControl(Composite parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t// initialize actions" + NL + "\t\tcreateActions();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(Composite parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\tScalableFreeformRootEditPart root = new ScalableFreeformRootEditPart();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_117 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_118 = " printableLayers = (";
  protected final String TEXT_119 = ") root.getLayer(";
  protected final String TEXT_120 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_121 = " extLabelsLayer = new ";
  protected final String TEXT_122 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_123 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_124 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_125 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\tGraphicalViewer viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\tContextMenuProvider provider = new ";
  protected final String TEXT_126 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_127 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\tKeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer);" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), getActionRegistry().getAction(ActionFactory.DELETE.getId()));" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(MouseWheelHandler.KeyGenerator.getKey(SWT.CTRL), MouseWheelZoomHandler.SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_128 = "ContextMenuProvider extends ContextMenuProvider {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_129 = "ContextMenuProvider(EditPartViewer viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(IMenuManager menuManager) {" + NL + "\t        GEFActionConstants.addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.UNDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.REDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.COPY.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.PASTE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.DELETE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, GEFActionConstants.DIRECT_EDIT, GEFActionConstants.GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.SAVE.getId(), GEFActionConstants.GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(IMenuManager menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\tMenuManager submenu = new MenuManager(\"Align\");" + NL + "\t\t\tsubmenu.add(new Separator(GEFActionConstants.MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_LEFT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_CENTER, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_RIGHT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_TOP, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_MIDDLE, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_BOTTOM, GEFActionConstants.MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(GEFActionConstants.GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(IMenuManager menu, String actionId, String menuGroup) {" + NL + "\t\t\tIAction action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_130 = NL;
a187 1
importManager.addImport("org.eclipse.emf.common.command.BasicCommandStack");
d192 1
a192 1
importManager.addImport("org.eclipse.emf.edit.domain.EditingDomain");
d452 2
d459 1
a459 1
    stringBuffer.append(TEXT_92);
d461 1
a461 1
    stringBuffer.append(TEXT_93);
a462 2
    stringBuffer.append(TEXT_94);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
d468 2
d471 1
a471 1
    stringBuffer.append(TEXT_98);
d473 1
a473 1
    stringBuffer.append(TEXT_99);
d482 1
a482 1
    stringBuffer.append(TEXT_100);
d484 1
a484 1
    stringBuffer.append(TEXT_101);
d491 1
a491 1
    stringBuffer.append(TEXT_102);
d493 1
a493 1
    stringBuffer.append(TEXT_103);
d495 1
a495 1
    stringBuffer.append(TEXT_104);
d497 1
a497 1
    stringBuffer.append(TEXT_105);
a498 2
    stringBuffer.append(TEXT_106);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
d502 2
d505 1
a505 1
    stringBuffer.append(TEXT_109);
d507 1
a507 1
    stringBuffer.append(TEXT_110);
d509 1
a509 1
    stringBuffer.append(TEXT_111);
d511 1
a511 1
    stringBuffer.append(TEXT_112);
a512 2
    stringBuffer.append(TEXT_113);
    stringBuffer.append(genDiagram.getDomainDiagramElement().getSafeUncapName());
d516 2
d521 1
a521 1
    stringBuffer.append(TEXT_116);
a522 2
    stringBuffer.append(TEXT_117);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.LayeredPane"));
d526 2
a528 2
    stringBuffer.append(TEXT_120);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.FreeformLayer"));
d532 2
d535 1
a535 1
    stringBuffer.append(TEXT_123);
d537 1
a537 1
    stringBuffer.append(TEXT_124);
d539 1
a539 1
    stringBuffer.append(TEXT_125);
d541 1
a541 1
    stringBuffer.append(TEXT_126);
a542 2
    stringBuffer.append(TEXT_127);
    stringBuffer.append(genEditor.getClassName());
d546 2
d549 1
a549 1
    stringBuffer.append(TEXT_130);
@


1.3
log
@[bblajer] #138978 NPE while reopening a pure-GEF diagram which contains external labels
@
text
@d38 112
a149 75
  protected final String TEXT_19 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class UpdatableActionGroup {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void addAction(UpdateAction action) {" + NL + "\t\t\tassert action != null;" + NL + "\t\t\tmyActions.add(action);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void removeAction(UpdateAction action) {" + NL + "\t\t\tmyActions.remove(action);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void update() {" + NL + "\t\t\tfor (Iterator it = myActions.iterator(); it.hasNext();) {" + NL + "\t\t\t\tUpdateAction next = (UpdateAction) it.next();" + NL + "\t\t\t\tnext.update();" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ArrayList myActions = new ArrayList();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate EditingDomain editingDomain;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_20 = " ";
  protected final String TEXT_21 = ";" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_22 = " diagram;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean isDirty = false;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PaletteRoot paletteRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PropertySheetPage undoablePropertySheetPage;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup stackActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener commandStackListener = new CommandStackListener() {" + NL + "" + NL + "\t\tpublic void commandStackChanged(EventObject event) {" + NL + "\t\t\tstackActions.update();" + NL + "\t\t\tsetDirty(((CommandStack) event.getSource()).isDirty());" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editPartActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener selectionListener = new ISelectionListener() {" + NL + "" + NL + "\t\tpublic void selectionChanged(IWorkbenchPart part, ISelection selection) {" + NL + "\t\t\teditPartActions.update();" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editorActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ComposedAdapterFactory domainAdapterFactory;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void firePropertyChange(int propertyId) {" + NL + "\t\tsuper.firePropertyChange(propertyId);" + NL + "\t\teditorActions.update();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an action to this editor's <code>ActionRegistry</code>. (This is" + NL + "\t * a helper method.)" + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the action to add." + NL + "\t */" + NL + "\tprotected void addAction(IAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an editor action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * Editor actions are actions that depend and work on the editor." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the editor action" + NL + "\t */" + NL + "\tprotected void addEditorAction(WorkbenchPartAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditorActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>EditPart</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>EditPart</code> actions are actions that depend and work on the" + NL + "\t * selected <code>EditPart</code>s." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>EditPart</code> action" + NL + "\t */" + NL + "\tprotected void addEditPartAction(SelectionAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditPartActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>CommandStack</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>CommandStack</code> actions are actions that depend and work on" + NL + "\t * the <code>CommandStack</code>." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>CommandStack</code> action" + NL + "\t */" + NL + "\tprotected void addStackAction(StackAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\tstackActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createActions() {" + NL + "\t\taddStackAction(new UndoAction(this));" + NL + "\t\taddStackAction(new RedoAction(this));" + NL + "" + NL + "\t\taddEditPartAction(new DeleteAction((IWorkbenchPart) this));" + NL + "\t\taddEditPartAction(new DirectEditAction((IWorkbenchPart) this));" + NL + "" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.LEFT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.RIGHT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.TOP));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.BOTTOM));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.CENTER));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.MIDDLE));" + NL + "" + NL + "\t\taddEditorAction(new SaveAction(this));" + NL + "\t\taddEditorAction(new PrintAction(this));" + NL + "" + NL + "\t\tIAction zoomIn = new ZoomInAction(getZoomManager());" + NL + "\t\tIAction zoomOut = new ZoomOutAction(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t}" + NL;
  protected final String TEXT_23 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tvoid closeEditor() {" + NL + "\t\tgetSite().getShell().getDisplay().syncExec(new Runnable() {" + NL + "\t\t\tpublic void run() {" + NL + "\t\t\t\tgetSite().getPage().closeEditor(";
  protected final String TEXT_24 = ".this, false);" + NL + "\t\t\t}" + NL + "\t\t});" + NL + "\t}";
  protected final String TEXT_25 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// remove CommandStackListener" + NL + "\t\tgetCommandStack().removeCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// remove selection listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().removeSelectionListener(getSelectionListener());" + NL + "" + NL + "\t\t// dispose the ActionRegistry (will dispose all actions)" + NL + "\t\tgetActionRegistry().dispose();" + NL + "" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(IProgressMonitor monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (CoreException e) {" + NL + "\t\t\tErrorDialog.openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_26 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void save(IProgressMonitor progressMonitor) throws CoreException {" + NL + "\t\tif (progressMonitor == null) {" + NL + "\t\t\tprogressMonitor = new NullProgressMonitor();" + NL + "\t\t}" + NL + "\t\tprogressMonitor.beginTask(\"Saving\", getEditingDomain().getResourceSet().getResources().size());" + NL + "\t\ttry {" + NL + "\t\t\tfor(Iterator it = getEditingDomain().getResourceSet().getResources().iterator(); it.hasNext(); ) {" + NL + "\t\t\t\tResource next = (Resource)it.next();" + NL + "\t\t\t\tnext.save(Collections.EMPTY_MAP);" + NL + "\t\t\t\tprogressMonitor.worked(1);" + NL + "\t\t\t}" + NL + "\t\t} catch (IOException e) {" + NL + "\t\t\tIStatus status = new Status(IStatus.ERROR, ";
  protected final String TEXT_27 = ".ID, 0, \"Error writing file.\", e);" + NL + "\t\t\tthrow new CoreException(status);" + NL + "\t\t} finally {" + NL + "\t\t\tprogressMonitor.done();" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isSaveAsAllowed() {" + NL + "\t\t// TODO: should be allowed." + NL + "\t\treturn false;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSaveAs() {" + NL + "\t\t// TODO: Implement." + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Object getAdapter(Class type) {" + NL + "\t\tif (type == IPropertySheetPage.class) {" + NL + "\t\t\treturn getPropertySheetPage();" + NL + "\t\t} else if (type == IContentOutlinePage.class) {" + NL + "\t\t\treturn getOutlinePage();" + NL + "\t\t} else if (type == ZoomManager.class) {" + NL + "\t\t\treturn getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn super.getAdapter(type);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ZoomManager getZoomManager() {" + NL + "\t\treturn getZoomManager(getGraphicalViewer());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ZoomManager getZoomManager(GraphicalViewer viewer) {" + NL + "\t\t// get zoom manager from root edit part" + NL + "\t\tRootEditPart rootEditPart = viewer.getRootEditPart();" + NL + "\t\tZoomManager zoomManager = null;" + NL + "\t\tif (rootEditPart instanceof ScalableFreeformRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableFreeformRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t} else if (rootEditPart instanceof ScalableRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn zoomManager;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener getStackActionsListener() {" + NL + "\t\treturn commandStackListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected IContentOutlinePage getOutlinePage() {" + NL + "\t\t//TODO: outline page missing" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PaletteRoot getPaletteRoot() {" + NL + "\t\tif (paletteRoot == null) {" + NL + "\t\t\tpaletteRoot = new PaletteRoot();";
  protected final String TEXT_28 = NL + "\t\t\tnew ";
  protected final String TEXT_29 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_30 = NL + "\t\t}" + NL + "\t\treturn paletteRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PropertySheetPage getPropertySheetPage() {" + NL + "\t\tif (undoablePropertySheetPage == null) {" + NL + "\t\t\tundoablePropertySheetPage = new PropertySheetPage();" + NL + "\t\t\t";
  protected final String TEXT_31 = " rootEntry = new ";
  protected final String TEXT_32 = "(getCommandStack());" + NL + "\t\t\trootEntry.setPropertySourceProvider(new ";
  protected final String TEXT_33 = "(getDomainAdapterFactory()));" + NL + "\t\t\tundoablePropertySheetPage.setRootEntry(rootEntry);" + NL + "\t\t}" + NL + "" + NL + "\t\treturn undoablePropertySheetPage;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener getSelectionListener() {" + NL + "\t\treturn selectionListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_34 = " get";
  protected final String TEXT_35 = "() {" + NL + "\t\treturn ";
  protected final String TEXT_36 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Diagram getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(IEditorSite site, IEditorInput input) throws PartInitException {" + NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsetSite(site);" + NL + "\t\tsetInput(input);" + NL + "\t\tsetEditDomain(new DefaultEditDomain(this));" + NL + "" + NL + "\t\t// validate" + NL + "\t\tif (get";
  protected final String TEXT_37 = "() == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "" + NL + "\t\t// add CommandStackListener" + NL + "\t\tgetCommandStack().addCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// add selection change listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().addSelectionListener(getSelectionListener());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(IEditorInput input)  {";
  protected final String TEXT_38 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_39 = ") {" + NL + "\t\t\t";
  protected final String TEXT_40 = " resource = ((";
  protected final String TEXT_41 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().removeResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_42 = NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsuper.setInput(input);";
  protected final String TEXT_43 = NL + "\t\tif (getEditorInput() instanceof ";
  protected final String TEXT_44 = ") {" + NL + "\t\t\t";
  protected final String TEXT_45 = " resource = ((";
  protected final String TEXT_46 = ") getEditorInput()).getFile();" + NL + "\t\t\tresource.getWorkspace().addResourceChangeListener(getResourceTracker());" + NL + "\t\t}";
  protected final String TEXT_47 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate URI getURIFromInput(IEditorInput input) {";
  protected final String TEXT_48 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_49 = ") {" + NL + "\t\t\treturn ((";
  protected final String TEXT_50 = ") input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof ";
  protected final String TEXT_51 = ") {" + NL + "\t\t\treturn URI.createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}";
  protected final String TEXT_52 = NL + "\t\tif (input instanceof ";
  protected final String TEXT_53 = ") {" + NL + "\t\t\treturn URI.createPlatformResourceURI(((IFileEditorInput)input).getFile().getFullPath().toString());" + NL + "\t\t}";
  protected final String TEXT_54 = NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isDirty() {" + NL + "\t\treturn isDirty;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void setDirty(boolean dirty) {" + NL + "\t\tif (isDirty != dirty) {" + NL + "\t\t\tisDirty = dirty;" + NL + "\t\t\tfirePropertyChange(IEditorPart.PROP_DIRTY);" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected EditingDomain getEditingDomain() {" + NL + "\t\tif (editingDomain == null) {" + NL + "\t\t\tBasicCommandStack commandStack = new BasicCommandStack();" + NL + "\t\t\teditingDomain = new AdapterFactoryEditingDomain(getDomainAdapterFactory(), commandStack, new HashMap());" + NL + "\t\t\teditingDomain.getResourceSet().eAdapters().add(new AdapterFactoryEditingDomain.EditingDomainProvider(editingDomain));" + NL + "\t\t}" + NL + "\t\treturn editingDomain;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate AdapterFactory getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\tList factories = new ArrayList();" + NL + "\t\t\tfactories.add(new ResourceItemProviderAdapterFactory());";
  protected final String TEXT_55 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_56 = "());";
  protected final String TEXT_57 = NL + "\t\t\tfactories.add(new ReflectiveItemProviderAdapterFactory());" + NL + "\t\t\tfactories.add(new NotationItemProviderAdapterFactory());" + NL + "\t\t\tdomainAdapterFactory = new ComposedAdapterFactory(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(URI diagramFile) {" + NL + "\t\t";
  protected final String TEXT_58 = " = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tEditingDomain editingDomain = getEditingDomain();" + NL + "\t\tResourceSet resourceSet = editingDomain.getResourceSet();" + NL + "\t\tResource diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (Diagram) findInResource(diagramResource, Diagram.class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = NotationFactory.eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(Collections.EMPTY_MAP);" + NL + "\t\t\t} catch (IOException e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\t";
  protected final String TEXT_59 = " = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\t";
  protected final String TEXT_60 = " = (";
  protected final String TEXT_61 = ") diagram.getElement();" + NL + "\t\tif (";
  protected final String TEXT_62 = " == null) {";
  protected final String TEXT_63 = NL + "\t\t\tURI modelFile = ";
  protected final String TEXT_64 = ".getModelFileURI(diagramFile);" + NL + "\t\t\tResource modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\t\tif (modelResource == null) {" + NL + "\t\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t\t}";
  protected final String TEXT_65 = NL + "\t\t\t";
  protected final String TEXT_66 = " = (";
  protected final String TEXT_67 = ") findInResource(";
  protected final String TEXT_68 = ", ";
  protected final String TEXT_69 = ".class);" + NL + "\t\t\tif (";
  protected final String TEXT_70 = " == null) {" + NL + "\t\t\t\t";
  protected final String TEXT_71 = " = ";
  protected final String TEXT_72 = ".eINSTANCE.create";
  protected final String TEXT_73 = "();" + NL + "\t\t\t\t";
  protected final String TEXT_74 = ".getContents().add(0, ";
  protected final String TEXT_75 = ");" + NL + "\t\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\t\ttry {" + NL + "\t\t\t\t\t";
  protected final String TEXT_76 = ".save(Collections.EMPTY_MAP);" + NL + "\t\t\t\t} catch (IOException e) {" + NL + "\t\t\t\t\tdiagram = null;" + NL + "\t\t\t\t\t";
  protected final String TEXT_77 = " = null;" + NL + "\t\t\t\t\treturn;" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\t\tdiagram.setElement(";
  protected final String TEXT_78 = ");" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_79 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(Resource resource, Class expectedClass) {" + NL + "\t\tfor(Iterator it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void setFocus() {" + NL + "\t\tgetGraphicalViewer().getControl().setFocus();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic final void createPartControl(Composite parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t// initialize actions" + NL + "\t\tcreateActions();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(Composite parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\tScalableFreeformRootEditPart root = new ScalableFreeformRootEditPart();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_80 = "());" + NL + "" + NL + "\t\t";
  protected final String TEXT_81 = " printableLayers = (";
  protected final String TEXT_82 = ") root.getLayer(";
  protected final String TEXT_83 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_84 = " extLabelsLayer = new ";
  protected final String TEXT_85 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_86 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_87 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_88 = ".PRIMARY_LAYER);" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\tGraphicalViewer viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\tContextMenuProvider provider = new ";
  protected final String TEXT_89 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_90 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\tKeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer);" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), getActionRegistry().getAction(ActionFactory.DELETE.getId()));" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(MouseWheelHandler.KeyGenerator.getKey(SWT.CTRL), MouseWheelZoomHandler.SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_91 = "ContextMenuProvider extends ContextMenuProvider {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_92 = "ContextMenuProvider(EditPartViewer viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(IMenuManager menuManager) {" + NL + "\t        GEFActionConstants.addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.UNDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.REDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.COPY.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.PASTE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.DELETE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, GEFActionConstants.DIRECT_EDIT, GEFActionConstants.GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.SAVE.getId(), GEFActionConstants.GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(IMenuManager menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\tMenuManager submenu = new MenuManager(\"Align\");" + NL + "\t\t\tsubmenu.add(new Separator(GEFActionConstants.MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_LEFT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_CENTER, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_RIGHT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_TOP, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_MIDDLE, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_BOTTOM, GEFActionConstants.MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(GEFActionConstants.GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(IMenuManager menu, String actionId, String menuGroup) {" + NL + "\t\t\tIAction action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_93 = NL;
d164 9
d289 78
d368 1
a368 1
    stringBuffer.append(TEXT_20);
d370 1
a370 1
    stringBuffer.append(TEXT_21);
d372 1
a372 1
    stringBuffer.append(TEXT_22);
d376 1
a376 1
    stringBuffer.append(TEXT_23);
d378 1
a378 1
    stringBuffer.append(TEXT_24);
d382 1
a382 1
    stringBuffer.append(TEXT_25);
d384 1
a384 1
    stringBuffer.append(TEXT_26);
d386 1
a386 1
    stringBuffer.append(TEXT_27);
d392 1
a392 1
    stringBuffer.append(TEXT_28);
d394 1
a394 1
    stringBuffer.append(TEXT_29);
d399 1
a399 5
    stringBuffer.append(TEXT_30);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.properties.UndoablePropertySheetEntry"));
    stringBuffer.append(TEXT_31);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gef.ui.properties.UndoablePropertySheetEntry"));
    stringBuffer.append(TEXT_32);
d401 1
a401 1
    stringBuffer.append(TEXT_33);
d403 1
a403 1
    stringBuffer.append(TEXT_34);
d405 1
a405 1
    stringBuffer.append(TEXT_35);
d407 1
a407 1
    stringBuffer.append(TEXT_36);
d409 1
a409 1
    stringBuffer.append(TEXT_37);
d413 1
a413 1
    stringBuffer.append(TEXT_38);
d415 1
a415 1
    stringBuffer.append(TEXT_39);
d417 1
a417 1
    stringBuffer.append(TEXT_40);
d419 1
a419 1
    stringBuffer.append(TEXT_41);
d423 1
a423 1
    stringBuffer.append(TEXT_42);
d427 1
a427 1
    stringBuffer.append(TEXT_43);
d429 1
a429 1
    stringBuffer.append(TEXT_44);
d431 1
a431 1
    stringBuffer.append(TEXT_45);
d433 1
a433 1
    stringBuffer.append(TEXT_46);
d437 1
a437 1
    stringBuffer.append(TEXT_47);
d439 1
a439 1
    stringBuffer.append(TEXT_48);
d441 1
a441 1
    stringBuffer.append(TEXT_49);
d443 1
a443 1
    stringBuffer.append(TEXT_50);
d445 1
a445 1
    stringBuffer.append(TEXT_51);
d447 1
a447 1
    stringBuffer.append(TEXT_52);
d449 1
a449 1
    stringBuffer.append(TEXT_53);
d451 1
a451 1
    stringBuffer.append(TEXT_54);
d457 1
a457 1
    stringBuffer.append(TEXT_55);
d459 1
a459 1
    stringBuffer.append(TEXT_56);
d461 1
a461 1
    stringBuffer.append(TEXT_57);
d463 1
a463 1
    stringBuffer.append(TEXT_58);
d465 1
a465 1
    stringBuffer.append(TEXT_59);
d467 1
a467 1
    stringBuffer.append(TEXT_60);
d469 1
a469 1
    stringBuffer.append(TEXT_61);
d471 1
a471 1
    stringBuffer.append(TEXT_62);
d480 1
a480 1
    stringBuffer.append(TEXT_63);
d482 1
a482 1
    stringBuffer.append(TEXT_64);
d489 1
a489 1
    stringBuffer.append(TEXT_65);
d491 1
a491 1
    stringBuffer.append(TEXT_66);
d493 1
a493 1
    stringBuffer.append(TEXT_67);
d495 1
a495 1
    stringBuffer.append(TEXT_68);
d497 1
a497 1
    stringBuffer.append(TEXT_69);
d499 1
a499 1
    stringBuffer.append(TEXT_70);
d501 1
a501 1
    stringBuffer.append(TEXT_71);
d503 1
a503 1
    stringBuffer.append(TEXT_72);
d505 1
a505 1
    stringBuffer.append(TEXT_73);
d507 1
a507 1
    stringBuffer.append(TEXT_74);
d509 1
a509 1
    stringBuffer.append(TEXT_75);
d511 1
a511 1
    stringBuffer.append(TEXT_76);
d513 1
a513 1
    stringBuffer.append(TEXT_77);
d515 1
a515 1
    stringBuffer.append(TEXT_78);
d519 1
a519 1
    stringBuffer.append(TEXT_79);
d521 1
a521 1
    stringBuffer.append(TEXT_80);
d523 1
a523 1
    stringBuffer.append(TEXT_81);
d525 1
a525 1
    stringBuffer.append(TEXT_82);
d527 1
a527 1
    stringBuffer.append(TEXT_83);
d529 1
a529 1
    stringBuffer.append(TEXT_84);
d531 1
a531 1
    stringBuffer.append(TEXT_85);
d533 1
a533 1
    stringBuffer.append(TEXT_86);
d535 1
a535 1
    stringBuffer.append(TEXT_87);
d537 1
a537 1
    stringBuffer.append(TEXT_88);
d539 1
a539 1
    stringBuffer.append(TEXT_89);
d541 1
a541 1
    stringBuffer.append(TEXT_90);
d543 1
a543 1
    stringBuffer.append(TEXT_91);
d545 1
a545 1
    stringBuffer.append(TEXT_92);
d547 1
a547 1
    stringBuffer.append(TEXT_93);
@


1.2
log
@[bblajer] #114200 Provide an option to generate RCP application - added RCP support for pure-GEF (lite) generator
@
text
@d99 1
a99 1
  protected final String TEXT_80 = "());" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "" + NL + "\t\t";
d107 1
a107 1
  protected final String TEXT_88 = ".PRIMARY_LAYER);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\tGraphicalViewer viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\tContextMenuProvider provider = new ";
@


1.1
log
@[bblajer] #136702 Code generation targeting pure-GEF runtime
@
text
@d22 91
a112 52
  protected final String TEXT_3 = " extends GraphicalEditorWithFlyoutPalette {" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate static class UpdatableActionGroup {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void addAction(UpdateAction action) {" + NL + "\t\t\tassert action != null;" + NL + "\t\t\tmyActions.add(action);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void removeAction(UpdateAction action) {" + NL + "\t\t\tmyActions.remove(action);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic void update() {" + NL + "\t\t\tfor (Iterator it = myActions.iterator(); it.hasNext();) {" + NL + "\t\t\t\tUpdateAction next = (UpdateAction) it.next();" + NL + "\t\t\t\tnext.update();" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate ArrayList myActions = new ArrayList();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate EditingDomain editingDomain;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_4 = " ";
  protected final String TEXT_5 = ";" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_6 = " diagram;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate boolean isDirty = false;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PaletteRoot paletteRoot;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate PropertySheetPage undoablePropertySheetPage;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup stackActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener commandStackListener = new CommandStackListener() {" + NL + "" + NL + "\t\tpublic void commandStackChanged(EventObject event) {" + NL + "\t\t\tstackActions.update();" + NL + "\t\t\tsetDirty(((CommandStack) event.getSource()).isDirty());" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editPartActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener selectionListener = new ISelectionListener() {" + NL + "" + NL + "\t\tpublic void selectionChanged(IWorkbenchPart part, ISelection selection) {" + NL + "\t\t\teditPartActions.update();" + NL + "\t\t}" + NL + "\t};" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate UpdatableActionGroup editorActions = new UpdatableActionGroup();" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ComposedAdapterFactory domainAdapterFactory;" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void firePropertyChange(int propertyId) {" + NL + "\t\tsuper.firePropertyChange(propertyId);" + NL + "\t\teditorActions.update();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an action to this editor's <code>ActionRegistry</code>. (This is" + NL + "\t * a helper method.)" + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the action to add." + NL + "\t */" + NL + "\tprotected void addAction(IAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an editor action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * Editor actions are actions that depend and work on the editor." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the editor action" + NL + "\t */" + NL + "\tprotected void addEditorAction(WorkbenchPartAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditorActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>EditPart</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>EditPart</code> actions are actions that depend and work on the" + NL + "\t * selected <code>EditPart</code>s." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>EditPart</code> action" + NL + "\t */" + NL + "\tprotected void addEditPartAction(SelectionAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\teditPartActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Adds an <code>CommandStack</code> action to this editor." + NL + "\t * " + NL + "\t * <p>" + NL + "\t * <code>CommandStack</code> actions are actions that depend and work on" + NL + "\t * the <code>CommandStack</code>." + NL + "\t * " + NL + "\t * @@generated" + NL + "\t * @@param action" + NL + "\t *            the <code>CommandStack</code> action" + NL + "\t */" + NL + "\tprotected void addStackAction(StackAction action) {" + NL + "\t\tgetActionRegistry().registerAction(action);" + NL + "\t\tstackActions.addAction(action);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createActions() {" + NL + "\t\taddStackAction(new UndoAction(this));" + NL + "\t\taddStackAction(new RedoAction(this));" + NL + "" + NL + "\t\taddEditPartAction(new DeleteAction((IWorkbenchPart) this));" + NL + "\t\taddEditPartAction(new DirectEditAction((IWorkbenchPart) this));" + NL + "" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.LEFT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.RIGHT));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.TOP));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.BOTTOM));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.CENTER));" + NL + "\t\taddEditPartAction(new AlignmentAction((IWorkbenchPart) this, PositionConstants.MIDDLE));" + NL + "" + NL + "\t\taddEditorAction(new SaveAction(this));" + NL + "\t\taddEditorAction(new PrintAction(this));" + NL + "" + NL + "\t\tIAction zoomIn = new ZoomInAction(getZoomManager());" + NL + "\t\tIAction zoomOut = new ZoomOutAction(getZoomManager());" + NL + "\t\taddAction(zoomIn);" + NL + "\t\taddAction(zoomOut);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomIn);" + NL + "\t\tgetSite().getKeyBindingService().registerAction(zoomOut);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void dispose() {" + NL + "\t\t// remove CommandStackListener" + NL + "\t\tgetCommandStack().removeCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// remove selection listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().removeSelectionListener(getSelectionListener());" + NL + "" + NL + "\t\t// dispose the ActionRegistry (will dispose all actions)" + NL + "\t\tgetActionRegistry().dispose();" + NL + "" + NL + "\t\t// important: always call super implementation of dispose" + NL + "\t\tsuper.dispose();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSave(IProgressMonitor monitor) {" + NL + "\t\ttry {" + NL + "\t\t\tsave(monitor);" + NL + "\t\t\tgetCommandStack().markSaveLocation();" + NL + "\t\t} catch (CoreException e) {" + NL + "\t\t\tErrorDialog.openError(getSite().getShell(), \"Error During Save\", \"The current ";
  protected final String TEXT_7 = " model could not be saved.\", e.getStatus());" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void save(IProgressMonitor progressMonitor) throws CoreException {" + NL + "\t\tif (progressMonitor == null) {" + NL + "\t\t\tprogressMonitor = new NullProgressMonitor();" + NL + "\t\t}" + NL + "\t\tprogressMonitor.beginTask(\"Saving\", getEditingDomain().getResourceSet().getResources().size());" + NL + "\t\ttry {" + NL + "\t\t\tfor(Iterator it = getEditingDomain().getResourceSet().getResources().iterator(); it.hasNext(); ) {" + NL + "\t\t\t\tResource next = (Resource)it.next();" + NL + "\t\t\t\tnext.save(Collections.EMPTY_MAP);" + NL + "\t\t\t\tprogressMonitor.worked(1);" + NL + "\t\t\t}" + NL + "\t\t} catch (IOException e) {" + NL + "\t\t\tIStatus status = new Status(IStatus.ERROR, ";
  protected final String TEXT_8 = ".ID, 0, \"Error writing file.\", e);" + NL + "\t\t\tthrow new CoreException(status);" + NL + "\t\t} finally {" + NL + "\t\t\tprogressMonitor.done();" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isSaveAsAllowed() {" + NL + "\t\t// TODO: should be allowed." + NL + "\t\treturn false;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void doSaveAs() {" + NL + "\t\t// TODO: Implement." + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Object getAdapter(Class type) {" + NL + "\t\tif (type == IPropertySheetPage.class) {" + NL + "\t\t\treturn getPropertySheetPage();" + NL + "\t\t} else if (type == IContentOutlinePage.class) {" + NL + "\t\t\treturn getOutlinePage();" + NL + "\t\t} else if (type == ZoomManager.class) {" + NL + "\t\t\treturn getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn super.getAdapter(type);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected ZoomManager getZoomManager() {" + NL + "\t\treturn getZoomManager(getGraphicalViewer());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ZoomManager getZoomManager(GraphicalViewer viewer) {" + NL + "\t\t// get zoom manager from root edit part" + NL + "\t\tRootEditPart rootEditPart = viewer.getRootEditPart();" + NL + "\t\tZoomManager zoomManager = null;" + NL + "\t\tif (rootEditPart instanceof ScalableFreeformRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableFreeformRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t} else if (rootEditPart instanceof ScalableRootEditPart) {" + NL + "\t\t\tzoomManager = ((ScalableRootEditPart) rootEditPart).getZoomManager();" + NL + "\t\t}" + NL + "\t\treturn zoomManager;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate CommandStackListener getStackActionsListener() {" + NL + "\t\treturn commandStackListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected IContentOutlinePage getOutlinePage() {" + NL + "\t\t//TODO: outline page missing" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PaletteRoot getPaletteRoot() {" + NL + "\t\tif (paletteRoot == null) {" + NL + "\t\t\tpaletteRoot = new PaletteRoot();";
  protected final String TEXT_9 = NL + "\t\t\tnew ";
  protected final String TEXT_10 = "(getDomainAdapterFactory()).contributeToPalette(paletteRoot);";
  protected final String TEXT_11 = NL + "\t\t}" + NL + "\t\treturn paletteRoot;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected PropertySheetPage getPropertySheetPage() {" + NL + "\t\tif (undoablePropertySheetPage == null) {" + NL + "\t\t\tundoablePropertySheetPage = new PropertySheetPage();" + NL + "\t\t\t";
  protected final String TEXT_12 = " rootEntry = new ";
  protected final String TEXT_13 = "(getCommandStack());" + NL + "\t\t\trootEntry.setPropertySourceProvider(new ";
  protected final String TEXT_14 = "(getDomainAdapterFactory()));" + NL + "\t\t\tundoablePropertySheetPage.setRootEntry(rootEntry);" + NL + "\t\t}" + NL + "" + NL + "\t\treturn undoablePropertySheetPage;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ISelectionListener getSelectionListener() {" + NL + "\t\treturn selectionListener;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_15 = " get";
  protected final String TEXT_16 = "() {" + NL + "\t\treturn ";
  protected final String TEXT_17 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic Diagram getDiagram() {" + NL + "\t\treturn diagram;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void init(IEditorSite site, IEditorInput input) throws PartInitException {" + NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tif (file == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "\t\tsetSite(site);" + NL + "\t\tsetInput(input);" + NL + "\t\tsetEditDomain(new DefaultEditDomain(this));" + NL + "" + NL + "\t\t// validate" + NL + "\t\tif (get";
  protected final String TEXT_18 = "() == null) {" + NL + "\t\t\tthrow new PartInitException(\"The specified input is not valid.\");" + NL + "\t\t}" + NL + "" + NL + "\t\t// add CommandStackListener" + NL + "\t\tgetCommandStack().addCommandStackListener(getStackActionsListener());" + NL + "" + NL + "\t\t// add selection change listener" + NL + "\t\tgetSite().getWorkbenchWindow().getSelectionService().addSelectionListener(getSelectionListener());" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setInput(IEditorInput input)  {" + NL + "\t\tURI file = getURIFromInput(input);" + NL + "\t\tload(file);" + NL + "\t\tsetPartName(file.lastSegment());" + NL + "\t\tsetContentDescription(file.toFileString());" + NL + "\t\tsuper.setInput(input);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate URI getURIFromInput(IEditorInput input) {" + NL + "\t\tif (input instanceof URIEditorInput) {" + NL + "\t\t\treturn ((URIEditorInput) input).getURI();" + NL + "\t\t}" + NL + "\t\tif (input instanceof IPathEditorInput) {" + NL + "\t\t\treturn URI.createFileURI(((IPathEditorInput)input).getPath().toOSString());" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic boolean isDirty() {" + NL + "\t\treturn isDirty;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void setDirty(boolean dirty) {" + NL + "\t\tif (isDirty != dirty) {" + NL + "\t\t\tisDirty = dirty;" + NL + "\t\t\tfirePropertyChange(IEditorPart.PROP_DIRTY);" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected EditingDomain getEditingDomain() {" + NL + "\t\tif (editingDomain == null) {" + NL + "\t\t\tBasicCommandStack commandStack = new BasicCommandStack();" + NL + "\t\t\teditingDomain = new AdapterFactoryEditingDomain(getDomainAdapterFactory(), commandStack, new HashMap());" + NL + "\t\t\teditingDomain.getResourceSet().eAdapters().add(new AdapterFactoryEditingDomain.EditingDomainProvider(editingDomain));" + NL + "\t\t}" + NL + "\t\treturn editingDomain;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate AdapterFactory getDomainAdapterFactory() {" + NL + "\t\tif (domainAdapterFactory == null) {" + NL + "\t\t\tList factories = new ArrayList();" + NL + "\t\t\tfactories.add(new ResourceItemProviderAdapterFactory());";
  protected final String TEXT_19 = NL + "\t\t\tfactories.add(new ";
  protected final String TEXT_20 = "());";
  protected final String TEXT_21 = NL + "\t\t\tfactories.add(new ReflectiveItemProviderAdapterFactory());" + NL + "\t\t\tfactories.add(new NotationItemProviderAdapterFactory());" + NL + "\t\t\tdomainAdapterFactory = new ComposedAdapterFactory(factories);" + NL + "\t\t}" + NL + "\t\treturn domainAdapterFactory;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate void load(URI diagramFile) {" + NL + "\t\t";
  protected final String TEXT_22 = " = null;" + NL + "\t\tdiagram = null;" + NL + "\t\tif (diagramFile == null) {" + NL + "\t\t\treturn;" + NL + "\t\t}" + NL + "\t\tEditingDomain editingDomain = getEditingDomain();" + NL + "\t\tResourceSet resourceSet = editingDomain.getResourceSet();" + NL + "\t\tResource diagramResource = resourceSet.getResource(diagramFile, true);" + NL + "\t\tif (diagramResource == null) {" + NL + "\t\t\tdiagramResource = resourceSet.createResource(diagramFile);" + NL + "\t\t}" + NL + "\t\tdiagram = (Diagram) findInResource(diagramResource, Diagram.class);" + NL + "\t\tif (diagram == null) {" + NL + "\t\t\tdiagram = NotationFactory.eINSTANCE.createDiagram();" + NL + "\t\t\tdiagramResource.getContents().add(0, diagram);" + NL + "\t\t\t//Auxiliary creation should not be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\tdiagramResource.save(Collections.EMPTY_MAP);" + NL + "\t\t\t} catch (IOException e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\t";
  protected final String TEXT_23 = " = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}";
  protected final String TEXT_24 = NL + "\t\tURI modelFile = ";
  protected final String TEXT_25 = ".getModelFileURI(diagramFile);" + NL + "\t\tResource modelResource = resourceSet.getResource(modelFile, true);" + NL + "\t\tif (modelResource == null) {" + NL + "\t\t\tmodelResource = resourceSet.createResource(modelFile);" + NL + "\t\t}";
  protected final String TEXT_26 = NL + "\t\t";
  protected final String TEXT_27 = " = (";
  protected final String TEXT_28 = ") findInResource(";
  protected final String TEXT_29 = ", ";
  protected final String TEXT_30 = ".class);" + NL + "\t\tif (";
  protected final String TEXT_31 = " == null) {" + NL + "\t\t\t";
  protected final String TEXT_32 = " = ";
  protected final String TEXT_33 = ".eINSTANCE.create";
  protected final String TEXT_34 = "();" + NL + "\t\t\t";
  protected final String TEXT_35 = ".getContents().add(0, ";
  protected final String TEXT_36 = ");" + NL + "\t\t\t//We don't want this auxiliary creation to be undoable." + NL + "\t\t\ttry {" + NL + "\t\t\t\t";
  protected final String TEXT_37 = ".save(Collections.EMPTY_MAP);" + NL + "\t\t\t} catch (IOException e) {" + NL + "\t\t\t\tdiagram = null;" + NL + "\t\t\t\t";
  protected final String TEXT_38 = " = null;" + NL + "\t\t\t\treturn;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\tif (!diagram.isSetElement()) {" + NL + "\t\t\tdiagram.setElement(";
  protected final String TEXT_39 = ");" + NL + "\t\t}" + NL + "\t}";
  protected final String TEXT_40 = NL + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate Object findInResource(Resource resource, Class expectedClass) {" + NL + "\t\tfor(Iterator it = resource.getContents().iterator(); it.hasNext(); ) {" + NL + "\t\t\tObject next = it.next();" + NL + "\t\t\tif (expectedClass.isInstance(next)) {" + NL + "\t\t\t\treturn next;" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t\treturn null;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic void setFocus() {" + NL + "\t\tgetGraphicalViewer().getControl().setFocus();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic final void createPartControl(Composite parent) {" + NL + "\t\tsuper.createPartControl(parent);" + NL + "\t\t// initialize actions" + NL + "\t\tcreateActions();" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void createGraphicalViewer(Composite parent) {" + NL + "\t\tsuper.createGraphicalViewer(parent);" + NL + "\t\t// initialize the viewer with input" + NL + "\t\tScalableFreeformRootEditPart root = new ScalableFreeformRootEditPart();" + NL + "\t\tgetGraphicalViewer().setRootEditPart(root);" + NL + "\t\tgetGraphicalViewer().setEditPartFactory(new ";
  protected final String TEXT_41 = "());" + NL + "\t\tgetGraphicalViewer().setContents(getDiagram());" + NL + "" + NL + "\t\t";
  protected final String TEXT_42 = " printableLayers = (";
  protected final String TEXT_43 = ") root.getLayer(";
  protected final String TEXT_44 = ".PRINTABLE_LAYERS);" + NL + "\t\t";
  protected final String TEXT_45 = " extLabelsLayer = new ";
  protected final String TEXT_46 = "();" + NL + "\t\textLabelsLayer.setLayoutManager(new ";
  protected final String TEXT_47 = "());" + NL + "\t\tprintableLayers.addLayerAfter(extLabelsLayer, ";
  protected final String TEXT_48 = ".EXTERNAL_NODE_LABELS_LAYER, ";
  protected final String TEXT_49 = ".PRIMARY_LAYER);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void configureGraphicalViewer() {" + NL + "\t\tsuper.configureGraphicalViewer();" + NL + "\t\tGraphicalViewer viewer = getGraphicalViewer();" + NL + "\t\t// configure the context menu" + NL + "\t\tContextMenuProvider provider = new ";
  protected final String TEXT_50 = "ContextMenuProvider(viewer);" + NL + "\t\tviewer.setContextMenu(provider);" + NL + "\t\tgetSite().registerContextMenu(";
  protected final String TEXT_51 = ".ID + \".editor.contextmenu\", provider, getSite().getSelectionProvider()); //$NON-NLS-1$" + NL + "" + NL + "\t\tKeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer);" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), getActionRegistry().getAction(ActionFactory.DELETE.getId()));" + NL + "\t\tkeyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));" + NL + "\t\tviewer.setKeyHandler(keyHandler);" + NL + "" + NL + "\t\tviewer.setProperty(MouseWheelHandler.KeyGenerator.getKey(SWT.CTRL), MouseWheelZoomHandler.SINGLETON);" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate class ";
  protected final String TEXT_52 = "ContextMenuProvider extends ContextMenuProvider {" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tpublic ";
  protected final String TEXT_53 = "ContextMenuProvider(EditPartViewer viewer) {" + NL + "\t\t\tsuper(viewer);" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t    public void buildContextMenu(IMenuManager menuManager) {" + NL + "\t        GEFActionConstants.addStandardActionGroups(menuManager);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.UNDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.REDO.getId(), GEFActionConstants.GROUP_UNDO);" + NL + "\t" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.COPY.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.PASTE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.DELETE.getId(), GEFActionConstants.GROUP_EDIT);" + NL + "\t\t\tappendActionToMenu(menuManager, GEFActionConstants.DIRECT_EDIT, GEFActionConstants.GROUP_EDIT);" + NL + "" + NL + "\t\t\tappendActionToMenu(menuManager, ActionFactory.SAVE.getId(), GEFActionConstants.GROUP_SAVE);" + NL + "" + NL + "\t\t\tappendAlignmentSubmenu(menuManager);" + NL + "\t    }" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendAlignmentSubmenu(IMenuManager menuManager) {" + NL + "\t\t\t// Alignment Actions" + NL + "\t\t\tMenuManager submenu = new MenuManager(\"Align\");" + NL + "\t\t\tsubmenu.add(new Separator(GEFActionConstants.MB_ADDITIONS));" + NL + "\t" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_LEFT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_CENTER, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_RIGHT, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_TOP, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_MIDDLE, GEFActionConstants.MB_ADDITIONS);" + NL + "\t\t\tappendActionToMenu(submenu, GEFActionConstants.ALIGN_BOTTOM, GEFActionConstants.MB_ADDITIONS);" + NL + "\t" + NL + "\t\t\tif (!submenu.isEmpty()) {" + NL + "\t\t\t\tmenuManager.appendToGroup(GEFActionConstants.GROUP_REST, submenu);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "" + NL + "\t\t/**" + NL + "\t\t * @@generated" + NL + "\t\t */" + NL + "\t\tprivate void appendActionToMenu(IMenuManager menu, String actionId, String menuGroup) {" + NL + "\t\t\tIAction action = getActionRegistry().getAction(actionId);" + NL + "\t\t\tif (action != null && action.isEnabled()) {" + NL + "\t\t\t\tmenu.appendToGroup(menuGroup, action);" + NL + "\t\t\t}" + NL + "\t\t}" + NL + "\t}" + NL + "}";
  protected final String TEXT_54 = NL;
d121 1
a141 1
importManager.addImport("org.eclipse.emf.common.ui.URIEditorInput");
a192 1
importManager.addImport("org.eclipse.ui.IPathEditorInput");
d207 36
d244 1
a244 1
    stringBuffer.append(TEXT_4);
d246 1
a246 1
    stringBuffer.append(TEXT_5);
d248 11
a258 1
    stringBuffer.append(TEXT_6);
d260 1
a260 1
    stringBuffer.append(TEXT_7);
d262 1
a262 1
    stringBuffer.append(TEXT_8);
d268 1
a268 1
    stringBuffer.append(TEXT_9);
d270 1
a270 1
    stringBuffer.append(TEXT_10);
d275 1
a275 1
    stringBuffer.append(TEXT_11);
d277 1
a277 1
    stringBuffer.append(TEXT_12);
d279 1
a279 1
    stringBuffer.append(TEXT_13);
d281 1
a281 1
    stringBuffer.append(TEXT_14);
d283 1
a283 1
    stringBuffer.append(TEXT_15);
d285 1
a285 1
    stringBuffer.append(TEXT_16);
d287 1
a287 1
    stringBuffer.append(TEXT_17);
d289 43
a331 1
    stringBuffer.append(TEXT_18);
d337 1
a337 1
    stringBuffer.append(TEXT_19);
d339 1
a339 1
    stringBuffer.append(TEXT_20);
d341 5
a345 1
    stringBuffer.append(TEXT_21);
d347 3
a349 1
    stringBuffer.append(TEXT_22);
d351 1
a351 1
    stringBuffer.append(TEXT_23);
d360 1
a360 1
    stringBuffer.append(TEXT_24);
d362 1
a362 1
    stringBuffer.append(TEXT_25);
d369 1
a369 1
    stringBuffer.append(TEXT_26);
d371 1
a371 1
    stringBuffer.append(TEXT_27);
d373 1
a373 1
    stringBuffer.append(TEXT_28);
d375 1
a375 1
    stringBuffer.append(TEXT_29);
d377 1
a377 1
    stringBuffer.append(TEXT_30);
d379 1
a379 1
    stringBuffer.append(TEXT_31);
d381 1
a381 1
    stringBuffer.append(TEXT_32);
d383 1
a383 1
    stringBuffer.append(TEXT_33);
d385 1
a385 1
    stringBuffer.append(TEXT_34);
d387 1
a387 1
    stringBuffer.append(TEXT_35);
d389 1
a389 1
    stringBuffer.append(TEXT_36);
d391 1
a391 1
    stringBuffer.append(TEXT_37);
d393 1
a393 1
    stringBuffer.append(TEXT_38);
d395 1
a395 1
    stringBuffer.append(TEXT_39);
d399 1
a399 1
    stringBuffer.append(TEXT_40);
d401 1
a401 1
    stringBuffer.append(TEXT_41);
d403 1
a403 1
    stringBuffer.append(TEXT_42);
d405 1
a405 1
    stringBuffer.append(TEXT_43);
d407 1
a407 1
    stringBuffer.append(TEXT_44);
d409 1
a409 1
    stringBuffer.append(TEXT_45);
d411 1
a411 1
    stringBuffer.append(TEXT_46);
d413 1
a413 1
    stringBuffer.append(TEXT_47);
d415 1
a415 1
    stringBuffer.append(TEXT_48);
d417 1
a417 1
    stringBuffer.append(TEXT_49);
d419 1
a419 1
    stringBuffer.append(TEXT_50);
d421 1
a421 1
    stringBuffer.append(TEXT_51);
d423 1
a423 1
    stringBuffer.append(TEXT_52);
d425 1
a425 1
    stringBuffer.append(TEXT_53);
d427 1
a427 1
    stringBuffer.append(TEXT_54);
@

