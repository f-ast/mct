head	1.3;
access;
symbols
	v20080910-1520:1.3
	v20061005-1700:1.1
	v20060824-1600:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.09.01.16.14.08;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.08.02.10.43.51;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.19.19.14.13;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[155040] bblajer - Common Lite runtime functionality moved to dedicated plugin
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.lite.commands" class="CreateNotationalElementCommandGenerator"
	imports="org.eclipse.gmf.common.codegen.*"%>

<%
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>

<%
importManager.emitPackageStatement(stringBuffer);
importManager.markImportLocation(stringBuffer);
%>

/**
 * @@generated
 */
public class CreateNotationalElementCommand extends <%=importManager.getImportedName("org.eclipse.emf.common.command.AbstractCommand")%> {
	/**
	 * @@generated
	 */
	private final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> parent;

	/**
	 * @@generated
	 */
	private <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> createdView;

	/**
	 * @@generated
	 */
	public CreateNotationalElementCommand(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> parent) {
		this.parent = parent;
	}

	/**
	 * @@generated
	 */
	protected final void setCreatedView(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> view) {
		this.createdView = view;
	}

	/**
	 * @@generated
	 */
	public <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> getCreatedView() {
		return createdView;
	}

	/**
	 * @@generated
	 */
	protected final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> getParent() {
		return parent;
	}

	/**
	 * @@generated
	 */
	public boolean canExecute() {
		return createdView != null;
	}

	/**
	 * @@generated
	 */
	public boolean canUndo() {
		return true;
	}
	/**
	 * @@generated
	 */
	public void execute() {
		parent.insertChild(createdView);
	}

	/**
	 * @@generated
	 */
	public void undo() {
		parent.removeChild(createdView);
	}

	/**
	 * @@generated
	 */
	public void redo() {
		execute();
	}
}
<%importManager.emitSortedImports();%>
@


1.2
log
@[bblajer] #146009 Reflect changes in domain model links
@
text
@@


1.1
log
@#146009 Lite Generator: Changes in the underlying domain model should be automatically reflected in the notational model
1,2,3 Parts commited.
@
text
@d51 7
@

