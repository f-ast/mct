head	1.2;
access;
symbols
	v20080910-1520:1.2
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.03.22.20.48.52;	author ashatalin;	state dead;
branches;
next	1.1;
commitid	14b54602ebb34567;

1.1
date	2006.12.19.19.11.42;	author bblajer;	state Exp;
branches;
next	;
commitid	733e4588396c4567;


desc
@@


1.2
log
@Fixing problems with NavigatorLinkHelper.
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.lite.navigator" class="NavigatorLinkHelperGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenNavigator genNavigator = (GenNavigator) ((Object[]) argument)[0];
GenDiagram genDiagram = genNavigator.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genNavigator.getLinkHelperClassName()%> implements <%=importManager.getImportedName("org.eclipse.ui.navigator.ILinkHelper")%> {

<%
/**
 * Uncomment this inclide ore remove corresponding file on resolving the following
 * request: https://bugs.eclipse.org/bugs/show_bug.cgi?id=159739
 *
	
< %@@ include file="navigatorLinkHelper_findSelection.jetinc" % >
 *
 */
%>

	/**
	 * @@generated
	 */	
	public <%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%> findSelection(<%=importManager.getImportedName("org.eclipse.ui.IEditorInput")%> anInput) {
		return <%=importManager.getImportedName("org.eclipse.jface.viewers.StructuredSelection")%>.EMPTY;
	}
	
	/**
	 * @@generated
	 */	
	public void activateEditor(<%=importManager.getImportedName("org.eclipse.ui.IWorkbenchPage")%> aPage, <%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%> aSelection) {
		if (aSelection == null || aSelection.isEmpty()) {
			return;
		}
		if (false == aSelection.getFirstElement() instanceof <%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) {
			return;
		}
		
		<%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%> navigatorItem = (<%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%>) aSelection.getFirstElement();
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> navigatorView = null;
		if (navigatorItem instanceof <%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) {
			navigatorView = ((<%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) navigatorItem).getView();
		} else if (navigatorItem instanceof <%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%>) {
			<%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%> group = (<%=importManager.getImportedName(genNavigator.getNavigatorGroupQualifiedClassName())%>) navigatorItem;
			if (group.getParent() instanceof <%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) {
				navigatorView = ((<%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) group.getParent()).getView();
			}<%
if (false && genDiagram.generateShortcutIcon()) {	//no shortcuts so far in lite
	%> else if (group.getParent() instanceof <%=importManager.getImportedName("org.eclipse.core.runtime.IAdaptable")%>) {
				navigatorView = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) ((<%=importManager.getImportedName("org.eclipse.core.runtime.IAdaptable")%>) group.getParent()).getAdapter(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>.class);
			}<%
}%>
		}
		if (navigatorView == null) {
			return;
		}
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditorInput")%> editorInput = new <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditorInput")%>(navigatorView.getDiagram());
		<%=importManager.getImportedName("org.eclipse.ui.IEditorPart")%> editor = aPage.findEditor(editorInput);
		if (editor == null) {
			return;
		}
		aPage.bringToTop(editor);
		if (editor instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditor")%>) {
			<%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditor")%> diagramEditor = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.parts.DiagramEditor")%>) editor;
			<%=importManager.getImportedName("org.eclipse.emf.ecore.resource.ResourceSet")%> resourceSet = diagramEditor.getEditingDomain().getResourceSet();
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> selectedView = resourceSet.getEObject(<%=importManager.getImportedName("org.eclipse.emf.ecore.util.EcoreUtil")%>.getURI(navigatorView), false);
			if (selectedView == null) {
				return;
			}
			<%=importManager.getImportedName("org.eclipse.gef.GraphicalViewer")%> graphicalViewer = (<%=importManager.getImportedName("org.eclipse.gef.GraphicalViewer")%>) diagramEditor.getAdapter(<%=importManager.getImportedName("org.eclipse.gef.GraphicalViewer")%>.class);
			<%=importManager.getImportedName("org.eclipse.gef.EditPart")%> selectedEditPart = (<%=importManager.getImportedName("org.eclipse.gef.EditPart")%>) graphicalViewer.getEditPartRegistry().get(selectedView);
			if (selectedEditPart != null) {
				graphicalViewer.select(selectedEditPart);
			}
		}
	}
	
}
<%importManager.emitSortedImports();%>
@


1.1
log
@Generate support for Navigator
@
text
@@

