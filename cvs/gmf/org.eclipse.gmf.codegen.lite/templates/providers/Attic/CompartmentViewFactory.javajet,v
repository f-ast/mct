head	1.4;
access;
symbols
	v20080910-1520:1.4
	v20070103-0300:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.2
	v20061005-1700:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060824-1600:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.02.08.16.35.07;	author bblajer;	state dead;
branches;
next	1.3;
commitid	4b245cb513a4567;

1.3
date	2006.11.09.18.15.43;	author bblajer;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.21.10.12.03;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.21.20.16;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Rewritten View factories using xpand;
[173476]: Respect label offset attributes when generating code
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.lite.providers"  class="CompartmentViewFactoryGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenCompartment genElement = (GenCompartment) ((Object[]) argument)[0];
GenDiagram genDiagram = genElement.getDiagram();
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);

importManager.markImportLocation(stringBuffer);
%>

/**
 * @@generated
 */
public class <%=genElement.getNotationViewFactoryClassName()%> implements <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.services.IViewDecorator")%> {
	/**
	 * @@generated
	 */
	public static <%=genElement.getNotationViewFactoryClassName()%> INSTANCE = new <%=genElement.getNotationViewFactoryClassName()%>();

	/**
	 * @@generated
	 */
	public void decorateView(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> view) {
		if (view.eIsSet(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationPackage")%>.eINSTANCE.getView_Type())) {
			return;
		}
<%@@ include file="createVIDAnnotation.jetinc"%>
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.DrawerStyle")%> drawerStyle = <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory")%>.eINSTANCE.createDrawerStyle();
		view.getStyles().add(drawerStyle);
		//XXX: init styles from attributes!!!
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.TitleStyle")%> titleStyle = <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory")%>.eINSTANCE.createTitleStyle();
		view.getStyles().add(titleStyle);
<%@@ include file="createOpenDiagramAnnotation.jetinc"%>
	}
}
<%importManager.emitSortedImports();%>
@


1.3
log
@[162579] Support diagram partitioning
+
1. CustomBehaviours;
2. LayoutDiagramAction: execute the command through the command stack;
3. WrappingCommand: Workaround for a problem with StrictCompoundCommand.canExecute() in transactional editing domains
@
text
@@


1.2
log
@[157859] bblajer - Diagram initialization from pre-existing domain models
@
text
@d27 3
d36 1
@


1.1
log
@[bblajer] #136702 Code generation targeting pure-GEF runtime
@
text
@d17 1
a17 1
public class <%=genElement.getNotationViewFactoryClassName()%> {
d21 6
a26 1
	public static void decorateView(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> view) {
@

