head	1.2;
access;
symbols
	v20080910-1520:1.2
	v20061005-1700:1.1
	v20060824-1600:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.09.01.16.14.09;	author atikhomirov;	state dead;
branches;
next	1.1;

1.1
date	2006.05.22.18.22.10;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[155040] bblajer - Common Lite runtime functionality moved to dedicated plugin
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.lite.parts" class="WrappingCommandGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
final GenPlugin genPlugin = genDiagram.getEditorGen().getPlugin();
%>
<%
importManager.emitPackageStatement(stringBuffer);
importManager.addImport("org.eclipse.core.commands.ExecutionException");
importManager.addImport("org.eclipse.core.commands.operations.IUndoableOperation");
importManager.addImport("org.eclipse.core.runtime.NullProgressMonitor");
importManager.addImport("org.eclipse.emf.transaction.TransactionalEditingDomain");
importManager.addImport("org.eclipse.emf.workspace.EMFCommandOperation");
importManager.addImport("org.eclipse.gef.commands.Command");
importManager.markImportLocation(stringBuffer);
%>

/**
 * Wraps a EMF command into a GEF command. The undelying EMF command will be executed within a transaction provided by the specified editing domain.
 * @@generated
 */
public class WrappingCommand extends Command {
	/**
	 * @@generated
	 */
	private final IUndoableOperation operation;

	/**
	 * @@generated
	 */
	protected WrappingCommand(IUndoableOperation operation) {
		this.operation = operation;
	}

	/**
	 * @@generated
	 */
	public WrappingCommand(TransactionalEditingDomain editingDomain, org.eclipse.emf.common.command.Command emfCommand) {
		this.operation = new EMFCommandOperation(editingDomain, emfCommand);
	}

	/**
	 * @@generated
	 */
	public void execute() {
		try {
			operation.execute(new NullProgressMonitor(), null);
		} catch (ExecutionException e) {
			<%=importManager.getImportedName(genPlugin.getActivatorQualifiedClassName())%>.getInstance().logError("exception occurred while executing operation", e);
		}
	}

	/**
	 * @@generated
	 */
	public boolean canExecute() {
		return operation.canExecute();
	}

	/**
	 * @@generated
	 */
	public void undo() {
		try {
			operation.undo(new NullProgressMonitor(), null);
		} catch (ExecutionException e) {
			<%=importManager.getImportedName(genPlugin.getActivatorQualifiedClassName())%>.getInstance().logError("exception occurred while undoing operation", e);
		}
	}

	/**
	 * @@generated
	 */
	public boolean canUndo() {
		return operation.canUndo();
	}

	/**
	 * @@generated
	 */
	public void redo() {
		try {
			operation.redo(new NullProgressMonitor(), null);
		} catch (ExecutionException e) {
			<%=importManager.getImportedName(genPlugin.getActivatorQualifiedClassName())%>.getInstance().logError("exception occurred while redoing operation", e);
		}
	}
}
<%importManager.emitSortedImports();%>
@


1.1
log
@[bblajer] #138430 Lite Generator: Generated code should make use of emf.transaction API
@
text
@@

