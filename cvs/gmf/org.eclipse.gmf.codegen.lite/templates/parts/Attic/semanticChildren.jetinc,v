head	1.4;
access;
symbols
	v20080910-1520:1.4
	v20061005-1700:1.1
	M1_20:1.3
	v20060904-1500:1.3
	v20060824-1600:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.09.21.10.12.03;	author atikhomirov;	state dead;
branches;
next	1.3;

1.3
date	2006.09.01.16.14.08;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.04.17.05.48;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.19.19.14.13;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[157859] bblajer - Diagram initialization from pre-existing domain models
@
text
@<%
if (childNodes.size() == 0) {
%>
	return <%=importManager.getImportedName("java.util.Collections")%>.EMPTY_LIST;
<%
} else {
%>
	<%=importManager.getImportedName("java.util.List")%> result = new <%=importManager.getImportedName("java.util.LinkedList")%>();
<%
	Map genFeature2genNodeMap = new LinkedHashMap();
	for (int nodeIndex = 0; nodeIndex < childNodes.size(); nodeIndex++) {
		GenNode nextNode = (GenNode) childNodes.get(nodeIndex);
		TypeModelFacet typeModelFacet = nextNode.getModelFacet();
		if (typeModelFacet == null) {
			continue;
		}
		GenFeature childMetaFeature = typeModelFacet.getChildMetaFeature();
		if (!genFeature2genNodeMap.containsKey(childMetaFeature)) {
			genFeature2genNodeMap.put(childMetaFeature, new ArrayList());
		}
		((Collection) genFeature2genNodeMap.get(childMetaFeature)).add(nextNode);
	}
	Set entrySet = genFeature2genNodeMap.entrySet();
	if (entrySet.size() > 0) {
%>
	<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> viewObject = <%=_getViewCode%>;
	<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> modelObject = viewObject.getElement();
	<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> nextValue;
	int nodeVID;
<%
	}
	for (Iterator entries = entrySet.iterator(); entries.hasNext();) {
		Map.Entry nextEntry = (Map.Entry) entries.next();
		GenFeature childMetaFeature = (GenFeature) nextEntry.getKey();
		Collection genNodesCollection = (Collection) nextEntry.getValue();
		if (childMetaFeature.isListType()) {
%>
	for(<%=importManager.getImportedName("java.util.Iterator")%> it = <%myFeatureGetAccessorHelper.appendFeatureValueGetter("modelObject", childMetaFeature, null, true);%>.iterator(); it.hasNext(); ) {
		nextValue = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) it.next();
<%
		} else {
%>
	nextValue = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>)<%myFeatureGetAccessorHelper.appendFeatureValueGetter("modelObject", childMetaFeature, null, false);%>;
<%
	}
%>
	nodeVID = <%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.INSTANCE.getNodeVisualID(viewObject, nextValue);
<%
	boolean generateSwitch = genNodesCollection.size() != 1;
	if (generateSwitch) {
%>
	switch (nodeVID) {
<%
	}
	for (Iterator genNodesIterator = genNodesCollection.iterator(); genNodesIterator.hasNext();) {
		GenNode nextNode = (GenNode) genNodesIterator.next();
		if (generateSwitch) {
%>
	case <%=importManager.getImportedName(nextNode.getEditPartQualifiedClassName())%>.VISUAL_ID: {
<%
		} else {
%>
	if (<%=importManager.getImportedName(nextNode.getEditPartQualifiedClassName())%>.VISUAL_ID == nodeVID) {
<%
		}
%>
		result.add(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.ElementDescriptor")%>(nextValue, nodeVID));
<%
		if (generateSwitch) {
%>
		break;
		}
<%
		} else {
%>
		}
<%
		}
	}
	if (generateSwitch) {
%>
	}
<%
	}
	if (childMetaFeature.isListType()) {
%>
	}
<%
	}
}
%>
	return result;
<%
}
%>
@


1.3
log
@[155040] bblajer - Common Lite runtime functionality moved to dedicated plugin
@
text
@@


1.2
log
@[bblajer] #152774 Compilable code when EClass has instance class attribute set
@
text
@d67 1
a67 1
		result.add(nextValue);
@


1.1
log
@#146009 Lite Generator: Changes in the underlying domain model should be automatically reflected in the notational model
1,2,3 Parts commited.
@
text
@d27 1
a27 1
	<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> modelObject = <%=_getSemanticElementCode%>;
d38 1
a38 1
	for(<%=importManager.getImportedName("java.util.Iterator")%> it = ((<%=importManager.getImportedName(childMetaFeature.getGenClass().getQualifiedInterfaceName())%>)modelObject).<%=childMetaFeature.getGetAccessor()%>().iterator(); it.hasNext(); ) {
d43 1
a43 1
	nextValue = ((<%=importManager.getImportedName(childMetaFeature.getGenClass().getQualifiedInterfaceName())%>)modelObject).<%=childMetaFeature.getGetAccessor()%>();
@

