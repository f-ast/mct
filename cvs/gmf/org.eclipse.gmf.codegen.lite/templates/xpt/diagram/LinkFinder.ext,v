head	1.7;
access;
symbols
	v20080910-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070921-0000:1.6
	v20070915-0000:1.6
	v20070903-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.5
	v20070518-1300:1.4
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070403-1500:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.13.55.39;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	388c4821b4d44567;

1.6
date	2007.05.21.16.38.31;	author bblajer;	state Exp;
branches;
next	1.5;
commitid	4ab64651cb064567;

1.5
date	2007.05.18.21.17.26;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	25e5464e17e24567;

1.4
date	2007.05.11.11.39.03;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	79e1464455d74567;

1.3
date	2007.05.04.14.08.43;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	464d463b3e6a4567;

1.2
date	2007.04.04.11.05.01;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	18c54613864d4567;

1.1
date	2007.02.23.16.19.36;	author bblajer;	state Exp;
branches;
next	;
commitid	496945df14164567;


desc
@@


1.7
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

import "http://www.eclipse.org/emf/2002/Ecore";
import "http://www.eclipse.org/emf/2002/GenModel";
import "http://www.eclipse.org/gmf/2008/GenModel";
extension xpt::GenModelUtils;
extension xpt::commands::CommandUtils;
extension xpt::diagram::PhantomUtils;

cached Collection[gmfgen::GenLink] incomingLinks(gmfgen::GenCommonBase gcb) :
	let effectiveMetaClass = gcb.getEffectiveMetaClass() :
	(effectiveMetaClass == null ? {} :
		gcb.getDiagram().links.select(e| e.incomingGenClass().ecoreClass.isSuperTypeOf(effectiveMetaClass.ecoreClass)))
;

Collection[gmfgen::GenLink] incomingTypeLinks(gmfgen::GenCommonBase gcb) :
	gcb.incomingLinks().select(e| {e.modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).size() > 0)
;

cached Collection[gmfgen::GenLink] outgoingLinks(gmfgen::GenCommonBase gcb) :
	let effectiveMetaClass = gcb.getEffectiveMetaClass() :
	(effectiveMetaClass == null ? {} :
		gcb.getDiagram().links.select(e| e.outgoingGenClass().ecoreClass.isSuperTypeOf(effectiveMetaClass.ecoreClass)))
;

cached Collection[gmfgen::GenLink] outgoingNonPhantomLinks(gmfgen::GenCommonBase gcb) :
	gcb.outgoingLinks().select(e| !e.modelFacet.isPhantomLink(gcb.getDiagram()))
;

cached Collection[gmfgen::GenLink] containedLinks(gmfgen::GenCommonBase gcb) :
	let effectiveMetaClass = gcb.getEffectiveMetaClass() :
		(effectiveMetaClass == null ? {} :
			gcb.getDiagram().links.select(e | e.containerGenClass().ecoreClass.isSuperTypeOf(effectiveMetaClass.ecoreClass)))
;

cached Collection[gmfgen::GenLink] containedTypeModelFacetLinks(gmfgen::GenCommonBase gcb) :
	gcb.containedLinks().select(e| {e.modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).size() > 0)
;

cached Collection[gmfgen::GenLink] containedFeatureModelFacetLinks(gmfgen::GenCommonBase gcb) :
	gcb.containedLinks().select(e| {e.modelFacet}.typeSelect(gmfgen::FeatureLinkModelFacet).size() > 0)
;

cached Collection[gmfgen::GenLink] containedLinksWithSelector(gmfgen::GenCommonBase gcb) :
	gcb.containedTypeModelFacetLinks().select(e| e.modelFacet.getElementSelector() != null)
;

boolean needsSourceVisualID(gmfgen::GenCommonBase gcb) :
	gcb.containedLinks().select(e| e.modelFacet != null && e.getDiagram().getRelatedChildLabelGenNodes(e.modelFacet.getSourceType()).size() > 0).size() > 0
;

boolean needsTargetVisualID(gmfgen::GenCommonBase gcb) :
	gcb.containedLinks().select(e| e.modelFacet != null && e.getDiagram().getRelatedChildLabelGenNodes(e.modelFacet.getTargetType()).size() > 0).size() > 0
;

Collection[gmfgen::GenCommonBase] getPossibleContainers(gmfgen::GenLink link) :
	let containerClass = link.containerGenClass().ecoreClass : 
	(containerClass == null ? {} : 
		{link.getDiagram(), link.getDiagram().getAllNodes(), link.getDiagram().links}.flatten()
			.select(e| let effectiveMetaClass = ((gmfgen::GenCommonBase) e).getEffectiveMetaClass() : effectiveMetaClass == null ? false : 
				containerClass.isSuperTypeOf(effectiveMetaClass.ecoreClass))
	)
;

private gmfgen::GenConstraint getElementSelector(gmfgen::LinkModelFacet facet) :
	null
;

private gmfgen::GenConstraint getElementSelector(gmfgen::TypeLinkModelFacet facet) :
	facet.modelElementSelector
;

private genmodel::GenClass incomingGenClass(gmfgen::GenLink link) :
	link.modelFacet.incomingGenClass()
;

private genmodel::GenClass incomingGenClass(gmfgen::LinkModelFacet facet) :
	null
;

private genmodel::GenClass incomingGenClass(gmfgen::FeatureLinkModelFacet facet) :
	facet.metaFeature.getTypeGenClass()
;

private genmodel::GenClass incomingGenClass(gmfgen::TypeLinkModelFacet facet) :
	facet.targetMetaFeature.getTypeGenClass()
;

private genmodel::GenClass outgoingGenClass(gmfgen::GenLink link) :
	link.modelFacet.outgoingGenClass()
;

private genmodel::GenClass outgoingGenClass(gmfgen::LinkModelFacet facet) :
	null
;

private genmodel::GenClass outgoingGenClass(gmfgen::FeatureLinkModelFacet facet) :
	facet.metaFeature.genClass
;

private genmodel::GenClass outgoingGenClass(gmfgen::TypeLinkModelFacet facet) :
	facet.sourceMetaFeature == null ? facet.containmentMetaFeature.genClass
		: facet.sourceMetaFeature.getTypeGenClass()
;

private genmodel::GenClass getTypeGenClass(genmodel::GenFeature feature) :
	findGenClassifier(feature.genClass.genPackage.genModel, feature.ecoreFeature.eType)
;

private genmodel::GenClass containerGenClass(gmfgen::GenLink link) :
	link.modelFacet.containerGenClass()
;

private genmodel::GenClass containerGenClass(gmfgen::LinkModelFacet facet) :
	null
;

private genmodel::GenClass containerGenClass(gmfgen::TypeLinkModelFacet facet) :
	facet.containmentMetaFeature.genClass
;

private genmodel::GenClass containerGenClass(gmfgen::FeatureLinkModelFacet facet) :
	facet.metaFeature.genClass
;

private genmodel::GenClass getEffectiveMetaClass(gmfgen::GenCommonBase gcb) :
	null
;

private genmodel::GenClass getEffectiveMetaClass(gmfgen::GenDiagram diagram) :
	diagram.domainDiagramElement
;

private genmodel::GenClass getEffectiveMetaClass(gmfgen::GenNode node) :
	node.modelFacet.metaClass
;

private genmodel::GenClass getEffectiveMetaClass(gmfgen::GenLink link) :
	link.modelFacet.getEffectiveMetaClass()
;

private genmodel::GenClass getEffectiveMetaClass(gmfgen::LinkModelFacet facet) :
	null
;

private genmodel::GenClass getEffectiveMetaClass(gmfgen::TypeLinkModelFacet facet) :
	facet.metaClass
;

private genmodel::GenClass getEffectiveMetaClass(gmfgen::GenChildLabelNode node) :
	null
;
@


1.6
log
@Phantoms support
@
text
@d15 1
a15 1
import "http://www.eclipse.org/gmf/2006/GenModel";
@


1.5
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d18 1
d36 4
@


1.4
log
@Labels with undefined label displayer should not be editable;
Empty label text should always be replaced with default text;
Closing and reopening outline should not lead to "widget disposed" exceptions;
Delete outgoing links before deleting element.
Make it easier to set the default text to display in the outline
@
text
@d15 1
a15 1
import "http://www.eclipse.org/gmf/2005/GenModel/2.0";
@


1.3
log
@1. Links to links;
2. Exception from TreeEditPartViewer (in the outline) while closing the diagram editor (because unregister is not called, only deactivate) fixed;
3. instead of rerouting a link to an end that does not support it, remove the link
@
text
@d25 4
@


1.2
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@d19 4
a22 2
cached Collection[gmfgen::GenLink] incomingLinks(gmfgen::GenNode node) :
	node.getDiagram().links.select(e| e.incomingGenClass().ecoreClass.isSuperTypeOf(node.modelFacet.metaClass.ecoreClass))
d25 4
a28 2
cached Collection[gmfgen::GenLink] outgoingLinks(gmfgen::GenNode node) :
	node.getDiagram().links.select(e| e.outgoingGenClass().ecoreClass.isSuperTypeOf(node.modelFacet.metaClass.ecoreClass))
d31 2
a32 2
cached Collection[gmfgen::GenLink] containedLinks(gmfgen::GenContainerBase gcb) :
	let effectiveMetaClass = gcb.getEffectiveMetaClassForContainment() :
d37 1
a37 1
cached Collection[gmfgen::GenLink] containedTypeModelFacetLinks(gmfgen::GenContainerBase gcb) :
d41 1
a41 1
cached Collection[gmfgen::GenLink] containedFeatureModelFacetLinks(gmfgen::GenContainerBase gcb) :
d45 1
a45 1
cached Collection[gmfgen::GenLink] containedLinksWithSelector(gmfgen::GenContainerBase gcb) :
d49 1
a49 1
boolean needsSourceVisualID(gmfgen::GenContainerBase gcb) :
d53 1
a53 1
boolean needsTargetVisualID(gmfgen::GenContainerBase gcb) :
d57 1
a57 1
Collection[gmfgen::GenContainerBase] getPossibleContainers(gmfgen::GenLink link) :
d60 2
a61 2
		{link.getDiagram(), link.getDiagram().getAllNodes()}.flatten()
			.select(e| let effectiveMetaClass = ((gmfgen::GenContainerBase) e).getEffectiveMetaClassForContainment() : effectiveMetaClass == null ? false : 
d127 1
a127 1
private genmodel::GenClass getEffectiveMetaClassForContainment(gmfgen::GenContainerBase gcb) :
d131 1
a131 1
private genmodel::GenClass getEffectiveMetaClassForContainment(gmfgen::GenDiagram diagram) :
d135 1
a135 1
private genmodel::GenClass getEffectiveMetaClassForContainment(gmfgen::GenNode node) :
d139 13
a151 1
private genmodel::GenClass getEffectiveMetaClassForContainment(gmfgen::GenChildLabelNode node) :
@


1.1
log
@ComponentEditPolicy separated into a top-level class;
CreateRequest now knows about the MODEL_ID;
All "Command" class references fully-qualified in templates to prevent compilation problems;
[170078]: Remove link with class from the domain model on deleting link's destination
@
text
@d17 1
d19 1
a19 2

Collection[gmfgen::GenLink] incomingLinks(gmfgen::GenNode node) :
d23 1
a23 1
Collection[gmfgen::GenLink] outgoingLinks(gmfgen::GenNode node) :
d27 43
d106 32
@

