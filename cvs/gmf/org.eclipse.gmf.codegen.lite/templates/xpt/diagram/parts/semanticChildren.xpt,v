head	1.6;
access;
symbols
	v20080910-1520:1.6
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080507-1326:1.6
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080322-0000:1.5
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070601-1400:1.4
	v20070525-1500:1.3
	v20070520-1200:1.2
	v20070518-1300:1.1
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1;
locks; strict;
comment	@# @;


1.6
date	2008.05.07.13.55.37;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	388c4821b4d44567;

1.5
date	2008.02.26.22.50.33;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	405e47c497b74567;

1.4
date	2007.05.29.14.55.32;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	2543465c3ee24567;

1.3
date	2007.05.21.16.38.31;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	4ab64651cb064567;

1.2
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	25e5464e17e24567;

1.1
date	2007.04.04.11.04.48;	author bblajer;	state Exp;
branches;
next	;
commitid	18c54613864d4567;


desc
@@


1.6
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::commands::CommandUtils»
«EXTENSION xpt::diagram::parts::NotationModelRefresher»
«EXTENSION xpt::diagram::PhantomUtils»

«DEFINE semanticChildren(String viewCode) FOR gmfgen::GenContainerBase-»
«IF !needsNotationModelRefresher()-»
return java.util.Collections.EMPTY_LIST;
«ELSE-»
java.util.List result = new java.util.LinkedList();
org.eclipse.gmf.runtime.notation.View viewObject = «viewCode»;
org.eclipse.emf.ecore.EObject modelObject = viewObject.getElement();
org.eclipse.emf.ecore.EObject nextValue;
int nodeVID;
«EXPAND addPhantoms-»
«FOREACH getChildFeatures() AS childMetaFeature-»
	«LET getGenNodes(childMetaFeature) AS genNodesCollection-»
	«IF genNodesCollection.size() > 0-»
		«IF childMetaFeature.isListType()-»
for(java.util.Iterator it = «EXPAND MetaModel::getFeatureValue("modelObject", null, true) FOR childMetaFeature».iterator(); it.hasNext(); ) {
	nextValue = (org.eclipse.emf.ecore.EObject) it.next();
		«ELSE-»
nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue("modelObject", null, false) FOR childMetaFeature»;
		«ENDIF-»
nodeVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getNodeVisualID(viewObject, nextValue);
		«LET genNodesCollection.size() > 1 AS generateSwitch-»
		«IF generateSwitch-»
switch (nodeVID) {
		«ENDIF-»
		«FOREACH genNodesCollection AS nextNode-»
			«IF generateSwitch-»
case «nextNode.getEditPartQualifiedClassName()».VISUAL_ID: {
			«ELSE-»
if («nextNode.getEditPartQualifiedClassName()».VISUAL_ID == nodeVID) {
			«ENDIF-»
	result.add(new org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.ElementDescriptor(nextValue, nodeVID));
			«IF generateSwitch-»
	break;
	}
			«ELSE-»
	}
			«ENDIF-»
		«ENDFOREACH-»
		«IF generateSwitch-»
}
		«ENDIF-»
		«IF childMetaFeature.isListType()-»
	}
		«ENDIF-»
		«ENDLET-»
	«ENDIF-»
	«ENDLET-»
«ENDFOREACH-»
	return result;
«ENDIF-»
«ENDDEFINE»

«DEFINE addPhantoms FOR gmfgen::GenContainerBase»«ENDDEFINE»

«DEFINE addPhantoms FOR gmfgen::GenDiagram-»
«IF getPhantomNodes().size() > 0-»
org.eclipse.emf.ecore.resource.Resource resource = «EXPAND xpt::commands::Common::getPhantomContainmentResource FOR "viewObject"»;
for (java.util.Iterator semanticIterator = getPhantomNodesIterator(resource); semanticIterator.hasNext(); ) {
	org.eclipse.emf.ecore.EObject childElement = (org.eclipse.emf.ecore.EObject) semanticIterator.next();
	if (childElement == modelObject) {
		continue;
	}
	nodeVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getNodeVisualID(viewObject, childElement);
	switch (nodeVID) {
	«EXPAND addNextIfPhantom FOREACH getPhantomNodes()-»
	}
}
«ENDIF-»
«ENDDEFINE»

«DEFINE addNextIfPhantom FOR gmfgen::GenTopLevelNode-»
case «getEditPartQualifiedClassName()».VISUAL_ID: {
«LET getPhantomFeatures() AS phantomFeatures-»
	org.eclipse.emf.ecore.EStructuralFeature containmentFeature = childElement.eContainmentFeature();
	if (childElement.eContainer() == null«IF phantomFeatures.size() > 0» || «EXPAND checkFeature FOREACH phantomFeatures SEPARATOR "||"»«ENDIF») {
		result.add(new org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.ElementDescriptor(childElement, nodeVID));
	}
«ENDLET-»
	break;
}
«ENDDEFINE»

«DEFINE checkFeature FOR genmodel::GenFeature»containmentFeature == «EXPAND MetaModel::MetaFeature»«ENDDEFINE»

«DEFINE getPhantomNodesIterator FOR gmfgen::GenContainerBase»«ENDDEFINE»

«DEFINE getPhantomNodesIterator FOR gmfgen::GenDiagram-»
«IF getPhantomNodes().size() > 0-»
«EXPAND xpt::Common::generatedMemberComment("By default, returns all contents of the resource. If phantoms are known to be confined in a subset of the resource contents,\n" + 
 "overwriting this method (and marking it as generated NOT) will significantly improve performance.")»
private java.util.Iterator getPhantomNodesIterator(org.eclipse.emf.ecore.resource.Resource resource) {
	return resource.getAllContents();
}
«ENDIF-»
«ENDDEFINE»
@


1.5
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template, LiteRT version updated
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.4
log
@Rewrite some templates with XPand;
Adopt VisualIDRegistry from full RT.
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d35 1
a35 1
for(java.util.Iterator it = «EXPAND xpt::commands::Common::getFeatureValue("modelObject", null, true) FOR childMetaFeature».iterator(); it.hasNext(); ) {
d38 1
a38 1
nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND xpt::commands::Common::getFeatureValue("modelObject", null, false) FOR childMetaFeature»;
d103 1
a103 1
«DEFINE checkFeature FOR genmodel::GenFeature»containmentFeature == «EXPAND xpt::Common::metaFeatureAccessor»«ENDDEFINE»
@


1.3
log
@Phantoms support
@
text
@d40 1
a40 1
nodeVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».INSTANCE.getNodeVisualID(viewObject, nextValue);
d83 1
a83 1
	nodeVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».INSTANCE.getNodeVisualID(viewObject, childElement);
@


1.2
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d19 1
d30 1
d72 44
@


1.1
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@

