head	1.4;
access;
symbols
	v20080910-1520:1.4
	v20080722-1827:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.2
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080507-1326:1.4
	v20080501-1739:1.3
	v20080425-1959:1.3
	v20080322-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070921-0000:1.2
	v20070915-0000:1.2
	v20070903-0000:1.3
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.1
	v20070614-1400:1.1
	v20070608-1300:1.1
	v20070601-1400:1.1;
locks; strict;
comment	@# @;


1.4
date	2008.05.07.13.55.37;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	388c4821b4d44567;

1.3
date	2007.08.13.14.11.02;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	65c246c066754567;

1.2
date	2007.06.15.15.36.23;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	f534672b1f74567;

1.1
date	2007.06.01.09.49.13;	author bblajer;	state Exp;
branches;
next	;
commitid	7e07465feb984567;


desc
@@


1.4
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::diagram::parts::Common»

«DEFINE EditPartFactory FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen»
package «editPartsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «editPartFactoryClassName» «EXPAND supertypes» {

	«EXPAND externalNodeLabels-»

	«EXPAND createEditPart-»

	«EXPAND createUnrecognizedEditPart-»

	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenDiagram»implements org.eclipse.gef.EditPartFactory«ENDDEFINE»

«DEFINE externalNodeLabels FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
public static final String EXTERNAL_NODE_LABELS_LAYER = "External Node Labels";	«EXPAND xpt::Common::nonNLS»
«ENDDEFINE»

«DEFINE createEditPart FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
	public org.eclipse.gef.EditPart createEditPart(org.eclipse.gef.EditPart context, Object model) {
		if (model instanceof org.eclipse.gmf.runtime.notation.View) {
			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) model;
			String modelID = «EXPAND xpt::editor::VisualIDRegistry::getModelIDMethodCall»(view);
			if (!«EXPAND xpt::editor::VisualIDRegistry::modelID».equals(modelID)) {
«IF containsShortcutsTo.size() > 0-»
				if («getDiagramEditorUtilQualifiedClassName()».isKnownShortcutModelID(modelID)) {
					org.eclipse.gmf.runtime.lite.shortcuts.IShortcutProvider shortcutProvider = org.eclipse.gmf.runtime.lite.shortcuts.ShortcutProvidersRegistry.INSTANCE.getShortcutProvider(modelID);
					if (shortcutProvider != null) {
						return shortcutProvider.createShortcutEditPart(context, view);
					}
				}
«ENDIF-»
				return null;
			}
			int viewVisualID = «EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall»(view);
			switch (viewVisualID) {
				«EXPAND doCreate FOREACH getAllContainers()-»
				«EXPAND doCreate FOREACH links-»
			}
		}
		return createUnrecognizedEditPart(context, model);
	}
«ENDDEFINE»

«DEFINE createUnrecognizedEditPart FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
	 private org.eclipse.gef.EditPart createUnrecognizedEditPart(org.eclipse.gef.EditPart context, Object model) {
	 	// Handle creation of unrecognized child node EditParts here
	 	return null;
	 }
«ENDDEFINE»

«DEFINE doCreate FOR gmfgen::GenCommonBase-»
«EXPAND caseVisualID-»
«EXPAND doCreate FOREACH getAllLabels()-»
«ENDDEFINE»

«DEFINE caseVisualID FOR gmfgen::GenCommonBase-»
case «EXPAND xpt::editor::VisualIDRegistry::visualID»:
	return new «getEditPartQualifiedClassName()»(«EXPAND cast»view);
«ENDDEFINE»

«DEFINE cast FOR gmfgen::GenCommonBase»«ENDDEFINE»

«DEFINE cast FOR gmfgen::GenDiagram»(org.eclipse.gmf.runtime.notation.Diagram) «ENDDEFINE»

«DEFINE additions FOR gmfgen::GenDiagram»«ENDDEFINE»
@


1.3
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.2
log
@i18n for all Lite templates in Xpand
@
text
@d48 10
a57 1
			if (!«EXPAND xpt::editor::VisualIDRegistry::modelID».equals(«EXPAND xpt::editor::VisualIDRegistry::getModelIDMethodCall»(view))) {
a59 1
			
d85 1
a85 1
	return new «editPartClassName»(«EXPAND cast»view);
@


1.1
log
@rewrite EditPartFactory in XPand
@
text
@d40 1
a40 1
public static final String EXTERNAL_NODE_LABELS_LAYER = "External Node Labels";
@

