head	1.7;
access;
symbols
	v20080910-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.5
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.3
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.13.55.37;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	388c4821b4d44567;

1.6
date	2008.02.26.22.50.33;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	405e47c497b74567;

1.5
date	2007.08.13.14.11.02;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	65c246c066754567;

1.4
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	25e5464e17e24567;

1.3
date	2007.05.04.14.08.43;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	464d463b3e6a4567;

1.2
date	2007.04.24.14.16.48;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	4264462e114e4567;

1.1
date	2007.04.04.11.04.48;	author bblajer;	state Exp;
branches;
next	;
commitid	18c54613864d4567;


desc
@@


1.7
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::diagram::LinkFinder»
«EXTENSION xpt::diagram::parts::LinkNotationModelRefresher»

«DEFINE installClause FOR gmfgen::GenCommonBase-»
«IF needsLinkNotationModelRefresher()-»
installLinkNotationModelRefresher();
«ENDIF-»
«ENDDEFINE»

«DEFINE uninstallClause FOR gmfgen::GenCommonBase-»
«IF needsLinkNotationModelRefresher()-»
uninstallLinkNotationModelRefresher();
«ENDIF-»
«ENDDEFINE»

«DEFINE all FOR gmfgen::GenCommonBase-»
«IF needsLinkNotationModelRefresher()-»
«EXPAND install-»
«EXPAND uninstall-»
«EXPAND getLinkNotationModelRefresher-»
«EXPAND viewService-»
«EXPAND refresh-»
«EXPAND LinkNotationModelRefresher-»
«ENDIF-»
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenCommonBase»LinkNotationModelRefresher«ENDDEFINE»

«DEFINE install FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
private void installLinkNotationModelRefresher() {
	«EXPAND className» refresher = getLinkNotationModelRefresher();
	if (!getTransactionalUpdateManager().isNotationModelRefresherInstalled(refresher)) {
		getTransactionalUpdateManager().addNotationModelRefresher(refresher);
		try {
			refreshLinkNotationModel();
		} catch (java.lang.IllegalStateException readOnlyContext) {
			//Most likely, this means that the host element was created in a precommit notification of a transaction.
			//While it is impossible to execute this command here, it will be executed as a trigger command.
			//See org.eclipse.gmf.runtime.lite.edit.parts.update.TransactionalUpdateManager for details.
		}
	}
}
«ENDDEFINE»

«DEFINE uninstall FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
private void uninstallLinkNotationModelRefresher() {
	«EXPAND className» refresher = getLinkNotationModelRefresher();
	getTransactionalUpdateManager().removeNotationModelRefresher(refresher);
}
«ENDDEFINE»

«DEFINE getLinkNotationModelRefresher FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
private «EXPAND className» linkNotationModelRefresher;

«EXPAND xpt::Common::generatedMemberComment»
private «EXPAND className» getLinkNotationModelRefresher() {
	if (linkNotationModelRefresher == null) {
		linkNotationModelRefresher = new «EXPAND className»(getViewService());
	}
	return linkNotationModelRefresher;
}
«ENDDEFINE»

«DEFINE viewService FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment("Service to find a notational element that corresponds to the given underlying domain element.")»
private org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.IViewService viewService;

«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.IViewService getViewService() {
	if (viewService == null) {
		viewService = new org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.EditPartRegistryBasedViewService(getViewer());
	}
	return viewService;
}
«ENDDEFINE»

«DEFINE refresh FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected void refreshLinkNotationModel() {
	«EXPAND className» linkRefresher = getLinkNotationModelRefresher();
	org.eclipse.emf.common.command.Command command = linkRefresher.buildRefreshNotationModelCommand();
	if (command == null) {
		return;
	}
	org.eclipse.emf.transaction.TransactionalEditingDomain domainModelEditDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(«EXPAND xpt::diagram::parts::Common::getDiagramElementCode»);
	getViewer().getEditDomain().getCommandStack().execute(new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(domainModelEditDomain, command));
}
«ENDDEFINE»

«DEFINE LinkNotationModelRefresher FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedClassComment»
private class «EXPAND className» «EXPAND supertypes» {
	«EXPAND ctors-»
	«EXPAND getConstrainedChildrenFilter-»
	«EXPAND createUncontainedLinksFilter-»
	«EXPAND createFilter-»
	«EXPAND getSemanticLinks-»
	«EXPAND getNotationalLinks-»
	«EXPAND getCreateNotationalElementCommand-»
	«EXPAND shouldCreateView-»
	«EXPAND getHost-»
	«EXPAND additions-»
	}
«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenCommonBase»extends org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.OwnedLinksNotationModelRefresher«ENDDEFINE»

«DEFINE ctors FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
public «EXPAND className»(org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.IViewService viewService) {
	super(viewService);
}
«ENDDEFINE»

«DEFINE getConstrainedChildrenFilter FOR gmfgen::GenCommonBase-»
«IF containedLinksWithSelector().size() > 0-»
«EXPAND xpt::Common::generatedMemberComment("TODO: Child links of this element are selected based on constraint declared in " + getDiagram().getVisualIDRegistryQualifiedClassName() + ". \n" + 
  "Since no assumptions may be made concerning the runtime behavior of the constraint, <b>any</b> non-touch notification may result in \n" + 
  "notational model having to be updated.\n" + 
  "<p/>User is encouraged to change implementation of this method to provide an optimization if it is safe to assume that not all notifications\n" + 
  "result in such an update.")»
private org.eclipse.emf.transaction.NotificationFilter getConstrainedChildLinksFilter() {
	return org.eclipse.emf.transaction.NotificationFilter.NOT_TOUCH;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE createUncontainedLinksFilter FOR gmfgen::GenCommonBase-»
«ENDDEFINE»

«DEFINE createUncontainedLinksFilter FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment("Creates a notification filter which filters notifications that may possibly result in uncontained links. ")»
private org.eclipse.emf.transaction.NotificationFilter createUncontainedLinksFilter() {
	return org.eclipse.emf.transaction.NotificationFilter.createEventTypeFilter(org.eclipse.emf.common.notify.Notification.SET).or(
		org.eclipse.emf.transaction.NotificationFilter.createEventTypeFilter(org.eclipse.emf.common.notify.Notification.UNSET).or(
		org.eclipse.emf.transaction.NotificationFilter.createEventTypeFilter(org.eclipse.emf.common.notify.Notification.REMOVE).or(
		org.eclipse.emf.transaction.NotificationFilter.createEventTypeFilter(org.eclipse.emf.common.notify.Notification.REMOVE_MANY)
	)));
}
«ENDDEFINE»

«DEFINE createFilter FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment("Creates a notification filter which filters notifications that may possibly affect the notational model")»
protected org.eclipse.emf.transaction.NotificationFilter createFilter() {
«LET getAffectingFeatures() AS affectingFeatures-»
«FOREACH affectingFeatures AS nextFeature ITERATOR it-»
	«IF it.isFirstIteration()»org.eclipse.emf.transaction.NotificationFilter filter = «EXPAND createFeatureFilter FOR nextFeature»;«ELSE-»
	filter = filter.or(«EXPAND createFeatureFilter FOR nextFeature»);«ENDIF-»
«ENDFOREACH-»
«IF containedLinksWithSelector().size() > 0-»
	«IF affectingFeatures.size() > 0-»
	filter = getConstrainedChildLinksFilter().or(filter);
	«ELSE-»
	org.eclipse.emf.transaction.NotificationFilter filter = getConstrainedChildLinksFilter();
	«ENDIF-»
«ENDIF-»
«IF {this}.typeSelect(gmfgen::GenDiagram).size() > 0-»
	«IF affectingFeatures.size() + containedLinksWithSelector().size() > 0-»
	filter = filter.or(createUncontainedLinksFilter());
	«ELSE-»
	org.eclipse.emf.transaction.NotificationFilter filter = createUncontainedLinksFilter();
	«ENDIF-»
«ELSE-»
	«REM»Make sure filter var is declared«ENDREM-»
	«IF affectingFeatures.size() + containedLinksWithSelector().size() == 0-»
	org.eclipse.emf.transaction.NotificationFilter filter = org.eclipse.emf.transaction.NotificationFilter.NOT_TOUCH;
	«ENDIF-»
«ENDIF-»
«ENDLET-»
	return filter;
}
«ENDDEFINE»

«DEFINE createFeatureFilter FOR genmodel::GenFeature»org.eclipse.emf.transaction.NotificationFilter.createFeatureFilter(«EXPAND MetaModel::MetaFeature»)«ENDDEFINE»

«DEFINE getSemanticLinks FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected java.util.List getSemanticChildLinks() {
«EXPAND xpt::diagram::parts::semanticChildLinks::semanticChildLinks("getHost()")-»
}
«ENDDEFINE»

«DEFINE getNotationalLinks FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected java.util.List getNotationalChildLinks() {
	java.util.List result = new java.util.LinkedList();
	java.util.List allLinks = «EXPAND xpt::diagram::parts::Common::getDiagramCode».getEdges();
	for(java.util.Iterator it = allLinks.iterator(); it.hasNext(); ) {
		org.eclipse.gmf.runtime.notation.Edge next = (org.eclipse.gmf.runtime.notation.Edge) it.next();
		«EXPAND uncontainedLinks-»
		«EXPAND containedFeatureModelLinks-»
		«EXPAND containedTypeModelLinks-»
	}
	return result;
}
«ENDDEFINE»

«DEFINE uncontainedLinks FOR gmfgen::GenCommonBase»«ENDDEFINE»

«DEFINE uncontainedLinks FOR gmfgen::GenDiagram-»
if (next.isSetElement() && next.getElement() != null && next.getElement().eResource() == null) {
	result.add(next);
	continue;
}
org.eclipse.gmf.runtime.notation.View source = next.getSource();
if (source == null || (source.isSetElement() && source.getElement() != null && source.getElement().eResource() == null)) {
	result.add(next);
	continue;
}
org.eclipse.gmf.runtime.notation.View target = next.getTarget();
if (target == null || (target.isSetElement() && target.getElement() != null && target.getElement().eResource() == null)) {
	result.add(next);
	continue;
}
«ENDDEFINE»

«DEFINE containedFeatureModelLinks FOR gmfgen::GenCommonBase-»
«IF containedFeatureModelFacetLinks().size() > 0-»
if (next.isSetElement() && next.getElement() == null) {
	if (next.getSource() == getHost()) {
		int linkVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(next);
		switch (linkVID) {
		«EXPAND caseVisualId FOREACH containedFeatureModelFacetLinks()-»
			result.add(next);
			break;
		}
	}
}
«ENDIF-»
«ENDDEFINE»

«DEFINE containedTypeModelLinks FOR gmfgen::GenCommonBase-»
«IF containedTypeModelFacetLinks().size() > 0-»
if (next.isSetElement() && next.getElement() != null) {
	if (next.getElement().eContainer() == «EXPAND xpt::diagram::parts::Common::getViewCode».getElement()) {
		int linkVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(next);
		switch (linkVID) {
		«EXPAND caseVisualId FOREACH containedTypeModelFacetLinks()-»
			result.add(next);
			break;
		}
	}
}
«ENDIF-»
«ENDDEFINE»

«DEFINE caseVisualId FOR gmfgen::GenLink-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
«ENDDEFINE»

«DEFINE getCreateNotationalElementCommand FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.lite.commands.CreateNotationalElementCommand getCreateNotationalElementCommand(org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.ElementDescriptor descriptor) {
«IF primNeedsLinkNotationModelRefresher()-»
	org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.LinkDescriptor linkDescriptor = (org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.LinkDescriptor) descriptor;
	«EXPAND xpt::commands::createNotationalElementCommand::defineDecorator-»
	«IF getDiagram().shortcutsProvidedFor.size() > 0-»
	String diagramModelID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getModelID(getHost().getDiagram());
	if (!«getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(diagramModelID)) {
		return new «EXPAND xpt::commands::CreateShortcutEdgeCommand::qualifiedClassName FOR getDiagram()»(getHost().getDiagram(), linkDescriptor.getElement(), sourceView, targetView, decorator);
	}
	«ENDIF-»
	«EXPAND xpt::commands::createNotationalElementCommand::instantiateNotationalEdgeCommand("getHost().getDiagram()")-»
«ELSE-»
	return null;
«ENDIF-»
}
«ENDDEFINE»

«DEFINE shouldCreateView FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment("Returns whether a notational edge should be created for the given domain element. \n" + 
  "The generated code respects canonical style. If the canonycal style is not present, " + (getDiagram().synchronized ? "true" : "false") + " is always returned. \n" + 
  "User can change implementation of this method to handle a more sophisticated logic.")»
protected boolean shouldCreateView(org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.ElementDescriptor descriptor) {
	org.eclipse.gmf.runtime.notation.CanonicalStyle style = (org.eclipse.gmf.runtime.notation.CanonicalStyle) «EXPAND xpt::diagram::parts::Common::getViewCode».getStyle(org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getCanonicalStyle());
	if (style == null) {
		return «getDiagram().synchronized»;
	}
	return style.isCanonical();
}
«ENDDEFINE»

«DEFINE getHost FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.notation.View getHost() {
	return «EXPAND xpt::diagram::parts::Common::getViewCode»;
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenCommonBase»«ENDDEFINE»
@


1.6
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template, LiteRT version updated
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.5
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d193 1
a193 1
«DEFINE createFeatureFilter FOR genmodel::GenFeature»org.eclipse.emf.transaction.NotificationFilter.createFeatureFilter(«EXPAND xpt::Common::metaFeatureAccessor»)«ENDDEFINE»
@


1.4
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d49 10
a58 1
	getTransactionalUpdateManager().addNotationModelRefresher(refresher);
a99 3
	if (!linkRefresher.isInstalled()) {
		return;
	}
d275 8
a282 1
	«EXPAND xpt::commands::createNotationalElementCommand::createNotationalEdgeCommand("getHost().getDiagram()")-»
@


1.3
log
@1. Links to links;
2. Exception from TreeEditPartViewer (in the outline) while closing the diagram editor (because unregister is not called, only deactivate) fixed;
3. instead of rerouting a link to an end that does not support it, remove the link
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.2
log
@CanonicalStyle is taken into account while refreshing notational model to reflect changes in underlying domain model;
Update is now centralized and transactional;
Changes to visibility are dispatched to the parent of the affected view as well (was: only to the view itself);
Save options are not reused, for easy modification of the generated code;
Side-affixed children are not considered direct children;
Empty edit-patterns are treated the same way as null patterns (view pattern is used instead).
@
text
@d20 1
a20 1
«DEFINE installClause FOR gmfgen::GenContainerBase-»
d26 1
a26 1
«DEFINE uninstallClause FOR gmfgen::GenContainerBase-»
d32 1
a32 1
«DEFINE all FOR gmfgen::GenContainerBase-»
d43 1
a43 1
«DEFINE className FOR gmfgen::GenContainerBase»LinkNotationModelRefresher«ENDDEFINE»
d45 1
a45 1
«DEFINE install FOR gmfgen::GenContainerBase-»
d53 1
a53 1
«DEFINE uninstall FOR gmfgen::GenContainerBase-»
d61 1
a61 1
«DEFINE getLinkNotationModelRefresher FOR gmfgen::GenContainerBase-»
d74 1
a74 1
«DEFINE viewService FOR gmfgen::GenContainerBase-»
d87 1
a87 1
«DEFINE refresh FOR gmfgen::GenContainerBase-»
d103 1
a103 1
«DEFINE LinkNotationModelRefresher FOR gmfgen::GenContainerBase-»
d119 1
a119 1
«DEFINE supertypes FOR gmfgen::GenContainerBase»extends org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.OwnedLinksNotationModelRefresher«ENDDEFINE»
d121 1
a121 1
«DEFINE ctors FOR gmfgen::GenContainerBase-»
d128 1
a128 1
«DEFINE getConstrainedChildrenFilter FOR gmfgen::GenContainerBase-»
d141 1
a141 1
«DEFINE createUncontainedLinksFilter FOR gmfgen::GenContainerBase-»
d155 1
a155 1
«DEFINE createFilter FOR gmfgen::GenContainerBase-»
d189 1
a189 1
«DEFINE getSemanticLinks FOR gmfgen::GenContainerBase-»
d196 1
a196 1
«DEFINE getNotationalLinks FOR gmfgen::GenContainerBase-»
d211 1
a211 1
«DEFINE uncontainedLinks FOR gmfgen::GenContainerBase»«ENDDEFINE»
d230 1
a230 1
«DEFINE containedFeatureModelLinks FOR gmfgen::GenContainerBase-»
d245 1
a245 1
«DEFINE containedTypeModelLinks FOR gmfgen::GenContainerBase-»
d264 1
a264 1
«DEFINE getCreateNotationalElementCommand FOR gmfgen::GenContainerBase-»
d276 1
a276 1
«DEFINE shouldCreateView FOR gmfgen::GenContainerBase-»
d289 1
a289 1
«DEFINE getHost FOR gmfgen::GenContainerBase-»
d296 1
a296 1
«DEFINE additions FOR gmfgen::GenContainerBase»«ENDDEFINE»
@


1.1
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@d49 1
a49 6
	if (refresher.isInstalled()) {
		return;
	}
	org.eclipse.emf.transaction.TransactionalEditingDomain domainModelEditDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(«EXPAND xpt::diagram::parts::Common::getDiagramElementCode»);
	refresher.install(domainModelEditDomain);
	refreshLinkNotationModel();
d56 2
a57 1
	getLinkNotationModelRefresher().uninstall();
d278 1
a278 1
  "The generated code always returns " + (getDiagram().synchronized ? "true" : "false") + ". \n" + 
d281 5
a285 1
	return «getDiagram().synchronized»;
@

