head	1.13;
access;
symbols
	v20080910-1520:1.13
	v20080722-1827:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.2
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080507-1326:1.13
	v20080501-1739:1.12
	v20080425-1959:1.12
	v20080322-0000:1.12
	v20071108-0000:1.12
	v20071003-0000:1.12
	v20070921-0000:1.7.2.1
	v20070915-0000:1.7
	v20070903-0000:1.12
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.7
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070520-1200:1.6
	v20070518-1300:1.5
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.2
	v20070228-2000:1.1;
locks; strict;
comment	@# @;


1.13
date	2008.05.07.13.55.39;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	388c4821b4d44567;

1.12
date	2007.08.22.14.18.07;	author bblajer;	state Exp;
branches;
next	1.11;
commitid	eaf46cc459f4567;

1.11
date	2007.08.15.14.52.55;	author bblajer;	state Exp;
branches;
next	1.10;
commitid	69a446c313474567;

1.10
date	2007.08.13.16.34.54;	author bblajer;	state Exp;
branches;
next	1.9;
commitid	32a46c0882e4567;

1.9
date	2007.08.13.14.11.02;	author bblajer;	state Exp;
branches;
next	1.8;
commitid	65c246c066754567;

1.8
date	2007.07.04.13.22.27;	author bblajer;	state Exp;
branches;
next	1.7;
commitid	405d468b9f0f4567;

1.7
date	2007.05.21.16.38.31;	author bblajer;	state Exp;
branches
	1.7.2.1;
next	1.6;
commitid	4ab64651cb064567;

1.6
date	2007.05.18.21.17.26;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	25e5464e17e24567;

1.5
date	2007.05.11.11.39.03;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	79e1464455d74567;

1.4
date	2007.05.04.17.46.29;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	62fb463b71754567;

1.3
date	2007.03.09.17.19.35;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	22ed45f197244567;

1.2
date	2007.03.05.12.58.42;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	437c45ec14004567;

1.1
date	2007.02.23.16.19.36;	author bblajer;	state Exp;
branches;
next	;
commitid	496945df14164567;

1.7.2.1
date	2007.09.17.16.02.13;	author bblajer;	state Exp;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.13
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::diagram::policies::i18n»
«EXTENSION xpt::diagram::policies::ClassNames»
«EXTENSION xpt::diagram::policies::ComponentEditPolicy»
«EXTENSION xpt::diagram::LinkFinder»

«DEFINE ComponentEditPolicy FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editPoliciesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND createDeleteCommand-»
	«EXPAND getDeleteViewCommand-»
	«EXPAND canDeleteView-»
«IF needsGetGraphicalEditPart()-»
	«EXPAND getGraphicalEditPart-»
«ENDIF-»
	«EXPAND domainModelRemoveCommand-»
	«EXPAND getDiagramElement-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE domainModelRemoveCommand FOR GenCommonBase»«ERROR "Unexpected type!"»«ENDDEFINE»

«DEFINE domainModelRemoveCommand FOR GenNode-»
«EXPAND xpt::commands::domainModelRemoveCommand::domainModelRemoveCommand("getDiagramNode()")-»
«ENDDEFINE»

«DEFINE domainModelRemoveCommand FOR GenLink-»
«EXPAND xpt::commands::domainModelRemoveCommand::domainModelRemoveCommand("getDiagramEdge()")-»
«ENDDEFINE»

«DEFINE getDiagramElement FOR GenCommonBase»«ERROR "Unexpected type!"»«ENDDEFINE»

«DEFINE getDiagramElement FOR GenNode-»
«EXPAND getDiagramNode-»
«ENDDEFINE»

«DEFINE getDiagramElement FOR GenLink-»
«EXPAND getDiagramEdge-»
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenCommonBase»«getComponentEditPolicyClassName()»«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenCommonBase»«getDiagram().editPoliciesPackageName».«EXPAND className»«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenCommonBase»extends org.eclipse.gmf.runtime.lite.edit.policies.ComponentEditPolicyEx«ENDDEFINE»

«DEFINE createDeleteCommand FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command createDeleteCommand(org.eclipse.gef.requests.GroupRequest deleteRequest) {
	org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(«EXPAND getDiagramElementMethodName»().getDiagram().getElement());
«LET incomingTypeLinks() AS incomingTypeLinks-»
«LET outgoingNonPhantomLinks() AS outgoingLinks-»
«IF incomingTypeLinks.size() > 0 || outgoingLinks.size() > 0-»
	org.eclipse.gmf.runtime.lite.commands.CompositeWrappingCommand result = new org.eclipse.gmf.runtime.lite.commands.CompositeWrappingCommand(editingDomain, «EXPAND xpt::Externalizer::accessorCall(getDiagram().i18nKeyForDeleteModelElementLabel()) FOR getDiagram().editorGen»);
«ENDIF-»
	«EXPAND deleteIncomingLinks(incomingTypeLinks, true)-»
	«EXPAND deleteOutgoingLinks(outgoingLinks, true)-»
	«EXPAND createDeleteCommandPrim(true)-»
«IF incomingTypeLinks.size() > 0 || outgoingLinks.size() > 0-»
	result.add(cc);
	return result;
«ELSE-»
	return new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, cc);
«ENDIF-»
«ENDLET-»
«ENDLET-»
}
«ENDDEFINE»

«DEFINE deleteIncomingLinks(Collection[gmfgen::GenLink] incomingLinks, boolean deleteFromModel) FOR gmfgen::GenCommonBase-»
«IF incomingLinks.size() > 0-»
	for(java.util.Iterator it = getGraphicalEditPart().getTargetConnections().iterator(); it.hasNext(); ) {
		org.eclipse.gef.EditPart nextEditPart = (org.eclipse.gef.EditPart) it.next();
		org.eclipse.gmf.runtime.notation.Edge nextEdge = (org.eclipse.gmf.runtime.notation.Edge) nextEditPart.getModel();
		int visualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(nextEdge);
		switch (visualID) {
«FOREACH incomingLinks AS nextLink-»
		case «nextLink.getEditPartQualifiedClassName()».VISUAL_ID:
«ENDFOREACH-»
			«EXPAND deleteDependentLinks(deleteFromModel)-»
		}
	}
«ENDIF-»
«ENDDEFINE»

«DEFINE deleteOutgoingLinks(Collection[gmfgen::GenLink] outgoingLinks, boolean deleteFromModel) FOR gmfgen::GenCommonBase-»
«IF outgoingLinks.size() > 0-»
	for(java.util.Iterator it = getGraphicalEditPart().getSourceConnections().iterator(); it.hasNext(); ) {
		org.eclipse.gef.EditPart nextEditPart = (org.eclipse.gef.EditPart) it.next();
		org.eclipse.gmf.runtime.notation.Edge nextEdge = (org.eclipse.gmf.runtime.notation.Edge) nextEditPart.getModel();
		int visualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(nextEdge);
		switch (visualID) {
«FOREACH outgoingLinks AS nextLink-»
		case «nextLink.getEditPartQualifiedClassName()».VISUAL_ID:
«ENDFOREACH-»
			«EXPAND deleteDependentLinks(deleteFromModel)-»
		}
	}
«ENDIF-»
«ENDDEFINE»

«DEFINE deleteDependentLinks(boolean deleteFromModel) FOR gmfgen::GenCommonBase-»
{
	org.eclipse.gef.requests.GroupRequest deleteLinkRequest = new org.eclipse.gef.requests.GroupRequest(«IF deleteFromModel»org.eclipse.gef.RequestConstants.REQ_DELETE«ELSE»org.eclipse.gmf.runtime.lite.requests.RequestConstants.REQ_FORCED_DELETE_VIEW«ENDIF»);
	deleteLinkRequest.setEditParts(nextEditPart);
	result.add(nextEditPart.getCommand(deleteLinkRequest));
	break;
}
«ENDDEFINE»

«DEFINE getGraphicalEditPart FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.GraphicalEditPart getGraphicalEditPart() {
	return (org.eclipse.gef.GraphicalEditPart) getHost();
}
«ENDDEFINE»

«DEFINE createDeleteCommandPrim(boolean deleteFromModel) FOR gmfgen::GenCommonBase»«ERROR "UnexpectedType"»«ENDDEFINE»

«DEFINE createDeleteCommandPrim(boolean deleteFromModel) FOR gmfgen::GenNode-»
org.eclipse.emf.common.command.CompoundCommand cc = new org.eclipse.emf.common.command.CompoundCommand();
«IF deleteFromModel-»
cc.append(createDomainModelRemoveCommand(editingDomain));
«ENDIF-»
cc.append(new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalElementCommand((org.eclipse.gmf.runtime.notation.View) «EXPAND getDiagramElementMethodName»().eContainer(), «EXPAND getDiagramElementMethodName»()));
«ENDDEFINE»

«DEFINE createDeleteCommandPrim(boolean deleteFromModel) FOR gmfgen::GenLink-»
org.eclipse.emf.common.command.CompoundCommand cc = new org.eclipse.emf.common.command.CompoundCommand();
«IF deleteFromModel-»
cc.append(createDomainModelRemoveCommand(editingDomain));
«ENDIF-»
cc.append(new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalEdgeCommand(«EXPAND getDiagramElementMethodName»().getDiagram(), «EXPAND getDiagramElementMethodName»()));
«ENDDEFINE»

«DEFINE getDiagramElementMethodName FOR gmfgen::GenCommonBase»«ERROR "Unexpected type: " + this»«ENDDEFINE»
«DEFINE getDiagramElementMethodName FOR gmfgen::GenNode»getDiagramNode«ENDDEFINE»
«DEFINE getDiagramElementMethodName FOR gmfgen::GenLink»getDiagramEdge«ENDDEFINE»

«DEFINE getDiagramNode FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.notation.Node «EXPAND getDiagramElementMethodName»() {
	return (org.eclipse.gmf.runtime.notation.Node) getHost().getModel();
}
«ENDDEFINE»

«DEFINE getDiagramEdge FOR gmfgen::GenLink-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.notation.Edge «EXPAND getDiagramElementMethodName»() {
	return (org.eclipse.gmf.runtime.notation.Edge) getHost().getModel();
}
«ENDDEFINE»

«DEFINE getDeleteViewCommand FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getDeleteViewCommand(org.eclipse.gef.requests.GroupRequest deleteRequest, boolean isForced) {
	if (!isForced && !canDeleteView()) {
		return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
	}
	org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(«EXPAND getDiagramElementMethodName»().getDiagram().getElement());
«LET incomingLinks() AS incomingLinks-»
«LET outgoingLinks() AS outgoingLinks-»
«IF incomingLinks.size() > 0 || outgoingLinks.size() > 0-»
	org.eclipse.gmf.runtime.lite.commands.CompositeWrappingCommand result = new org.eclipse.gmf.runtime.lite.commands.CompositeWrappingCommand(editingDomain, «EXPAND xpt::Externalizer::accessorCall(getDiagram().i18nKeyForDeleteDiagramElementLabel()) FOR getDiagram().editorGen»);
«ENDIF-»
	«EXPAND deleteIncomingLinks(incomingLinks, false)-»
	«EXPAND deleteOutgoingLinks(outgoingLinks, false)-»
	«EXPAND createDeleteCommandPrim(false)-»
«IF incomingLinks.size() > 0 || outgoingLinks.size() > 0-»
	result.add(cc);
	return result;
«ELSE-»
	return new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, cc);
«ENDIF-»
«ENDLET-»
«ENDLET-»
}
«ENDDEFINE»

«DEFINE canDeleteView FOR gmfgen::GenCommonBase»«ERROR "Unexpected Type: " + this»«ENDDEFINE»

«DEFINE canDeleteView FOR gmfgen::GenLink-»
«EXPAND xpt::Common::generatedMemberComment»
private boolean canDeleteView() {
	return false;
}
«ENDDEFINE»

«DEFINE canDeleteView FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
private boolean canDeleteView() {
	if («EXPAND getDiagramElementMethodName»().getEAnnotation("Shortcut") != null) {	«EXPAND xpt::Common::nonNLS»
		return true;
	}
	org.eclipse.gmf.runtime.notation.View parentView = (org.eclipse.gmf.runtime.notation.View) «EXPAND getDiagramElementMethodName»().eContainer();
	if (parentView == null) {
		return true;
	}
	org.eclipse.gmf.runtime.notation.CanonicalStyle canonicalStyle = (org.eclipse.gmf.runtime.notation.CanonicalStyle) parentView.getStyle(org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getCanonicalStyle());
	if (canonicalStyle != null) {
		return !canonicalStyle.isCanonical();
	}
	return «!getDiagram().synchronized»;
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenCommonBase»«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForDeleteModelElementLabel())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForDeleteDiagramElementLabel())-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForDeleteModelElementLabel(), "Delete Model Element")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForDeleteDiagramElementLabel(), "Delete Diagram Element")-»
«ENDDEFINE»
@


1.12
log
@It should not be possible to delete a link from diagram via UI (links are always canonical).
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.11
log
@Incoming links should not point nowhere after deleting the target shortcut from diagram only
@
text
@d122 1
a122 1
	org.eclipse.gef.requests.GroupRequest deleteLinkRequest = new org.eclipse.gef.requests.GroupRequest(«IF deleteFromModel»org.eclipse.gef.RequestConstants.REQ_DELETE«ELSE»org.eclipse.gmf.runtime.lite.requests.RequestConstants.REQ_DELETE_VIEW«ENDIF»);
d174 2
a175 2
protected org.eclipse.gef.commands.Command getDeleteViewCommand(org.eclipse.gef.requests.GroupRequest deleteRequest) {
	if (!canDeleteView()) {
d203 1
a203 1
	return true;
@


1.10
log
@Fix compilation problems
@
text
@d17 1
d68 1
d72 1
a72 1
	final org.eclipse.gef.commands.CompoundCommand result = new org.eclipse.gef.commands.CompoundCommand();
d78 2
a79 2
	result.add(new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, cc));
	«EXPAND unwrapResult-»
a138 1
org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(getDiagramNode().getDiagram().getElement());
d143 1
a143 1
cc.append(new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalElementCommand((org.eclipse.gmf.runtime.notation.View) getDiagramNode().eContainer(), getDiagramNode()));
a146 1
org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(getDiagramEdge().getDiagram().getElement());
d151 1
a151 1
cc.append(new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalEdgeCommand(getDiagramEdge().getDiagram(), getDiagramEdge()));
d154 4
d160 1
a160 1
protected org.eclipse.gmf.runtime.notation.Node getDiagramNode() {
d167 1
a167 1
protected org.eclipse.gmf.runtime.notation.Edge getDiagramEdge() {
d178 1
d182 1
a182 1
	final org.eclipse.gef.commands.CompoundCommand result = new org.eclipse.gef.commands.CompoundCommand();
d188 2
a189 2
	result.add(new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, cc));
	«EXPAND unwrapResult-»
d210 1
a210 1
	if (getDiagramNode().getEAnnotation("Shortcut") != null) {	«EXPAND xpt::Common::nonNLS»
d213 1
a213 1
	org.eclipse.gmf.runtime.notation.View parentView = (org.eclipse.gmf.runtime.notation.View) getDiagramNode().eContainer();
d225 5
a229 6
«DEFINE unwrapResult FOR gmfgen::GenCommonBase-»
	if (result.size() > 1) {
		return result;
	} else {
		return result.unwrap();
	}
d232 4
a235 1
«DEFINE additions FOR gmfgen::GenCommonBase»«ENDDEFINE»
@


1.9
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d222 1
a222 1
		
@


1.8
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d28 2
d62 1
a62 1
«DEFINE supertypes FOR gmfgen::GenCommonBase»extends org.eclipse.gef.editpolicies.ComponentEditPolicy«ENDDEFINE»
d70 1
a70 1
	org.eclipse.gef.commands.CompoundCommand result = new org.eclipse.gef.commands.CompoundCommand();
d72 16
a87 1
«IF incomingTypeLinks.size() > 0-»
d93 1
a93 1
«FOREACH incomingTypeLinks AS nextLink-»
d96 1
a96 1
			«EXPAND deleteDependentLinks-»
d100 3
d112 1
a112 1
			«EXPAND deleteDependentLinks-»
a115 10
	«EXPAND createDeleteCommandPrim-»
«IF incomingTypeLinks.size() > 0 || outgoingLinks.size() > 0-»
	result.add(new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, cc));
	return result.unwrap();
«ELSE-»
	return new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, cc);
«ENDIF-»
«ENDLET-»
«ENDLET-»
}
d118 1
a118 1
«DEFINE deleteDependentLinks FOR gmfgen::GenCommonBase-»
d120 1
a120 1
	org.eclipse.gef.requests.GroupRequest deleteLinkRequest = new org.eclipse.gef.requests.GroupRequest(org.eclipse.gef.RequestConstants.REQ_DELETE);
d134 1
a134 1
«DEFINE createDeleteCommandPrim FOR gmfgen::GenCommonBase»«ERROR "UnexpectedType"»«ENDDEFINE»
d136 1
a136 1
«DEFINE createDeleteCommandPrim FOR gmfgen::GenNode-»
d139 1
d141 1
d145 1
a145 1
«DEFINE createDeleteCommandPrim FOR gmfgen::GenLink-»
d148 1
d150 1
d168 60
@


1.7
log
@Phantoms support
@
text
@d26 1
a26 1
public class «getComponentEditPolicyClassName()» «EXPAND supertypes» {
d57 3
@


1.7.2.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@d26 1
a26 1
public class «EXPAND className» «EXPAND supertypes» {
a56 3
«DEFINE className FOR gmfgen::GenCommonBase»«getComponentEditPolicyClassName()»«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenCommonBase»«getDiagram().editPoliciesPackageName».«EXPAND className»«ENDDEFINE»

@


1.6
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d63 1
a63 1
«LET outgoingLinks() AS outgoingLinks-»
@


1.5
log
@Labels with undefined label displayer should not be editable;
Empty label text should always be replaced with default text;
Closing and reopening outline should not lead to "widget disposed" exceptions;
Delete outgoing links before deleting element.
Make it easier to set the default text to display in the outline
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.4
log
@[170078]: Remove link with class from the domain model on deleting link's destination (as applied to links-to-links)
@
text
@d18 1
d28 1
a28 2
«LET incomingLinks().select(e| {e.modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).size() > 0) AS incomingTypeLinks-»
«IF incomingTypeLinks.size() > 0-»
a30 1
«ENDLET-»
d62 5
a66 1
«LET incomingLinks().select(e| {e.modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).size() > 0) AS incomingTypeLinks-»
a67 1
	org.eclipse.gef.commands.CompoundCommand result = new org.eclipse.gef.commands.CompoundCommand();
d76 14
a89 6
			{
				org.eclipse.gef.requests.GroupRequest deleteLinkRequest = new org.eclipse.gef.requests.GroupRequest(org.eclipse.gef.RequestConstants.REQ_DELETE);
				deleteLinkRequest.setEditParts(nextEditPart);
				result.add(nextEditPart.getCommand(deleteLinkRequest));
				break;
			}
d94 1
a94 1
«IF incomingTypeLinks.size() > 0-»
d101 10
@


1.3
log
@[164018]: Command generation separated from Parts for layout edit policy and graphical node edit policy;
NewDiagramFileWizard: layout is not persisted if the diagram is closed right after initialization
@
text
@d20 1
a20 1
«DEFINE ComponentEditPolicy FOR gmfgen::GenNode-»
d27 2
d30 4
a33 2
	«EXPAND xpt::commands::domainModelRemoveCommand::domainModelRemoveCommand("getDiagramNode()")-»
	«EXPAND getDiagramNode-»
d38 15
a52 3
«DEFINE ComponentEditPolicy FOR gmfgen::GenLink-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editPoliciesPackageName»;
d54 2
a55 7
«EXPAND xpt::Common::generatedClassComment»
public class «getComponentEditPolicyClassName()» «EXPAND supertypes» {
	«EXPAND createDeleteCommand-»
	«EXPAND xpt::commands::domainModelRemoveCommand::domainModelRemoveCommand("getDiagramEdge()")-»
	«EXPAND getDiagramEdge-»
	«EXPAND additions-»
}
d60 1
a60 1
«DEFINE createDeleteCommand FOR gmfgen::GenNode-»
d83 1
a83 4
	org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(getDiagramNode().getDiagram().getElement());
	org.eclipse.emf.common.command.CompoundCommand cc = new org.eclipse.emf.common.command.CompoundCommand();
	cc.append(createDomainModelRemoveCommand(editingDomain));
	cc.append(new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalElementCommand((org.eclipse.gmf.runtime.notation.View) getDiagramNode().eContainer(), getDiagramNode()));
d94 1
a94 1
«DEFINE getGraphicalEditPart FOR gmfgen::GenNode-»
d101 14
a114 9
«DEFINE createDeleteCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command createDeleteCommand(org.eclipse.gef.requests.GroupRequest deleteRequest) {
	org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(getDiagramEdge().getDiagram().getElement());
	org.eclipse.emf.common.command.CompoundCommand cc = new org.eclipse.emf.common.command.CompoundCommand();
	cc.append(createDomainModelRemoveCommand(editingDomain));
	cc.append(new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalEdgeCommand(getDiagramEdge().getDiagram(), getDiagramEdge()));
	return new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, cc);
}
@


1.2
log
@[176362]: ClassCastException while selecting items in tree outline of the generated diagram + test to reproduce;
ComponentEditPolicy.xpt: replace int constant with a reference thereto to facilitate readability
@
text
@d105 1
a105 1
«EXPAND xpt::Common::generatedClassComment»
d112 1
a112 1
«EXPAND xpt::Common::generatedClassComment»
@


1.1
log
@ComponentEditPolicy separated into a top-level class;
CreateRequest now knows about the MODEL_ID;
All "Command" class references fully-qualified in templates to prevent compilation problems;
[170078]: Remove link with class from the domain model on deleting link's destination
@
text
@d27 1
d55 1
a55 1
	for(java.util.Iterator it = ((org.eclipse.gef.GraphicalEditPart) getHost()).getTargetConnections().iterator(); it.hasNext(); ) {
d61 1
a61 1
		case «nextLink.visualID»:
d86 7
@

