head	1.3;
access;
symbols
	v20080910-1520:1.3
	v20080722-1827:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.2
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080507-1326:1.3
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080322-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070903-0000:1.2;
locks; strict;
comment	@# @;


1.3
date	2008.05.07.13.55.39;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	388c4821b4d44567;

1.2
date	2007.08.22.14.16.50;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	d3746cc45514567;

1.1
date	2007.08.13.14.11.03;	author bblajer;	state Exp;
branches;
next	;
commitid	65c246c066754567;


desc
@@


1.3
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::commands::CommandUtils»

«DEFINE className FOR gmfgen::GenDiagram»ShortcutProvider«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«providersPackageName».«EXPAND className»«ENDDEFINE»

«DEFINE ShortcutProvider FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen»
package «providersPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND createShortcutEditPart-»
	«EXPAND getCreateShortcutCommand-»
	«EXPAND getRefreshShortcutCommand-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenDiagram»implements org.eclipse.gmf.runtime.lite.shortcuts.IShortcutProvider«ENDDEFINE»

«DEFINE createShortcutEditPart FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.gef.EditPart createShortcutEditPart(org.eclipse.gef.EditPart context, org.eclipse.gmf.runtime.notation.View view) {
	String modelID = «EXPAND xpt::editor::VisualIDRegistry::getModelIDMethodCall»(view);
	if (!«EXPAND xpt::editor::VisualIDRegistry::modelID».equals(modelID)) {
		return null;
	}
	int viewVisualID = «EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall»(view);
	switch (viewVisualID) {
		«EXPAND xpt::diagram::parts::EditPartFactory::doCreate FOREACH getAllContainers()-»
		«EXPAND xpt::diagram::parts::EditPartFactory::doCreate FOREACH links-»
	}
	return null;
}
«ENDDEFINE»

«DEFINE getCreateShortcutCommand FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.gmf.runtime.lite.commands.CreateNotationalElementCommand getCreateShortcutCommand(org.eclipse.gmf.runtime.notation.View containerView, org.eclipse.emf.ecore.EObject domainElement) {
	org.eclipse.emf.transaction.TransactionalEditingDomain elementEditingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(domainElement);
	if (elementEditingDomain == null) {
		return null;
	}
	org.eclipse.emf.transaction.TransactionalEditingDomain containerEditingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(containerView);
	if (containerEditingDomain == null) {
		return null;
	}
	if (!elementEditingDomain.equals(containerEditingDomain)) {
		domainElement = containerEditingDomain.getResourceSet().getEObject(org.eclipse.emf.ecore.util.EcoreUtil.getURI(domainElement), true);
	}
	int visualID = «EXPAND xpt::editor::VisualIDRegistry::getNodeVisualIDMethodCall»(containerView, domainElement);
	switch (visualID) {
	«EXPAND xpt::commands::createNotationalElementCommand::createNotationalNodeCommandForChild(this, "containerView", "domainElement", getCreateShortcutNodeCommandQualifiedClassName()) FOREACH topLevelNodes.select(e|e.modelFacet != null && e.modelFacet.metaClass != null)-»
	default:
		return null;
	}
}
«ENDDEFINE»

«DEFINE getRefreshShortcutCommand FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.emf.common.command.Command getRefreshShortcutCommand(org.eclipse.gmf.runtime.notation.View shortcut) {
	String modelID = «EXPAND xpt::editor::VisualIDRegistry::getModelIDMethodCall»(shortcut);
	if (!«EXPAND xpt::editor::VisualIDRegistry::modelID».equals(modelID)) {
		return null;
	}
	org.eclipse.emf.ecore.EObject underlyingElement = shortcut.getElement();
	org.eclipse.gmf.runtime.notation.View parentView = (org.eclipse.gmf.runtime.notation.View) shortcut.eContainer();
	int oldVisualID = «EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall»(shortcut);
	int newVisualID = «EXPAND xpt::editor::VisualIDRegistry::getNodeVisualIDMethodCall»(parentView, underlyingElement);
	if (newVisualID == -1) {
		return new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalElementCommand(parentView, shortcut);
	} else if (oldVisualID == newVisualID) {
		return null;
	} else {
		org.eclipse.gmf.runtime.lite.commands.CreateNotationalElementCommand notationalCommand = getCreateShortcutCommand(parentView, underlyingElement);
		if (notationalCommand != null) {
			return new org.eclipse.gmf.runtime.lite.commands.ReplaceNotationalElementCommand(parentView, notationalCommand, shortcut);
		} else {
			return new org.eclipse.gmf.runtime.lite.commands.RemoveNotationalElementCommand(parentView, shortcut);
		}
	}
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenDiagram»«ENDDEFINE»

@


1.2
log
@ShortcutProvider should reload objects into the editing domain provided by the container
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.1
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d56 11
@

