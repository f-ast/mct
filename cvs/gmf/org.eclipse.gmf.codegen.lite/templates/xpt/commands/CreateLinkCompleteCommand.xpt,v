head	1.8;
access;
symbols
	v20080910-1520:1.8
	v20080722-1827:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080507-1326:1.8
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070921-0000:1.4.2.1
	v20070915-0000:1.4
	v20070903-0000:1.5
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.2
	v20070518-1300:1.1
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070403-1500:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1;
locks; strict;
comment	@# @;


1.8
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	388c4821b4d44567;

1.7
date	2008.05.05.11.25.40;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	3023481eeeb34567;

1.6
date	2008.02.26.22.50.33;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	405e47c497b74567;

1.5
date	2007.07.04.13.22.26;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	405d468b9f0f4567;

1.4
date	2007.06.15.09.53.04;	author bblajer;	state Exp;
branches
	1.4.2.1;
next	1.3;
commitid	2a0c4672617d4567;

1.3
date	2007.05.21.16.38.31;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	4ab64651cb064567;

1.2
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	25e5464e17e24567;

1.1
date	2007.02.14.13.42.30;	author bblajer;	state Exp;
branches;
next	;
commitid	75e045d311c54567;

1.4.2.1
date	2007.09.17.16.02.13;	author bblajer;	state Exp;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.8
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»

«DEFINE CreateLinkCompleteCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::copyright FOR diagram.editorGen»
package «diagram.editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND attributes-»
	«EXPAND ctors-»
	«EXPAND prepare-»
	«EXPAND initializeDomainModelCommand-»
	«EXPAND canUndo-»
	«EXPAND execute-»
	«EXPAND undo-»
	«EXPAND redo-»
	«EXPAND xpt::commands::Common::getRelationshipContainer FOR modelFacet-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenLink»Create«EXPAND xpt::commands::Common::commandNameInfix»Command«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenLink»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
«DEFINE supertypes FOR gmfgen::GenLink»extends org.eclipse.emf.common.command.AbstractCommand«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.gmf.runtime.notation.View source;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.gmf.runtime.notation.View target;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.gmf.runtime.notation.Edge createdEdge;

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.emf.common.command.Command domainModelAddCommand;
«ENDDEFINE»

«DEFINE ctors FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className»(org.eclipse.gmf.runtime.lite.requests.CreateConnectionRequestEx requestEx) {
		if (requestEx.getSourceEditPart().getModel() instanceof org.eclipse.gmf.runtime.notation.View) {
			source = (org.eclipse.gmf.runtime.notation.View) requestEx.getSourceEditPart().getModel();
		} else {
			source = null;
		}
		if (requestEx.getTargetEditPart().getModel() instanceof org.eclipse.gmf.runtime.notation.View) {
			target = (org.eclipse.gmf.runtime.notation.View) requestEx.getTargetEditPart().getModel();
		} else {
			target = null;
		}
		if (source == null || target == null) {
			createdEdge = null;
			return;
		}
		createdEdge = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createEdge();
		«EXPAND setEdgeElement(this) FOR modelFacet-»
		«getNotationViewFactoryQualifiedClassName()».INSTANCE.decorateView(createdEdge);
	}
«ENDDEFINE»

«DEFINE setEdgeElement(gmfgen::GenLink genLink) FOR gmfgen::LinkModelFacet-»
	createdEdge.setElement(null);
«ENDDEFINE»

«DEFINE setEdgeElement(gmfgen::GenLink genLink) FOR gmfgen::TypeLinkModelFacet-»
	«EXPAND MetaModel::NewInstance("createdDomainElement") FOR metaClass-»
	createdEdge.setElement(«EXPAND MetaModel::DowncastToEObject("createdDomainElement") FOR metaClass»);
	«EXPAND initialize(genLink, "createdDomainElement")-»
«ENDDEFINE»

«DEFINE prepare FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected boolean prepare() {
		if (source == null || target == null || createdEdge == null) {
			return false;
		}
		«EXPAND xpt::commands::Common::checkLinkConstraints("source.getElement()", "target.getElement()") FOR creationConstraints-»
		domainModelAddCommand = initializeDomainModelCommand();
		if (domainModelAddCommand == null || !domainModelAddCommand.canExecute()) {
			return false;
		}
		return true;
	}
«ENDDEFINE»

«DEFINE initializeDomainModelCommand FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.emf.common.command.Command initializeDomainModelCommand() {
		«EXPAND initializeDomainModelCommand FOR modelFacet-»
	}
«ENDDEFINE»

«DEFINE initializeDomainModelCommand FOR gmfgen::LinkModelFacet-»
return org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE;
«ENDDEFINE»

«DEFINE initializeDomainModelCommand FOR gmfgen::TypeLinkModelFacet-»
	org.eclipse.emf.ecore.EObject containerEObj = getRelationshipContainer(source.getElement(), «EXPAND MetaModel::MetaClass FOR containmentMetaFeature.genClass»);
	«EXPAND MetaModel::DeclareAndAssign("container", "containerEObj") FOR containmentMetaFeature.genClass»
	if (container == null) {
		return org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE;
	}
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS addChild-»
«LET sourceMetaFeature != null && !sourceMetaFeature.ecoreFeature.derived && ecore::EReference.isSuperTypeOf(sourceMetaFeature.ecoreFeature.eClass()) 
	&& ((ecore::EReference) sourceMetaFeature.ecoreFeature).eOpposite !=containmentMetaFeature.ecoreFeature && 
		(addChild implies ((ecore::EReference) sourceMetaFeature.ecoreFeature).eOpposite != childMetaFeature.ecoreFeature) AS addSource-»
«LET targetMetaFeature != null && !targetMetaFeature.ecoreFeature.derived && ecore::EReference.isSuperTypeOf(targetMetaFeature.ecoreFeature.eClass()) 
	&& ((ecore::EReference) targetMetaFeature.ecoreFeature).eOpposite !=containmentMetaFeature.ecoreFeature && 
		(addChild implies ((ecore::EReference) targetMetaFeature.ecoreFeature).eOpposite != childMetaFeature.ecoreFeature) AS addTarget-»
	«IF addSource-»
		«EXPAND checkFeature("createdEdge.getElement()", null) FOR sourceMetaFeature-»
	«ENDIF-»
	«IF addTarget-»
		«EXPAND checkFeature("createdEdge.getElement()", null) FOR targetMetaFeature-»
		«LET targetMetaFeature.getReverse() AS targetReverseFeature-»
			«IF targetReverseFeature != null && !targetReverseFeature.ecoreFeature.derived-»
				«EXPAND checkFeature("target.getElement()", null) FOR targetReverseFeature-»
			«ENDIF-»
		«ENDLET-»
	«ENDIF-»
	org.eclipse.emf.transaction.TransactionalEditingDomain domainModelEditDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(source.getDiagram().getElement());
	org.eclipse.emf.common.command.CompoundCommand addLinkEndsCommand = new org.eclipse.emf.common.command.CompoundCommand();
	addLinkEndsCommand.append(«EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "container", "createdEdge.getElement()") FOR containmentMetaFeature»);
	«IF addChild-»
	addLinkEndsCommand.append(«EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "container", "createdEdge.getElement()") FOR childMetaFeature»);
	«ENDIF-»
	«IF addSource-»
	addLinkEndsCommand.append(«EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "createdEdge.getElement()", "source.getElement()") FOR sourceMetaFeature»);
	«ENDIF-»
	«IF addTarget-»
	addLinkEndsCommand.append(«EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "createdEdge.getElement()", "target.getElement()") FOR targetMetaFeature»);
	«ENDIF-»
	return addLinkEndsCommand;
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ENDDEFINE»

«DEFINE initializeDomainModelCommand FOR gmfgen::FeatureLinkModelFacet-»
«LET metaFeature.getReverse() AS reverseMetaFeature-»
	«IF reverseMetaFeature != null && !reverseMetaFeature.ecoreFeature.derived-»
		«EXPAND checkFeature("target.getElement()", null) FOR reverseMetaFeature-»
	«ENDIF-»
«ENDLET-»
	org.eclipse.emf.transaction.TransactionalEditingDomain domainModelEditDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(source.getDiagram().getElement());
«IF metaFeature.isContains()-»
	if (target.getElement().eContainer() != null) {
		return org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE;
	}
	org.eclipse.emf.common.command.CompoundCommand result = new org.eclipse.emf.common.command.CompoundCommand();
	if (target.getElement().eResource() != null) {
		result.append(new org.eclipse.emf.edit.command.RemoveCommand(domainModelEditDomain, target.getElement().eResource().getContents(), target.getElement()));
	}
	result.append(«EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "source.getElement()", "target.getElement()") FOR metaFeature»);
	return result.unwrap();
«ELSE-»
	return «EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "source.getElement()", "target.getElement()") FOR metaFeature»;
«ENDIF-»
«ENDDEFINE»

«DEFINE canUndo FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	public boolean canUndo() {
		return source != null && target != null && createdEdge != null && domainModelAddCommand != null && domainModelAddCommand.canUndo();
	}
«ENDDEFINE»

«DEFINE execute FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void execute() {
		domainModelAddCommand.execute();
		source.getDiagram().insertEdge(createdEdge);
		createdEdge.setSource(source);
		createdEdge.setTarget(target);
	}
«ENDDEFINE»

«DEFINE undo FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void undo() {
		domainModelAddCommand.undo();
		source.getDiagram().removeEdge(createdEdge);
		createdEdge.setSource(null);
		createdEdge.setTarget(null);
	}
«ENDDEFINE»

«DEFINE redo FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void redo() {
		execute();
	}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenLink-»
«ENDDEFINE»

«DEFINE checkFeature(String containerVar, genmodel::GenClass containerClass) FOR genmodel::GenFeature-»
«IF ecoreFeature.upperBound > 0-»
if («EXPAND xpt::commands::Common::featureMultiplicityComparator(containerVar, containerClass)») {
	return org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE initialize(GenLink link, String newElementVar) FOR TypeModelFacet»«IF modelElementInitializer != null-»
«EXPAND xpt::providers::DomainElementInitializer::qualifiedClassName FOR link.getDiagram()».init_«link.getUniqueIdentifier()»(«newElementVar»);
«ENDIF»«ENDDEFINE»@


1.7
log
@[226725] Refactor domain element initialization not to be duplicated in Lite RT
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.6
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template, LiteRT version updated
@
text
@d85 1
a85 1
	«EXPAND xpt::providers::DomainElementInitializer::qualifiedClassName FOR genLink.getDiagram()».«genLink.getUniqueIdentifier()».initializeElement(«EXPAND MetaModel::DowncastToEObject("createdDomainElement") FOR metaClass»);
d222 4
@


1.5
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d83 3
a85 3
	«EXPAND xpt::Common::newInstance("createdDomainElement") FOR metaClass-»
	createdEdge.setElement(«unparenthesizedCast("createdDomainElement", metaClass, null)»);
	«EXPAND xpt::providers::DomainElementInitializer::qualifiedClassName FOR genLink.getDiagram()».«genLink.getUniqueIdentifier()».initializeElement(«unparenthesizedCast("createdDomainElement", metaClass, null)»);
d115 2
a116 1
	«containmentMetaFeature.genClass.getQualifiedInterfaceName()» container = («containmentMetaFeature.genClass.getQualifiedInterfaceName()») getRelationshipContainer(source.getElement(), «EXPAND xpt::Common::metaClassAccessor FOR containmentMetaFeature.genClass»);
@


1.4
log
@[192168]: Convert /providers/DomainElementInitializer.javajet lite template to Xpand
@
text
@d38 1
a38 1

@


1.4.2.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@d38 1
a38 1
«DEFINE qualifiedClassName FOR gmfgen::GenLink»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
@


1.3
log
@Phantoms support
@
text
@d85 1
a85 1
	«EXPAND xpt::commands::Common::DomainElementInitializerQualifiedClassName FOR genLink».«genLink.getUniqueIdentifier()».initializeElement(«unparenthesizedCast("createdDomainElement", metaClass, null)»);
@


1.2
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d160 1
d162 11
d174 1
a174 1
«ENDLET-»
@


1.1
log
@Commands rewritten with xPand;
[173999]: Non-resizable figures (for the Lite version).
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@

