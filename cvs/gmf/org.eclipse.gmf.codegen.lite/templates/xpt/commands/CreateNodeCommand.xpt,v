head	1.9;
access;
symbols
	v20080910-1520:1.9
	v20080722-1827:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080507-1326:1.9
	v20080501-1739:1.7
	v20080425-1959:1.7
	v20080322-0000:1.7
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070921-0000:1.5.2.1
	v20070915-0000:1.5
	v20070903-0000:1.6
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.3
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070228-2000:1.1
	v20070221-1500:1.1;
locks; strict;
comment	@# @;


1.9
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	388c4821b4d44567;

1.8
date	2008.05.05.11.25.40;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	3023481eeeb34567;

1.7
date	2008.02.26.22.50.33;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	405e47c497b74567;

1.6
date	2007.07.04.13.22.26;	author bblajer;	state Exp;
branches;
next	1.5;
commitid	405d468b9f0f4567;

1.5
date	2007.06.15.09.53.04;	author bblajer;	state Exp;
branches
	1.5.2.1;
next	1.4;
commitid	2a0c4672617d4567;

1.4
date	2007.05.21.16.38.31;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	4ab64651cb064567;

1.3
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	25e5464e17e24567;

1.2
date	2007.03.02.21.21.16;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	2b1945e895484567;

1.1
date	2007.02.14.13.42.30;	author bblajer;	state Exp;
branches;
next	;
commitid	75e045d311c54567;

1.5.2.1
date	2007.09.17.16.02.13;	author bblajer;	state Exp;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.9
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»

«DEFINE CreateNodeCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND attributes-»
	«EXPAND ctors-»
	«EXPAND prepare-»
	«EXPAND canUndo-»
	«EXPAND execute-»
	«EXPAND undo-»
	«EXPAND redo-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.gmf.runtime.lite.commands.CreateNotationalNodeCommand notationAddCommand;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.common.command.Command domainModelAddCommand;
«ENDDEFINE»

«DEFINE ctors FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className»(org.eclipse.gmf.runtime.notation.View parent, org.eclipse.gmf.runtime.lite.requests.CreateRequestEx request) {
		this(parent, request, null);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className»(org.eclipse.gmf.runtime.notation.View parent, org.eclipse.gmf.runtime.lite.requests.CreateRequestEx request, org.eclipse.draw2d.geometry.Rectangle constraint) {
		«EXPAND MetaModel::NewInstance("createdDomainElement") FOR modelFacet.metaClass-»
		«EXPAND initialize("createdDomainElement")-»
		«EXPAND initializeDomainModelCommand FOR modelFacet-»
		«EXPAND xpt::commands::Common::adjustConstraint-»
		this.notationAddCommand = new org.eclipse.gmf.runtime.lite.commands.CreateNotationalNodeCommand(parent, «EXPAND MetaModel::DowncastToEObject("createdDomainElement") FOR modelFacet.metaClass», 
			constraint, «getNotationViewFactoryQualifiedClassName()».INSTANCE);
		request.setCreatedObject(notationAddCommand.getCreatedView());
	}
«ENDDEFINE»

«DEFINE initializeDomainModelCommand FOR gmfgen::TypeModelFacet-»
		«EXPAND checkFeature("parent.getElement()", null) FOR containmentMetaFeature-»
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS addChild-»
	«IF addChild-»
		«EXPAND checkFeature("parent.getElement()", null) FOR childMetaFeature-»
	«ENDIF-»
		org.eclipse.emf.transaction.TransactionalEditingDomain domainModelEditDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(parent.getDiagram().getElement());
	«IF addChild-»
		org.eclipse.emf.common.command.CompoundCommand compoundCommand = new org.eclipse.emf.common.command.CompoundCommand();
		«IF containmentMetaFeature == null-»
		compoundCommand.append(new org.eclipse.emf.edit.command.AddCommand(domainModelEditDomain, «EXPAND xpt::commands::Common::getPhantomContainmentResource FOR "parent"».getContents(), createdDomainElement));
		«ELSE-»
		compoundCommand.append(«EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "parent.getElement()", "createdDomainElement") FOR containmentMetaFeature»);
		«ENDIF-»
		compoundCommand.append(«EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "parent.getElement()", "createdDomainElement") FOR childMetaFeature»);
		domainModelAddCommand = compoundCommand;
	«ELSE-»
		«IF containmentMetaFeature == null-»
		domainModelAddCommand = new org.eclipse.emf.edit.command.AddCommand(domainModelEditDomain, «EXPAND xpt::commands::Common::getPhantomContainmentResource FOR "parent"».getContents(), createdDomainElement);
		«ELSE-»
		domainModelAddCommand = «EXPAND xpt::commands::Common::plugFeatureCommand("domainModelEditDomain", "parent.getElement()", "createdDomainElement") FOR containmentMetaFeature»;
		«ENDIF-»
	«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE prepare FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected boolean prepare() {
		return domainModelAddCommand != null && domainModelAddCommand.canExecute() && notationAddCommand != null && notationAddCommand.canExecute();
	}
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenNode»Create«EXPAND xpt::commands::Common::commandNameInfix»Command«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenNode»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
«DEFINE supertypes FOR gmfgen::GenNode»extends org.eclipse.emf.common.command.AbstractCommand«ENDDEFINE»

«DEFINE canUndo FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	public boolean canUndo() {
		return domainModelAddCommand != null && domainModelAddCommand.canUndo() && notationAddCommand != null && notationAddCommand.canUndo();
	}
«ENDDEFINE»

«DEFINE execute FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void execute() {
		domainModelAddCommand.execute();
		notationAddCommand.execute();
	}
«ENDDEFINE»

«DEFINE undo FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void undo() {
		notationAddCommand.undo();
		domainModelAddCommand.undo();
	}
«ENDDEFINE»

«DEFINE redo FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void redo() {
		execute();
	}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenNode-»
«ENDDEFINE»

«DEFINE checkFeature(String containerVar, genmodel::GenClass containerClass) FOR genmodel::GenFeature-»
«IF ecoreFeature.upperBound > 0-»
if («EXPAND xpt::commands::Common::featureMultiplicityComparator(containerVar, containerClass)») {
	domainModelAddCommand = null;
	notationAddCommand = null;
	return;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE initialize(String newElementVar) FOR gmfgen::GenNode»«IF modelFacet.modelElementInitializer != null-»
«EXPAND xpt::providers::DomainElementInitializer::qualifiedClassName FOR getDiagram()».init_«getUniqueIdentifier()»(«newElementVar»);
«ENDIF»«ENDDEFINE»@


1.8
log
@[226725] Refactor domain element initialization not to be duplicated in Lite RT
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.7
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template, LiteRT version updated
@
text
@d52 1
a52 1
		«EXPAND xpt::providers::DomainElementInitializer::qualifiedClassName FOR getDiagram()».«getUniqueIdentifier()».initializeElement(«EXPAND MetaModel::DowncastToEObject("createdDomainElement") FOR modelFacet.metaClass»);
d140 4
@


1.6
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d51 2
a52 2
		«EXPAND xpt::Common::newInstanceAsEObject("createdDomainElement") FOR modelFacet.metaClass-»
		«EXPAND xpt::providers::DomainElementInitializer::qualifiedClassName FOR getDiagram()».«getUniqueIdentifier()».initializeElement(createdDomainElement);
d55 1
a55 1
		this.notationAddCommand = new org.eclipse.gmf.runtime.lite.commands.CreateNotationalNodeCommand(parent, createdDomainElement, 
@


1.5
log
@[192168]: Convert /providers/DomainElementInitializer.javajet lite template to Xpand
@
text
@d95 1
@


1.5.2.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@a94 1
«DEFINE qualifiedClassName FOR gmfgen::GenNode»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
@


1.4
log
@Phantoms support
@
text
@d52 1
a52 1
		«EXPAND xpt::commands::Common::DomainElementInitializerQualifiedClassName».«getUniqueIdentifier()».initializeElement(createdDomainElement);
@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d70 3
d74 1
d78 3
d82 1
@


1.2
log
@[164018]: Add<>Command and Clone<>Command moved to separate classes;
Common methods from edit policies moved to runtime superclasses
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.1
log
@Commands rewritten with xPand;
[173999]: Non-resizable figures (for the Lite version).
@
text
@a16 1
«EXTENSION xpt::diagram::ViewmapAttributesUtils»
d54 1
a54 21
«LET defaultSizeWidth(viewmap, 40) AS defaultWidth-»
«LET defaultSizeHeight(viewmap, 40) AS defaultHeight-»
«LET getResizeConstraints(viewmap) AS rc-»
«LET rc == null || rc.resizeHandleNames.select(e| e=="EAST" || e=="WEST").size() > 0 AS resizableWidth-»
«LET rc == null || rc.resizeHandleNames.select(e| e=="NORTH" || e=="SOUTH").size() > 0 AS resizableHeight-»
		if (constraint != null) {
	«IF resizableWidth || resizableHeight-»
			constraint.union(new org.eclipse.draw2d.geometry.Dimension(«defaultWidth», «defaultHeight»));
	«ENDIF-»
	«IF !resizableWidth-»
			constraint.width = «defaultWidth»;
	«ENDIF-»
	«IF !resizableHeight-»
			constraint.height = «defaultHeight»;
	«ENDIF-»
		}
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ENDLET-»
@

