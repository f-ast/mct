head	1.6;
access;
symbols
	v20080910-1520:1.6
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080507-1326:1.6
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080322-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070921-0000:1.4.2.1
	v20070915-0000:1.4
	v20070903-0000:1.5
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.3
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.1;
locks; strict;
comment	@# @;


1.6
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	388c4821b4d44567;

1.5
date	2007.07.04.13.22.26;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	405d468b9f0f4567;

1.4
date	2007.05.21.16.38.31;	author bblajer;	state Exp;
branches
	1.4.2.1;
next	1.3;
commitid	4ab64651cb064567;

1.3
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	25e5464e17e24567;

1.2
date	2007.03.09.17.19.35;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	22ed45f197244567;

1.1
date	2007.03.02.21.21.16;	author bblajer;	state Exp;
branches;
next	;
commitid	2b1945e895484567;

1.4.2.1
date	2007.09.17.16.02.13;	author bblajer;	state Exp;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.6
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::commands::CommandUtils»

«DEFINE CloneNodeCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND attributes-»
	«EXPAND ctors-»
	«EXPAND createCommand-»
	«EXPAND createAfterCopyCommand-»
	«EXPAND execute-»
	«EXPAND canUndo-»
	«EXPAND undo-»
	«EXPAND redo-»
	«EXPAND dispose-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenNode»Clone«EXPAND xpt::commands::Common::commandNameInfix»Command«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenNode»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
«DEFINE supertypes FOR gmfgen::GenNode»extends org.eclipse.emf.common.command.CommandWrapper«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.gmf.runtime.notation.View parentView;
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.gmf.runtime.notation.Node childNode;
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.draw2d.geometry.Rectangle constraint;
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain;
«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.emf.common.command.Command afterCopyCommand;
«ENDDEFINE»

«DEFINE ctors FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public «EXPAND className»(org.eclipse.gmf.runtime.notation.View parentView, org.eclipse.gmf.runtime.notation.Node childNode, org.eclipse.draw2d.geometry.Rectangle constraint) {
	this.parentView = parentView;
	this.childNode = childNode;
	this.constraint = constraint;
	this.editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(childNode.getDiagram().getElement());
}
«ENDDEFINE»

«DEFINE createCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.emf.common.command.Command createCommand() {
	«EXPAND checkFeatures FOR modelFacet-»
	org.eclipse.emf.ecore.EObject element = childNode.getElement();
	//We are being optimistic here about whether further commands can be executed.
	//Otherwise, we would have to execute the CopyCommand on every mouse move, which could be much too expensive.
	return org.eclipse.emf.edit.command.CopyCommand.create(editingDomain, element);
}
«ENDDEFINE»

«DEFINE execute FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void execute() {
	super.execute();
	afterCopyCommand = createAfterCopyCommand();
	if (afterCopyCommand.canExecute()) {
		afterCopyCommand.execute();
	} else {
		assert false;
	}
}
«ENDDEFINE»

«DEFINE createAfterCopyCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.emf.common.command.Command createAfterCopyCommand() {
	final java.util.Collection copyResults = super.getResult();
	assert copyResults.size() == 1;
	org.eclipse.emf.ecore.EObject copyResult = (org.eclipse.emf.ecore.EObject) copyResults.iterator().next();
	org.eclipse.emf.common.command.CompoundCommand result = new org.eclipse.emf.common.command.CompoundCommand();
	«EXPAND plugFeatures FOR modelFacet-»
	«EXPAND xpt::commands::Common::adjustConstraint-»
	result.append(new org.eclipse.gmf.runtime.lite.commands.CreateNotationalNodeCommand(parentView, copyResult, constraint, «getNotationViewFactoryQualifiedClassName()».INSTANCE));
	return result;
}
«ENDDEFINE»

«DEFINE canUndo FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public boolean canUndo() {
	return super.canUndo() && afterCopyCommand != null && afterCopyCommand.canUndo();
}
«ENDDEFINE»

«DEFINE undo FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void undo() {
	afterCopyCommand.undo();
	super.undo();
}
«ENDDEFINE»

«DEFINE redo FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void redo() {
	super.redo();
	afterCopyCommand.redo();
}
«ENDDEFINE»

«DEFINE dispose FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void dispose() {
	super.dispose();
	if (afterCopyCommand != null) {
		afterCopyCommand.dispose();
	}
}
«ENDDEFINE»

«DEFINE checkFeatures FOR gmfgen::TypeModelFacet-»
«EXPAND checkFeature("parentView.getElement()", null) FOR containmentMetaFeature-»
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS addChild-»
«IF addChild-»
	«EXPAND checkFeature("parentView.getElement()", null) FOR childMetaFeature-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE plugFeatures FOR gmfgen::TypeModelFacet-»
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS addChild-»
«IF addChild-»
result.append(«EXPAND xpt::commands::Common::plugFeatureCommand("editingDomain", "parentView.getElement()", "copyResult") FOR childMetaFeature»);
«ENDIF-»
«ENDLET-»
«IF containmentMetaFeature == null-»
result.append(new org.eclipse.emf.edit.command.AddCommand(editingDomain, «EXPAND xpt::commands::Common::getPhantomContainmentResource FOR "parentView"».getContents(), copyResult));
«ELSE-»
result.append(«EXPAND xpt::commands::Common::plugFeatureCommand("editingDomain", "parentView.getElement()", "copyResult") FOR containmentMetaFeature»);
«ENDIF-»
«ENDDEFINE»

«DEFINE checkFeature(String containerVar, genmodel::GenClass containerClass) FOR genmodel::GenFeature-»
«IF ecoreFeature.upperBound > 0-»
if («EXPAND xpt::commands::Common::featureMultiplicityComparator(containerVar, containerClass)») {
	return org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenNode»«ENDDEFINE»
@


1.5
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.4
log
@Phantoms support
@
text
@d39 1
@


1.4.2.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@a38 1
«DEFINE qualifiedClassName FOR gmfgen::GenNode»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d150 3
d154 1
@


1.2
log
@[164018]: Command generation separated from Parts for layout edit policy and graphical node edit policy;
NewDiagramFileWizard: layout is not persisted if the diagram is closed right after initialization
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.1
log
@[164018]: Add<>Command and Clone<>Command moved to separate classes;
Common methods from edit policies moved to runtime superclasses
@
text
@d65 1
a65 1
«EXPAND xpt::Common::generatedClassComment»
@

