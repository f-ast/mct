head	1.5;
access;
symbols
	v20080910-1520:1.5
	v20080722-1827:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080507-1326:1.5
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080322-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070921-0000:1.3.2.1
	v20070915-0000:1.3
	v20070903-0000:1.4
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.2
	v20070518-1300:1.1
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070403-1500:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1;
locks; strict;
comment	@# @;


1.5
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	388c4821b4d44567;

1.4
date	2007.07.04.13.22.26;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	405d468b9f0f4567;

1.3
date	2007.05.21.16.38.31;	author bblajer;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	4ab64651cb064567;

1.2
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	25e5464e17e24567;

1.1
date	2007.02.14.13.42.30;	author bblajer;	state Exp;
branches;
next	;
commitid	75e045d311c54567;

1.3.2.1
date	2007.09.17.16.02.13;	author bblajer;	state Exp;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.5
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»

«DEFINE ReconnectLinkTargetCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::copyright FOR diagram.editorGen»
package «diagram.editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND attributes-»
	«EXPAND ctors-»
	«EXPAND prepare-»
	«EXPAND canReconnect-»
	«EXPAND createCommand-»
«IF creationConstraints != null-»
	«EXPAND xpt::commands::domainModelRemoveCommand::domainModelRemoveCommand("edge")-»
«ENDIF-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenLink»Reconnect«EXPAND xpt::commands::Common::commandNameInfix»TargetCommand«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenLink»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
«DEFINE supertypes FOR gmfgen::GenLink»extends org.eclipse.emf.common.command.CommandWrapper«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.gmf.runtime.notation.Edge edge;
	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.gmf.runtime.notation.View newTarget;
	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.gmf.runtime.notation.View oldTarget;
«ENDDEFINE»

«DEFINE ctors FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className»(org.eclipse.gef.requests.ReconnectRequest request) {
		this((org.eclipse.gmf.runtime.notation.Edge)request.getConnectionEditPart().getModel(), (org.eclipse.gmf.runtime.notation.View)request.getTarget().getModel());
	}
	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className»(org.eclipse.gmf.runtime.notation.Edge edge, org.eclipse.gmf.runtime.notation.View newTarget) {
		this.edge = edge;
		this.newTarget = newTarget;
		this.oldTarget = edge.getTarget();
	}
«ENDDEFINE»

«DEFINE prepare FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected boolean prepare() {
«IF creationConstraints == null-»
		if (!canReconnect()) {
			return false;
		}
		return super.prepare();
«ELSE-»
		final boolean[] resultHolder = new boolean[1];
		//To validate the reconnection against constraints, the current link should be deleted. Of course, we must then undo its deletion.
		final org.eclipse.emf.transaction.TransactionalEditingDomain domainModelEditDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(oldTarget.getDiagram().getElement());
		org.eclipse.emf.common.command.Command command = new org.eclipse.emf.common.command.AbstractCommand() {
			private org.eclipse.emf.common.command.Command deleteCommand = createDomainModelRemoveCommand(domainModelEditDomain);
			public boolean canExecute() {
				return deleteCommand.canExecute();
			}
			public boolean canUndo() {
				return true;
			}
			public void redo() {
			}
			public void undo() {
			}
			public void execute() {
				deleteCommand.execute();
				try {
					resultHolder[0] = canReconnect();
				} finally {
					deleteCommand.undo();
				}
			}
		};
		if (!command.canExecute()) {
			return false;
		}
		new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(domainModelEditDomain, command).execute();
		if (!resultHolder[0]) {
			return false;
		}
		return super.prepare();
«ENDIF-»
	}
«ENDDEFINE»

«DEFINE canReconnect FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	private boolean canReconnect() {
		«EXPAND xpt::commands::Common::checkLinkConstraints("edge.getSource().getElement()", "newTarget.getElement()") FOR creationConstraints-»
		«EXPAND canReconnect FOR modelFacet-»
	}
«ENDDEFINE»

«DEFINE canReconnect FOR gmfgen::LinkModelFacet-»
return false;
«ENDDEFINE»

«DEFINE canReconnect FOR gmfgen::TypeLinkModelFacet-»
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS setChild-»
«LET targetMetaFeature != null && !targetMetaFeature.ecoreFeature.derived && ecore::EReference.isSuperTypeOf(targetMetaFeature.ecoreFeature.eClass()) 
	&& ((ecore::EReference) targetMetaFeature.ecoreFeature).eOpposite !=containmentMetaFeature.ecoreFeature && 
		(setChild implies ((ecore::EReference) targetMetaFeature.ecoreFeature).eOpposite != childMetaFeature.ecoreFeature) AS setTarget-»
«REM»Need to check the opposite of the target feature«ENDREM-»
	«IF setTarget-»
		«LET targetMetaFeature.getReverse() AS targetReverseFeature-»
			«IF targetReverseFeature != null && !targetReverseFeature.ecoreFeature.derived-»
«EXPAND checkFeature("newTarget.getElement()", null) FOR targetReverseFeature-»
			«ENDIF-»
		«ENDLET-»
	«ENDIF-»
«ENDLET-»
«ENDLET-»
return true;
«ENDDEFINE»

«DEFINE canReconnect FOR gmfgen::FeatureLinkModelFacet-»
«REM»Need to check the opposite of the meta feature«ENDREM-»
«LET metaFeature.getReverse() AS reverseMetaFeature-»
	«IF reverseMetaFeature != null && !reverseMetaFeature.ecoreFeature.derived-»
		«EXPAND checkFeature("newTarget.getElement()", null) FOR reverseMetaFeature-»
	«ENDIF-»
«ENDLET-»
return true;
«ENDDEFINE»

«DEFINE createCommand FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.emf.common.command.Command createCommand() {
		org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(oldTarget.getDiagram().getElement());
		org.eclipse.emf.common.command.CompoundCommand result = new org.eclipse.emf.common.command.CompoundCommand();
		result.append(new org.eclipse.gmf.runtime.lite.commands.ReconnectNotationalEdgeTargetCommand(edge, newTarget));
		«EXPAND appendDomainModelCommand FOR modelFacet-»
		return result;
	}
«ENDDEFINE»

«DEFINE appendDomainModelCommand FOR gmfgen::LinkModelFacet-»
result.append(org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE);
«ENDDEFINE»

«DEFINE appendDomainModelCommand FOR gmfgen::TypeLinkModelFacet-»
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS setChild-»
«LET targetMetaFeature != null && !targetMetaFeature.ecoreFeature.derived && ecore::EReference.isSuperTypeOf(targetMetaFeature.ecoreFeature.eClass()) 
	&& ((ecore::EReference) targetMetaFeature.ecoreFeature).eOpposite !=containmentMetaFeature.ecoreFeature && 
		(setChild implies ((ecore::EReference) targetMetaFeature.ecoreFeature).eOpposite != childMetaFeature.ecoreFeature) AS setTarget-»
	«IF setTarget-»
		«IF targetMetaFeature.ecoreFeature.many-»
result.append(«EXPAND xpt::commands::Common::unplugFeatureCommand("editingDomain", "edge.getElement()", "oldTarget.getElement()") FOR targetMetaFeature»);
		«ENDIF-»
result.append(«EXPAND xpt::commands::Common::plugFeatureCommand("editingDomain", "edge.getElement()", "newTarget.getElement()") FOR targetMetaFeature»);
	«ELSE-»
	«REM»No command may be generated here. Probably, this situation is impossible, but we'd better warn the user.«ENDREM-»
//XXX: Command should be added manually here. 
	«ENDIF-»
«ENDLET-»
«ENDLET-»
«ENDDEFINE»

«DEFINE appendDomainModelCommand FOR gmfgen::FeatureLinkModelFacet-»
«IF metaFeature.isContains()-»
if (newTarget.getElement().eContainer() != null) {
	result.append(org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE);
}
«ENDIF-»
«IF metaFeature.ecoreFeature.many-»
result.append(«EXPAND xpt::commands::Common::unplugFeatureCommand("editingDomain", "edge.getSource().getElement()", "oldTarget.getElement()") FOR metaFeature»);
«ENDIF-»
«IF metaFeature.isContains()-»
result.append(new org.eclipse.emf.edit.command.AddCommand(editingDomain, «EXPAND xpt::commands::Common::getPhantomContainmentResource FOR "edge"».getContents(), oldTarget.getElement()));
if (oldTarget.getElement().eResource() != null) {
	result.append(new org.eclipse.emf.edit.command.RemoveCommand(editingDomain, newTarget.getElement().eResource().getContents(), newTarget.getElement()));
}
«ENDIF-»
result.append(«EXPAND xpt::commands::Common::plugFeatureCommand("editingDomain", "edge.getSource().getElement()", "newTarget.getElement()") FOR metaFeature»);
«ENDDEFINE»

«DEFINE checkFeature(String containerVar, genmodel::GenClass containerClass) FOR genmodel::GenFeature-»
«IF ecoreFeature.upperBound > 0-»
if («EXPAND xpt::commands::Common::featureMultiplicityComparator(containerVar, containerClass)») {
	return false;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenLink-»
«ENDDEFINE»
@


1.4
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.3
log
@Phantoms support
@
text
@d37 1
a37 1

@


1.3.2.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@d37 1
a37 1
«DEFINE qualifiedClassName FOR gmfgen::GenLink»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
@


1.2
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d181 6
a186 1
		«IF metaFeature.ecoreFeature.many-»
d188 7
a194 1
		«ENDIF-»
@


1.1
log
@Commands rewritten with xPand;
[173999]: Non-resizable figures (for the Lite version).
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@

