head	1.5;
access;
symbols
	v20080910-1520:1.5
	v20080722-1827:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080507-1326:1.5
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080322-0000:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.3
	v20070228-2000:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070103-0300:1.2
	M4_20:1.2
	v20061222-1800:1.1;
locks; strict;
comment	@# @;


1.5
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	388c4821b4d44567;

1.4
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	25e5464e17e24567;

1.3
date	2007.02.02.17.14.32;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	78d445c371764567;

1.2
date	2006.12.25.12.00.12;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	430d458fbd4b4567;

1.1
date	2006.12.21.21.01.00;	author bblajer;	state Exp;
branches;
next	;
commitid	24c8458af60b4567;


desc
@@


1.5
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE SheetLabelProvider FOR gmfgen::GenPropertySheet-»
«EXPAND xpt::Common::copyright FOR editorGen»
package «packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «labelProviderClassName» extends org.eclipse.jface.viewers.DecoratingLabelProvider {
	«EXPAND xpt::Common::generatedMemberComment»
	public «labelProviderClassName»() {
		super(new org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider(«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getItemProvidersAdapterFactory()), null);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public String getText(Object element) {
		Object selected = unwrap(element); 
«IF null != editorGen.navigator && null != editorGen.application»
		if (selected instanceof «editorGen.navigator.getNavigatorGroupQualifiedClassName()») {
			return ((«editorGen.navigator.getNavigatorGroupQualifiedClassName()») selected).getGroupName();
		}
«ENDIF»
		return super.getText(selected);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public org.eclipse.swt.graphics.Image getImage(Object element) {
		return super.getImage(unwrap(element));
	}

	«EXPAND unwrap-»
	«EXPAND unwrapView-»
	«EXPAND unwrapEditPart-»
}
«ENDDEFINE»

«DEFINE unwrap FOR gmfgen::GenPropertySheet-»
	«EXPAND xpt::Common::generatedMemberComment»
	private Object unwrap(Object element) {
		if (element instanceof org.eclipse.jface.viewers.IStructuredSelection) {
			return unwrap(((org.eclipse.jface.viewers.IStructuredSelection) element).getFirstElement());
		}
		if (element instanceof org.eclipse.gef.EditPart) {
			return unwrapEditPart((org.eclipse.gef.EditPart) element);
		}
		if (element instanceof org.eclipse.core.runtime.IAdaptable) {
			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
			if (view != null) {
				return unwrapView(view);
			}
		}
		return element;
	}
«ENDDEFINE»

«DEFINE unwrapView FOR gmfgen::GenPropertySheet-»
	«EXPAND xpt::Common::generatedMemberComment»
	private Object unwrapView(org.eclipse.gmf.runtime.notation.View view) {
		return view.getElement() == null ? view : view.getElement();
	}
«ENDDEFINE»

«DEFINE unwrapEditPart FOR gmfgen::GenPropertySheet-»
	«EXPAND xpt::Common::generatedMemberComment»
	private Object unwrapEditPart(org.eclipse.gef.EditPart p) {
		if (p.getModel() instanceof org.eclipse.gmf.runtime.notation.View) {
			return unwrapView((org.eclipse.gmf.runtime.notation.View) p.getModel());
		}
		return p.getModel();
	}
«ENDDEFINE»
@


1.4
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d1 1
a1 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.3
log
@[172664]: Provide audits and metrics for Lite diagrams (including view-based and RCP) + validation decorators + validation markers (for non-RCP case);
Several templates are rewritten with xpand;
lite-specific TextEmitter is back (otherwise importManager is sometimes passed to xpand templates)
@
text
@d1 1
a1 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.2
log
@[159567]: Use GenApplication element from gmfgen model to generate RCP code
Use as much of the runtime templates as possible (changes are isolated as aspects)
@
text
@d8 1
a8 1
«EXPAND xpt::Common::generated FOR ""-»
d10 1
a10 1
	«EXPAND xpt::Common::generated FOR ""-»
d15 1
a15 1
	«EXPAND xpt::Common::generated FOR ""-»
d26 1
a26 1
	«EXPAND xpt::Common::generated FOR ""-»
d38 1
a38 1
	«EXPAND xpt::Common::generated FOR ""-»
d57 1
a57 1
	«EXPAND xpt::Common::generated FOR ""-»
d64 1
a64 1
	«EXPAND xpt::Common::generated FOR ""-»
@


1.1
log
@Compilation problems when property sheet is defined in RCP (no navigator support)
@
text
@d18 1
a18 1
«IF null != editorGen.navigator && !editorGen.domainGenModel.richClientPlatform»
@

