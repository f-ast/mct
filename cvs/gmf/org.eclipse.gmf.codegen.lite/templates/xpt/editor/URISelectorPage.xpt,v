head	1.2;
access;
symbols
	v20080910-1520:1.2
	v20080722-1827:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080507-1326:1.2
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080322-0000:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070903-0000:1.1;
locks; strict;
comment	@# @;


1.2
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	388c4821b4d44567;

1.1
date	2007.08.13.14.11.03;	author bblajer;	state Exp;
branches;
next	;
commitid	65c246c066754567;


desc
@@


1.2
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::editor::Wizard»
«EXTENSION xpt::editor::i18n»

«DEFINE className FOR gmfgen::GenDiagram»URISelectorPage«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«editorGen.editor.packageName».«EXPAND className»«ENDDEFINE»

«DEFINE URISelectorPage FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «editorGen.editor.packageName»;

«EXPAND xpt::Common::generatedClassComment»
public abstract class «EXPAND className» «EXPAND supertypes» {
	«EXPAND fileField-»

	«EXPAND validator-»

	«EXPAND ctor-»

	«EXPAND createControl-»

	«EXPAND setFile-»

	«EXPAND validatePage-»

	«EXPAND validateFile-»

	«EXPAND getFileExtension-»

	«EXPAND getFileURI-»

	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenDiagram»extends org.eclipse.jface.wizard.WizardPage«ENDDEFINE»

«DEFINE fileField FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.swt.widgets.Text fileField;
«ENDDEFINE»

«DEFINE ctor FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
protected «EXPAND className»(String name) {
	super(name);
}
«ENDDEFINE»

«DEFINE createControl FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
public void createControl(org.eclipse.swt.widgets.Composite parent) {
	org.eclipse.swt.widgets.Composite composite = new org.eclipse.swt.widgets.Composite(parent, org.eclipse.swt.SWT.NONE);
	{
		org.eclipse.swt.layout.GridLayout layout = new org.eclipse.swt.layout.GridLayout();
		layout.numColumns = 1;
		layout.verticalSpacing = 12;
		composite.setLayout(layout);

		org.eclipse.swt.layout.GridData data = new org.eclipse.swt.layout.GridData();
		data.verticalAlignment = org.eclipse.swt.layout.GridData.FILL;
		data.grabExcessVerticalSpace = true;
		data.horizontalAlignment = org.eclipse.swt.layout.GridData.FILL;
		composite.setLayoutData(data);
	}
	org.eclipse.swt.widgets.Label resourceURILabel = new org.eclipse.swt.widgets.Label(composite, org.eclipse.swt.SWT.LEFT);
	{
		resourceURILabel.setText(«EXPAND xpt::Externalizer::accessorCall(i18nForNewDiagramFileWizardFileLabel()) FOR editorGen»);

		org.eclipse.swt.layout.GridData data = new org.eclipse.swt.layout.GridData();
		data.horizontalAlignment = org.eclipse.swt.layout.GridData.FILL;
		resourceURILabel.setLayoutData(data);
	}

	org.eclipse.swt.widgets.Composite fileComposite = new org.eclipse.swt.widgets.Composite(composite, org.eclipse.swt.SWT.NONE);
	{
		org.eclipse.swt.layout.GridData data = new org.eclipse.swt.layout.GridData();
		data.horizontalAlignment = org.eclipse.swt.layout.GridData.FILL;
		data.grabExcessHorizontalSpace = true;
		fileComposite.setLayoutData(data);

		org.eclipse.swt.layout.GridLayout layout = new org.eclipse.swt.layout.GridLayout();
		layout.marginHeight = 0;
		layout.marginWidth = 0;
		layout.numColumns = 2;
		fileComposite.setLayout(layout);
	}

	fileField = new org.eclipse.swt.widgets.Text(fileComposite, org.eclipse.swt.SWT.BORDER);
	{
		org.eclipse.swt.layout.GridData data = new org.eclipse.swt.layout.GridData();
		data.horizontalAlignment = org.eclipse.swt.layout.GridData.FILL;
		data.grabExcessHorizontalSpace = true;
		data.horizontalSpan = 1;
		fileField.setLayoutData(data);
	}

	fileField.addModifyListener(validator);
	org.eclipse.swt.widgets.Button resourceURIBrowseFileSystemButton = new org.eclipse.swt.widgets.Button(fileComposite, org.eclipse.swt.SWT.PUSH);
	resourceURIBrowseFileSystemButton.setText(«EXPAND xpt::Externalizer::accessorCall(i18nForNewDiagramFileWizardBrowseButton()) FOR editorGen»);

	resourceURIBrowseFileSystemButton.addSelectionListener(new org.eclipse.swt.events.SelectionAdapter() {
		public void widgetSelected(org.eclipse.swt.events.SelectionEvent event) {
			String fileExtension = getFileExtension();
			String extensionFilter;
			if (fileExtension == null) {
				extensionFilter = "*.*";	«EXPAND xpt::Common::nonNLS»
			} else {
				extensionFilter = "*." + fileExtension;	«EXPAND xpt::Common::nonNLS»
			}
			String filePath = «getDiagramEditorUtilQualifiedClassName()».openFilePathDialog(getShell(), extensionFilter, org.eclipse.swt.SWT.OPEN);
			if (filePath != null) {
				if (fileExtension != null && !filePath.endsWith("." + fileExtension)) {	«EXPAND xpt::Common::nonNLS»
					filePath = filePath + "." + fileExtension;	«EXPAND xpt::Common::nonNLS»
				}
				fileField.setText(filePath);
			}
		}
	});
	setPageComplete(validatePage());
	setControl(composite);
}
«ENDDEFINE»

«DEFINE validator FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.swt.events.ModifyListener validator = new org.eclipse.swt.events.ModifyListener() {
	public void modifyText(org.eclipse.swt.events.ModifyEvent e) {
		setPageComplete(validatePage());
	}
};
«ENDDEFINE»

«DEFINE setFile FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
protected final void setFile(java.io.File file) {
	fileField.setText(file.getPath());
}
«ENDDEFINE»

«DEFINE validatePage FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
protected boolean validatePage() {
	org.eclipse.emf.common.util.URI fileURI = getFileURI();
	if (fileURI == null || fileURI.isEmpty()) {
		setErrorMessage(null);
		return false;
	}
	if (fileURI.isFile()) {
		java.io.File file = new java.io.File(fileURI.toFileString());
		String fileProblem = validateFile(file);
		if (fileProblem != null) {
			setErrorMessage(fileProblem);
			return false;
		}
	}
	String requiredExt = getFileExtension();
	if (requiredExt != null) {
		String enteredExt = fileURI.fileExtension();
		if (enteredExt == null || !enteredExt.equals(requiredExt)) {
			setErrorMessage(org.eclipse.osgi.util.NLS.bind(«EXPAND xpt::Externalizer::accessorCall(i18nForNewDiagramFileWizardIncorrectExtension()) FOR editorGen», requiredExt));
			return false;
		}
	}
	setErrorMessage(null);
	return true;
}
«ENDDEFINE»

«DEFINE validateFile FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment("Checks the given file and returns the error message if there are problems or <code>null</code> if the file is OK.")»
protected abstract String validateFile(java.io.File file);
«ENDDEFINE»

«DEFINE getFileExtension FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment("Returns the file extension the opened file should conform to or <code>null</code>\n" + 
"if there are no restrictions on file extension")»
protected abstract String getFileExtension();
«ENDDEFINE»

«DEFINE getFileURI FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.emf.common.util.URI getFileURI() {
	try {
		return org.eclipse.emf.common.util.URI.createFileURI(fileField.getText());
	} catch (Exception exception) {
	}
	return null;
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenDiagram»«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
«IF isRichClientPlatform()-»
«EXPAND xpt::Externalizer::accessorField(i18nForNewDiagramFileWizardIncorrectExtension())-»
«EXPAND xpt::Externalizer::accessorField(i18nForNewDiagramFileWizardBrowseButton())-»
«EXPAND xpt::Externalizer::accessorField(i18nForNewDiagramFileWizardFileLabel())-»
«ENDIF-»
«ENDDEFINE»


«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«IF isRichClientPlatform()-»
«EXPAND xpt::Externalizer::messageEntry(i18nForNewDiagramFileWizardIncorrectExtension(), "The file name must end in {0}")-»
«EXPAND xpt::Externalizer::messageEntry(i18nForNewDiagramFileWizardBrowseButton(), "&Browse...")-»
«EXPAND xpt::Externalizer::messageEntry(i18nForNewDiagramFileWizardFileLabel(), "&File")-»
«ENDIF-»
«ENDDEFINE»
@


1.1
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@

