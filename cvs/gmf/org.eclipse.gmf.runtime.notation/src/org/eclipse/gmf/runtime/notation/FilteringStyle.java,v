head	1.7;
access;
symbols
	v20081020-0700:1.7
	v20080722-1827:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080503-1740:1.6
	v20080425-1959:1.5
	v20080407-2250:1.5
	v20080407-1545:1.5
	v20080331-1625:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080114-2222:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	v20070403-1500:1.4
	v20070330-1300:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.3.2.1
	M1_20:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	I20060505-1400:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.00.14.42;	author ahunter;	state Exp;
branches;
next	1.6;
commitid	3e924820f4604567;

1.6
date	2008.05.03.18.33.03;	author ahunter;	state Exp;
branches;
next	1.5;
commitid	1c13481cafcc4567;

1.5
date	2007.05.17.16.26.50;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	71d9464c82444567;

1.4
date	2006.10.03.15.07.27;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.07.15.22.13;	author mmostafa;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.29.42;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.27;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.09.13.16.48.17;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation;

import java.util.List;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Filtering Style</b></em>'.
 * <p>
 * The filtering style is a style to be installed on nodes representing lists to be filtered
 * </p>
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.FilteringStyle#getFiltering <em>Filtering</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.FilteringStyle#getFilteringKeys <em>Filtering Keys</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.FilteringStyle#getFilteredObjects <em>Filtered Objects</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle()
 * @@model
 * @@generated
 */
/*
 * @@canBeSeenBy %partners
 */
public interface FilteringStyle extends Style {
    /**
	 * Returns the value of the '<em><b>Filtering</b></em>' attribute.
	 * The default value is <code>"None"</code>.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.runtime.notation.Filtering}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * This is the type of filtering applied to the list represented by the node
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Filtering</em>' attribute.
	 * @@see org.eclipse.gmf.runtime.notation.Filtering
	 * @@see #setFiltering(Filtering)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle_Filtering()
	 * @@model default="None"
	 * @@generated
	 */
	Filtering getFiltering();

    /**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.FilteringStyle#getFiltering <em>Filtering</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * This is the type of filtering applied to the list represented by the node
	 * </p>
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Filtering</em>' attribute.
	 * @@see org.eclipse.gmf.runtime.notation.Filtering
	 * @@see #getFiltering()
	 * @@generated
	 */
	void setFiltering(Filtering value);

	/**
	 * Returns the value of the '<em><b>Filtering Keys</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The property is an unordered list of string keys to filter on. The keys string are user-defined and
	 * normally used when the <em>Filtering</em> property is set to <em>Automatic</em>
	 * 
	 * The value is a non-modifiable list of <code>java.lang.String</code> objects
	 * Any attempt to change the returned list will result in <code>UnsupportedOperationException</code> thrown;
	 * instead use <code>setFilteringKeys</code> to change the list
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Filtering Keys</em>' attribute.
	 * @@see #setFilteringKeys(List)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle_FilteringKeys()
	 * @@model dataType="org.eclipse.gmf.runtime.notation.FilterKeyList" many="false"
	 * @@generated NOT
	 */
	List getFilteringKeys();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.FilteringStyle#getFilteringKeys <em>Filtering Keys</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The property is an unordered list of string keys to filter on. The keys string are user-defined and
	 * normally used when the <em>Filtering</em> property is set to <em>Automatic</em>
	 * 
	 * The value must be an empty list or one that contains only <code>java.lang.String</code> objects
	 * </p>
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Filtering Keys</em>' attribute. The value cannot be <code>null</code>
	 * @@see #getFilteringKeys()
	 * @@throws NullPointerException if the passed list is <code>null</code>
	 * @@throws IllegalArgumentException if one or more objects in the passed list is not of type <code>java.lang.String</code> 
	 * @@generated NOT
	 */
	void setFilteringKeys(List value);

    /**
	 * Returns the value of the '<em><b>Filtered Objects</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.ecore.EObject}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The property is an unordered list of references to objects be filtered. The property is
	 * normally used when the <em>Filtering</em> property is set to <em>Manual</em>
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Filtered Objects</em>' reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle_FilteredObjects()
	 * @@model type="org.eclipse.emf.ecore.EObject"
	 * @@generated
	 */
	EList getFilteredObjects();

} // FilteringStyle
@


1.6
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@d42 1
a42 1
public interface FilteringStyle extends NotationObject, Style {
@


1.5
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@d42 1
a42 1
public interface FilteringStyle extends Style {
@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d36 1
a36 1
 * @@model 
d44 4
a47 4
     * Returns the value of the '<em><b>Filtering</b></em>' attribute.
     * The default value is <code>"None"</code>.
     * The literals are from the enumeration {@@link org.eclipse.gmf.runtime.notation.Filtering}.
     * <!-- begin-user-doc -->
d52 7
a58 7
     * @@return the value of the '<em>Filtering</em>' attribute.
     * @@see org.eclipse.gmf.runtime.notation.Filtering
     * @@see #setFiltering(Filtering)
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle_Filtering()
     * @@model default="None"
     * @@generated
     */
d62 2
a63 2
     * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.FilteringStyle#getFiltering <em>Filtering</em>}' attribute.
     * <!-- begin-user-doc -->
d68 5
a72 5
     * @@param value the new value of the '<em>Filtering</em>' attribute.
     * @@see org.eclipse.gmf.runtime.notation.Filtering
     * @@see #getFiltering()
     * @@generated
     */
d114 3
a116 3
     * Returns the value of the '<em><b>Filtered Objects</b></em>' reference list.
     * The list contents are of type {@@link org.eclipse.emf.ecore.EObject}.
     * <!-- begin-user-doc -->
d122 5
a126 5
     * @@return the value of the '<em>Filtered Objects</em>' reference list.
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle_FilteredObjects()
     * @@model type="org.eclipse.emf.ecore.EObject"
     * @@generated
     */
@


1.3
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.3.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d42 6
a47 6
public interface FilteringStyle extends Style{
	/**
	 * Returns the value of the '<em><b>Filtering</b></em>' attribute.
	 * The default value is <code>"None"</code>.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.runtime.notation.Filtering}.
	 * <!-- begin-user-doc -->
d52 7
a58 7
	 * @@return the value of the '<em>Filtering</em>' attribute.
	 * @@see org.eclipse.gmf.runtime.notation.Filtering
	 * @@see #setFiltering(Filtering)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle_Filtering()
	 * @@model default="None"
	 * @@generated
	 */
d61 3
a63 3
	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.FilteringStyle#getFiltering <em>Filtering</em>}' attribute.
	 * <!-- begin-user-doc -->
d68 5
a72 5
	 * @@param value the new value of the '<em>Filtering</em>' attribute.
	 * @@see org.eclipse.gmf.runtime.notation.Filtering
	 * @@see #getFiltering()
	 * @@generated
	 */
d113 4
a116 4
	/**
	 * Returns the value of the '<em><b>Filtered Objects</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.ecore.EObject}.
	 * <!-- begin-user-doc -->
d122 5
a126 5
	 * @@return the value of the '<em>Filtered Objects</em>' reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getFilteringStyle_FilteredObjects()
	 * @@model type="org.eclipse.emf.ecore.EObject"
	 * @@generated
	 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

