head	1.15;
access;
symbols
	v20081020-0700:1.15
	v20080722-1827:1.15
	v20080716-1600:1.15
	v20080716-1642:1.15
	R2_1_maintenance:1.15.0.2
	Root_R2_1_maintenance:1.15
	R2_1_0:1.15
	v20080507-1326:1.15
	v20080503-1740:1.14
	v20080425-1959:1.13
	v20080407-2250:1.13
	v20080407-1545:1.13
	v20080331-1625:1.12
	v20080328-1605:1.12
	v20080222-1200:1.11
	v20080215-1500:1.11
	v20080114-2222:1.10
	v20071130-1111:1.11
	v20071124-0000:1.10
	v20071112-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070518-1300:1.9
	v20070403-1500:1.8
	v20070330-1300:1.8
	M4_20:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061013-1330:1.8
	v20060919-0800:1.7.2.1
	M1_20:1.7
	v20060728-0500:1.7
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1200:1.7
	v20060531-1730:1.7
	v20060519-0800:1.7
	I20060505-1400:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.15
date	2008.05.07.00.14.42;	author ahunter;	state Exp;
branches;
next	1.14;
commitid	3e924820f4604567;

1.14
date	2008.05.03.18.33.03;	author ahunter;	state Exp;
branches;
next	1.13;
commitid	1c13481cafcc4567;

1.13
date	2008.04.07.19.37.20;	author ahunter;	state Exp;
branches;
next	1.12;
commitid	2da847fa77ee4567;

1.12
date	2008.03.27.21.11.11;	author ahunter;	state Exp;
branches;
next	1.11;
commitid	3a1947ec0d6e4567;

1.11
date	2007.11.23.19.44.57;	author ahunter;	state Exp;
branches;
next	1.10;
commitid	5ae047472db84567;

1.10
date	2007.06.18.16.42.50;	author ahunter;	state Exp;
branches;
next	1.9;
commitid	4c834676b6044567;

1.9
date	2007.05.17.16.26.51;	author aboyko;	state Exp;
branches;
next	1.8;
commitid	71d9464c82444567;

1.8
date	2006.10.03.15.07.27;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.07.15.22.13;	author mmostafa;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2006.01.27.20.22.48;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.17.18.12.23;	author sshaw;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.11.17.01.22;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.06.20.26.00;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.43;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.30;	author sshaw;	state Exp;
branches;
next	;

1.7.2.1
date	2006.09.13.16.48.17;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.15
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation.util;

import java.util.List;
import java.util.Map;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EModelElement;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.runtime.notation.*;
import org.eclipse.gmf.runtime.notation.Anchor;
import org.eclipse.gmf.runtime.notation.Bendpoints;
import org.eclipse.gmf.runtime.notation.Bounds;
import org.eclipse.gmf.runtime.notation.CanonicalStyle;
import org.eclipse.gmf.runtime.notation.ConnectorStyle;
import org.eclipse.gmf.runtime.notation.DescriptionStyle;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.gmf.runtime.notation.DiagramStyle;
import org.eclipse.gmf.runtime.notation.DrawerStyle;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.FillStyle;
import org.eclipse.gmf.runtime.notation.FilteringStyle;
import org.eclipse.gmf.runtime.notation.FontStyle;
import org.eclipse.gmf.runtime.notation.Guide;
import org.eclipse.gmf.runtime.notation.GuideStyle;
import org.eclipse.gmf.runtime.notation.IdentityAnchor;
import org.eclipse.gmf.runtime.notation.Image;
import org.eclipse.gmf.runtime.notation.ImageBufferStyle;
import org.eclipse.gmf.runtime.notation.ImageStyle;
import org.eclipse.gmf.runtime.notation.LayoutConstraint;
import org.eclipse.gmf.runtime.notation.LineStyle;
import org.eclipse.gmf.runtime.notation.Location;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.PageStyle;
import org.eclipse.gmf.runtime.notation.Ratio;
import org.eclipse.gmf.runtime.notation.RelativeBendpoints;
import org.eclipse.gmf.runtime.notation.RoutingStyle;
import org.eclipse.gmf.runtime.notation.ShapeStyle;
import org.eclipse.gmf.runtime.notation.Size;
import org.eclipse.gmf.runtime.notation.SortingStyle;
import org.eclipse.gmf.runtime.notation.Style;
import org.eclipse.gmf.runtime.notation.TitleStyle;
import org.eclipse.gmf.runtime.notation.View;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@@link #doSwitch doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.runtime.notation.NotationPackage
 * @@generated
 */
/*
 * @@canBeSeenBy org.eclipse.gmf.runtime.notation.*
 */
public class NotationSwitch {
    /**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected static NotationPackage modelPackage;

    /**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotationSwitch() {
		if (modelPackage == null) {
			modelPackage = NotationPackage.eINSTANCE;
		}
	}

    /**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
	public Object doSwitch(EObject theEObject) {
		return doSwitch(theEObject.eClass(), theEObject);
	}

    /**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
	protected Object doSwitch(EClass theEClass, EObject theEObject) {
		if (theEClass.eContainer() == modelPackage) {
			return doSwitch(theEClass.getClassifierID(), theEObject);
		}
		else {
			List eSuperTypes = theEClass.getESuperTypes();
			return
				eSuperTypes.isEmpty() ?
					defaultCase(theEObject) :
					doSwitch((EClass)eSuperTypes.get(0), theEObject);
		}
	}

    /**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
	protected Object doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
			case NotationPackage.EDGE: {
				Edge edge = (Edge)theEObject;
				Object result = caseEdge(edge);
				if (result == null) result = caseView(edge);
				if (result == null) result = caseEModelElement(edge);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.NODE: {
				Node node = (Node)theEObject;
				Object result = caseNode(node);
				if (result == null) result = caseView(node);
				if (result == null) result = caseEModelElement(node);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.STYLE: {
				Style style = (Style)theEObject;
				Object result = caseStyle(style);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.FILL_STYLE: {
				FillStyle fillStyle = (FillStyle)theEObject;
				Object result = caseFillStyle(fillStyle);
				if (result == null) result = caseStyle(fillStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LINE_STYLE: {
				LineStyle lineStyle = (LineStyle)theEObject;
				Object result = caseLineStyle(lineStyle);
				if (result == null) result = caseStyle(lineStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.FONT_STYLE: {
				FontStyle fontStyle = (FontStyle)theEObject;
				Object result = caseFontStyle(fontStyle);
				if (result == null) result = caseStyle(fontStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.TITLE_STYLE: {
				TitleStyle titleStyle = (TitleStyle)theEObject;
				Object result = caseTitleStyle(titleStyle);
				if (result == null) result = caseStyle(titleStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.SORTING_STYLE: {
				SortingStyle sortingStyle = (SortingStyle)theEObject;
				Object result = caseSortingStyle(sortingStyle);
				if (result == null) result = caseStyle(sortingStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DESCRIPTION_STYLE: {
				DescriptionStyle descriptionStyle = (DescriptionStyle)theEObject;
				Object result = caseDescriptionStyle(descriptionStyle);
				if (result == null) result = caseStyle(descriptionStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LAYOUT_CONSTRAINT: {
				LayoutConstraint layoutConstraint = (LayoutConstraint)theEObject;
				Object result = caseLayoutConstraint(layoutConstraint);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.SIZE: {
				Size size = (Size)theEObject;
				Object result = caseSize(size);
				if (result == null) result = caseLayoutConstraint(size);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LOCATION: {
				Location location = (Location)theEObject;
				Object result = caseLocation(location);
				if (result == null) result = caseLayoutConstraint(location);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.BOUNDS: {
				Bounds bounds = (Bounds)theEObject;
				Object result = caseBounds(bounds);
				if (result == null) result = caseLocation(bounds);
				if (result == null) result = caseSize(bounds);
				if (result == null) result = caseLayoutConstraint(bounds);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.RATIO: {
				Ratio ratio = (Ratio)theEObject;
				Object result = caseRatio(ratio);
				if (result == null) result = caseLayoutConstraint(ratio);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.ANCHOR: {
				Anchor anchor = (Anchor)theEObject;
				Object result = caseAnchor(anchor);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.BENDPOINTS: {
				Bendpoints bendpoints = (Bendpoints)theEObject;
				Object result = caseBendpoints(bendpoints);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IDENTITY_ANCHOR: {
				IdentityAnchor identityAnchor = (IdentityAnchor)theEObject;
				Object result = caseIdentityAnchor(identityAnchor);
				if (result == null) result = caseAnchor(identityAnchor);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.ROUTING_STYLE: {
				RoutingStyle routingStyle = (RoutingStyle)theEObject;
				Object result = caseRoutingStyle(routingStyle);
				if (result == null) result = caseStyle(routingStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.VIEW: {
				View view = (View)theEObject;
				Object result = caseView(view);
				if (result == null) result = caseEModelElement(view);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.RELATIVE_BENDPOINTS: {
				RelativeBendpoints relativeBendpoints = (RelativeBendpoints)theEObject;
				Object result = caseRelativeBendpoints(relativeBendpoints);
				if (result == null) result = caseBendpoints(relativeBendpoints);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DIAGRAM: {
				Diagram diagram = (Diagram)theEObject;
				Object result = caseDiagram(diagram);
				if (result == null) result = caseView(diagram);
				if (result == null) result = caseEModelElement(diagram);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IMAGE: {
				Image image = (Image)theEObject;
				Object result = caseImage(image);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.CANONICAL_STYLE: {
				CanonicalStyle canonicalStyle = (CanonicalStyle)theEObject;
				Object result = caseCanonicalStyle(canonicalStyle);
				if (result == null) result = caseStyle(canonicalStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.SHAPE_STYLE: {
				ShapeStyle shapeStyle = (ShapeStyle)theEObject;
				Object result = caseShapeStyle(shapeStyle);
				if (result == null) result = caseFontStyle(shapeStyle);
				if (result == null) result = caseDescriptionStyle(shapeStyle);
				if (result == null) result = caseFillStyle(shapeStyle);
				if (result == null) result = caseLineStyle(shapeStyle);
				if (result == null) result = caseStyle(shapeStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.CONNECTOR_STYLE: {
				ConnectorStyle connectorStyle = (ConnectorStyle)theEObject;
				Object result = caseConnectorStyle(connectorStyle);
				if (result == null) result = caseRoutingStyle(connectorStyle);
				if (result == null) result = caseLineStyle(connectorStyle);
				if (result == null) result = caseStyle(connectorStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.PAGE_STYLE: {
				PageStyle pageStyle = (PageStyle)theEObject;
				Object result = casePageStyle(pageStyle);
				if (result == null) result = caseStyle(pageStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DRAWER_STYLE: {
				DrawerStyle drawerStyle = (DrawerStyle)theEObject;
				Object result = caseDrawerStyle(drawerStyle);
				if (result == null) result = caseStyle(drawerStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.GUIDE_STYLE: {
				GuideStyle guideStyle = (GuideStyle)theEObject;
				Object result = caseGuideStyle(guideStyle);
				if (result == null) result = caseStyle(guideStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.GUIDE: {
				Guide guide = (Guide)theEObject;
				Object result = caseGuide(guide);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.NODE_ENTRY: {
				Map.Entry nodeEntry = (Map.Entry)theEObject;
				Object result = caseNodeEntry(nodeEntry);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.FILTERING_STYLE: {
				FilteringStyle filteringStyle = (FilteringStyle)theEObject;
				Object result = caseFilteringStyle(filteringStyle);
				if (result == null) result = caseStyle(filteringStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DIAGRAM_STYLE: {
				DiagramStyle diagramStyle = (DiagramStyle)theEObject;
				Object result = caseDiagramStyle(diagramStyle);
				if (result == null) result = casePageStyle(diagramStyle);
				if (result == null) result = caseGuideStyle(diagramStyle);
				if (result == null) result = caseDescriptionStyle(diagramStyle);
				if (result == null) result = caseStyle(diagramStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IMAGE_STYLE: {
				ImageStyle imageStyle = (ImageStyle)theEObject;
				Object result = caseImageStyle(imageStyle);
				if (result == null) result = caseStyle(imageStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IMAGE_BUFFER_STYLE: {
				ImageBufferStyle imageBufferStyle = (ImageBufferStyle)theEObject;
				Object result = caseImageBufferStyle(imageBufferStyle);
				if (result == null) result = caseImageStyle(imageBufferStyle);
				if (result == null) result = caseStyle(imageBufferStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.PROPERTIES_SET_STYLE: {
				PropertiesSetStyle propertiesSetStyle = (PropertiesSetStyle)theEObject;
				Object result = casePropertiesSetStyle(propertiesSetStyle);
				if (result == null) result = caseNamedStyle(propertiesSetStyle);
				if (result == null) result = caseStyle(propertiesSetStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.STRING_TO_PROPERTY_VALUE_MAP_ENTRY: {
				Map.Entry stringToPropertyValueMapEntry = (Map.Entry)theEObject;
				Object result = caseStringToPropertyValueMapEntry(stringToPropertyValueMapEntry);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.PROPERTY_VALUE: {
				PropertyValue propertyValue = (PropertyValue)theEObject;
				Object result = casePropertyValue(propertyValue);
				if (result == null) result = caseStringObjectConverter(propertyValue);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.SINGLE_VALUE_STYLE: {
				SingleValueStyle singleValueStyle = (SingleValueStyle)theEObject;
				Object result = caseSingleValueStyle(singleValueStyle);
				if (result == null) result = caseDataTypeStyle(singleValueStyle);
				if (result == null) result = caseNamedStyle(singleValueStyle);
				if (result == null) result = caseStringObjectConverter(singleValueStyle);
				if (result == null) result = caseStyle(singleValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LIST_VALUE_STYLE: {
				ListValueStyle listValueStyle = (ListValueStyle)theEObject;
				Object result = caseListValueStyle(listValueStyle);
				if (result == null) result = caseDataTypeStyle(listValueStyle);
				if (result == null) result = caseNamedStyle(listValueStyle);
				if (result == null) result = caseStringObjectConverter(listValueStyle);
				if (result == null) result = caseStyle(listValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.NAMED_STYLE: {
				NamedStyle namedStyle = (NamedStyle)theEObject;
				Object result = caseNamedStyle(namedStyle);
				if (result == null) result = caseStyle(namedStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.STRING_OBJECT_CONVERTER: {
				StringObjectConverter stringObjectConverter = (StringObjectConverter)theEObject;
				Object result = caseStringObjectConverter(stringObjectConverter);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DATA_TYPE_STYLE: {
				DataTypeStyle dataTypeStyle = (DataTypeStyle)theEObject;
				Object result = caseDataTypeStyle(dataTypeStyle);
				if (result == null) result = caseNamedStyle(dataTypeStyle);
				if (result == null) result = caseStringObjectConverter(dataTypeStyle);
				if (result == null) result = caseStyle(dataTypeStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.INT_VALUE_STYLE: {
				IntValueStyle intValueStyle = (IntValueStyle)theEObject;
				Object result = caseIntValueStyle(intValueStyle);
				if (result == null) result = caseNamedStyle(intValueStyle);
				if (result == null) result = caseStyle(intValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.INT_LIST_VALUE_STYLE: {
				IntListValueStyle intListValueStyle = (IntListValueStyle)theEObject;
				Object result = caseIntListValueStyle(intListValueStyle);
				if (result == null) result = caseNamedStyle(intListValueStyle);
				if (result == null) result = caseStyle(intListValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.BOOLEAN_VALUE_STYLE: {
				BooleanValueStyle booleanValueStyle = (BooleanValueStyle)theEObject;
				Object result = caseBooleanValueStyle(booleanValueStyle);
				if (result == null) result = caseNamedStyle(booleanValueStyle);
				if (result == null) result = caseStyle(booleanValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DOUBLE_VALUE_STYLE: {
				DoubleValueStyle doubleValueStyle = (DoubleValueStyle)theEObject;
				Object result = caseDoubleValueStyle(doubleValueStyle);
				if (result == null) result = caseNamedStyle(doubleValueStyle);
				if (result == null) result = caseStyle(doubleValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DOUBLE_LIST_VALUE_STYLE: {
				DoubleListValueStyle doubleListValueStyle = (DoubleListValueStyle)theEObject;
				Object result = caseDoubleListValueStyle(doubleListValueStyle);
				if (result == null) result = caseNamedStyle(doubleListValueStyle);
				if (result == null) result = caseStyle(doubleListValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.STRING_VALUE_STYLE: {
				StringValueStyle stringValueStyle = (StringValueStyle)theEObject;
				Object result = caseStringValueStyle(stringValueStyle);
				if (result == null) result = caseNamedStyle(stringValueStyle);
				if (result == null) result = caseStyle(stringValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.STRING_LIST_VALUE_STYLE: {
				StringListValueStyle stringListValueStyle = (StringListValueStyle)theEObject;
				Object result = caseStringListValueStyle(stringListValueStyle);
				if (result == null) result = caseNamedStyle(stringListValueStyle);
				if (result == null) result = caseStyle(stringListValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.EOBJECT_VALUE_STYLE: {
				EObjectValueStyle eObjectValueStyle = (EObjectValueStyle)theEObject;
				Object result = caseEObjectValueStyle(eObjectValueStyle);
				if (result == null) result = caseNamedStyle(eObjectValueStyle);
				if (result == null) result = caseStyle(eObjectValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.EOBJECT_LIST_VALUE_STYLE: {
				EObjectListValueStyle eObjectListValueStyle = (EObjectListValueStyle)theEObject;
				Object result = caseEObjectListValueStyle(eObjectListValueStyle);
				if (result == null) result = caseNamedStyle(eObjectListValueStyle);
				if (result == null) result = caseStyle(eObjectListValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.BYTE_ARRAY_VALUE_STYLE: {
				ByteArrayValueStyle byteArrayValueStyle = (ByteArrayValueStyle)theEObject;
				Object result = caseByteArrayValueStyle(byteArrayValueStyle);
				if (result == null) result = caseNamedStyle(byteArrayValueStyle);
				if (result == null) result = caseStyle(byteArrayValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.BOOLEAN_LIST_VALUE_STYLE: {
				BooleanListValueStyle booleanListValueStyle = (BooleanListValueStyle)theEObject;
				Object result = caseBooleanListValueStyle(booleanListValueStyle);
				if (result == null) result = caseNamedStyle(booleanListValueStyle);
				if (result == null) result = caseStyle(booleanListValueStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.HINTED_DIAGRAM_LINK_STYLE: {
				HintedDiagramLinkStyle hintedDiagramLinkStyle = (HintedDiagramLinkStyle)theEObject;
				Object result = caseHintedDiagramLinkStyle(hintedDiagramLinkStyle);
				if (result == null) result = caseDiagramLinkStyle(hintedDiagramLinkStyle);
				if (result == null) result = caseStyle(hintedDiagramLinkStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DIAGRAM_LINK_STYLE: {
				DiagramLinkStyle diagramLinkStyle = (DiagramLinkStyle)theEObject;
				Object result = caseDiagramLinkStyle(diagramLinkStyle);
				if (result == null) result = caseStyle(diagramLinkStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE: {
				MultiDiagramLinkStyle multiDiagramLinkStyle = (MultiDiagramLinkStyle)theEObject;
				Object result = caseMultiDiagramLinkStyle(multiDiagramLinkStyle);
				if (result == null) result = caseStyle(multiDiagramLinkStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.TEXT_STYLE: {
				TextStyle textStyle = (TextStyle)theEObject;
				Object result = caseTextStyle(textStyle);
				if (result == null) result = caseStyle(textStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LINE_TYPE_STYLE: {
				LineTypeStyle lineTypeStyle = (LineTypeStyle)theEObject;
				Object result = caseLineTypeStyle(lineTypeStyle);
				if (result == null) result = caseStyle(lineTypeStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.ARROW_STYLE: {
				ArrowStyle arrowStyle = (ArrowStyle)theEObject;
				Object result = caseArrowStyle(arrowStyle);
				if (result == null) result = caseStyle(arrowStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			default: return defaultCase(theEObject);
		}
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Edge</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Edge</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseEdge(Edge object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Node</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Node</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseNode(Node object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseStyle(Style object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Fill Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Fill Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseFillStyle(FillStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Line Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Line Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseLineStyle(LineStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Font Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Font Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseFontStyle(FontStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Title Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Title Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseTitleStyle(TitleStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Sorting Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Sorting Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseSortingStyle(SortingStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Description Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Description Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDescriptionStyle(DescriptionStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Layout Constraint</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Layout Constraint</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseLayoutConstraint(LayoutConstraint object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Size</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Size</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseSize(Size object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Location</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Location</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseLocation(Location object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Bounds</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Bounds</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseBounds(Bounds object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Ratio</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Ratio</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseRatio(Ratio object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Anchor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Anchor</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseAnchor(Anchor object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Bendpoints</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Bendpoints</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseBendpoints(Bendpoints object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Identity Anchor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Identity Anchor</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseIdentityAnchor(IdentityAnchor object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Routing Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Routing Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseRoutingStyle(RoutingStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>View</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>View</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseView(View object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Relative Bendpoints</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Relative Bendpoints</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseRelativeBendpoints(RelativeBendpoints object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Canonical Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Canonical Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseCanonicalStyle(CanonicalStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Shape Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Shape Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseShapeStyle(ShapeStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Connector Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Connector Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseConnectorStyle(ConnectorStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Diagram</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Diagram</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDiagram(Diagram object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Image</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Image</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseImage(Image object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Page Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Page Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object casePageStyle(PageStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Drawer Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Drawer Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDrawerStyle(DrawerStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Guide Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Guide Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseGuideStyle(GuideStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Guide</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Guide</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseGuide(Guide object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Node Entry</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Node Entry</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseNodeEntry(Map.Entry object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Filtering Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Filtering Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseFilteringStyle(FilteringStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Diagram Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Diagram Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDiagramStyle(DiagramStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Image Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Image Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseImageStyle(ImageStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Image Buffer Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Image Buffer Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseImageBufferStyle(ImageBufferStyle object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>Properties Set Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Properties Set Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object casePropertiesSetStyle(PropertiesSetStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>String To Property Value Map Entry</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>String To Property Value Map Entry</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseStringToPropertyValueMapEntry(Map.Entry object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Property Value</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Property Value</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object casePropertyValue(PropertyValue object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Single Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Single Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseSingleValueStyle(SingleValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>List Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>List Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseListValueStyle(ListValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Named Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Named Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseNamedStyle(NamedStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>String Object Converter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>String Object Converter</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseStringObjectConverter(StringObjectConverter object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Data Type Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Data Type Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDataTypeStyle(DataTypeStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Int Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Int Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseIntValueStyle(IntValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Int List Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Int List Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseIntListValueStyle(IntListValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Boolean Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Boolean Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseBooleanValueStyle(BooleanValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Double Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Double Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDoubleValueStyle(DoubleValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Double List Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Double List Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDoubleListValueStyle(DoubleListValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>String Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>String Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseStringValueStyle(StringValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>String List Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>String List Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseStringListValueStyle(StringListValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>EObject Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseEObjectValueStyle(EObjectValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject List Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>EObject List Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseEObjectListValueStyle(EObjectListValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Byte Array Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Byte Array Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseByteArrayValueStyle(ByteArrayValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Boolean List Value Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Boolean List Value Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseBooleanListValueStyle(BooleanListValueStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Hinted Diagram Link Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Hinted Diagram Link Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseHintedDiagramLinkStyle(HintedDiagramLinkStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Diagram Link Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Diagram Link Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseDiagramLinkStyle(DiagramLinkStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Multi Diagram Link Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Multi Diagram Link Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseMultiDiagramLinkStyle(MultiDiagramLinkStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Text Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Text Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseTextStyle(TextStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Line Type Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Line Type Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseLineTypeStyle(LineTypeStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>Arrow Style</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Arrow Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseArrowStyle(ArrowStyle object) {
		return null;
	}

				/**
	 * Returns the result of interpreting the object as an instance of '<em>EModel Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>EModel Element</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseEModelElement(EModelElement object) {
		return null;
	}

    /**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @@generated
	 */
	public Object defaultCase(EObject object) {
		return null;
	}

} //NotationSwitch
@


1.14
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@a137 1
				if (result == null) result = caseNotationObject(edge);
a145 1
				if (result == null) result = caseNotationObject(node);
a157 1
				if (result == null) result = caseNotationObject(fillStyle);
a164 1
				if (result == null) result = caseNotationObject(lineStyle);
a171 1
				if (result == null) result = caseNotationObject(fontStyle);
a178 1
				if (result == null) result = caseNotationObject(titleStyle);
a185 1
				if (result == null) result = caseNotationObject(sortingStyle);
a192 1
				if (result == null) result = caseNotationObject(descriptionStyle);
a205 1
				if (result == null) result = caseNotationObject(size);
a212 1
				if (result == null) result = caseNotationObject(location);
a221 1
				if (result == null) result = caseNotationObject(bounds);
a228 1
				if (result == null) result = caseNotationObject(ratio);
a247 1
				if (result == null) result = caseNotationObject(identityAnchor);
a254 1
				if (result == null) result = caseNotationObject(routingStyle);
a262 1
				if (result == null) result = caseNotationObject(view);
a268 1
				if (result == null) result = caseNotationObject(relativeBendpoints);
a277 1
				if (result == null) result = caseNotationObject(diagram);
a283 1
				if (result == null) result = caseNotationObject(image);
a289 1
				if (result == null) result = caseNotationObject(canonicalStyle);
a300 1
				if (result == null) result = caseNotationObject(shapeStyle);
a309 1
				if (result == null) result = caseNotationObject(connectorStyle);
a316 1
				if (result == null) result = caseNotationObject(pageStyle);
a323 1
				if (result == null) result = caseNotationObject(drawerStyle);
a330 1
				if (result == null) result = caseNotationObject(guideStyle);
a337 1
				if (result == null) result = caseNotationObject(guide);
a343 1
				if (result == null) result = caseNotationObject((NotationObject)nodeEntry);
a349 1
				if (result == null) result = caseNotationObject(filteringStyle);
a359 1
				if (result == null) result = caseNotationObject(diagramStyle);
a366 1
				if (result == null) result = caseNotationObject(imageStyle);
a374 1
				if (result == null) result = caseNotationObject(imageBufferStyle);
a382 1
				if (result == null) result = caseNotationObject(propertiesSetStyle);
a389 1
				if (result == null) result = caseNotationObject((NotationObject)stringToPropertyValueMapEntry);
a396 1
				if (result == null) result = caseNotationObject(propertyValue);
a405 1
				if (result == null) result = caseNotationObject(singleValueStyle);
a415 1
				if (result == null) result = caseNotationObject(listValueStyle);
a422 1
				if (result == null) result = caseNotationObject(namedStyle);
a429 1
				if (result == null) result = caseNotationObject(stringObjectConverter);
a437 1
				if (result == null) result = caseNotationObject(dataTypeStyle);
a445 1
				if (result == null) result = caseNotationObject(intValueStyle);
a453 1
				if (result == null) result = caseNotationObject(intListValueStyle);
a461 1
				if (result == null) result = caseNotationObject(booleanValueStyle);
a469 1
				if (result == null) result = caseNotationObject(doubleValueStyle);
a477 1
				if (result == null) result = caseNotationObject(doubleListValueStyle);
a485 1
				if (result == null) result = caseNotationObject(stringValueStyle);
a493 1
				if (result == null) result = caseNotationObject(stringListValueStyle);
a501 1
				if (result == null) result = caseNotationObject(eObjectValueStyle);
a509 1
				if (result == null) result = caseNotationObject(eObjectListValueStyle);
a517 1
				if (result == null) result = caseNotationObject(byteArrayValueStyle);
a525 1
				if (result == null) result = caseNotationObject(booleanListValueStyle);
a534 1
				if (result == null) result = caseNotationObject(hintedDiagramLinkStyle);
a540 1
				if (result == null) result = caseNotationObject(diagramLinkStyle);
a547 1
				if (result == null) result = caseNotationObject(multiDiagramLinkStyle);
a554 1
				if (result == null) result = caseNotationObject(textStyle);
a561 1
				if (result == null) result = caseNotationObject(lineTypeStyle);
a568 1
				if (result == null) result = caseNotationObject(arrowStyle);
a572 6
			case NotationPackage.NOTATION_OBJECT: {
				NotationObject notationObject = (NotationObject)theEObject;
				Object result = caseNotationObject(notationObject);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
a1462 15
	 * Returns the result of interpreting the object as an instance of '<em>Object</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpreting the object as an instance of '<em>Object</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
	public Object caseNotationObject(NotationObject object) {
		return null;
	}

				/**
@


1.13
log
@[225137] gmf-head ahunter 080407 Line styles notation enhancement
@
text
@d138 1
d147 1
d160 1
d168 1
d176 1
d184 1
d192 1
d200 1
d214 1
d222 1
d232 1
d240 1
d260 1
d268 1
d277 1
d284 1
d294 1
d301 1
d308 1
d320 1
d330 1
d338 1
d346 1
d354 1
d362 1
d369 1
d376 1
d387 1
d395 1
d404 1
d413 1
d421 1
d429 1
d439 1
d450 1
d458 1
d466 1
d475 1
d484 1
d493 1
d502 1
d511 1
d520 1
d529 1
d538 1
d547 1
d556 1
d565 1
d574 1
d584 1
d591 1
d599 1
d607 1
d615 1
d623 1
d628 6
d1524 15
@


1.12
log
@[224473] gmf-head ahunter 080327 Text alignment enhancement
@
text
@d559 14
d1433 30
@


1.11
log
@[210806] gmf-head ahunter 071123 Regenerate GMF Notational Metamodel with EMF 2.4
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2007 IBM Corporation and others.
d552 7
d1404 15
@


1.10
log
@gmf_head ahunter 070617 Update Copyright for files changed in 2007 for GMF 2.0
@
text
@d557 1
a557 1
	 * Returns the result of interpretting the object as an instance of '<em>Edge</em>'.
d563 1
a563 1
	 * @@return the result of interpretting the object as an instance of '<em>Edge</em>'.
d572 1
a572 1
	 * Returns the result of interpretting the object as an instance of '<em>Node</em>'.
d578 1
a578 1
	 * @@return the result of interpretting the object as an instance of '<em>Node</em>'.
d587 1
a587 1
	 * Returns the result of interpretting the object as an instance of '<em>Style</em>'.
d593 1
a593 1
	 * @@return the result of interpretting the object as an instance of '<em>Style</em>'.
d602 1
a602 1
	 * Returns the result of interpretting the object as an instance of '<em>Fill Style</em>'.
d608 1
a608 1
	 * @@return the result of interpretting the object as an instance of '<em>Fill Style</em>'.
d617 1
a617 1
	 * Returns the result of interpretting the object as an instance of '<em>Line Style</em>'.
d623 1
a623 1
	 * @@return the result of interpretting the object as an instance of '<em>Line Style</em>'.
d632 1
a632 1
	 * Returns the result of interpretting the object as an instance of '<em>Font Style</em>'.
d638 1
a638 1
	 * @@return the result of interpretting the object as an instance of '<em>Font Style</em>'.
d647 1
a647 1
	 * Returns the result of interpretting the object as an instance of '<em>Title Style</em>'.
d653 1
a653 1
	 * @@return the result of interpretting the object as an instance of '<em>Title Style</em>'.
d662 1
a662 1
	 * Returns the result of interpretting the object as an instance of '<em>Sorting Style</em>'.
d668 1
a668 1
	 * @@return the result of interpretting the object as an instance of '<em>Sorting Style</em>'.
d677 1
a677 1
	 * Returns the result of interpretting the object as an instance of '<em>Description Style</em>'.
d683 1
a683 1
	 * @@return the result of interpretting the object as an instance of '<em>Description Style</em>'.
d692 1
a692 1
	 * Returns the result of interpretting the object as an instance of '<em>Layout Constraint</em>'.
d698 1
a698 1
	 * @@return the result of interpretting the object as an instance of '<em>Layout Constraint</em>'.
d707 1
a707 1
	 * Returns the result of interpretting the object as an instance of '<em>Size</em>'.
d713 1
a713 1
	 * @@return the result of interpretting the object as an instance of '<em>Size</em>'.
d722 1
a722 1
	 * Returns the result of interpretting the object as an instance of '<em>Location</em>'.
d728 1
a728 1
	 * @@return the result of interpretting the object as an instance of '<em>Location</em>'.
d737 1
a737 1
	 * Returns the result of interpretting the object as an instance of '<em>Bounds</em>'.
d743 1
a743 1
	 * @@return the result of interpretting the object as an instance of '<em>Bounds</em>'.
d752 1
a752 1
	 * Returns the result of interpretting the object as an instance of '<em>Ratio</em>'.
d758 1
a758 1
	 * @@return the result of interpretting the object as an instance of '<em>Ratio</em>'.
d767 1
a767 1
	 * Returns the result of interpretting the object as an instance of '<em>Anchor</em>'.
d773 1
a773 1
	 * @@return the result of interpretting the object as an instance of '<em>Anchor</em>'.
d782 1
a782 1
	 * Returns the result of interpretting the object as an instance of '<em>Bendpoints</em>'.
d788 1
a788 1
	 * @@return the result of interpretting the object as an instance of '<em>Bendpoints</em>'.
d797 1
a797 1
	 * Returns the result of interpretting the object as an instance of '<em>Identity Anchor</em>'.
d803 1
a803 1
	 * @@return the result of interpretting the object as an instance of '<em>Identity Anchor</em>'.
d812 1
a812 1
	 * Returns the result of interpretting the object as an instance of '<em>Routing Style</em>'.
d818 1
a818 1
	 * @@return the result of interpretting the object as an instance of '<em>Routing Style</em>'.
d827 1
a827 1
	 * Returns the result of interpretting the object as an instance of '<em>View</em>'.
d833 1
a833 1
	 * @@return the result of interpretting the object as an instance of '<em>View</em>'.
d842 1
a842 1
	 * Returns the result of interpretting the object as an instance of '<em>Relative Bendpoints</em>'.
d848 1
a848 1
	 * @@return the result of interpretting the object as an instance of '<em>Relative Bendpoints</em>'.
d857 1
a857 1
	 * Returns the result of interpretting the object as an instance of '<em>Canonical Style</em>'.
d863 1
a863 1
	 * @@return the result of interpretting the object as an instance of '<em>Canonical Style</em>'.
d872 1
a872 1
	 * Returns the result of interpretting the object as an instance of '<em>Shape Style</em>'.
d878 1
a878 1
	 * @@return the result of interpretting the object as an instance of '<em>Shape Style</em>'.
d887 1
a887 1
	 * Returns the result of interpretting the object as an instance of '<em>Connector Style</em>'.
d893 1
a893 1
	 * @@return the result of interpretting the object as an instance of '<em>Connector Style</em>'.
d902 1
a902 1
	 * Returns the result of interpretting the object as an instance of '<em>Diagram</em>'.
d908 1
a908 1
	 * @@return the result of interpretting the object as an instance of '<em>Diagram</em>'.
d917 1
a917 1
	 * Returns the result of interpretting the object as an instance of '<em>Image</em>'.
d923 1
a923 1
	 * @@return the result of interpretting the object as an instance of '<em>Image</em>'.
d932 1
a932 1
	 * Returns the result of interpretting the object as an instance of '<em>Page Style</em>'.
d938 1
a938 1
	 * @@return the result of interpretting the object as an instance of '<em>Page Style</em>'.
d947 1
a947 1
	 * Returns the result of interpretting the object as an instance of '<em>Drawer Style</em>'.
d953 1
a953 1
	 * @@return the result of interpretting the object as an instance of '<em>Drawer Style</em>'.
d962 1
a962 1
	 * Returns the result of interpretting the object as an instance of '<em>Guide Style</em>'.
d968 1
a968 1
	 * @@return the result of interpretting the object as an instance of '<em>Guide Style</em>'.
d977 1
a977 1
	 * Returns the result of interpretting the object as an instance of '<em>Guide</em>'.
d983 1
a983 1
	 * @@return the result of interpretting the object as an instance of '<em>Guide</em>'.
d992 1
a992 1
	 * Returns the result of interpretting the object as an instance of '<em>Node Entry</em>'.
d998 1
a998 1
	 * @@return the result of interpretting the object as an instance of '<em>Node Entry</em>'.
d1007 1
a1007 1
	 * Returns the result of interpretting the object as an instance of '<em>Filtering Style</em>'.
d1013 1
a1013 1
	 * @@return the result of interpretting the object as an instance of '<em>Filtering Style</em>'.
d1022 1
a1022 1
	 * Returns the result of interpretting the object as an instance of '<em>Diagram Style</em>'.
d1028 1
a1028 1
	 * @@return the result of interpretting the object as an instance of '<em>Diagram Style</em>'.
d1037 1
a1037 1
	 * Returns the result of interpretting the object as an instance of '<em>Image Style</em>'.
d1043 1
a1043 1
	 * @@return the result of interpretting the object as an instance of '<em>Image Style</em>'.
d1052 1
a1052 1
	 * Returns the result of interpretting the object as an instance of '<em>Image Buffer Style</em>'.
d1058 1
a1058 1
	 * @@return the result of interpretting the object as an instance of '<em>Image Buffer Style</em>'.
d1067 1
a1067 1
	 * Returns the result of interpretting the object as an instance of '<em>Properties Set Style</em>'.
d1073 1
a1073 1
	 * @@return the result of interpretting the object as an instance of '<em>Properties Set Style</em>'.
d1082 1
a1082 1
	 * Returns the result of interpretting the object as an instance of '<em>String To Property Value Map Entry</em>'.
d1088 1
a1088 1
	 * @@return the result of interpretting the object as an instance of '<em>String To Property Value Map Entry</em>'.
d1097 1
a1097 1
	 * Returns the result of interpretting the object as an instance of '<em>Property Value</em>'.
d1103 1
a1103 1
	 * @@return the result of interpretting the object as an instance of '<em>Property Value</em>'.
d1112 1
a1112 1
	 * Returns the result of interpretting the object as an instance of '<em>Single Value Style</em>'.
d1118 1
a1118 1
	 * @@return the result of interpretting the object as an instance of '<em>Single Value Style</em>'.
d1127 1
a1127 1
	 * Returns the result of interpretting the object as an instance of '<em>List Value Style</em>'.
d1133 1
a1133 1
	 * @@return the result of interpretting the object as an instance of '<em>List Value Style</em>'.
d1142 1
a1142 1
	 * Returns the result of interpretting the object as an instance of '<em>Named Style</em>'.
d1148 1
a1148 1
	 * @@return the result of interpretting the object as an instance of '<em>Named Style</em>'.
d1157 1
a1157 1
	 * Returns the result of interpretting the object as an instance of '<em>String Object Converter</em>'.
d1163 1
a1163 1
	 * @@return the result of interpretting the object as an instance of '<em>String Object Converter</em>'.
d1172 1
a1172 1
	 * Returns the result of interpretting the object as an instance of '<em>Data Type Style</em>'.
d1178 1
a1178 1
	 * @@return the result of interpretting the object as an instance of '<em>Data Type Style</em>'.
d1187 1
a1187 1
	 * Returns the result of interpretting the object as an instance of '<em>Int Value Style</em>'.
d1193 1
a1193 1
	 * @@return the result of interpretting the object as an instance of '<em>Int Value Style</em>'.
d1202 1
a1202 1
	 * Returns the result of interpretting the object as an instance of '<em>Int List Value Style</em>'.
d1208 1
a1208 1
	 * @@return the result of interpretting the object as an instance of '<em>Int List Value Style</em>'.
d1217 1
a1217 1
	 * Returns the result of interpretting the object as an instance of '<em>Boolean Value Style</em>'.
d1223 1
a1223 1
	 * @@return the result of interpretting the object as an instance of '<em>Boolean Value Style</em>'.
d1232 1
a1232 1
	 * Returns the result of interpretting the object as an instance of '<em>Double Value Style</em>'.
d1238 1
a1238 1
	 * @@return the result of interpretting the object as an instance of '<em>Double Value Style</em>'.
d1247 1
a1247 1
	 * Returns the result of interpretting the object as an instance of '<em>Double List Value Style</em>'.
d1253 1
a1253 1
	 * @@return the result of interpretting the object as an instance of '<em>Double List Value Style</em>'.
d1262 1
a1262 1
	 * Returns the result of interpretting the object as an instance of '<em>String Value Style</em>'.
d1268 1
a1268 1
	 * @@return the result of interpretting the object as an instance of '<em>String Value Style</em>'.
d1277 1
a1277 1
	 * Returns the result of interpretting the object as an instance of '<em>String List Value Style</em>'.
d1283 1
a1283 1
	 * @@return the result of interpretting the object as an instance of '<em>String List Value Style</em>'.
d1292 1
a1292 1
	 * Returns the result of interpretting the object as an instance of '<em>EObject Value Style</em>'.
d1298 1
a1298 1
	 * @@return the result of interpretting the object as an instance of '<em>EObject Value Style</em>'.
d1307 1
a1307 1
	 * Returns the result of interpretting the object as an instance of '<em>EObject List Value Style</em>'.
d1313 1
a1313 1
	 * @@return the result of interpretting the object as an instance of '<em>EObject List Value Style</em>'.
d1322 1
a1322 1
	 * Returns the result of interpretting the object as an instance of '<em>Byte Array Value Style</em>'.
d1328 1
a1328 1
	 * @@return the result of interpretting the object as an instance of '<em>Byte Array Value Style</em>'.
d1337 1
a1337 1
	 * Returns the result of interpretting the object as an instance of '<em>Boolean List Value Style</em>'.
d1343 1
a1343 1
	 * @@return the result of interpretting the object as an instance of '<em>Boolean List Value Style</em>'.
d1352 1
a1352 1
	 * Returns the result of interpretting the object as an instance of '<em>Hinted Diagram Link Style</em>'.
d1358 1
a1358 1
	 * @@return the result of interpretting the object as an instance of '<em>Hinted Diagram Link Style</em>'.
d1367 1
a1367 1
	 * Returns the result of interpretting the object as an instance of '<em>Diagram Link Style</em>'.
d1373 1
a1373 1
	 * @@return the result of interpretting the object as an instance of '<em>Diagram Link Style</em>'.
d1382 1
a1382 1
	 * Returns the result of interpretting the object as an instance of '<em>Multi Diagram Link Style</em>'.
d1388 1
a1388 1
	 * @@return the result of interpretting the object as an instance of '<em>Multi Diagram Link Style</em>'.
d1397 1
a1397 1
	 * Returns the result of interpretting the object as an instance of '<em>EModel Element</em>'.
d1403 1
a1403 1
	 * @@return the result of interpretting the object as an instance of '<em>EModel Element</em>'.
d1412 1
a1412 1
	 * Returns the result of interpretting the object as an instance of '<em>EObject</em>'.
d1418 1
a1418 1
	 * @@return the result of interpretting the object as an instance of '<em>EObject</em>'.
@


1.9
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.8
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d20 1
d74 2
a75 2
     * The cached model package
     * <!-- begin-user-doc -->
d77 2
a78 2
     * @@generated
     */
d82 2
a83 2
     * Creates an instance of the switch.
     * <!-- begin-user-doc -->
d85 2
a86 2
     * @@generated
     */
d88 4
a91 4
        if (modelPackage == null) {
            modelPackage = NotationPackage.eINSTANCE;
        }
    }
d94 6
a99 6
     * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @@return the first non-null result returned by a <code>caseXXX</code> call.
     * @@generated
     */
d101 2
a102 2
        return doSwitch(theEObject.eClass(), theEObject);
    }
d105 2
a106 2
     * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
     * <!-- begin-user-doc -->
d108 3
a110 3
     * @@return the first non-null result returned by a <code>caseXXX</code> call.
     * @@generated
     */
d112 19
a130 19
        if (theEClass.eContainer() == modelPackage) {
            return doSwitch(theEClass.getClassifierID(), theEObject);
        }
        else {
            List eSuperTypes = theEClass.getESuperTypes();
            return
                eSuperTypes.isEmpty() ?
                    defaultCase(theEObject) :
                    doSwitch((EClass)eSuperTypes.get(0), theEObject);
        }
    }

    /**
     * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @@return the first non-null result returned by a <code>caseXXX</code> call.
     * @@generated
     */
d132 435
a566 262
        switch (classifierID) {
            case NotationPackage.EDGE: {
                Edge edge = (Edge)theEObject;
                Object result = caseEdge(edge);
                if (result == null) result = caseView(edge);
                if (result == null) result = caseEModelElement(edge);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.NODE: {
                Node node = (Node)theEObject;
                Object result = caseNode(node);
                if (result == null) result = caseView(node);
                if (result == null) result = caseEModelElement(node);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.STYLE: {
                Style style = (Style)theEObject;
                Object result = caseStyle(style);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.FILL_STYLE: {
                FillStyle fillStyle = (FillStyle)theEObject;
                Object result = caseFillStyle(fillStyle);
                if (result == null) result = caseStyle(fillStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.LINE_STYLE: {
                LineStyle lineStyle = (LineStyle)theEObject;
                Object result = caseLineStyle(lineStyle);
                if (result == null) result = caseStyle(lineStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.FONT_STYLE: {
                FontStyle fontStyle = (FontStyle)theEObject;
                Object result = caseFontStyle(fontStyle);
                if (result == null) result = caseStyle(fontStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.TITLE_STYLE: {
                TitleStyle titleStyle = (TitleStyle)theEObject;
                Object result = caseTitleStyle(titleStyle);
                if (result == null) result = caseStyle(titleStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.SORTING_STYLE: {
                SortingStyle sortingStyle = (SortingStyle)theEObject;
                Object result = caseSortingStyle(sortingStyle);
                if (result == null) result = caseStyle(sortingStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.DESCRIPTION_STYLE: {
                DescriptionStyle descriptionStyle = (DescriptionStyle)theEObject;
                Object result = caseDescriptionStyle(descriptionStyle);
                if (result == null) result = caseStyle(descriptionStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.LAYOUT_CONSTRAINT: {
                LayoutConstraint layoutConstraint = (LayoutConstraint)theEObject;
                Object result = caseLayoutConstraint(layoutConstraint);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.SIZE: {
                Size size = (Size)theEObject;
                Object result = caseSize(size);
                if (result == null) result = caseLayoutConstraint(size);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.LOCATION: {
                Location location = (Location)theEObject;
                Object result = caseLocation(location);
                if (result == null) result = caseLayoutConstraint(location);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.BOUNDS: {
                Bounds bounds = (Bounds)theEObject;
                Object result = caseBounds(bounds);
                if (result == null) result = caseLocation(bounds);
                if (result == null) result = caseSize(bounds);
                if (result == null) result = caseLayoutConstraint(bounds);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.RATIO: {
                Ratio ratio = (Ratio)theEObject;
                Object result = caseRatio(ratio);
                if (result == null) result = caseLayoutConstraint(ratio);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.ANCHOR: {
                Anchor anchor = (Anchor)theEObject;
                Object result = caseAnchor(anchor);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.BENDPOINTS: {
                Bendpoints bendpoints = (Bendpoints)theEObject;
                Object result = caseBendpoints(bendpoints);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.IDENTITY_ANCHOR: {
                IdentityAnchor identityAnchor = (IdentityAnchor)theEObject;
                Object result = caseIdentityAnchor(identityAnchor);
                if (result == null) result = caseAnchor(identityAnchor);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.ROUTING_STYLE: {
                RoutingStyle routingStyle = (RoutingStyle)theEObject;
                Object result = caseRoutingStyle(routingStyle);
                if (result == null) result = caseStyle(routingStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.VIEW: {
                View view = (View)theEObject;
                Object result = caseView(view);
                if (result == null) result = caseEModelElement(view);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.RELATIVE_BENDPOINTS: {
                RelativeBendpoints relativeBendpoints = (RelativeBendpoints)theEObject;
                Object result = caseRelativeBendpoints(relativeBendpoints);
                if (result == null) result = caseBendpoints(relativeBendpoints);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.DIAGRAM: {
                Diagram diagram = (Diagram)theEObject;
                Object result = caseDiagram(diagram);
                if (result == null) result = caseView(diagram);
                if (result == null) result = caseEModelElement(diagram);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.IMAGE: {
                Image image = (Image)theEObject;
                Object result = caseImage(image);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.CANONICAL_STYLE: {
                CanonicalStyle canonicalStyle = (CanonicalStyle)theEObject;
                Object result = caseCanonicalStyle(canonicalStyle);
                if (result == null) result = caseStyle(canonicalStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.SHAPE_STYLE: {
                ShapeStyle shapeStyle = (ShapeStyle)theEObject;
                Object result = caseShapeStyle(shapeStyle);
                if (result == null) result = caseFontStyle(shapeStyle);
                if (result == null) result = caseDescriptionStyle(shapeStyle);
                if (result == null) result = caseFillStyle(shapeStyle);
                if (result == null) result = caseLineStyle(shapeStyle);
                if (result == null) result = caseStyle(shapeStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.CONNECTOR_STYLE: {
                ConnectorStyle connectorStyle = (ConnectorStyle)theEObject;
                Object result = caseConnectorStyle(connectorStyle);
                if (result == null) result = caseRoutingStyle(connectorStyle);
                if (result == null) result = caseLineStyle(connectorStyle);
                if (result == null) result = caseStyle(connectorStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.PAGE_STYLE: {
                PageStyle pageStyle = (PageStyle)theEObject;
                Object result = casePageStyle(pageStyle);
                if (result == null) result = caseStyle(pageStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.DRAWER_STYLE: {
                DrawerStyle drawerStyle = (DrawerStyle)theEObject;
                Object result = caseDrawerStyle(drawerStyle);
                if (result == null) result = caseStyle(drawerStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.GUIDE_STYLE: {
                GuideStyle guideStyle = (GuideStyle)theEObject;
                Object result = caseGuideStyle(guideStyle);
                if (result == null) result = caseStyle(guideStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.GUIDE: {
                Guide guide = (Guide)theEObject;
                Object result = caseGuide(guide);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.NODE_ENTRY: {
                Map.Entry nodeEntry = (Map.Entry)theEObject;
                Object result = caseNodeEntry(nodeEntry);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.FILTERING_STYLE: {
                FilteringStyle filteringStyle = (FilteringStyle)theEObject;
                Object result = caseFilteringStyle(filteringStyle);
                if (result == null) result = caseStyle(filteringStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.DIAGRAM_STYLE: {
                DiagramStyle diagramStyle = (DiagramStyle)theEObject;
                Object result = caseDiagramStyle(diagramStyle);
                if (result == null) result = casePageStyle(diagramStyle);
                if (result == null) result = caseGuideStyle(diagramStyle);
                if (result == null) result = caseDescriptionStyle(diagramStyle);
                if (result == null) result = caseStyle(diagramStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.IMAGE_STYLE: {
                ImageStyle imageStyle = (ImageStyle)theEObject;
                Object result = caseImageStyle(imageStyle);
                if (result == null) result = caseStyle(imageStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case NotationPackage.IMAGE_BUFFER_STYLE: {
                ImageBufferStyle imageBufferStyle = (ImageBufferStyle)theEObject;
                Object result = caseImageBufferStyle(imageBufferStyle);
                if (result == null) result = caseImageStyle(imageBufferStyle);
                if (result == null) result = caseStyle(imageBufferStyle);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            default: return defaultCase(theEObject);
        }
    }

    /**
     * Returns the result of interpretting the object as an instance of '<em>Edge</em>'.
     * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Edge</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d568 2
a569 2
        return null;
    }
d572 2
a573 2
     * Returns the result of interpretting the object as an instance of '<em>Node</em>'.
     * <!-- begin-user-doc -->
d577 5
a581 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Node</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d583 2
a584 2
        return null;
    }
d587 2
a588 2
     * Returns the result of interpretting the object as an instance of '<em>Style</em>'.
     * <!-- begin-user-doc -->
d592 5
a596 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d598 2
a599 2
        return null;
    }
d602 2
a603 2
     * Returns the result of interpretting the object as an instance of '<em>Fill Style</em>'.
     * <!-- begin-user-doc -->
d607 5
a611 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Fill Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d613 2
a614 2
        return null;
    }
d617 2
a618 2
     * Returns the result of interpretting the object as an instance of '<em>Line Style</em>'.
     * <!-- begin-user-doc -->
d622 5
a626 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Line Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d628 2
a629 2
        return null;
    }
d632 2
a633 2
     * Returns the result of interpretting the object as an instance of '<em>Font Style</em>'.
     * <!-- begin-user-doc -->
d637 5
a641 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Font Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d643 2
a644 2
        return null;
    }
d647 2
a648 2
     * Returns the result of interpretting the object as an instance of '<em>Title Style</em>'.
     * <!-- begin-user-doc -->
d652 5
a656 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Title Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d658 2
a659 2
        return null;
    }
d662 2
a663 2
     * Returns the result of interpretting the object as an instance of '<em>Sorting Style</em>'.
     * <!-- begin-user-doc -->
d667 5
a671 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Sorting Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d673 2
a674 2
        return null;
    }
d677 2
a678 2
     * Returns the result of interpretting the object as an instance of '<em>Description Style</em>'.
     * <!-- begin-user-doc -->
d682 5
a686 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Description Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d688 2
a689 2
        return null;
    }
d692 2
a693 2
     * Returns the result of interpretting the object as an instance of '<em>Layout Constraint</em>'.
     * <!-- begin-user-doc -->
d697 5
a701 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Layout Constraint</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d703 2
a704 2
        return null;
    }
d707 2
a708 2
     * Returns the result of interpretting the object as an instance of '<em>Size</em>'.
     * <!-- begin-user-doc -->
d712 5
a716 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Size</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d718 2
a719 2
        return null;
    }
d722 2
a723 2
     * Returns the result of interpretting the object as an instance of '<em>Location</em>'.
     * <!-- begin-user-doc -->
d727 5
a731 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Location</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d733 2
a734 2
        return null;
    }
d737 2
a738 2
     * Returns the result of interpretting the object as an instance of '<em>Bounds</em>'.
     * <!-- begin-user-doc -->
d742 5
a746 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Bounds</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d748 2
a749 2
        return null;
    }
d752 2
a753 2
     * Returns the result of interpretting the object as an instance of '<em>Ratio</em>'.
     * <!-- begin-user-doc -->
d757 5
a761 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Ratio</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d763 2
a764 2
        return null;
    }
d767 2
a768 2
     * Returns the result of interpretting the object as an instance of '<em>Anchor</em>'.
     * <!-- begin-user-doc -->
d772 5
a776 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Anchor</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d778 2
a779 2
        return null;
    }
d782 2
a783 2
     * Returns the result of interpretting the object as an instance of '<em>Bendpoints</em>'.
     * <!-- begin-user-doc -->
d787 5
a791 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Bendpoints</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d793 2
a794 2
        return null;
    }
d797 2
a798 2
     * Returns the result of interpretting the object as an instance of '<em>Identity Anchor</em>'.
     * <!-- begin-user-doc -->
d802 5
a806 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Identity Anchor</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d808 2
a809 2
        return null;
    }
d812 2
a813 2
     * Returns the result of interpretting the object as an instance of '<em>Routing Style</em>'.
     * <!-- begin-user-doc -->
d817 5
a821 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Routing Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d823 2
a824 2
        return null;
    }
d827 2
a828 2
     * Returns the result of interpretting the object as an instance of '<em>View</em>'.
     * <!-- begin-user-doc -->
d832 5
a836 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>View</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d838 2
a839 2
        return null;
    }
d842 2
a843 2
     * Returns the result of interpretting the object as an instance of '<em>Relative Bendpoints</em>'.
     * <!-- begin-user-doc -->
d847 5
a851 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Relative Bendpoints</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d853 2
a854 2
        return null;
    }
d857 2
a858 2
     * Returns the result of interpretting the object as an instance of '<em>Canonical Style</em>'.
     * <!-- begin-user-doc -->
d862 5
a866 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Canonical Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d868 2
a869 2
        return null;
    }
d872 2
a873 2
     * Returns the result of interpretting the object as an instance of '<em>Shape Style</em>'.
     * <!-- begin-user-doc -->
d877 5
a881 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Shape Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d883 2
a884 2
        return null;
    }
d887 2
a888 2
     * Returns the result of interpretting the object as an instance of '<em>Connector Style</em>'.
     * <!-- begin-user-doc -->
d892 5
a896 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Connector Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d898 2
a899 2
        return null;
    }
d902 2
a903 2
     * Returns the result of interpretting the object as an instance of '<em>Diagram</em>'.
     * <!-- begin-user-doc -->
d907 5
a911 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Diagram</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d913 2
a914 2
        return null;
    }
d917 2
a918 2
     * Returns the result of interpretting the object as an instance of '<em>Image</em>'.
     * <!-- begin-user-doc -->
d922 5
a926 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Image</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d928 2
a929 2
        return null;
    }
d932 2
a933 2
     * Returns the result of interpretting the object as an instance of '<em>Page Style</em>'.
     * <!-- begin-user-doc -->
d937 5
a941 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Page Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d943 2
a944 2
        return null;
    }
d947 2
a948 2
     * Returns the result of interpretting the object as an instance of '<em>Drawer Style</em>'.
     * <!-- begin-user-doc -->
d952 5
a956 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Drawer Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d958 2
a959 2
        return null;
    }
d962 2
a963 2
     * Returns the result of interpretting the object as an instance of '<em>Guide Style</em>'.
     * <!-- begin-user-doc -->
d967 5
a971 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Guide Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d973 2
a974 2
        return null;
    }
d977 2
a978 2
     * Returns the result of interpretting the object as an instance of '<em>Guide</em>'.
     * <!-- begin-user-doc -->
d982 5
a986 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Guide</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d988 2
a989 2
        return null;
    }
d992 2
a993 2
     * Returns the result of interpretting the object as an instance of '<em>Node Entry</em>'.
     * <!-- begin-user-doc -->
d997 5
a1001 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Node Entry</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d1003 2
a1004 2
        return null;
    }
d1006 3
a1008 3
    /**
     * Returns the result of interpretting the object as an instance of '<em>Filtering Style</em>'.
     * <!-- begin-user-doc -->
d1012 5
a1016 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Filtering Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d1018 2
a1019 2
        return null;
    }
d1022 2
a1023 2
     * Returns the result of interpretting the object as an instance of '<em>Diagram Style</em>'.
     * <!-- begin-user-doc -->
d1027 5
a1031 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Diagram Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d1033 2
a1034 2
        return null;
    }
d1037 2
a1038 2
     * Returns the result of interpretting the object as an instance of '<em>Image Style</em>'.
     * <!-- begin-user-doc -->
d1042 5
a1046 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Image Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d1048 2
a1049 2
        return null;
    }
d1052 2
a1053 2
     * Returns the result of interpretting the object as an instance of '<em>Image Buffer Style</em>'.
     * <!-- begin-user-doc -->
d1057 5
a1061 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>Image Buffer Style</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d1063 2
a1064 2
        return null;
    }
d1067 332
a1398 2
     * Returns the result of interpretting the object as an instance of '<em>EModel Element</em>'.
     * <!-- begin-user-doc -->
d1402 5
a1406 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>EModel Element</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
     * @@generated
     */
d1408 2
a1409 2
        return null;
    }
d1412 2
a1413 2
     * Returns the result of interpretting the object as an instance of '<em>EObject</em>'.
     * <!-- begin-user-doc -->
d1417 5
a1421 5
     * @@param object the target of the switch.
     * @@return the result of interpretting the object as an instance of '<em>EObject</em>'.
     * @@see #doSwitch(org.eclipse.emf.ecore.EObject)
     * @@generated
     */
d1423 2
a1424 2
        return null;
    }
@


1.7
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.7.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.6
log
@bugzilla 116224 gmf-head sshaw 060119 Notation meta-model support for coordinate systems
@
text
@a19 3

import org.eclipse.gmf.runtime.notation.*;

d72 3
a74 3
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
d76 2
a77 2
	 * @@generated
	 */
d80 3
a82 3
	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
d84 2
a85 2
	 * @@generated
	 */
d87 12
a98 12
		if (modelPackage == null) {
			modelPackage = NotationPackage.eINSTANCE;
		}
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
d100 2
a101 2
		return doSwitch(theEObject.eClass(), theEObject);
	}
d103 7
a109 7
	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
d111 19
a129 19
		if (theEClass.eContainer() == modelPackage) {
			return doSwitch(theEClass.getClassifierID(), theEObject);
		}
		else {
			List eSuperTypes = theEClass.getESuperTypes();
			return
				eSuperTypes.isEmpty() ?
					defaultCase(theEObject) :
					doSwitch((EClass)eSuperTypes.get(0), theEObject);
		}
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the first non-null result returned by a <code>caseXXX</code> call.
	 * @@generated
	 */
d131 262
a392 262
		switch (classifierID) {
			case NotationPackage.EDGE: {
				Edge edge = (Edge)theEObject;
				Object result = caseEdge(edge);
				if (result == null) result = caseView(edge);
				if (result == null) result = caseEModelElement(edge);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.NODE: {
				Node node = (Node)theEObject;
				Object result = caseNode(node);
				if (result == null) result = caseView(node);
				if (result == null) result = caseEModelElement(node);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.STYLE: {
				Style style = (Style)theEObject;
				Object result = caseStyle(style);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.FILL_STYLE: {
				FillStyle fillStyle = (FillStyle)theEObject;
				Object result = caseFillStyle(fillStyle);
				if (result == null) result = caseStyle(fillStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LINE_STYLE: {
				LineStyle lineStyle = (LineStyle)theEObject;
				Object result = caseLineStyle(lineStyle);
				if (result == null) result = caseStyle(lineStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.FONT_STYLE: {
				FontStyle fontStyle = (FontStyle)theEObject;
				Object result = caseFontStyle(fontStyle);
				if (result == null) result = caseStyle(fontStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.TITLE_STYLE: {
				TitleStyle titleStyle = (TitleStyle)theEObject;
				Object result = caseTitleStyle(titleStyle);
				if (result == null) result = caseStyle(titleStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.SORTING_STYLE: {
				SortingStyle sortingStyle = (SortingStyle)theEObject;
				Object result = caseSortingStyle(sortingStyle);
				if (result == null) result = caseStyle(sortingStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DESCRIPTION_STYLE: {
				DescriptionStyle descriptionStyle = (DescriptionStyle)theEObject;
				Object result = caseDescriptionStyle(descriptionStyle);
				if (result == null) result = caseStyle(descriptionStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LAYOUT_CONSTRAINT: {
				LayoutConstraint layoutConstraint = (LayoutConstraint)theEObject;
				Object result = caseLayoutConstraint(layoutConstraint);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.SIZE: {
				Size size = (Size)theEObject;
				Object result = caseSize(size);
				if (result == null) result = caseLayoutConstraint(size);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.LOCATION: {
				Location location = (Location)theEObject;
				Object result = caseLocation(location);
				if (result == null) result = caseLayoutConstraint(location);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.BOUNDS: {
				Bounds bounds = (Bounds)theEObject;
				Object result = caseBounds(bounds);
				if (result == null) result = caseLocation(bounds);
				if (result == null) result = caseSize(bounds);
				if (result == null) result = caseLayoutConstraint(bounds);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.RATIO: {
				Ratio ratio = (Ratio)theEObject;
				Object result = caseRatio(ratio);
				if (result == null) result = caseLayoutConstraint(ratio);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.ANCHOR: {
				Anchor anchor = (Anchor)theEObject;
				Object result = caseAnchor(anchor);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.BENDPOINTS: {
				Bendpoints bendpoints = (Bendpoints)theEObject;
				Object result = caseBendpoints(bendpoints);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IDENTITY_ANCHOR: {
				IdentityAnchor identityAnchor = (IdentityAnchor)theEObject;
				Object result = caseIdentityAnchor(identityAnchor);
				if (result == null) result = caseAnchor(identityAnchor);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.ROUTING_STYLE: {
				RoutingStyle routingStyle = (RoutingStyle)theEObject;
				Object result = caseRoutingStyle(routingStyle);
				if (result == null) result = caseStyle(routingStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.VIEW: {
				View view = (View)theEObject;
				Object result = caseView(view);
				if (result == null) result = caseEModelElement(view);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.RELATIVE_BENDPOINTS: {
				RelativeBendpoints relativeBendpoints = (RelativeBendpoints)theEObject;
				Object result = caseRelativeBendpoints(relativeBendpoints);
				if (result == null) result = caseBendpoints(relativeBendpoints);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DIAGRAM: {
				Diagram diagram = (Diagram)theEObject;
				Object result = caseDiagram(diagram);
				if (result == null) result = caseView(diagram);
				if (result == null) result = caseEModelElement(diagram);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IMAGE: {
				Image image = (Image)theEObject;
				Object result = caseImage(image);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.CANONICAL_STYLE: {
				CanonicalStyle canonicalStyle = (CanonicalStyle)theEObject;
				Object result = caseCanonicalStyle(canonicalStyle);
				if (result == null) result = caseStyle(canonicalStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.SHAPE_STYLE: {
				ShapeStyle shapeStyle = (ShapeStyle)theEObject;
				Object result = caseShapeStyle(shapeStyle);
				if (result == null) result = caseFontStyle(shapeStyle);
				if (result == null) result = caseDescriptionStyle(shapeStyle);
				if (result == null) result = caseFillStyle(shapeStyle);
				if (result == null) result = caseLineStyle(shapeStyle);
				if (result == null) result = caseStyle(shapeStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.CONNECTOR_STYLE: {
				ConnectorStyle connectorStyle = (ConnectorStyle)theEObject;
				Object result = caseConnectorStyle(connectorStyle);
				if (result == null) result = caseRoutingStyle(connectorStyle);
				if (result == null) result = caseLineStyle(connectorStyle);
				if (result == null) result = caseStyle(connectorStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.PAGE_STYLE: {
				PageStyle pageStyle = (PageStyle)theEObject;
				Object result = casePageStyle(pageStyle);
				if (result == null) result = caseStyle(pageStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DRAWER_STYLE: {
				DrawerStyle drawerStyle = (DrawerStyle)theEObject;
				Object result = caseDrawerStyle(drawerStyle);
				if (result == null) result = caseStyle(drawerStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.GUIDE_STYLE: {
				GuideStyle guideStyle = (GuideStyle)theEObject;
				Object result = caseGuideStyle(guideStyle);
				if (result == null) result = caseStyle(guideStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.GUIDE: {
				Guide guide = (Guide)theEObject;
				Object result = caseGuide(guide);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.NODE_ENTRY: {
				Map.Entry nodeEntry = (Map.Entry)theEObject;
				Object result = caseNodeEntry(nodeEntry);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.FILTERING_STYLE: {
				FilteringStyle filteringStyle = (FilteringStyle)theEObject;
				Object result = caseFilteringStyle(filteringStyle);
				if (result == null) result = caseStyle(filteringStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.DIAGRAM_STYLE: {
				DiagramStyle diagramStyle = (DiagramStyle)theEObject;
				Object result = caseDiagramStyle(diagramStyle);
				if (result == null) result = casePageStyle(diagramStyle);
				if (result == null) result = caseGuideStyle(diagramStyle);
				if (result == null) result = caseDescriptionStyle(diagramStyle);
				if (result == null) result = caseStyle(diagramStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IMAGE_STYLE: {
				ImageStyle imageStyle = (ImageStyle)theEObject;
				Object result = caseImageStyle(imageStyle);
				if (result == null) result = caseStyle(imageStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case NotationPackage.IMAGE_BUFFER_STYLE: {
				ImageBufferStyle imageBufferStyle = (ImageBufferStyle)theEObject;
				Object result = caseImageBufferStyle(imageBufferStyle);
				if (result == null) result = caseImageStyle(imageBufferStyle);
				if (result == null) result = caseStyle(imageBufferStyle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			default: return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpretting the object as an instance of '<em>Edge</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Edge</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d394 2
a395 2
		return null;
	}
d397 3
a399 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Node</em>'.
	 * <!-- begin-user-doc -->
d403 5
a407 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Node</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d409 2
a410 2
		return null;
	}
d412 3
a414 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Style</em>'.
	 * <!-- begin-user-doc -->
d418 5
a422 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d424 2
a425 2
		return null;
	}
d427 3
a429 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Fill Style</em>'.
	 * <!-- begin-user-doc -->
d433 5
a437 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Fill Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d439 2
a440 2
		return null;
	}
d442 3
a444 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Line Style</em>'.
	 * <!-- begin-user-doc -->
d448 5
a452 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Line Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d454 2
a455 2
		return null;
	}
d457 3
a459 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Font Style</em>'.
	 * <!-- begin-user-doc -->
d463 5
a467 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Font Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d469 2
a470 2
		return null;
	}
d472 3
a474 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Title Style</em>'.
	 * <!-- begin-user-doc -->
d478 5
a482 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Title Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d484 2
a485 2
		return null;
	}
d487 3
a489 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Sorting Style</em>'.
	 * <!-- begin-user-doc -->
d493 5
a497 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Sorting Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d499 2
a500 2
		return null;
	}
d502 3
a504 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Description Style</em>'.
	 * <!-- begin-user-doc -->
d508 5
a512 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Description Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d514 2
a515 2
		return null;
	}
d517 3
a519 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Layout Constraint</em>'.
	 * <!-- begin-user-doc -->
d523 5
a527 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Layout Constraint</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d529 2
a530 2
		return null;
	}
d532 3
a534 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Size</em>'.
	 * <!-- begin-user-doc -->
d538 5
a542 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Size</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d544 2
a545 2
		return null;
	}
d547 3
a549 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Location</em>'.
	 * <!-- begin-user-doc -->
d553 5
a557 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Location</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d559 2
a560 2
		return null;
	}
d562 3
a564 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Bounds</em>'.
	 * <!-- begin-user-doc -->
d568 5
a572 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Bounds</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d574 2
a575 2
		return null;
	}
d577 3
a579 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Ratio</em>'.
	 * <!-- begin-user-doc -->
d583 5
a587 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Ratio</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d589 2
a590 2
		return null;
	}
d592 3
a594 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Anchor</em>'.
	 * <!-- begin-user-doc -->
d598 5
a602 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Anchor</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d604 2
a605 2
		return null;
	}
d607 3
a609 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Bendpoints</em>'.
	 * <!-- begin-user-doc -->
d613 5
a617 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Bendpoints</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d619 2
a620 2
		return null;
	}
d622 3
a624 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Identity Anchor</em>'.
	 * <!-- begin-user-doc -->
d628 5
a632 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Identity Anchor</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d634 2
a635 2
		return null;
	}
d637 3
a639 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Routing Style</em>'.
	 * <!-- begin-user-doc -->
d643 5
a647 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Routing Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d649 2
a650 2
		return null;
	}
d652 3
a654 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>View</em>'.
	 * <!-- begin-user-doc -->
d658 5
a662 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>View</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d664 2
a665 2
		return null;
	}
d667 3
a669 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Relative Bendpoints</em>'.
	 * <!-- begin-user-doc -->
d673 5
a677 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Relative Bendpoints</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d679 2
a680 2
		return null;
	}
d682 3
a684 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Canonical Style</em>'.
	 * <!-- begin-user-doc -->
d688 5
a692 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Canonical Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d694 2
a695 2
		return null;
	}
d697 3
a699 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Shape Style</em>'.
	 * <!-- begin-user-doc -->
d703 5
a707 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Shape Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d709 2
a710 2
		return null;
	}
d712 3
a714 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Connector Style</em>'.
	 * <!-- begin-user-doc -->
d718 5
a722 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Connector Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d724 2
a725 2
		return null;
	}
d727 3
a729 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Diagram</em>'.
	 * <!-- begin-user-doc -->
d733 5
a737 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Diagram</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d739 2
a740 2
		return null;
	}
d742 3
a744 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Image</em>'.
	 * <!-- begin-user-doc -->
d748 5
a752 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Image</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d754 2
a755 2
		return null;
	}
d757 3
a759 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Page Style</em>'.
	 * <!-- begin-user-doc -->
d763 5
a767 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Page Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d769 2
a770 2
		return null;
	}
d772 3
a774 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Drawer Style</em>'.
	 * <!-- begin-user-doc -->
d778 5
a782 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Drawer Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d784 2
a785 2
		return null;
	}
d787 3
a789 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Guide Style</em>'.
	 * <!-- begin-user-doc -->
d793 5
a797 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Guide Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d799 2
a800 2
		return null;
	}
d802 3
a804 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Guide</em>'.
	 * <!-- begin-user-doc -->
d808 5
a812 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Guide</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d814 2
a815 2
		return null;
	}
d817 3
a819 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Node Entry</em>'.
	 * <!-- begin-user-doc -->
d823 5
a827 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Node Entry</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d829 2
a830 2
		return null;
	}
d832 3
a834 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Filtering Style</em>'.
	 * <!-- begin-user-doc -->
d838 5
a842 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Filtering Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d844 2
a845 2
		return null;
	}
d847 3
a849 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Diagram Style</em>'.
	 * <!-- begin-user-doc -->
d853 5
a857 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Diagram Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d859 2
a860 2
		return null;
	}
d862 3
a864 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Image Style</em>'.
	 * <!-- begin-user-doc -->
d868 5
a872 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Image Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d874 2
a875 2
		return null;
	}
d877 3
a879 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>Image Buffer Style</em>'.
	 * <!-- begin-user-doc -->
d883 5
a887 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>Image Buffer Style</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d889 2
a890 2
		return null;
	}
d892 3
a894 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>EModel Element</em>'.
	 * <!-- begin-user-doc -->
d898 5
a902 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>EModel Element</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @@generated
	 */
d904 2
a905 2
		return null;
	}
d907 3
a909 3
	/**
	 * Returns the result of interpretting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
d913 5
a917 5
	 * @@param object the target of the switch.
	 * @@return the result of interpretting the object as an instance of '<em>EObject</em>'.
	 * @@see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @@generated
	 */
d919 2
a920 2
		return null;
	}
@


1.5
log
@bugzilla 110316 gmf-head sshaw 060117 Compiler warning count should be 0 - runtime diagram laye...
@
text
@d21 2
@


1.4
log
@Delivered: bugzilla 111770 gmf_head sshaw 060111 Odd Notation model URI
@
text
@a20 2
import org.eclipse.gmf.runtime.notation.*;

@


1.3
log
@Bugzilla 110317 gmf_head etworkow 051006 Compiler warning count should be 0 - runtime foundation layer components
@
text
@d21 2
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a20 2
import org.eclipse.gmf.runtime.notation.*;

@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

