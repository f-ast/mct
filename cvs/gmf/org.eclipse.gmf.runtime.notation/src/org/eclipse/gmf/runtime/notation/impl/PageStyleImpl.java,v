head	1.7;
access;
symbols
	v20081020-0700:1.7
	v20080722-1827:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080503-1740:1.6
	v20080425-1959:1.5
	v20080407-2250:1.5
	v20080407-1545:1.5
	v20080331-1625:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080114-2222:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	v20070403-1500:1.4
	v20070330-1300:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.3.2.2
	M1_20:1.3
	v20060728-0500:1.3.2.1
	v20060721-1130:1.3.2.1
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	I20060505-1400:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.00.14.41;	author ahunter;	state Exp;
branches;
next	1.6;
commitid	3e924820f4604567;

1.6
date	2008.05.03.18.33.02;	author ahunter;	state Exp;
branches;
next	1.5;
commitid	1c13481cafcc4567;

1.5
date	2007.05.17.16.26.49;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	71d9464c82444567;

1.4
date	2006.10.03.15.07.26;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.07.15.22.13;	author mmostafa;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.29.43;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.26;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.07.17.20.27.55;	author ahunter;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2006.09.13.16.48.16;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.PageStyle;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Page Style</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.PageStyleImpl#getPageX <em>Page X</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.PageStyleImpl#getPageY <em>Page Y</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.PageStyleImpl#getPageWidth <em>Page Width</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.PageStyleImpl#getPageHeight <em>Page Height</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
/*
 * @@canBeSeenBy org.eclipse.gmf.runtime.notation.*
 */
public class PageStyleImpl extends NotationEObjectImpl implements PageStyle {
    /**
	 * The default value of the '{@@link #getPageX() <em>Page X</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageX()
	 * @@generated
	 * @@ordered
	 */
	protected static final int PAGE_X_EDEFAULT = 0;

    /**
	 * The cached value of the '{@@link #getPageX() <em>Page X</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageX()
	 * @@generated
	 * @@ordered
	 */
	protected int pageX = PAGE_X_EDEFAULT;

    /**
	 * The default value of the '{@@link #getPageY() <em>Page Y</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageY()
	 * @@generated
	 * @@ordered
	 */
	protected static final int PAGE_Y_EDEFAULT = 0;

    /**
	 * The cached value of the '{@@link #getPageY() <em>Page Y</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageY()
	 * @@generated
	 * @@ordered
	 */
	protected int pageY = PAGE_Y_EDEFAULT;

    /**
	 * The default value of the '{@@link #getPageWidth() <em>Page Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageWidth()
	 * @@generated
	 * @@ordered
	 */
	protected static final int PAGE_WIDTH_EDEFAULT = 100;

    /**
	 * The cached value of the '{@@link #getPageWidth() <em>Page Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageWidth()
	 * @@generated
	 * @@ordered
	 */
	protected int pageWidth = PAGE_WIDTH_EDEFAULT;

    /**
	 * The default value of the '{@@link #getPageHeight() <em>Page Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageHeight()
	 * @@generated
	 * @@ordered
	 */
	protected static final int PAGE_HEIGHT_EDEFAULT = 100;

    /**
	 * The cached value of the '{@@link #getPageHeight() <em>Page Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageHeight()
	 * @@generated
	 * @@ordered
	 */
	protected int pageHeight = PAGE_HEIGHT_EDEFAULT;

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PageStyleImpl() {
		super();
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return NotationPackage.Literals.PAGE_STYLE;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getPageX() {
		return pageX;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPageX(int newPageX) {
		int oldPageX = pageX;
		pageX = newPageX;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_X, oldPageX, pageX));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getPageY() {
		return pageY;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPageY(int newPageY) {
		int oldPageY = pageY;
		pageY = newPageY;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_Y, oldPageY, pageY));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getPageWidth() {
		return pageWidth;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPageWidth(int newPageWidth) {
		int oldPageWidth = pageWidth;
		pageWidth = newPageWidth;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_WIDTH, oldPageWidth, pageWidth));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getPageHeight() {
		return pageHeight;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPageHeight(int newPageHeight) {
		int oldPageHeight = pageHeight;
		pageHeight = newPageHeight;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_HEIGHT, oldPageHeight, pageHeight));
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				return new Integer(getPageX());
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				return new Integer(getPageY());
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				return new Integer(getPageWidth());
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				return new Integer(getPageHeight());
		}
		return eDynamicGet(featureID, resolve, coreType);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				setPageX(((Integer)newValue).intValue());
				return;
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				setPageY(((Integer)newValue).intValue());
				return;
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				setPageWidth(((Integer)newValue).intValue());
				return;
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				setPageHeight(((Integer)newValue).intValue());
				return;
		}
		eDynamicSet(featureID, newValue);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public void eUnset(int featureID) {
		switch (featureID) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				setPageX(PAGE_X_EDEFAULT);
				return;
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				setPageY(PAGE_Y_EDEFAULT);
				return;
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				setPageWidth(PAGE_WIDTH_EDEFAULT);
				return;
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				setPageHeight(PAGE_HEIGHT_EDEFAULT);
				return;
		}
		eDynamicUnset(featureID);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public boolean eIsSet(int featureID) {
		switch (featureID) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				return pageX != PAGE_X_EDEFAULT;
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				return pageY != PAGE_Y_EDEFAULT;
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				return pageWidth != PAGE_WIDTH_EDEFAULT;
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				return pageHeight != PAGE_HEIGHT_EDEFAULT;
		}
		return eDynamicIsSet(featureID);
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (pageX: "); //$NON-NLS-1$
		result.append(pageX);
		result.append(", pageY: "); //$NON-NLS-1$
		result.append(pageY);
		result.append(", pageWidth: "); //$NON-NLS-1$
		result.append(pageWidth);
		result.append(", pageHeight: "); //$NON-NLS-1$
		result.append(pageHeight);
		result.append(')');
		return result.toString();
	}

} //PageStyleImpl
@


1.6
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@d39 1
a39 1
public class PageStyleImpl extends NotationObjectImpl implements PageStyle {
a228 2
			case NotationPackage.PAGE_STYLE__UUID:
				return getUUID();
a247 3
			case NotationPackage.PAGE_STYLE__UUID:
				setUUID((byte[])newValue);
				return;
a270 3
			case NotationPackage.PAGE_STYLE__UUID:
				setUUID(UUID_EDEFAULT);
				return;
a293 2
			case NotationPackage.PAGE_STYLE__UUID:
				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
@


1.5
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@a16 1
import org.eclipse.emf.ecore.impl.FlatEObjectImpl;
d39 1
a39 1
public class PageStyleImpl extends FlatEObjectImpl implements PageStyle {
d229 2
d250 3
d276 3
d302 2
@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d42 2
a43 2
     * The default value of the '{@@link #getPageX() <em>Page X</em>}' attribute.
     * <!-- begin-user-doc -->
d45 4
a48 4
     * @@see #getPageX()
     * @@generated
     * @@ordered
     */
d52 2
a53 2
     * The cached value of the '{@@link #getPageX() <em>Page X</em>}' attribute.
     * <!-- begin-user-doc -->
d55 4
a58 4
     * @@see #getPageX()
     * @@generated
     * @@ordered
     */
d62 2
a63 2
     * The default value of the '{@@link #getPageY() <em>Page Y</em>}' attribute.
     * <!-- begin-user-doc -->
d65 4
a68 4
     * @@see #getPageY()
     * @@generated
     * @@ordered
     */
d72 2
a73 2
     * The cached value of the '{@@link #getPageY() <em>Page Y</em>}' attribute.
     * <!-- begin-user-doc -->
d75 4
a78 4
     * @@see #getPageY()
     * @@generated
     * @@ordered
     */
d82 2
a83 2
     * The default value of the '{@@link #getPageWidth() <em>Page Width</em>}' attribute.
     * <!-- begin-user-doc -->
d85 4
a88 4
     * @@see #getPageWidth()
     * @@generated
     * @@ordered
     */
d92 2
a93 2
     * The cached value of the '{@@link #getPageWidth() <em>Page Width</em>}' attribute.
     * <!-- begin-user-doc -->
d95 4
a98 4
     * @@see #getPageWidth()
     * @@generated
     * @@ordered
     */
d102 2
a103 2
     * The default value of the '{@@link #getPageHeight() <em>Page Height</em>}' attribute.
     * <!-- begin-user-doc -->
d105 4
a108 4
     * @@see #getPageHeight()
     * @@generated
     * @@ordered
     */
d112 2
a113 2
     * The cached value of the '{@@link #getPageHeight() <em>Page Height</em>}' attribute.
     * <!-- begin-user-doc -->
d115 4
a118 4
     * @@see #getPageHeight()
     * @@generated
     * @@ordered
     */
d122 1
a122 1
     * <!-- begin-user-doc -->
d124 2
a125 2
     * @@generated
     */
d127 2
a128 2
        super();
    }
d131 1
a131 1
     * <!-- begin-user-doc -->
d133 2
a134 2
     * @@generated
     */
d136 2
a137 2
        return NotationPackage.Literals.PAGE_STYLE;
    }
d140 1
a140 1
     * <!-- begin-user-doc -->
d142 2
a143 2
     * @@generated
     */
d145 2
a146 2
        return pageX;
    }
d149 1
a149 1
     * <!-- begin-user-doc -->
d151 2
a152 2
     * @@generated
     */
d154 5
a158 5
        int oldPageX = pageX;
        pageX = newPageX;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_X, oldPageX, pageX));
    }
d161 1
a161 1
     * <!-- begin-user-doc -->
d163 2
a164 2
     * @@generated
     */
d166 2
a167 2
        return pageY;
    }
d170 1
a170 1
     * <!-- begin-user-doc -->
d172 2
a173 2
     * @@generated
     */
d175 5
a179 5
        int oldPageY = pageY;
        pageY = newPageY;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_Y, oldPageY, pageY));
    }
d182 1
a182 1
     * <!-- begin-user-doc -->
d184 2
a185 2
     * @@generated
     */
d187 2
a188 2
        return pageWidth;
    }
d191 1
a191 1
     * <!-- begin-user-doc -->
d193 2
a194 2
     * @@generated
     */
d196 5
a200 5
        int oldPageWidth = pageWidth;
        pageWidth = newPageWidth;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_WIDTH, oldPageWidth, pageWidth));
    }
d203 1
a203 1
     * <!-- begin-user-doc -->
d205 2
a206 2
     * @@generated
     */
d208 2
a209 2
        return pageHeight;
    }
d212 1
a212 1
     * <!-- begin-user-doc -->
d214 2
a215 2
     * @@generated
     */
d217 5
a221 5
        int oldPageHeight = pageHeight;
        pageHeight = newPageHeight;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_HEIGHT, oldPageHeight, pageHeight));
    }
d224 1
a224 1
     * <!-- begin-user-doc -->
d226 2
a227 2
     * @@generated
     */
d229 12
a240 12
        switch (featureID) {
            case NotationPackage.PAGE_STYLE__PAGE_X:
                return new Integer(getPageX());
            case NotationPackage.PAGE_STYLE__PAGE_Y:
                return new Integer(getPageY());
            case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
                return new Integer(getPageWidth());
            case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
                return new Integer(getPageHeight());
        }
        return eDynamicGet(featureID, resolve, coreType);
    }
d243 1
a243 1
     * <!-- begin-user-doc -->
d245 2
a246 2
     * @@generated
     */
d248 16
a263 16
        switch (featureID) {
            case NotationPackage.PAGE_STYLE__PAGE_X:
                setPageX(((Integer)newValue).intValue());
                return;
            case NotationPackage.PAGE_STYLE__PAGE_Y:
                setPageY(((Integer)newValue).intValue());
                return;
            case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
                setPageWidth(((Integer)newValue).intValue());
                return;
            case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
                setPageHeight(((Integer)newValue).intValue());
                return;
        }
        eDynamicSet(featureID, newValue);
    }
d266 1
a266 1
     * <!-- begin-user-doc -->
d268 2
a269 2
     * @@generated
     */
d271 16
a286 16
        switch (featureID) {
            case NotationPackage.PAGE_STYLE__PAGE_X:
                setPageX(PAGE_X_EDEFAULT);
                return;
            case NotationPackage.PAGE_STYLE__PAGE_Y:
                setPageY(PAGE_Y_EDEFAULT);
                return;
            case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
                setPageWidth(PAGE_WIDTH_EDEFAULT);
                return;
            case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
                setPageHeight(PAGE_HEIGHT_EDEFAULT);
                return;
        }
        eDynamicUnset(featureID);
    }
d289 1
a289 1
     * <!-- begin-user-doc -->
d291 2
a292 2
     * @@generated
     */
d294 12
a305 12
        switch (featureID) {
            case NotationPackage.PAGE_STYLE__PAGE_X:
                return pageX != PAGE_X_EDEFAULT;
            case NotationPackage.PAGE_STYLE__PAGE_Y:
                return pageY != PAGE_Y_EDEFAULT;
            case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
                return pageWidth != PAGE_WIDTH_EDEFAULT;
            case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
                return pageHeight != PAGE_HEIGHT_EDEFAULT;
        }
        return eDynamicIsSet(featureID);
    }
d308 1
a308 1
     * <!-- begin-user-doc -->
d310 2
a311 2
     * @@generated
     */
d313 1
a313 1
        if (eIsProxy()) return super.toString();
d315 12
a326 12
        StringBuffer result = new StringBuffer(super.toString());
        result.append(" (pageX: "); //$NON-NLS-1$
        result.append(pageX);
        result.append(", pageY: "); //$NON-NLS-1$
        result.append(pageY);
        result.append(", pageWidth: "); //$NON-NLS-1$
        result.append(pageWidth);
        result.append(", pageHeight: "); //$NON-NLS-1$
        result.append(pageHeight);
        result.append(')');
        return result.toString();
    }
@


1.3
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d17 1
a17 1
import org.eclipse.emf.ecore.impl.EObjectImpl;
d40 1
a40 1
public class PageStyleImpl extends EObjectImpl implements PageStyle {
d239 1
a239 1
        return super.eGet(featureID, resolve, coreType);
d262 1
a262 1
        super.eSet(featureID, newValue);
d285 1
a285 1
        super.eUnset(featureID);
d304 1
a304 1
        return super.eIsSet(featureID);
@


1.3.2.1
log
@[141061] gmf_r1_0_maintenance ylulu 060717 Performance: Notation metamodel can reduce its memory usage
@
text
@d17 1
a17 1
import org.eclipse.emf.ecore.impl.FlatEObjectImpl;
d40 1
a40 1
public class PageStyleImpl extends FlatEObjectImpl implements PageStyle {
d239 1
a239 1
        return eDynamicGet(featureID, resolve, coreType);
d262 1
a262 1
        eDynamicSet(featureID, newValue);
d285 1
a285 1
        eDynamicUnset(featureID);
d304 1
a304 1
        return eDynamicIsSet(featureID);
@


1.3.2.2
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a15 1
import org.eclipse.emf.ecore.EStructuralFeature;
a17 1

d41 8
a48 8
	/**
	 * The default value of the '{@@link #getPageX() <em>Page X</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageX()
	 * @@generated
	 * @@ordered
	 */
d51 8
a58 8
	/**
	 * The cached value of the '{@@link #getPageX() <em>Page X</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageX()
	 * @@generated
	 * @@ordered
	 */
d61 8
a68 8
	/**
	 * The default value of the '{@@link #getPageY() <em>Page Y</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageY()
	 * @@generated
	 * @@ordered
	 */
d71 8
a78 8
	/**
	 * The cached value of the '{@@link #getPageY() <em>Page Y</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageY()
	 * @@generated
	 * @@ordered
	 */
d81 8
a88 8
	/**
	 * The default value of the '{@@link #getPageWidth() <em>Page Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageWidth()
	 * @@generated
	 * @@ordered
	 */
d91 8
a98 8
	/**
	 * The cached value of the '{@@link #getPageWidth() <em>Page Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageWidth()
	 * @@generated
	 * @@ordered
	 */
d101 8
a108 8
	/**
	 * The default value of the '{@@link #getPageHeight() <em>Page Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageHeight()
	 * @@generated
	 * @@ordered
	 */
d111 8
a118 8
	/**
	 * The cached value of the '{@@link #getPageHeight() <em>Page Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPageHeight()
	 * @@generated
	 * @@ordered
	 */
d121 2
a122 2
	/**
	 * <!-- begin-user-doc -->
d124 2
a125 2
	 * @@generated
	 */
d127 2
a128 2
		super();
	}
d130 2
a131 2
	/**
	 * <!-- begin-user-doc -->
d133 2
a134 2
	 * @@generated
	 */
d136 2
a137 2
		return NotationPackage.eINSTANCE.getPageStyle();
	}
d139 2
a140 2
	/**
	 * <!-- begin-user-doc -->
d142 2
a143 2
	 * @@generated
	 */
d145 2
a146 2
		return pageX;
	}
d148 2
a149 2
	/**
	 * <!-- begin-user-doc -->
d151 2
a152 2
	 * @@generated
	 */
d154 5
a158 5
		int oldPageX = pageX;
		pageX = newPageX;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_X, oldPageX, pageX));
	}
d160 2
a161 2
	/**
	 * <!-- begin-user-doc -->
d163 2
a164 2
	 * @@generated
	 */
d166 2
a167 2
		return pageY;
	}
d169 2
a170 2
	/**
	 * <!-- begin-user-doc -->
d172 2
a173 2
	 * @@generated
	 */
d175 5
a179 5
		int oldPageY = pageY;
		pageY = newPageY;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_Y, oldPageY, pageY));
	}
d181 2
a182 2
	/**
	 * <!-- begin-user-doc -->
d184 2
a185 2
	 * @@generated
	 */
d187 2
a188 2
		return pageWidth;
	}
d190 2
a191 2
	/**
	 * <!-- begin-user-doc -->
d193 2
a194 2
	 * @@generated
	 */
d196 5
a200 5
		int oldPageWidth = pageWidth;
		pageWidth = newPageWidth;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_WIDTH, oldPageWidth, pageWidth));
	}
d202 2
a203 2
	/**
	 * <!-- begin-user-doc -->
d205 2
a206 2
	 * @@generated
	 */
d208 2
a209 2
		return pageHeight;
	}
d211 2
a212 2
	/**
	 * <!-- begin-user-doc -->
d214 2
a215 2
	 * @@generated
	 */
d217 89
a305 89
		int oldPageHeight = pageHeight;
		pageHeight = newPageHeight;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.PAGE_STYLE__PAGE_HEIGHT, oldPageHeight, pageHeight));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				return new Integer(getPageX());
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				return new Integer(getPageY());
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				return new Integer(getPageWidth());
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				return new Integer(getPageHeight());
		}
		return eDynamicGet(eFeature, resolve);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				setPageX(((Integer)newValue).intValue());
				return;
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				setPageY(((Integer)newValue).intValue());
				return;
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				setPageWidth(((Integer)newValue).intValue());
				return;
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				setPageHeight(((Integer)newValue).intValue());
				return;
		}
		eDynamicSet(eFeature, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				setPageX(PAGE_X_EDEFAULT);
				return;
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				setPageY(PAGE_Y_EDEFAULT);
				return;
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				setPageWidth(PAGE_WIDTH_EDEFAULT);
				return;
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				setPageHeight(PAGE_HEIGHT_EDEFAULT);
				return;
		}
		eDynamicUnset(eFeature);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.PAGE_STYLE__PAGE_X:
				return pageX != PAGE_X_EDEFAULT;
			case NotationPackage.PAGE_STYLE__PAGE_Y:
				return pageY != PAGE_Y_EDEFAULT;
			case NotationPackage.PAGE_STYLE__PAGE_WIDTH:
				return pageWidth != PAGE_WIDTH_EDEFAULT;
			case NotationPackage.PAGE_STYLE__PAGE_HEIGHT:
				return pageHeight != PAGE_HEIGHT_EDEFAULT;
		}
		return eDynamicIsSet(eFeature);
	}
d307 2
a308 2
	/**
	 * <!-- begin-user-doc -->
d310 2
a311 2
	 * @@generated
	 */
d313 1
a313 1
		if (eIsProxy()) return super.toString();
d315 12
a326 12
		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (pageX: "); //$NON-NLS-1$
		result.append(pageX);
		result.append(", pageY: "); //$NON-NLS-1$
		result.append(pageY);
		result.append(", pageWidth: "); //$NON-NLS-1$
		result.append(pageWidth);
		result.append(", pageHeight: "); //$NON-NLS-1$
		result.append(pageHeight);
		result.append(')');
		return result.toString();
	}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

