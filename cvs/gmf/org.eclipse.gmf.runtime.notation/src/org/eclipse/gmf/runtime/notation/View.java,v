head	1.9;
access;
symbols
	v20081020-0700:1.9
	v20080722-1827:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080507-1326:1.9
	v20080503-1740:1.8
	v20080425-1959:1.7
	v20080407-2250:1.7
	v20080407-1545:1.7
	v20080331-1625:1.7
	v20080328-1605:1.7
	v20080222-1200:1.7
	v20080215-1500:1.7
	v20080114-2222:1.7
	v20071130-1111:1.7
	v20071124-0000:1.7
	v20071112-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070518-1300:1.7
	v20070403-1500:1.6
	v20070330-1300:1.6
	M4_20:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061013-1330:1.6
	v20060919-0800:1.5.2.1
	M1_20:1.5
	v20060728-0500:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060519-0800:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.9
date	2008.05.07.00.14.42;	author ahunter;	state Exp;
branches;
next	1.8;
commitid	3e924820f4604567;

1.8
date	2008.05.03.18.33.03;	author ahunter;	state Exp;
branches;
next	1.7;
commitid	1c13481cafcc4567;

1.7
date	2007.05.17.16.26.50;	author aboyko;	state Exp;
branches;
next	1.6;
commitid	71d9464c82444567;

1.6
date	2006.10.03.15.07.27;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.07.15.22.13;	author mmostafa;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2006.02.01.19.03.50;	author mmostafa;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.14.19.22.01;	author mmostafa;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.42;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.27;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.09.13.16.48.17;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.9
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EModelElement;
import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>View</b></em>'.
 * <p>
 * The views are the central abstraction in a notation model. View objects reference a business 
 * model and contain other notation objects that together hold all the properties needed to 
 * visualize that business model. The reason the view object does not have all the properties 
 * itself but rather delegates to other abstractions is to allow for easy extension of properties.
 * </p>
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#isVisible <em>Visible</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getType <em>Type</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#isMutable <em>Mutable</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getSourceEdges <em>Source Edges</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getTargetEdges <em>Target Edges</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getPersistedChildren <em>Persisted Children</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getStyles <em>Styles</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getDiagram <em>Diagram</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.View#getTransientChildren <em>Transient Children</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView()
 * @@model abstract="true"
 * @@generated
 */
/*
 * @@canBeSeenBy %partners
 */
public interface View extends EModelElement {
    /**
	 * Returns the value of the '<em><b>Visible</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Visible</em>' attribute.
	 * @@see #setVisible(boolean)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Visible()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isVisible();

    /**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#isVisible <em>Visible</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Visible</em>' attribute.
	 * @@see #isVisible()
	 * @@generated
	 */
	void setVisible(boolean value);

    /**
	 * Returns the value of the '<em><b>Type</b></em>' attribute.
	 * The default value is <code>""</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The view's type is a context-defined unique string representing the kind of the view. 
	 * It is usually used if the view is a subview or if it is a top level view that does
	 * not have a business model  
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Type</em>' attribute.
	 * @@see #setType(String)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Type()
	 * @@model default=""
	 * @@generated
	 */
	String getType();

    /**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getType <em>Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The view's type is a context-defined unique string representing the kind of the view. 
	 * It is usually used if the view is a subview or if it is a top level view that does
	 * not have a business model  
	 * </p>
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Type</em>' attribute.
	 * @@see #getType()
	 * @@generated
	 */
	void setType(String value);

    /**
	 * Returns the value of the '<em><b>Mutable</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Mutable</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Mutable</em>' attribute.
	 * @@see #setMutable(boolean)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Mutable()
	 * @@model default="false" transient="true"
	 * @@generated
	 */
	boolean isMutable();

    /**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#isMutable <em>Mutable</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Mutable</em>' attribute.
	 * @@see #isMutable()
	 * @@generated
	 */
	void setMutable(boolean value);

    /**
	 * Returns the value of the '<em><b>Source Edges</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Edge}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.runtime.notation.Edge#getSource <em>Source</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The property is a list of zero or more outgoing edges from the view
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Source Edges</em>' reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_SourceEdges()
	 * @@see org.eclipse.gmf.runtime.notation.Edge#getSource
	 * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="source" resolveProxies="false" transient="true"
	 * @@generated
	 */
	EList getSourceEdges();

    /**
	 * Returns the value of the '<em><b>Target Edges</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Edge}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.runtime.notation.Edge#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The property is a list of zero or more incoming edges to the view
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Target Edges</em>' reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_TargetEdges()
	 * @@see org.eclipse.gmf.runtime.notation.Edge#getTarget
	 * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="target" resolveProxies="false" transient="true"
	 * @@generated
	 */
	EList getTargetEdges();

    /**
	 * Returns the value of the '<em><b>Persisted Children</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Node}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Persisted Children</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Persisted Children</em>' containment reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_PersistedChildren()
	 * @@model type="org.eclipse.gmf.runtime.notation.Node" containment="true"
	 * @@generated
	 */
	EList getPersistedChildren();

	/**
	 * Returns the value of the '<em><b>Children</b></em>'list.
	 * the returned list is an <em><b>Unmodifable</b></em> list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.View}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Children</em>' list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Children()
	 */
	EList getChildren();
	
	/**
	 * Returns an <em><b>Unmodifable</b></em> list that contains all the 
	 * visible children in the Children list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.View}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return <em><b>Unmodifable</b></em> list of Visible children
	 */
	EList getVisibleChildren();

    /**
	 * Returns the value of the '<em><b>Styles</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Style}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The list contains unique instances of these styles
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Styles</em>' containment reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Styles()
	 * @@model type="org.eclipse.gmf.runtime.notation.Style" containment="true"
	 * @@generated
	 */
	EList getStyles();

    /**
	 * Returns the value of the '<em><b>Element</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * This is The referenced business model element
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Element</em>' reference.
	 * @@see #isSetElement()
	 * @@see #unsetElement()
	 * @@see #setElement(EObject)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Element()
	 * @@model unsettable="true"
	 * @@generated
	 */
	EObject getElement();

    /**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * This is The referenced business model element
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Element</em>' reference.
	 * @@see #isSetElement()
	 * @@see #unsetElement()
	 * @@see #getElement()
	 * @@generated
	 */
	void setElement(EObject value);

    /**
	 * Unsets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSetElement()
	 * @@see #getElement()
	 * @@see #setElement(EObject)
	 * @@generated
	 */
	void unsetElement();

				/**
	 * Returns whether the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return whether the value of the '<em>Element</em>' reference is set.
	 * @@see #unsetElement()
	 * @@see #getElement()
	 * @@see #setElement(EObject)
	 * @@generated
	 */
	boolean isSetElement();

				/**
	 * Returns the value of the '<em><b>Diagram</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * The diagram is the top level container of this view
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram</em>' reference.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Diagram()
	 * @@model required="true" transient="true" changeable="false" volatile="true"
	 * @@generated
	 */
	Diagram getDiagram();

    /**
	 * Returns the value of the '<em><b>Transient Children</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Node}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Transient Children</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Transient Children</em>' containment reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_TransientChildren()
	 * @@model type="org.eclipse.gmf.runtime.notation.Node" containment="true" transient="true"
	 * @@generated
	 */
	EList getTransientChildren();

    /**
	 * <!-- begin-user-doc -->
	 * <p>
	 * Looks up a style in the view's collection of styles that extends/implements
	 * the given <code>EClass</code>. Thefore the returned style instance is not guaranteed
	 * to be unique for different <code>EClass</code>es 
	 * </p>
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	Style getStyle(EClass eClass);

    /**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to create a new <code>Node</code> from the given <code>eClass</code> paramter
	 * and then inserts the object in the view's </em>Children</em> collection
	 * </p>
	 * 
	 * @@param eClass the <code>EClass</code> to be used in creating the <code>Node</code> object
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	Node createChild(EClass eClass);

    /**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to create a new <code>Style</code> from the given <code>eClass</code> paramter
	 * and then inserts the object in the view's </em>Styles</em> collection
	 * </p>
	 * 
	 * @@param eClass the <code>EClass</code> to be used in creating the <code>Style</code> object
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	Style createStyle(EClass eClass);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	NamedStyle getNamedStyle(EClass eClass, String name);

	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to persist all view's children
	 * </p>
	 * <!-- end-user-doc -->
	 */
	void persistChildren();
	
	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to persist the view, it will do nothing if the view is alrady peristed
	 * </p>
	 * <!-- end-user-doc -->
	 */
	void persist();
	
	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to insert a persisted child
	 * </p>
	 * @@param child the '<em>View</em>' to insert.
	 * <!-- end-user-doc -->
	 */
	void insertChild(View child);
	
	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to insert a persisted child at a specific index
	 * </p>
	 * @@param child the '<em>View</em>' to insert.
	 * @@param the index of the child
	 * <!-- end-user-doc -->
	 */
	void insertChildAt(View child, int index);
	
	
	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to insert a persisted or transient child
	 * </p>
	 * @@param child the '<em>View</em>' to insert.
	 * @@param persisted, indicate if the view will be persisted or not
	 * <!-- end-user-doc -->
	 */
	void insertChild(View child,boolean persisted);
	
	/**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utililty method to remove a child form a view
	 * </p>
	 * @@param child the '<em>View</em>' to remove
	 * <!-- end-user-doc -->
	 */
	void removeChild(View child);
} // View
@


1.8
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@d53 1
a53 1
public interface View extends EModelElement, NotationObject {
@


1.7
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@d53 1
a53 1
public interface View extends EModelElement {
@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d55 10
a64 10
     * Returns the value of the '<em><b>Visible</b></em>' attribute.
     * The default value is <code>"true"</code>.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @@return the value of the '<em>Visible</em>' attribute.
     * @@see #setVisible(boolean)
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Visible()
     * @@model default="true"
     * @@generated
     */
d68 2
a69 2
     * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#isVisible <em>Visible</em>}' attribute.
     * <!-- begin-user-doc -->
d71 4
a74 4
     * @@param value the new value of the '<em>Visible</em>' attribute.
     * @@see #isVisible()
     * @@generated
     */
d78 3
a80 3
     * Returns the value of the '<em><b>Type</b></em>' attribute.
     * The default value is <code>""</code>.
     * <!-- begin-user-doc -->
d87 6
a92 6
     * @@return the value of the '<em>Type</em>' attribute.
     * @@see #setType(String)
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Type()
     * @@model default=""
     * @@generated
     */
d96 2
a97 2
     * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getType <em>Type</em>}' attribute.
     * <!-- begin-user-doc -->
d104 4
a107 4
     * @@param value the new value of the '<em>Type</em>' attribute.
     * @@see #getType()
     * @@generated
     */
d111 3
a113 3
     * Returns the value of the '<em><b>Mutable</b></em>' attribute.
     * The default value is <code>"false"</code>.
     * <!-- begin-user-doc -->
d119 6
a124 6
     * @@return the value of the '<em>Mutable</em>' attribute.
     * @@see #setMutable(boolean)
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Mutable()
     * @@model default="false" transient="true"
     * @@generated
     */
d128 2
a129 2
     * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#isMutable <em>Mutable</em>}' attribute.
     * <!-- begin-user-doc -->
d131 4
a134 4
     * @@param value the new value of the '<em>Mutable</em>' attribute.
     * @@see #isMutable()
     * @@generated
     */
d138 4
a141 4
     * Returns the value of the '<em><b>Source Edges</b></em>' reference list.
     * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Edge}.
     * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.runtime.notation.Edge#getSource <em>Source</em>}'.
     * <!-- begin-user-doc -->
d146 6
a151 6
     * @@return the value of the '<em>Source Edges</em>' reference list.
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_SourceEdges()
     * @@see org.eclipse.gmf.runtime.notation.Edge#getSource
     * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="source" resolveProxies="false" transient="true"
     * @@generated
     */
d155 4
a158 4
     * Returns the value of the '<em><b>Target Edges</b></em>' reference list.
     * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Edge}.
     * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.runtime.notation.Edge#getTarget <em>Target</em>}'.
     * <!-- begin-user-doc -->
d163 6
a168 6
     * @@return the value of the '<em>Target Edges</em>' reference list.
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_TargetEdges()
     * @@see org.eclipse.gmf.runtime.notation.Edge#getTarget
     * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="target" resolveProxies="false" transient="true"
     * @@generated
     */
d172 3
a174 3
     * Returns the value of the '<em><b>Persisted Children</b></em>' containment reference list.
     * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Node}.
     * <!-- begin-user-doc -->
d180 5
a184 5
     * @@return the value of the '<em>Persisted Children</em>' containment reference list.
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_PersistedChildren()
     * @@model type="org.eclipse.gmf.runtime.notation.Node" containment="true"
     * @@generated
     */
d209 3
a211 3
     * Returns the value of the '<em><b>Styles</b></em>' containment reference list.
     * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Style}.
     * <!-- begin-user-doc -->
d216 5
a220 5
     * @@return the value of the '<em>Styles</em>' containment reference list.
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Styles()
     * @@model type="org.eclipse.gmf.runtime.notation.Style" containment="true"
     * @@generated
     */
d224 2
a225 2
     * Returns the value of the '<em><b>Element</b></em>' reference.
     * <!-- begin-user-doc -->
d230 8
a237 8
     * @@return the value of the '<em>Element</em>' reference.
     * @@see #isSetElement()
     * @@see #unsetElement()
     * @@see #setElement(EObject)
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Element()
     * @@model unsettable="true"
     * @@generated
     */
d241 2
a242 2
     * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference.
     * <!-- begin-user-doc -->
d245 6
a250 6
     * @@param value the new value of the '<em>Element</em>' reference.
     * @@see #isSetElement()
     * @@see #unsetElement()
     * @@see #getElement()
     * @@generated
     */
d254 2
a255 2
     * Unsets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference.
     * <!-- begin-user-doc -->
d257 5
a261 5
     * @@see #isSetElement()
     * @@see #getElement()
     * @@see #setElement(EObject)
     * @@generated
     */
d264 3
a266 3
    /**
     * Returns whether the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference is set.
     * <!-- begin-user-doc -->
d268 6
a273 6
     * @@return whether the value of the '<em>Element</em>' reference is set.
     * @@see #unsetElement()
     * @@see #getElement()
     * @@see #setElement(EObject)
     * @@generated
     */
d276 3
a278 3
    /**
     * Returns the value of the '<em><b>Diagram</b></em>' reference.
     * <!-- begin-user-doc -->
d283 5
a287 5
     * @@return the value of the '<em>Diagram</em>' reference.
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Diagram()
     * @@model required="true" transient="true" changeable="false" volatile="true"
     * @@generated
     */
d291 3
a293 3
     * Returns the value of the '<em><b>Transient Children</b></em>' containment reference list.
     * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Node}.
     * <!-- begin-user-doc -->
d299 5
a303 5
     * @@return the value of the '<em>Transient Children</em>' containment reference list.
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_TransientChildren()
     * @@model type="org.eclipse.gmf.runtime.notation.Node" containment="true" transient="true"
     * @@generated
     */
d307 1
a307 1
     * <!-- begin-user-doc -->
d314 3
a316 3
     * @@model
     * @@generated
     */
d320 1
a320 1
     * <!-- begin-user-doc -->
d328 3
a330 3
     * @@model
     * @@generated
     */
d334 1
a334 1
     * <!-- begin-user-doc -->
d342 3
a344 3
     * @@model
     * @@generated
     */
d349 8
@


1.5
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.5.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.4
log
@bugzilla 117592 gmf-head mmostafa 060201 CanonicalConnectionEditPolicy makes diagram dirty when creating edge if source is non-transient
@
text
@d53 12
a64 12
public interface View extends EModelElement{
	/**
	 * Returns the value of the '<em><b>Visible</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Visible</em>' attribute.
	 * @@see #setVisible(boolean)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Visible()
	 * @@model default="true"
	 * @@generated
	 */
d67 8
a74 8
	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#isVisible <em>Visible</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Visible</em>' attribute.
	 * @@see #isVisible()
	 * @@generated
	 */
d77 4
a80 4
	/**
	 * Returns the value of the '<em><b>Type</b></em>' attribute.
	 * The default value is <code>""</code>.
	 * <!-- begin-user-doc -->
d87 6
a92 6
	 * @@return the value of the '<em>Type</em>' attribute.
	 * @@see #setType(String)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Type()
	 * @@model default=""
	 * @@generated
	 */
d95 3
a97 3
	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getType <em>Type</em>}' attribute.
	 * <!-- begin-user-doc -->
d104 4
a107 4
	 * @@param value the new value of the '<em>Type</em>' attribute.
	 * @@see #getType()
	 * @@generated
	 */
d110 4
a113 4
	/**
	 * Returns the value of the '<em><b>Mutable</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
d119 6
a124 6
	 * @@return the value of the '<em>Mutable</em>' attribute.
	 * @@see #setMutable(boolean)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Mutable()
	 * @@model default="false" transient="true"
	 * @@generated
	 */
d127 8
a134 8
	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#isMutable <em>Mutable</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Mutable</em>' attribute.
	 * @@see #isMutable()
	 * @@generated
	 */
d137 5
a141 5
	/**
	 * Returns the value of the '<em><b>Source Edges</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Edge}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.runtime.notation.Edge#getSource <em>Source</em>}'.
	 * <!-- begin-user-doc -->
d146 6
a151 6
	 * @@return the value of the '<em>Source Edges</em>' reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_SourceEdges()
	 * @@see org.eclipse.gmf.runtime.notation.Edge#getSource
	 * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="source" resolveProxies="false" transient="true"
	 * @@generated
	 */
d154 5
a158 5
	/**
	 * Returns the value of the '<em><b>Target Edges</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Edge}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.runtime.notation.Edge#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
d163 6
a168 6
	 * @@return the value of the '<em>Target Edges</em>' reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_TargetEdges()
	 * @@see org.eclipse.gmf.runtime.notation.Edge#getTarget
	 * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="target" resolveProxies="false" transient="true"
	 * @@generated
	 */
d171 4
a174 4
	/**
	 * Returns the value of the '<em><b>Persisted Children</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Node}.
	 * <!-- begin-user-doc -->
d180 5
a184 5
	 * @@return the value of the '<em>Persisted Children</em>' containment reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_PersistedChildren()
	 * @@model type="org.eclipse.gmf.runtime.notation.Node" containment="true"
	 * @@generated
	 */
d208 4
a211 4
	/**
	 * Returns the value of the '<em><b>Styles</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Style}.
	 * <!-- begin-user-doc -->
d216 5
a220 5
	 * @@return the value of the '<em>Styles</em>' containment reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Styles()
	 * @@model type="org.eclipse.gmf.runtime.notation.Style" containment="true"
	 * @@generated
	 */
d223 3
a225 3
	/**
	 * Returns the value of the '<em><b>Element</b></em>' reference.
	 * <!-- begin-user-doc -->
d230 8
a237 8
	 * @@return the value of the '<em>Element</em>' reference.
	 * @@see #isSetElement()
	 * @@see #unsetElement()
	 * @@see #setElement(EObject)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Element()
	 * @@model unsettable="true"
	 * @@generated
	 */
d240 3
a242 3
	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference.
	 * <!-- begin-user-doc -->
d245 6
a250 6
	 * @@param value the new value of the '<em>Element</em>' reference.
	 * @@see #isSetElement()
	 * @@see #unsetElement()
	 * @@see #getElement()
	 * @@generated
	 */
d253 9
a261 9
	/**
	 * Unsets the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isSetElement()
	 * @@see #getElement()
	 * @@see #setElement(EObject)
	 * @@generated
	 */
d264 10
a273 10
	/**
	 * Returns whether the value of the '{@@link org.eclipse.gmf.runtime.notation.View#getElement <em>Element</em>}' reference is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return whether the value of the '<em>Element</em>' reference is set.
	 * @@see #unsetElement()
	 * @@see #getElement()
	 * @@see #setElement(EObject)
	 * @@generated
	 */
d276 3
a278 3
	/**
	 * Returns the value of the '<em><b>Diagram</b></em>' reference.
	 * <!-- begin-user-doc -->
d283 5
a287 5
	 * @@return the value of the '<em>Diagram</em>' reference.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_Diagram()
	 * @@model required="true" transient="true" changeable="false" volatile="true"
	 * @@generated
	 */
d290 4
a293 4
	/**
	 * Returns the value of the '<em><b>Transient Children</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.runtime.notation.Node}.
	 * <!-- begin-user-doc -->
d299 5
a303 5
	 * @@return the value of the '<em>Transient Children</em>' containment reference list.
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getView_TransientChildren()
	 * @@model type="org.eclipse.gmf.runtime.notation.Node" containment="true" transient="true"
	 * @@generated
	 */
d306 2
a307 2
	/**
	 * <!-- begin-user-doc -->
d314 3
a316 3
	 * @@model
	 * @@generated
	 */
d319 2
a320 2
	/**
	 * <!-- begin-user-doc -->
d328 3
a330 3
	 * @@model
	 * @@generated
	 */
d333 2
a334 2
	/**
	 * <!-- begin-user-doc -->
d342 3
a344 3
	 * @@model
	 * @@generated
	 */
@


1.3
log
@111894  gmf-head mmostafa 051201 Improve memory consumption of opened notation diagram
@
text
@d149 1
a149 1
	 * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="source" resolveProxies="false"
d166 1
a166 1
	 * @@model type="org.eclipse.gmf.runtime.notation.Edge" opposite="target" resolveProxies="false"
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d197 10
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

