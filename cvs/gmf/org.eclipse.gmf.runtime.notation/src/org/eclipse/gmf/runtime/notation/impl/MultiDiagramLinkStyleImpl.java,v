head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080722-1827:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080507-1326:1.5
	v20080503-1740:1.4
	v20080425-1959:1.3
	v20080407-2250:1.3
	v20080407-1545:1.3
	v20080331-1625:1.3
	v20080328-1605:1.3
	v20080222-1200:1.3
	v20080215-1500:1.3
	v20080114-2222:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071112-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070518-1300:1.1;
locks; strict;
comment	@# @;


1.5
date	2008.05.07.00.14.41;	author ahunter;	state Exp;
branches;
next	1.4;
commitid	3e924820f4604567;

1.4
date	2008.05.03.18.33.03;	author ahunter;	state Exp;
branches;
next	1.3;
commitid	1c13481cafcc4567;

1.3
date	2007.06.18.16.42.48;	author ahunter;	state Exp;
branches;
next	1.2;
commitid	4c834676b6044567;

1.2
date	2007.05.22.19.10.13;	author aboyko;	state Exp;
branches;
next	1.1;
commitid	54bd465340144567;

1.1
date	2007.05.17.16.26.50;	author aboyko;	state Exp;
branches;
next	;
commitid	71d9464c82444567;


desc
@@


1.5
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
package org.eclipse.gmf.runtime.notation.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.util.EObjectEList;
import org.eclipse.gmf.runtime.notation.Diagram;
import org.eclipse.gmf.runtime.notation.MultiDiagramLinkStyle;
import org.eclipse.gmf.runtime.notation.NotationPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Multi Diagram Link Style</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.MultiDiagramLinkStyleImpl#getDiagramLinks <em>Diagram Links</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class MultiDiagramLinkStyleImpl extends NotationEObjectImpl implements MultiDiagramLinkStyle {
	/**
	 * The cached value of the '{@@link #getDiagramLinks() <em>Diagram Links</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramLinks()
	 * @@generated
	 * @@ordered
	 */
	protected EList diagramLinks;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected MultiDiagramLinkStyleImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return NotationPackage.Literals.MULTI_DIAGRAM_LINK_STYLE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList getDiagramLinks() {
		if (diagramLinks == null) {
			diagramLinks = new EObjectEList(Diagram.class, this, NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS);
		}
		return diagramLinks;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS:
				return getDiagramLinks();
		}
		return eDynamicGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS:
				getDiagramLinks().clear();
				getDiagramLinks().addAll((Collection)newValue);
				return;
		}
		eDynamicSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(int featureID) {
		switch (featureID) {
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS:
				getDiagramLinks().clear();
				return;
		}
		eDynamicUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS:
				return diagramLinks != null && !diagramLinks.isEmpty();
		}
		return eDynamicIsSet(featureID);
	}

} //MultiDiagramLinkStyleImpl
@


1.4
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@d37 1
a37 1
public class MultiDiagramLinkStyleImpl extends NotationObjectImpl implements MultiDiagramLinkStyle {
a84 2
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID:
				return getUUID();
a97 3
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID:
				setUUID((byte[])newValue);
				return;
a112 3
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID:
				setUUID(UUID_EDEFAULT);
				return;
a126 2
			case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID:
				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
@


1.3
log
@gmf_head ahunter 070617 Update Copyright for files changed in 2007 for GMF 2.0
@
text
@d15 1
a16 1

d18 1
a18 3

import org.eclipse.emf.ecore.impl.FlatEObjectImpl;

a19 2
import org.eclipse.emf.ecore.util.EObjectResolvingEList;

d37 1
a37 1
public class MultiDiagramLinkStyleImpl extends FlatEObjectImpl implements MultiDiagramLinkStyle {
d85 2
d100 3
d118 3
d135 2
@


1.2
log
@gmf_head aboyko 070522 diagramLinks should not resolve proxies automatically
@
text
@d1 6
a6 3
/**
 * <copyright>
 * </copyright>
d8 3
a10 2
 * $Id: MultiDiagramLinkStyleImpl.java,v 1.1 2007/05/17 16:26:50 aboyko Exp $
 */
@


1.1
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@d5 1
a5 1
 * $Id$
d17 1
d73 1
a73 1
			diagramLinks = new EObjectResolvingEList(Diagram.class, this, NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS);
@

