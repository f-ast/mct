head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080722-1827:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080507-1326:1.5
	v20080503-1740:1.5
	v20080425-1959:1.5
	v20080407-2250:1.5
	v20080407-1545:1.5
	v20080331-1625:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080114-2222:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	v20070403-1500:1.4
	v20070330-1300:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.3.2.1
	M1_20:1.3
	v20060728-0500:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	I20060505-1400:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.5
date	2007.05.17.16.26.50;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	71d9464c82444567;

1.4
date	2006.10.03.15.07.26;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.07.15.22.13;	author mmostafa;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.29.42;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.27;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.09.13.16.48.17;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation;


import org.eclipse.emf.ecore.EClass;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Node</b></em>'.
 * <p>
 * A node is a view that can composed and laid out in a container view.
 * </p>
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.Node#getLayoutConstraint <em>Layout Constraint</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getNode()
 * @@model
 * @@generated
 */
/*
 * @@canBeSeenBy %partners
 */
public interface Node extends View {
    /**
	 * Returns the value of the '<em><b>Layout Constraint</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * Layout constraints are used by layout managers to properly set the bounds of the node's visuals
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Layout Constraint</em>' containment reference.
	 * @@see #setLayoutConstraint(LayoutConstraint)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getNode_LayoutConstraint()
	 * @@model containment="true"
	 * @@generated
	 */
	LayoutConstraint getLayoutConstraint();

    /**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.Node#getLayoutConstraint <em>Layout Constraint</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * Layout constraints are used by layout managers to properly set the bounds of the node's visuals
	 * </p>
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Layout Constraint</em>' containment reference.
	 * @@see #getLayoutConstraint()
	 * @@generated
	 */
	void setLayoutConstraint(LayoutConstraint value);

    /**
	 * <!-- begin-user-doc -->
	 * <p>
	 * A utility method to create a <code>LayoutConstraint</code> object from the given <code>EClass</code>
	 * and then sets the node's <em>LayoutConstraint</em> property to the new object.
	 * </p>
	 * 
	 * @@param eClass the <code>EClass</code> to be used in creating the <code>LayoutConstraint</code> object
	 * <!-- end-user-doc -->
	 * @@model
	 * @@generated
	 */
	LayoutConstraint createLayoutConstraint(EClass eClass);

} // Node
@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d33 1
a33 1
 * @@model 
d41 2
a42 2
     * Returns the value of the '<em><b>Layout Constraint</b></em>' containment reference.
     * <!-- begin-user-doc -->
d47 6
a52 6
     * @@return the value of the '<em>Layout Constraint</em>' containment reference.
     * @@see #setLayoutConstraint(LayoutConstraint)
     * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getNode_LayoutConstraint()
     * @@model containment="true"
     * @@generated
     */
d56 2
a57 2
     * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.Node#getLayoutConstraint <em>Layout Constraint</em>}' containment reference.
     * <!-- begin-user-doc -->
d62 4
a65 4
     * @@param value the new value of the '<em>Layout Constraint</em>' containment reference.
     * @@see #getLayoutConstraint()
     * @@generated
     */
d69 1
a69 1
     * <!-- begin-user-doc -->
d77 3
a79 3
     * @@model
     * @@generated
     */
@


1.3
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.3.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d39 4
a42 4
public interface Node extends View{
	/**
	 * Returns the value of the '<em><b>Layout Constraint</b></em>' containment reference.
	 * <!-- begin-user-doc -->
d47 6
a52 6
	 * @@return the value of the '<em>Layout Constraint</em>' containment reference.
	 * @@see #setLayoutConstraint(LayoutConstraint)
	 * @@see org.eclipse.gmf.runtime.notation.NotationPackage#getNode_LayoutConstraint()
	 * @@model containment="true"
	 * @@generated
	 */
d55 3
a57 3
	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.runtime.notation.Node#getLayoutConstraint <em>Layout Constraint</em>}' containment reference.
	 * <!-- begin-user-doc -->
d62 4
a65 4
	 * @@param value the new value of the '<em>Layout Constraint</em>' containment reference.
	 * @@see #getLayoutConstraint()
	 * @@generated
	 */
d68 2
a69 2
	/**
	 * <!-- begin-user-doc -->
d77 3
a79 3
	 * @@model
	 * @@generated
	 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

